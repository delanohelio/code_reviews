{"pr_number": 5013, "pr_title": "FISH-858 Upgrade to Hazelcast 4.2 from 4.1 and use Tenant Control APIs", "pr_author": "lprimak", "pr_createdAt": "2020-11-28T06:15:04Z", "pr_url": "https://github.com/payara/Payara/pull/5013", "timeline": [{"oid": "45142e837f71a02f5d6b5d95581bb2bb4b2827c0", "url": "https://github.com/payara/Payara/commit/45142e837f71a02f5d6b5d95581bb2bb4b2827c0", "message": "introduce tenant control", "committedDate": "2020-12-03T22:09:58Z", "type": "forcePushed"}, {"oid": "b3b3527c7348e680292fcd3f9048886ca6a74288", "url": "https://github.com/payara/Payara/commit/b3b3527c7348e680292fcd3f9048886ca6a74288", "message": "introduce tenant control", "committedDate": "2020-12-05T05:59:31Z", "type": "forcePushed"}, {"oid": "9067d0736c4e167118c9d2db9382fdaa50cf9ea0", "url": "https://github.com/payara/Payara/commit/9067d0736c4e167118c9d2db9382fdaa50cf9ea0", "message": "introduce tenant control", "committedDate": "2020-12-08T23:31:54Z", "type": "commit"}, {"oid": "9067d0736c4e167118c9d2db9382fdaa50cf9ea0", "url": "https://github.com/payara/Payara/commit/9067d0736c4e167118c9d2db9382fdaa50cf9ea0", "message": "introduce tenant control", "committedDate": "2020-12-08T23:31:54Z", "type": "forcePushed"}, {"oid": "cea0fa5de4e4677a97624725ed18f4af6ffc9a1b", "url": "https://github.com/payara/Payara/commit/cea0fa5de4e4677a97624725ed18f4af6ffc9a1b", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2020-12-11T23:32:24Z", "type": "commit"}, {"oid": "e221517c0cb118a7597ba904efce255ab7f4d1c8", "url": "https://github.com/payara/Payara/commit/e221517c0cb118a7597ba904efce255ab7f4d1c8", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2020-12-17T15:42:54Z", "type": "commit"}, {"oid": "175f7d471cd075c455d29f20a67fc8cf6a03f6f0", "url": "https://github.com/payara/Payara/commit/175f7d471cd075c455d29f20a67fc8cf6a03f6f0", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2020-12-22T06:05:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2MzA1OQ==", "url": "https://github.com/payara/Payara/pull/5013#discussion_r547363059", "body": "```suggestion\r\n        if (!contextInstance.isLoaded()) {\r\n            return true;\r\n        }\r\n        if (!tenantable.requiresTenantContext() || tenantNotRequired(tenantable)) {\r\n            return true;\r\n        }\r\n        lock.lock();\r\n        try {\r\n            String componentId = contextInstance.getInstanceComponentId();\r\n            int unavailableCount = blockedCounts.compute(componentId, (k, v) -> v == null ? 0 : ++v);\r\n            log.log(unavailableCount > 100 ? Level.INFO : Level.FINEST,\r\n                    String.format(\"BLOCKED: tenant not available: %s, module %s, Operation: %s\",\r\n                            componentId, moduleName, tenantable.getClass().getName()));\r\n            if (unavailableCount > 100) {\r\n                blockedCounts.remove(componentId);\r\n            }\r\n            condition.await(100, TimeUnit.MILLISECONDS);\r\n        } catch (InterruptedException ex) {\r\n        } finally {\r\n            lock.unlock();\r\n        }\r\n        return false;        \r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!contextInstance.isLoaded()) {\n          \n          \n            \n                        if (!tenantable.requiresTenantContext() || tenantNotRequired(tenantable)) {\n          \n          \n            \n                            return true;\n          \n          \n            \n                        }\n          \n          \n            \n                        lock.lock();\n          \n          \n            \n                        try {\n          \n          \n            \n                            String componentId = contextInstance.getInstanceComponentId();\n          \n          \n            \n                            int unavailableCount = blockedCounts.compute(componentId, (k, v) -> v == null ? 0 : ++v);\n          \n          \n            \n                            log.log(unavailableCount > 100 ? Level.INFO : Level.FINEST,\n          \n          \n            \n                                    String.format(\"BLOCKED: tenant not available: %s, module %s, Operation: %s\",\n          \n          \n            \n                                            componentId, moduleName, tenantable.getClass().getName()));\n          \n          \n            \n                            if (unavailableCount > 100) {\n          \n          \n            \n                                blockedCounts.remove(componentId);\n          \n          \n            \n                            }\n          \n          \n            \n                            condition.await(100, TimeUnit.MILLISECONDS);\n          \n          \n            \n                        } catch (InterruptedException ex) {\n          \n          \n            \n                        } finally {\n          \n          \n            \n                            lock.unlock();\n          \n          \n            \n                        }\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return true;\n          \n          \n            \n                    if (!contextInstance.isLoaded()) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (!tenantable.requiresTenantContext() || tenantNotRequired(tenantable)) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    }\n          \n          \n            \n                    lock.lock();\n          \n          \n            \n                    try {\n          \n          \n            \n                        String componentId = contextInstance.getInstanceComponentId();\n          \n          \n            \n                        int unavailableCount = blockedCounts.compute(componentId, (k, v) -> v == null ? 0 : ++v);\n          \n          \n            \n                        log.log(unavailableCount > 100 ? Level.INFO : Level.FINEST,\n          \n          \n            \n                                String.format(\"BLOCKED: tenant not available: %s, module %s, Operation: %s\",\n          \n          \n            \n                                        componentId, moduleName, tenantable.getClass().getName()));\n          \n          \n            \n                        if (unavailableCount > 100) {\n          \n          \n            \n                            blockedCounts.remove(componentId);\n          \n          \n            \n                        }\n          \n          \n            \n                        condition.await(100, TimeUnit.MILLISECONDS);\n          \n          \n            \n                    } catch (InterruptedException ex) {\n          \n          \n            \n                    } finally {\n          \n          \n            \n                        lock.unlock();\n          \n          \n            \n                    }\n          \n          \n            \n                    return false;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>contextInstance<span class=\"pl-k\">.</span>isLoaded()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (</span><span class=\"pl-k x\">!</span><span class=\"x\">tenantable</span><span class=\"pl-k x\">.</span><span class=\"x\">requiresTenantContext() </span><span class=\"pl-k x\">||</span><span class=\"x x-last\"> tenantNotRequired(tenantable)) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">        </span><span class=\"pl-k x\">return</span><span class=\"x\"> </span><span class=\"pl-c1 x\">true</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">    }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">lock</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">lock()</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">    </span><span class=\"pl-k x\">try</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">        </span><span class=\"pl-smi x\">String</span><span class=\"x\"> componentId </span><span class=\"pl-k x\">=</span><span class=\"x\"> contextInstance</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getInstanceComponentId</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">        </span><span class=\"pl-k x\">int</span><span class=\"x\"> unavailableCount </span><span class=\"pl-k x\">=</span><span class=\"x\"> blockedCounts</span><span class=\"pl-k x\">.</span><span class=\"x\">compute(componentId, (k, v) </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> v </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-c1 x\">0</span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-k x\">++</span><span class=\"x x-last\">v);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">    log</span><span class=\"pl-k x\">.</span><span class=\"x\">log(unavailableCount </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">100</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-smi x\">Level</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">INFO</span></span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-smi x\">Level</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">FINEST</span></span><span class=\"x x-last\">,</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">            </span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">BLOCKED: tenant not available: %s, module %s, Operation: %s</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">,</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">                    componentId, moduleName, tenantable</span><span class=\"pl-k x\">.</span><span class=\"x\">getClass()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getName()));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (unavailableCount </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">100</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"x x-first\">blockedCounts</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">remove(componentId</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first x-last\">    }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"x x-first\">condition</span><span class=\"pl-k x\">.</span><span class=\"x\">await(</span><span class=\"pl-c1 x\">100</span><span class=\"x\">, </span><span class=\"pl-smi x\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">MILLISECONDS</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }<span class=\"x x-first\"> </span><span class=\"pl-k x\">catch</span><span class=\"x\"> (</span><span class=\"pl-smi x\">InterruptedException</span><span class=\"x x-last\"> ex) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">} </span><span class=\"pl-k x\">finally</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">        lock</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">unlock();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">    }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k x x-first\">return</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first\">true</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>contextInstance<span class=\"pl-k\">.</span>isLoaded()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">return</span><span class=\"x\"> </span><span class=\"pl-c1 x\">true</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (</span><span class=\"pl-k x\">!</span><span class=\"x\">tenantable</span><span class=\"pl-k x\">.</span><span class=\"x\">requiresTenantContext() </span><span class=\"pl-k x\">||</span><span class=\"x x-last\"> tenantNotRequired(tenantable)) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">return</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">lock</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">lock</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">try</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi x x-first\">String</span><span class=\"x\"> componentId </span><span class=\"pl-k x\">=</span><span class=\"x\"> contextInstance</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getInstanceComponentId();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">int</span><span class=\"x\"> unavailableCount </span><span class=\"pl-k x\">=</span><span class=\"x\"> blockedCounts</span><span class=\"pl-k x\">.</span><span class=\"x\">compute(componentId, (k, v) </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> v </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-c1 x\">0</span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-k x\">++</span><span class=\"x x-last\">v);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first\">log</span><span class=\"pl-k x\">.</span><span class=\"x\">log(unavailableCount </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">100</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x\"> </span><span class=\"pl-smi x\">Level</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">INFO</span></span><span class=\"x\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-smi x\">Level</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">FINEST</span></span><span class=\"x x-last\">,</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"x x-first\">    </span><span class=\"pl-smi x\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">format(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">BLOCKED: tenant not available: %s, module %s, Operation: %s</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">,</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"x x-first\">        componentId, moduleName, tenantable</span><span class=\"pl-k x\">.</span><span class=\"x\">getClass()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getName())</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (unavailableCount </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x\">100</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"x x-first\">blockedCounts</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">remove(componentId</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first\">condition</span><span class=\"pl-k x\">.</span><span class=\"x\">await(</span><span class=\"pl-c1 x\">100</span><span class=\"x\">, </span><span class=\"pl-smi x\">TimeUnit</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">MILLISECONDS</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">} </span><span class=\"pl-k x\">catch</span><span class=\"x\"> (</span><span class=\"pl-smi x\">InterruptedException</span><span class=\"x x-last\"> ex) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">} </span><span class=\"pl-k x\">finally</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first\">lock</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">unlock()</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first\">false</span><span class=\"x x-last\">;        </span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "MarkWareham", "createdAt": "2020-12-22T16:06:58Z", "path": "nucleus/payara-modules/hazelcast-bootstrap/src/main/java/fish/payara/nucleus/hazelcast/PayaraHazelcastTenant.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2016-2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.nucleus.hazelcast;\n+\n+import com.hazelcast.nio.ObjectDataInput;\n+import com.hazelcast.nio.ObjectDataOutput;\n+import com.hazelcast.nio.serialization.DataSerializable;\n+import com.hazelcast.spi.tenantcontrol.DestroyEventContext;\n+import com.hazelcast.spi.tenantcontrol.TenantControl;\n+import com.hazelcast.spi.tenantcontrol.Tenantable;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.glassfish.api.event.EventListener;\n+import org.glassfish.api.event.Events;\n+import org.glassfish.api.invocation.InvocationManager;\n+import org.glassfish.deployment.versioning.VersioningUtils;\n+import org.glassfish.internal.api.Globals;\n+import org.glassfish.internal.api.JavaEEContextUtil;\n+import org.glassfish.internal.data.ApplicationInfo;\n+import org.glassfish.internal.data.ModuleInfo;\n+import org.glassfish.internal.deployment.Deployment;\n+\n+/**\n+ * Java EE Context and class loading support for Hazelcast objects and thread-callbacks\n+ *\n+ * @author lprimak\n+ */\n+public class PayaraHazelcastTenant implements TenantControl, DataSerializable {\n+    private final JavaEEContextUtil ctxUtil = Globals.getDefaultHabitat().getService(JavaEEContextUtil.class);\n+    private final Events events = Globals.getDefaultHabitat().getService(Events.class);\n+    private final InvocationManager invMgr = Globals.getDefaultHabitat().getService(InvocationManager.class);\n+    private final Lock lock = new ReentrantLock();\n+    private final Condition condition = lock.newCondition();\n+    private static final Logger log = Logger.getLogger(PayaraHazelcastTenant.class.getName());\n+    private static final Map<String, Integer> blockedCounts = new ConcurrentHashMap<>();\n+\n+    // transient fields\n+    private EventListenerImpl destroyEventListener;\n+\n+    // serialized fields\n+    private JavaEEContextUtil.Instance contextInstance;\n+    private String moduleName;\n+\n+\n+    PayaraHazelcastTenant() {\n+        if (invMgr.getCurrentInvocation() != null) {\n+            contextInstance = ctxUtil.currentInvocation();\n+            moduleName = VersioningUtils.getUntaggedName(invMgr.getCurrentInvocation().getModuleName());\n+        } else {\n+            contextInstance = ctxUtil.empty();\n+        }\n+    }\n+\n+    @Override\n+    public void registerObject(DestroyEventContext destroyContext) {\n+        destroyEventListener = new EventListenerImpl(destroyContext);\n+        events.register(destroyEventListener);\n+    }\n+\n+    @Override\n+    public void unregisterObject() {\n+        // Hazelcast object has been destroyed\n+        events.unregister(destroyEventListener);\n+        destroyEventListener = null;\n+    }\n+\n+    @Override\n+    public Closeable setTenant() {\n+        try {\n+            return contextInstance.pushRequestContext()::close;\n+        } catch (IllegalStateException exc) {\n+            throw exc;\n+        }\n+    }\n+\n+    @Override\n+    public void writeData(ObjectDataOutput out) throws IOException {\n+        out.writeObject(contextInstance);\n+        out.writeUTF(moduleName);\n+    }\n+\n+    @Override\n+    public void readData(ObjectDataInput in) throws IOException {\n+        contextInstance = in.readObject();\n+        moduleName = in.readUTF();\n+    }\n+\n+    @Override\n+    public boolean isAvailable(Tenantable tenantable) {\n+        if (!contextInstance.isLoaded()) {\n+            if (!tenantable.requiresTenantContext() || tenantNotRequired(tenantable)) {\n+                return true;\n+            }\n+            lock.lock();\n+            try {\n+                String componentId = contextInstance.getInstanceComponentId();\n+                int unavailableCount = blockedCounts.compute(componentId, (k, v) -> v == null ? 0 : ++v);\n+                log.log(unavailableCount > 100 ? Level.INFO : Level.FINEST,\n+                        String.format(\"BLOCKED: tenant not available: %s, module %s, Operation: %s\",\n+                                componentId, moduleName, tenantable.getClass().getName()));\n+                if (unavailableCount > 100) {\n+                    blockedCounts.remove(componentId);\n+                }\n+                condition.await(100, TimeUnit.MILLISECONDS);\n+            } catch (InterruptedException ex) {\n+            } finally {\n+                lock.unlock();\n+            }\n+            return false;\n+        }\n+        return true;", "originalCommit": "175f7d471cd075c455d29f20a67fc8cf6a03f6f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2676b412d62275930a457a215a1e3325878f8104", "url": "https://github.com/payara/Payara/commit/2676b412d62275930a457a215a1e3325878f8104", "message": "Update nucleus/payara-modules/hazelcast-bootstrap/src/main/java/fish/payara/nucleus/hazelcast/PayaraHazelcastTenant.java\n\nCo-authored-by: Mark Wareham <37405236+MarkWareham@users.noreply.github.com>", "committedDate": "2020-12-22T16:54:21Z", "type": "commit"}, {"oid": "cfc4491094cd533ef28fbf42f9c178051d3f66e3", "url": "https://github.com/payara/Payara/commit/cfc4491094cd533ef28fbf42f9c178051d3f66e3", "message": "fixed logic in isAvailable()", "committedDate": "2020-12-22T17:13:19Z", "type": "commit"}, {"oid": "9d050a396733d1d93c764995ae9f8065968d3684", "url": "https://github.com/payara/Payara/commit/9d050a396733d1d93c764995ae9f8065968d3684", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2021-01-21T02:02:04Z", "type": "commit"}, {"oid": "1fb2d1e13233e1b32f76914987b3e33130f5158b", "url": "https://github.com/payara/Payara/commit/1fb2d1e13233e1b32f76914987b3e33130f5158b", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2021-01-24T22:54:13Z", "type": "commit"}, {"oid": "b973a55dff9ae475f96a3ada691f32775a68c569", "url": "https://github.com/payara/Payara/commit/b973a55dff9ae475f96a3ada691f32775a68c569", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2021-03-18T18:03:04Z", "type": "commit"}, {"oid": "e36c81b7ef2efe8fff92d9bd0cd0a4f22135d31a", "url": "https://github.com/payara/Payara/commit/e36c81b7ef2efe8fff92d9bd0cd0a4f22135d31a", "message": "Merge branch 'master' into Hz-TC-Rebased-On-CtxUtil", "committedDate": "2021-03-25T17:09:49Z", "type": "commit"}, {"oid": "31d909351e38862b9ba18088ade3f039c460341d", "url": "https://github.com/payara/Payara/commit/31d909351e38862b9ba18088ade3f039c460341d", "message": "CachePartitionIterator / ClusterWidePartition no longer necessary since tenant control takes care of class loading and context", "committedDate": "2021-03-25T18:04:05Z", "type": "commit"}]}