{"pr_number": 1911, "pr_title": "Add support for ByteBufferAttributeConverter", "pr_author": "steven-aerts", "pr_createdAt": "2020-06-19T13:20:49Z", "pr_url": "https://github.com/aws/aws-sdk-java-v2/pull/1911", "timeline": [{"oid": "6783b42479083e6b4b9b9be4db4431d6c0400280", "url": "https://github.com/aws/aws-sdk-java-v2/commit/6783b42479083e6b4b9b9be4db4431d6c0400280", "message": "Add support for ByteBufferAttributeConverter\n\nAdd support ByteBuffer as an an attribute type.\nThe DynamoDBType already lists it as a standard type.", "committedDate": "2020-06-19T13:26:11Z", "type": "forcePushed"}, {"oid": "e4d7ce34d484e094ad33384b886576a71eeaf3b2", "url": "https://github.com/aws/aws-sdk-java-v2/commit/e4d7ce34d484e094ad33384b886576a71eeaf3b2", "message": "Add support for ByteBufferAttributeConverter\n\nAdd support ByteBuffer as an an attribute type.\nThe DynamoDBType already lists it as a standard type.", "committedDate": "2020-06-23T07:34:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTg3Mzk2OA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1911#discussion_r605873968", "body": "Could you please also write Functional Test case with FakeItemWithByteBufferKey class , sample example as\r\n[FakeItemWithByteBufferKey.txt](https://github.com/aws/aws-sdk-java-v2/files/6245810/FakeItemWithByteBufferKey.txt)\r\n and then add this test case in CreateTableOperationTest.java as below\r\n\r\n```\r\n    @Test\r\n    public void generateRequest_withByteBufferKey() {\r\n        CreateTableOperation<FakeItemWithByteBufferKey> operation = CreateTableOperation.create(CreateTableEnhancedRequest.builder()\r\n                .build());\r\n\r\n        CreateTableRequest request = operation.generateRequest(FakeItemWithByteBufferKey.getTableSchema(),\r\n                PRIMARY_CONTEXT,\r\n                null);\r\n\r\n        assertThat(request.tableName(), is(TABLE_NAME));\r\n        assertThat(request.keySchema(), containsInAnyOrder(KeySchemaElement.builder()\r\n                .attributeName(\"id\")\r\n                .keyType(HASH)\r\n                .build()));\r\n\r\n        assertThat(request.globalSecondaryIndexes(), is(empty()));\r\n        assertThat(request.localSecondaryIndexes(), is(empty()));\r\n\r\n        assertThat(request.attributeDefinitions(), containsInAnyOrder(\r\n                AttributeDefinition.builder()\r\n                        .attributeName(\"id\")\r\n                        .attributeType(ScalarAttributeType.B)\r\n                        .build()));\r\n    }\r\n```\r\n\r\n", "bodyText": "Could you please also write Functional Test case with FakeItemWithByteBufferKey class , sample example as\nFakeItemWithByteBufferKey.txt\nand then add this test case in CreateTableOperationTest.java as below\n    @Test\n    public void generateRequest_withByteBufferKey() {\n        CreateTableOperation<FakeItemWithByteBufferKey> operation = CreateTableOperation.create(CreateTableEnhancedRequest.builder()\n                .build());\n\n        CreateTableRequest request = operation.generateRequest(FakeItemWithByteBufferKey.getTableSchema(),\n                PRIMARY_CONTEXT,\n                null);\n\n        assertThat(request.tableName(), is(TABLE_NAME));\n        assertThat(request.keySchema(), containsInAnyOrder(KeySchemaElement.builder()\n                .attributeName(\"id\")\n                .keyType(HASH)\n                .build()));\n\n        assertThat(request.globalSecondaryIndexes(), is(empty()));\n        assertThat(request.localSecondaryIndexes(), is(empty()));\n\n        assertThat(request.attributeDefinitions(), containsInAnyOrder(\n                AttributeDefinition.builder()\n                        .attributeName(\"id\")\n                        .attributeType(ScalarAttributeType.B)\n                        .build()));\n    }", "bodyHTML": "<p dir=\"auto\">Could you please also write Functional Test case with FakeItemWithByteBufferKey class , sample example as<br>\n<a href=\"https://github.com/aws/aws-sdk-java-v2/files/6245810/FakeItemWithByteBufferKey.txt\">FakeItemWithByteBufferKey.txt</a><br>\nand then add this test case in CreateTableOperationTest.java as below</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void generateRequest_withByteBufferKey() {\n        CreateTableOperation&lt;FakeItemWithByteBufferKey&gt; operation = CreateTableOperation.create(CreateTableEnhancedRequest.builder()\n                .build());\n\n        CreateTableRequest request = operation.generateRequest(FakeItemWithByteBufferKey.getTableSchema(),\n                PRIMARY_CONTEXT,\n                null);\n\n        assertThat(request.tableName(), is(TABLE_NAME));\n        assertThat(request.keySchema(), containsInAnyOrder(KeySchemaElement.builder()\n                .attributeName(&quot;id&quot;)\n                .keyType(HASH)\n                .build()));\n\n        assertThat(request.globalSecondaryIndexes(), is(empty()));\n        assertThat(request.localSecondaryIndexes(), is(empty()));\n\n        assertThat(request.attributeDefinitions(), containsInAnyOrder(\n                AttributeDefinition.builder()\n                        .attributeName(&quot;id&quot;)\n                        .attributeType(ScalarAttributeType.B)\n                        .build()));\n    }\n\"><pre><code>    @Test\n    public void generateRequest_withByteBufferKey() {\n        CreateTableOperation&lt;FakeItemWithByteBufferKey&gt; operation = CreateTableOperation.create(CreateTableEnhancedRequest.builder()\n                .build());\n\n        CreateTableRequest request = operation.generateRequest(FakeItemWithByteBufferKey.getTableSchema(),\n                PRIMARY_CONTEXT,\n                null);\n\n        assertThat(request.tableName(), is(TABLE_NAME));\n        assertThat(request.keySchema(), containsInAnyOrder(KeySchemaElement.builder()\n                .attributeName(\"id\")\n                .keyType(HASH)\n                .build()));\n\n        assertThat(request.globalSecondaryIndexes(), is(empty()));\n        assertThat(request.localSecondaryIndexes(), is(empty()));\n\n        assertThat(request.attributeDefinitions(), containsInAnyOrder(\n                AttributeDefinition.builder()\n                        .attributeName(\"id\")\n                        .attributeType(ScalarAttributeType.B)\n                        .build()));\n    }\n</code></pre></div>", "author": "joviegas", "createdAt": "2021-04-01T18:48:16Z", "path": "services-custom/dynamodb-enhanced/src/test/java/software/amazon/awssdk/enhanced/dynamodb/converters/attribute/BinaryAttributeConvertersTest.java", "diffHunk": "@@ -56,4 +58,15 @@ public void sdkBytesSetAttributeConverter_ReturnsBSType() {\n         SetAttributeConverter<Set<SdkBytes>> bytesSet = SetAttributeConverter.setConverter(SdkBytesAttributeConverter.create());\n         assertThat(bytesSet.attributeValueType()).isEqualTo(AttributeValueType.BS);\n     }\n+\n+    @Test", "originalCommit": "e4d7ce34d484e094ad33384b886576a71eeaf3b2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjA5Mjk5NA==", "url": "https://github.com/aws/aws-sdk-java-v2/pull/1911#discussion_r606092994", "bodyText": "Hi @joviegas ,\nupdated, thanks for preparing this so well.", "author": "steven-aerts", "createdAt": "2021-04-02T06:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTg3Mzk2OA=="}], "type": "inlineReview"}, {"oid": "a5ae4b995b480a978c2d45b341b560b81815185d", "url": "https://github.com/aws/aws-sdk-java-v2/commit/a5ae4b995b480a978c2d45b341b560b81815185d", "message": "Add support for ByteBufferAttributeConverter\n\nAdd support ByteBuffer as an an attribute type.\nThe DynamoDBType already lists it as a standard type.", "committedDate": "2021-04-02T06:20:23Z", "type": "forcePushed"}, {"oid": "1922e0c0548cbe7b4d4a7ed6bcf73991014db352", "url": "https://github.com/aws/aws-sdk-java-v2/commit/1922e0c0548cbe7b4d4a7ed6bcf73991014db352", "message": "Add support for ByteBufferAttributeConverter\n\nAdd support ByteBuffer as an an attribute type.\nThe DynamoDBType already lists it as a standard type.", "committedDate": "2021-04-02T06:37:31Z", "type": "commit"}, {"oid": "1922e0c0548cbe7b4d4a7ed6bcf73991014db352", "url": "https://github.com/aws/aws-sdk-java-v2/commit/1922e0c0548cbe7b4d4a7ed6bcf73991014db352", "message": "Add support for ByteBufferAttributeConverter\n\nAdd support ByteBuffer as an an attribute type.\nThe DynamoDBType already lists it as a standard type.", "committedDate": "2021-04-02T06:37:31Z", "type": "forcePushed"}]}