{"pr_number": 373, "pr_title": "Support YouTube's new continuations", "pr_author": "wb9688", "pr_createdAt": "2020-07-26T08:04:14Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/373", "timeline": [{"oid": "4c987a530292bc4b5a43540efcdf4b262c19de0d", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4c987a530292bc4b5a43540efcdf4b262c19de0d", "message": "Support YouTube's new continuations for search", "committedDate": "2020-07-26T08:01:03Z", "type": "commit"}, {"oid": "f345f667e2bd7306a1c54df1c7cf26d26707067a", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/f345f667e2bd7306a1c54df1c7cf26d26707067a", "message": "Extract YouTube's key", "committedDate": "2020-07-26T10:01:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwOTg1Ng==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/373#discussion_r460509856", "body": "```suggestion\r\n    private static void extractClientVersionAndKey() throws IOException, ExtractionException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static void getClientVersionAndKey() throws IOException, ExtractionException {\n          \n          \n            \n                private static void extractClientVersionAndKey() throws IOException, ExtractionException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">getClientVersionAndKey</span>() throws <span class=\"pl-smi\">IOException</span>, <span class=\"pl-smi\">ExtractionException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">extractClientVersionAndKey</span>() throws <span class=\"pl-smi\">IOException</span>, <span class=\"pl-smi\">ExtractionException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-07-26T10:34:40Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -214,39 +216,31 @@ public static boolean isHardcodedClientVersionValid() throws IOException, Extrac\n         return response.length() > 50; // ensure to have a valid response\n     }\n \n-    /**\n-     * Get the client version from a page\n-     * @return\n-     * @throws ParsingException\n-     */\n-    public static String getClientVersion() throws IOException, ExtractionException {\n-        if (!isNullOrEmpty(clientVersion)) return clientVersion;\n-        if (isHardcodedClientVersionValid()) return clientVersion = HARDCODED_CLIENT_VERSION;\n-\n+    private static void getClientVersionAndKey() throws IOException, ExtractionException {", "originalCommit": "f345f667e2bd7306a1c54df1c7cf26d26707067a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTE4Nw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/373#discussion_r460511187", "bodyText": "should be renamed, because this is not a getter anymore.", "author": "TobiGr", "createdAt": "2020-07-26T10:48:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUwOTg1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTA0MQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/373#discussion_r460511041", "body": "Add check if `clientVersion` was already extracted.", "bodyText": "Add check if clientVersion was already extracted.", "bodyHTML": "<p dir=\"auto\">Add check if <code>clientVersion</code> was already extracted.</p>", "author": "TobiGr", "createdAt": "2020-07-26T10:46:35Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -255,26 +249,54 @@ public static String getClientVersion() throws IOException, ExtractionException\n         }\n \n         String contextClientVersion;", "originalCommit": "f345f667e2bd7306a1c54df1c7cf26d26707067a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxMTA5OA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/373#discussion_r460511098", "body": "```suggestion\r\n        if (clientVersion != null && shortClientVersion != null) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (shortClientVersion != null) {\n          \n          \n            \n                    if (clientVersion != null && shortClientVersion != null) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (shortClientVersion <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first\">clientVersion </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span>shortClientVersion <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-07-26T10:47:04Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/YoutubeParsingHelper.java", "diffHunk": "@@ -255,26 +249,54 @@ public static String getClientVersion() throws IOException, ExtractionException\n         }\n \n         String contextClientVersion;\n-        String[] patterns = {\n+        final String[] patterns = {\n                 \"INNERTUBE_CONTEXT_CLIENT_VERSION\\\":\\\"([0-9\\\\.]+?)\\\"\",\n                 \"innertube_context_client_version\\\":\\\"([0-9\\\\.]+?)\\\"\",\n                 \"client.version=([0-9\\\\.]+)\"\n         };\n-        for (String pattern : patterns) {\n+        for (final String pattern : patterns) {\n             try {\n                 contextClientVersion = Parser.matchGroup1(pattern, html);\n                 if (!isNullOrEmpty(contextClientVersion)) {\n-                    return clientVersion = contextClientVersion;\n+                    clientVersion = contextClientVersion;\n                 }\n-            } catch (Exception ignored) {\n-            }\n+            } catch (Parser.RegexException ignored) { }\n         }\n \n         if (shortClientVersion != null) {", "originalCommit": "f345f667e2bd7306a1c54df1c7cf26d26707067a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "667dce034c1aa5a2378b2e4b5a1a9e2dc67c14f5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/667dce034c1aa5a2378b2e4b5a1a9e2dc67c14f5", "message": "Only use fallback methods for clientVersion when clientVersion hasn't been successfully extracted yet", "committedDate": "2020-07-26T11:14:25Z", "type": "commit"}]}