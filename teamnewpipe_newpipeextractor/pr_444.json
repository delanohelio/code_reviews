{"pr_number": 444, "pr_title": "Remove any reference to decrypt and improve error message", "pr_author": "Stypox", "pr_createdAt": "2020-10-26T20:24:53Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY5NQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513248695", "body": "This doesn't seem okay to me. That name is string matched against the page contents. You shouldn't change it.", "bodyText": "This doesn't seem okay to me. That name is string matched against the page contents. You shouldn't change it.", "bodyHTML": "<p dir=\"auto\">This doesn't seem okay to me. That name is string matched against the page contents. You shouldn't change it.</p>", "author": "TheAssassin", "createdAt": "2020-10-28T08:11:54Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -632,7 +632,7 @@ public String getErrorMessage() {\n     private static final String FORMATS = \"formats\";\n     private static final String ADAPTIVE_FORMATS = \"adaptiveFormats\";\n     private static final String HTTPS = \"https:\";\n-    private static final String DEOBFUSCATION_FUNC_NAME = \"decrypt\";\n+    private static final String DEOBFUSCATION_FUNC_NAME = \"deobfuscate\";", "originalCommit": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU3MTkzNQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513571935", "bodyText": "No, that name is not string-matched anywhere. It is only used as the name of the JS function that is manually built to then call the other functions inside the player's JS.", "author": "Stypox", "createdAt": "2020-10-28T16:09:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTExNw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249117", "body": "Heh, good catch, that \"not\". I'd remove the \"restricted\", though:\r\n\r\n```suggestion\r\n                    \"Could not load deobfuscation code for YouTube video\", e);\r\n```", "bodyText": "Heh, good catch, that \"not\". I'd remove the \"restricted\", though:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Could not load deobfuscation code for YouTube restricted video\", e);\n          \n          \n            \n                                \"Could not load deobfuscation code for YouTube video\", e);", "bodyHTML": "<p dir=\"auto\">Heh, good catch, that \"not\". I'd remove the \"restricted\", though:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not load deobfuscation code for YouTube <span class=\"x x-first x-last\">restricted </span>video<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not load deobfuscation code for YouTube video<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheAssassin", "createdAt": "2020-10-28T08:12:42Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -770,7 +770,7 @@ private EmbeddedInfo getEmbeddedInfo() throws ParsingException, ReCaptchaExcepti\n \n         } catch (IOException e) {\n             throw new ParsingException(\n-                    \"Could load deobfuscation code form restricted video for the Youtube service.\", e);\n+                    \"Could not load deobfuscation code for YouTube restricted video\", e);", "originalCommit": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMTgxNg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513701816", "bodyText": "Oh, yes, this is not only used for restricted videos anymore", "author": "Stypox", "createdAt": "2020-10-28T19:20:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTExNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQxNA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249414", "body": "Same as above. Pretty sure you may not change this. However, you should consider extracting it into a global constant, too.", "bodyText": "Same as above. Pretty sure you may not change this. However, you should consider extracting it into a global constant, too.", "bodyHTML": "<p dir=\"auto\">Same as above. Pretty sure you may not change this. However, you should consider extracting it into a global constant, too.</p>", "author": "TheAssassin", "createdAt": "2020-10-28T08:13:23Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -815,8 +815,8 @@ private String deobfuscateSignature(String obfuscatedSig, String deobfuscationCo\n         final Object result;\n         try {\n             final ScriptableObject scope = context.initSafeStandardObjects();\n-            context.evaluateString(scope, deobfuscationCode, \"decryptionCode\", 1, null);\n-            final Function deobfuscateFunc = (Function) scope.get(\"decrypt\", scope);\n+            context.evaluateString(scope, deobfuscationCode, \"deobfuscationCode\", 1, null);", "originalCommit": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcwMjY5NA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513702694", "bodyText": "\"deobfuscationCode\" is only the name of the JS file to be interpreted, which could be anything and for us has no effect whatsoever on code execution", "author": "Stypox", "createdAt": "2020-10-28T19:22:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTQ3NA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/444#discussion_r513249474", "body": "Good catch.", "bodyText": "Good catch.", "bodyHTML": "<p dir=\"auto\">Good catch.</p>", "author": "TheAssassin", "createdAt": "2020-10-28T08:13:30Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -815,8 +815,8 @@ private String deobfuscateSignature(String obfuscatedSig, String deobfuscationCo\n         final Object result;\n         try {\n             final ScriptableObject scope = context.initSafeStandardObjects();\n-            context.evaluateString(scope, deobfuscationCode, \"decryptionCode\", 1, null);\n-            final Function deobfuscateFunc = (Function) scope.get(\"decrypt\", scope);\n+            context.evaluateString(scope, deobfuscationCode, \"deobfuscationCode\", 1, null);\n+            final Function deobfuscateFunc = (Function) scope.get(DEOBFUSCATION_FUNC_NAME, scope);", "originalCommit": "f9c4f33ac1db03c99332bed2ed5b4d994b0b32ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "30ed4f2d636dbb6112ae1951e646f8756ae93ff4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/30ed4f2d636dbb6112ae1951e646f8756ae93ff4", "message": "Remove any reference to decrypt and improve error message", "committedDate": "2020-10-28T19:26:00Z", "type": "commit"}, {"oid": "30ed4f2d636dbb6112ae1951e646f8756ae93ff4", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/30ed4f2d636dbb6112ae1951e646f8756ae93ff4", "message": "Remove any reference to decrypt and improve error message", "committedDate": "2020-10-28T19:26:00Z", "type": "forcePushed"}]}