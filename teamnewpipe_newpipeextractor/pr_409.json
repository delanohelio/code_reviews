{"pr_number": 409, "pr_title": "Support short custom YouTube channel URLs", "pr_author": "Bartoshr", "pr_createdAt": "2020-10-09T15:48:16Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409", "timeline": [{"oid": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "message": "Support short custom youtube channel urls", "committedDate": "2020-10-09T15:06:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzMjc2OQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502532769", "body": "There is no need to make this method public", "bodyText": "There is no need to make this method public", "bodyHTML": "<p dir=\"auto\">There is no need to make this method public</p>", "author": "TobiGr", "createdAt": "2020-10-09T16:07:43Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,17 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not\n+     */\n+    public boolean isCustomShortChannelUrl(String[] splitPath) {", "originalCommit": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTQzNw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502539437", "body": "http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare is a stream URL, but is accepted by your regex.", "bodyText": "http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare is a stream URL, but is accepted by your regex.", "bodyHTML": "<p dir=\"auto\"><a href=\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&amp;u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\" rel=\"nofollow\">http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&amp;u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare</a> is a stream URL, but is accepted by your regex.</p>", "author": "TobiGr", "createdAt": "2020-10-09T16:19:59Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,17 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not\n+     */\n+    public boolean isCustomShortChannelUrl(String[] splitPath) {\n+        return splitPath.length == 1 && !splitPath[0].matches(\"playlist|watch\");", "originalCommit": "4e04991762a6c3d2aa4fce126e8ef141a6bb0fce", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2NjM5OA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502566398", "bodyText": "Hi. Thank you for review. Do you think that simply adding \"attribution_link\" to exlude those links with regex would be sufficent solution ? I couldn't come up with something better that that.", "author": "Bartoshr", "createdAt": "2020-10-09T17:11:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5MjEyNQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502892125", "bodyText": "Mmmh, probably a list of all pages not pointing to a channel should be added to that regex", "author": "Stypox", "createdAt": "2020-10-11T09:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTQzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5MzMwOQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502893309", "bodyText": "Other YouTube URLs:\n\n\nhttps://m.youtube.com/select_site\n\n\nhttps://www.youtube.com/?app=desktop&persist_app=1\n\n\n@Stypox what do you mean exactly?", "author": "TobiGr", "createdAt": "2020-10-11T09:58:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUzOTQzNw=="}], "type": "inlineReview"}, {"oid": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "message": "Prevent attribution_link urls to be accepted by channel links handler", "committedDate": "2020-10-09T17:07:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjIwNQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842205", "body": "I think, we can improve the test cases here (and should also improve the ones for playlists, streams and feeds in an additional PR).\r\n```suggestion\r\n        // do not accept URLs which are not channels\r\n        assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/watch?v=jZViOEv90dI&t=100\"));\r\n        assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/watch_popup?v=uEJuoEs1UxY\"));\r\n        assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));\r\n        assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/playlist?list=PLW5y1tjAOzI3orQNF1yGGVL5x-pR2K1d\"));\r\n        assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/embed/jZViOEv90dI\"));\r\n        assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/feed/subscriptions?list=PLz8YL4HVC87WJQDzVoY943URKQCsHS9XV\"));\r\n```\r\n", "bodyText": "I think, we can improve the test cases here (and should also improve the ones for playlists, streams and feeds in an additional PR).\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));\n          \n          \n            \n                    // do not accept URLs which are not channels\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/watch?v=jZViOEv90dI&t=100\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/watch_popup?v=uEJuoEs1UxY\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/playlist?list=PLW5y1tjAOzI3orQNF1yGGVL5x-pR2K1d\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/embed/jZViOEv90dI\"));\n          \n          \n            \n                    assertFalse(linkHandler.acceptUrl(\"https://www.youtube.com/feed/subscriptions?list=PLz8YL4HVC87WJQDzVoY943URKQCsHS9XV\"));", "bodyHTML": "<p dir=\"auto\">I think, we can improve the test cases here (and should also improve the ones for playlists, streams and feeds in an additional PR).</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">assertFalse(linkHandler</span><span class=\"pl-k x\">.</span><span class=\"x\">acceptUrl(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&amp;u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">));</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> do not accept URLs which are not channels</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://www.youtube.com/watch?v=jZViOEv90dI&amp;t=100<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.youtube.com/watch_popup?v=uEJuoEs1UxY<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&amp;u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://www.youtube.com/playlist?list=PLW5y1tjAOzI3orQNF1yGGVL5x-pR2K1d<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://www.youtube.com/embed/jZViOEv90dI<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(linkHandler<span class=\"pl-k\">.</span>acceptUrl(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://www.youtube.com/feed/subscriptions?list=PLz8YL4HVC87WJQDzVoY943URKQCsHS9XV<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-10T23:08:44Z", "path": "extractor/src/test/java/org/schabi/newpipe/extractor/services/youtube/YoutubeChannelLinkHandlerFactoryTest.java", "diffHunk": "@@ -44,6 +47,8 @@ public void acceptUrlTest() throws ParsingException {\n \n         assertTrue(linkHandler.acceptUrl(\"https://invidio.us/channel/UClq42foiSgl7sSpLupnugGA\"));\n         assertTrue(linkHandler.acceptUrl(\"https://invidio.us/channel/UClq42foiSgl7sSpLupnugGA/videos?disable_polymer=1\"));\n+\n+        assertFalse(linkHandler.acceptUrl(\"http://www.youtube.com/attribution_link?a=JdfC0C9V6ZI&u=%2Fwatch%3Fv%3DEhxJLojIE_o%26feature%3Dshare\"));", "originalCommit": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5MzQ1MA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502893450", "bodyText": "// do not accept URLs which are *not channels", "author": "opusforlife2", "createdAt": "2020-10-11T09:59:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NDQzMQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502894431", "bodyText": "fixed", "author": "TobiGr", "createdAt": "2020-10-11T10:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjIwNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MjgzMw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842833", "body": "```suggestion\r\n            // Handle custom short channel URLs like youtube.com/yourcustomname\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Handle custom short channel urls like youtube.com/yourcustomname\n          \n          \n            \n                        // Handle custom short channel URLs like youtube.com/yourcustomname", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Handle custom short channel <span class=\"x x-first x-last\">urls</span> like youtube.com/yourcustomname</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Handle custom short channel <span class=\"x x-first x-last\">URLs</span> like youtube.com/yourcustomname</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-10T23:16:59Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -60,14 +72,20 @@ public String getId(String url) throws ParsingException {\n                 throw new ParsingException(\"the URL given is not a Youtube-URL\");\n             }\n \n-            if (!path.startsWith(\"/user/\") && !path.startsWith(\"/channel/\") && !path.startsWith(\"/c/\")) {\n-                throw new ParsingException(\"the URL given is neither a channel nor an user\");\n-            }\n-\n             // remove leading \"/\"\n             path = path.substring(1);\n-\n             String[] splitPath = path.split(\"/\");\n+\n+            // Handle custom short channel urls like youtube.com/yourcustomname", "originalCommit": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mjg1OA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r502842858", "body": "```suggestion\r\n     * custom short channel URLs like youtube.com/yourcustomname\r\n     *\r\n     * @param splitPath path segments array\r\n     * @return true - if value conform to short channel URL, false - not\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * custom short channel urls like youtube.com/yourcustomname\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param splitPath path segments array\n          \n          \n            \n                 * @return true - if value conform to short channel url, false - not\n          \n          \n            \n                 * custom short channel URLs like youtube.com/yourcustomname\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param splitPath path segments array\n          \n          \n            \n                 * @return true - if value conform to short channel URL, false - not", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> custom <span class=\"pl-k\">short</span> channel <span class=\"x x-first x-last\">urls</span> like youtube<span class=\"pl-k\">.</span>com<span class=\"pl-k\">/</span>yourcustomname</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> splitPath path segments array</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">-</span> <span class=\"pl-k\">if</span> value conform to <span class=\"pl-k\">short</span> channel <span class=\"x x-first x-last\">url</span>, <span class=\"pl-c1\">false</span> <span class=\"pl-k\">-</span> not</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> custom <span class=\"pl-k\">short</span> channel <span class=\"pl-smi x x-first x-last\">URLs</span> like youtube<span class=\"pl-k\">.</span>com<span class=\"pl-k\">/</span>yourcustomname</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> splitPath path segments array</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">-</span> <span class=\"pl-k\">if</span> value conform to <span class=\"pl-k\">short</span> channel <span class=\"pl-c1 x x-first x-last\">URL</span>, <span class=\"pl-c1\">false</span> <span class=\"pl-k\">-</span> not</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-10T23:17:30Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel urls like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel url, false - not", "originalCommit": "8c38a5509efad0ed4f2a4d84089ef3a74e113d1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d63211a6694c6263bcc02dd4303aa3a4a4e9cbc", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/9d63211a6694c6263bcc02dd4303aa3a4a4e9cbc", "message": "Fix typos\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>", "committedDate": "2020-10-12T17:56:53Z", "type": "commit"}, {"oid": "7abb4b371381dea969cbd90f2f332e751047d3c3", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/7abb4b371381dea969cbd90f2f332e751047d3c3", "message": "Update extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java\r\n\r\nFix typos\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>", "committedDate": "2020-10-12T17:57:45Z", "type": "commit"}, {"oid": "5ab1b053d2c8629076c3ac894af1df73916ee36e", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/5ab1b053d2c8629076c3ac894af1df73916ee36e", "message": "Update youtube channel link handler tests\n\nCo-authored-by: Tobias Groza <TobiGr@users.noreply.github.com>", "committedDate": "2020-10-12T18:11:28Z", "type": "commit"}, {"oid": "e3f996e014a0b0d06f6183bf3ae5a195be2cf6fe", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/e3f996e014a0b0d06f6183bf3ae5a195be2cf6fe", "message": "Exlude links which are not channels", "committedDate": "2020-10-12T18:59:56Z", "type": "commit"}, {"oid": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "message": "Exlude links which are not channels", "committedDate": "2020-10-20T18:06:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTkzNzQxMw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r509937413", "body": "```suggestion\n    private boolean isCustomShortChannelUrl(final String[] splitPath) {\n```\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean isCustomShortChannelUrl(String[] splitPath) {\n          \n          \n            \n                private boolean isCustomShortChannelUrl(final String[] splitPath) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> isCustomShortChannelUrl(<span class=\"pl-k\">String</span>[] splitPath) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> isCustomShortChannelUrl(<span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">String</span>[] splitPath) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Stypox", "createdAt": "2020-10-22T07:27:29Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(String[] splitPath) {", "originalCommit": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0MjgyNQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r509942825", "body": "Please compile this regex as a static variable in the class, otherwise it will be compiled every time", "bodyText": "Please compile this regex as a static variable in the class, otherwise it will be compiled every time", "bodyHTML": "<p dir=\"auto\">Please compile this regex as a static variable in the class, otherwise it will be compiled every time</p>", "author": "Stypox", "createdAt": "2020-10-22T07:37:12Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,6 +49,18 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(String[] splitPath) {\n+        return splitPath.length == 1 &&\n+          !splitPath[0].matches(\"playlist|watch|attribution_link|watch_popup|embed|feed|select_site\");", "originalCommit": "d3f80d1538286434c32fa3d2cfe7a8fe987c09a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5", "message": "Use static regex pattern for excluded path segments", "committedDate": "2020-10-22T18:13:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDkxNzE4MA==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/409#discussion_r510917180", "body": "Please move this up to the other class attribute", "bodyText": "Please move this up to the other class attribute", "bodyHTML": "<p dir=\"auto\">Please move this up to the other class attribute</p>", "author": "TobiGr", "createdAt": "2020-10-23T14:19:27Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/linkHandler/YoutubeChannelLinkHandlerFactory.java", "diffHunk": "@@ -49,26 +50,47 @@ public String getUrl(String id, List<String> contentFilters, String searchFilter\n         return \"https://www.youtube.com/\" + id;\n     }\n \n+\n+    /**\n+     * Returns true if path conform to\n+     * custom short channel URLs like youtube.com/yourcustomname\n+     *\n+     * @param splitPath path segments array\n+     * @return true - if value conform to short channel URL, false - not\n+     */\n+    private boolean isCustomShortChannelUrl(final String[] splitPath) {\n+        return splitPath.length == 1 && !excludedSegments.matcher(splitPath[0]).matches();\n+    }\n+\n+  private static final Pattern excludedSegments =\n+    Pattern.compile(\"playlist|watch|attribution_link|watch_popup|embed|feed|select_site\");", "originalCommit": "0e67d820bcbe65d1c7de0e8d4cbf607b13317fa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "29695aed0a295f7bf84fea435a7dfd304989fcd2", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/29695aed0a295f7bf84fea435a7dfd304989fcd2", "message": "Small field refactor", "committedDate": "2020-10-23T14:42:30Z", "type": "commit"}]}