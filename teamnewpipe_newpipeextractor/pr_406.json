{"pr_number": 406, "pr_title": "[YouTube] Fix some decryption exceptions by retrying", "pr_author": "Stypox", "pr_createdAt": "2020-10-04T13:38:41Z", "pr_url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406", "timeline": [{"oid": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/0f80cb3c99ac66507ee13ffe666f0dab6b449076", "message": "[YouTube] Fix some decryption exceptions by retrying", "committedDate": "2020-10-04T13:40:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MDQyMQ==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r499250421", "body": "```suggestion\r\n                if (attempts == 0) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (attempts <= 0) {\n          \n          \n            \n                            if (attempts == 0) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"663\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (attempts <span class=\"pl-k\"><span class=\"x x-first x-last\">&lt;</span>=</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"663\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (attempts <span class=\"pl-k\"><span class=\"x x-first x-last\">=</span>=</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-04T14:06:37Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -647,12 +646,31 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n             final String infoPageResponse = downloader.get(videoInfoUrl, getExtractorLocalization()).responseBody();\n             videoInfoPage.putAll(Parser.compatParseMap(infoPageResponse));\n             playerUrl = info.url;\n+\n         } else {\n-            initialData = initialAjaxJson.getObject(3).getObject(\"response\");\n             ageLimit = NO_AGE_LIMIT;\n+            JsonObject playerConfig;\n+\n+            // sometimes at random YouTube does not provide the player config,\n+            // so just retry the same request three times\n+            int attempts = 2;\n+            while (true) {\n+                playerConfig = initialAjaxJson.getObject(2).getObject(\"player\", null);\n+                if (playerConfig != null) {\n+                    break;\n+                }\n+\n+                if (attempts <= 0) {", "originalCommit": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3ODI0Ng==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r499378246", "bodyText": "Why? Doesn't hurt to be careful and cover all cases.", "author": "opusforlife2", "createdAt": "2020-10-05T06:57:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MDQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NjE3Ng==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r499386176", "bodyText": "Ok", "author": "TobiGr", "createdAt": "2020-10-05T07:16:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MDQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkzNzkxNw==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r502937917", "body": "```suggestion\r\n            throw new ParsingException(\"Could not extract js URL from YouTube player config\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ParsingException(\"Could not extract js url from YouTube player config\");\n          \n          \n            \n                        throw new ParsingException(\"Could not extract js URL from YouTube player config\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ParsingException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not extract js <span class=\"x x-first x-last\">url</span> from YouTube player config<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ParsingException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not extract js <span class=\"x x-first x-last\">URL</span> from YouTube player config<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-11T16:37:30Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -674,36 +692,27 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n         }\n     }\n \n-    private JsonObject getPlayerArgs(JsonObject playerConfig) throws ParsingException {\n-        JsonObject playerArgs;\n-\n+    private JsonObject getPlayerArgs(final JsonObject playerConfig) throws ParsingException {\n         //attempt to load the youtube js player JSON arguments\n-        try {\n-            playerArgs = playerConfig.getObject(\"args\");\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not parse yt player config\", e);\n+        final JsonObject playerArgs = playerConfig.getObject(\"args\", null);\n+        if (playerArgs == null) {\n+            throw new ParsingException(\"Could not extract args from YouTube player config\");\n         }\n-\n         return playerArgs;\n     }\n \n-    private String getPlayerUrl(JsonObject playerConfig) throws ParsingException {\n-        try {\n-            // The Youtube service needs to be initialized by downloading the\n-            // js-Youtube-player. This is done in order to get the algorithm\n-            // for decrypting cryptic signatures inside certain stream urls.\n-            String playerUrl;\n-\n-            JsonObject ytAssets = playerConfig.getObject(\"assets\");\n-            playerUrl = ytAssets.getString(\"js\");\n+    private String getPlayerUrl(final JsonObject playerConfig) throws ParsingException {\n+        // The Youtube service needs to be initialized by downloading the\n+        // js-Youtube-player. This is done in order to get the algorithm\n+        // for decrypting cryptic signatures inside certain stream urls.\n+        final String playerUrl = playerConfig.getObject(\"assets\").getString(\"js\");\n \n-            if (playerUrl.startsWith(\"//\")) {\n-                playerUrl = HTTPS + playerUrl;\n-            }\n-            return playerUrl;\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not load decryption code for the Youtube service.\", e);\n+        if (playerUrl == null) {\n+            throw new ParsingException(\"Could not extract js url from YouTube player config\");", "originalCommit": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkzNzk0Mg==", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/pull/406#discussion_r502937942", "body": "```suggestion\r\n        // for decrypting cryptic signatures inside certain stream URLs.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // for decrypting cryptic signatures inside certain stream urls.\n          \n          \n            \n                    // for decrypting cryptic signatures inside certain stream URLs.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> for decrypting cryptic signatures inside certain stream <span class=\"x x-first x-last\">urls</span>.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> for decrypting cryptic signatures inside certain stream <span class=\"x x-first x-last\">URLs</span>.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TobiGr", "createdAt": "2020-10-11T16:37:52Z", "path": "extractor/src/main/java/org/schabi/newpipe/extractor/services/youtube/extractors/YoutubeStreamExtractor.java", "diffHunk": "@@ -674,36 +692,27 @@ public void onFetchPage(@Nonnull Downloader downloader) throws IOException, Extr\n         }\n     }\n \n-    private JsonObject getPlayerArgs(JsonObject playerConfig) throws ParsingException {\n-        JsonObject playerArgs;\n-\n+    private JsonObject getPlayerArgs(final JsonObject playerConfig) throws ParsingException {\n         //attempt to load the youtube js player JSON arguments\n-        try {\n-            playerArgs = playerConfig.getObject(\"args\");\n-        } catch (Exception e) {\n-            throw new ParsingException(\"Could not parse yt player config\", e);\n+        final JsonObject playerArgs = playerConfig.getObject(\"args\", null);\n+        if (playerArgs == null) {\n+            throw new ParsingException(\"Could not extract args from YouTube player config\");\n         }\n-\n         return playerArgs;\n     }\n \n-    private String getPlayerUrl(JsonObject playerConfig) throws ParsingException {\n-        try {\n-            // The Youtube service needs to be initialized by downloading the\n-            // js-Youtube-player. This is done in order to get the algorithm\n-            // for decrypting cryptic signatures inside certain stream urls.\n-            String playerUrl;\n-\n-            JsonObject ytAssets = playerConfig.getObject(\"assets\");\n-            playerUrl = ytAssets.getString(\"js\");\n+    private String getPlayerUrl(final JsonObject playerConfig) throws ParsingException {\n+        // The Youtube service needs to be initialized by downloading the\n+        // js-Youtube-player. This is done in order to get the algorithm\n+        // for decrypting cryptic signatures inside certain stream urls.", "originalCommit": "0f80cb3c99ac66507ee13ffe666f0dab6b449076", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "19e862657a821d133aae38a3011235a584c740cd", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/19e862657a821d133aae38a3011235a584c740cd", "message": "[YouTube] Fix some decryption exceptions by retrying", "committedDate": "2020-10-15T18:16:44Z", "type": "commit"}, {"oid": "19e862657a821d133aae38a3011235a584c740cd", "url": "https://github.com/TeamNewPipe/NewPipeExtractor/commit/19e862657a821d133aae38a3011235a584c740cd", "message": "[YouTube] Fix some decryption exceptions by retrying", "committedDate": "2020-10-15T18:16:44Z", "type": "forcePushed"}]}