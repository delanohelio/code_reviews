{"pr_number": 2129, "pr_title": "Check for unallocated equipment in larger aerospace units during validation", "pr_author": "neoancient", "pr_createdAt": "2020-08-10T02:12:14Z", "pr_url": "https://github.com/MegaMek/megamek/pull/2129", "timeline": [{"oid": "15e1457d1a4b178931d1a96ab2261f2de3c69cad", "url": "https://github.com/MegaMek/megamek/commit/15e1457d1a4b178931d1a96ab2261f2de3c69cad", "message": "Cleanup checks for unallocated equipment in TestAero\n\nRemoved code that was copied from TestMech but irrelevant for aeros.", "committedDate": "2020-08-09T21:21:29Z", "type": "commit"}, {"oid": "24a4da11f6b12ac850d0c53ca050ff212fb56f9b", "url": "https://github.com/MegaMek/megamek/commit/24a4da11f6b12ac850d0c53ca050ff212fb56f9b", "message": "Check for unallocated equipment on small craft and large craft.", "committedDate": "2020-08-10T02:07:36Z", "type": "commit"}, {"oid": "4c19d0cb0c26f2e6c3defde16fb9152e0e064f26", "url": "https://github.com/MegaMek/megamek/commit/4c19d0cb0c26f2e6c3defde16fb9152e0e064f26", "message": "Skip fixed slot limit check for non-fighter aeros.", "committedDate": "2020-08-10T02:08:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2MjM2OQ==", "url": "https://github.com/MegaMek/megamek/pull/2129#discussion_r467662369", "body": "```suggestion\r\n            if ((m.getLocation() == Entity.LOC_NONE) && !m.isOneShotAmmo() && (m.getCriticals() > 0)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if ((m.getLocation() == Entity.LOC_NONE) && !m.isOneShotAmmo() && m.getCriticals() > 0) {\n          \n          \n            \n                        if ((m.getLocation() == Entity.LOC_NONE) && !m.isOneShotAmmo() && (m.getCriticals() > 0)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> ((m<span class=\"pl-k\">.</span>getLocation() <span class=\"pl-k\">==</span> <span class=\"pl-smi\">Entity</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LOC_NONE</span>) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>m<span class=\"pl-k\">.</span>isOneShotAmmo() <span class=\"pl-k\">&amp;&amp;</span> m<span class=\"pl-k\">.</span>getCriticals() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> ((m<span class=\"pl-k\">.</span>getLocation() <span class=\"pl-k\">==</span> <span class=\"pl-smi\">Entity</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>LOC_NONE</span>) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>m<span class=\"pl-k\">.</span>isOneShotAmmo() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span>m<span class=\"pl-k\">.</span>getCriticals() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span><span class=\"x x-first x-last\">)</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Windchild292", "createdAt": "2020-08-10T02:20:17Z", "path": "megamek/src/megamek/common/verifier/TestAero.java", "diffHunk": "@@ -746,32 +744,14 @@ public boolean correctControlSystems(StringBuffer buff){\n         return true;\n     }\n     \n-    public void checkCriticalSlotsForEquipment(Entity entity,\n-            Vector<Mounted> unallocated, Vector<Serializable> allocation,\n-            Vector<Integer> heatSinks) {\n+    public List<Mounted> checkCriticalSlotsForEquipment(Entity entity) {\n+        List<Mounted> unallocated = new ArrayList<>();\n         for (Mounted m : entity.getEquipment()) {\n-            if (m.getLocation() == Entity.LOC_NONE) {\n-                if ((m.getType() instanceof AmmoType)\n-                        && (m.getUsableShotsLeft() <= 1)) {\n-                    continue;\n-                }\n-                if ((entity instanceof Aero) && \n-                        (m.getCriticals() == 0)) {\n-                    continue;\n-                }\n-                if (!(m.getType() instanceof MiscType)) {\n-                    unallocated.addElement(m);\n-                    continue;\n-                }\n-                MiscType mt = (MiscType) m.getType();\n-                if (!mt.hasFlag(MiscType.F_HEAT_SINK)\n-                        && !mt.hasFlag(MiscType.F_DOUBLE_HEAT_SINK)\n-                        && !mt.hasFlag(MiscType.F_IS_DOUBLE_HEAT_SINK_PROTOTYPE)) {\n-                    unallocated.addElement(m);\n-                    continue;\n-                }\n+            if ((m.getLocation() == Entity.LOC_NONE) && !m.isOneShotAmmo() && m.getCriticals() > 0) {", "originalCommit": "4c19d0cb0c26f2e6c3defde16fb9152e0e064f26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b32b3be78f3526759a5b037555cf646db37dd610", "url": "https://github.com/MegaMek/megamek/commit/b32b3be78f3526759a5b037555cf646db37dd610", "message": "Update megamek/src/megamek/common/verifier/TestAero.java\n\nCo-authored-by: Justin Bowen <39067288+Windchild292@users.noreply.github.com>", "committedDate": "2020-08-10T03:07:16Z", "type": "commit"}]}