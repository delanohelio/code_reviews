{"pr_number": 883, "pr_title": "Update for 4.1.0 Release", "pr_author": "prb112", "pr_createdAt": "2020-04-01T21:34:06Z", "pr_url": "https://github.com/IBM/FHIR/pull/883", "timeline": [{"oid": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "url": "https://github.com/IBM/FHIR/commit/ee301cd388e3a8bc837193f5dbb0d39da48818ad", "message": "Update for 4.1.0 Release\n\n- Update for Javadocs.yml to move to correct folder\n- Update the Code to Support multiple runs of Builds\n\t- Sequence only accepts a first version\n\t- DerbyMaster is optimized\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-01T21:33:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyNzIwMQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401927201", "body": "intesting,  why this bootstrapAndLoad function was basically do nothing... ", "bodyText": "intesting,  why this bootstrapAndLoad function was basically do nothing...", "bodyHTML": "<p dir=\"auto\">intesting,  why this bootstrapAndLoad function was basically do nothing...</p>", "author": "albertwang-ibm", "createdAt": "2020-04-01T21:42:06Z", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/test/spec/R4JDBCExamplesTest.java", "diffHunk": "@@ -40,16 +38,13 @@ public R4JDBCExamplesTest() throws Exception {\n         this.properties = TestUtil.readTestProperties(\"test.jdbc.properties\");\n     }\n \n-    @BeforeSuite\n-    public void bootstrapAndLoad() {\n-        System.out.println(\"Bootstrapping database:\");\n-\n-\n-        System.out.println(\"Processing examples:\");\n-    }", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNzA5NA==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401937094", "bodyText": "I am not sure", "author": "prb112", "createdAt": "2020-04-01T22:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyNzIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyODMxMw==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401928313", "body": "just curious, maybe long time ago, these codes were in bootstrapAndLoad() function?", "bodyText": "just curious, maybe long time ago, these codes were in bootstrapAndLoad() function?", "bodyHTML": "<p dir=\"auto\">just curious, maybe long time ago, these codes were in bootstrapAndLoad() function?</p>", "author": "albertwang-ibm", "createdAt": "2020-04-01T21:44:34Z", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/test/spec/R4JDBCExamplesTest.java", "diffHunk": "@@ -40,16 +38,13 @@ public R4JDBCExamplesTest() throws Exception {\n         this.properties = TestUtil.readTestProperties(\"test.jdbc.properties\");\n     }\n \n-    @BeforeSuite\n-    public void bootstrapAndLoad() {\n-        System.out.println(\"Bootstrapping database:\");\n-\n-\n-        System.out.println(\"Processing examples:\");\n-    }\n-\n-    @Test(groups = { \"jdbc-seed\" })\n+    @Test(groups = { \"jdbc-seed\" }, singleThreaded = true, priority = -1)\n     public void perform() throws Exception {\n+        if(this.database == null) {\n+            System.out.println(\"Bootstrapping database:\");\n+            this.database = new DerbyFhirDatabase(DerbyInitializer.DB_NAME);\n+        }", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNzIyMQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401937221", "bodyText": "no - I added, and move the output statement.", "author": "prb112", "createdAt": "2020-04-01T22:04:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyODMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMjI0OQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401932249", "body": "good change, I did find in my local message.log, seems apply has been done again and again for all existing derby databases, really nice to see this change, I guess this should be able to fix the issue I see.  and btw, I guess we will always have to change this sequence.java whenever any schema update is made, really want to know how would we support upgrade from any previous version to this version ... ", "bodyText": "good change, I did find in my local message.log, seems apply has been done again and again for all existing derby databases, really nice to see this change, I guess this should be able to fix the issue I see.  and btw, I guess we will always have to change this sequence.java whenever any schema update is made, really want to know how would we support upgrade from any previous version to this version ...", "bodyHTML": "<p dir=\"auto\">good change, I did find in my local message.log, seems apply has been done again and again for all existing derby databases, really nice to see this change, I guess this should be able to fix the issue I see.  and btw, I guess we will always have to change this sequence.java whenever any schema update is made, really want to know how would we support upgrade from any previous version to this version ...</p>", "author": "albertwang-ibm", "createdAt": "2020-04-01T21:52:53Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java", "diffHunk": "@@ -37,7 +38,12 @@ public void apply(Integer priorVersion, IDatabaseAdapter target) {\n         if (priorVersion != null && priorVersion > 0 && this.version > priorVersion) {\n             throw new UnsupportedOperationException(\"Upgrading sequences is not supported\");\n         }\n-        apply(target);\n+\n+        // Only if VERSION1 then we want to apply, else fall through\n+        // Re-creating a sequence can have unintended consequences.\n+        if (this.version == 1 && priorVersion == 0) {\n+            apply(target);\n+        }", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMjQ1OQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401932459", "body": "Originally I think this class was intended to be generic / agnostic to the specific schema getting created.  This is why its in `fhir-database-utils` and not `fhir-persistence-schema`", "bodyText": "Originally I think this class was intended to be generic / agnostic to the specific schema getting created.  This is why its in fhir-database-utils and not fhir-persistence-schema", "bodyHTML": "<p dir=\"auto\">Originally I think this class was intended to be generic / agnostic to the specific schema getting created.  This is why its in <code>fhir-database-utils</code> and not <code>fhir-persistence-schema</code></p>", "author": "lmsurpre", "createdAt": "2020-04-01T21:53:22Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyMaster.java", "diffHunk": "@@ -15,19 +15,27 @@\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n-import com.ibm.fhir.database.utils.api.AllVersionHistoryService;\n import com.ibm.fhir.database.utils.api.DataAccessException;\n import com.ibm.fhir.database.utils.api.IDatabaseAdapter;\n import com.ibm.fhir.database.utils.api.IDatabaseTranslator;\n+import com.ibm.fhir.database.utils.api.ITransactionProvider;\n import com.ibm.fhir.database.utils.api.IVersionHistoryService;\n+import com.ibm.fhir.database.utils.common.JdbcConnectionProvider;\n+import com.ibm.fhir.database.utils.common.JdbcPropertyAdapter;\n import com.ibm.fhir.database.utils.common.JdbcTarget;\n import com.ibm.fhir.database.utils.common.PrintTarget;\n import com.ibm.fhir.database.utils.model.PhysicalDataModel;\n+import com.ibm.fhir.database.utils.pool.PoolConnectionProvider;\n+import com.ibm.fhir.database.utils.transaction.SimpleTransactionProvider;\n+import com.ibm.fhir.database.utils.version.CreateVersionHistory;\n+import com.ibm.fhir.database.utils.version.VersionHistoryService;\n \n /**\n  * Set up an instance of Derby for use with unit tests\n  */\n public class DerbyMaster implements AutoCloseable {\n+    private static final String SCHEMA_NAME = \"FHIRDATA\";\n+    private static final String ADMIN_SCHEMA_NAME = \"FHIR_ADMIN\";", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNzU3MQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401937571", "bodyText": "I totally understand.  any suggestions?", "author": "prb112", "createdAt": "2020-04-01T22:05:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMjQ1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk4MDUyMw==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401980523", "bodyText": "Fixed", "author": "prb112", "createdAt": "2020-04-02T00:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzMjQ1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNDk1NQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401934955", "body": "this skips the apply when priorVersion == null, which is what that `AllVersionHistoryService` service always passes.  I see we don't use that any more, but i think we should also handle nulls here unless we totally remove it", "bodyText": "this skips the apply when priorVersion == null, which is what that AllVersionHistoryService service always passes.  I see we don't use that any more, but i think we should also handle nulls here unless we totally remove it", "bodyHTML": "<p dir=\"auto\">this skips the apply when priorVersion == null, which is what that <code>AllVersionHistoryService</code> service always passes.  I see we don't use that any more, but i think we should also handle nulls here unless we totally remove it</p>", "author": "lmsurpre", "createdAt": "2020-04-01T21:58:54Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java", "diffHunk": "@@ -37,7 +38,12 @@ public void apply(Integer priorVersion, IDatabaseAdapter target) {\n         if (priorVersion != null && priorVersion > 0 && this.version > priorVersion) {\n             throw new UnsupportedOperationException(\"Upgrading sequences is not supported\");\n         }\n-        apply(target);\n+\n+        // Only if VERSION1 then we want to apply, else fall through\n+        // Re-creating a sequence can have unintended consequences.\n+        if (this.version == 1 && priorVersion == 0) {\n+            apply(target);\n+        }", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk4MDY3MA==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401980670", "bodyText": "yes - I accepted your change - a good guard is now in place.", "author": "prb112", "createdAt": "2020-04-02T00:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNDk1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNTIyNA==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401935224", "body": "```suggestion\r\n     * Create a new FHIRPersistenceContext configure with a FHIRHistoryContext\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Create a anew FHIRPersistenceContext configure with a FHIRHistoryContext\n          \n          \n            \n                 * Create a new FHIRPersistenceContext configure with a FHIRHistoryContext", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Create</span> a <span class=\"x x-first x-last\">anew</span> <span class=\"pl-smi\">FHIRPersistenceContext</span> configure with a <span class=\"pl-smi\">FHIRHistoryContext</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Create</span> a <span class=\"pl-k x x-first x-last\">new</span> FHIRPersistenceContext configure with a FHIRHistoryContext</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-04-01T21:59:35Z", "path": "fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/test/spec/R4JDBCExamplesProcessor.java", "diffHunk": "@@ -182,7 +180,7 @@ protected FHIRPersistenceContext createPersistenceContext() {\n     }\n \n     /**\n-     * Createa anew FHIRPersistenceContext configure with a FHIRHistoryContext\n+     * Create a anew FHIRPersistenceContext configure with a FHIRHistoryContext", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNTYwMg==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401935602", "body": "good to see that we don't create the versionhistoryService every time calling createSchema now!\r\njust double check, createSchema is never called before runWithAdapter(), correct? ", "bodyText": "good to see that we don't create the versionhistoryService every time calling createSchema now!\njust double check, createSchema is never called before runWithAdapter(), correct?", "bodyHTML": "<p dir=\"auto\">good to see that we don't create the versionhistoryService every time calling createSchema now!<br>\njust double check, createSchema is never called before runWithAdapter(), correct?</p>", "author": "albertwang-ibm", "createdAt": "2020-04-01T22:00:26Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyMaster.java", "diffHunk": "@@ -162,7 +173,7 @@ public IDatabaseTranslator getTranslator() {\n      * @param pdm\n      */\n     public void createSchema(PhysicalDataModel pdm) {\n-        createSchema(new AllVersionHistoryService(), pdm);\n+        createSchema(vhs, pdm);", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NzcyMQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401957721", "bodyText": "indirectly - yes", "author": "prb112", "createdAt": "2020-04-01T22:56:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNTYwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNjQ1Mg==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401936452", "body": "```suggestion\r\n        if (this.version == 1 && (priorVersion == 0 || priorVersion == null)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (this.version == 1 && priorVersion == 0) {\n          \n          \n            \n                    if (this.version == 1 && (priorVersion == 0 || priorVersion == null)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>version <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">&amp;&amp;</span> priorVersion <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>version <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span>priorVersion <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">||</span><span class=\"x\"> priorVersion </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">)</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-04-01T22:02:33Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java", "diffHunk": "@@ -37,7 +38,12 @@ public void apply(Integer priorVersion, IDatabaseAdapter target) {\n         if (priorVersion != null && priorVersion > 0 && this.version > priorVersion) {\n             throw new UnsupportedOperationException(\"Upgrading sequences is not supported\");\n         }\n-        apply(target);\n+\n+        // Only if VERSION1 then we want to apply, else fall through\n+        // Re-creating a sequence can have unintended consequences.\n+        if (this.version == 1 && priorVersion == 0) {", "originalCommit": "ee301cd388e3a8bc837193f5dbb0d39da48818ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzODM5Mg==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401938392", "bodyText": "I didn't run into the situation where it was null.  I had some logging statements, and it was always zero or 1", "author": "prb112", "createdAt": "2020-04-01T22:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNjQ1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzODQ4MQ==", "url": "https://github.com/IBM/FHIR/pull/883#discussion_r401938481", "bodyText": "Adding as it's a good guard (just in case)", "author": "prb112", "createdAt": "2020-04-01T22:07:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNjQ1Mg=="}], "type": "inlineReview"}, {"oid": "b58e037653ea68a08e57afe75198be7c0f261a58", "url": "https://github.com/IBM/FHIR/commit/b58e037653ea68a08e57afe75198be7c0f261a58", "message": "Update fhir-persistence-jdbc/src/test/java/com/ibm/fhir/persistence/jdbc/test/spec/R4JDBCExamplesProcessor.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-Authored-By: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-04-01T22:05:27Z", "type": "commit"}, {"oid": "6db28ce46cba643864b8b7618027e656b5087b99", "url": "https://github.com/IBM/FHIR/commit/6db28ce46cba643864b8b7618027e656b5087b99", "message": "Update fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/Sequence.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-Authored-By: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-04-01T22:07:37Z", "type": "commit"}, {"oid": "47e2c8fb64917286bcd4e471ac6263b12d28aa47", "url": "https://github.com/IBM/FHIR/commit/47e2c8fb64917286bcd4e471ac6263b12d28aa47", "message": "Update for 4.1.0 Release\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-01T22:22:15Z", "type": "commit"}, {"oid": "847544244150ab7207a708fa404188a6d676ef97", "url": "https://github.com/IBM/FHIR/commit/847544244150ab7207a708fa404188a6d676ef97", "message": "Merge branch '410-fix-release' of github.com:IBM/FHIR into 410-fix-release", "committedDate": "2020-04-01T22:22:31Z", "type": "commit"}, {"oid": "1ee62048f4924b2b9517a4d36fcecaba4ae8e95f", "url": "https://github.com/IBM/FHIR/commit/1ee62048f4924b2b9517a4d36fcecaba4ae8e95f", "message": "Update for 4.1.0 Release - tested the javadocs flow\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-04-02T00:05:52Z", "type": "commit"}]}