{"pr_number": 1677, "pr_title": "Private Memory on Db2 results in -930 errors at load #1527", "pr_author": "prb112", "pr_createdAt": "2020-11-07T02:02:47Z", "pr_url": "https://github.com/IBM/FHIR/pull/1677", "timeline": [{"oid": "24f121f8b858407695877701d1f1936636731d28", "url": "https://github.com/IBM/FHIR/commit/24f121f8b858407695877701d1f1936636731d28", "message": "Private Memory on Db2 results in -930 errors at load #1527\n\nThis error is only on the Db2 and isolated to the Db2 stored procedure - add_any_resource.\n\nScenario\n- Load a Bundle with multiple if not hundreds of resources in a simultaneous way within a single Connection\n- Note, the Bundle can be set as Transaction or Batch.\n- Db2 with 8GB of memory without INSTANCE_MEMORY=Automatic\n- The simultaneous load with ~10 to 20 threads.\n- The result is *SQL0930N There is not enough storage available to process the statement*.\n\nIn the underlying Memory Allocation, the 2GB size cause a block of memory to be reserved, where it accumulates. So if a new large request comes up requiring substantial chunk of memory, this chunk can only be freshly acquired from so far unused range of addresses, or it may fail.  If the p_payload is lowered to 10M, then the code operates as expected and the same workload can function with 200 threads. Note, it's dependent on the number of CALL to add_any_resource.\n\nThis PR is opened to discuss in more detail on an approach.  I'd like to lower the 2GB to 10M.  If needed we can branch to a LARGE size Stored Procedure if the file is larger than 10M.\n\nReference: https://www.ibm.com/support/pages/db2-content-management-application-may-receive-sql0930n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-07T01:58:27Z", "type": "commit"}, {"oid": "04652994181754ca2614233e318f27e0eecd7cc1", "url": "https://github.com/IBM/FHIR/commit/04652994181754ca2614233e318f27e0eecd7cc1", "message": "fix: per code review added dynamicity for different sized blob objects\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-13T02:33:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MjEyNA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522592124", "body": "where does it actually set the bytes for the BLOB column?!", "bodyText": "where does it actually set the bytes for the BLOB column?!", "bodyHTML": "<p dir=\"auto\">where does it actually set the bytes for the BLOB column?!</p>", "author": "lmsurpre", "createdAt": "2020-11-13T03:33:34Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -549,6 +564,19 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n \n             resource.setId(stmt.getLong(7));\n \n+            if (large) {\n+                // Use the long id to update the record in the database.\n+                String largeStmtString = String.format(LARGE_BLOB, getSchemaName(), resource.getResourceType());\n+                PreparedStatement ps = connection.prepareStatement(largeStmtString);\n+                ps.setLong(1, stmt.getLong(7));", "originalCommit": "04652994181754ca2614233e318f27e0eecd7cc1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk0Nzg3MQ==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522947871", "bodyText": "Thanks, silly me - I was doing this late at night", "author": "prb112", "createdAt": "2020-11-13T13:25:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MjEyNA=="}], "type": "inlineReview"}, {"oid": "7f9710ff252c5a96deb8244d7170a788ffdb68a7", "url": "https://github.com/IBM/FHIR/commit/7f9710ff252c5a96deb8244d7170a788ffdb68a7", "message": "fix: added the setBytes\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-13T13:27:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MzUwNg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522963506", "body": "```suggestion\r\n                        log.fine(\"DB update complete. SQL=[\" + largeStmtString + \"]  executionTime=\" + dbCallDuration2 + \"ms\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    log.fine(\"DB search by ids complete. SQL=[\" + largeStmtString + \"]  executionTime=\" + dbCallDuration2 + \"ms\");\n          \n          \n            \n                                    log.fine(\"DB update complete. SQL=[\" + largeStmtString + \"]  executionTime=\" + dbCallDuration2 + \"ms\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        log<span class=\"pl-k\">.</span>fine(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DB <span class=\"x x-first x-last\">search by ids</span> complete. SQL=[<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> largeStmtString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]  executionTime=<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> dbCallDuration2 <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ms<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        log<span class=\"pl-k\">.</span>fine(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DB <span class=\"x x-first x-last\">update</span> complete. SQL=[<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> largeStmtString <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]  executionTime=<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> dbCallDuration2 <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ms<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "prb112", "createdAt": "2020-11-13T13:54:18Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -549,6 +564,21 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n \n             resource.setId(stmt.getLong(7));\n \n+            if (large) {\n+                // Use the long id to update the record in the database.\n+                String largeStmtString = String.format(LARGE_BLOB, getSchemaName(), resource.getResourceType());\n+                try (PreparedStatement ps = connection.prepareStatement(largeStmtString);) {\n+                    ps.setBytes(1, resource.getData());\n+                    ps.setLong(2, stmt.getLong(7));\n+                    long dbCallStartTime2 = System.nanoTime();\n+                    stmt.execute();\n+                    double dbCallDuration2 = (System.nanoTime() - dbCallStartTime2) / 1e6;\n+                    if (log.isLoggable(Level.FINE)) {\n+                        log.fine(\"DB search by ids complete. SQL=[\" + largeStmtString + \"]  executionTime=\" + dbCallDuration2 + \"ms\");", "originalCommit": "7f9710ff252c5a96deb8244d7170a788ffdb68a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "url": "https://github.com/IBM/FHIR/commit/9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "message": "Update fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-13T13:54:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3NzMyNg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522977326", "body": "That's going to overwrite the data for every version. You need to use `resource_id = ?` which is the PK for this table.", "bodyText": "That's going to overwrite the data for every version. You need to use resource_id = ? which is the PK for this table.", "bodyHTML": "<p dir=\"auto\">That's going to overwrite the data for every version. You need to use <code>resource_id = ?</code> which is the PK for this table.</p>", "author": "punktilious", "createdAt": "2020-11-13T14:17:44Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -57,6 +57,12 @@\n public class ResourceDAOImpl extends FHIRDbDAOImpl implements ResourceDAO {\n     private static final Logger log = Logger.getLogger(ResourceDAOImpl.class.getName());\n     private static final String CLASSNAME = ResourceDAOImpl.class.getName();\n+\n+    // Per issue with private memory in db2, we have set this to 1M.\n+    // Anything larger than 1M is then inserted into the db with an update.\n+    private static final int SIZE_LIMIT = 1048576;\n+    private static final String LARGE_BLOB = \"UPDATE %s.%s_RESOURCES SET data = ? WHERE logical_resource_id = ?\";", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDM1Mg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523240352", "bodyText": "Right - great point, fixed", "author": "prb112", "createdAt": "2020-11-13T21:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3NzMyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3ODI1OQ==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522978259", "body": "Move to FhirSchemaConstants (if fhir-persistence-schema is already a dependency). ", "bodyText": "Move to FhirSchemaConstants (if fhir-persistence-schema is already a dependency).", "bodyHTML": "<p dir=\"auto\">Move to FhirSchemaConstants (if fhir-persistence-schema is already a dependency).</p>", "author": "punktilious", "createdAt": "2020-11-13T14:19:16Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -57,6 +57,12 @@\n public class ResourceDAOImpl extends FHIRDbDAOImpl implements ResourceDAO {\n     private static final Logger log = Logger.getLogger(ResourceDAOImpl.class.getName());\n     private static final String CLASSNAME = ResourceDAOImpl.class.getName();\n+\n+    // Per issue with private memory in db2, we have set this to 1M.\n+    // Anything larger than 1M is then inserted into the db with an update.\n+    private static final int SIZE_LIMIT = 1048576;", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDI2Mg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523240262", "bodyText": "Done", "author": "prb112", "createdAt": "2020-11-13T21:24:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3ODI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3ODY4Nw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522978687", "body": "I think it should be:\r\n```suggestion\r\n    private static final String LARGE_BLOB = \"UPDATE %s.%s_RESOURCES SET data = ? WHERE resource_id = ?\";\r\n```\r\n\r\nWould like to see a test that creates a large resource, updates it, then reads both versions and confirms they are right.", "bodyText": "I think it should be:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final String LARGE_BLOB = \"UPDATE %s.%s_RESOURCES SET data = ? WHERE logical_resource_id = ?\";\n          \n          \n            \n                private static final String LARGE_BLOB = \"UPDATE %s.%s_RESOURCES SET data = ? WHERE resource_id = ?\";\n          \n      \n    \n    \n  \n\nWould like to see a test that creates a large resource, updates it, then reads both versions and confirms they are right.", "bodyHTML": "<p dir=\"auto\">I think it should be:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">LARGE_BLOB</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UPDATE %s.%s_RESOURCES SET data = ? WHERE <span class=\"x x-first x-last\">logical_resource_id</span> = ?<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">LARGE_BLOB</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UPDATE %s.%s_RESOURCES SET data = ? WHERE <span class=\"x x-first x-last\">resource_id</span> = ?<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Would like to see a test that creates a large resource, updates it, then reads both versions and confirms they are right.</p>", "author": "lmsurpre", "createdAt": "2020-11-13T14:19:56Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -57,6 +57,12 @@\n public class ResourceDAOImpl extends FHIRDbDAOImpl implements ResourceDAO {\n     private static final Logger log = Logger.getLogger(ResourceDAOImpl.class.getName());\n     private static final String CLASSNAME = ResourceDAOImpl.class.getName();\n+\n+    // Per issue with private memory in db2, we have set this to 1M.\n+    // Anything larger than 1M is then inserted into the db with an update.\n+    private static final int SIZE_LIMIT = 1048576;\n+    private static final String LARGE_BLOB = \"UPDATE %s.%s_RESOURCES SET data = ? WHERE logical_resource_id = ?\";", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTExMw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523239113", "bodyText": "Fixed", "author": "prb112", "createdAt": "2020-11-13T21:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3ODY4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3OTM1Nw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522979357", "body": "You should specify the actual data-type here: java.sql.Types.BLOB.", "bodyText": "You should specify the actual data-type here: java.sql.Types.BLOB.", "bodyHTML": "<p dir=\"auto\">You should specify the actual data-type here: java.sql.Types.BLOB.</p>", "author": "punktilious", "createdAt": "2020-11-13T14:20:58Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -535,7 +541,16 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n             stmt = connection.prepareCall(stmtString);\n             stmt.setString(1, resource.getResourceType());\n             stmt.setString(2, resource.getLogicalId());\n-            stmt.setBytes(3, resource.getData());\n+\n+            boolean large = false;\n+            if (SIZE_LIMIT < resource.getData().length) {\n+                // Outside of the normal flow we have a BIG JSON or XML\n+                stmt.setNull(3, java.sql.Types.NULL);", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTM0Nw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523239347", "bodyText": "Done", "author": "prb112", "createdAt": "2020-11-13T21:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3OTM1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4MTQxMg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522981412", "body": "For table access, don't need to qualify with the schema name, although it doesn't hurt.", "bodyText": "For table access, don't need to qualify with the schema name, although it doesn't hurt.", "bodyHTML": "<p dir=\"auto\">For table access, don't need to qualify with the schema name, although it doesn't hurt.</p>", "author": "punktilious", "createdAt": "2020-11-13T14:24:16Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -549,6 +564,21 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n \n             resource.setId(stmt.getLong(7));\n \n+            if (large) {\n+                // Use the long id to update the record in the database.\n+                String largeStmtString = String.format(LARGE_BLOB, getSchemaName(), resource.getResourceType());", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzOTIxMg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523239212", "bodyText": "Thanks", "author": "prb112", "createdAt": "2020-11-13T21:22:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4MTQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4MTg2OQ==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522981869", "body": "; is redundant", "bodyText": "; is redundant", "bodyHTML": "<p dir=\"auto\">; is redundant</p>", "author": "punktilious", "createdAt": "2020-11-13T14:25:00Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -549,6 +564,21 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n \n             resource.setId(stmt.getLong(7));\n \n+            if (large) {\n+                // Use the long id to update the record in the database.\n+                String largeStmtString = String.format(LARGE_BLOB, getSchemaName(), resource.getResourceType());\n+                try (PreparedStatement ps = connection.prepareStatement(largeStmtString);) {", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDYxOA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523240618", "bodyText": "Yeah - sometimes I get in the habit, as I often add second closeables, I've removed in this case", "author": "prb112", "createdAt": "2020-11-13T21:25:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4MTg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk4Mjk1Nw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r522982957", "body": "I'd put stmt.getLong(7) into a local variable like dbResourceId just so we know what is being passed here.", "bodyText": "I'd put stmt.getLong(7) into a local variable like dbResourceId just so we know what is being passed here.", "bodyHTML": "<p dir=\"auto\">I'd put stmt.getLong(7) into a local variable like dbResourceId just so we know what is being passed here.</p>", "author": "punktilious", "createdAt": "2020-11-13T14:26:46Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -549,6 +564,21 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n \n             resource.setId(stmt.getLong(7));\n \n+            if (large) {\n+                // Use the long id to update the record in the database.\n+                String largeStmtString = String.format(LARGE_BLOB, getSchemaName(), resource.getResourceType());\n+                try (PreparedStatement ps = connection.prepareStatement(largeStmtString);) {\n+                    ps.setBytes(1, resource.getData());\n+                    ps.setLong(2, stmt.getLong(7));", "originalCommit": "9c44d38ee51a3fcb7f1cf1d89882c959c1036460", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a9b353d1d7f22f7155f3fac9f02f7b9ab5f04c7f", "url": "https://github.com/IBM/FHIR/commit/a9b353d1d7f22f7155f3fac9f02f7b9ab5f04c7f", "message": "Private Memory on Db2 results in -930 errors at load #1527\n\n- Implement recommendations from Code Review\n- Add Tests\n- Explicit setting for the BLOB size\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-13T22:07:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzMwMTE2MA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523301160", "body": "I know robin recommended to save this to a local variable, but I really don't like this variable name.  It makes it seem like it is the LOGICAL_RESOURCE_ID from this table but it is actually the RESOURCE_ID.\r\n\r\nAside:  I also don't love that we use the name RESOURCE_ID for this column...I'd have preferred something like `VERSIONED_RESOURCE_ID` or `RESOURCE_VERSION_ROW_ID` or similar, but we've had that since forever.\r\nSince we probably don't want to touch the schema, maybe we can at least use that to name the variable?\r\n```suggestion\r\n            long versionedResourceRowId = stmt.getLong(7);\r\n```", "bodyText": "I know robin recommended to save this to a local variable, but I really don't like this variable name.  It makes it seem like it is the LOGICAL_RESOURCE_ID from this table but it is actually the RESOURCE_ID.\nAside:  I also don't love that we use the name RESOURCE_ID for this column...I'd have preferred something like VERSIONED_RESOURCE_ID or RESOURCE_VERSION_ROW_ID or similar, but we've had that since forever.\nSince we probably don't want to touch the schema, maybe we can at least use that to name the variable?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        long logicalResourceId = stmt.getLong(7);\n          \n          \n            \n                        long versionedResourceRowId = stmt.getLong(7);", "bodyHTML": "<p dir=\"auto\">I know robin recommended to save this to a local variable, but I really don't like this variable name.  It makes it seem like it is the LOGICAL_RESOURCE_ID from this table but it is actually the RESOURCE_ID.</p>\n<p dir=\"auto\">Aside:  I also don't love that we use the name RESOURCE_ID for this column...I'd have preferred something like <code>VERSIONED_RESOURCE_ID</code> or <code>RESOURCE_VERSION_ROW_ID</code> or similar, but we've had that since forever.<br>\nSince we probably don't want to touch the schema, maybe we can at least use that to name the variable?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">long</span> <span class=\"x x-first x-last\">logicalResourceId</span> <span class=\"pl-k\">=</span> stmt<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">7</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">long</span> <span class=\"x x-first x-last\">versionedResourceRowId</span> <span class=\"pl-k\">=</span> stmt<span class=\"pl-k\">.</span>getLong(<span class=\"pl-c1\">7</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-11-14T00:38:08Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -547,7 +563,23 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n             long latestTime = System.nanoTime();\n             double dbCallDuration = (latestTime-dbCallStartTime)/1e6;\n \n-            resource.setId(stmt.getLong(7));\n+            long logicalResourceId = stmt.getLong(7);", "originalCommit": "a9b353d1d7f22f7155f3fac9f02f7b9ab5f04c7f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzMwNDQ3Ng==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r523304476", "bodyText": "Actually, scratch that, it is the logical resource id that we get back.  In this case the variable was named correctly but the update command won't.  We need to get the RESOURCE_ID (and not the LOGICAL_RESOURCE_ID) that was just written so that we can update just that row.", "author": "lmsurpre", "createdAt": "2020-11-14T00:55:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzMwMTE2MA=="}], "type": "inlineReview"}, {"oid": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "url": "https://github.com/IBM/FHIR/commit/cb76e7eed12715fd0cb8397a55a66adec54b8750", "message": "Private Memory on Db2 results in -930 errors at load #1527\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-15T22:01:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MDI1NQ==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524350255", "body": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyText": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyHTML": "<p dir=\"auto\">bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:25:35Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -178,7 +188,7 @@ protected ParameterTransactionDataImpl getTransactionData() {\n \n     @Override\n     public Resource read(String logicalId, String resourceType)\n-            throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MDMxNA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524350314", "body": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyText": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyHTML": "<p dir=\"auto\">bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:25:41Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -200,7 +210,7 @@ public Resource read(String logicalId, String resourceType)\n \n     @Override\n     public Resource versionRead(String logicalId, String resourceType, int versionId)\n-            throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MDYzMg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524350632", "body": "bad formatting change.  should be a double-indent", "bodyText": "bad formatting change.  should be a double-indent", "bodyHTML": "<p dir=\"auto\">bad formatting change.  should be a double-indent</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:26:06Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -253,7 +265,7 @@ protected Resource createDTO(ResultSet resultSet) throws FHIRPersistenceDataAcce\n \n     @Override\n     public List<Resource> history(String resourceType, String logicalId, Timestamp fromDateTime, int offset, int maxResults)\n-                                    throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MDk2NA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524350964", "body": "double-indent", "bodyText": "double-indent", "bodyHTML": "<p dir=\"auto\">double-indent</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:26:29Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -281,13 +293,14 @@ protected Resource createDTO(ResultSet resultSet) throws FHIRPersistenceDataAcce\n                 }\n             }\n         } finally {\n-            log.exiting(CLASSNAME, METHODNAME, Arrays.toString(new Object[] {resources}));\n+            log.exiting(CLASSNAME, METHODNAME, Arrays.toString(new Object[] { resources }));\n         }\n         return resources;\n     }\n \n     @Override\n-    public int historyCount(String resourceType, String logicalId, Timestamp fromDateTime) throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {\n+    public int historyCount(String resourceType, String logicalId, Timestamp fromDateTime)\n+        throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MTEwNg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524351106", "body": "double-indent", "bodyText": "double-indent", "bodyHTML": "<p dir=\"auto\">double-indent</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:26:39Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -350,7 +363,7 @@ public void setPersistenceContext(FHIRPersistenceContext context) {\n \n     @Override\n     public Map<String, Integer> readAllResourceTypeNames()\n-                                         throws FHIRPersistenceDBConnectException, FHIRPersistenceDataAccessException {\n+        throws FHIRPersistenceDBConnectException, FHIRPersistenceDataAccessException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1MjAzNg==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524352036", "body": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyText": "bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method", "bodyHTML": "<p dir=\"auto\">bad formatting change.  the double-indent signifies that its a continuation of the previous line so that it doesn't look like the first line of the method</p>", "author": "lmsurpre", "createdAt": "2020-11-16T15:27:50Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -720,7 +739,7 @@ public int searchCount(String sqlSelectCount) throws FHIRPersistenceDataAccessEx\n \n     @Override\n     public List<String> searchStringValues(SqlQueryData queryData)\n-            throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {\n+        throws FHIRPersistenceDataAccessException, FHIRPersistenceDBConnectException {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MzY4NA==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524463684", "body": "&& resource.getData() != null", "bodyText": "&& resource.getData() != null", "bodyHTML": "<p dir=\"auto\">&amp;&amp; resource.getData() != null</p>", "author": "punktilious", "createdAt": "2020-11-16T17:55:57Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -535,19 +558,46 @@ public Resource insert(Resource resource, List<ExtractedParameterValue> paramete\n             stmt = connection.prepareCall(stmtString);\n             stmt.setString(1, resource.getResourceType());\n             stmt.setString(2, resource.getLogicalId());\n-            stmt.setBytes(3, resource.getData());\n+\n+            // Check for large objects, and branch around it.\n+            boolean large = FhirSchemaConstants.STORED_PROCEDURE_SIZE_LIMIT < resource.getData().length;\n+            if (large) {\n+                // Outside of the normal flow we have a BIG JSON or XML\n+                stmt.setNull(3, Types.BLOB);\n+            } else {\n+                // Normal Flow, we set the data\n+                stmt.setBytes(3, resource.getData());\n+            }\n \n             lastUpdated = resource.getLastUpdated();\n             stmt.setTimestamp(4, lastUpdated, UTC);\n             stmt.setString(5, resource.isDeleted() ? \"Y\": \"N\");\n             stmt.setInt(6, resource.getVersionId());\n             stmt.registerOutParameter(7, Types.BIGINT);\n+            stmt.registerOutParameter(8, Types.BIGINT);\n \n             stmt.execute();\n             long latestTime = System.nanoTime();\n             double dbCallDuration = (latestTime-dbCallStartTime)/1e6;\n \n             resource.setId(stmt.getLong(7));\n+            long versionedResourceRowId = stmt.getLong(8);\n+            if (large) {", "originalCommit": "cb76e7eed12715fd0cb8397a55a66adec54b8750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MTA2Mw==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524491063", "bodyText": "it would have thrown a NPE prior to this.", "author": "prb112", "createdAt": "2020-11-16T18:40:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2MzY4NA=="}], "type": "inlineReview"}, {"oid": "7a691a9bfe33cc214dcd3208b8c3bc6d171cb247", "url": "https://github.com/IBM/FHIR/commit/7a691a9bfe33cc214dcd3208b8c3bc6d171cb247", "message": "Private Memory on Db2 results in -930 errors at load #1527\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-16T21:33:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDcwMjA4OQ==", "url": "https://github.com/IBM/FHIR/pull/1677#discussion_r524702089", "body": "double-indent pls", "bodyText": "double-indent pls", "bodyHTML": "<p dir=\"auto\">double-indent pls</p>", "author": "lmsurpre", "createdAt": "2020-11-16T22:48:54Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -142,8 +142,7 @@\n      * @param trxSyncRegistry\n      */\n     public ResourceDAOImpl(Connection c, String schemaName, FHIRDbFlavor flavor, TransactionSynchronizationRegistry trxSynchRegistry,\n-            FHIRPersistenceJDBCCache cache, IResourceReferenceDAO rrd,\n-            ParameterTransactionDataImpl ptdi) {\n+        FHIRPersistenceJDBCCache cache, IResourceReferenceDAO rrd, ParameterTransactionDataImpl ptdi) {", "originalCommit": "7a691a9bfe33cc214dcd3208b8c3bc6d171cb247", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e185382b83e6d4344ee6e86ad3fc247995db419a", "url": "https://github.com/IBM/FHIR/commit/e185382b83e6d4344ee6e86ad3fc247995db419a", "message": "Private Memory on Db2 results in -930 errors at load #1527\n\n\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>", "committedDate": "2020-11-17T01:51:50Z", "type": "commit"}]}