{"pr_number": 1579, "pr_title": "issue #1351 - Check SearchParameter search restrictions", "pr_author": "tbieste", "pr_createdAt": "2020-10-13T21:44:35Z", "pr_url": "https://github.com/IBM/FHIR/pull/1579", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzcwMA==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r504317700", "body": "We may want to add a configuration to turn this feature on/off.  \r\nfhirServer/search/checkRestrictions as a parameter?", "bodyText": "We may want to add a configuration to turn this feature on/off.\nfhirServer/search/checkRestrictions as a parameter?", "bodyHTML": "<p dir=\"auto\">We may want to add a configuration to turn this feature on/off.<br>\nfhirServer/search/checkRestrictions as a parameter?</p>", "author": "prb112", "createdAt": "2020-10-13T23:36:46Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -800,7 +810,80 @@ public static FHIRSearchContext parseQueryParameters(Class<?> resourceType,\n         context.setSearchParameters(parameters);\n         return context;\n     }\n+    \n+    /**\n+     * Checks the query parameters (with the same parameter code) against any search restrictions specified\n+     * in the SearchParameter resource for that parameter code.\n+     * \n+     * @param parameterCode\n+     *            the parameter code\n+     * @param searchParameter\n+     *            the SearchParameter resource\n+     * @param queryParameters\n+     *            the query parameters to check\n+     * @throws FHIRSearchException\n+     *             if a search restriction is found that is not followed\n+     */\n+    private static void checkSearchParameterRestrictions(String parameterCode, SearchParameter searchParameter, List<QueryParameter> queryParameters)\n+        throws FHIRSearchException {\n+", "originalCommit": "c4d080202f4fd9f0b3de8a7c2afe43e6c1ec74e6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODYzMw==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r504718633", "bodyText": "Hopefully not. I was using the Draft Pull Request to run the e2e tests before this is ready for review, and noticed a fix I needed to make.  We'll see if that takes care of the errors.", "author": "tbieste", "createdAt": "2020-10-14T14:22:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzcwMA=="}], "type": "inlineReview"}, {"oid": "108f210b6c6c2657b8677d1930e1a2c0a2c65c8d", "url": "https://github.com/IBM/FHIR/commit/108f210b6c6c2657b8677d1930e1a2c0a2c65c8d", "message": "issue #1351 - Check SearchParameter search restrictions\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-14T14:19:27Z", "type": "forcePushed"}, {"oid": "9ec0c79508c1e967b32528027fa6b1f682a3b02b", "url": "https://github.com/IBM/FHIR/commit/9ec0c79508c1e967b32528027fa6b1f682a3b02b", "message": "issue #1351 - Check SearchParameter search restrictions\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-15T18:56:50Z", "type": "commit"}, {"oid": "b11e8a420a26749dabf3c60c76df676a28d32541", "url": "https://github.com/IBM/FHIR/commit/b11e8a420a26749dabf3c60c76df676a28d32541", "message": "issue #1351 - Update config with resources group for search parameters\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-15T22:02:27Z", "type": "forcePushed"}, {"oid": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "url": "https://github.com/IBM/FHIR/commit/8398b13aea4be2a85a612d54ef4cc0a05af17bed", "message": "issue #1351 - Update config with resources group for search parameters\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-15T23:44:43Z", "type": "commit"}, {"oid": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "url": "https://github.com/IBM/FHIR/commit/8398b13aea4be2a85a612d54ef4cc0a05af17bed", "message": "issue #1351 - Update config with resources group for search parameters\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-15T23:44:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4MTQyMw==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506381423", "body": "Paul wasn't a big fan of this property name, so we just had a chat and settled on `supportOmittedResourceTypes`:\r\n```suggestion\r\n    public static final String PROPERTY_FIELD_RESOURCES_SUPPORT_OMITTED = \"supportOmittedResourceTypes\";\r\n```", "bodyText": "Paul wasn't a big fan of this property name, so we just had a chat and settled on supportOmittedResourceTypes:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED = \"includeOmittedResourceTypes\";\n          \n          \n            \n                public static final String PROPERTY_FIELD_RESOURCES_SUPPORT_OMITTED = \"supportOmittedResourceTypes\";", "bodyHTML": "<p dir=\"auto\">Paul wasn't a big fan of this property name, so we just had a chat and settled on <code>supportOmittedResourceTypes</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">includeOmittedResourceTypes</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">PROPERTY_FIELD_RESOURCES_SUPPORT_OMITTED</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">supportOmittedResourceTypes</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-16T12:52:04Z", "path": "fhir-config/src/main/java/com/ibm/fhir/config/FHIRConfiguration.java", "diffHunk": "@@ -36,8 +36,13 @@\n     public static final String PROPERTY_CAPABILITY_STATEMENT_CACHE = \"fhirServer/core/capabilityStatementCacheTimeout\";\n     public static final String PROPERTY_EXTENDED_CODEABLE_CONCEPT_VALIDATION = \"fhirServer/core/extendedCodeableConceptValidation\";\n \n-    public static final String PROPERTY_SEARCH_PARAMETER_FILTER = \"fhirServer/searchParameterFilter\";\n-\n+    // Resources properties\n+    public static final String PROPERTY_RESOURCES = \"fhirServer/resources\";\n+    public static final String PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED = \"includeOmittedResourceTypes\";", "originalCommit": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4ODAxMQ==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506388011", "bodyText": "What about openas the property name? Where open=true allows inclusion of resources not explicitly defined in the configuration.", "author": "JohnTimm", "createdAt": "2020-10-16T12:59:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4MTQyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMTEzMg==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506401132", "bodyText": "Talked with Paul and we both like it.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED = \"includeOmittedResourceTypes\";\n          \n          \n            \n                public static final String PROPERTY_FIELD_RESOURCES_OPEN = \"open\";", "author": "lmsurpre", "createdAt": "2020-10-16T13:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM4MTQyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMTUyNQ==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506401525", "body": "```suggestion\r\n                    if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_OPEN.equals(rsrcsEntry.getName())) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED.equals(rsrcsEntry.getName())) {\n          \n          \n            \n                                if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_OPEN.equals(rsrcsEntry.getName())) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">FHIRConfiguration</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED</span></span><span class=\"pl-k\">.</span>equals(rsrcsEntry<span class=\"pl-k\">.</span>getName())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">FHIRConfiguration</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">PROPERTY_FIELD_RESOURCES_OPEN</span></span><span class=\"pl-k\">.</span>equals(rsrcsEntry<span class=\"pl-k\">.</span>getName())) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-16T13:13:45Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -293,51 +295,72 @@ public static void init() {\n \n     /**\n      * Retrieves the search parameter filtering rules for the current tenant.\n-     *\n-     * @throws Exception\n+     * @return map of resource types to allowed search parameters URLs,\n+     * and may include '*' for resource type or search parameter URL.\n+     * @throws Exception an exception\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private static Map<String, List<String>> getFilterRules() throws Exception {\n         Map<String, List<String>> result = new HashMap<>();\n-\n-        // Retrieve the \"searchParameterFilter\" config property group.\n-        PropertyGroup spFilter = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_SEARCH_PARAMETER_FILTER);\n-        List<PropertyEntry> ruleEntries = null;\n-        if (spFilter != null) {\n-            ruleEntries = spFilter.getProperties();\n-        }\n-\n-        // If we have a non-empty set of filter rules, then walk through them and populate our map.\n-        if (ruleEntries != null && !ruleEntries.isEmpty()) {\n-            for (PropertyEntry ruleEntry : ruleEntries) {\n-                String resourceType = ruleEntry.getName();\n-\n-                // Make sure the value is a List<String>.\n-                if (ruleEntry.getValue() instanceof List<?>) {\n-                    for (Object listMember : (List<?>) ruleEntry.getValue()) {\n-                        if (!(listMember instanceof String)) {\n+        boolean includeOmittedRsrcTypes = true;\n+        \n+        // Retrieve the \"resources\" config property group.\n+        PropertyGroup rsrcsGroup = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_RESOURCES);\n+        if (rsrcsGroup != null) {\n+            List<PropertyEntry> rsrcsEntries = rsrcsGroup.getProperties();            \n+            if (rsrcsEntries != null && !rsrcsEntries.isEmpty()) {\n+                for (PropertyEntry rsrcsEntry : rsrcsEntries) {\n+                    \n+                    // Check special property for including omitted resource types\n+                    if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED.equals(rsrcsEntry.getName())) {", "originalCommit": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMjk1OQ==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506402959", "body": "```suggestion\r\n        boolean supportOmittedRsrcTypes = true;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean includeOmittedRsrcTypes = true;\n          \n          \n            \n                    boolean supportOmittedRsrcTypes = true;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">includeOmittedRsrcTypes</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">supportOmittedRsrcTypes</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-16T13:14:58Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -293,51 +295,72 @@ public static void init() {\n \n     /**\n      * Retrieves the search parameter filtering rules for the current tenant.\n-     *\n-     * @throws Exception\n+     * @return map of resource types to allowed search parameters URLs,\n+     * and may include '*' for resource type or search parameter URL.\n+     * @throws Exception an exception\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private static Map<String, List<String>> getFilterRules() throws Exception {\n         Map<String, List<String>> result = new HashMap<>();\n-\n-        // Retrieve the \"searchParameterFilter\" config property group.\n-        PropertyGroup spFilter = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_SEARCH_PARAMETER_FILTER);\n-        List<PropertyEntry> ruleEntries = null;\n-        if (spFilter != null) {\n-            ruleEntries = spFilter.getProperties();\n-        }\n-\n-        // If we have a non-empty set of filter rules, then walk through them and populate our map.\n-        if (ruleEntries != null && !ruleEntries.isEmpty()) {\n-            for (PropertyEntry ruleEntry : ruleEntries) {\n-                String resourceType = ruleEntry.getName();\n-\n-                // Make sure the value is a List<String>.\n-                if (ruleEntry.getValue() instanceof List<?>) {\n-                    for (Object listMember : (List<?>) ruleEntry.getValue()) {\n-                        if (!(listMember instanceof String)) {\n+        boolean includeOmittedRsrcTypes = true;", "originalCommit": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMzMxNQ==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506403315", "body": "```suggestion\r\n                            supportOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        includeOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();\n          \n          \n            \n                                        supportOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"x x-first x-last\">includeOmittedRsrcTypes</span> <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">Boolean</span>) rsrcsEntry<span class=\"pl-k\">.</span>getValue();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"x x-first x-last\">supportOmittedRsrcTypes</span> <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">Boolean</span>) rsrcsEntry<span class=\"pl-k\">.</span>getValue();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-16T13:15:14Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -293,51 +295,72 @@ public static void init() {\n \n     /**\n      * Retrieves the search parameter filtering rules for the current tenant.\n-     *\n-     * @throws Exception\n+     * @return map of resource types to allowed search parameters URLs,\n+     * and may include '*' for resource type or search parameter URL.\n+     * @throws Exception an exception\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private static Map<String, List<String>> getFilterRules() throws Exception {\n         Map<String, List<String>> result = new HashMap<>();\n-\n-        // Retrieve the \"searchParameterFilter\" config property group.\n-        PropertyGroup spFilter = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_SEARCH_PARAMETER_FILTER);\n-        List<PropertyEntry> ruleEntries = null;\n-        if (spFilter != null) {\n-            ruleEntries = spFilter.getProperties();\n-        }\n-\n-        // If we have a non-empty set of filter rules, then walk through them and populate our map.\n-        if (ruleEntries != null && !ruleEntries.isEmpty()) {\n-            for (PropertyEntry ruleEntry : ruleEntries) {\n-                String resourceType = ruleEntry.getName();\n-\n-                // Make sure the value is a List<String>.\n-                if (ruleEntry.getValue() instanceof List<?>) {\n-                    for (Object listMember : (List<?>) ruleEntry.getValue()) {\n-                        if (!(listMember instanceof String)) {\n+        boolean includeOmittedRsrcTypes = true;\n+        \n+        // Retrieve the \"resources\" config property group.\n+        PropertyGroup rsrcsGroup = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_RESOURCES);\n+        if (rsrcsGroup != null) {\n+            List<PropertyEntry> rsrcsEntries = rsrcsGroup.getProperties();            \n+            if (rsrcsEntries != null && !rsrcsEntries.isEmpty()) {\n+                for (PropertyEntry rsrcsEntry : rsrcsEntries) {\n+                    \n+                    // Check special property for including omitted resource types\n+                    if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED.equals(rsrcsEntry.getName())) {\n+                        if (rsrcsEntry.getValue() instanceof Boolean) {\n+                            includeOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();", "originalCommit": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMzY1Mw==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506403653", "body": "```suggestion\r\n        if (supportOmittedRsrcTypes) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (includeOmittedRsrcTypes) {\n          \n          \n            \n                    if (supportOmittedRsrcTypes) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\">includeOmittedRsrcTypes</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\">supportOmittedRsrcTypes</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-16T13:15:29Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -293,51 +295,72 @@ public static void init() {\n \n     /**\n      * Retrieves the search parameter filtering rules for the current tenant.\n-     *\n-     * @throws Exception\n+     * @return map of resource types to allowed search parameters URLs,\n+     * and may include '*' for resource type or search parameter URL.\n+     * @throws Exception an exception\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private static Map<String, List<String>> getFilterRules() throws Exception {\n         Map<String, List<String>> result = new HashMap<>();\n-\n-        // Retrieve the \"searchParameterFilter\" config property group.\n-        PropertyGroup spFilter = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_SEARCH_PARAMETER_FILTER);\n-        List<PropertyEntry> ruleEntries = null;\n-        if (spFilter != null) {\n-            ruleEntries = spFilter.getProperties();\n-        }\n-\n-        // If we have a non-empty set of filter rules, then walk through them and populate our map.\n-        if (ruleEntries != null && !ruleEntries.isEmpty()) {\n-            for (PropertyEntry ruleEntry : ruleEntries) {\n-                String resourceType = ruleEntry.getName();\n-\n-                // Make sure the value is a List<String>.\n-                if (ruleEntry.getValue() instanceof List<?>) {\n-                    for (Object listMember : (List<?>) ruleEntry.getValue()) {\n-                        if (!(listMember instanceof String)) {\n+        boolean includeOmittedRsrcTypes = true;\n+        \n+        // Retrieve the \"resources\" config property group.\n+        PropertyGroup rsrcsGroup = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_RESOURCES);\n+        if (rsrcsGroup != null) {\n+            List<PropertyEntry> rsrcsEntries = rsrcsGroup.getProperties();            \n+            if (rsrcsEntries != null && !rsrcsEntries.isEmpty()) {\n+                for (PropertyEntry rsrcsEntry : rsrcsEntries) {\n+                    \n+                    // Check special property for including omitted resource types\n+                    if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_INCLUDE_OMITTED.equals(rsrcsEntry.getName())) {\n+                        if (rsrcsEntry.getValue() instanceof Boolean) {\n+                            includeOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();\n+                        }\n+                        else {\n                             throw SearchExceptionUtil.buildNewIllegalStateException();\n                         }\n                     }\n-\n-                    // Add the rule entry to our map, keyed by resource type.\n-                    List<String> stringList = (List<String>) ruleEntry.getValue();\n-                    result.put(resourceType, stringList);\n-                } else {\n-                    throw SearchExceptionUtil.buildNewIllegalStateException();\n+                    else {\n+                        String resourceType = rsrcsEntry.getName();\n+                        PropertyGroup resourceTypeGroup = (PropertyGroup) rsrcsEntry.getValue();\n+                        if (resourceTypeGroup != null) {\n+                            List<String> searchParameterUrls = new ArrayList<>();\n+    \n+                            // Get search parameters\n+                            PropertyGroup spGroup = resourceTypeGroup.getPropertyGroup(FHIRConfiguration.PROPERTY_FIELD_RESOURCES_SEARCH_PARAMETERS);\n+                            if (spGroup != null) {\n+                                List<PropertyEntry> spEntries = spGroup.getProperties();            \n+                                if (spEntries != null && !spEntries.isEmpty()) {\n+                                    for (PropertyEntry spEntry : spEntries) {\n+                                        \n+                                        PropertyGroup spValueGroup = (PropertyGroup) spEntry.getValue();\n+                                        if (spValueGroup != null) {\n+                                            String url = spValueGroup.getStringProperty(FHIRConfiguration.PROPERTY_FIELD_RESOURCES_SEARCH_PARAMETER_URL);\n+                                            if (url == null) {\n+                                                throw SearchExceptionUtil.buildNewIllegalStateException();\n+                                            }\n+                                            searchParameterUrls.add(url);\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                            else {\n+                                searchParameterUrls.add(SearchConstants.WILDCARD);\n+                            }\n+                            result.put(resourceType, searchParameterUrls);\n+                        }\n+                    }\n                 }\n             }\n-        } else {\n-            // The current tenant doesn't have any filter rules defined, so\n-            // we'll just fabricate one that includes all search parameters:\n-            // <pre>{ \"*\": [\"*\"] }</pre>\n-            List<String> list = new ArrayList<>();\n-            list.add(SearchConstants.WILDCARD);\n-            result.put(SearchConstants.WILDCARD, list);\n         }\n+\n+        if (includeOmittedRsrcTypes) {", "originalCommit": "8398b13aea4be2a85a612d54ef4cc0a05af17bed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f3ac6ea3a9d5625ee89e48d3435bf5c086032d4c", "url": "https://github.com/IBM/FHIR/commit/f3ac6ea3a9d5625ee89e48d3435bf5c086032d4c", "message": "renamed \"includeOmittedResourceTypes\" to \"open\"\r\n\r\nbased on team discussion\r\n\r\nSigned-off-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-10-16T13:22:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ2OTY3Nw==", "url": "https://github.com/IBM/FHIR/pull/1579#discussion_r506469677", "body": "would it be helpful (perf-wise) to have this singletonList in a constant?", "bodyText": "would it be helpful (perf-wise) to have this singletonList in a constant?", "bodyHTML": "<p dir=\"auto\">would it be helpful (perf-wise) to have this singletonList in a constant?</p>", "author": "lmsurpre", "createdAt": "2020-10-16T14:11:29Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -293,51 +295,72 @@ public static void init() {\n \n     /**\n      * Retrieves the search parameter filtering rules for the current tenant.\n-     *\n-     * @throws Exception\n+     * @return map of resource types to allowed search parameters URLs,\n+     * and may include '*' for resource type or search parameter URL.\n+     * @throws Exception an exception\n      */\n-    @SuppressWarnings(\"unchecked\")\n     private static Map<String, List<String>> getFilterRules() throws Exception {\n         Map<String, List<String>> result = new HashMap<>();\n-\n-        // Retrieve the \"searchParameterFilter\" config property group.\n-        PropertyGroup spFilter = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_SEARCH_PARAMETER_FILTER);\n-        List<PropertyEntry> ruleEntries = null;\n-        if (spFilter != null) {\n-            ruleEntries = spFilter.getProperties();\n-        }\n-\n-        // If we have a non-empty set of filter rules, then walk through them and populate our map.\n-        if (ruleEntries != null && !ruleEntries.isEmpty()) {\n-            for (PropertyEntry ruleEntry : ruleEntries) {\n-                String resourceType = ruleEntry.getName();\n-\n-                // Make sure the value is a List<String>.\n-                if (ruleEntry.getValue() instanceof List<?>) {\n-                    for (Object listMember : (List<?>) ruleEntry.getValue()) {\n-                        if (!(listMember instanceof String)) {\n+        boolean supportOmittedRsrcTypes = true;\n+        \n+        // Retrieve the \"resources\" config property group.\n+        PropertyGroup rsrcsGroup = FHIRConfigHelper.getPropertyGroup(FHIRConfiguration.PROPERTY_RESOURCES);\n+        if (rsrcsGroup != null) {\n+            List<PropertyEntry> rsrcsEntries = rsrcsGroup.getProperties();            \n+            if (rsrcsEntries != null && !rsrcsEntries.isEmpty()) {\n+                for (PropertyEntry rsrcsEntry : rsrcsEntries) {\n+                    \n+                    // Check special property for including omitted resource types\n+                    if (FHIRConfiguration.PROPERTY_FIELD_RESOURCES_OPEN.equals(rsrcsEntry.getName())) {\n+                        if (rsrcsEntry.getValue() instanceof Boolean) {\n+                            supportOmittedRsrcTypes = (Boolean) rsrcsEntry.getValue();\n+                        }\n+                        else {\n                             throw SearchExceptionUtil.buildNewIllegalStateException();\n                         }\n                     }\n-\n-                    // Add the rule entry to our map, keyed by resource type.\n-                    List<String> stringList = (List<String>) ruleEntry.getValue();\n-                    result.put(resourceType, stringList);\n-                } else {\n-                    throw SearchExceptionUtil.buildNewIllegalStateException();\n+                    else {\n+                        String resourceType = rsrcsEntry.getName();\n+                        PropertyGroup resourceTypeGroup = (PropertyGroup) rsrcsEntry.getValue();\n+                        if (resourceTypeGroup != null) {\n+                            List<String> searchParameterUrls = new ArrayList<>();\n+    \n+                            // Get search parameters\n+                            PropertyGroup spGroup = resourceTypeGroup.getPropertyGroup(FHIRConfiguration.PROPERTY_FIELD_RESOURCES_SEARCH_PARAMETERS);\n+                            if (spGroup != null) {\n+                                List<PropertyEntry> spEntries = spGroup.getProperties();            \n+                                if (spEntries != null && !spEntries.isEmpty()) {\n+                                    for (PropertyEntry spEntry : spEntries) {\n+                                        \n+                                        PropertyGroup spValueGroup = (PropertyGroup) spEntry.getValue();\n+                                        if (spValueGroup != null) {\n+                                            String url = spValueGroup.getStringProperty(FHIRConfiguration.PROPERTY_FIELD_RESOURCES_SEARCH_PARAMETER_URL);\n+                                            if (url == null) {\n+                                                throw SearchExceptionUtil.buildNewIllegalStateException();\n+                                            }\n+                                            searchParameterUrls.add(url);\n+                                        }\n+                                    }\n+                                }\n+                            }\n+                            else {\n+                                searchParameterUrls.add(SearchConstants.WILDCARD);\n+                            }\n+                            result.put(resourceType, searchParameterUrls);\n+                        }\n+                    }\n                 }\n             }\n-        } else {\n-            // The current tenant doesn't have any filter rules defined, so\n-            // we'll just fabricate one that includes all search parameters:\n-            // <pre>{ \"*\": [\"*\"] }</pre>\n-            List<String> list = new ArrayList<>();\n-            list.add(SearchConstants.WILDCARD);\n-            result.put(SearchConstants.WILDCARD, list);\n         }\n+\n+        if (supportOmittedRsrcTypes) {\n+            // All other resource types include all search parameters\n+            result.put(SearchConstants.WILDCARD, Collections.singletonList(SearchConstants.WILDCARD));", "originalCommit": "f3ac6ea3a9d5625ee89e48d3435bf5c086032d4c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}