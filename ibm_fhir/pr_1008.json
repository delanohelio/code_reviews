{"pr_number": 1008, "pr_title": "issue #1007 minor enhancement to resourceTypesCache", "pr_author": "albertwang-ibm", "pr_createdAt": "2020-04-30T23:09:03Z", "pr_url": "https://github.com/IBM/FHIR/pull/1008", "timeline": [{"oid": "beee57134b4a23907c1e85d1512df4017ee61727", "url": "https://github.com/IBM/FHIR/commit/beee57134b4a23907c1e85d1512df4017ee61727", "message": "issue #1007 minor enhancement to resourceTypesCache\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-30T23:06:39Z", "type": "commit"}, {"oid": "83f6feb81f29101d0a3025195225f177521ac25c", "url": "https://github.com/IBM/FHIR/commit/83f6feb81f29101d0a3025195225f177521ac25c", "message": "issue #1007 minor update\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-04-30T23:19:03Z", "type": "commit"}, {"oid": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "url": "https://github.com/IBM/FHIR/commit/702e443ecfe53bf66b475793396c41acfe5cbdd2", "message": "issue #1007 fix tab issue\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-01T02:50:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYwNTkxMQ==", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418605911", "body": "```suggestion\r\n        // Get resourceTypeId from ResourceTypesCache first.\r\n        Integer resourceTypeId= ResourceTypesCache.getResourceTypeId(resourceType);\r\n        // If not found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\r\n```\r\nhonestly, it should never hit newResourceTypeIds with the change in PR1010, but seems reasonable. \r\nsmall edits above", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Integer resourceTypeId;\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n          \n            \n                    // Get resourceTypeId from ResourceTypesCache first.\n          \n          \n            \n                    Integer resourceTypeId= ResourceTypesCache.getResourceTypeId(resourceType);\n          \n          \n            \n                    // If not found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds\n          \n      \n    \n    \n  \n\nhonestly, it should never hit newResourceTypeIds with the change in PR1010, but seems reasonable.\nsmall edits above", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"467\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Integer</span> resourceTypeId;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"468\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Get resourceTypeId from ResourceTypesCache first.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"469\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        resourceTypeId <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ResourceTypesCache</span><span class=\"pl-k\">.</span>getResourceTypeId(resourceType);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"470\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"467\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Get resourceTypeId from ResourceTypesCache first.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"468\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Integer</span> resourceTypeId<span class=\"pl-k\">=</span> <span class=\"pl-smi\">ResourceTypesCache</span><span class=\"pl-k\">.</span>getResourceTypeId(resourceType);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"469\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> If not found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">honestly, it should never hit newResourceTypeIds with the change in PR1010, but seems reasonable.<br>\nsmall edits above</p>", "author": "prb112", "createdAt": "2020-05-01T15:58:05Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/dao/impl/ResourceDAOImpl.java", "diffHunk": "@@ -460,6 +460,19 @@ public void addResourceTypeCacheCandidate(String resourceType, Integer resourceT\n         log.exiting(CLASSNAME, METHODNAME);\n \n     }\n+    \n+    protected  Integer getResourceTypeIdFromCaches(String resourceType) {\n+        Integer resourceTypeId;\n+        // Get resourceTypeId from ResourceTypesCache first.\n+        resourceTypeId = ResourceTypesCache.getResourceTypeId(resourceType);\n+        // If no found, then get resourceTypeId from local newResourceTypeIds in case this id is already in newResourceTypeIds", "originalCommit": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYyOTI5MQ==", "url": "https://github.com/IBM/FHIR/pull/1008#discussion_r418629291", "body": "Maybe a bit more description in the error message?   Like `\"Error while getting or inserting parameterName '\" + parameterName + \"'\"` ?", "bodyText": "Maybe a bit more description in the error message?   Like \"Error while getting or inserting parameterName '\" + parameterName + \"'\" ?", "bodyHTML": "<p dir=\"auto\">Maybe a bit more description in the error message?   Like <code>\"Error while getting or inserting parameterName '\" + parameterName + \"'\"</code> ?</p>", "author": "lmsurpre", "createdAt": "2020-05-01T16:51:19Z", "path": "fhir-persistence-jdbc/src/main/java/com/ibm/fhir/persistence/jdbc/postgresql/PostgreSqlParameterNamesDAO.java", "diffHunk": "@@ -42,18 +42,7 @@ public int readOrAddParameterNameId(String parameterName) throws FHIRPersistence\n                     stmt.executeUpdate();\n                 }\n             } catch (SQLException e) {\n-                if (\"23505\".equals(e.getSQLState())) {\n-                    // another thread snuck in and created the record, so we need to fetch the correct id\n-                    result = getParameterId(parameterName);\n-\n-                    if (result == null) {\n-                        // would be extremely weird, but good to protect against anyway\n-                        throw new IllegalStateException(\"No parameter id returned after duplicate found!\");\n-                    }\n-                }\n-                else {\n-                    throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);\n-                }\n+                throw new FHIRPersistenceDataAccessException(\"parameterName=\" + parameterName, e);", "originalCommit": "702e443ecfe53bf66b475793396c41acfe5cbdd2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "url": "https://github.com/IBM/FHIR/commit/8e17620cd41820d7bb3ad3811fd3e135cd8802b9", "message": "issue #1007 updates per review comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-01T18:30:24Z", "type": "commit"}]}