{"pr_number": 761, "pr_title": "Issue #686 - added Javadoc to FHIRPath model", "pr_author": "JohnTimm", "pr_createdAt": "2020-03-05T19:48:05Z", "pr_url": "https://github.com/IBM/FHIR/pull/761", "timeline": [{"oid": "8768b596a4899f8a1a8e68ce237ea91790cc55e5", "url": "https://github.com/IBM/FHIR/commit/8768b596a4899f8a1a8e68ce237ea91790cc55e5", "message": "Issue #686 - added Javadoc to FHIRPath model\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>", "committedDate": "2020-03-05T19:47:47Z", "type": "commit"}, {"oid": "be7dcdbb4173ca0c327dcea562e1cbb86c4589ac", "url": "https://github.com/IBM/FHIR/commit/be7dcdbb4173ca0c327dcea562e1cbb86c4589ac", "message": "Issue #686 - minor tweaks\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>", "committedDate": "2020-03-05T19:56:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4MA==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r388934780", "body": "I think `@inheritDoc` is just if you want to combine some new text with the parent text.  If you're not adding anything, just leave it off.  But maybe double-check me :-)\r\n", "bodyText": "I think @inheritDoc is just if you want to combine some new text with the parent text.  If you're not adding anything, just leave it off.  But maybe double-check me :-)", "bodyHTML": "<p dir=\"auto\">I think <code>@inheritDoc</code> is just if you want to combine some new text with the parent text.  If you're not adding anything, just leave it off.  But maybe double-check me :-)</p>", "author": "lmsurpre", "createdAt": "2020-03-06T14:31:45Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/FHIRPathAbstractNode.java", "diffHunk": "@@ -28,56 +28,92 @@ protected FHIRPathAbstractNode(Builder builder) {\n         children = Collections.unmodifiableCollection(builder.children);\n     }\n     \n+    /**\n+     * {@inheritDoc}\n+     */", "originalCommit": "be7dcdbb4173ca0c327dcea562e1cbb86c4589ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzMjcwOQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389032709", "bodyText": "Removed unnecessary {@inheritDoc} usage.", "author": "JohnTimm", "createdAt": "2020-03-06T17:14:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkzNDc4MA=="}], "type": "inlineReview"}, {"oid": "2297aaf312804d806f0f918fd82d5278c7060104", "url": "https://github.com/IBM/FHIR/commit/2297aaf312804d806f0f918fd82d5278c7060104", "message": "Issue #686 - Updated per PR feedback\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>", "committedDate": "2020-03-06T17:13:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035065", "body": "is is worth keeping the \"potentially-empty non-null\" part?", "bodyText": "is is worth keeping the \"potentially-empty non-null\" part?", "bodyHTML": "<p dir=\"auto\">is is worth keeping the \"potentially-empty non-null\" part?</p>", "author": "lmsurpre", "createdAt": "2020-03-06T17:18:41Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -118,29 +146,95 @@ public EvaluationContext getEvaluationContext() {\n                 resourceOrElement.getClass().getName());\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression against a {@link Resource}\n+     * \n+     * @param resource\n+     *     the resource\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(Resource resource, String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(resource), expr);\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression against an {@link Element}\n+     * \n+     * @param element\n+     *     the element\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(Element element, String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(element), expr);\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression using an existing evaluation context\n+     * \n+     * @param evaluationContext\n+     *     the evaluation context\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(EvaluationContext evaluationContext, String expr) throws FHIRPathException {\n         return evaluate(evaluationContext, expr, evaluationContext.getTree().getRoot());\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression using an existing evaluation context against a FHIRPath node\n+     * \n+     * @param evaluationContext\n+     *     the evaluation context\n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @param node\n+     *     the FHIRPath node\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(EvaluationContext evaluationContext, String expr, FHIRPathNode node) throws FHIRPathException {\n         return evaluate(evaluationContext, expr, singleton(node));\n     }\n     \n     /**\n+     * Evaluate a FHIRPathExpression using an existing EvaluationContext against a collection of FHIRPath nodes\n+     * \n      * @param evaluationContext\n+     *     the evaluation context\n      * @param expr\n+     *     the FHIRPath expression to evaluate\n      * @param initialContext\n-     * @return a potentially-empty non-null collection of FHIRPathNodes", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTkwOQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035909", "bodyText": "not in my opinion.", "author": "JohnTimm", "createdAt": "2020-03-06T17:20:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTc1Mg==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389041752", "bodyText": "I originally added that because, as a user of this method, I wanted a guarantee that it will never be null, and a reminder that it might come back empty.  Should a consumer assume those things based on it not saying it can be null?", "author": "lmsurpre", "createdAt": "2020-03-06T17:31:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MTI3NQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389061275", "bodyText": "FHIRPath has no notion of null. A null result would be an empty result.", "author": "JohnTimm", "createdAt": "2020-03-06T18:11:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NDEwNA==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389064104", "bodyText": "Added non-null, potentially empty language back to the Javadoc", "author": "JohnTimm", "createdAt": "2020-03-06T18:17:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTY0OQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035649", "body": "how does this use a FHIRPath node?", "bodyText": "how does this use a FHIRPath node?", "bodyHTML": "<p dir=\"auto\">how does this use a FHIRPath node?</p>", "author": "lmsurpre", "createdAt": "2020-03-06T17:20:00Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1262,22 +1369,58 @@ private EvaluationContext(FHIRPathTree tree) {\n             this.tree = tree;\n         }\n         \n+        /**\n+         * Get the FHIRPath tree associated with this EvaluationContext\n+         * \n+         * @return\n+         *     the FHIRPath tree associated with this EvaluationContext\n+         */\n         public FHIRPathTree getTree() {\n             return tree;\n         }\n         \n+        /**\n+         * Set an external constant using a name and FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param node\n+         *     the FHIRPath node\n+         */\n         public void setExternalConstant(String name, FHIRPathNode node) {\n             externalConstantMap.put(name, singleton(node));\n         }\n         \n+        /**\n+         * Set an external constant using a name and a collection of FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param nodes\n+         *     the collection of FHIRPath nodes\n+         */\n         public void setExternalConstant(String name, Collection<FHIRPathNode> nodes) {\n             externalConstantMap.put(name, nodes);\n         }\n         \n+        /**\n+         * Unset an external constant using a name and FHIRPath node", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MzE5MQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389043191", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Unset an external constant using a name and FHIRPath node\n          \n          \n            \n                     * Unset an external constant", "author": "lmsurpre", "createdAt": "2020-03-06T17:34:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTY0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NTY0Mg==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389065642", "bodyText": "Updated comment", "author": "JohnTimm", "createdAt": "2020-03-06T18:21:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTY0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTkxMg==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389035912", "body": "```suggestion\r\n         *     true if this EvaluationContext has an external constant with the given name, otherwise false\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     *     true if this EvaluationContext has an external constant with the given name if exists, otherwise false\n          \n          \n            \n                     *     true if this EvaluationContext has an external constant with the given name, otherwise false", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">         <span class=\"pl-k\">*</span>     <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> <span class=\"pl-c1\">this</span> <span class=\"pl-smi\">EvaluationContext</span> has an external constant with the given name<span class=\"x x-first\"> </span><span class=\"pl-k x\">if</span><span class=\"x x-last\"> exists</span>, otherwise <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span>     <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> <span class=\"pl-c1\">this</span> <span class=\"pl-smi\">EvaluationContext</span> has an external constant with the given name, otherwise <span class=\"pl-c1\">false</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-03-06T17:20:30Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1297,6 +1440,14 @@ public void unsetExternalConstant(String name) {\n             }\n         }\n         \n+        /**\n+         * Indicates whether this EvaluationContext has an external constant with the given name\n+         * \n+         * @param name\n+         *     the name\n+         * @return\n+         *     true if this EvaluationContext has an external constant with the given name if exists, otherwise false", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2Njk0Nw==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389066947", "bodyText": "Updated the comment", "author": "JohnTimm", "createdAt": "2020-03-06T18:24:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNTkxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjM0MQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389036341", "body": "does it not throw NPE any more?", "bodyText": "does it not throw NPE any more?", "bodyHTML": "<p dir=\"auto\">does it not throw NPE any more?</p>", "author": "lmsurpre", "createdAt": "2020-03-06T17:21:22Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -90,20 +93,45 @@\n     \n     private FHIRPathEvaluator() { }\n     \n+    /**\n+     * Get the EvaluationContext associated with this FHIRPathEvaluator\n+     * \n+     * @return\n+     *     get the EvaluationContext associated with this FHIRPathEvaluator\n+     */\n     public EvaluationContext getEvaluationContext() {\n         return visitor.getEvaluationContext();\n     }\n     \n+    /**\n+     * Evaluate a FHIRPath expression\n+     * \n+     * @param expr\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n+     * @throws FHIRPathException\n+     *     if an exception occurs during evaluation\n+     */\n     public Collection<FHIRPathNode> evaluate(String expr) throws FHIRPathException {\n         return evaluate(new EvaluationContext(), expr, empty());\n     }\n     \n     /**\n+     * Evaluate a FHIRPath expression against a {@link Resource} or {@link Element}\n+     * \n      * @param resourceOrElement\n+     *     the {@link Resource} or {@link Element}\n      * @param expr\n-     * @return a potentially-empty non-null collection of FHIRPathNodes\n+     *     the FHIRPath expression to evaluate\n+     * @return\n+     *     the result of evaluation as a collection of FHIRPath nodes\n+     * @throws NullPointerException\n+     *     if any of the parameters are null    \n      * @throws FHIRPathException\n-     * @throws NullPointerException if any of the passed arguments are null", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2MjMyMg==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389062322", "bodyText": "Yes, via Objects.requireNonNull", "author": "JohnTimm", "createdAt": "2020-03-06T18:13:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjM0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjg5Nw==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389036897", "body": "```suggestion\r\n     * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal to the parameter\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal the parameter\n          \n          \n            \n                 * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal to the parameter", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Indicates</span> whether the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">TypeInfo</span>} wrapped by <span class=\"pl-c1\">this</span> <span class=\"pl-smi\">FHIRPathTypeInfoNode</span> is equal the parameter</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Indicates</span> whether the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">TypeInfo</span>} wrapped by <span class=\"pl-c1\">this</span> <span class=\"pl-smi\">FHIRPathTypeInfoNode</span> is equal <span class=\"x x-first x-last\">to </span>the parameter</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-03-06T17:22:23Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/FHIRPathTypeInfoNode.java", "diffHunk": "@@ -44,23 +69,35 @@ private Builder(FHIRPathType type, TypeInfo typeInfo) {\n                 children.add(FHIRPathStringValue.stringValue(\"name\", typeInfo.getName()));\n             }\n         }\n-\n+        \n+        /**\n+         * Build a FHIRPathTypeInfoNode instance using this builder\n+         * \n+         * @return\n+         *     a new FHIRPathTypeInfoNode instance\n+         */\n         @Override\n         public FHIRPathTypeInfoNode build() {\n             return new FHIRPathTypeInfoNode(this);\n         }\n     }\n-\n-    @Override\n-    public void accept(FHIRPathNodeVisitor visitor) {\n-        visitor.visit(this);\n-    }\n-\n+    \n+    /**\n+     * The compareTo operation is not supported for this FHIRPathTypeInfoNode\n+     */\n     @Override\n     public int compareTo(FHIRPathNode o) {\n         throw new UnsupportedOperationException();\n     }\n     \n+    /**\n+     * Indicates whether the {@link TypeInfo} wrapped by this FHIRPathTypeInfoNode is equal the parameter", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2ODcxNg==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389068716", "bodyText": "Updated comment", "author": "JohnTimm", "createdAt": "2020-03-06T18:27:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAzNjg5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0Mzc1MA==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389043750", "body": "how is it set?  to each node in the collection?", "bodyText": "how is it set?  to each node in the collection?", "bodyHTML": "<p dir=\"auto\">how is it set?  to each node in the collection?</p>", "author": "lmsurpre", "createdAt": "2020-03-06T17:35:49Z", "path": "fhir-path/src/main/java/com/ibm/fhir/path/evaluator/FHIRPathEvaluator.java", "diffHunk": "@@ -1262,22 +1369,58 @@ private EvaluationContext(FHIRPathTree tree) {\n             this.tree = tree;\n         }\n         \n+        /**\n+         * Get the FHIRPath tree associated with this EvaluationContext\n+         * \n+         * @return\n+         *     the FHIRPath tree associated with this EvaluationContext\n+         */\n         public FHIRPathTree getTree() {\n             return tree;\n         }\n         \n+        /**\n+         * Set an external constant using a name and FHIRPath node\n+         * \n+         * @param name\n+         *     the name\n+         * @param node\n+         *     the FHIRPath node\n+         */\n         public void setExternalConstant(String name, FHIRPathNode node) {\n             externalConstantMap.put(name, singleton(node));\n         }\n         \n+        /**\n+         * Set an external constant using a name and a collection of FHIRPath node", "originalCommit": "2297aaf312804d806f0f918fd82d5278c7060104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NzQxNQ==", "url": "https://github.com/IBM/FHIR/pull/761#discussion_r389067415", "bodyText": "The collection is the value of the constant. If the constant is a single value, then the collection would be a singleton.", "author": "JohnTimm", "createdAt": "2020-03-06T18:25:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0Mzc1MA=="}], "type": "inlineReview"}, {"oid": "545b3010fdb96e60fa067af1b63413851a8e1381", "url": "https://github.com/IBM/FHIR/commit/545b3010fdb96e60fa067af1b63413851a8e1381", "message": "Issue #686 - more updates per PR feedback\n\nSigned-off-by: John T.E. Timm <johntimm@us.ibm.com>", "committedDate": "2020-03-06T18:27:14Z", "type": "commit"}]}