{"pr_number": 1556, "pr_title": "issue #1315 - instantiates field represents the registered capabilities", "pr_author": "tbieste", "pr_createdAt": "2020-10-05T14:54:23Z", "pr_url": "https://github.com/IBM/FHIR/pull/1556", "timeline": [{"oid": "f47f16f170b0d9d73faafca2e00e50703730c082", "url": "https://github.com/IBM/FHIR/commit/f47f16f170b0d9d73faafca2e00e50703730c082", "message": "#issue 1315 - instantiates field represents the registered capabilities\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-05T14:56:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2NTYxMg==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r499665612", "body": "let's keep the prior format for readability", "bodyText": "let's keep the prior format for readability", "bodyHTML": "<p dir=\"auto\">let's keep the prior format for readability</p>", "author": "prb112", "createdAt": "2020-10-05T15:01:08Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/Capabilities.java", "diffHunk": "@@ -266,25 +258,14 @@ private CapabilityStatement buildCapabilityStatement() throws Exception {\n             log.log(Level.WARNING, \"Unexpected error while reading server transaction mode setting\", t);\n         }\n \n-        CapabilityStatement.Rest.Security.Builder securityBuilder = CapabilityStatement.Rest.Security.builder()\n-                .cors(com.ibm.fhir.model.type.Boolean.of(fhirConfig.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_CORS, true)));\n-\n+        CapabilityStatement.Rest.Security.Builder securityBuilder =\n+                CapabilityStatement.Rest.Security.builder().cors(com.ibm.fhir.model.type.Boolean.of(fhirConfig.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_CORS, true)));\n \n         if (fhirConfig.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_BASIC_ENABLED, false)) {\n-            securityBuilder.service(CodeableConcept.builder()\n-                .coding(Coding.builder()\n-                    .code(Code.of(\"Basic\"))\n-                    .system(Uri.of(\"http://terminology.hl7.org/CodeSystem/restful-security-service\"))\n-                    .build())\n-                .build());\n+            securityBuilder.service(CodeableConcept.builder().coding(Coding.builder().code(Code.of(\"Basic\")).system(Uri.of(\"http://terminology.hl7.org/CodeSystem/restful-security-service\")).build()).build());\n         }\n         if (fhirConfig.getBooleanProperty(FHIRConfiguration.PROPERTY_SECURITY_CERT_ENABLED, false)) {\n-            securityBuilder.service(CodeableConcept.builder()\n-                .coding(Coding.builder()\n-                    .code(Code.of(\"Certificates\"))\n-                    .system(Uri.of(\"http://terminology.hl7.org/CodeSystem/restful-security-service\"))\n-                    .build())\n-                .build());\n+            securityBuilder.service(CodeableConcept.builder().coding(Coding.builder().code(Code.of(\"Certificates\")).system(Uri.of(\"http://terminology.hl7.org/CodeSystem/restful-security-service\")).build()).build());", "originalCommit": "f47f16f170b0d9d73faafca2e00e50703730c082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4MTA4Mg==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r499681082", "bodyText": "Fixed.", "author": "tbieste", "createdAt": "2020-10-05T15:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2NTYxMg=="}], "type": "inlineReview"}, {"oid": "66c020aeae99ac1d5b05182d36999a62d6b27ea5", "url": "https://github.com/IBM/FHIR/commit/66c020aeae99ac1d5b05182d36999a62d6b27ea5", "message": "#issue 1315 - instantiates field represents the registered capabilities\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-05T15:18:22Z", "type": "forcePushed"}, {"oid": "17ed7314cd79d966273abe2f5bcfff14f32c0140", "url": "https://github.com/IBM/FHIR/commit/17ed7314cd79d966273abe2f5bcfff14f32c0140", "message": "issue #1315 - instantiates field represents the registered capabilities\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-05T15:31:31Z", "type": "forcePushed"}, {"oid": "90874ba27f8969296c82041d7658acc6107f8732", "url": "https://github.com/IBM/FHIR/commit/90874ba27f8969296c82041d7658acc6107f8732", "message": "issue #1315 - instantiates field represents the registered capabilities\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-06T15:45:56Z", "type": "commit"}, {"oid": "bce40161653ee1073ee876da87d830ad1ce2b10f", "url": "https://github.com/IBM/FHIR/commit/bce40161653ee1073ee876da87d830ad1ce2b10f", "message": "issue #1315 - Update bulkdata to version 1.0.1\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-06T16:42:07Z", "type": "commit"}, {"oid": "bce40161653ee1073ee876da87d830ad1ce2b10f", "url": "https://github.com/IBM/FHIR/commit/bce40161653ee1073ee876da87d830ad1ce2b10f", "message": "issue #1315 - Update bulkdata to version 1.0.1\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-06T16:42:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY5NTM5Nw==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r500695397", "body": "what are these for?", "bodyText": "what are these for?", "bodyHTML": "<p dir=\"auto\">what are these for?</p>", "author": "lmsurpre", "createdAt": "2020-10-07T02:07:11Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/Capabilities.java", "diffHunk": "@@ -91,6 +92,8 @@\n     private static final String FHIR_SERVER_NAME = \"IBM FHIR Server\";\n     private static final String FHIR_COPYRIGHT = \"(C) Copyright IBM Corporation 2016, 2020\";\n     private static final String EXTENSION_URL = \"http://ibm.com/fhir/extension\";\n+    private static final String BASE_CAPABILITY_URL = \"http://hl7.org/fhir/CapabilityStatement/base\";\n+    private static final String BASE_2_CAPABILITY_URL = \"http://hl7.org/fhir/CapabilityStatement/base2\";", "originalCommit": "bce40161653ee1073ee876da87d830ad1ce2b10f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1MDE0Mw==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r501150143", "bodyText": "The FHIR registry includes these two capability statements:\n/fhir-registry/src/main/resources/hl7/fhir/core/package/CapabilityStatement-base.json\n/fhir-registry/src/main/resources/hl7/fhir/core/package/CapabilityStatement-base2.json\nSince they seemed related to the base FHIR spec and have experimental = true, I wasn't sure they should be included in \"instantiates\".", "author": "tbieste", "createdAt": "2020-10-07T16:30:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY5NTM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MjE3Mg==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r502042172", "bodyText": "interesting.  i agree we should exclude them.  i wonder whether they should truly be in the registry at all.\n@JohnTimm thoughts?", "author": "lmsurpre", "createdAt": "2020-10-08T22:14:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY5NTM5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MzUxOA==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r502043518", "bodyText": "if we don't here from john by the morning, I think we should just add a comment (either here or where I just suggested it below) and merge this one in time for 4.4.1", "author": "lmsurpre", "createdAt": "2020-10-08T22:18:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY5NTM5Nw=="}], "type": "inlineReview"}, {"oid": "e9b967b498dacae0b448785ba4dd0623a5c3d95d", "url": "https://github.com/IBM/FHIR/commit/e9b967b498dacae0b448785ba4dd0623a5c3d95d", "message": "issue #1315 - Updates after code review\n\nSigned-off-by: Troy Biesterfeld <tbieste@us.ibm.com>", "committedDate": "2020-10-07T16:43:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0Mjg0NQ==", "url": "https://github.com/IBM/FHIR/pull/1556#discussion_r502042845", "body": "```suggestion\r\n                // BASE_CAPABILITY_URL and BASE_2_CAPABILITY_URL come from the core spec and shouldn't be advertised\r\n                if (url != null && !BASE_CAPABILITY_URL.equals(url) && !BASE_2_CAPABILITY_URL.equals(url)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (url != null && !BASE_CAPABILITY_URL.equals(url) && !BASE_2_CAPABILITY_URL.equals(url)) {\n          \n          \n            \n                            // BASE_CAPABILITY_URL and BASE_2_CAPABILITY_URL come from the core spec and shouldn't be advertised\n          \n          \n            \n                            if (url != null && !BASE_CAPABILITY_URL.equals(url) && !BASE_2_CAPABILITY_URL.equals(url)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"400\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (url </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> </span><span class=\"pl-k x\">!</span><span class=\"pl-c1 x\">BASE_CAPABILITY_URL</span><span class=\"pl-k x\">.</span><span class=\"x\">equals(url) </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> </span><span class=\"pl-k x\">!</span><span class=\"pl-c1 x\">BASE_2_CAPABILITY_URL</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">equals(url)) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"400\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> BASE_CAPABILITY_URL and BASE_2_CAPABILITY_URL come from the core spec and shouldn't be advertised</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"401\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (url <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span><span class=\"pl-c1\">BASE_CAPABILITY_URL</span><span class=\"pl-k\">.</span>equals(url) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span><span class=\"pl-c1\">BASE_2_CAPABILITY_URL</span><span class=\"pl-k\">.</span>equals(url)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-10-08T22:16:41Z", "path": "fhir-server/src/main/java/com/ibm/fhir/server/resources/Capabilities.java", "diffHunk": "@@ -380,6 +383,32 @@ private CapabilityStatement buildCapabilityStatement() throws Exception {\n         return conformance;\n     }\n \n+    /**\n+     * Builds the list of canonicals for the instantiates field based on the capability statements (except FHIR core)\n+     * found in the FHIR registry.\n+     * \n+     * @return list of canonicals\n+     */\n+    private List<Canonical> buildInstantiates() {\n+        Collection<CapabilityStatement> registeredCapabilities = FHIRRegistry.getInstance().getResources(CapabilityStatement.class);\n+\n+        List<Canonical> instantiates = new ArrayList<>();\n+        for (CapabilityStatement registeredCapability : registeredCapabilities) {\n+            if (registeredCapability != null && registeredCapability.getUrl() != null) {\n+                String url = registeredCapability.getUrl().getValue();\n+                if (url != null && !BASE_CAPABILITY_URL.equals(url) && !BASE_2_CAPABILITY_URL.equals(url)) {", "originalCommit": "e9b967b498dacae0b448785ba4dd0623a5c3d95d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "dd0fca48ed17fa356a4d3d4c7976b26e119d00c6", "url": "https://github.com/IBM/FHIR/commit/dd0fca48ed17fa356a4d3d4c7976b26e119d00c6", "message": "Update fhir-server/src/main/java/com/ibm/fhir/server/resources/Capabilities.java\r\n\r\nSigned-off-by: Paul Bastide <pbastide@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-10-09T14:16:38Z", "type": "commit"}]}