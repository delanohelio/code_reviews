{"pr_number": 1737, "pr_title": "Issue #1629 - return error if bad resource type on revinclude", "pr_author": "michaelwschroeder", "pr_createdAt": "2020-11-19T17:01:43Z", "pr_url": "https://github.com/IBM/FHIR/pull/1737", "timeline": [{"oid": "2ec7b6c683b6dce915935e4f768e6483f4a27257", "url": "https://github.com/IBM/FHIR/commit/2ec7b6c683b6dce915935e4f768e6483f4a27257", "message": "Issue #1629 - return error if bad resource type on revinclude\n\nSigned-off-by: Mike Schroeder <mschroed@us.ibm.com>", "committedDate": "2020-11-19T17:00:38Z", "type": "commit"}, {"oid": "6eb13ece972d324e95a0de18d08414f9e869fac3", "url": "https://github.com/IBM/FHIR/commit/6eb13ece972d324e95a0de18d08414f9e869fac3", "message": "Issue #1629 - fix mock registry provider methods\n\nSigned-off-by: Mike Schroeder <mschroed@us.ibm.com>", "committedDate": "2020-11-19T19:20:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxOTk4Nw==", "url": "https://github.com/IBM/FHIR/pull/1737#discussion_r527619987", "body": "I noticed we lost a couple TODOs in the scope of these changes.  We should probably talk about these and possibly open an enhancement request so that we don't lose this thought.\r\nThe idea is to include a OperationOutcome with an Issue of type warning with information about the ignored parameter.  However, I think that clients would only receive that OperationOutcome if either:\r\nA. they specify a \"return preference\" of OperationOutcome (via the Prefer header); or\r\nB. something else goes wrong causing us to return an OperationOutcome\r\n\r\nFor search, we would need to set the Bundle.entry.search.mode value of this OperationOutcome entry to `outcome`.", "bodyText": "I noticed we lost a couple TODOs in the scope of these changes.  We should probably talk about these and possibly open an enhancement request so that we don't lose this thought.\nThe idea is to include a OperationOutcome with an Issue of type warning with information about the ignored parameter.  However, I think that clients would only receive that OperationOutcome if either:\nA. they specify a \"return preference\" of OperationOutcome (via the Prefer header); or\nB. something else goes wrong causing us to return an OperationOutcome\nFor search, we would need to set the Bundle.entry.search.mode value of this OperationOutcome entry to outcome.", "bodyHTML": "<p dir=\"auto\">I noticed we lost a couple TODOs in the scope of these changes.  We should probably talk about these and possibly open an enhancement request so that we don't lose this thought.<br>\nThe idea is to include a OperationOutcome with an Issue of type warning with information about the ignored parameter.  However, I think that clients would only receive that OperationOutcome if either:<br>\nA. they specify a \"return preference\" of OperationOutcome (via the Prefer header); or<br>\nB. something else goes wrong causing us to return an OperationOutcome</p>\n<p dir=\"auto\">For search, we would need to set the Bundle.entry.search.mode value of this OperationOutcome entry to <code>outcome</code>.</p>", "author": "lmsurpre", "createdAt": "2020-11-20T11:09:32Z", "path": "fhir-search/src/main/java/com/ibm/fhir/search/util/SearchUtil.java", "diffHunk": "@@ -700,14 +700,8 @@ public static FHIRSearchContext parseQueryParameters(Class<?> resourceType,\n                         if (ModelSupport.isResourceType(resType)) {\n                             resourceTypes.add(resType);\n                         } else {\n-                            String msg = \"_type search parameter has invalid resource type:\" + resType;\n-                            if (lenient) {\n-                                // TODO add this to the list of supplemental warnings?", "originalCommit": "6eb13ece972d324e95a0de18d08414f9e869fac3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5Njg1Mg==", "url": "https://github.com/IBM/FHIR/pull/1737#discussion_r527696852", "bodyText": "I think this makes sense. I assume it would apply to all instances where we're in lenient mode and we ignore a parameter. Are there other cases where we ignore parameters?", "author": "michaelwschroeder", "createdAt": "2020-11-20T13:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYxOTk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyMTYwNQ==", "url": "https://github.com/IBM/FHIR/pull/1737#discussion_r527621605", "body": "Once we went open source, we decided to remove `@author` tags from the code, but rather than all at once we just remove them as we find them.\r\n```suggestion\r\n```", "bodyText": "Once we went open source, we decided to remove @author tags from the code, but rather than all at once we just remove them as we find them.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *\n          \n          \n            \n             * @author markd\n          \n          \n            \n             * @author pbastide", "bodyHTML": "<p dir=\"auto\">Once we went open source, we decided to remove <code>@author</code> tags from the code, but rather than all at once we just remove them as we find them.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@author</span> markd</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@author</span> pbastide</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-11-20T11:12:42Z", "path": "fhir-search/src/test/java/com/ibm/fhir/search/test/InclusionParameterParseTest.java", "diffHunk": "@@ -34,7 +34,7 @@\n /**\n  * This TestNG test class contains methods that test the parsing of search result inclusion parameters (_include and\n  * _revinclude) in the SearchUtil class.\n- * \n+ *\n  * @author markd\n  * @author pbastide", "originalCommit": "6eb13ece972d324e95a0de18d08414f9e869fac3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5NDYxNA==", "url": "https://github.com/IBM/FHIR/pull/1737#discussion_r527694614", "bodyText": "done", "author": "michaelwschroeder", "createdAt": "2020-11-20T13:36:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYyMTYwNQ=="}], "type": "inlineReview"}, {"oid": "55eb9e2cb6f38b57e75f160587275680f4b17dfa", "url": "https://github.com/IBM/FHIR/commit/55eb9e2cb6f38b57e75f160587275680f4b17dfa", "message": "Issue #1629 - remove author tags from test class\n\nSigned-off-by: Mike Schroeder <mschroed@us.ibm.com>", "committedDate": "2020-11-20T13:35:12Z", "type": "commit"}]}