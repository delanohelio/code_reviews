{"pr_number": 1070, "pr_title": "issue #1061 fixes for improving postgresql update performance", "pr_author": "albertwang-ibm", "pr_createdAt": "2020-05-11T21:28:16Z", "pr_url": "https://github.com/IBM/FHIR/pull/1070", "timeline": [{"oid": "2da09cd47aef7aa76ecd4f6d54da127f5751da0a", "url": "https://github.com/IBM/FHIR/commit/2da09cd47aef7aa76ecd4f6d54da127f5751da0a", "message": "issue #1061 fixes for improving update  performance\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-11T21:20:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDI4Mg==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423344282", "body": "```suggestion\r\n        // If enforced=false, skip the constraint because PostgreSQL doesn't support unenforced constraints\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Make the call, but\n          \n          \n            \n                    // 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and\n          \n          \n            \n                    // 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics\n          \n          \n            \n                    // If enforced=false, skip the constraint because PostgreSQL doesn't support unenforced constraints", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Make the call, but</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> If enforced=false, skip the constraint because PostgreSQL doesn't support unenforced constraints</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-05-11T21:58:55Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -250,7 +250,9 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         // Make the call, but\n         // 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and\n         // 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics", "originalCommit": "2da09cd47aef7aa76ecd4f6d54da127f5751da0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDUxMQ==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423344511", "body": "```suggestion\r\n            // Make the call, but without the tenantColumnName because PostgreSQL doesn't support our multi-tenant implementation\r\n            super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);\n          \n          \n            \n                        // Make the call, but without the tenantColumnName because PostgreSQL doesn't support our multi-tenant implementation\n          \n          \n            \n                        super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1 x x-first\">super</span><span class=\"pl-k x\">.</span><span class=\"x\">createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, </span><span class=\"pl-c1 x\">null</span><span class=\"x\">, columns, </span><span class=\"pl-c1 x\">true</span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"253\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> Make the call, but without the tenantColumnName because PostgreSQL doesn't support our multi-tenant implementation</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"254\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, <span class=\"pl-c1\">null</span>, columns, <span class=\"pl-c1\">true</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "lmsurpre", "createdAt": "2020-05-11T21:59:34Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -250,7 +250,9 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         // Make the call, but\n         // 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and\n         // 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics\n-        super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);\n+        if (enforced) {\n+            super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);", "originalCommit": "2da09cd47aef7aa76ecd4f6d54da127f5751da0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDY4Mw==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423344683", "body": "somewhat minor/unrelated, but can we make this same change on the Derby side for consistency?", "bodyText": "somewhat minor/unrelated, but can we make this same change on the Derby side for consistency?", "bodyHTML": "<p dir=\"auto\">somewhat minor/unrelated, but can we make this same change on the Derby side for consistency?</p>", "author": "lmsurpre", "createdAt": "2020-05-11T22:00:02Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -250,7 +250,9 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n         // Make the call, but\n         // 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and\n         // 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics\n-        super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);\n+        if (enforced) {", "originalCommit": "2da09cd47aef7aa76ecd4f6d54da127f5751da0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NzM4Ng==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423347386", "bodyText": "Ok, will change", "author": "albertwang-ibm", "createdAt": "2020-05-11T22:06:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDY4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1MTA5Mg==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423351092", "bodyText": "done", "author": "albertwang-ibm", "createdAt": "2020-05-11T22:15:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0NDY4Mw=="}], "type": "inlineReview"}, {"oid": "07e55445050a27deafcf2a58ff450c3165cd5621", "url": "https://github.com/IBM/FHIR/commit/07e55445050a27deafcf2a58ff450c3165cd5621", "message": "Apply suggestions from code review\r\n\r\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>\n\nCo-authored-by: Lee Surprenant <lmsurpre@us.ibm.com>", "committedDate": "2020-05-11T22:05:37Z", "type": "commit"}, {"oid": "184cc2979a8f1cece593af9d53238b7f89f2866c", "url": "https://github.com/IBM/FHIR/commit/184cc2979a8f1cece593af9d53238b7f89f2866c", "message": "issue #1061 update derbyadapter constrain codes\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-11T22:11:38Z", "type": "commit"}, {"oid": "5a6ba33e3ec28dab1af9bbbfd8810a5b2a670e1e", "url": "https://github.com/IBM/FHIR/commit/5a6ba33e3ec28dab1af9bbbfd8810a5b2a670e1e", "message": "issue #1061 minor update to comments\n\nSigned-off-by: Albert Wang <xuwang@us.ibm.com>", "committedDate": "2020-05-11T22:14:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM3NzQ2MQ==", "url": "https://github.com/IBM/FHIR/pull/1070#discussion_r423377461", "body": "good comment.", "bodyText": "good comment.", "bodyHTML": "<p dir=\"auto\">good comment.</p>", "author": "prb112", "createdAt": "2020-05-11T23:31:01Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -247,10 +247,11 @@ public void createForeignKeyConstraint(String constraintName, String schemaName,\n             String targetSchema, String targetTable, String tenantColumnName,\n             List<String> columns, boolean enforced) {\n \n-        // Make the call, but\n-        // 1. without the tenantColumnName because PostgreSql doesn't support our multi-tenant implementation; and\n-        // 2. with enforced=true because PostgreSql doesn't support non-default constraint characteristics\n-        super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);\n+        // If enforced=false, skip the constraint because PostgreSQL doesn't support unenforced constraints\n+        if (enforced) {\n+            // Make the call, but without the tenantColumnName because PostgreSQL doesn't support our multi-tenant implementation\n+            super.createForeignKeyConstraint(constraintName, schemaName, name, targetSchema, targetTable, null, columns, true);", "originalCommit": "5a6ba33e3ec28dab1af9bbbfd8810a5b2a670e1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}