{"pr_number": 1345, "pr_title": "issue #1341 use larger cache for identity sequences in Db2", "pr_author": "punktilious", "pr_createdAt": "2020-07-21T18:54:41Z", "pr_url": "https://github.com/IBM/FHIR/pull/1345", "timeline": [{"oid": "308cd952330a194f624f7e8000280a2b446d5eff", "url": "https://github.com/IBM/FHIR/commit/308cd952330a194f624f7e8000280a2b446d5eff", "message": "issue #1341 use larger cache for identity sequences\n\nSigned-off-by: Robin Arnold <robin.arnold23@ibm.com>", "committedDate": "2020-07-21T18:35:22Z", "type": "commit"}, {"oid": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "url": "https://github.com/IBM/FHIR/commit/bc3aa6a9219003bfe97037af65a08e378d1cdeba", "message": "Merge remote-tracking branch 'origin/master' into issue-1327c", "committedDate": "2020-07-21T18:36:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTk5OA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458319998", "body": "```suggestion\r\n```\r\n\r\nIf not supported, shouldn't this be removed? ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // modify the CACHE property of the identity column\n          \n          \n            \n                    final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n          \n      \n    \n    \n  \n\nIf not supported, shouldn't this be removed?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"239\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> modify the CACHE property of the identity column</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"240\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> ddl <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ALTER TABLE <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> qname <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> ALTER COLUMN <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> columnName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> SET CACHE <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> cache;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">If not supported, shouldn't this be removed?</p>", "author": "prb112", "createdAt": "2020-07-21T18:57:31Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "diffHunk": "@@ -228,6 +228,20 @@ public void alterSequenceRestartWith(String schemaName, String sequenceName, lon\n         dropSequence(schemaName, sequenceName);\n         createSequence(schemaName, sequenceName, restartWith, cache);\n     }\n+    \n+    @Override\n+    public void alterTableColumnIdentityCache(String schemaName, String tableName, String columnName, int cache) {\n+        // Not supported by Derby\n+        \n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        DataDefinitionUtil.assertValidName(columnName);\n+        \n+        // modify the CACHE property of the identity column\n+        final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n+", "originalCommit": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMTQ5OA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458321498", "bodyText": "It's logged in the error so that we don't forget about it. We may need to consider something similar in the future for the other databases, but would need a completely different command.", "author": "punktilious", "createdAt": "2020-07-21T19:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTk5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyNTE1MA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458325150", "bodyText": "makes sense", "author": "prb112", "createdAt": "2020-07-21T19:06:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxOTk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDIwMQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458320201", "body": "```suggestion\r\n```\r\n\r\nextra whitespace", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n      \n    \n    \n  \n\nextra whitespace", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"244\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">extra whitespace</p>", "author": "prb112", "createdAt": "2020-07-21T18:57:53Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/derby/DerbyAdapter.java", "diffHunk": "@@ -228,6 +228,20 @@ public void alterSequenceRestartWith(String schemaName, String sequenceName, lon\n         dropSequence(schemaName, sequenceName);\n         createSequence(schemaName, sequenceName, restartWith, cache);\n     }\n+    \n+    @Override\n+    public void alterTableColumnIdentityCache(String schemaName, String tableName, String columnName, int cache) {\n+        // Not supported by Derby\n+        \n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        DataDefinitionUtil.assertValidName(columnName);\n+        \n+        // modify the CACHE property of the identity column\n+        final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n+\n+        warnOnce(MessageKey.ALTER_TABLE_SEQ_CACHE, \"Not supported in Derby: \" + ddl);\n+    }\n+\n ", "originalCommit": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyNzc4Nw==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458327787", "bodyText": "done", "author": "punktilious", "createdAt": "2020-07-21T19:11:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDIwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDQ1MQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458320451", "body": "```suggestion\r\n```\r\n\r\nextra whitespace", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n      \n    \n    \n  \n\nextra whitespace", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"566\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">extra whitespace</p>", "author": "prb112", "createdAt": "2020-07-21T18:58:20Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/common/CommonDatabaseAdapter.java", "diffHunk": "@@ -549,6 +549,21 @@ public void alterSequenceRestartWith(String schemaName, String sequenceName, lon\n         runStatement(ddl);\n     }\n \n+    @Override\n+    public void alterTableColumnIdentityCache(String schemaName, String tableName, String columnName, int cache) {\n+        // Check input strings are clean\n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        DataDefinitionUtil.assertValidName(columnName);\n+        \n+        // modify the CACHE property of the identity column\n+        final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n+        \n+        // so important, we log it\n+        logger.info(ddl);\n+        \n+        runStatement(ddl);\n+    }\n+", "originalCommit": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyOTk3NQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458329975", "bodyText": "Done", "author": "punktilious", "createdAt": "2020-07-21T19:15:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDQ1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjA3MA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458322070", "body": "What do the above two methods do? Shouldn't these just be logged out? ", "bodyText": "What do the above two methods do? Shouldn't these just be logged out?", "bodyHTML": "<p dir=\"auto\">What do the above two methods do? Shouldn't these just be logged out?</p>", "author": "prb112", "createdAt": "2020-07-21T19:01:15Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/model/AlterTableIdentityCache.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * (C) Copyright IBM Corp. 2020\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package com.ibm.fhir.database.utils.model;\n+\n+import java.util.Set;\n+\n+import com.ibm.fhir.database.utils.api.IDatabaseAdapter;\n+\n+/**\n+ * Modify an existing sequence to start with a higher value\n+ */\n+public class AlterTableIdentityCache extends BaseObject {\n+    private final String columnName;\n+    \n+    // caching sequence values for tuning\n+    private final int cache;\n+\n+    /**\n+     * Public constructor\n+     * \n+     * @param schemaName\n+     * @param sequenceName\n+     * @param version\n+     * @param startWith\n+     * @param cache\n+     */\n+    public AlterTableIdentityCache(String schemaName, String tableName, String columnName, int cache, int version) {\n+        super(schemaName, tableName, DatabaseObjectType.SEQUENCE, version);\n+        this.columnName = columnName;\n+        this.cache = cache;\n+    }\n+\n+    @Override\n+    public String getTypeNameVersion() {\n+        // There's typically only one identity column on a table, but we still\n+        // want to qualify the name with the column just to make sure it's unique\n+        return getObjectType().name() + \":\" + getQualifiedName() + \".\" + this.columnName + \":\" + this.version;\n+        \n+    }\n+\n+    @Override\n+    public void apply(IDatabaseAdapter target) {\n+        target.alterTableColumnIdentityCache(getSchemaName(), getObjectName(), this.columnName, this.cache);\n+    }\n+\n+    @Override\n+    public void apply(Integer priorVersion, IDatabaseAdapter target) {\n+        apply(target);\n+    }\n+\n+    @Override\n+    public void drop(IDatabaseAdapter target) {\n+        target.dropSequence(getSchemaName(), getObjectName());\n+    }\n+\n+    @Override\n+    protected void grantGroupPrivileges(IDatabaseAdapter target, Set<Privilege> group, String toUser) {\n+        target.grantSequencePrivileges(getSchemaName(), getObjectName(), group, toUser);\n+    }", "originalCommit": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyNDAzNg==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458324036", "bodyText": "Good catch. Needs to be fixed", "author": "punktilious", "createdAt": "2020-07-21T19:04:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyOTgxOQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458329819", "bodyText": "Done", "author": "punktilious", "createdAt": "2020-07-21T19:15:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjA3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzNDI5OQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458334299", "bodyText": "Is there one more commit to come? not sure I follow what drop and grant mean here", "author": "prb112", "createdAt": "2020-07-21T19:24:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjQ0NQ==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458322445", "body": "```suggestion\r\n```\r\n\r\nWhy generate the string? ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \n          \n          \n            \n                    final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n          \n          \n            \n                    DataDefinitionUtil.assertValidName(columnName);\n          \n          \n            \n                    \n          \n          \n            \n                    // modify the CACHE property of the identity column\n          \n          \n            \n                    final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n          \n      \n    \n    \n  \n\nWhy generate the string?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"375\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"376\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> qname <span class=\"pl-k\">=</span> <span class=\"pl-smi\">DataDefinitionUtil</span><span class=\"pl-k\">.</span>getQualifiedName(schemaName, tableName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"377\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">DataDefinitionUtil</span><span class=\"pl-k\">.</span>assertValidName(columnName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"378\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"379\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> modify the CACHE property of the identity column</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"380\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> ddl <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ALTER TABLE <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> qname <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> ALTER COLUMN <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> columnName <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> SET CACHE <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> cache;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Why generate the string?</p>", "author": "prb112", "createdAt": "2020-07-21T19:01:58Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -367,4 +368,17 @@ public void setIntegrityUnchecked(String schemaName, String tableName) {\n         // not expecting this to be called for this adapter\n         throw new UnsupportedOperationException(\"Set integrity unchecked not supported for this adapter.\");\n     }\n+    \n+    @Override\n+    public void alterTableColumnIdentityCache(String schemaName, String tableName, String columnName, int cache) {\n+        // Not supported by PostgreSQL\n+        \n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        DataDefinitionUtil.assertValidName(columnName);\n+        \n+        // modify the CACHE property of the identity column\n+        final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n+", "originalCommit": "bc3aa6a9219003bfe97037af65a08e378d1cdeba", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyNDk4OA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458324988", "bodyText": "Because the ddl gets logged once as a reminder for what we might need to do.", "author": "punktilious", "createdAt": "2020-07-21T19:06:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjQ0NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyNTI3NA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458325274", "bodyText": "makes sense... per above", "author": "prb112", "createdAt": "2020-07-21T19:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjQ0NQ=="}], "type": "inlineReview"}, {"oid": "71cbdcd3224db96c3cc873f278c950529b483036", "url": "https://github.com/IBM/FHIR/commit/71cbdcd3224db96c3cc873f278c950529b483036", "message": "issue #1341 addresses review comments\n\nSigned-off-by: Robin Arnold <robin.arnold23@ibm.com>", "committedDate": "2020-07-21T19:27:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0ODg0Mg==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458348842", "body": "is there a way to support it in PostgreSQL?\r\ndo we think we won't have the problem there?", "bodyText": "is there a way to support it in PostgreSQL?\ndo we think we won't have the problem there?", "bodyHTML": "<p dir=\"auto\">is there a way to support it in PostgreSQL?<br>\ndo we think we won't have the problem there?</p>", "author": "lmsurpre", "createdAt": "2020-07-21T19:51:55Z", "path": "fhir-database-utils/src/main/java/com/ibm/fhir/database/utils/postgresql/PostgreSqlAdapter.java", "diffHunk": "@@ -367,4 +368,17 @@ public void setIntegrityUnchecked(String schemaName, String tableName) {\n         // not expecting this to be called for this adapter\n         throw new UnsupportedOperationException(\"Set integrity unchecked not supported for this adapter.\");\n     }\n+    \n+    @Override\n+    public void alterTableColumnIdentityCache(String schemaName, String tableName, String columnName, int cache) {\n+        // Not supported by PostgreSQL\n+        \n+        final String qname = DataDefinitionUtil.getQualifiedName(schemaName, tableName);\n+        DataDefinitionUtil.assertValidName(columnName);\n+        \n+        // modify the CACHE property of the identity column\n+        final String ddl = \"ALTER TABLE \" + qname + \" ALTER COLUMN \" + columnName + \" SET CACHE \" + cache;\n+\n+        warnOnce(MessageKey.ALTER_TABLE_SEQ_CACHE, \"Not supported in PostgreSQL: \" + ddl);", "originalCommit": "71cbdcd3224db96c3cc873f278c950529b483036", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NzAwMA==", "url": "https://github.com/IBM/FHIR/pull/1345#discussion_r458357000", "bodyText": "Right, I was thinking about this. We need to see if it's also a problem, but because it means having to fish through the catalog to find the sequence, it's going to be a fair bit of work. Now, I'd still like to migrate to the new schema design which eliminates the row_id identity completely, thus rendering this issue moot.", "author": "punktilious", "createdAt": "2020-07-21T20:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0ODg0Mg=="}], "type": "inlineReview"}]}