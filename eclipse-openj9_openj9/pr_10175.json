{"pr_number": 10175, "pr_title": "Read JAVA_OPTIONS env var before OPENJ9_JAVA_OPTIONS", "pr_author": "pshipton", "pr_createdAt": "2020-07-15T17:59:52Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10175", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNTkxOQ==", "url": "https://github.com/eclipse-openj9/openj9/pull/10175#discussion_r463815919", "body": "```suggestion\r\n\t\tif (!isIbm)\r\n\t\t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\r\n\t\t\tMap<String, String> env = pb.environment();\r\n\t\t\tString javaOptionsArg = \"-Dtest.name=testJavaOptions\"; //$NON-NLS-1$\r\n\t\t\tenv.put(JAVA_OPTIONS, javaOptionsArg);\r\n\t\t\tArrayList<String> actualArguments = runAndGetArgumentList(pb);\r\n\t\t\tHashMap<String, Integer> argumentPositions = checkArguments(actualArguments, new String[] {javaOptionsArg});\r\n\t\t\tassertTrue(MISSING_ARGUMENT+javaOptionsArg, argumentPositions.containsKey(javaOptionsArg));\r\n\t\t\t/* environment variables should come after implicit arguments */\r\n\t\t\tassertTrue(JAVA_OPTIONS+ SHOULD_COME_AFTER+DJAVA_HOME, \r\n\t\t\t\t\targumentPositions.get(javaOptionsArg).intValue() > \targumentPositions.get(DJAVA_HOME).intValue());\r\n\t\t}\r\n\t}\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\n          \n          \n            \n            \t\tMap<String, String> env = pb.environment();\n          \n          \n            \n            \t\tString javaOptionsArg = \"-Dtest.name=testJavaOptions\"; //$NON-NLS-1$\n          \n          \n            \n            \t\tenv.put(JAVA_OPTIONS, javaOptionsArg);\n          \n          \n            \n            \t\tArrayList<String> actualArguments = runAndGetArgumentList(pb);\n          \n          \n            \n            \t\tHashMap<String, Integer> argumentPositions = checkArguments(actualArguments, new String[] {javaOptionsArg});\n          \n          \n            \n            \t\tassertTrue(MISSING_ARGUMENT+javaOptionsArg, argumentPositions.containsKey(javaOptionsArg));\n          \n          \n            \n            \t\t/* environment variables should come after implicit arguments */\n          \n          \n            \n            \t\tassertTrue(JAVA_OPTIONS+ SHOULD_COME_AFTER+DJAVA_HOME, \n          \n          \n            \n            \t\t\t\targumentPositions.get(javaOptionsArg).intValue() > argumentPositions.get(DJAVA_HOME).intValue()); \n          \n          \n            \n            \t}\n          \n          \n            \n            \t\tif (!isIbm)\n          \n          \n            \n            \t\t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\n          \n          \n            \n            \t\t\tMap<String, String> env = pb.environment();\n          \n          \n            \n            \t\t\tString javaOptionsArg = \"-Dtest.name=testJavaOptions\"; //$NON-NLS-1$\n          \n          \n            \n            \t\t\tenv.put(JAVA_OPTIONS, javaOptionsArg);\n          \n          \n            \n            \t\t\tArrayList<String> actualArguments = runAndGetArgumentList(pb);\n          \n          \n            \n            \t\t\tHashMap<String, Integer> argumentPositions = checkArguments(actualArguments, new String[] {javaOptionsArg});\n          \n          \n            \n            \t\t\tassertTrue(MISSING_ARGUMENT+javaOptionsArg, argumentPositions.containsKey(javaOptionsArg));\n          \n          \n            \n            \t\t\t/* environment variables should come after implicit arguments */\n          \n          \n            \n            \t\t\tassertTrue(JAVA_OPTIONS+ SHOULD_COME_AFTER+DJAVA_HOME, \n          \n          \n            \n            \t\t\t\t\targumentPositions.get(javaOptionsArg).intValue() > \targumentPositions.get(DJAVA_HOME).intValue());\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t}", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"356\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\">ProcessBuilder</span> pb <span class=\"pl-k\">=</span> makeProcessBuilder(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {}, <span class=\"pl-c1\">CLASSPATH</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"357\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> env <span class=\"pl-k\">=</span> pb<span class=\"pl-k\">.</span>environment();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"358\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi\">String</span> javaOptionsArg <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-Dtest.name=testJavaOptions<span class=\"pl-pds\">\"</span></span>; <span class=\"pl-c\"><span class=\"pl-c\">//</span>$NON-NLS-1$</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"359\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tenv<span class=\"pl-k\">.</span>put(<span class=\"pl-c1\">JAVA_OPTIONS</span>, javaOptionsArg);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"360\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">ArrayList&lt;<span class=\"pl-smi\">String</span>&gt;</span> actualArguments <span class=\"pl-k\">=</span> runAndGetArgumentList(pb);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"361\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">HashMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Integer</span>&gt;</span> argumentPositions <span class=\"pl-k\">=</span> checkArguments(actualArguments, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {javaOptionsArg});</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"362\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tassertTrue(<span class=\"pl-c1\">MISSING_ARGUMENT</span><span class=\"pl-k\">+</span>javaOptionsArg, argumentPositions<span class=\"pl-k\">.</span>containsKey(javaOptionsArg));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"363\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-c\"><span class=\"pl-c\">/*</span> environment variables should come after implicit arguments <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"364\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tassertTrue(<span class=\"pl-c1\">JAVA_OPTIONS</span><span class=\"pl-k\">+</span> <span class=\"pl-c1\">SHOULD_COME_AFTER</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">DJAVA_HOME</span>, </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"365\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\targumentPositions<span class=\"pl-k\">.</span>get(javaOptionsArg)<span class=\"pl-k\">.</span>intValue() <span class=\"pl-k\">&gt;</span> argumentPositions<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">DJAVA_HOME</span>)<span class=\"pl-k\">.</span>intValue()); </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"366\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"356\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>isIbm)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"357\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-smi\">ProcessBuilder</span> pb <span class=\"pl-k\">=</span> makeProcessBuilder(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {}, <span class=\"pl-c1\">CLASSPATH</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"358\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> env <span class=\"pl-k\">=</span> pb<span class=\"pl-k\">.</span>environment();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"359\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-smi\">String</span> javaOptionsArg <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-Dtest.name=testJavaOptions<span class=\"pl-pds\">\"</span></span>; <span class=\"pl-c\"><span class=\"pl-c\">//</span>$NON-NLS-1$</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"360\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tenv<span class=\"pl-k\">.</span>put(<span class=\"pl-c1\">JAVA_OPTIONS</span>, javaOptionsArg);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"361\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">ArrayList&lt;<span class=\"pl-smi\">String</span>&gt;</span> actualArguments <span class=\"pl-k\">=</span> runAndGetArgumentList(pb);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"362\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">HashMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Integer</span>&gt;</span> argumentPositions <span class=\"pl-k\">=</span> checkArguments(actualArguments, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {javaOptionsArg});</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"363\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tassertTrue(<span class=\"pl-c1\">MISSING_ARGUMENT</span><span class=\"pl-k\">+</span>javaOptionsArg, argumentPositions<span class=\"pl-k\">.</span>containsKey(javaOptionsArg));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"364\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">/*</span> environment variables should come after implicit arguments <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"365\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tassertTrue(<span class=\"pl-c1\">JAVA_OPTIONS</span><span class=\"pl-k\">+</span> <span class=\"pl-c1\">SHOULD_COME_AFTER</span><span class=\"pl-k\">+</span><span class=\"pl-c1\">DJAVA_HOME</span>, </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"366\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\targumentPositions<span class=\"pl-k\">.</span>get(javaOptionsArg)<span class=\"pl-k\">.</span>intValue() <span class=\"pl-k\">&gt;</span> \targumentPositions<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">DJAVA_HOME</span>)<span class=\"pl-k\">.</span>intValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"367\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"368\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DanHeidinga", "createdAt": "2020-07-31T20:18:15Z", "path": "test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java", "diffHunk": "@@ -334,7 +335,23 @@ public void testArgEncodingInIbmJavaOptions() {\n \t\tassertTrue(IBM_JAVA_OPTIONS+ \" should come last\", argumentPositions.get(ibmJavaOptionsArg).intValue() > argumentPositions.get(DJAVA_HOME).intValue());\n \t}\n \n-\t/* test OPENJ9_JAVA_OPTIONS environment variableS */\n+\t/* test JAVA_OPTIONS environment variable */\n+\t@Test\n+\tpublic void testJavaOptions() {\n+\t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\n+\t\tMap<String, String> env = pb.environment();\n+\t\tString javaOptionsArg = \"-Dtest.name=testJavaOptions\"; //$NON-NLS-1$\n+\t\tenv.put(JAVA_OPTIONS, javaOptionsArg);\n+\t\tArrayList<String> actualArguments = runAndGetArgumentList(pb);\n+\t\tHashMap<String, Integer> argumentPositions = checkArguments(actualArguments, new String[] {javaOptionsArg});\n+\t\tassertTrue(MISSING_ARGUMENT+javaOptionsArg, argumentPositions.containsKey(javaOptionsArg));\n+\t\t/* environment variables should come after implicit arguments */\n+\t\tassertTrue(JAVA_OPTIONS+ SHOULD_COME_AFTER+DJAVA_HOME, \n+\t\t\t\targumentPositions.get(javaOptionsArg).intValue() > argumentPositions.get(DJAVA_HOME).intValue()); \n+\t}", "originalCommit": "bbd52ba7b13931b4662b00a64e6897fdc318640e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNjUzNw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10175#discussion_r463816537", "body": "```suggestion\r\n\t\tif (isIbm) {\r\n\t\t\t/* disable this test for IBM builds */\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\n          \n          \n            \n            \t\tif (isIbm) {\n          \n          \n            \n            \t\t\t/* disable this test for IBM builds */\n          \n          \n            \n            \t\t\treturn;\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"694\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-smi x x-first\">ProcessBuilder</span><span class=\"x\"> pb </span><span class=\"pl-k x\">=</span><span class=\"x\"> makeProcessBuilder(</span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">String</span><span class=\"x\">[] {}, </span><span class=\"pl-c1 x\">CLASSPATH</span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"694\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k x x-first\">if</span><span class=\"x x-last\"> (isIbm) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"695\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">/*</span> disable this test for IBM builds <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"696\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"697\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"698\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-smi\">ProcessBuilder</span> pb <span class=\"pl-k\">=</span> makeProcessBuilder(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[] {}, <span class=\"pl-c1\">CLASSPATH</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DanHeidinga", "createdAt": "2020-07-31T20:19:51Z", "path": "test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java", "diffHunk": "@@ -666,30 +683,36 @@ public void testCommandlineArgumentsWithLeadingAndTrailingSpaces() {\n \t\t}\n \t}\n \n-\t/* IBM_JAVA_OPTIONS should take priority over JAVA_TOOL_OPTIONS */\n+\t/* IBM_JAVA_OPTIONS should take priority over JAVA_TOOL_OPTIONS, and JAVA_OPTIONS */\n \t@Test\n \tpublic void testEnvironmentVariableOrdering() {\n \t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);", "originalCommit": "bbd52ba7b13931b4662b00a64e6897fdc318640e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7721381277fba6d09a51452d4eefda438b4b5d39", "url": "https://github.com/eclipse-openj9/openj9/commit/7721381277fba6d09a51452d4eefda438b4b5d39", "message": "Fix review comments", "committedDate": "2020-10-02T02:04:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NTc5Mw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10175#discussion_r498795793", "body": "nit: spaces missing around `?` and `:` (here and on line 153).", "bodyText": "nit: spaces missing around ? and : (here and on line 153).", "bodyHTML": "<p dir=\"auto\">nit: spaces missing around <code>?</code> and <code>:</code> (here and on line 153).</p>", "author": "keithc-ca", "createdAt": "2020-10-02T12:40:48Z", "path": "test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java", "diffHunk": "@@ -130,9 +132,9 @@\n \tprotected static Logger logger = Logger.getLogger(VmArgumentTests.class);\n \n \tstatic {\n-\t\tboolean isIbm = System.getProperty(\"java.vm.vendor\").equals(\"IBM Corporation\");\n+\t\tisIBM = System.getProperty(\"java.vm.vendor\").equals(\"IBM Corporation\");\n \t\tmandatoryArgumentsJava8 = new String[] {\n-\t\t\t\tisIbm?XOPTIONSFILE:null,\n+\t\t\t\tisIBM?XOPTIONSFILE:null,", "originalCommit": "3149bd71a608a9f4d747863692f7e92bb0b84388", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc5NjI2NA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10175#discussion_r498796264", "body": "nit: spaces missing around `+` (here and several places below).", "bodyText": "nit: spaces missing around + (here and several places below).", "bodyHTML": "<p dir=\"auto\">nit: spaces missing around <code>+</code> (here and several places below).</p>", "author": "keithc-ca", "createdAt": "2020-10-02T12:41:44Z", "path": "test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java", "diffHunk": "@@ -666,30 +688,46 @@ public void testCommandlineArgumentsWithLeadingAndTrailingSpaces() {\n \t\t}\n \t}\n \n-\t/* IBM_JAVA_OPTIONS should take priority over JAVA_TOOL_OPTIONS */\n+\t/* IBM_JAVA_OPTIONS should take priority over JAVA_TOOL_OPTIONS, and JAVA_OPTIONS */\n \t@Test\n \tpublic void testEnvironmentVariableOrdering() {\n \t\tProcessBuilder pb = makeProcessBuilder(new String[] {}, CLASSPATH);\n \t\tMap<String, String> env = pb.environment();\n-\t\tString javaToolOptionsArg = \"-Dtest.name1=javaToolOptionsArg\";\n-\t\tString ibmJavaOptionsArg = \"-Dtest.name2=ibmJavaOptionsArg\";\n-\t\tString openJ9JavaOptionsArg = \"-Dtest.name2=openJ9JavaOptionsArg\";\n-\t\tenv.put(JAVA_TOOL_OPTIONS, javaToolOptionsArg);\n+\t\tString ibmJavaOptionsArg = \"-Dtest.name1=ibmJavaOptionsArg\";\n+\t\tString javaOptionsArg = \"-Dtest.name2=javaOptionsArg\";\n+\t\tString javaToolOptionsArg = \"-Dtest.name3=javaToolOptionsArg\";\n+\t\tString openJ9JavaOptionsArg = \"-Dtest.name4=openJ9JavaOptionsArg\";\n \t\tenv.put(IBM_JAVA_OPTIONS, ibmJavaOptionsArg);\n+\t\tenv.put(JAVA_OPTIONS, javaOptionsArg);\n+\t\tenv.put(JAVA_TOOL_OPTIONS, javaToolOptionsArg);\n \t\tenv.put(OPENJ9_JAVA_OPTIONS, openJ9JavaOptionsArg);\n \t\tArrayList<String> actualArguments = runAndGetArgumentList(pb);\n \t\tHashMap<String, Integer> argumentPositions = checkArguments(actualArguments, \n-\t\t\t\tnew String[] {ibmJavaOptionsArg, javaToolOptionsArg, openJ9JavaOptionsArg});\n+\t\t\t\tnew String[] {ibmJavaOptionsArg, javaOptionsArg, javaToolOptionsArg, openJ9JavaOptionsArg});\n \t\tassertTrue(MISSING_ARGUMENT+ibmJavaOptionsArg, \n \t\t\t\targumentPositions.containsKey(ibmJavaOptionsArg));\n+\t\tif (!isJava8 || !isIBM) {\n+\t\t\tassertTrue(MISSING_ARGUMENT+javaOptionsArg, ", "originalCommit": "3149bd71a608a9f4d747863692f7e92bb0b84388", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "735e52d4eea492c7d205c56817790c6f7981d3b6", "url": "https://github.com/eclipse-openj9/openj9/commit/735e52d4eea492c7d205c56817790c6f7981d3b6", "message": "Read JAVA_OPTIONS env var before OPENJ9_JAVA_OPTIONS\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-10-02T14:53:42Z", "type": "commit"}, {"oid": "d08926385bc373a10d2874fd9b2b0d167900be16", "url": "https://github.com/eclipse-openj9/openj9/commit/d08926385bc373a10d2874fd9b2b0d167900be16", "message": "Fix bug when -XX:+UseNoGC used in environment variable\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-10-02T14:53:43Z", "type": "commit"}, {"oid": "d08926385bc373a10d2874fd9b2b0d167900be16", "url": "https://github.com/eclipse-openj9/openj9/commit/d08926385bc373a10d2874fd9b2b0d167900be16", "message": "Fix bug when -XX:+UseNoGC used in environment variable\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>", "committedDate": "2020-10-02T14:53:43Z", "type": "forcePushed"}]}