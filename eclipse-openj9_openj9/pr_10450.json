{"pr_number": 10450, "pr_title": "Add explicit default constructors", "pr_author": "keithc-ca", "pr_createdAt": "2020-08-25T13:48:47Z", "pr_url": "https://github.com/eclipse-openj9/openj9/pull/10450", "timeline": [{"oid": "e1ee78e06c1ac5b699379cded2e1ec62af57b353", "url": "https://github.com/eclipse-openj9/openj9/commit/e1ee78e06c1ac5b699379cded2e1ec62af57b353", "message": "Add explicit default constructors\n\nFixes new warnings in jdk16:\n  warning: [missing-explicit-ctor] class in exported package declares\n  no explicit constructors, thereby exposing a default constructor to\n  clients of module\n\nAlso fix javadoc of Stats class.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>", "committedDate": "2020-08-25T17:02:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcwMDU4Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r477700587", "body": "I only see static methods on this class.  Why provide a public constructor?  I'd be tempted to make the class `final` as well.", "bodyText": "I only see static methods on this class.  Why provide a public constructor?  I'd be tempted to make the class final as well.", "bodyHTML": "<p dir=\"auto\">I only see static methods on this class.  Why provide a public constructor?  I'd be tempted to make the class <code>final</code> as well.</p>", "author": "DanHeidinga", "createdAt": "2020-08-26T23:47:43Z", "path": "jcl/src/openj9.gpu/share/classes/com/ibm/gpu/Maths.java", "diffHunk": "@@ -32,6 +32,13 @@\n  */\n public class Maths {\n \n+\t/**\n+\t * Construct a new instance.\n+\t */\n+\tpublic Maths() {", "originalCommit": "e1ee78e06c1ac5b699379cded2e1ec62af57b353", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcwMjQ4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r477702488", "body": "Is there a reason to have a public constructor?  I also wonder about making this final", "bodyText": "Is there a reason to have a public constructor?  I also wonder about making this final", "bodyHTML": "<p dir=\"auto\">Is there a reason to have a public constructor?  I also wonder about making this final</p>", "author": "DanHeidinga", "createdAt": "2020-08-26T23:49:01Z", "path": "jcl/src/openj9.gpu/share/classes/com/ibm/gpu/Version.java", "diffHunk": "@@ -29,6 +29,13 @@\n  */\n public class Version {\n \n+\t/**\n+\t * Construct a new instance.\n+\t */\n+\tpublic Version() {", "originalCommit": "e1ee78e06c1ac5b699379cded2e1ec62af57b353", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQxODk2Ng==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r478418966", "body": "The variables are automatically initialized to zero without adding the bytecodes to explicitly do this. We've removed code like this from other places in the past to (slightly) reduce the code size and improve execution speed.", "bodyText": "The variables are automatically initialized to zero without adding the bytecodes to explicitly do this. We've removed code like this from other places in the past to (slightly) reduce the code size and improve execution speed.", "bodyHTML": "<p dir=\"auto\">The variables are automatically initialized to zero without adding the bytecodes to explicitly do this. We've removed code like this from other places in the past to (slightly) reduce the code size and improve execution speed.</p>", "author": "pshipton", "createdAt": "2020-08-27T13:28:30Z", "path": "jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Stats.java", "diffHunk": "@@ -21,33 +20,49 @@\n  *\n  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n  *******************************************************************************/\n-\n package com.ibm.jvm;\n \n /**\n  * This class is used provide the following java heap and system statistics:\n- * <ul> committed heap memory\n- * <ul> used heap memory\n- * <ul> max heap memory\n- * <ul> softmx heap memory\n- * <ul> free physical memory\n- * <ul> total physical memory\n- * All this info is retrieved without any allocation of new objects\n+ * <ul>\n+ * <li>committed heap memory</li>\n+ * <li>used heap memory</li>\n+ * <li>max heap memory</li>\n+ * <li>softmx heap memory</li>\n+ * <li>free physical memory</li>\n+ * <li>total physical memory</li>\n+ * </ul>\n+ * All this info is retrieved without any allocation of new objects.\n  */\n public class Stats {\n-\tprivate long committedHeap = 0L;\n-\tprivate long usedHeap = 0L;\n-\tprivate long maxHeap = 0L;\n-\tprivate long softmxHeap = 0L;\n-\tprivate long freePhysicalMem = 0L;\n-\tprivate long totPhysicalMem = 0L;\n-\tprivate double sysLoadAvg = 0.0;\n-\tprivate long cpuTime = 0L;\n+\tprivate long committedHeap;\n+\tprivate long usedHeap;\n+\tprivate long maxHeap;\n+\tprivate long softmxHeap;\n+\tprivate long freePhysicalMem;\n+\tprivate long totPhysicalMem;\n+\tprivate double sysLoadAvg;\n+\tprivate long cpuTime;\n+\n+\t/**\n+\t * Construct a new instance.\n+\t */\n+\tpublic Stats() {\n+\t\tsuper();\n+\t\tthis.committedHeap = 0;", "originalCommit": "e1ee78e06c1ac5b699379cded2e1ec62af57b353", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "027af0651c4789e9b2f9d7cfb6d46e9df3271408", "url": "https://github.com/eclipse-openj9/openj9/commit/027af0651c4789e9b2f9d7cfb6d46e9df3271408", "message": "Add explicit default constructors\n\nFixes new warnings in jdk16:\n  warning: [missing-explicit-ctor] class in exported package declares\n  no explicit constructors, thereby exposing a default constructor to\n  clients of module\n\nIn openj9.gpu for jdk16, make constructors private and classes final.\n\nAlso fix javadoc of Stats class.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>", "committedDate": "2020-08-27T14:35:43Z", "type": "commit"}, {"oid": "027af0651c4789e9b2f9d7cfb6d46e9df3271408", "url": "https://github.com/eclipse-openj9/openj9/commit/027af0651c4789e9b2f9d7cfb6d46e9df3271408", "message": "Add explicit default constructors\n\nFixes new warnings in jdk16:\n  warning: [missing-explicit-ctor] class in exported package declares\n  no explicit constructors, thereby exposing a default constructor to\n  clients of module\n\nIn openj9.gpu for jdk16, make constructors private and classes final.\n\nAlso fix javadoc of Stats class.\n\nSigned-off-by: Keith W. Campbell <keithc@ca.ibm.com>", "committedDate": "2020-08-27T14:35:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3NDQ4OA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r478474488", "body": "I'm iffy on duplicating the class definition.  How do you feel about something like: \r\n\r\n```suggestion\r\npublic \r\n/*[IF Java16]*/\r\nfinal \r\n/*[ENDIF] Java16*/\r\nclass Maths {\r\n\r\n/*[IF Java16]*/\r\n\tprivate Maths() {\r\n\t\tsuper();\r\n\t}\r\n/*[ENDIF] Java16*/\r\n```", "bodyText": "I'm iffy on duplicating the class definition.  How do you feel about something like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /*[IF Java16]*/\n          \n          \n            \n            public final class Maths {\n          \n          \n            \n            \n          \n          \n            \n            \tprivate Maths() {\n          \n          \n            \n            \t\tsuper();\n          \n          \n            \n            \t}\n          \n          \n            \n            /*[ELSE] Java16\n          \n          \n            \n            public class Maths {\n          \n          \n            \n            /*[ENDIF] Java16*/\n          \n          \n            \n            public \n          \n          \n            \n            /*[IF Java16]*/\n          \n          \n            \n            final \n          \n          \n            \n            /*[ENDIF] Java16*/\n          \n          \n            \n            class Maths {\n          \n          \n            \n            \n          \n          \n            \n            /*[IF Java16]*/\n          \n          \n            \n            \tprivate Maths() {\n          \n          \n            \n            \t\tsuper();\n          \n          \n            \n            \t}\n          \n          \n            \n            /*[ENDIF] Java16*/", "bodyHTML": "<p dir=\"auto\">I'm iffy on duplicating the class definition.  How do you feel about something like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"33\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[IF Java16]<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"34\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Maths</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"35\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"36\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">private</span> Maths() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-c1\">super</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"38\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[ELSE] Java16</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Maths</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[ENDIF] Java16<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"33\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"34\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[IF Java16]<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"35\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">final</span> </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"36\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[ENDIF] Java16<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">class</span> <span class=\"pl-en\">Maths</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"38\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[IF Java16]<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">private</span> Maths() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-c1\">super</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"43\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>[ENDIF] Java16<span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DanHeidinga", "createdAt": "2020-08-27T14:45:13Z", "path": "jcl/src/openj9.gpu/share/classes/com/ibm/gpu/Maths.java", "diffHunk": "@@ -30,7 +30,15 @@\n  * on any connected CUDA GPU. A successful sort operation\n  * results in the array being sorted in ascending order.\n  */\n+/*[IF Java16]*/\n+public final class Maths {\n+\n+\tprivate Maths() {\n+\t\tsuper();\n+\t}\n+/*[ELSE] Java16\n public class Maths {\n+/*[ENDIF] Java16*/", "originalCommit": "027af0651c4789e9b2f9d7cfb6d46e9df3271408", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ4MzczMg==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r478483732", "bodyText": "I tried that first but rejected it for two reasons:\n\nit involves repeating the condition\nI didn't like the formatted result (which ends up in src.zip):\n\npublic\nfinal\nclass Maths {", "author": "keithc-ca", "createdAt": "2020-08-27T14:57:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3NDQ4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODUzNTAwNA==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r478535004", "bodyText": "Neither is great.   I don't have a firm objection.", "author": "DanHeidinga", "createdAt": "2020-08-27T16:10:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3NDQ4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ3NTU0Nw==", "url": "https://github.com/eclipse-openj9/openj9/pull/10450#discussion_r478475547", "body": "Same question about formatting as above.  I won't repeat it here but we should do the same with all copies of the pattern", "bodyText": "Same question about formatting as above.  I won't repeat it here but we should do the same with all copies of the pattern", "bodyHTML": "<p dir=\"auto\">Same question about formatting as above.  I won't repeat it here but we should do the same with all copies of the pattern</p>", "author": "DanHeidinga", "createdAt": "2020-08-27T14:46:37Z", "path": "jcl/src/openj9.gpu/share/classes/com/ibm/gpu/Version.java", "diffHunk": "@@ -27,7 +27,15 @@\n  * The main method can be launched from the command line, which will print\n  * the current level to stdout.\n  */\n+/*[IF Java16]*/", "originalCommit": "027af0651c4789e9b2f9d7cfb6d46e9df3271408", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}