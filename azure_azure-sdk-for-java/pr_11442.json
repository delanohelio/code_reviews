{"pr_number": 11442, "pr_title": "Updated APIs with docs. Fixed few issues", "pr_author": "kushagraThapar", "pr_createdAt": "2020-05-27T00:00:20Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/11442", "timeline": [{"oid": "14b6bb77d6e8bdf3456abd5d099b110c04d3f494", "url": "https://github.com/Azure/azure-sdk-for-java/commit/14b6bb77d6e8bdf3456abd5d099b110c04d3f494", "message": "Updated APIs with docs. Fixed few issues", "committedDate": "2020-05-26T23:58:27Z", "type": "commit"}, {"oid": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/67fb20faf9ff2f31083f0704897255d9d7301dd5", "message": "Merge latest master", "committedDate": "2020-05-27T06:19:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNjYxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r430916617", "body": "```suggestion\r\n * Calls to client API's are blocked for completion.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This a synchronous client and is used to perform operations in a synchronous way\n          \n          \n            \n             * Calls to client API's are blocked for completion.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">This</span><span class=\"x x-last\"> a synchronous </span>client <span class=\"x x-first x-last\">and is used to perform operations in a synchronous way</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">Calls</span><span class=\"x x-last\"> to </span>client <span class=\"pl-c1 x x-first\">API</span><span class=\"pl-s\"><span class=\"pl-pds x\">'</span><span class=\"x x-last\">s are blocked for completion.</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kirankumarkolli", "createdAt": "2020-05-27T07:39:16Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClient.java", "diffHunk": "@@ -22,7 +22,7 @@\n \n /**\n  * Provides a client-side logical representation of the Azure Cosmos DB service.\n- * SyncClient is used to perform operations in a synchronous way\n+ * This a synchronous client and is used to perform operations in a synchronous way", "originalCommit": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2MzY4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431263682", "bodyText": "suggestion makes sense.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:07:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNjYxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4MDM2OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431280369", "bodyText": "Done.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:32:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNjYxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNzEwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r430917104", "body": "```suggestion\r\n * By default, account consistency level is used if none is provided.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * By default, SESSION consistency level is used if none is provided.\n          \n          \n            \n             * By default, account consistency level is used if none is provided.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">By</span> <span class=\"pl-k\">default</span>, <span class=\"pl-c1 x x-first x-last\">SESSION</span> consistency level is used <span class=\"pl-k\">if</span> none is provided.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">By</span> <span class=\"pl-k\">default</span>, <span class=\"x x-first x-last\">account</span> consistency level is used <span class=\"pl-k\">if</span> none is provided.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kirankumarkolli", "createdAt": "2020-05-27T07:40:09Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/CosmosClientBuilder.java", "diffHunk": "@@ -16,12 +16,13 @@\n /**\n  * Helper class to build CosmosAsyncClient {@link CosmosAsyncClient} and CosmosClient {@link CosmosClient}\n  * instances as logical representation of the Azure Cosmos database service.\n- *\n+ * <p>\n  * When building client, endpoint() and key() are mandatory APIs, without these the initialization will fail.\n- *\n+ * <p>\n  * Though consistencyLevel is not mandatory, but we strongly suggest to pay attention to this API when building client.\n- * By default, database account level consistency level is used if none is provided.\n- *\n+ * By default, SESSION consistency level is used if none is provided.", "originalCommit": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNzQ0Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r430917443", "bodyText": "This will enable us treat it a as bug fix for later, otherwise its always required behavior.", "author": "kirankumarkolli", "createdAt": "2020-05-27T07:40:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNzEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDMyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431264326", "bodyText": "Good point, but is it okay to represent false documentation when we know its a bug at first place ?", "author": "kushagraThapar", "createdAt": "2020-05-27T16:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNzEwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4MDU3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431280576", "bodyText": "Changes done. Will treat this as a bug in future.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:32:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxNzEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxODAxNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r430918017", "body": "Is it supposed to be non-public?\r\nIts in implementation, guess its okey.", "bodyText": "Is it supposed to be non-public?\nIts in implementation, guess its okey.", "bodyHTML": "<p dir=\"auto\">Is it supposed to be non-public?<br>\nIts in implementation, guess its okey.</p>", "author": "kirankumarkolli", "createdAt": "2020-05-27T07:41:48Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/Conflict.java", "diffHunk": "@@ -42,7 +42,7 @@ public String getOperationKind() {\n      *\n      * @return the resource type.\n      */\n-    public String getResouceType() {\n+    public String getResourceType() {", "originalCommit": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI2NDUzOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431264538", "bodyText": "Yes, implementation detail. Its fine if it is public.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxODAxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r430920509", "body": "Wow, that was a bug?\r\nIs PKrangeID always guaranteed in this code path?", "bodyText": "Wow, that was a bug?\nIs PKrangeID always guaranteed in this code path?", "bodyHTML": "<p dir=\"auto\">Wow, that was a bug?<br>\nIs PKrangeID always guaranteed in this code path?</p>", "author": "kirankumarkolli", "createdAt": "2020-05-27T07:46:15Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/SessionTokenHelper.java", "diffHunk": "@@ -154,7 +154,8 @@ static boolean tryParse(String sessionToken, ValueHolder<ISessionToken> parsedSe\n     public static void validateAndRemoveSessionToken(RxDocumentServiceRequest request) {\n         String sessionToken = request.getHeaders().get(HttpConstants.HttpHeaders.SESSION_TOKEN);\n         if (!Strings.isNullOrEmpty(sessionToken)) {\n-            getLocalSessionToken(request, sessionToken, StringUtils.EMPTY);\n+            String partitionKeyRangeId = request.requestContext.resolvedPartitionKeyRange.getId();", "originalCommit": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MjAyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431272027", "bodyText": "this is for validation. Why this change is needed?", "author": "moderakh", "createdAt": "2020-05-27T16:19:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MjM4Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431272382", "bodyText": "Yes, this was a bug.\nIt is guaranteed, if not present, then it is a bug.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:19:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3NTAxMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431275013", "bodyText": "This code path will always throw IllegalStateException - because we are always passing empty string - here is the issue - #9053", "author": "kushagraThapar", "createdAt": "2020-05-27T16:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3OTU1MA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431279550", "bodyText": "@kushagraThapar #9053 is for the PartitionKey.None is that right link?", "author": "moderakh", "createdAt": "2020-05-27T16:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4MDEwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431280108", "bodyText": "Yes, my bad. Here is the right link - #10493", "author": "kushagraThapar", "createdAt": "2020-05-27T16:31:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4Mjc5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431282799", "bodyText": "@kirankumarkolli @kushagraThapar  .Net seem to be doing the same thing as we used to do here:\nSessionTokenHelper.cs:\npublic static void ValidateAndRemoveSessionToken(DocumentServiceRequest request)\n{\n    string sessionToken = request.Headers[HttpConstants.HttpHeaders.SessionToken];\n    if (!string.IsNullOrEmpty(sessionToken))\n    {\n        GetLocalSessionToken(request, sessionToken, string.Empty);\n         request.Headers.Remove(HttpConstants.HttpHeaders.SessionToken);\n    }\n}", "author": "moderakh", "createdAt": "2020-05-27T16:35:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI5MDIxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431290216", "bodyText": "True, but .Net doesn't throw Exception on passing empty partition key range id. Like we do:\nif (partitionKeyRangeId == null || partitionKeyRangeId.isEmpty()) {\n            // AddressCache/address resolution didn't produce partition key range id.\n            // In this case it is a bug.\n            throw new IllegalStateException(\"Partition key range Id is absent in the context.\");\n        }\n\nMay be we should get rid of this exception clause then, instead of passing partitionId and keep passing empty string to be in parity with .Net ?", "author": "kushagraThapar", "createdAt": "2020-05-27T16:45:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTMyNzk0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431327941", "bodyText": "Discussed offline with @moderakh\nFinal logic is, we will just get rid of partitionKeyRangeId.isEmpty() check.", "author": "kushagraThapar", "createdAt": "2020-05-27T17:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyMDUwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MjYwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431272609", "body": "please add a unit test for the change. See `PartitionKeyInternalTest` for existing tests.", "bodyText": "please add a unit test for the change. See PartitionKeyInternalTest for existing tests.", "bodyHTML": "<p dir=\"auto\">please add a unit test for the change. See <code>PartitionKeyInternalTest</code> for existing tests.</p>", "author": "moderakh", "createdAt": "2020-05-27T16:20:07Z", "path": "sdk/cosmos/azure-cosmos/src/main/java/com/azure/cosmos/implementation/routing/PartitionKeyInternal.java", "diffHunk": "@@ -259,11 +259,14 @@ public void serialize(PartitionKeyInternal partitionKey, JsonGenerator writer, S\n                     return;\n                 }\n \n-                writer.writeStartArray();\n-                for (IPartitionKeyComponent componentValue : partitionKey.getComponents()) {\n-                    componentValue.jsonEncode(writer);\n+                //  PartitionKey.None has null components - which returns a null list\n+                if (partitionKey.getComponents() != null) {\n+                    writer.writeStartArray();\n+                    for (IPartitionKeyComponent componentValue : partitionKey.getComponents()) {\n+                        componentValue.jsonEncode(writer);\n+                    }\n+                    writer.writeEndArray();", "originalCommit": "67fb20faf9ff2f31083f0704897255d9d7301dd5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3NTE1MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431275151", "bodyText": "Sure, will do.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:23:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MjYwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI4MDE3Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/11442#discussion_r431280173", "bodyText": "Added unit test.", "author": "kushagraThapar", "createdAt": "2020-05-27T16:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTI3MjYwOQ=="}], "type": "inlineReview"}, {"oid": "221e786fd7382b0d364d79b0059208dcb468a157", "url": "https://github.com/Azure/azure-sdk-for-java/commit/221e786fd7382b0d364d79b0059208dcb468a157", "message": "Code review comments. Added unit test for NONE Partition key serialization", "committedDate": "2020-05-27T16:30:55Z", "type": "commit"}, {"oid": "62cfc4cefbedf2c40ce7d492f7f1cc52be899c4e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/62cfc4cefbedf2c40ce7d492f7f1cc52be899c4e", "message": "Removed createDatabaseIfNotExists with databaseProperties argument. Added more docs", "committedDate": "2020-05-27T17:05:29Z", "type": "commit"}, {"oid": "4cdc6515c4a27a4297944962ca3590f04a57e9ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4cdc6515c4a27a4297944962ca3590f04a57e9ce", "message": "Reverted the StringUtils.EMPTY change, removed empty check for IllegalStateException", "committedDate": "2020-05-27T17:45:37Z", "type": "commit"}]}