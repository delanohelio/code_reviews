{"pr_number": 18348, "pr_title": "Vijay idle receiver cpu", "pr_author": "yvgopal", "pr_createdAt": "2020-12-24T06:54:54Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/18348", "timeline": [{"oid": "25d484b45b6135678c08a841b364fdecbc29a214", "url": "https://github.com/Azure/azure-sdk-for-java/commit/25d484b45b6135678c08a841b364fdecbc29a214", "message": "Changing the message return daemon sleep to 10 milliseconds in CoreMessageReceiver.", "committedDate": "2020-12-22T05:27:21Z", "type": "commit"}, {"oid": "c53fb6840337b74ad0760180c886b986fb498844", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c53fb6840337b74ad0760180c886b986fb498844", "message": "Fixing a bug in sessino pump that is causing the pump to stop accepting sessions if a session lock is lost.", "committedDate": "2020-12-24T06:39:35Z", "type": "commit"}, {"oid": "a21a33fb592178edd5d910d90bc6c6112197e2f6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/a21a33fb592178edd5d910d90bc6c6112197e2f6", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into vijay-idle-receiver-cpu", "committedDate": "2020-12-24T06:40:24Z", "type": "commit"}, {"oid": "16b074b6ba543d7ccc63efd383b8aef923fc4997", "url": "https://github.com/Azure/azure-sdk-for-java/commit/16b074b6ba543d7ccc63efd383b8aef923fc4997", "message": "Updating service bus track1 SDK version to 3.6.0.", "committedDate": "2020-12-24T06:50:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNjA4OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18348#discussion_r549506088", "body": "```suggestion\r\n    \t\tCompletableFuture<IMessage> exceptionalFuture = new CompletableFuture<IMessage>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \t\tCompletableFuture<IMessage> excetionalFuture = new CompletableFuture<IMessage>();\n          \n          \n            \n                \t\tCompletableFuture<IMessage> exceptionalFuture = new CompletableFuture<IMessage>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    \t\t<span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">IMessage</span>&gt;</span> <span class=\"x x-first x-last\">excetionalFuture</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">IMessage</span>&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    \t\t<span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">IMessage</span>&gt;</span> <span class=\"x x-first x-last\">exceptionalFuture</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">IMessage</span>&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "srnagar", "createdAt": "2020-12-28T22:28:38Z", "path": "sdk/servicebus/microsoft-azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageAndSessionPump.java", "diffHunk": "@@ -839,6 +839,58 @@ private void notifyExceptionToMessageHandler(Throwable ex, ExceptionPhase phase)\n             this.customCodeExecutor.execute(() -> this.messageHandler.notifyException(ex, phase));\n         }\n     }\n+    \n+    // These wrappers catch any synchronous exceptions and properly complete completablefutures with those excetions.\n+    // Callers of these methods don't expect any synchronous exceptions.\n+    private static CompletableFuture<IMessage> receiveAsyncWrapper(IMessageReceiver receiver, Duration serverWaitTime) {\n+    \ttry\t{\n+    \t\treturn receiver.receiveAsync(serverWaitTime);\n+    \t} catch (Throwable t) {\n+    \t\tCompletableFuture<IMessage> excetionalFuture = new CompletableFuture<IMessage>();", "originalCommit": "16b074b6ba543d7ccc63efd383b8aef923fc4997", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwNjc5Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/18348#discussion_r549506797", "body": "nit: `exceptionalFuture` - fix this typo in other places too", "bodyText": "nit: exceptionalFuture - fix this typo in other places too", "bodyHTML": "<p dir=\"auto\">nit: <code>exceptionalFuture</code> - fix this typo in other places too</p>", "author": "srnagar", "createdAt": "2020-12-28T22:32:32Z", "path": "sdk/servicebus/microsoft-azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageAndSessionPump.java", "diffHunk": "@@ -839,6 +839,58 @@ private void notifyExceptionToMessageHandler(Throwable ex, ExceptionPhase phase)\n             this.customCodeExecutor.execute(() -> this.messageHandler.notifyException(ex, phase));\n         }\n     }\n+    \n+    // These wrappers catch any synchronous exceptions and properly complete completablefutures with those excetions.\n+    // Callers of these methods don't expect any synchronous exceptions.\n+    private static CompletableFuture<IMessage> receiveAsyncWrapper(IMessageReceiver receiver, Duration serverWaitTime) {\n+    \ttry\t{\n+    \t\treturn receiver.receiveAsync(serverWaitTime);\n+    \t} catch (Throwable t) {\n+    \t\tCompletableFuture<IMessage> excetionalFuture = new CompletableFuture<IMessage>();\n+    \t\texcetionalFuture.completeExceptionally(t);\n+    \t\treturn excetionalFuture;\n+    \t}\n+    }\n+    \n+    private static CompletableFuture<Void> completeAsyncWrapper(IMessageReceiver receiver, UUID lockToken) {\n+    \ttry\t{\n+    \t\treturn receiver.completeAsync(lockToken);\n+    \t} catch (Throwable t) {\n+    \t\tCompletableFuture<Void> excetionalFuture = new CompletableFuture<Void>();", "originalCommit": "16b074b6ba543d7ccc63efd383b8aef923fc4997", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c1cb4befa1421c4701596aba040c932dee8e94e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3c1cb4befa1421c4701596aba040c932dee8e94e", "message": "Correcting a spelling.", "committedDate": "2020-12-28T23:23:00Z", "type": "commit"}]}