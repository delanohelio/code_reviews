{"pr_number": 7356, "pr_title": "Support AM/PM in MSI token", "pr_author": "jianghaolu", "pr_createdAt": "2020-01-10T23:48:38Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7356", "timeline": [{"oid": "694695ea2f514e494a495917bf80a58eaa9362b6", "url": "https://github.com/Azure/azure-sdk-for-java/commit/694695ea2f514e494a495917bf80a58eaa9362b6", "message": "Support AM/PM in MSI token", "committedDate": "2020-01-10T23:22:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365475636", "body": "Can we use `Locale.ROOT` instead or does it have to be in US locale?", "bodyText": "Can we use Locale.ROOT instead or does it have to be in US locale?", "bodyHTML": "<p dir=\"auto\">Can we use <code>Locale.ROOT</code> instead or does it have to be in US locale?</p>", "author": "srnagar", "createdAt": "2020-01-10T23:59:25Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);", "originalCommit": "694695ea2f514e494a495917bf80a58eaa9362b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NzIxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365477219", "bodyText": "I was thinking the service would always send US formatted datetimes, but i'm not sure", "author": "jianghaolu", "createdAt": "2020-01-11T00:08:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ4ODEwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365488100", "bodyText": "changed back to default which was working before", "author": "jianghaolu", "createdAt": "2020-01-11T01:32:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTYzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3NTgwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365475801", "body": "```suggestion\r\n        DateTimeFormatter dtfWindows= DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DateTimeFormatter dtf_windows = DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);\n          \n          \n            \n                    DateTimeFormatter dtfWindows= DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">DateTimeFormatter</span> <span class=\"x x-first x-last\">dtf_windows </span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">DateTimeFormatter</span><span class=\"pl-k\">.</span>ofPattern(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>M/d/yyyy K:mm:ss a XXX<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Locale</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>US</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">DateTimeFormatter</span> <span class=\"x x-first x-last\">dtfWindows</span><span class=\"pl-k\">=</span> <span class=\"pl-smi\">DateTimeFormatter</span><span class=\"pl-k\">.</span>ofPattern(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>M/d/yyyy K:mm:ss a XXX<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Locale</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>US</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "srnagar", "createdAt": "2020-01-11T00:00:25Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -53,29 +50,27 @@ public String getToken() {\n         return accessToken;\n     }\n \n-    @Override\n-    public OffsetDateTime getExpiresAt() {\n-        return EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-    }\n-\n-    @Override\n-    public boolean isExpired() {\n-        OffsetDateTime now = OffsetDateTime.now();\n-        OffsetDateTime expireOn = EPOCH.plusSeconds(parseDateToEpochSeconds(this.expiresOn));\n-        return now.plusMinutes(5).isAfter(expireOn);\n-    }\n-\n     private static Long parseDateToEpochSeconds(String dateTime) {\n         ClientLogger logger = new ClientLogger(MSIToken.class);\n-        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"MM/dd/yyyy HH:mm:ss XXX\");\n+        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"M/d/yyyy H:mm:ss XXX\", Locale.US);\n+        // This is the format for app service on Windows as of API version 2017-09-01.\n+        // The format is changed to Unix timestamp in 2019-08-01 but this API version\n+        // has not been deployed to Linux app services.\n+        DateTimeFormatter dtf_windows = DateTimeFormatter.ofPattern(\"M/d/yyyy K:mm:ss a XXX\", Locale.US);", "originalCommit": "694695ea2f514e494a495917bf80a58eaa9362b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3Nzk3Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365477976", "body": "Is this a Breaking change ?", "bodyText": "Is this a Breaking change ?", "bodyHTML": "<p dir=\"auto\">Is this a Breaking change ?</p>", "author": "g2vinay", "createdAt": "2020-01-11T00:13:06Z", "path": "sdk/identity/azure-identity/src/main/java/com/azure/identity/implementation/MSIToken.java", "diffHunk": "@@ -35,15 +36,11 @@\n      * @param token the token string.\n      * @param expiresOn the expiration time.\n      */\n-    public MSIToken(String token, OffsetDateTime expiresOn) {", "originalCommit": "694695ea2f514e494a495917bf80a58eaa9362b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3ODE0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7356#discussion_r365478147", "bodyText": "This is in the implmentation package so we should be fine", "author": "jianghaolu", "createdAt": "2020-01-11T00:14:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ3Nzk3Ng=="}], "type": "inlineReview"}, {"oid": "320000537e7d24daa3eacd25b4e93b19febff8b1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/320000537e7d24daa3eacd25b4e93b19febff8b1", "message": "Fix tests", "committedDate": "2020-01-11T00:20:46Z", "type": "commit"}, {"oid": "39be9f371d58e4f1be768fd81cfc97671bd0db92", "url": "https://github.com/Azure/azure-sdk-for-java/commit/39be9f371d58e4f1be768fd81cfc97671bd0db92", "message": "Use SerializerAdapter", "committedDate": "2020-01-11T00:37:28Z", "type": "commit"}, {"oid": "5b72fcc553f918239800d4654e7caac4caacbf4d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5b72fcc553f918239800d4654e7caac4caacbf4d", "message": "opens implementation to jackson", "committedDate": "2020-01-11T00:42:14Z", "type": "commit"}, {"oid": "0363620f5c581a0d3303955f71c89ae570990bde", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0363620f5c581a0d3303955f71c89ae570990bde", "message": "Remove deserialization in msi token test", "committedDate": "2020-01-11T00:54:28Z", "type": "commit"}, {"oid": "257ed687345e356b73b79dcd9e64cf1af31391f5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/257ed687345e356b73b79dcd9e64cf1af31391f5", "message": "Revert back to default locale", "committedDate": "2020-01-11T01:06:28Z", "type": "commit"}, {"oid": "568ca94a6fffeef9675b24c8dbdaa12b4f68946c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/568ca94a6fffeef9675b24c8dbdaa12b4f68946c", "message": "Remove unused import", "committedDate": "2020-01-11T01:07:03Z", "type": "commit"}]}