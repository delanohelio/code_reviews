{"pr_number": 17582, "pr_title": "Add HttpClientOptions", "pr_author": "alzimmermsft", "pr_createdAt": "2020-11-13T22:43:40Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/17582", "timeline": [{"oid": "7e0135284af9ae7449cbe615488138d14d937f26", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7e0135284af9ae7449cbe615488138d14d937f26", "message": "Add HttpClientOptions to allow general configuration of HttpClients when using an HttpClientProvider to create an instance", "committedDate": "2020-11-13T22:41:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MzUwMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r523273501", "body": "If I understand correctly `ClientOptions::responseTimeout` is not applicable for OkHttp right?", "bodyText": "If I understand correctly ClientOptions::responseTimeout is not applicable for OkHttp right?", "bodyHTML": "<p dir=\"auto\">If I understand correctly <code>ClientOptions::responseTimeout</code> is not applicable for OkHttp right?</p>", "author": "anuchandy", "createdAt": "2020-11-13T22:52:08Z", "path": "sdk/core/azure-core-http-okhttp/src/main/java/com/azure/core/http/okhttp/implementation/OkHttpClientProvider.java", "diffHunk": "@@ -13,4 +14,18 @@\n     public HttpClient createInstance() {\n         return new OkHttpAsyncHttpClientBuilder().build();\n     }\n+\n+    @Override\n+    public HttpClient createInstance(HttpClientOptions clientOptions) {\n+        OkHttpAsyncHttpClientBuilder builder = new OkHttpAsyncHttpClientBuilder();\n+\n+        if (clientOptions != null) {\n+            builder = builder.proxy(clientOptions.getProxyOptions())\n+                .configuration(clientOptions.getConfiguration())\n+                .writeTimeout(clientOptions.getWriteTimeout())\n+                .readTimeout(clientOptions.getReadTimeout());", "originalCommit": "7e0135284af9ae7449cbe615488138d14d937f26", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI4NTYxNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r523285616", "bodyText": "Correct, OkHttp doesn't have an explicit API to set the timeout period for receiving a response for a request.", "author": "alzimmermsft", "createdAt": "2020-11-13T23:36:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI3MzUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1Mjc0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r524552741", "body": "Do we need a new type here? We already have `ClientOptions` which also is used for configuring client-specific settings.  There are pros and cons to using ClientOptions vs creating new HttpClientOptions.\r\n\r\n## Using ClientOptions:\r\nPros:\r\n- ClientOptions is already GA'd and is wired on to many client builders. So, adding a new configuration to ClientOptions will require no further changes to client builders in terms of API.\r\n- User has to learn about just one `ClientOptions` type \r\n\r\nCons:\r\n- ClientOptions is used for both AMQP and HTTP clients. So, some of the configurations in HTTP client options may not apply for AMQP services\r\n\r\n\r\n## Using HttpClientOptions:\r\nPros:\r\n- Contains only configurations applicable to HTTP-based services\r\n\r\nCons:\r\n- Requires updating client builders of all services to add a new option to set HttpClientOptions\r\n- Users will see two setters: `clientOptions(ClientOptions clientOptions)` and `httpClientOptions(HttpClientOptions httpClientOptions)`\r\n\r\n", "bodyText": "Do we need a new type here? We already have ClientOptions which also is used for configuring client-specific settings.  There are pros and cons to using ClientOptions vs creating new HttpClientOptions.\nUsing ClientOptions:\nPros:\n\nClientOptions is already GA'd and is wired on to many client builders. So, adding a new configuration to ClientOptions will require no further changes to client builders in terms of API.\nUser has to learn about just one ClientOptions type\n\nCons:\n\nClientOptions is used for both AMQP and HTTP clients. So, some of the configurations in HTTP client options may not apply for AMQP services\n\nUsing HttpClientOptions:\nPros:\n\nContains only configurations applicable to HTTP-based services\n\nCons:\n\nRequires updating client builders of all services to add a new option to set HttpClientOptions\nUsers will see two setters: clientOptions(ClientOptions clientOptions) and httpClientOptions(HttpClientOptions httpClientOptions)", "bodyHTML": "<p dir=\"auto\">Do we need a new type here? We already have <code>ClientOptions</code> which also is used for configuring client-specific settings.  There are pros and cons to using ClientOptions vs creating new HttpClientOptions.</p>\n<h2 dir=\"auto\">Using ClientOptions:</h2>\n<p dir=\"auto\">Pros:</p>\n<ul dir=\"auto\">\n<li>ClientOptions is already GA'd and is wired on to many client builders. So, adding a new configuration to ClientOptions will require no further changes to client builders in terms of API.</li>\n<li>User has to learn about just one <code>ClientOptions</code> type</li>\n</ul>\n<p dir=\"auto\">Cons:</p>\n<ul dir=\"auto\">\n<li>ClientOptions is used for both AMQP and HTTP clients. So, some of the configurations in HTTP client options may not apply for AMQP services</li>\n</ul>\n<h2 dir=\"auto\">Using HttpClientOptions:</h2>\n<p dir=\"auto\">Pros:</p>\n<ul dir=\"auto\">\n<li>Contains only configurations applicable to HTTP-based services</li>\n</ul>\n<p dir=\"auto\">Cons:</p>\n<ul dir=\"auto\">\n<li>Requires updating client builders of all services to add a new option to set HttpClientOptions</li>\n<li>Users will see two setters: <code>clientOptions(ClientOptions clientOptions)</code> and <code>httpClientOptions(HttpClientOptions httpClientOptions)</code></li>\n</ul>", "author": "srnagar", "createdAt": "2020-11-16T20:29:29Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/http/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,161 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;\n+\n+import com.azure.core.util.Configuration;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.TableEntity\n+ */\n+public class HttpClientOptions {", "originalCommit": "7e0135284af9ae7449cbe615488138d14d937f26", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aa45fdf9dda2faf1fa8de17db8329196a3df8156", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aa45fdf9dda2faf1fa8de17db8329196a3df8156", "message": "Merge branch 'master' into AzCore_HttpClientOptions", "committedDate": "2021-01-13T17:47:44Z", "type": "commit"}, {"oid": "2af3e4cd45cdaab7d8a00063d0c720916cdd3b81", "url": "https://github.com/Azure/azure-sdk-for-java/commit/2af3e4cd45cdaab7d8a00063d0c720916cdd3b81", "message": "Update HttpClientOptions to extend ClientOptions, passing ClientOptions to more locations, documentation updates", "committedDate": "2021-01-13T19:14:14Z", "type": "commit"}, {"oid": "1d5e97032b26aee3ef119a1a66997a130597c685", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1d5e97032b26aee3ef119a1a66997a130597c685", "message": "Fix merge conflicts", "committedDate": "2021-01-13T19:33:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc3OTIyNw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556779227", "body": "```suggestion\r\n     * @return The updated HttpClientOptions object.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return The update HttpClientOptions object.\n          \n          \n            \n                 * @return The updated HttpClientOptions object.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">The</span> <span class=\"x x-first x-last\">update</span> <span class=\"pl-smi\">HttpClientOptions</span> object.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">The</span> <span class=\"x x-first x-last\">updated</span> <span class=\"pl-smi\">HttpClientOptions</span> object.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "srnagar", "createdAt": "2021-01-13T19:35:14Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,176 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.ProxyOptions;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.\n+ */\n+public class HttpClientOptions extends ClientOptions {\n+    private static final Duration MINIMUM_TIMEOUT = Duration.ofMillis(1);\n+    private static final Duration DEFAULT_TIMEOUT = Duration.ofSeconds(60);\n+    private static final Duration NO_TIMEOUT = Duration.ZERO;\n+\n+    private ProxyOptions proxyOptions;\n+    private Configuration configuration;\n+    private Duration writeTimeout;\n+    private Duration responseTimeout;\n+    private Duration readTimeout;\n+\n+    @Override\n+    public HttpClientOptions setApplicationId(String applicationId) {\n+        super.setApplicationId(applicationId);\n+\n+        return this;\n+    }\n+\n+    @Override\n+    public HttpClientOptions setHeaders(Iterable<Header> headers) {\n+        super.setHeaders(headers);\n+\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the {@link ProxyOptions proxy options} that the {@link HttpClient} will use.\n+     *\n+     * @param proxyOptions The proxy options to use.\n+     * @return The update HttpClientOptions object.", "originalCommit": "1d5e97032b26aee3ef119a1a66997a130597c685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556781414", "body": "How about moving the codesnippets into a package like `com.azure.core.docs.*`? This will keep the samples clean for the user to find runnable code samples.", "bodyText": "How about moving the codesnippets into a package like com.azure.core.docs.*? This will keep the samples clean for the user to find runnable code samples.", "bodyHTML": "<p dir=\"auto\">How about moving the codesnippets into a package like <code>com.azure.core.docs.*</code>? This will keep the samples clean for the user to find runnable code samples.</p>", "author": "srnagar", "createdAt": "2021-01-13T19:39:09Z", "path": "sdk/core/azure-core/src/samples/java/com/azure/core/http/HttpPipelineBuilderJavaDocCodeSnippets.java", "diffHunk": "@@ -0,0 +1,26 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.http;", "originalCommit": "1d5e97032b26aee3ef119a1a66997a130597c685", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4NDgzMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556784830", "bodyText": "This sounds like a good location, let's do this in another PR.\nShould we make this a standard convention? Ex. in AppConfiguration they'll use com.azure.data.appconfiguration.docs.*", "author": "alzimmermsft", "createdAt": "2021-01-13T19:45:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4OTQ1NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556789454", "bodyText": "Yeah, this should be a standard convention for all client libraries.", "author": "srnagar", "createdAt": "2021-01-13T19:53:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc4MTYyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/17582#discussion_r556781625", "body": "Make this `final`.", "bodyText": "Make this final.", "bodyHTML": "<p dir=\"auto\">Make this <code>final</code>.</p>", "author": "srnagar", "createdAt": "2021-01-13T19:39:34Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/HttpClientOptions.java", "diffHunk": "@@ -0,0 +1,176 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.core.util;\n+\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.ProxyOptions;\n+\n+import java.time.Duration;\n+\n+/**\n+ * General configuration options for {@link HttpClient HttpClients}.\n+ */\n+public class HttpClientOptions extends ClientOptions {", "originalCommit": "1d5e97032b26aee3ef119a1a66997a130597c685", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1bf6bcb546c924860e2f0ed4872e2fd152968bc1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/1bf6bcb546c924860e2f0ed4872e2fd152968bc1", "message": "Changes based on review", "committedDate": "2021-01-13T19:50:26Z", "type": "commit"}]}