{"pr_number": 8477, "pr_title": "Added ability to check if share, file or directory exists ", "pr_author": "gapra-msft", "pr_createdAt": "2020-02-25T20:00:05Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/8477", "timeline": [{"oid": "bae3340ca61d95a0e8537876422ebb3a6a27fcde", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bae3340ca61d95a0e8537876422ebb3a6a27fcde", "message": "Added code for exists", "committedDate": "2020-02-25T17:36:44Z", "type": "commit"}, {"oid": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "message": "Added tests for exists", "committedDate": "2020-02-25T19:58:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTA5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165092", "body": "Shouldn't need to try catch here given the overload being called already does this.", "bodyText": "Shouldn't need to try catch here given the overload being called already does this.", "bodyHTML": "<p dir=\"auto\">Shouldn't need to try catch here given the overload being called already does this.</p>", "author": "alzimmermsft", "createdAt": "2020-02-25T22:28:07Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTQ3NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165475", "body": "For readability mind putting the entire second conditional on the next line?", "bodyText": "For readability mind putting the entire second conditional on the next line?", "bodyHTML": "<p dir=\"auto\">For readability mind putting the entire second conditional on the next line?</p>", "author": "alzimmermsft", "createdAt": "2020-02-25T22:28:56Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * @return true if the share exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t -> t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode()\n+                    == 404,", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NTgyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384165825", "body": "Same comment about non-needed try/catch", "bodyText": "Same comment about non-needed try/catch", "bodyHTML": "<p dir=\"auto\">Same comment about non-needed try/catch</p>", "author": "alzimmermsft", "createdAt": "2020-02-25T22:29:44Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareDirectoryAsyncClient.java", "diffHunk": "@@ -158,6 +159,58 @@ public ShareDirectoryAsyncClient getSubdirectoryClient(String subdirectoryName)\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.exists}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjA2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166067", "body": "Same comment about second conditional readability.", "bodyText": "Same comment about second conditional readability.", "bodyHTML": "<p dir=\"auto\">Same comment about second conditional readability.</p>", "author": "alzimmermsft", "createdAt": "2020-02-25T22:30:15Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareDirectoryAsyncClient.java", "diffHunk": "@@ -158,6 +159,58 @@ public ShareDirectoryAsyncClient getSubdirectoryClient(String subdirectoryName)\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.exists}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareDirectoryAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the directory this client represents exists in the cloud.\n+     *\n+     * @return true if the directory exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode()\n+                    == 404,", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjQ2NA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166464", "body": "```suggestion\r\n     * @return Flag indicating existence of the share.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return true if the share exists, false if it doesn't\n          \n          \n            \n                 * @return Flag indicating existence of the share.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-c1 x x-first\">true</span><span class=\"x\"> </span><span class=\"pl-k x\">if</span><span class=\"x\"> the share exists, </span><span class=\"pl-c1 x\">false</span><span class=\"x\"> </span><span class=\"pl-k x\">if</span><span class=\"x\"> it doesn</span><span class=\"pl-s\"><span class=\"pl-pds x\">'</span><span class=\"x x-last\">t</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi x x-first\">Flag</span><span class=\"x x-last\"> indicating existence of the share.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "alzimmermsft", "createdAt": "2020-02-25T22:31:10Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return true if the share exists, false if it doesn't", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NjcwMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384166702", "body": "This would differ from the other Javadocs but I feel it reads better.\r\n\r\n```suggestion\r\n     * Determines if the share this client represents exists in the cloud.\r\n```", "bodyText": "This would differ from the other Javadocs but I feel it reads better.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Gets if the share this client represents exists in the cloud.\n          \n          \n            \n                 * Determines if the share this client represents exists in the cloud.", "bodyHTML": "<p dir=\"auto\">This would differ from the other Javadocs but I feel it reads better.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Gets</span> <span class=\"pl-k\">if</span> the share <span class=\"pl-c1\">this</span> client represents exists in the cloud.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Determines</span> <span class=\"pl-k\">if</span> the share <span class=\"pl-c1\">this</span> client represents exists in the cloud.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "alzimmermsft", "createdAt": "2020-02-25T22:31:43Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,57 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Gets if the share this client represents exists in the cloud.", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NzIwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384167209", "body": "Does this method return `HttpResponseException` in some cases? Just noticed this check differs from the others.", "bodyText": "Does this method return HttpResponseException in some cases? Just noticed this check differs from the others.", "bodyHTML": "<p dir=\"auto\">Does this method return <code>HttpResponseException</code> in some cases? Just noticed this check differs from the others.</p>", "author": "alzimmermsft", "createdAt": "2020-02-25T22:32:49Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareFileAsyncClient.java", "diffHunk": "@@ -159,6 +161,61 @@ public ShareServiceVersion getServiceVersion() {\n         return serviceVersion;\n     }\n \n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareFileAsyncClient.exists}\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    public Mono<Boolean> exists() {\n+        try {\n+            return existsWithResponse().flatMap(FluxUtil::toMono);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareFileAsyncClient.existsWithResponse}\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    /**\n+     * Gets if the file this client represents exists in the cloud.\n+     *\n+     * @return true if the file exists, false if it doesn't\n+     */\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(null, context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    (t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode() == 404)\n+                || (t instanceof HttpResponseException && ((HttpResponseException) t).getResponse().getStatusCode()\n+                        == 404),", "originalCommit": "12afae04565c00a4d463f3ca4d2be5b7f4267a2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4NzQyNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384187425", "bodyText": "I think our serialization of exceptions happens depending on the XML returned by the service. The file getProperties request is a HEAD request so it doesnt actually return a body and we fail to serialize it - that's why the HttpResponseException is returned.", "author": "gapra-msft", "createdAt": "2020-02-25T23:22:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NzIwOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE5MTcwOA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r384191708", "bodyText": "Gotcha, that is an interesting thing to know, wonder if this is a gap of functionality in the de-serialization logic that we should close the gap on. If you have a quick repo on hand mind filing an issue on this.", "author": "alzimmermsft", "createdAt": "2020-02-25T23:33:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE2NzIwOQ=="}], "type": "inlineReview"}, {"oid": "df7cde3be973489d1489d02170eeae25e1f278ab", "url": "https://github.com/Azure/azure-sdk-for-java/commit/df7cde3be973489d1489d02170eeae25e1f278ab", "message": "made changes based off review comments", "committedDate": "2020-02-25T23:18:15Z", "type": "commit"}, {"oid": "205af64f8ddfe0888f124dfb6e05d7070cf9c247", "url": "https://github.com/Azure/azure-sdk-for-java/commit/205af64f8ddfe0888f124dfb6e05d7070cf9c247", "message": "updated comments for sync files", "committedDate": "2020-02-25T23:36:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MjA1Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/8477#discussion_r385862056", "body": "Should we check error code? ", "bodyText": "Should we check error code?", "bodyHTML": "<p dir=\"auto\">Should we check error code?</p>", "author": "rickle-msft", "createdAt": "2020-02-28T18:48:28Z", "path": "sdk/storage/azure-storage-file-share/src/main/java/com/azure/storage/file/share/ShareAsyncClient.java", "diffHunk": "@@ -152,6 +153,48 @@ public ShareFileAsyncClient getFileClient(String filePath) {\n             serviceVersion);\n     }\n \n+    /**\n+     * Determines if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.exists}\n+     *\n+     * @return Flag indicating existence of the share.\n+     */\n+    public Mono<Boolean> exists() {\n+        return existsWithResponse().flatMap(FluxUtil::toMono);\n+    }\n+\n+    /**\n+     * Determines if the share this client represents exists in the cloud.\n+     *\n+     * <p><strong>Code Samples</strong></p>\n+     *\n+     * {@codesnippet com.azure.storage.file.share.ShareAsyncClient.existsWithResponse}\n+     *\n+     * @return Flag indicating existence of the share.\n+     */\n+    public Mono<Response<Boolean>> existsWithResponse() {\n+        try {\n+            return withContext(this::existsWithResponse);\n+        } catch (RuntimeException ex) {\n+            return monoError(logger, ex);\n+        }\n+    }\n+\n+    Mono<Response<Boolean>> existsWithResponse(Context context) {\n+        return this.getPropertiesWithResponse(context)\n+            .map(cp -> (Response<Boolean>) new SimpleResponse<>(cp, true))\n+            .onErrorResume(t ->\n+                    t instanceof ShareStorageException && ((ShareStorageException) t).getStatusCode() == 404,", "originalCommit": "205af64f8ddfe0888f124dfb6e05d7070cf9c247", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ef7a8a4b343320cfefd5ac0cc7968bf92b00172", "url": "https://github.com/Azure/azure-sdk-for-java/commit/7ef7a8a4b343320cfefd5ac0cc7968bf92b00172", "message": "Added more checks for error code", "committedDate": "2020-02-28T19:30:46Z", "type": "commit"}]}