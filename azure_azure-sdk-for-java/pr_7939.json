{"pr_number": 7939, "pr_title": "Return Atomic Type for simple APIs", "pr_author": "mssfang", "pr_createdAt": "2020-02-04T17:30:09Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/7939", "timeline": [{"oid": "6b96864d5456892f87f5981ff839b623c0c62d22", "url": "https://github.com/Azure/azure-sdk-for-java/commit/6b96864d5456892f87f5981ff839b623c0c62d22", "message": "transfer to office workstation", "committedDate": "2020-02-04T15:15:33Z", "type": "commit"}, {"oid": "8ad2d04c3bc33227ae80502399a7634b8b52dfa1", "url": "https://github.com/Azure/azure-sdk-for-java/commit/8ad2d04c3bc33227ae80502399a7634b8b52dfa1", "message": "before modify sentiment", "committedDate": "2020-02-04T23:41:21Z", "type": "commit"}, {"oid": "af681a1976c590e20cf800b46d5a340ee5f210bc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/af681a1976c590e20cf800b46d5a340ee5f210bc", "message": "resolve conflict", "committedDate": "2020-02-05T01:21:04Z", "type": "commit"}, {"oid": "c6059a9e2276f5dbb4a7708443e4a17bbae90c41", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c6059a9e2276f5dbb4a7708443e4a17bbae90c41", "message": "still have a few tests failed", "committedDate": "2020-02-05T01:48:17Z", "type": "commit"}, {"oid": "79ee408f7a89f8c2c45b6004b948dfa0e26573b7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/79ee408f7a89f8c2c45b6004b948dfa0e26573b7", "message": "sentiment remodel", "committedDate": "2020-02-05T06:31:17Z", "type": "commit"}, {"oid": "d0a5531df9b1ad193a0497b72b2ad94c244722ce", "url": "https://github.com/Azure/azure-sdk-for-java/commit/d0a5531df9b1ad193a0497b72b2ad94c244722ce", "message": "test data", "committedDate": "2020-02-05T22:15:06Z", "type": "commit"}, {"oid": "9c50277884093a9dd00fea8dcba41726e773ef4a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9c50277884093a9dd00fea8dcba41726e773ef4a", "message": "java doc strings", "committedDate": "2020-02-06T01:28:10Z", "type": "commit"}, {"oid": "62a195307b7340c3a8fd0aa369976676fa237c0e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/62a195307b7340c3a8fd0aa369976676fa237c0e", "message": "doc strings", "committedDate": "2020-02-06T13:17:27Z", "type": "commit"}, {"oid": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "message": "nit fix and checkstyle", "committedDate": "2020-02-06T13:42:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMDM2Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376010367", "body": "can we import it?", "bodyText": "can we import it?", "bodyHTML": "<p dir=\"auto\">can we import it?</p>", "author": "maririos", "createdAt": "2020-02-06T18:36:24Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -51,12 +52,16 @@\n         this.service = service;\n     }\n \n-    Mono<Response<AnalyzeSentimentResult>> analyzeSentimentWithResponse(String text, String language, Context context) {\n+    Mono<Response<com.azure.ai.textanalytics.models.DocumentSentiment>> analyzeSentimentWithResponse(", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEyMjY1OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376122658", "bodyText": "we already used \"import com.azure.ai.textanalytics.implementation.models.DocumentSentiment;\"\nSo can't import another same class name \"com.azure.ai.textanalytics.models.DocumentSentiment\"", "author": "mssfang", "createdAt": "2020-02-06T22:41:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMDM2Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxMjAwNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376212006", "bodyText": ":| makes sense. Thanks for explaining", "author": "maririos", "createdAt": "2020-02-07T04:41:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMDM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMjAwMA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376012000", "body": "NIT: consider changing variable name too", "bodyText": "NIT: consider changing variable name too", "bodyHTML": "<p dir=\"auto\">NIT: consider changing variable name too</p>", "author": "maririos", "createdAt": "2020-02-06T18:39:33Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -129,9 +134,9 @@ private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentim\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n \n         // Sentence text sentiment\n-        final List<TextSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n+        final List<SentenceSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n             .map(sentenceSentiment -> {\n-                TextSentimentClass sentimentClass = TextSentimentClass.fromString(sentenceSentiment\n+                SentimentLabel sentimentClass = SentimentLabel.fromString(sentenceSentiment", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxMzg3MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376013871", "body": "NIT: the `Texts` part might be misleading as it actually doesn't contain the text per se, just sentiment and scores", "bodyText": "NIT: the Texts part might be misleading as it actually doesn't contain the text per se, just sentiment and scores", "bodyHTML": "<p dir=\"auto\">NIT: the <code>Texts</code> part might be misleading as it actually doesn't contain the text per se, just sentiment and scores</p>", "author": "maririos", "createdAt": "2020-02-06T18:43:19Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -129,9 +134,9 @@ private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentim\n         final SentimentConfidenceScorePerLabel confidenceScorePerLabel = documentSentiment.getDocumentScores();\n \n         // Sentence text sentiment\n-        final List<TextSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()\n+        final List<SentenceSentiment> sentenceSentimentTexts = documentSentiment.getSentences().stream()", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNTQzMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376015432", "body": "just curious, is there a reason why it is not using the import?", "bodyText": "just curious, is there a reason why it is not using the import?", "bodyHTML": "<p dir=\"auto\">just curious, is there a reason why it is not using the import?</p>", "author": "maririos", "createdAt": "2020-02-06T18:46:28Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/RecognizeLinkedEntityAsyncClient.java", "diffHunk": "@@ -49,13 +52,25 @@\n         this.service = service;\n     }\n \n-    Mono<Response<RecognizeLinkedEntitiesResult>> recognizeLinkedEntitiesWithResponse(String text, String language,\n-        Context context) {\n+    Mono<PagedResponse<com.azure.ai.textanalytics.models.LinkedEntity>> recognizeLinkedEntitiesWithResponse(", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEyNDIwNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376124204", "bodyText": "same class name is been taken from autogenerated class:\nimport com.azure.ai.textanalytics.**implementation**.models.LinkedEntity;\nSo can't use import. We transform explored class to autogenerated class, vise versa.", "author": "mssfang", "createdAt": "2020-02-06T22:45:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNTQzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNzM4OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376017389", "body": "One of the discussions with the adding `batch` to the methods was to add it at the end. so i.e. `detectLanguageBatch`\r\nthis is true for the other methods", "bodyText": "One of the discussions with the adding batch to the methods was to add it at the end. so i.e. detectLanguageBatch\nthis is true for the other methods", "bodyHTML": "<p dir=\"auto\">One of the discussions with the adding <code>batch</code> to the methods was to add it at the end. so i.e. <code>detectLanguageBatch</code><br>\nthis is true for the other methods</p>", "author": "maririos", "createdAt": "2020-02-06T18:50:21Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -237,11 +236,7 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n     @ServiceMethod(returns = ReturnType.SINGLE)\n     public Mono<DocumentResultCollection<DetectLanguageResult>> detectBatchLanguage(", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNzkxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376017919", "bodyText": "I will be doing that in an upcoming PR along with the change to add options parameter to List method overload.", "author": "samvaity", "createdAt": "2020-02-06T18:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNzM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyNDIxMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376024211", "bodyText": "Yes, It will fix in another API. Sameeksha and I splitting the workload now", "author": "mssfang", "createdAt": "2020-02-06T19:04:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAxNzM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDQ5Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376020492", "body": "Why do we need to update these to `PagedResponses`?", "bodyText": "Why do we need to update these to PagedResponses?", "bodyHTML": "<p dir=\"auto\">Why do we need to update these to <code>PagedResponses</code>?</p>", "author": "samvaity", "createdAt": "2020-02-06T18:56:39Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -819,26 +761,24 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * <p>Extract key phrases in a text with a provided language. Subscribes to the call asynchronously and prints\n      * out the key phrases when a response is received.</p>\n      *\n-     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrasesWithResponse#string-string}\n+     * {@codesnippet com.azure.ai.textanalytics.TextAnalyticsAsyncClient.extractKeyPhrases#string-string}\n      *\n      * @param text the text to be analyzed.\n      * @param language The 2 letter ISO 639-1 representation of language for the text. If not set, uses \"en\" for\n      * English as default.\n      *\n-     * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} has the\n-     * {@link ExtractKeyPhraseResult key phrases} of the text.\n+     * @return A {@link PagedFlux} containing the key phrases of the text.\n      *\n      * @throws NullPointerException if {@code text} is {@code null}.\n-     * @throws com.azure.ai.textanalytics.models.TextAnalyticsException if the response returned with\n-     * an {@link com.azure.ai.textanalytics.models.TextAnalyticsError error}.\n+     * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n-    @ServiceMethod(returns = ReturnType.SINGLE)\n-    public Mono<Response<ExtractKeyPhraseResult>> extractKeyPhrasesWithResponse(String text, String language) {\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedFlux<String> extractKeyPhrases(String text, String language) {", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMzM0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376023345", "bodyText": "\"DO return PagedFlux for asynchronous APIs that expose collections. Even if the service does not support pagination, always return PagedFlux, as it allows for consumers to retrieve response information in a consistent manner.\"", "author": "mssfang", "createdAt": "2020-02-06T19:02:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMzUzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376023535", "bodyText": "I need to correct sync api to return IterableStream", "author": "mssfang", "createdAt": "2020-02-06T19:02:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDQ5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzMTU2MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376131561", "bodyText": "update: Sync collection APIs will stay with PageIterable. It contains response infor", "author": "mssfang", "createdAt": "2020-02-06T23:05:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMDQ5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzODAyMQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376038021", "body": "nit: Preferably remove all \"**Class\" with label or just call them \"*Sentiment\".", "bodyText": "nit: Preferably remove all \"**Class\" with label or just call them \"*Sentiment\".", "bodyHTML": "<p dir=\"auto\">nit: Preferably remove all \"**Class\" with label or just call them \"*Sentiment\".</p>", "author": "samvaity", "createdAt": "2020-02-06T19:32:04Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -117,7 +122,7 @@\n      */\n     private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {\n         // Document text sentiment\n-        final TextSentimentClass documentSentimentClass = TextSentimentClass.fromString(documentSentiment.\n+        final SentimentLabel documentSentimentClass = SentimentLabel.fromString(documentSentiment.", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzOTAyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376039026", "body": "ReturnType.COLLECTION", "bodyText": "ReturnType.COLLECTION", "bodyHTML": "<p dir=\"auto\">ReturnType.COLLECTION</p>", "author": "samvaity", "createdAt": "2020-02-06T19:34:09Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClient.java", "diffHunk": "@@ -148,14 +152,13 @@ public TextAnalyticsServiceVersion getServiceVersion() {\n      * specified.\n      *\n      * @return A {@link Mono} containing a {@link Response} whose {@link Response#getValue() value} has the\n-     * {@link DetectLanguageResult detected language} of the text.\n+     * {@link DetectedLanguage detected language} of the text.\n      *\n      * @throws NullPointerException if {@code text} is {@code null}.\n-     * @throws com.azure.ai.textanalytics.models.TextAnalyticsException if the response returned with\n-     * an {@link com.azure.ai.textanalytics.models.TextAnalyticsError error}.\n+     * @throws TextAnalyticsException if the response returned with an {@link TextAnalyticsError error}.\n      */\n     @ServiceMethod(returns = ReturnType.SINGLE)", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzMjg4Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376132887", "bodyText": "Why? Since we are not returning a collection of T. And it is Mono, I believe SINGLE should be the correct one to use. Correct me if I am wrong.", "author": "mssfang", "createdAt": "2020-02-06T23:08:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzOTAyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MTcyNg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376151726", "bodyText": "Yeah, this should be a single, I think I commented at the wrong line, ignore this one.", "author": "samvaity", "createdAt": "2020-02-07T00:08:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzOTAyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0MjU1Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376042553", "body": "Consider using the `validatePrimaryLanguage` for testing the results, rather than converting them to lists and then doing the comparison.", "bodyText": "Consider using the validatePrimaryLanguage for testing the results, rather than converting them to lists and then doing the comparison.", "bodyHTML": "<p dir=\"auto\">Consider using the <code>validatePrimaryLanguage</code> for testing the results, rather than converting them to lists and then doing the comparison.</p>", "author": "samvaity", "createdAt": "2020-02-06T19:41:30Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -113,7 +111,8 @@ public void detectLanguagesBatchStringInput() {\n     public void detectSingleTextLanguage() {\n         DetectedLanguage primaryLanguage = new DetectedLanguage(\"English\", \"en\", 1.0);\n         StepVerifier.create(client.detectLanguage(\"This is a test English Text\"))\n-            .assertNext(response -> validateDetectedLanguages(Collections.singletonList(primaryLanguage), response.getDetectedLanguages()))\n+            .assertNext(response -> validateDetectedLanguages(Collections.singletonList(primaryLanguage),", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Mzc4Ng==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376043786", "body": "no assert ?", "bodyText": "no assert ?", "bodyHTML": "<p dir=\"auto\">no assert ?</p>", "author": "samvaity", "createdAt": "2020-02-06T19:44:07Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsAsyncClientTest.java", "diffHunk": "@@ -179,7 +179,6 @@ public void recognizeEntitiesForEmptyText() {\n     @Test\n     public void recognizeEntitiesForFaultyText() {\n         StepVerifier.create(client.recognizeEntities(\"!@#%%\"))\n-            .assertNext(response -> assertEquals(response.getEntities().size(), 0))\n             .verifyComplete();", "originalCommit": "9941357abbbbd86ab9c8f0383cf63ecc69a70fa2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzNTYxOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376135619", "bodyText": "updated", "author": "mssfang", "createdAt": "2020-02-06T23:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Mzc4Ng=="}], "type": "inlineReview"}, {"oid": "0827ffd50b6d73c12fdd9561484f9c71f3fbe23c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/0827ffd50b6d73c12fdd9561484f9c71f3fbe23c", "message": "address feedback", "committedDate": "2020-02-06T23:14:53Z", "type": "commit"}, {"oid": "60beb3ebcb866af65ed5798d0aaae096304fbe7c", "url": "https://github.com/Azure/azure-sdk-for-java/commit/60beb3ebcb866af65ed5798d0aaae096304fbe7c", "message": "resolve conflict", "committedDate": "2020-02-06T23:29:08Z", "type": "commit"}, {"oid": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "url": "https://github.com/Azure/azure-sdk-for-java/commit/3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "message": "rerun npm embeded me", "committedDate": "2020-02-07T00:06:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDM0OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154349", "body": "Test to detect languages for a list of string input with provided country hint.", "bodyText": "Test to detect languages for a list of string input with provided country hint.", "bodyHTML": "<p dir=\"auto\">Test to detect languages for a list of string input with provided country hint.</p>", "author": "samvaity", "createdAt": "2020-02-07T00:17:38Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -73,7 +75,7 @@ public void detectLanguagesBatchInput() {\n     }\n \n     /**\n-     * Test Detect batch languages for List of String input with country Hint.\n+     * Test detect batch languages for a list of string input with country hint.", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDUwMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154503", "body": "Test to detect languages for a list of string input.", "bodyText": "Test to detect languages for a list of string input.", "bodyHTML": "<p dir=\"auto\">Test to detect languages for a list of string input.</p>", "author": "samvaity", "createdAt": "2020-02-07T00:18:14Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -83,7 +85,7 @@ public void detectLanguagesBatchListCountryHint() {\n     }\n \n     /**\n-     * Test Detect batch languages for List of String input.\n+     * Test detect batch languages for a list of string input.", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NDYxMg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376154612", "body": "Can use `validatePrimaryLanguage` here and below.", "bodyText": "Can use validatePrimaryLanguage here and below.", "bodyHTML": "<p dir=\"auto\">Can use <code>validatePrimaryLanguage</code> here and below.</p>", "author": "samvaity", "createdAt": "2020-02-07T00:18:38Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -99,7 +101,8 @@ public void detectSingleTextLanguage() {\n         DetectedLanguage primaryLanguage = new DetectedLanguage(\"English\", \"en\", 0.0);\n         List<DetectedLanguage> expectedLanguageList = Collections.singletonList(primaryLanguage);\n         validateDetectedLanguages(", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1NTA0MQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376155041", "body": "use `validatePrimaryLanguage` instead.", "bodyText": "use validatePrimaryLanguage instead.", "bodyHTML": "<p dir=\"auto\">use <code>validatePrimaryLanguage</code> instead.</p>", "author": "samvaity", "createdAt": "2020-02-07T00:20:07Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/test/java/com/azure/ai/textanalytics/TextAnalyticsClientTest.java", "diffHunk": "@@ -484,8 +489,9 @@ public void updateToValidKey() {\n         credential.updateCredential(getApiKey());\n \n         // Action and Assert\n-        validateDetectedLanguages(Arrays.asList(new DetectedLanguage(\"English\", \"en\", 1.0)),\n-            client.detectLanguage(\"This is a test English Text\").getDetectedLanguages());\n+        validateDetectedLanguages(", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNDc5OQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376214799", "body": "Although the type is `SentimentLabel`, the other languages are using `Sentiment` as the name of the property.\r\nThis is true for SentenceSentiment too.\r\nnaming i.e\r\nDocumentSentiment\r\n  Sentiment\r\n  SentimentScores\r\n  Sentences\r\n\r\nSentenceSentiment\r\n  Sentiment\r\n  SentimentScores\r\n  Offset\r\n  Length", "bodyText": "Although the type is SentimentLabel, the other languages are using Sentiment as the name of the property.\nThis is true for SentenceSentiment too.\nnaming i.e\nDocumentSentiment\nSentiment\nSentimentScores\nSentences\nSentenceSentiment\nSentiment\nSentimentScores\nOffset\nLength", "bodyHTML": "<p dir=\"auto\">Although the type is <code>SentimentLabel</code>, the other languages are using <code>Sentiment</code> as the name of the property.<br>\nThis is true for SentenceSentiment too.<br>\nnaming i.e<br>\nDocumentSentiment<br>\nSentiment<br>\nSentimentScores<br>\nSentences</p>\n<p dir=\"auto\">SentenceSentiment<br>\nSentiment<br>\nSentimentScores<br>\nOffset<br>\nLength</p>", "author": "maririos", "createdAt": "2020-02-07T04:58:01Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/DocumentSentiment.java", "diffHunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+import java.util.List;\n+\n+/**\n+ * The DocumentSentiment model\n+ */\n+@Immutable\n+public final class DocumentSentiment {\n+    private final SentimentLabel sentimentLabel;\n+    private final SentimentScorePerLabel sentimentScorePerLabel;\n+    private final List<SentenceSentiment> sentenceSentiments;\n+\n+    /**\n+     * Creates a {@code DocumentSentiment} model that describes the sentiment of the document.\n+     *\n+     * @param sentimentLabel the sentiment label of the document\n+     * @param sentimentScorePerLabel the score of sentiment label of the document\n+     * @param sentenceSentiments a list of sentence sentiments\n+     */\n+    public DocumentSentiment(SentimentLabel sentimentLabel, SentimentScorePerLabel sentimentScorePerLabel,\n+        List<SentenceSentiment> sentenceSentiments) {\n+        this.sentimentLabel = sentimentLabel;\n+        this.sentimentScorePerLabel = sentimentScorePerLabel;\n+        this.sentenceSentiments = sentenceSentiments;\n+    }\n+\n+    /**\n+     * Get the sentiment label.\n+     *\n+     * @return the SentimentLabel\n+     */\n+    public SentimentLabel getSentimentLabel() {", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxODczMw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376218733", "bodyText": "Will update it. Thanks Mariana", "author": "mssfang", "createdAt": "2020-02-07T05:20:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNDc5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNjE2Mw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376216163", "body": "Consider eliminating `Score` from the names. Our users will do i.e.\r\n`xx.getSentimentScore().getPositive()` so it already implies positive is a score.", "bodyText": "Consider eliminating Score from the names. Our users will do i.e.\nxx.getSentimentScore().getPositive() so it already implies positive is a score.", "bodyHTML": "<p dir=\"auto\">Consider eliminating <code>Score</code> from the names. Our users will do i.e.<br>\n<code>xx.getSentimentScore().getPositive()</code> so it already implies positive is a score.</p>", "author": "maririos", "createdAt": "2020-02-07T05:05:27Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/models/SentimentScorePerLabel.java", "diffHunk": "@@ -0,0 +1,56 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+\n+package com.azure.ai.textanalytics.models;\n+\n+import com.azure.core.annotation.Immutable;\n+\n+/**\n+ * The SentimentScorePerLabel model\n+ */\n+@Immutable\n+public final class SentimentScorePerLabel {\n+    private final double negativeScore;\n+    private final double neutralScore;\n+    private final double positiveScore;\n+\n+    /**\n+     * Creates a {@code SentimentScorePerLabel} model that describes the sentiment score of the sentiment label.\n+     *\n+     * @param negativeScore negative score value, range in between 0 and 1.0\n+     * @param neutralScore neutral score value, range in between 0 and 1.0\n+     * @param positiveScore positive score value, range in between 0 and 1.0\n+     */\n+    public SentimentScorePerLabel(double negativeScore, double neutralScore, double positiveScore) {\n+        this.negativeScore = negativeScore;", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNjIzNQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376216235", "bodyText": "It will also align with other languages", "author": "maririos", "createdAt": "2020-02-07T05:05:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNjE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNzI0NQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376217245", "body": "```suggestion\r\n    private AnalyzeSentimentResult convertToSentenceSentimentResult(final DocumentSentiment documentSentiment) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {\n          \n          \n            \n                private AnalyzeSentimentResult convertToSentenceSentimentResult(final DocumentSentiment documentSentiment) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">AnalyzeSentimentResult</span> <span class=\"x x-first x-last\">convertToTextSentimentResult</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">DocumentSentiment</span> documentSentiment) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">AnalyzeSentimentResult</span> <span class=\"x x-first x-last\">convertToSentenceSentimentResult</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">DocumentSentiment</span> documentSentiment) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "maririos", "createdAt": "2020-02-07T05:11:55Z", "path": "sdk/textanalytics/azure-ai-textanalytics/src/main/java/com/azure/ai/textanalytics/AnalyzeSentimentAsyncClient.java", "diffHunk": "@@ -117,9 +122,9 @@\n      */\n     private AnalyzeSentimentResult convertToTextSentimentResult(final DocumentSentiment documentSentiment) {", "originalCommit": "3d4bd7409452ef22fabdaae1827ccf6f7a65476e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIyMDk0Nw==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/7939#discussion_r376220947", "bodyText": "This method convert a DocumentSentiment to AnalyzeSentimentResult. I will change to convertToAnalyzeSentimentResult", "author": "mssfang", "createdAt": "2020-02-07T05:33:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNzI0NQ=="}], "type": "inlineReview"}, {"oid": "4f42be95eb5f878155ed1fb63e9eb79393a356c0", "url": "https://github.com/Azure/azure-sdk-for-java/commit/4f42be95eb5f878155ed1fb63e9eb79393a356c0", "message": "address naming for document, sentence and sentimentScore classes", "committedDate": "2020-02-07T05:50:17Z", "type": "commit"}, {"oid": "bda9760d711853b46a4ceed5236ad77b87aa4cd2", "url": "https://github.com/Azure/azure-sdk-for-java/commit/bda9760d711853b46a4ceed5236ad77b87aa4cd2", "message": "fix feedback", "committedDate": "2020-02-07T17:07:48Z", "type": "commit"}, {"oid": "5065dbfc2f82cbf79c0c4e397aa589d8477141f7", "url": "https://github.com/Azure/azure-sdk-for-java/commit/5065dbfc2f82cbf79c0c4e397aa589d8477141f7", "message": "sample updates", "committedDate": "2020-02-07T18:32:18Z", "type": "commit"}, {"oid": "dbfd5eeabf361403d0aba534f3c561d0d5a901bc", "url": "https://github.com/Azure/azure-sdk-for-java/commit/dbfd5eeabf361403d0aba534f3c561d0d5a901bc", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod", "committedDate": "2020-02-07T18:44:53Z", "type": "commit"}, {"oid": "543226614713f56d5800b0f8c932dc9cd2a3e1d3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/543226614713f56d5800b0f8c932dc9cd2a3e1d3", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod", "committedDate": "2020-02-07T19:07:50Z", "type": "commit"}, {"oid": "aae5ec50ed9193fa095e9e167a4dab970aa994d5", "url": "https://github.com/Azure/azure-sdk-for-java/commit/aae5ec50ed9193fa095e9e167a4dab970aa994d5", "message": "Merge branch 'master' of https://github.com/Azure/azure-sdk-for-java into TA-SingleMethod", "committedDate": "2020-02-07T20:25:57Z", "type": "commit"}]}