{"pr_number": 9284, "pr_title": "Configuration Implementation Cleanup", "pr_author": "alzimmermsft", "pr_createdAt": "2020-03-20T01:13:44Z", "pr_url": "https://github.com/Azure/azure-sdk-for-java/pull/9284", "timeline": [{"oid": "c5d666c2a3c862dd13c4dc732e107f3a9a505a1a", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c5d666c2a3c862dd13c4dc732e107f3a9a505a1a", "message": "Cleaned up Configuration implementation", "committedDate": "2020-03-20T01:11:13Z", "type": "commit"}, {"oid": "b4447c77b3ac8ccc5fceafb4145231bbe665953d", "url": "https://github.com/Azure/azure-sdk-for-java/commit/b4447c77b3ac8ccc5fceafb4145231bbe665953d", "message": "Additional refactoring of Configuration", "committedDate": "2020-03-20T16:30:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4MzEzNA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9284#discussion_r395783134", "body": "Do we need both BASE_CONFIGURATIONS and GLOBAL_CONFIGURATION? We can directly use the global configurations as the base when creating a new instance. Both of these should be immutable anyway.", "bodyText": "Do we need both BASE_CONFIGURATIONS and GLOBAL_CONFIGURATION? We can directly use the global configurations as the base when creating a new instance. Both of these should be immutable anyway.", "bodyHTML": "<p dir=\"auto\">Do we need both BASE_CONFIGURATIONS and GLOBAL_CONFIGURATION? We can directly use the global configurations as the base when creating a new instance. Both of these should be immutable anyway.</p>", "author": "srnagar", "createdAt": "2020-03-20T17:21:10Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/Configuration.java", "diffHunk": "@@ -120,22 +129,30 @@\n         PROPERTY_AZURE_TRACING_DISABLED,\n     };\n \n-    /**\n+    /*\n+     * The base set of configurations that is loaded at the start of the application. This will be used to pre-populate\n+     * all further Configurations created.\n+     */\n+    private static final Configuration BASE_CONFIGURATIONS = loadBaseConfiguration();\n+\n+    /*\n      * Gets the global configuration shared by all client libraries.\n      */\n-    private static final Configuration GLOBAL_CONFIGURATION = new Configuration();\n+    private static final Configuration GLOBAL_CONFIGURATION = BASE_CONFIGURATIONS.clone();", "originalCommit": "b4447c77b3ac8ccc5fceafb4145231bbe665953d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc5MTEwOQ==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9284#discussion_r395791109", "bodyText": "This is keeping inline with previous behavior where a Configuration would load the base set of Azure configurations on the first get call. Instead of loading these once per instance (worst case scenario) populate a static internal instance that gets copied into each new configuration.\nThe backing map for GLOBAL_CONFIGURATION is able to be mutated, the reference itself cannot be though.", "author": "alzimmermsft", "createdAt": "2020-03-20T17:35:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4MzEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwOTI2OA==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9284#discussion_r395809268", "bodyText": "Removed", "author": "alzimmermsft", "createdAt": "2020-03-20T18:08:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4MzEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4MzU1Mg==", "url": "https://github.com/Azure/azure-sdk-for-java/pull/9284#discussion_r395783552", "body": "nit: \r\n```suggestion\r\n    private static final Configuration BASE_CONFIGURATION = loadBaseConfiguration();\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Configuration BASE_CONFIGURATIONS = loadBaseConfiguration();\n          \n          \n            \n                private static final Configuration BASE_CONFIGURATION = loadBaseConfiguration();", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Configuration</span> <span class=\"pl-c1 x x-first x-last\">BASE_CONFIGURATIONS</span> <span class=\"pl-k\">=</span> loadBaseConfiguration();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Configuration</span> <span class=\"pl-c1 x x-first x-last\">BASE_CONFIGURATION</span> <span class=\"pl-k\">=</span> loadBaseConfiguration();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "srnagar", "createdAt": "2020-03-20T17:21:54Z", "path": "sdk/core/azure-core/src/main/java/com/azure/core/util/Configuration.java", "diffHunk": "@@ -120,22 +129,30 @@\n         PROPERTY_AZURE_TRACING_DISABLED,\n     };\n \n-    /**\n+    /*\n+     * The base set of configurations that is loaded at the start of the application. This will be used to pre-populate\n+     * all further Configurations created.\n+     */\n+    private static final Configuration BASE_CONFIGURATIONS = loadBaseConfiguration();", "originalCommit": "b4447c77b3ac8ccc5fceafb4145231bbe665953d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c86e1ec2a3799f37232f6397c2539deac6ebf3b3", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c86e1ec2a3799f37232f6397c2539deac6ebf3b3", "message": "Merge branch 'master' into AzCore_MoreUnitTests", "committedDate": "2020-03-20T17:43:23Z", "type": "commit"}, {"oid": "c9363863587b78b39ce783c8646864f6d31e2764", "url": "https://github.com/Azure/azure-sdk-for-java/commit/c9363863587b78b39ce783c8646864f6d31e2764", "message": "Removed based configuration, updated constructor docs to reflect what a new configuration will contain", "committedDate": "2020-03-20T17:56:16Z", "type": "commit"}]}