{"pr_number": 2267, "pr_title": "Gh 791 add named operation group label (part of tools Issue #791)", "pr_author": "macenturalxl1", "pr_createdAt": "2020-04-14T17:20:57Z", "pr_url": "https://github.com/gchq/Gaffer/pull/2267", "timeline": [{"oid": "41444d4f3956a294424dfd03575325943fda3958", "url": "https://github.com/gchq/Gaffer/commit/41444d4f3956a294424dfd03575325943fda3958", "message": "Added label field to AddNamedOperation & Detail", "committedDate": "2020-04-14T11:04:41Z", "type": "commit"}, {"oid": "7ec674e3924240e88b92cfb5b26c32a543f33bd9", "url": "https://github.com/gchq/Gaffer/commit/7ec674e3924240e88b92cfb5b26c32a543f33bd9", "message": "Merge branch 'develop' of github.com:gchq/Gaffer into gh-791-add-named-operation-group-label", "committedDate": "2020-04-14T11:05:17Z", "type": "commit"}, {"oid": "954f85cc27313a0295f3a9e6b2fd3535aa0c55dd", "url": "https://github.com/gchq/Gaffer/commit/954f85cc27313a0295f3a9e6b2fd3535aa0c55dd", "message": "GetAllNamedOps handler test for NamedOp label", "committedDate": "2020-04-14T13:53:22Z", "type": "commit"}, {"oid": "b5811c02b85ed6113a719dbcd49584f1a857d021", "url": "https://github.com/gchq/Gaffer/commit/b5811c02b85ed6113a719dbcd49584f1a857d021", "message": "Added integration test to GetNamedOps with a label", "committedDate": "2020-04-14T14:41:08Z", "type": "commit"}, {"oid": "859d2d8dab9d54997da3c2d8d4c6e6335b862781", "url": "https://github.com/gchq/Gaffer/commit/859d2d8dab9d54997da3c2d8d4c6e6335b862781", "message": "Swagger example for AddNamedOperation with label", "committedDate": "2020-04-14T15:23:21Z", "type": "commit"}, {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f", "url": "https://github.com/gchq/Gaffer/commit/238cb4a7c08b2e26f5578e9faa7390529d7f839f", "message": "Fixed checkstyle changes, updated V2 userId", "committedDate": "2020-04-14T17:15:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411181615", "body": "It might be better to have a list of labels so that named operations can have more than one.", "bodyText": "It might be better to have a list of labels so that named operations can have more than one.", "bodyHTML": "<p dir=\"auto\">It might be better to have a list of labels so that named operations can have more than one.</p>", "author": "d47853", "createdAt": "2020-04-20T08:14:40Z", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperation.java", "diffHunk": "@@ -54,9 +54,11 @@\n @Since(\"1.0.0\")\n @Summary(\"Adds a new named operation\")\n public class AddNamedOperation implements Operation, Operations<Operation> {\n+\n     @Required\n     private String operations;\n     private String operationName;\n+    private String label;", "originalCommit": "238cb4a7c08b2e26f5578e9faa7390529d7f839f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMzM5Mw==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411203393", "bodyText": "Ah yes it did cross my mind. Having an Operation linked to many groups would be a better feature - and a lot more flexible - I'll make the change thanks", "author": "macenturalxl1", "createdAt": "2020-04-20T08:47:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyNzM0MQ==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411327341", "bodyText": "Done", "author": "macenturalxl1", "createdAt": "2020-04-20T12:12:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411188398", "body": "For backwards compatability, these constructors should remain the same and instead call a new constructor which has the label as the final parameter.\r\n\r\nSo instead of adding a label in all the constructors:\r\n```java\r\npublic Example(String example1, String Label, String example2) {\r\n    this(example1, label, example2, null);\r\n}\r\n\r\npublic Example(String example1, String Label, String example2, Integer example3) {\r\n    // do stuff\r\n}\r\n```\r\nLeave the constructors as they are so any existing code still call them and they maintain the same behaviour:\r\n```java\r\npublic Example(String example1, String example2) {\r\n    this(example1, example2, null, null);\r\n}\r\n\r\npublic Example(String example1, String example2, Integer example3) {\r\n    this(example1, example2, example3, null);\r\n}\r\n\r\n// new constructor\r\npublic Example(String example1, String example2, Integer example3, String label) {\r\n    // do stuff\r\n}\r\n```", "bodyText": "For backwards compatability, these constructors should remain the same and instead call a new constructor which has the label as the final parameter.\nSo instead of adding a label in all the constructors:\npublic Example(String example1, String Label, String example2) {\n    this(example1, label, example2, null);\n}\n\npublic Example(String example1, String Label, String example2, Integer example3) {\n    // do stuff\n}\nLeave the constructors as they are so any existing code still call them and they maintain the same behaviour:\npublic Example(String example1, String example2) {\n    this(example1, example2, null, null);\n}\n\npublic Example(String example1, String example2, Integer example3) {\n    this(example1, example2, example3, null);\n}\n\n// new constructor\npublic Example(String example1, String example2, Integer example3, String label) {\n    // do stuff\n}", "bodyHTML": "<p dir=\"auto\">For backwards compatability, these constructors should remain the same and instead call a new constructor which has the label as the final parameter.</p>\n<p dir=\"auto\">So instead of adding a label in all the constructors:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public Example(String example1, String Label, String example2) {\n    this(example1, label, example2, null);\n}\n\npublic Example(String example1, String Label, String example2, Integer example3) {\n    // do stuff\n}\"><pre><span class=\"pl-k\">public</span> Example(<span class=\"pl-smi\">String</span> example1, <span class=\"pl-smi\">String</span> <span class=\"pl-smi\">Label</span>, <span class=\"pl-smi\">String</span> example2) {\n    <span class=\"pl-c1\">this</span>(example1, label, example2, <span class=\"pl-c1\">null</span>);\n}\n\n<span class=\"pl-k\">public</span> Example(<span class=\"pl-smi\">String</span> example1, <span class=\"pl-smi\">String</span> <span class=\"pl-smi\">Label</span>, <span class=\"pl-smi\">String</span> example2, <span class=\"pl-smi\">Integer</span> example3) {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> do stuff</span>\n}</pre></div>\n<p dir=\"auto\">Leave the constructors as they are so any existing code still call them and they maintain the same behaviour:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public Example(String example1, String example2) {\n    this(example1, example2, null, null);\n}\n\npublic Example(String example1, String example2, Integer example3) {\n    this(example1, example2, example3, null);\n}\n\n// new constructor\npublic Example(String example1, String example2, Integer example3, String label) {\n    // do stuff\n}\"><pre><span class=\"pl-k\">public</span> Example(<span class=\"pl-smi\">String</span> example1, <span class=\"pl-smi\">String</span> example2) {\n    <span class=\"pl-c1\">this</span>(example1, example2, <span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n}\n\n<span class=\"pl-k\">public</span> Example(<span class=\"pl-smi\">String</span> example1, <span class=\"pl-smi\">String</span> example2, <span class=\"pl-smi\">Integer</span> example3) {\n    <span class=\"pl-c1\">this</span>(example1, example2, example3, <span class=\"pl-c1\">null</span>);\n}\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> new constructor</span>\n<span class=\"pl-k\">public</span> Example(<span class=\"pl-smi\">String</span> example1, <span class=\"pl-smi\">String</span> example2, <span class=\"pl-smi\">Integer</span> example3, <span class=\"pl-smi\">String</span> label) {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> do stuff</span>\n}</pre></div>", "author": "d47853", "createdAt": "2020-04-20T08:25:11Z", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/NamedOperationDetail.java", "diffHunk": "@@ -58,15 +59,15 @@\n     public NamedOperationDetail() {\n     }\n \n-    public NamedOperationDetail(final String operationName, final String description, final String userId,\n+    public NamedOperationDetail(final String operationName, final String label, final String description, final String userId,", "originalCommit": "238cb4a7c08b2e26f5578e9faa7390529d7f839f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMzc0OA==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411203748", "bodyText": "Agreed, thanks for the recommended solution", "author": "macenturalxl1", "createdAt": "2020-04-20T08:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyNzM4MA==", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411327380", "bodyText": "Done", "author": "macenturalxl1", "createdAt": "2020-04-20T12:13:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA=="}], "type": "inlineReview"}, {"oid": "d8ada111d1d47ba69b8e10329e398bb2e7a6ccdb", "url": "https://github.com/gchq/Gaffer/commit/d8ada111d1d47ba69b8e10329e398bb2e7a6ccdb", "message": "Merge branch 'develop' of github.com:gchq/Gaffer into gh-791-add-named-operation-group-label", "committedDate": "2020-04-20T13:42:59Z", "type": "commit"}, {"oid": "15d3e990af7070a092d392d9b14da5fafef3b646", "url": "https://github.com/gchq/Gaffer/commit/15d3e990af7070a092d392d9b14da5fafef3b646", "message": "Add a list of labels to NamedOperations", "committedDate": "2020-04-20T13:46:27Z", "type": "commit"}]}