{"pr_number": 2238, "pr_title": "Federated admin changes", "pr_author": "GCHQDev404", "pr_createdAt": "2020-01-24T13:58:00Z", "pr_url": "https://github.com/gchq/Gaffer/pull/2238", "merge_commit": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "timeline": [{"oid": "f997dce61630d88a56617eceee52cc8c4bff2420", "url": "https://github.com/gchq/Gaffer/commit/f997dce61630d88a56617eceee52cc8c4bff2420", "message": "Gh 2223 federated admin override (#2231)\n\n* Typo\r\n\r\n* gh-2223 FederatedAdminIT tests\r\n\r\n* gh-2223 Admin Override for RemoveGraph and GetAllGraphIds\r\n\r\n* gh-2223 Admin override for RemoveGraph uses predicate\r\n\r\n* gh-2223 FederatedAdminIT tests for a NonAdmin user requesting admin override.\r\n\r\n* gh-2223 change to gaffer.store.admin.auth and renaming\r\n\r\n* gh-2223 checkstyle\r\n\r\n* gh-2223 remove graph admin param added.\r\n\r\n* gh-2223 refinements and package protected methods in FederatedGraphStorage", "committedDate": "2020-01-22T15:46:56Z", "type": "commit"}, {"oid": "1495fb380d84ef8d2ff1abf9caa7dbe0d93357be", "url": "https://github.com/gchq/Gaffer/commit/1495fb380d84ef8d2ff1abf9caa7dbe0d93357be", "message": "Gh 2225 federated get all graph info (#2232)\n\n* Typo\r\n\r\n* gh-2223 FederatedAdminIT tests\r\n\r\n* gh-2223 Admin Override for RemoveGraph and GetAllGraphIds\r\n\r\n* gh-2223 Admin override for RemoveGraph uses predicate\r\n\r\n* gh-2223 FederatedAdminIT tests for a NonAdmin user requesting admin override.\r\n\r\n* gh-2223 change to gaffer.store.admin.auth and renaming\r\n\r\n* gh-2225 Federated GetAllGraphInfo\r\n\r\n* gh-2225 FederatedGetAllGraphInfoHandler has AdminAll and User usage.\r\n\r\n* gh-2223 checkstyle\r\n\r\n* gh-2225 checkstyle\r\n\r\n* gh-2225 GetGraphInfo can be filtered by graphIds\r\n\r\n* gh-2223 remove graph admin param added.\r\n\r\n* gh-2225 getAllGraphsAndAuths isAdmin param\r\n\r\n* gh-2223 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2225 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: d47853 <d47853@users.noreply.github.com>\r\n\r\n* gh-2225 PR changes GetGraphInfo returns FederatedAccess not string.\r\n\r\nCo-authored-by: d47853 <d47853@users.noreply.github.com>", "committedDate": "2020-01-23T10:14:27Z", "type": "commit"}, {"oid": "a5992bf4ce30562017210a21660d96171447b923", "url": "https://github.com/gchq/Gaffer/commit/a5992bf4ce30562017210a21660d96171447b923", "message": "Gh 2226 fedated change graph access (#2233)\n\n* Typo\r\n\r\n* gh-2223 FederatedAdminIT tests\r\n\r\n* gh-2223 Admin Override for RemoveGraph and GetAllGraphIds\r\n\r\n* gh-2223 Admin override for RemoveGraph uses predicate\r\n\r\n* gh-2223 FederatedAdminIT tests for a NonAdmin user requesting admin override.\r\n\r\n* gh-2223 change to gaffer.store.admin.auth and renaming\r\n\r\n* gh-2225 Federated GetAllGraphInfo\r\n\r\n* gh-2225 FederatedGetAllGraphInfoHandler has AdminAll and User usage.\r\n\r\n* gh-2223 checkstyle\r\n\r\n* gh-2225 checkstyle\r\n\r\n* gh-2225 GetGraphInfo can be filtered by graphIds\r\n\r\n* gh-2223 remove graph admin param added.\r\n\r\n* gh-2225 getAllGraphsAndAuths isAdmin param\r\n\r\n* gh-2226 Federated ChangeGraphAccess\r\n\r\n* gh-2223 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2225 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2226 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: d47853 <d47853@users.noreply.github.com>\r\n\r\n* gh-2225 PR changes GetGraphInfo returns FederatedAccess not string.\r\n\r\n* gh-2226 comments\r\n\r\n* gh-2226 tidy up builder and PR change\r\n\r\nCo-authored-by: d47853 <d47853@users.noreply.github.com>", "committedDate": "2020-01-24T13:36:08Z", "type": "commit"}, {"oid": "f603a6fea6eabdb4209da31b790820bc68b1230d", "url": "https://github.com/gchq/Gaffer/commit/f603a6fea6eabdb4209da31b790820bc68b1230d", "message": "Gh 2227 federated remove graph add limitation for visibility (#2234)\n\n* Typo\r\n\r\n* gh-2223 FederatedAdminIT tests\r\n\r\n* gh-2223 Admin Override for RemoveGraph and GetAllGraphIds\r\n\r\n* gh-2223 Admin override for RemoveGraph uses predicate\r\n\r\n* gh-2223 FederatedAdminIT tests for a NonAdmin user requesting admin override.\r\n\r\n* gh-2223 change to gaffer.store.admin.auth and renaming\r\n\r\n* gh-2225 Federated GetAllGraphInfo\r\n\r\n* gh-2225 FederatedGetAllGraphInfoHandler has AdminAll and User usage.\r\n\r\n* gh-2223 checkstyle\r\n\r\n* gh-2225 checkstyle\r\n\r\n* gh-2225 GetGraphInfo can be filtered by graphIds\r\n\r\n* gh-2223 remove graph admin param added.\r\n\r\n* gh-2225 getAllGraphsAndAuths isAdmin param\r\n\r\n* gh-2226 Federated ChangeGraphAccess\r\n\r\n* gh-2227 Federated Remove Graph works only for AdminUsers and AddingUser not users with visibility.\r\n\r\n* gh-2223 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2225 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2226 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2227 refinements and package protected methods\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: d47853 <d47853@users.noreply.github.com>\r\n\r\n* gh-2225 PR changes GetGraphInfo returns FederatedAccess not string.\r\n\r\n* gh-2226 comments\r\n\r\n* gh-2227 removing package private\r\n\r\n* gh-2227 removing FederatedAccess unused toString\r\n\r\nCo-authored-by: d47853 <d47853@users.noreply.github.com>", "committedDate": "2020-01-24T13:42:49Z", "type": "commit"}, {"oid": "ea4a976788e5ad3d4ca1b6e112007ad20ae87371", "url": "https://github.com/gchq/Gaffer/commit/ea4a976788e5ad3d4ca1b6e112007ad20ae87371", "message": "Gh 2225 improvements (#2235)\n\n* Typo\r\n\r\n* gh-2223 FederatedAdminIT tests\r\n\r\n* gh-2223 Admin Override for RemoveGraph and GetAllGraphIds\r\n\r\n* gh-2223 Admin override for RemoveGraph uses predicate\r\n\r\n* gh-2223 FederatedAdminIT tests for a NonAdmin user requesting admin override.\r\n\r\n* gh-2223 change to gaffer.store.admin.auth and renaming\r\n\r\n* gh-2225 Federated GetAllGraphInfo\r\n\r\n* gh-2225 FederatedGetAllGraphInfoHandler has AdminAll and User usage.\r\n\r\n* gh-2223 checkstyle\r\n\r\n* gh-2225 checkstyle\r\n\r\n* gh-2225 GetGraphInfo can be filtered by graphIds\r\n\r\n* gh-2223 remove graph admin param added.\r\n\r\n* gh-2225 getAllGraphsAndAuths isAdmin param\r\n\r\n* gh-2226 Federated ChangeGraphAccess\r\n\r\n* gh-2227 Federated Remove Graph works only for AdminUsers and AddingUser not users with visibility.\r\n\r\n* gh-2223 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2225 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2226 refinements and package protected methods in FederatedGraphStorage\r\n\r\n* gh-2227 refinements and package protected methods\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: d47853 <d47853@users.noreply.github.com>\r\n\r\n* gh-2225 PR changes GetGraphInfo returns FederatedAccess not string.\r\n\r\n* gh-2226 comments\r\n\r\n* gh-2227 removing package private\r\n\r\n* gh-2227 removing FederatedAccess unused toString\r\n\r\n* gh-2225 improvements\r\n\r\nCo-authored-by: d47853 <d47853@users.noreply.github.com>", "committedDate": "2020-01-24T13:54:16Z", "type": "commit"}, {"oid": "37adbb6c1ea266f596cb8690234c5f8995a46f90", "url": "https://github.com/gchq/Gaffer/commit/37adbb6c1ea266f596cb8690234c5f8995a46f90", "message": "Merge remote-tracking branch 'origin/develop' into federated-admin-changes", "committedDate": "2020-01-24T13:56:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDIxNA==", "url": "https://github.com/gchq/Gaffer/pull/2238#discussion_r370670214", "body": "Can you restore the modifiers for these?", "bodyText": "Can you restore the modifiers for these?", "bodyHTML": "<p dir=\"auto\">Can you restore the modifiers for these?</p>", "author": "d47853", "createdAt": "2020-01-24T14:46:16Z", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java", "diffHunk": "@@ -87,7 +87,7 @@ public String getAddingUserId() {\n         return addingUserId;\n     }\n \n-    public void setAddingUserId(final String creatorUserId) {\n+    void setAddingUserId(final String creatorUserId) {", "originalCommit": "37adbb6c1ea266f596cb8690234c5f8995a46f90", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\nindex 76107ade16..9a6a13489a 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n", "chunk": "@@ -87,7 +87,7 @@ public class FederatedAccess implements Serializable {\n         return addingUserId;\n     }\n \n-    void setAddingUserId(final String creatorUserId) {\n+    public void setAddingUserId(final String creatorUserId) {\n         this.addingUserId = creatorUserId;\n     }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\nindex 76107ade16..9a6a13489a 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n", "chunk": "@@ -87,7 +87,7 @@ public class FederatedAccess implements Serializable {\n         return addingUserId;\n     }\n \n-    void setAddingUserId(final String creatorUserId) {\n+    public void setAddingUserId(final String creatorUserId) {\n         this.addingUserId = creatorUserId;\n     }\n \n", "next_change": {"commit": "016b19a2f1004dc3d5295917558a8470a2af9e7a", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\nindex 9a6a13489a..2939e21445 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n", "chunk": "@@ -60,42 +65,57 @@ import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.DEFAULT_\n  *\n  * @see #isValidToExecute(User)\n  */\n-public class FederatedAccess implements Serializable {\n+public class FederatedAccess implements AccessControlledResource, Serializable {\n     private static final long serialVersionUID = 1399629017857618033L;\n-\n-    private boolean isPublic = Boolean.valueOf(DEFAULT_VALUE_IS_PUBLIC);\n-    private Set<String> graphAuths = new HashSet<>();\n+    private static final boolean NOT_DISABLED_BY_DEFAULT = false;\n+    private final boolean isPublic;\n+    private Set<String> graphAuths;\n     private String addingUserId;\n-    private boolean disabledByDefault;\n+    private final boolean disabledByDefault;\n+    private AccessPredicate readAccessPredicate;\n+    private AccessPredicate writeAccessPredicate;\n \n     public FederatedAccess(final Set<String> graphAuths, final String addingUserId) {\n-        setGraphAuths(graphAuths);\n-        setAddingUserId(addingUserId);\n+        this(graphAuths, addingUserId, Boolean.valueOf(DEFAULT_VALUE_IS_PUBLIC));\n     }\n \n-    public FederatedAccess(final Set<String> graphAuths, final String addingUser, final boolean isPublic) {\n-        this(graphAuths, addingUser);\n-        this.isPublic = isPublic;\n+    public FederatedAccess(final Set<String> graphAuths, final String addingUserId, final boolean isPublic) {\n+        this(graphAuths, addingUserId, isPublic, NOT_DISABLED_BY_DEFAULT);\n     }\n \n-    public FederatedAccess(final Set<String> graphAuths, final String addingUser, final boolean isPublic, final boolean disabledByDefault) {\n-        this(graphAuths, addingUser, isPublic);\n+    public FederatedAccess(final Set<String> graphAuths, final String addingUserId, final boolean isPublic, final boolean disabledByDefault) {\n+        this(graphAuths, addingUserId, isPublic, disabledByDefault, null, null);\n+    }\n+\n+    public FederatedAccess(\n+            final Set<String> graphAuths,\n+            final String addingUserId,\n+            final boolean isPublic,\n+            final boolean disabledByDefault,\n+            final AccessPredicate readAccessPredicate,\n+            final AccessPredicate writeAccessPredicate) {\n+        this.graphAuths = graphAuths;\n+        this.addingUserId = addingUserId;\n+        this.isPublic = isPublic;\n         this.disabledByDefault = disabledByDefault;\n+\n+        this.readAccessPredicate = readAccessPredicate != null ? readAccessPredicate : new FederatedGraphReadAccessPredicate(addingUserId, graphAuths, isPublic);\n+        this.writeAccessPredicate = writeAccessPredicate != null ? writeAccessPredicate : new FederatedGraphWriteAccessPredicate(addingUserId);\n     }\n \n     public String getAddingUserId() {\n         return addingUserId;\n     }\n \n-    public void setAddingUserId(final String creatorUserId) {\n-        this.addingUserId = creatorUserId;\n-    }\n-\n     public boolean isDisabledByDefault() {\n         return disabledByDefault;\n     }\n \n     /**\n+     * @param user User request permission.\n+     * @return boolean permission for user.\n+     * @Deprecated see {@link FederatedAccess#hasReadAccess(User, String)}\n+     *\n      * <table summary=\"isValidToExecute truth table\">\n      * <tr><td> hookAuthsEmpty  </td><td> isAddingUser</td><td>\n      * userHasASharedAuth</td><td> isValid?</td></tr>\n", "next_change": {"commit": "dd18afb4367c1700da21ebc9ca69f59c9c14967a", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\nindex 2939e21445..d3945dcde5 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n", "chunk": "@@ -94,57 +102,38 @@ public class FederatedAccess implements AccessControlledResource, Serializable {\n             final boolean disabledByDefault,\n             final AccessPredicate readAccessPredicate,\n             final AccessPredicate writeAccessPredicate) {\n+\n+        if (graphAuths != null && readAccessPredicate != null) {\n+            throw new IllegalArgumentException(\"Only one of graphAuths or readAccessPredicate should be supplied.\");\n+        }\n+\n         this.graphAuths = graphAuths;\n         this.addingUserId = addingUserId;\n         this.isPublic = isPublic;\n         this.disabledByDefault = disabledByDefault;\n \n-        this.readAccessPredicate = readAccessPredicate != null ? readAccessPredicate : new FederatedGraphReadAccessPredicate(addingUserId, graphAuths, isPublic);\n-        this.writeAccessPredicate = writeAccessPredicate != null ? writeAccessPredicate : new FederatedGraphWriteAccessPredicate(addingUserId);\n-    }\n-\n-    public String getAddingUserId() {\n-        return addingUserId;\n-    }\n-\n-    public boolean isDisabledByDefault() {\n-        return disabledByDefault;\n+        try {\n+            this.readAccessPredicate = readAccessPredicate != null ? new String(JSONSerialiser.serialise(readAccessPredicate)) : null;\n+            this.writeAccessPredicate = writeAccessPredicate != null ? new String(JSONSerialiser.serialise(writeAccessPredicate)) : null;\n+        } catch (final SerialisationException e) {\n+            throw new IllegalArgumentException(\"Read and write accessPredicates must be JsonSerialisable\", e);\n+        }\n     }\n \n-    /**\n-     * @param user User request permission.\n-     * @return boolean permission for user.\n-     * @Deprecated see {@link FederatedAccess#hasReadAccess(User, String)}\n-     *\n-     * <table summary=\"isValidToExecute truth table\">\n-     * <tr><td> hookAuthsEmpty  </td><td> isAddingUser</td><td>\n-     * userHasASharedAuth</td><td> isValid?</td></tr>\n-     * <tr><td>  T              </td><td> T           </td><td> n/a\n-     * </td><td> T   </td></tr>\n-     * <tr><td>  T              </td><td> F           </td><td> n/a\n-     * </td><td> F   </td></tr>\n-     * <tr><td>  F              </td><td> T           </td><td> n/a\n-     * </td><td> T   </td></tr>\n-     * <tr><td>  F              </td><td> n/a         </td><td> T\n-     * </td><td> T   </td></tr>\n-     * <tr><td>  F              </td><td> F           </td><td> F\n-     * </td><td> F   </td></tr>\n-     * </table>\n-     */\n-    protected boolean isValidToExecute(final User user) {\n-        return isPublic || (null != user && (isAddingUser(user) || (!isAuthsNullOrEmpty() && isUserHasASharedAuth(user))));\n+    public Set<String> getGraphAuths() {\n+        return graphAuths != null ? unmodifiableSet(graphAuths) : null;\n     }\n \n-    private boolean isUserHasASharedAuth(final User user) {\n-        return !Collections.disjoint(user.getOpAuths(), this.graphAuths);\n+    public String getAddingUserId() {\n+        return addingUserId;\n     }\n \n-    protected boolean isAddingUser(final User user) {\n-        return null != user.getUserId() && user.getUserId().equals(addingUserId);\n+    public boolean isPublic() {\n+        return isPublic;\n     }\n \n-    private boolean isAuthsNullOrEmpty() {\n-        return (null == this.graphAuths || this.graphAuths.isEmpty());\n+    public boolean isDisabledByDefault() {\n+        return disabledByDefault;\n     }\n \n     @Override\n", "next_change": {"commit": "f88215c6d98b48a805309b83c2f08c4f8188a47b", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\nindex d3945dcde5..be4891491c 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedAccess.java\n", "chunk": "@@ -121,21 +112,17 @@ public class FederatedAccess implements AccessControlledResource, Serializable {\n     }\n \n     public Set<String> getGraphAuths() {\n-        return graphAuths != null ? unmodifiableSet(graphAuths) : null;\n+        return (graphAuths != null) ? unmodifiableSet(graphAuths) : null;\n     }\n \n-    public String getAddingUserId() {\n-        return addingUserId;\n+    public String getOwningUserId() {\n+        return owningUserId;\n     }\n \n     public boolean isPublic() {\n         return isPublic;\n     }\n \n-    public boolean isDisabledByDefault() {\n-        return disabledByDefault;\n-    }\n-\n     @Override\n     public boolean equals(final Object o) {\n         if (this == o) {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "message": "Merge commit", "committedDate": null}, {"oid": "016b19a2f1004dc3d5295917558a8470a2af9e7a", "committedDate": "2020-09-04 11:32:27 +0100", "message": "gh-2295 Harmonise resource access controls for Named Operations Named Views and Federated Store Graphs. (#2301)"}, {"oid": "5691ed854fe825fce9db0709bdca5d00add5b5b4", "committedDate": "2020-09-23 13:50:53 +0100", "message": "Gh 2306 fix serialisation issue (#2307)"}, {"oid": "2e10c324dd55e02b02d2cd0b330d53ed535ab9ee", "committedDate": "2020-10-16 14:53:07 +0100", "message": "Gh 2320 remove unused graph auths code (#2323)"}, {"oid": "5483d3fa7ac0cabf885c3cdb902f13a67d8896a2", "committedDate": "2020-10-21 17:24:36 +0100", "message": "Removed static null objects"}, {"oid": "ea879393638a8f7aa166359fc4a9e837df3c5240", "committedDate": "2021-01-19 10:27:24 +0000", "message": "Refactor (#2358)"}, {"oid": "dd18afb4367c1700da21ebc9ca69f59c9c14967a", "committedDate": "2022-02-23 15:24:20 +0000", "message": "Gh 2552 remove deprecated (#2564)"}, {"oid": "b3f6e978c7c4a9890fe15dce6286d6dccdf97ced", "committedDate": "2022-04-08 10:15:02 +0100", "message": "Gh-2300: Java 11 compatibility (#2624)"}, {"oid": "c1517b163950f6df9d948a93d92327cea188d3ea", "committedDate": "2022-10-24 12:29:31 +0100", "message": "gh-2357 federatedstore federated operation merge into v2 alpha (#2769)"}, {"oid": "79f0f64465c740180796476b69c6ad00b20ff69f", "committedDate": "2022-11-29 16:30:12 +0000", "message": "Gh-2236: Rename addingUserId to owningUserId (#2832)"}, {"oid": "f88215c6d98b48a805309b83c2f08c4f8188a47b", "committedDate": "2022-12-15 09:36:16 +0000", "message": "Gh-2764: federated store review and test is disabled by default (#2834)"}, {"oid": "dc9eb4831e62a09b59e761537a3d63479c723ada", "committedDate": "2023-01-23 14:30:00 +0000", "message": "Gh-2841: Update Spotbugs (#2842)"}, {"oid": "1f4eaed28f36b0ba4e1deb7923041b4f39c5497f", "committedDate": "2023-02-06 09:30:15 +0000", "message": "gh-2319 Improvement to remove constant serialisation of AccessPredica\u2026 (#2862)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDU4NA==", "url": "https://github.com/gchq/Gaffer/pull/2238#discussion_r370670584", "body": "Can you set these back to public", "bodyText": "Can you set these back to public", "bodyHTML": "<p dir=\"auto\">Can you set these back to public</p>", "author": "d47853", "createdAt": "2020-01-24T14:46:57Z", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "diffHunk": "@@ -82,7 +85,7 @@ protected void startCacheServiceLoader() throws StorageException {\n      * @throws StorageException if unable to put arguments into storage\n      * @see #put(GraphSerialisable, FederatedAccess)\n      */\n-    public void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {\n+    protected void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {", "originalCommit": "37adbb6c1ea266f596cb8690234c5f8995a46f90", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\nindex 2b537202a0..079c509aa9 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n", "chunk": "@@ -85,7 +85,7 @@ public class FederatedGraphStorage {\n      * @throws StorageException if unable to put arguments into storage\n      * @see #put(GraphSerialisable, FederatedAccess)\n      */\n-    protected void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {\n+    public void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {\n         for (final GraphSerialisable graph : graphs) {\n             put(graph, access);\n         }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\nindex 2b537202a0..079c509aa9 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n", "chunk": "@@ -85,7 +85,7 @@ public class FederatedGraphStorage {\n      * @throws StorageException if unable to put arguments into storage\n      * @see #put(GraphSerialisable, FederatedAccess)\n      */\n-    protected void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {\n+    public void put(final Collection<GraphSerialisable> graphs, final FederatedAccess access) throws StorageException {\n         for (final GraphSerialisable graph : graphs) {\n             put(graph, access);\n         }\n", "next_change": {"commit": "4591638d021d5221d64dcaa260f8dbdc23fa7449", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\nindex 079c509aa9..7b0838de95 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java\n", "chunk": "@@ -93,8 +84,7 @@ public class FederatedGraphStorage {\n \n     /**\n      * places a graph into storage, protected by the given access.\n-     * <p> GraphId can't already exist, otherwise {@link\n-     * OverwritingException} is thrown.\n+     * <p> GraphId can't already exist, otherwise {@link OverwritingException} is thrown.\n      * <p> Access can't be null otherwise {@link IllegalArgumentException} is\n      * thrown\n      *\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "message": "Merge commit", "committedDate": null}, {"oid": "b75cc8caf0ebc7b8662453254b23eb093f42172b", "committedDate": "2020-04-02 15:27:22 +0100", "message": "gh-2244 FederatedStore ChangeGraphId (#2245)"}, {"oid": "016b19a2f1004dc3d5295917558a8470a2af9e7a", "committedDate": "2020-09-04 11:32:27 +0100", "message": "gh-2295 Harmonise resource access controls for Named Operations Named Views and Federated Store Graphs. (#2301)"}, {"oid": "84677037bb0daaf5e220c523ef8cf7ef8232d72e", "committedDate": "2021-05-12 10:35:33 -0700", "message": "gh-2422 FederatedStore ChangeGraphId & ChangeGraphAccess update cache + Test"}, {"oid": "c103f824e77166c57b1476a13d7257f676874efe", "committedDate": "2021-06-04 01:15:57 -0700", "message": "gh-2435 Updating Tables for changeGraphIds"}, {"oid": "4ce89acaa3d0d55c0b1c877d30714cdb981abc40", "committedDate": "2021-06-04 03:49:41 -0700", "message": "gh-2435 removing tmpAccumuloStore"}, {"oid": "b22d7a7ab1974399edad87f6f7962b2aa5b6f4f6", "committedDate": "2021-07-06 20:34:50 +0100", "message": "gh-2455 FederatedStore GetTraits Audit. Removing dead code and correc\u2026 (#2456)"}, {"oid": "f5018c80e34973e3964c43aeb582d68426ab56f8", "committedDate": "2021-07-30 11:53:55 -0700", "message": "Merge branch 'develop' into gh-2435-FederatedStore-changeGraphId-table-name-fix"}, {"oid": "3387ecf7029be05cf349c7002b7ac57fa0d905de", "committedDate": "2021-08-25 17:35:52 +0100", "message": "gh-2435 PR review"}, {"oid": "23c323e894c8dba3e25029c3699b6fb5a050a39e", "committedDate": "2021-08-26 18:48:57 +0100", "message": "Gh 2485 replace hamcrest with assertj (#2491)"}, {"oid": "dd18afb4367c1700da21ebc9ca69f59c9c14967a", "committedDate": "2022-02-23 15:24:20 +0000", "message": "Gh 2552 remove deprecated (#2564)"}, {"oid": "f217c92ae4b849fc1242823ebe6795fad9117a45", "committedDate": "2022-05-27 10:07:37 +0100", "message": "gh-2657: Cherry-pick gh-2618: Cleanup inconsistent use of logging strings (#2651) (#2658)"}, {"oid": "441a60174115fafc0e1e4dfb115d0e18dfff3108", "committedDate": "2022-09-09 09:15:01 +0100", "message": "Gh-2614: Enable alternative authentication to Accumulo using Kerberos (#2737)"}, {"oid": "c1517b163950f6df9d948a93d92327cea188d3ea", "committedDate": "2022-10-24 12:29:31 +0100", "message": "gh-2357 federatedstore federated operation merge into v2 alpha (#2769)"}, {"oid": "3ee6a5f0f9ac9840fbf1a285da6e06bd9f6c3fd5", "committedDate": "2022-11-02 12:52:09 +0000", "message": "gh-2457 double caching issue (#2595)"}, {"oid": "2f9a5da7d9cee6ad8788df2443e28f174f15bff3", "committedDate": "2022-11-03 09:44:10 +0000", "message": "Gh 2632 federated store remove graph and delete accumulo table (#2799)"}, {"oid": "9544b1619c7efd6c48a0294abfa7b025eb5d1928", "committedDate": "2022-11-04 15:02:25 +0000", "message": "Gh 2761 federatedstore federated operation merge mapping (#2797)"}, {"oid": "4c8b8701f981dcbf56f63758ee74ccd11958ab0e", "committedDate": "2022-11-14 16:10:45 +0000", "message": "Gh 2816 federated store remove todos (#2817)"}, {"oid": "f88215c6d98b48a805309b83c2f08c4f8188a47b", "committedDate": "2022-12-15 09:36:16 +0000", "message": "Gh-2764: federated store review and test is disabled by default (#2834)"}, {"oid": "dc9eb4831e62a09b59e761537a3d63479c723ada", "committedDate": "2023-01-23 14:30:00 +0000", "message": "Gh-2841: Update Spotbugs (#2842)"}, {"oid": "9827acccd1d5e1b41dea29063ac31c7e5e08a619", "committedDate": "2023-02-08 11:06:31 +0000", "message": "Gh-2722: Improve code analysis (#2871)"}, {"oid": "9002d7e7435feaf614c337b0d939d7f32db9e245", "committedDate": "2023-02-21 14:09:05 +0000", "message": "gh-2881: Problems with getOriginalSchema in Federated and Proxy Stores (#2884)"}, {"oid": "4591638d021d5221d64dcaa260f8dbdc23fa7449", "committedDate": "2023-03-03 12:17:48 +0000", "message": "Gh 2903 all caches require suffix to avoid collisions within a federatedstore environment (#2907)"}, {"oid": "91ec916dc0585ef088b87f91d6e42730bdcbbe44", "committedDate": "2023-03-06 13:31:51 +0000", "message": "Gh 2906 federatedstore removegraph must clear all associated caches (#2912)"}]}, {"oid": "0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "url": "https://github.com/gchq/Gaffer/commit/0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "message": "PR changes", "committedDate": "2020-01-24T15:46:10Z", "type": "commit"}, {"oid": "0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "url": "https://github.com/gchq/Gaffer/commit/0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "message": "PR changes", "committedDate": "2020-01-24T15:46:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NDk4OA==", "url": "https://github.com/gchq/Gaffer/pull/2238#discussion_r371154988", "body": "Do you need the other fields here?", "bodyText": "Do you need the other fields here?", "bodyHTML": "<p dir=\"auto\">Do you need the other fields here?</p>", "author": "d47853", "createdAt": "2020-01-27T10:14:12Z", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.federatedstore.operation;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.google.common.collect.Sets;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.commonutil.Required;\n+import uk.gov.gchq.gaffer.federatedstore.FederatedGraphStorage;\n+import uk.gov.gchq.gaffer.operation.io.Output;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n+\n+\n+@JsonPropertyOrder(value = {\"class\", \"graphId\"}, alphabetic = true)", "originalCommit": "0f979bb2fa81f45a4a7b2b237ca28fc03b164f92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTIyNjQ3Nw==", "url": "https://github.com/gchq/Gaffer/pull/2238#discussion_r371226477", "bodyText": "Not necessary as all will be displayed alphabetically, but I've added some more in.", "author": "GCHQDev404", "createdAt": "2020-01-27T13:01:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1NDk4OA=="}], "type": "inlineReview", "revised_code": {"commit": "d31f421eaa3d833d66af23e4d0b10c0988e595af", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex 94f6617e27..a2da7b5de3 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -38,7 +38,7 @@ import java.util.Set;\n import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n \n \n-@JsonPropertyOrder(value = {\"class\", \"graphId\"}, alphabetic = true)\n+@JsonPropertyOrder(value = {\"class\", \"graphId\", \"graphAuths\", \"isPublic\"}, alphabetic = true)\n @Since(\"1.10.6\")\n @Summary(\"Changes the protection used for accessing graphs\")\n @JsonInclude(Include.NON_DEFAULT)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex 94f6617e27..a2da7b5de3 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -38,7 +38,7 @@ import java.util.Set;\n import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n \n \n-@JsonPropertyOrder(value = {\"class\", \"graphId\"}, alphabetic = true)\n+@JsonPropertyOrder(value = {\"class\", \"graphId\", \"graphAuths\", \"isPublic\"}, alphabetic = true)\n @Since(\"1.10.6\")\n @Summary(\"Changes the protection used for accessing graphs\")\n @JsonInclude(Include.NON_DEFAULT)\n", "next_change": {"commit": "ba861659235029a4e6576b8ae0d188981e878e5b", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex a2da7b5de3..858c04770e 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -39,7 +39,7 @@ import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPER\n \n \n @JsonPropertyOrder(value = {\"class\", \"graphId\", \"graphAuths\", \"isPublic\"}, alphabetic = true)\n-@Since(\"1.10.6\")\n+@Since(\"1.11.0\")\n @Summary(\"Changes the protection used for accessing graphs\")\n @JsonInclude(Include.NON_DEFAULT)\n public class ChangeGraphAccess implements Output<Boolean> {\n", "next_change": {"commit": "23c323e894c8dba3e25029c3699b6fb5a050a39e", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex 858c04770e..e9e2944d2d 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -37,7 +37,6 @@ import java.util.Set;\n \n import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n \n-\n @JsonPropertyOrder(value = {\"class\", \"graphId\", \"graphAuths\", \"isPublic\"}, alphabetic = true)\n @Since(\"1.11.0\")\n @Summary(\"Changes the protection used for accessing graphs\")\n", "next_change": {"commit": "c1517b163950f6df9d948a93d92327cea188d3ea", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex e9e2944d2d..f451c69cf3 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -35,13 +34,13 @@ import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n \n-import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n+import static java.util.Arrays.asList;\n \n @JsonPropertyOrder(value = {\"class\", \"graphId\", \"graphAuths\", \"isPublic\"}, alphabetic = true)\n @Since(\"1.11.0\")\n @Summary(\"Changes the protection used for accessing graphs\")\n @JsonInclude(Include.NON_DEFAULT)\n-public class ChangeGraphAccess implements Output<Boolean> {\n+public class ChangeGraphAccess implements Output<Boolean>, IFederationOperation {\n     @Required\n     private String graphId;\n     private Set<String> graphAuths = new HashSet<>();\n", "next_change": {"commit": "f88215c6d98b48a805309b83c2f08c4f8188a47b", "changed_code": [{"header": "diff --git a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\nindex f451c69cf3..a0611672fb 100644\n--- a/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n+++ b/store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java\n", "chunk": "@@ -46,8 +45,6 @@ public class ChangeGraphAccess implements Output<Boolean>, IFederationOperation\n     private Set<String> graphAuths = new HashSet<>();\n     private Map<String, String> options = new HashMap<>();\n     private boolean isPublic = false;\n-    private boolean disabledByDefault = FederatedGraphStorage.DEFAULT_DISABLED_BY_DEFAULT;\n-\n     private String ownerUserId;\n     private boolean userRequestingAdminUsage;\n \n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "142c1d4ecca00bcf07f83a13342419958cc4ad01", "message": "Merge commit", "committedDate": null}, {"oid": "ba861659235029a4e6576b8ae0d188981e878e5b", "committedDate": "2020-02-20 10:28:28 +0000", "message": "gh-2246 updated the since annotations (#2247)"}, {"oid": "23c323e894c8dba3e25029c3699b6fb5a050a39e", "committedDate": "2021-08-26 18:48:57 +0100", "message": "Gh 2485 replace hamcrest with assertj (#2491)"}, {"oid": "c1517b163950f6df9d948a93d92327cea188d3ea", "committedDate": "2022-10-24 12:29:31 +0100", "message": "gh-2357 federatedstore federated operation merge into v2 alpha (#2769)"}, {"oid": "f88215c6d98b48a805309b83c2f08c4f8188a47b", "committedDate": "2022-12-15 09:36:16 +0000", "message": "Gh-2764: federated store review and test is disabled by default (#2834)"}]}, {"oid": "d31f421eaa3d833d66af23e4d0b10c0988e595af", "url": "https://github.com/gchq/Gaffer/commit/d31f421eaa3d833d66af23e4d0b10c0988e595af", "message": "Update ChangeGraphAccess.java", "committedDate": "2020-01-27T12:59:06Z", "type": "commit"}]}