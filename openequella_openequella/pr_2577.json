{"pr_number": 2577, "pr_title": "Parse Youtube Date Modified dates properly", "pr_author": "SammyIsConfused", "pr_createdAt": "2020-12-02T05:46:38Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/2577", "timeline": [{"oid": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "url": "https://github.com/openequella/openEQUELLA/commit/80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "message": "Parse Youtube Date Modified dates properly", "committedDate": "2020-12-02T05:40:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIwMTUyMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r534201523", "body": "Would this a be a place where Joda time, could be dropped in favor of `java.Time`?\r\nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-\r\nhttps://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--\r\nhttps://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--", "bodyText": "Would this a be a place where Joda time, could be dropped in favor of java.Time?\nhttps://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-\nhttps://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--\nhttps://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--", "bodyHTML": "<p dir=\"auto\">Would this a be a place where Joda time, could be dropped in favor of <code>java.Time</code>?<br>\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-\" rel=\"nofollow\">https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-</a><br>\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--\" rel=\"nofollow\">https://docs.oracle.com/javase/8/docs/api/java/time/chrono/ChronoZonedDateTime.html#toInstant--</a><br>\n<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--\" rel=\"nofollow\">https://docs.oracle.com/javase/8/docs/api/java/time/Instant.html#toEpochMilli--</a></p>", "author": "ChristianMurphy", "createdAt": "2020-12-02T14:19:39Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,7 +46,10 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n+    final Long date =\n+        ISODateTimeFormat.dateTimeNoMillis()\n+            .parseDateTime((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n+            .getMillis();", "originalCommit": "80b24f26d2ee690568f5ee7afbce9f6b6eb322ef", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5dd49cae5073083d559de899ad7dd622eb7e107d", "url": "https://github.com/openequella/openEQUELLA/commit/5dd49cae5073083d559de899ad7dd622eb7e107d", "message": "Write util function for parsing date", "committedDate": "2020-12-07T04:36:15Z", "type": "commit"}, {"oid": "398d0ccce04fc0494f12359a1de50ef36d9c625d", "url": "https://github.com/openequella/openEQUELLA/commit/398d0ccce04fc0494f12359a1de50ef36d9c625d", "message": "Rework Date parsing to use helper function", "committedDate": "2020-12-07T04:36:44Z", "type": "commit"}, {"oid": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "url": "https://github.com/openequella/openEQUELLA/commit/68b89709bafe17fdeef8cbac7fe9947256a9fde7", "message": "Fix up whitespaces on comments", "committedDate": "2020-12-07T05:07:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mzg0MA==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537253840", "body": "In this case, the intermediate `date` variable is rather redundant. I'd keep it nice and tidy and simply have:\r\n\r\n```suggestion\r\n    YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\r\n      .ifPresent(ybean::setUploadedDate);\r\n```", "bodyText": "In this case, the intermediate date variable is rather redundant. I'd keep it nice and tidy and simply have:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final Optional<Date> date =\n          \n          \n            \n                    YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n          \n          \n            \n                date.ifPresent(ybean::setUploadedDate);\n          \n          \n            \n                YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE))\n          \n          \n            \n                  .ifPresent(ybean::setUploadedDate);", "bodyHTML": "<p dir=\"auto\">In this case, the intermediate <code>date</code> variable is rather redundant. I'd keep it nice and tidy and simply have:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Date</span>&gt;</span> date <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-k\">.</span>parseDateModifiedToDate((<span class=\"pl-smi\">String</span>) cattach<span class=\"pl-k\">.</span>getData(<span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PROPERTY_DATE</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    date<span class=\"pl-k\">.</span>ifPresent(ybean<span class=\"pl-k\">::</span>setUploadedDate);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-k\">.</span>parseDateModifiedToDate((<span class=\"pl-smi\">String</span>) cattach<span class=\"pl-k\">.</span>getData(<span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PROPERTY_DATE</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      .ifPresent(ybean<span class=\"pl-k\">::</span>setUploadedDate);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "edalex-ian", "createdAt": "2020-12-07T06:09:30Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeAttachmentSerializer.java", "diffHunk": "@@ -45,10 +46,9 @@ public EquellaAttachmentBean serialize(Attachment attachment) {\n     ybean.setThumbUrl((String) cattach.getData(YoutubeUtils.PROPERTY_THUMB_URL));\n     ybean.setViewUrl((String) cattach.getData(YoutubeUtils.PROPERTY_PLAY_URL));\n     ybean.setCustomParameters((String) cattach.getData(YoutubeUtils.PROPERTY_PARAMETERS));\n-    final Long date = (Long) cattach.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      ybean.setUploadedDate(new Date(date));\n-    }\n+    final Optional<Date> date =\n+        YoutubeUtils.parseDateModifiedToDate((String) cattach.getData(YoutubeUtils.PROPERTY_DATE));\n+    date.ifPresent(ybean::setUploadedDate);", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NDQzOA==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537254438", "body": "Similar to above.\r\n\r\n```suggestion\r\n              YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt())\r\n                .ifPresent(\r\n                  date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\r\n```\r\n\r\n(Unless I'm missing them being used somewhere else.)", "bodyText": "Similar to above.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Optional<Date> parsedDate =\n          \n          \n            \n                              YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n          \n          \n            \n                          parsedDate.ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n          \n            \n                          YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt())\n          \n          \n            \n                            .ifPresent(\n          \n          \n            \n                              date -> result.setDate(dateRendererFactory.createDateRenderer(date)));\n          \n      \n    \n    \n  \n\n(Unless I'm missing them being used somewhere else.)", "bodyHTML": "<p dir=\"auto\">Similar to above.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Date</span>&gt;</span> parsedDate <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  <span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-k\">.</span>parseDateModifiedToDate(vidInfo<span class=\"pl-k\">.</span>getPublishedAt());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              parsedDate<span class=\"pl-k\">.</span>ifPresent(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  date <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> result<span class=\"pl-k\">.</span>setDate(dateRendererFactory<span class=\"pl-k\">.</span>createDateRenderer(date)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-smi\">YoutubeUtils</span><span class=\"pl-k\">.</span>parseDateModifiedToDate(vidInfo<span class=\"pl-k\">.</span>getPublishedAt())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .ifPresent(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  date <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> result<span class=\"pl-k\">.</span>setDate(dateRendererFactory<span class=\"pl-k\">.</span>createDateRenderer(date)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">(Unless I'm missing them being used somewhere else.)</p>", "author": "edalex-ian", "createdAt": "2020-12-07T06:11:25Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeHandler.java", "diffHunk": "@@ -286,9 +287,10 @@ public void registered(String id, SectionTree tree) {\n \n               YoutubeResultOption result = new YoutubeResultOption(videoId);\n               result.setAuthor(new KeyLabel(ADD_AUTHOR_LABEL, vidInfo.getChannelTitle()));\n-              result.setDate(\n-                  dateRendererFactory.createDateRenderer(new Date(vidInfo.getPublishedAt())));\n-\n+              Optional<Date> parsedDate =\n+                  YoutubeUtils.parseDateModifiedToDate(vidInfo.getPublishedAt());\n+              parsedDate.ifPresent(\n+                  date -> result.setDate(dateRendererFactory.createDateRenderer(date)));", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1NTYyNw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537255627", "body": "As above. `date` redundant.", "bodyText": "As above. date redundant.", "bodyHTML": "<p dir=\"auto\">As above. <code>date</code> redundant.</p>", "author": "edalex-ian", "createdAt": "2020-12-07T06:14:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeViewableResource.java", "diffHunk": "@@ -188,11 +189,13 @@ public boolean isCustomThumb() {\n     }\n \n     // Uploaded\n-    Long date = (Long) youTubeAttachment.getData(YoutubeUtils.PROPERTY_DATE);\n-    if (date != null) {\n-      commonDetails.add(\n-          makeDetail(UPLOADED, dateRendererFactory.createDateRenderer(new Date(date))));\n-    }\n+    Optional<Date> date =", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Njg1Ng==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537256856", "body": "Rewrapping into a generic exception can limit possibilities for callers. I'd say just drop the `try/catch` adn allow the DateTimeParseException to percolate. Or, if you feel it's handy to add the extra message, consider doing so but maybe go with a more meaningful exception - say, `IllegalArgumentException` or reuse `DateTimeParseException`.", "bodyText": "Rewrapping into a generic exception can limit possibilities for callers. I'd say just drop the try/catch adn allow the DateTimeParseException to percolate. Or, if you feel it's handy to add the extra message, consider doing so but maybe go with a more meaningful exception - say, IllegalArgumentException or reuse DateTimeParseException.", "bodyHTML": "<p dir=\"auto\">Rewrapping into a generic exception can limit possibilities for callers. I'd say just drop the <code>try/catch</code> adn allow the DateTimeParseException to percolate. Or, if you feel it's handy to add the extra message, consider doing so but maybe go with a more meaningful exception - say, <code>IllegalArgumentException</code> or reuse <code>DateTimeParseException</code>.</p>", "author": "edalex-ian", "createdAt": "2020-12-07T06:18:20Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,45 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new RuntimeException(\"Unable to parse youtube date modified: \" + date, e);", "originalCommit": "68b89709bafe17fdeef8cbac7fe9947256a9fde7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNjI3MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537926271", "bodyText": "I think it's worth keeping the message. So I'll just throw a new DateTimeParseException with the message and the contents of the initial thrown one.", "author": "SammyIsConfused", "createdAt": "2020-12-07T23:57:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Njg1Ng=="}], "type": "inlineReview"}, {"oid": "af6807076afa4f5f51ba2c61107fd435022d0dd8", "url": "https://github.com/openequella/openEQUELLA/commit/af6807076afa4f5f51ba2c61107fd435022d0dd8", "message": "Update the parser function to support existing v2 Youtube attachments", "committedDate": "2020-12-07T23:55:52Z", "type": "commit"}, {"oid": "a367caa555aed585ac67c25189503c382e30f8cd", "url": "https://github.com/openequella/openEQUELLA/commit/a367caa555aed585ac67c25189503c382e30f8cd", "message": "Remove stray <p> tag", "committedDate": "2020-12-07T23:58:44Z", "type": "commit"}, {"oid": "cf3371a3195c24babe8554dd40f3bce914acf24a", "url": "https://github.com/openequella/openEQUELLA/commit/cf3371a3195c24babe8554dd40f3bce914acf24a", "message": "Revert \"Remove stray <p> tag\"\n\nThis reverts commit a367caa555aed585ac67c25189503c382e30f8cd.", "committedDate": "2020-12-08T01:39:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3ODU1MQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537978551", "body": "I like the rework of this method - and supporting calls. But, why not do an `else if(date instanceof String)` for this block, and then have a final `else` block which throws an `IllegalArgumentException`?\r\n\r\nBest to only assume if you have to.", "bodyText": "I like the rework of this method - and supporting calls. But, why not do an else if(date instanceof String) for this block, and then have a final else block which throws an IllegalArgumentException?\nBest to only assume if you have to.", "bodyHTML": "<p dir=\"auto\">I like the rework of this method - and supporting calls. But, why not do an <code>else if(date instanceof String)</code> for this block, and then have a final <code>else</code> block which throws an <code>IllegalArgumentException</code>?</p>\n<p dir=\"auto\">Best to only assume if you have to.</p>", "author": "edalex-ian", "createdAt": "2020-12-08T02:10:54Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -86,14 +87,24 @@ public static String formatDuration(String duration) {\n    * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n    * java.util.Date.\n    *\n-   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n    * @return The date represented as a java.util.Date.\n    */\n-  public static Optional<Date> parseDateModifiedToDate(String date) {\n-    Optional<Long> parsedLong = parseDateModifiedToMillis(date);\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n     Optional<Date> parsedDate = Optional.empty();\n-    if (parsedLong.isPresent()) {\n-      parsedDate = Optional.of(new Date(parsedLong.get()));\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else {", "originalCommit": "cf3371a3195c24babe8554dd40f3bce914acf24a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4MzIzMw==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r537983233", "bodyText": "Fixed in 3be02e2.", "author": "SammyIsConfused", "createdAt": "2020-12-08T02:24:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk3ODU1MQ=="}], "type": "inlineReview"}, {"oid": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "url": "https://github.com/openequella/openEQUELLA/commit/3be02e275a34d14f29021ac1d5093fd8ba85436a", "message": "throw IllegalArgumentException if can't cast to long or string", "committedDate": "2020-12-08T02:23:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNTkxNQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r538025915", "body": "Is this not just something like:\r\n\r\n```suggestion\r\n      parsedDate = parseDateModifiedToMillis((String) date)\r\n        .map(millis -> new Date(millis));\r\n```\r\n\r\nI'm just freestyling there, but hopefully you get the idea.", "bodyText": "Is this not just something like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n          \n          \n            \n                  if (parsedLong.isPresent()) {\n          \n          \n            \n                    parsedDate = Optional.of(new Date(parsedLong.get()));\n          \n          \n            \n                  }\n          \n          \n            \n                  parsedDate = parseDateModifiedToMillis((String) date)\n          \n          \n            \n                    .map(millis -> new Date(millis));\n          \n      \n    \n    \n  \n\nI'm just freestyling there, but hopefully you get the idea.", "bodyHTML": "<p dir=\"auto\">Is this not just something like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Long</span>&gt;</span> parsedLong <span class=\"pl-k\">=</span> parseDateModifiedToMillis((<span class=\"pl-smi\">String</span>) date);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (parsedLong<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        parsedDate <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>of(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Date</span>(parsedLong<span class=\"pl-k\">.</span>get()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      parsedDate <span class=\"pl-k\">=</span> parseDateModifiedToMillis((<span class=\"pl-smi\">String</span>) date)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .map(millis <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Date</span>(millis));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I'm just freestyling there, but hopefully you get the idea.</p>", "author": "edalex-ian", "createdAt": "2020-12-08T04:28:41Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/controls/youtube/YoutubeUtils.java", "diffHunk": "@@ -55,6 +59,60 @@ public static String formatDuration(String duration) {\n     return String.format(format, seconds, minutes, hours);\n   }\n \n+  /**\n+   * Parses a date string returned from the Youtube Data API V3's \"modified\" entry for a given\n+   * Youtube search result. Returns a date epoch long.\n+   *\n+   * @param date The string to parse (Expects it to be in ISO_DATE_TIME format)\n+   * @return a long containing the date represented as the number of milliseconds since midnight\n+   *     January 1, 1970.\n+   * @throws RuntimeException when the date cannot be parsed.\n+   */\n+  public static Optional<Long> parseDateModifiedToMillis(String date) {\n+    Optional<Long> parsedDate;\n+    try {\n+      parsedDate =\n+          Optional.of(\n+              ZonedDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME)\n+                  .toInstant()\n+                  .toEpochMilli());\n+    } catch (DateTimeParseException e) {\n+      throw new DateTimeParseException(\n+          \"Unable to parse youtube date modified\", date, e.getErrorIndex());\n+    }\n+    return parsedDate;\n+  }\n+\n+  /**\n+   * Wrapper for parseDateModifiedToMillis which if present will return the date as a\n+   * java.util.Date.\n+   *\n+   * <p>Youtube Data API v3 returns ISO_DATE_TIME strings, but existing attachments returned from v2\n+   * will be stored as epoch millis, so this function supports both.\n+   *\n+   * @param date The date object to parse (Expects it to be a string in ISO_DATE_TIME format, or an\n+   *     epoch long)\n+   * @return The date represented as a java.util.Date.\n+   * @throws IllegalArgumentException if passed in Object is not an instance of long or string\n+   */\n+  public static Optional<Date> parseDateModifiedToDate(Object date) {\n+    Optional<Date> parsedDate = Optional.empty();\n+    if (date instanceof Long) {\n+      // if its a long, assume its an epoch long\n+      parsedDate = Optional.of(new Date((Long) date));\n+    } else if (date instanceof String) {\n+      // assume its an ISO_DATE_TIME string\n+      Optional<Long> parsedLong = parseDateModifiedToMillis((String) date);\n+      if (parsedLong.isPresent()) {\n+        parsedDate = Optional.of(new Date(parsedLong.get()));\n+      }", "originalCommit": "3be02e275a34d14f29021ac1d5093fd8ba85436a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNzkyMQ==", "url": "https://github.com/openequella/openEQUELLA/pull/2577#discussion_r538037921", "bodyText": "You were close! It has to be flatMap.", "author": "SammyIsConfused", "createdAt": "2020-12-08T05:05:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAyNTkxNQ=="}], "type": "inlineReview"}, {"oid": "b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "url": "https://github.com/openequella/openEQUELLA/commit/b7f97a993b4543ba80b0d09d0c2e1ce51da5e714", "message": "Simplify function by using flatMap", "committedDate": "2020-12-08T05:06:59Z", "type": "commit"}]}