{"pr_number": 1708, "pr_title": "Contribution wizard lost metadata fix", "pr_author": "SammyIsConfused", "pr_createdAt": "2020-05-07T00:28:45Z", "pr_url": "https://github.com/openequella/openEQUELLA/pull/1708", "timeline": [{"oid": "b3d3c6d5e15eb3996213f313c5dcfd7309f78bac", "url": "https://github.com/openequella/openEQUELLA/commit/b3d3c6d5e15eb3996213f313c5dcfd7309f78bac", "message": "Surround initilise page function with viewable check\n\nTo ensure metadata attributed to hidden pages is not wiped by the\nmandatory field check.", "committedDate": "2020-05-07T00:23:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE4Njg2MA==", "url": "https://github.com/openequella/openEQUELLA/pull/1708#discussion_r421186860", "body": "So as to stay within the functional paradigm a bit, how's about:\r\n\r\n```suggestion\r\n        .stream().filter(WebWizardPage::isViewable)\r\n        .forEach(p -> wizardService.ensureInitialisedPage(info, p, ps.getReloadFunction(), true));\r\n```\r\n\r\nI think this also has a slight readability benefit.", "bodyText": "So as to stay within the functional paradigm a bit, how's about:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    .forEach(\n          \n          \n            \n                        p -> {\n          \n          \n            \n                          if (p.isViewable()) {\n          \n          \n            \n                            wizardService.ensureInitialisedPage(info, p, ps.getReloadFunction(), true);\n          \n          \n            \n                          }\n          \n          \n            \n                        });\n          \n          \n            \n                    .stream().filter(WebWizardPage::isViewable)\n          \n          \n            \n                    .forEach(p -> wizardService.ensureInitialisedPage(info, p, ps.getReloadFunction(), true));\n          \n      \n    \n    \n  \n\nI think this also has a slight readability benefit.", "bodyHTML": "<p dir=\"auto\">So as to stay within the functional paradigm a bit, how's about:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .forEach(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (p<span class=\"pl-k\">.</span>isViewable()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                wizardService<span class=\"pl-k\">.</span>ensureInitialisedPage(info, p, ps<span class=\"pl-k\">.</span>getReloadFunction(), <span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .stream()<span class=\"pl-k\">.</span>filter(<span class=\"pl-smi\">WebWizardPage</span><span class=\"pl-k\">::</span>isViewable)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        .forEach(p <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> wizardService<span class=\"pl-k\">.</span>ensureInitialisedPage(info, p, ps<span class=\"pl-k\">.</span>getReloadFunction(), <span class=\"pl-c1\">true</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I think this also has a slight readability benefit.</p>", "author": "edalex-ian", "createdAt": "2020-05-07T01:30:31Z", "path": "Source/Plugins/Core/com.equella.core/src/com/tle/web/wizard/section/RootWizardSection.java", "diffHunk": "@@ -305,6 +305,11 @@ void validateMandatoryFields(SectionInfo info, WizardState state) {\n     PagesSection ps = info.lookupSection(PagesSection.class);\n     wizardService\n         .getWizardPages(state)\n-        .forEach(p -> wizardService.ensureInitialisedPage(info, p, ps.getReloadFunction(), true));\n+        .forEach(\n+            p -> {\n+              if (p.isViewable()) {\n+                wizardService.ensureInitialisedPage(info, p, ps.getReloadFunction(), true);\n+              }\n+            });", "originalCommit": "b3d3c6d5e15eb3996213f313c5dcfd7309f78bac", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0785e0c7f1d13c0df7ac983eb74d9f55275aa2c6", "url": "https://github.com/openequella/openEQUELLA/commit/0785e0c7f1d13c0df7ac983eb74d9f55275aa2c6", "message": "Make viewable check a filter rather than an if statement\n\nCo-authored-by: edalex-ian <43919233+edalex-ian@users.noreply.github.com>", "committedDate": "2020-05-07T01:35:28Z", "type": "commit"}, {"oid": "f786b71e48fb4d7d28ee5efa6ab65c9cd1c225d8", "url": "https://github.com/openequella/openEQUELLA/commit/f786b71e48fb4d7d28ee5efa6ab65c9cd1c225d8", "message": "Add import statement for WebWizardPage", "committedDate": "2020-05-07T01:36:58Z", "type": "commit"}]}