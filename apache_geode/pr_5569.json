{"pr_number": 5569, "pr_title": "GEODE-8555: SimpleDiskRegionJunitTest fails on Windows", "pr_author": "sabbey37", "pr_createdAt": "2020-09-29T21:18:20Z", "pr_url": "https://github.com/apache/geode/pull/5569", "timeline": [{"oid": "ae45e3f6dc7927b58e2e25cf5b1efb8834bd95ba", "url": "https://github.com/apache/geode/commit/ae45e3f6dc7927b58e2e25cf5b1efb8834bd95ba", "message": "GEODE-8555: SimpleDiskRegionJunitTest fails on Windows", "committedDate": "2020-09-29T21:15:35Z", "type": "commit"}, {"oid": "acdf51fad37fd5b22a099bb210109b0ad9688e9a", "url": "https://github.com/apache/geode/commit/acdf51fad37fd5b22a099bb210109b0ad9688e9a", "message": "Fixes weird formatting", "committedDate": "2020-09-29T23:29:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0NjYzOQ==", "url": "https://github.com/apache/geode/pull/5569#discussion_r497146639", "body": "Instead of logging the error, can we add and use ErrorCollector? I would just add this to DiskRegionTestingBase up where the other Rules are defined.\r\n```\r\n  @Rule\r\n  public ErrorCollector errorCollector = new ErrorCollector();\r\n```\r\nAnd then:\r\n```\r\n      try {\r\n        FileUtils.forceDelete(each);\r\n      } catch (IOException e) {\r\n        errorCollector.addError(e);\r\n      }\r\n```\r\nAfter each test finishes, (if any were thrown) ErrorCollector will fail the test and print out every stack trace.\r\n\r\nSince SimpleDiskRegionJUnitTest is an integration test, logging the stack traces won't cause the test to fail like a distributed test would.", "bodyText": "Instead of logging the error, can we add and use ErrorCollector? I would just add this to DiskRegionTestingBase up where the other Rules are defined.\n  @Rule\n  public ErrorCollector errorCollector = new ErrorCollector();\n\nAnd then:\n      try {\n        FileUtils.forceDelete(each);\n      } catch (IOException e) {\n        errorCollector.addError(e);\n      }\n\nAfter each test finishes, (if any were thrown) ErrorCollector will fail the test and print out every stack trace.\nSince SimpleDiskRegionJUnitTest is an integration test, logging the stack traces won't cause the test to fail like a distributed test would.", "bodyHTML": "<p dir=\"auto\">Instead of logging the error, can we add and use ErrorCollector? I would just add this to DiskRegionTestingBase up where the other Rules are defined.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @Rule\n  public ErrorCollector errorCollector = new ErrorCollector();\n\"><pre><code>  @Rule\n  public ErrorCollector errorCollector = new ErrorCollector();\n</code></pre></div>\n<p dir=\"auto\">And then:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      try {\n        FileUtils.forceDelete(each);\n      } catch (IOException e) {\n        errorCollector.addError(e);\n      }\n\"><pre><code>      try {\n        FileUtils.forceDelete(each);\n      } catch (IOException e) {\n        errorCollector.addError(e);\n      }\n</code></pre></div>\n<p dir=\"auto\">After each test finishes, (if any were thrown) ErrorCollector will fail the test and print out every stack trace.</p>\n<p dir=\"auto\">Since SimpleDiskRegionJUnitTest is an integration test, logging the stack traces won't cause the test to fail like a distributed test would.</p>", "author": "kirklund", "createdAt": "2020-09-29T23:41:05Z", "path": "geode-junit/src/main/java/org/apache/geode/internal/cache/DiskRegionTestingBase.java", "diffHunk": "@@ -200,6 +202,19 @@ protected void deleteFiles() {\n     tempDir.delete();\n   }\n \n+  protected void forceDeleteFiles() {\n+    closeDiskStores();\n+    File file = tempDir.getRoot();\n+    File[] files = file.listFiles();\n+    for (File each : files) {\n+      try {\n+        FileUtils.forceDelete(each);\n+      } catch (IOException e) {\n+        LogService.getLogger().error(\"Caught\", e);", "originalCommit": "acdf51fad37fd5b22a099bb210109b0ad9688e9a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyNTU3Nw==", "url": "https://github.com/apache/geode/pull/5569#discussion_r497525577", "bodyText": "I added the ErrorCollector, but not all of the files are deleted (like statsstats.gfs file).  The statsstats.gfs file doesn't have to be deleted, though.  We wrapped the FileUtils.forceDelete(each); method line with a if (!each.getName().contains(\".gfs\")) since that file doesn't have to be deleted.  Let me know what you think!", "author": "sabbey37", "createdAt": "2020-09-30T13:50:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE0NjYzOQ=="}], "type": "inlineReview"}, {"oid": "c98475674c280659ff717fe1e3800705326ac9ee", "url": "https://github.com/apache/geode/commit/c98475674c280659ff717fe1e3800705326ac9ee", "message": "PR review changes", "committedDate": "2020-09-30T13:44:23Z", "type": "commit"}]}