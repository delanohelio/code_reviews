{"pr_number": 1672, "pr_title": "Fix reset partition error when restarting a stopped replica", "pr_author": "jsjtzyy", "pr_createdAt": "2020-10-26T02:38:57Z", "pr_url": "https://github.com/linkedin/ambry/pull/1672", "timeline": [{"oid": "c7020968e45ae2cdd954112ed84fcc9b4ba07073", "url": "https://github.com/linkedin/ambry/commit/c7020968e45ae2cdd954112ed84fcc9b4ba07073", "message": "Fix reset partition error when restarting a stopped replica\n\nPrevious code assumes stopped replica is in error state (this is true if replica is stopped and machine is rebooted).\nHowever, if there is no reboot between stopping and starting same replica, its state should stay unchanged (i.e.\nSTANDBY). Helix current doesn't support resetting partition from STANDBY (only ERROR state is allowed). Hence, this\nPR will check if the stopped replica is in ERROR state and decide whether to reset the partition.\nAlso, since leader based replica is introduced, this PR adds logic to disable replica when stopping a replica (to\ntrigger state transistion and potential leader election).", "committedDate": "2020-10-26T05:34:02Z", "type": "commit"}, {"oid": "c7020968e45ae2cdd954112ed84fcc9b4ba07073", "url": "https://github.com/linkedin/ambry/commit/c7020968e45ae2cdd954112ed84fcc9b4ba07073", "message": "Fix reset partition error when restarting a stopped replica\n\nPrevious code assumes stopped replica is in error state (this is true if replica is stopped and machine is rebooted).\nHowever, if there is no reboot between stopping and starting same replica, its state should stay unchanged (i.e.\nSTANDBY). Helix current doesn't support resetting partition from STANDBY (only ERROR state is allowed). Hence, this\nPR will check if the stopped replica is in ERROR state and decide whether to reset the partition.\nAlso, since leader based replica is introduced, this PR adds logic to disable replica when stopping a replica (to\ntrigger state transistion and potential leader election).", "committedDate": "2020-10-26T05:34:02Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzQ4NQ==", "url": "https://github.com/linkedin/ambry/pull/1672#discussion_r517007485", "body": "nit: can change this code slightly to not require the intermediate set:\r\n```java\r\nboolean isLocalStoreInErrorState =\r\n    partitionId.getReplicaIdsByState(ReplicaState.ERROR, currentNode.getDatacenterName())\r\n        .stream()\r\n        .anyMatch(r -> r.getDataNodeId().getHostname().equals(currentNode.getHostname()));\r\n```\r\n", "bodyText": "nit: can change this code slightly to not require the intermediate set:\nboolean isLocalStoreInErrorState =\n    partitionId.getReplicaIdsByState(ReplicaState.ERROR, currentNode.getDatacenterName())\n        .stream()\n        .anyMatch(r -> r.getDataNodeId().getHostname().equals(currentNode.getHostname()));", "bodyHTML": "<p dir=\"auto\">nit: can change this code slightly to not require the intermediate set:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"boolean isLocalStoreInErrorState =\n    partitionId.getReplicaIdsByState(ReplicaState.ERROR, currentNode.getDatacenterName())\n        .stream()\n        .anyMatch(r -&gt; r.getDataNodeId().getHostname().equals(currentNode.getHostname()));\"><pre><span class=\"pl-k\">boolean</span> isLocalStoreInErrorState <span class=\"pl-k\">=</span>\n    partitionId<span class=\"pl-k\">.</span>getReplicaIdsByState(<span class=\"pl-smi\">ReplicaState</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ERROR</span>, currentNode<span class=\"pl-k\">.</span>getDatacenterName())\n        .stream()\n        .anyMatch(r <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> r<span class=\"pl-k\">.</span>getDataNodeId()<span class=\"pl-k\">.</span>getHostname()<span class=\"pl-k\">.</span>equals(currentNode<span class=\"pl-k\">.</span>getHostname()));</pre></div>", "author": "cgtz", "createdAt": "2020-11-03T23:06:04Z", "path": "ambry-server/src/main/java/com/github/ambry/server/AmbryServerRequests.java", "diffHunk": "@@ -434,10 +434,14 @@ private ServerErrorCode handleStartStoreRequest(PartitionId partitionId) {\n       logger.error(\"Could not enable replication on {}\", partitionIds);\n       return ServerErrorCode.Unknown_Error;\n     }\n-    // startBlobStore should guarantee that store is started, so return value shouldn't be null\n-    Store store = storeManager.getStore(partitionId);\n-    // 4. reset partition state if it's offline (will trigger state transition)\n-    if (store.getCurrentState() == ReplicaState.OFFLINE && clusterParticipant != null) {\n+    // 4. reset partition state if it's in error state (will trigger state transition)\n+    boolean isLocalStoreInErrorState =\n+        partitionId.getReplicaIdsByState(ReplicaState.ERROR, currentNode.getDatacenterName())\n+            .stream()\n+            .map(r -> r.getDataNodeId().getHostname())", "originalCommit": "c7020968e45ae2cdd954112ed84fcc9b4ba07073", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAxNTkzNQ==", "url": "https://github.com/linkedin/ambry/pull/1672#discussion_r517015935", "bodyText": "Yeah, this seems better. Let me make the change.", "author": "jsjtzyy", "createdAt": "2020-11-03T23:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzQ4NQ=="}], "type": "inlineReview"}, {"oid": "2ebb4d4260150d9d5983d33b7bad54847ae62726", "url": "https://github.com/linkedin/ambry/commit/2ebb4d4260150d9d5983d33b7bad54847ae62726", "message": "address comment", "committedDate": "2020-11-03T23:36:58Z", "type": "commit"}]}