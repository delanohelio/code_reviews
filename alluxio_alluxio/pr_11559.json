{"pr_number": 11559, "pr_title": "Add logging for udb partitions", "pr_author": "HelloHorizon", "pr_createdAt": "2020-06-13T07:49:52Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11559", "timeline": [{"oid": "eabf43f380aa620a4e44503c7f1ba2ee38d77d02", "url": "https://github.com/Alluxio/alluxio/commit/eabf43f380aa620a4e44503c7f1ba2ee38d77d02", "message": "Add partition log for glue udb", "committedDate": "2020-06-13T07:43:43Z", "type": "commit"}, {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "url": "https://github.com/Alluxio/alluxio/commit/38b9491b264143ea73ef9b3702a80889f2d5ffdb", "message": "Add log of partition counter", "committedDate": "2020-06-13T17:10:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTIwMw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759203", "body": "Is `udbPartition.getSpec()` fully captured in `udbPartition.toString()`? We use the spec to identify the partition, so that would be important information to log.", "bodyText": "Is udbPartition.getSpec() fully captured in udbPartition.toString()? We use the spec to identify the partition, so that would be important information to log.", "bodyHTML": "<p dir=\"auto\">Is <code>udbPartition.getSpec()</code> fully captured in <code>udbPartition.toString()</code>? We use the spec to identify the partition, so that would be important information to log.</p>", "author": "gpang", "createdAt": "2020-06-13T18:31:27Z", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjUyOA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782528", "bodyText": "Added the Spce in toString().", "author": "HelloHorizon", "createdAt": "2020-06-14T01:25:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTIwMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTI3OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759279", "body": "I would suggest being able to distinguish the 3 cases here. Something like the following. This would allow us to reall know which code path/scenario each partition falls under, and would help with debugging.\r\n\r\nAlso, using `if (LOG.isDebugEnabled())` since `toString` could be expensive.\r\n\r\n```\r\nif (newPartition == null) {\r\n  // partition does not exist yet\r\n  newPartition = new Partition(udbPartition);\r\n  if (LOG.isDebugEnabled()) {\r\n    LOG.debug(\"Existing table {}.{} adding UDB partition: {}\", ...);\r\n  }\r\n} else if (!newPartition.getBaseLayout().equals(udbPartition.getLayout())) {\r\n  // existing partition is updated\r\n  newPartition = newPartition.createNext(udbPartition);\r\n  if (LOG.isDebugEnabled()) {\r\n    LOG.debug(\"Existing table {}.{} updating UDB partition: {}, ...\");\r\n  }\r\n} else {\r\n  if (LOG.isDebugEnabled()) {\r\n    LOG.debug(\"Existing table {}.{} keeping partition spec: {}\", ...);\r\n  }\r\n}\r\n```", "bodyText": "I would suggest being able to distinguish the 3 cases here. Something like the following. This would allow us to reall know which code path/scenario each partition falls under, and would help with debugging.\nAlso, using if (LOG.isDebugEnabled()) since toString could be expensive.\nif (newPartition == null) {\n  // partition does not exist yet\n  newPartition = new Partition(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} adding UDB partition: {}\", ...);\n  }\n} else if (!newPartition.getBaseLayout().equals(udbPartition.getLayout())) {\n  // existing partition is updated\n  newPartition = newPartition.createNext(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} updating UDB partition: {}, ...\");\n  }\n} else {\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} keeping partition spec: {}\", ...);\n  }\n}", "bodyHTML": "<p dir=\"auto\">I would suggest being able to distinguish the 3 cases here. Something like the following. This would allow us to reall know which code path/scenario each partition falls under, and would help with debugging.</p>\n<p dir=\"auto\">Also, using <code>if (LOG.isDebugEnabled())</code> since <code>toString</code> could be expensive.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (newPartition == null) {\n  // partition does not exist yet\n  newPartition = new Partition(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(&quot;Existing table {}.{} adding UDB partition: {}&quot;, ...);\n  }\n} else if (!newPartition.getBaseLayout().equals(udbPartition.getLayout())) {\n  // existing partition is updated\n  newPartition = newPartition.createNext(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(&quot;Existing table {}.{} updating UDB partition: {}, ...&quot;);\n  }\n} else {\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(&quot;Existing table {}.{} keeping partition spec: {}&quot;, ...);\n  }\n}\n\"><pre><code>if (newPartition == null) {\n  // partition does not exist yet\n  newPartition = new Partition(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} adding UDB partition: {}\", ...);\n  }\n} else if (!newPartition.getBaseLayout().equals(udbPartition.getLayout())) {\n  // existing partition is updated\n  newPartition = newPartition.createNext(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} updating UDB partition: {}, ...\");\n  }\n} else {\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} keeping partition spec: {}\", ...);\n  }\n}\n</code></pre></div>", "author": "gpang", "createdAt": "2020-06-13T18:32:28Z", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());\n         if (newPartition == null) {", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU0Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782546", "bodyText": "yeah, it's much more efficient, changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTI3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTM5Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759397", "body": "maybe \"Updating existing table {}.{} with {} total partitions.\" ? This could just be at INFO level, since it won't be too noisy.", "bodyText": "maybe \"Updating existing table {}.{} with {} total partitions.\" ? This could just be at INFO level, since it won't be too noisy.", "bodyHTML": "<p dir=\"auto\">maybe \"Updating existing table {}.{} with {} total partitions.\" ? This could just be at INFO level, since it won't be too noisy.</p>", "author": "gpang", "createdAt": "2020-06-13T18:34:35Z", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2MA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782560", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTM5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTQyMw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759423", "body": "This could be INFO and something like \"Creating new table {}.{} with {} total partitions.\"", "bodyText": "This could be INFO and something like \"Creating new table {}.{} with {} total partitions.\"", "bodyHTML": "<p dir=\"auto\">This could be INFO and something like \"Creating new table {}.{} with {} total partitions.\"</p>", "author": "gpang", "createdAt": "2020-06-13T18:34:59Z", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU1Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782557", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTQyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTU0NA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759544", "body": "Similar to above, we may want to guard this with `LOG.isDebugEnabled()`.\r\n\r\nAlso, the message could be something like: \r\n```\r\nLOG.debug(\"New table {}.{} adding UDB partition: {}\", ...);\r\n```\r\n", "bodyText": "Similar to above, we may want to guard this with LOG.isDebugEnabled().\nAlso, the message could be something like:\nLOG.debug(\"New table {}.{} adding UDB partition: {}\", ...);", "bodyHTML": "<p dir=\"auto\">Similar to above, we may want to guard this with <code>LOG.isDebugEnabled()</code>.</p>\n<p dir=\"auto\">Also, the message could be something like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"LOG.debug(&quot;New table {}.{} adding UDB partition: {}&quot;, ...);\n\"><pre><code>LOG.debug(\"New table {}.{} adding UDB partition: {}\", ...);\n</code></pre></div>", "author": "gpang", "createdAt": "2020-06-13T18:36:22Z", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n+      udbTable.getPartitions().stream().forEach(udbPartition ->\n+          LOG.debug(\"Get partition: {}, from table {} Database {}.\",", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2NA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782564", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTYxNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759615", "body": "related comment to above, but the spec should be in this output?\r\n\r\nAlso, is the spec included in the other partition types?", "bodyText": "related comment to above, but the spec should be in this output?\nAlso, is the spec included in the other partition types?", "bodyHTML": "<p dir=\"auto\">related comment to above, but the spec should be in this output?</p>\n<p dir=\"auto\">Also, is the spec included in the other partition types?</p>", "author": "gpang", "createdAt": "2020-06-13T18:37:14Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,27 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (mLayout.getData().getValuesList() != null) {", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782566", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTYxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTg0Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759847", "body": "It would be helpful for this message to be distinct from other messages, so this could something like \"Glue table {}.{} has {} partitions.\"", "bodyText": "It would be helpful for this message to be distinct from other messages, so this could something like \"Glue table {}.{} has {} partitions.\"", "bodyHTML": "<p dir=\"auto\">It would be helpful for this message to be distinct from other messages, so this could something like \"Glue table {}.{} has {} partitions.\"</p>", "author": "gpang", "createdAt": "2020-06-13T18:40:36Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU3MA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782570", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTg0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTkxNw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759917", "body": "This should be guarded by `LOG.isDebugEnabled()`, since `toString` could be expensive.\r\n\r\nAlso, the message should be distinct and descriptive, so it could be something like \"Glue table {}.{} with partition: {}\"", "bodyText": "This should be guarded by LOG.isDebugEnabled(), since toString could be expensive.\nAlso, the message should be distinct and descriptive, so it could be something like \"Glue table {}.{} with partition: {}\"", "bodyHTML": "<p dir=\"auto\">This should be guarded by <code>LOG.isDebugEnabled()</code>, since <code>toString</code> could be expensive.</p>\n<p dir=\"auto\">Also, the message should be distinct and descriptive, so it could be something like \"Glue table {}.{} with partition: {}\"</p>", "author": "gpang", "createdAt": "2020-06-13T18:41:19Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+            partitions.size(), tableName, mGlueDbName);\n+        partitions.stream().forEach(partition ->", "originalCommit": "38b9491b264143ea73ef9b3702a80889f2d5ffdb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU3Mg==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782572", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-14T01:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTkxNw=="}], "type": "inlineReview"}, {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244", "url": "https://github.com/Alluxio/alluxio/commit/4eaecc612606d48f17b700d89c5f5c492fd81244", "message": "Refactor log information", "committedDate": "2020-06-14T01:23:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMTA2NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440311065", "body": "```suggestion\r\n      sb.append(\"Spec: \").append(getSpec()).append(\",\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  sb.append(\"Specs: \").append(getSpec()).append(\",\");\n          \n          \n            \n                  sb.append(\"Spec: \").append(getSpec()).append(\",\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      sb<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Specs</span>: <span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>append(getSpec())<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      sb<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Spec</span>: <span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>append(getSpec())<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gpang", "createdAt": "2020-06-15T16:48:29Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (getSpec() != null) {\n+      sb.append(\"Specs: \").append(getSpec()).append(\",\");", "originalCommit": "4eaecc612606d48f17b700d89c5f5c492fd81244", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NzMyNw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440377327", "bodyText": "Changed.", "author": "HelloHorizon", "createdAt": "2020-06-15T18:49:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMTA2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMzE2OA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440313168", "body": "Is there a reason we can't use `MoreObjects.toStringHelper()` for toString? Also, I don't think we have to check for null before adding fields, since it will just print null in the output, right?", "bodyText": "Is there a reason we can't use MoreObjects.toStringHelper() for toString? Also, I don't think we have to check for null before adding fields, since it will just print null in the output, right?", "bodyHTML": "<p dir=\"auto\">Is there a reason we can't use <code>MoreObjects.toStringHelper()</code> for toString? Also, I don't think we have to check for null before adding fields, since it will just print null in the output, right?</p>", "author": "gpang", "createdAt": "2020-06-15T16:52:00Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();", "originalCommit": "4eaecc612606d48f17b700d89c5f5c492fd81244", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NzI1NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440377255", "bodyText": "I see, I just remove the check for null and changed to MoreObjects.toStringHelper().", "author": "HelloHorizon", "createdAt": "2020-06-15T18:49:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMzE2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNDEwNA==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440314104", "body": "Is there a way that `HivePartition` can also a string representation? Without it, we will only get useful information for only the Glue UDB, right?", "bodyText": "Is there a way that HivePartition can also a string representation? Without it, we will only get useful information for only the Glue UDB, right?", "bodyHTML": "<p dir=\"auto\">Is there a way that <code>HivePartition</code> can also a string representation? Without it, we will only get useful information for only the Glue UDB, right?</p>", "author": "gpang", "createdAt": "2020-06-15T16:53:37Z", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {", "originalCommit": "4eaecc612606d48f17b700d89c5f5c492fd81244", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwOTM1Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440409357", "bodyText": "Added Hive toString() to get hive udb partition info.", "author": "HelloHorizon", "createdAt": "2020-06-15T19:51:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNDEwNA=="}], "type": "inlineReview"}, {"oid": "e80ff052cc07b227bd57538aaf389917646e2055", "url": "https://github.com/Alluxio/alluxio/commit/e80ff052cc07b227bd57538aaf389917646e2055", "message": "Change to StringBuilder to ToStringHelper", "committedDate": "2020-06-15T18:48:49Z", "type": "commit"}, {"oid": "a781617d2c80acbe5589a885a01f13fb90a500cc", "url": "https://github.com/Alluxio/alluxio/commit/a781617d2c80acbe5589a885a01f13fb90a500cc", "message": "Add Hive partition info with toString", "committedDate": "2020-06-15T19:50:20Z", "type": "commit"}]}