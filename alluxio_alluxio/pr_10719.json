{"pr_number": 10719, "pr_title": "Release clients back into pools during even during context reinit", "pr_author": "ZacBlanco", "pr_createdAt": "2020-01-09T20:03:09Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/10719", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5NzYyMw==", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r364997623", "body": "update comment about the resource", "bodyText": "update comment about the resource", "bodyHTML": "<p dir=\"auto\">update comment about the resource</p>", "author": "gpang", "createdAt": "2020-01-09T22:47:30Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -471,25 +471,33 @@ public void close() {\n    * @param workerNetAddress the network address of the channel\n    * @return the acquired block worker", "originalCommit": "626fdf34ce3d945ab2e6b467588b434db0ac7419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNjAyMQ==", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r365006021", "bodyText": "done", "author": "ZacBlanco", "createdAt": "2020-01-09T23:14:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5NzYyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5OTUzOQ==", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r364999539", "body": "Hrmmm, can we avoid explicitly defining it, and just define a local final var for it? It will get captured like that right?", "bodyText": "Hrmmm, can we avoid explicitly defining it, and just define a local final var for it? It will get captured like that right?", "bodyHTML": "<p dir=\"auto\">Hrmmm, can we avoid explicitly defining it, and just define a local final var for it? It will get captured like that right?</p>", "author": "gpang", "createdAt": "2020-01-09T22:53:09Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -471,25 +471,33 @@ public void close() {\n    * @param workerNetAddress the network address of the channel\n    * @return the acquired block worker\n    */\n-  public BlockWorkerClient acquireBlockWorkerClient(final WorkerNetAddress workerNetAddress)\n+  public CloseableResource<BlockWorkerClient> acquireBlockWorkerClient(\n+      final WorkerNetAddress workerNetAddress)\n       throws IOException {\n     try (ReinitBlockerResource r = blockReinit()) {\n-      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext().getSubject());\n+      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext());\n     }\n   }\n \n-  private BlockWorkerClient acquireBlockWorkerClientInternal(\n-      final WorkerNetAddress workerNetAddress, final Subject subject) throws IOException {\n-    SocketAddress address =\n-        NetworkAddressUtils.getDataPortSocketAddress(workerNetAddress, getClusterConf());\n+  private CloseableResource<BlockWorkerClient> acquireBlockWorkerClientInternal(\n+      final WorkerNetAddress workerNetAddress, final ClientContext context) throws IOException {\n+    SocketAddress address = NetworkAddressUtils\n+        .getDataPortSocketAddress(workerNetAddress, context.getClusterConf());\n     GrpcServerAddress serverAddress = GrpcServerAddress.create(workerNetAddress.getHost(), address);\n-    ClientPoolKey key = new ClientPoolKey(address,\n-        AuthenticationUserUtils.getImpersonationUser(subject, getClusterConf()));\n-    return mBlockWorkerClientPool.computeIfAbsent(key,\n-        k -> new BlockWorkerClientPool(subject, serverAddress,\n-            getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n-            getClusterConf(), mWorkerGroup))\n-        .acquire();\n+    ClientPoolKey key = new ClientPoolKey(address, AuthenticationUserUtils\n+            .getImpersonationUser(context.getSubject(), context.getClusterConf()));\n+    return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,\n+        k -> new BlockWorkerClientPool(context.getSubject(), serverAddress,\n+            context.getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n+            context.getClusterConf(), mWorkerGroup))\n+        .acquire()) {\n+      // Save the reference to the original pool map.\n+      ConcurrentHashMap<ClientPoolKey, BlockWorkerClientPool> mPoolMap = mBlockWorkerClientPool;", "originalCommit": "626fdf34ce3d945ab2e6b467588b434db0ac7419", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAwNjA1Mw==", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r365006053", "bodyText": "done", "author": "ZacBlanco", "createdAt": "2020-01-09T23:14:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5OTUzOQ=="}], "type": "inlineReview"}, {"oid": "c15753e6133bcfbf11f0d290b26eed850c0f899b", "url": "https://github.com/Alluxio/alluxio/commit/c15753e6133bcfbf11f0d290b26eed850c0f899b", "message": "Release clients back into pools even on interrupts", "committedDate": "2020-01-09T23:03:35Z", "type": "commit"}, {"oid": "20550430f9f46362bd791d2113f9683930d9fce1", "url": "https://github.com/Alluxio/alluxio/commit/20550430f9f46362bd791d2113f9683930d9fce1", "message": "blockReinit before calling method", "committedDate": "2020-01-09T23:05:31Z", "type": "commit"}, {"oid": "16a9f0ffccc1d452ecacb1fe8c564dceaafdc4b5", "url": "https://github.com/Alluxio/alluxio/commit/16a9f0ffccc1d452ecacb1fe8c564dceaafdc4b5", "message": "remove unused methods", "committedDate": "2020-01-09T23:06:10Z", "type": "commit"}, {"oid": "d78d1d071427606e7b2ff848109a8069f1fa59b4", "url": "https://github.com/Alluxio/alluxio/commit/d78d1d071427606e7b2ff848109a8069f1fa59b4", "message": "Use ClosableResource<T> with BlockWorkerClient", "committedDate": "2020-01-09T23:06:10Z", "type": "commit"}, {"oid": "f5a9cd0f5432c06c497052f70a9983ad5a17ebda", "url": "https://github.com/Alluxio/alluxio/commit/f5a9cd0f5432c06c497052f70a9983ad5a17ebda", "message": "appease spotbugs", "committedDate": "2020-01-09T23:06:11Z", "type": "commit"}, {"oid": "8f421a2c71fba50c142fad482b0ffc8b7f58031f", "url": "https://github.com/Alluxio/alluxio/commit/8f421a2c71fba50c142fad482b0ffc8b7f58031f", "message": "fix checkstyle", "committedDate": "2020-01-09T23:07:05Z", "type": "commit"}, {"oid": "8f421a2c71fba50c142fad482b0ffc8b7f58031f", "url": "https://github.com/Alluxio/alluxio/commit/8f421a2c71fba50c142fad482b0ffc8b7f58031f", "message": "fix checkstyle", "committedDate": "2020-01-09T23:07:05Z", "type": "forcePushed"}, {"oid": "7d2f4bbc4a99e02d305c40d7973981bbef6677f6", "url": "https://github.com/Alluxio/alluxio/commit/7d2f4bbc4a99e02d305c40d7973981bbef6677f6", "message": "address comments", "committedDate": "2020-01-09T23:14:26Z", "type": "commit"}, {"oid": "e3f1eca320dfaeff5e6e282fe66741d33e89b742", "url": "https://github.com/Alluxio/alluxio/commit/e3f1eca320dfaeff5e6e282fe66741d33e89b742", "message": "fix build", "committedDate": "2020-01-09T23:29:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAxNzcyNA==", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r365017724", "body": "```suggestion\r\n    return new CloseableResource<BlockWorkerClient>(poolMap.computeIfAbsent(key,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,\n          \n          \n            \n                return new CloseableResource<BlockWorkerClient>(poolMap.computeIfAbsent(key,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CloseableResource&lt;<span class=\"pl-smi\">BlockWorkerClient</span>&gt;</span>(<span class=\"x x-first x-last\">mBlockWorkerClientPool</span><span class=\"pl-k\">.</span>computeIfAbsent(key,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CloseableResource&lt;<span class=\"pl-smi\">BlockWorkerClient</span>&gt;</span>(<span class=\"x x-first x-last\">poolMap</span><span class=\"pl-k\">.</span>computeIfAbsent(key,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gpang", "createdAt": "2020-01-09T23:59:35Z", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -476,27 +473,36 @@ public void close() {\n    * create a new one.\n    *\n    * @param workerNetAddress the network address of the channel\n-   * @return the acquired block worker\n+   * @return the acquired block worker resource\n    */\n-  public BlockWorkerClient acquireBlockWorkerClient(final WorkerNetAddress workerNetAddress)\n+  public CloseableResource<BlockWorkerClient> acquireBlockWorkerClient(\n+      final WorkerNetAddress workerNetAddress)\n       throws IOException {\n     try (ReinitBlockerResource r = blockReinit()) {\n-      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext().getSubject());\n+      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext());\n     }\n   }\n \n-  private BlockWorkerClient acquireBlockWorkerClientInternal(\n-      final WorkerNetAddress workerNetAddress, final Subject subject) throws IOException {\n-    SocketAddress address =\n-        NetworkAddressUtils.getDataPortSocketAddress(workerNetAddress, getClusterConf());\n+  private CloseableResource<BlockWorkerClient> acquireBlockWorkerClientInternal(\n+      final WorkerNetAddress workerNetAddress, final ClientContext context) throws IOException {\n+    SocketAddress address = NetworkAddressUtils\n+        .getDataPortSocketAddress(workerNetAddress, context.getClusterConf());\n     GrpcServerAddress serverAddress = GrpcServerAddress.create(workerNetAddress.getHost(), address);\n-    ClientPoolKey key = new ClientPoolKey(address,\n-        AuthenticationUserUtils.getImpersonationUser(subject, getClusterConf()));\n-    return mBlockWorkerClientPool.computeIfAbsent(key,\n-        k -> new BlockWorkerClientPool(subject, serverAddress,\n-            getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n-            getClusterConf(), mWorkerGroup))\n-        .acquire();\n+    ClientPoolKey key = new ClientPoolKey(address, AuthenticationUserUtils\n+            .getImpersonationUser(context.getSubject(), context.getClusterConf()));\n+    final ConcurrentHashMap<ClientPoolKey, BlockWorkerClientPool> poolMap =\n+        mBlockWorkerClientPool;\n+    return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,", "originalCommit": "e3f1eca320dfaeff5e6e282fe66741d33e89b742", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "937b62215ff569e2e6fee9ed9dbea9bed8c46f34", "url": "https://github.com/Alluxio/alluxio/commit/937b62215ff569e2e6fee9ed9dbea9bed8c46f34", "message": "Update core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n\nCo-Authored-By: Gene Pang <gene.pang@gmail.com>", "committedDate": "2020-01-10T00:00:33Z", "type": "commit"}, {"oid": "862c031b38b4e52677b4c510888c73e2c7547a07", "url": "https://github.com/Alluxio/alluxio/commit/862c031b38b4e52677b4c510888c73e2c7547a07", "message": "fix test", "committedDate": "2020-01-10T00:09:43Z", "type": "commit"}, {"oid": "57faa94a40600222b417f59cf7d4329aba329dff", "url": "https://github.com/Alluxio/alluxio/commit/57faa94a40600222b417f59cf7d4329aba329dff", "message": "Merge branch 'block-reinit-interrupt' of https://github.com/ZacBlanco/alluxio into block-reinit-interrupt", "committedDate": "2020-01-10T00:09:55Z", "type": "commit"}]}