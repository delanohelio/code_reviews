{"pr_number": 11598, "pr_title": "Fix bug in meta cache in MetadataCachingBaseFileSystem", "pr_author": "QianxiZhang", "pr_createdAt": "2020-06-19T02:56:49Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11598", "timeline": [{"oid": "89943dfe465e250060d2288d9f34f7c724e4bac2", "url": "https://github.com/Alluxio/alluxio/commit/89943dfe465e250060d2288d9f34f7c724e4bac2", "message": "fix bug in meta cache in MetadataCachingBaseFileSystem", "committedDate": "2020-06-19T02:50:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTA0OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039049", "body": "can we use lambda syntax here?\r\n\r\n```\r\n() -> new CachedItem());\r\n```\r\n\r\nedit: or simply `CachedItem::new`?", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or simply CachedItem::new?", "bodyHTML": "<p dir=\"auto\">can we use lambda syntax here?</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"() -&gt; new CachedItem());\n\"><pre><code>() -&gt; new CachedItem());\n</code></pre></div>\n<p dir=\"auto\">edit: or simply <code>CachedItem::new</code>?</p>", "author": "ZacBlanco", "createdAt": "2020-06-24T16:58:49Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTQ3OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039479", "body": "can we use lambda syntax here?\r\n\r\n```\r\n() -> new CachedItem());\r\n```\r\n\r\nedit: or better yet simply `CachedItem::new`?", "bodyText": "can we use lambda syntax here?\n() -> new CachedItem());\n\nedit: or better yet simply CachedItem::new?", "bodyHTML": "<p dir=\"auto\">can we use lambda syntax here?</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"() -&gt; new CachedItem());\n\"><pre><code>() -&gt; new CachedItem());\n</code></pre></div>\n<p dir=\"auto\">edit: or better yet simply <code>CachedItem::new</code>?</p>", "author": "ZacBlanco", "createdAt": "2020-06-24T16:59:33Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzOTY3NA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445039674", "body": "can you undo the changes to this indentation?", "bodyText": "can you undo the changes to this indentation?", "bodyHTML": "<p dir=\"auto\">can you undo the changes to this indentation?</p>", "author": "ZacBlanco", "createdAt": "2020-06-24T16:59:51Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -77,9 +76,9 @@ public URIStatus getStatus() {\n    */\n   public MetadataCache(int maxSize, long expirationTimeMs) {\n     mCache = CacheBuilder.newBuilder()\n-        .maximumSize(maxSize)\n-        .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n-        .build();\n+            .maximumSize(maxSize)\n+            .expireAfterWrite(expirationTimeMs, TimeUnit.MILLISECONDS)\n+            .build();", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MTQ3Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445041477", "body": "We should be logging any exceptions here instead of calling `printStackTrace`\r\n\r\nExample:\r\n\r\nat the top of the class\r\n\r\n```java\r\nprivate static final Logger LOG = LoggerFactory.getLogger(MetadataCache.class);\r\n```\r\n\r\nthen in here and the other try/catch\r\n\r\n```java\r\nLogUtils.warnWithException(LOG, \"Failed to cache metadata\", e)\r\n```", "bodyText": "We should be logging any exceptions here instead of calling printStackTrace\nExample:\nat the top of the class\nprivate static final Logger LOG = LoggerFactory.getLogger(MetadataCache.class);\nthen in here and the other try/catch\nLogUtils.warnWithException(LOG, \"Failed to cache metadata\", e)", "bodyHTML": "<p dir=\"auto\">We should be logging any exceptions here instead of calling <code>printStackTrace</code></p>\n<p dir=\"auto\">Example:</p>\n<p dir=\"auto\">at the top of the class</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static final Logger LOG = LoggerFactory.getLogger(MetadataCache.class);\n\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Logger</span> <span class=\"pl-c1\">LOG</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">LoggerFactory</span><span class=\"pl-k\">.</span>getLogger(<span class=\"pl-smi\">MetadataCache</span><span class=\"pl-k\">.</span>class);</pre></div>\n<p dir=\"auto\">then in here and the other try/catch</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"LogUtils.warnWithException(LOG, &quot;Failed to cache metadata&quot;, e)\n\"><pre><span class=\"pl-smi\">LogUtils</span><span class=\"pl-k\">.</span>warnWithException(<span class=\"pl-c1\">LOG</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to cache metadata<span class=\"pl-pds\">\"</span></span>, e)</pre></div>", "author": "ZacBlanco", "createdAt": "2020-06-24T17:02:43Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {\n+      e.printStackTrace();", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042290", "body": "same comments about logging and catching exceptions here.", "bodyText": "same comments about logging and catching exceptions here.", "bodyHTML": "<p dir=\"auto\">same comments about logging and catching exceptions here.</p>", "author": "ZacBlanco", "createdAt": "2020-06-24T17:04:02Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+    }", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMTUwMQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452601501", "bodyText": "Sure. It should be ExecutionException and log the error info.", "author": "QianxiZhang", "createdAt": "2020-07-10T03:22:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MjI5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0Mjg0Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r445042843", "body": "Generally, it's not a good practice to catch `Exception` - we should really only catch exceptions that we know can be thrown. Is there a list of exceptions you know could be thrown here?", "bodyText": "Generally, it's not a good practice to catch Exception - we should really only catch exceptions that we know can be thrown. Is there a list of exceptions you know could be thrown here?", "bodyHTML": "<p dir=\"auto\">Generally, it's not a good practice to catch <code>Exception</code> - we should really only catch exceptions that we know can be thrown. Is there a list of exceptions you know could be thrown here?</p>", "author": "ZacBlanco", "createdAt": "2020-06-24T17:05:05Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +127,19 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(), new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (Exception e) {", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTc4OA==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446455788", "body": "good to be explicit on which Exception we are catching here?", "bodyText": "good to be explicit on which Exception we are catching here?", "bodyHTML": "<p dir=\"auto\">good to be explicit on which Exception we are catching here?</p>", "author": "apc999", "createdAt": "2020-06-26T23:58:06Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +99,25 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, new Callable<CachedItem>() {\n+        @Override\n+        public CachedItem call() throws Exception {\n+          return new CachedItem();\n+        }\n+      });\n+      item.setStatus(status);\n+    } catch (Exception e) {", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456405", "body": "`Puts the status into cache.` or the style checker will fail and complain ", "bodyText": "Puts the status into cache. or the style checker will fail and complain", "bodyHTML": "<p dir=\"auto\"><code>Puts the status into cache.</code> or the style checker will fail and complain</p>", "author": "apc999", "createdAt": "2020-06-27T00:01:57Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NjQzMg==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r446456432", "body": "ditto \ud83d\udc46", "bodyText": "ditto \ud83d\udc46", "bodyHTML": "<p dir=\"auto\">ditto <g-emoji class=\"g-emoji\" alias=\"point_up_2\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f446.png\">\ud83d\udc46</g-emoji></p>", "author": "apc999", "createdAt": "2020-06-27T00:02:08Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -67,6 +48,24 @@ public URIStatus getStatus() {\n     public List<URIStatus> getDirStatuses() {\n       return mDirStatuses;\n     }\n+\n+    /**\n+     *  put the status into cache\n+     *\n+     *  @param status the metadata of the path\n+     */\n+    public void setStatus(URIStatus status) {\n+      mStatus = status;\n+    }\n+\n+    /**\n+     *  put the directory status into cache", "originalCommit": "89943dfe465e250060d2288d9f34f7c724e4bac2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4858d8adb417d29dc7bd996b05ee45847889050", "url": "https://github.com/Alluxio/alluxio/commit/c4858d8adb417d29dc7bd996b05ee45847889050", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:13:15Z", "type": "forcePushed"}, {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "url": "https://github.com/Alluxio/alluxio/commit/a670c004f7a4cd96d9307feb08dd8c53496e6e55", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:14:51Z", "type": "commit"}, {"oid": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "url": "https://github.com/Alluxio/alluxio/commit/a670c004f7a4cd96d9307feb08dd8c53496e6e55", "message": "change Exception to ExecutionException and fix some format issues", "committedDate": "2020-07-10T04:14:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MDg2MQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452940861", "body": "nit\r\n```suggestion\r\n      CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());\r\n```", "bodyText": "nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(dir.getPath(), () -> new CachedItem());", "bodyHTML": "<p dir=\"auto\">nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">CachedItem</span> item <span class=\"pl-k\">=</span> mCache<span class=\"pl-k\">.</span>get(dir<span class=\"pl-k\">.</span>getPath(),<span class=\"x x-first x-last\">()</span><span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CachedItem</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">CachedItem</span> item <span class=\"pl-k\">=</span> mCache<span class=\"pl-k\">.</span>get(dir<span class=\"pl-k\">.</span>getPath(),<span class=\"x x-first x-last\"> () </span><span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CachedItem</span>());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ZacBlanco", "createdAt": "2020-07-10T16:15:13Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MTk5NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452941995", "body": "nit\r\n```suggestion\r\n      CachedItem item = mCache.get(path, () -> new CachedItem());\r\n```", "bodyText": "nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  CachedItem item = mCache.get(path, ()-> new CachedItem());\n          \n          \n            \n                  CachedItem item = mCache.get(path, () -> new CachedItem());", "bodyHTML": "<p dir=\"auto\">nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">CachedItem</span> item <span class=\"pl-k\">=</span> mCache<span class=\"pl-k\">.</span>get(path, ()<span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CachedItem</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">CachedItem</span> item <span class=\"pl-k\">=</span> mCache<span class=\"pl-k\">.</span>get(path, ()<span class=\"x x-first x-last\"> </span><span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CachedItem</span>());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ZacBlanco", "createdAt": "2020-07-10T16:17:24Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -100,15 +103,20 @@ public URIStatus get(AlluxioURI path) {\n    * @param status the status to be cached\n    */\n   public void put(AlluxioURI path, URIStatus status) {\n-    mCache.put(path.getPath(), new CachedItem(status));\n+    put(path.getPath(), status);\n   }\n \n   /**\n    * @param path the Alluxio path\n    * @param status the status to be cached\n    */\n   public void put(String path, URIStatus status) {\n-    mCache.put(path, new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(path, ()-> new CachedItem());", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk0MjQ2Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11598#discussion_r452942463", "body": "Can we slightly alter this exception message so we can differentiate it from the one above?\r\n```suggestion\r\n        LOG.error(\"Failed to put meta into client cache for dir \" + dir.getPath(),\r\n```", "bodyText": "Can we slightly alter this exception message so we can differentiate it from the one above?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),\n          \n          \n            \n                    LOG.error(\"Failed to put meta into client cache for dir \" + dir.getPath(),", "bodyHTML": "<p dir=\"auto\">Can we slightly alter this exception message so we can differentiate it from the one above?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to put meta into client cache for <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> dir<span class=\"pl-k\">.</span>getPath(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to put meta into client cache for <span class=\"x x-first x-last\">dir </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> dir<span class=\"pl-k\">.</span>getPath(),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ZacBlanco", "createdAt": "2020-07-10T16:18:17Z", "path": "core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java", "diffHunk": "@@ -118,9 +126,15 @@ public void put(String path, URIStatus status) {\n    * @param statuses the list status results\n    */\n   public void put(AlluxioURI dir, List<URIStatus> statuses) {\n-    mCache.put(dir.getPath(), new CachedItem(statuses));\n-    for (URIStatus status : statuses) {\n-      mCache.put(status.getPath(), new CachedItem(status));\n+    try {\n+      CachedItem item = mCache.get(dir.getPath(),()-> new CachedItem());\n+      item.setDirStatuses(statuses);\n+      for (URIStatus status : statuses) {\n+        put(status.getPath(), status);\n+      }\n+    } catch (ExecutionException e) {\n+        LOG.error(\"Failed to put meta into client cache for \" + dir.getPath(),", "originalCommit": "a670c004f7a4cd96d9307feb08dd8c53496e6e55", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a274dc39dabfe2f172d4855809257e8d82b8cd25", "url": "https://github.com/Alluxio/alluxio/commit/a274dc39dabfe2f172d4855809257e8d82b8cd25", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:34:48Z", "type": "commit"}, {"oid": "f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "url": "https://github.com/Alluxio/alluxio/commit/f51bf148328bdfbfd9d75f24b6bdc98f482fea4e", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:34:58Z", "type": "commit"}, {"oid": "d59c5a67a1a8057a3e2c2818c1c13312961bbef6", "url": "https://github.com/Alluxio/alluxio/commit/d59c5a67a1a8057a3e2c2818c1c13312961bbef6", "message": "Update core/client/fs/src/main/java/alluxio/client/file/MetadataCache.java\n\nCo-authored-by: Zac Blanco <zac@alluxio.com>", "committedDate": "2020-07-10T22:35:16Z", "type": "commit"}, {"oid": "3ae27519f923073d8ddb0f484313c4e863bd2b46", "url": "https://github.com/Alluxio/alluxio/commit/3ae27519f923073d8ddb0f484313c4e863bd2b46", "message": "Fix indentation", "committedDate": "2020-07-10T22:42:46Z", "type": "commit"}, {"oid": "f0c9d2ad55158c1589c3dde27b60a16bd31fdd29", "url": "https://github.com/Alluxio/alluxio/commit/f0c9d2ad55158c1589c3dde27b60a16bd31fdd29", "message": "Use warn instead of error as this is best effort", "committedDate": "2020-07-10T22:51:10Z", "type": "commit"}, {"oid": "b129a01bcc6b4738bf16644b633a78dd3af05f8f", "url": "https://github.com/Alluxio/alluxio/commit/b129a01bcc6b4738bf16644b633a78dd3af05f8f", "message": "Update MetadataCache.java", "committedDate": "2020-07-11T00:51:35Z", "type": "commit"}, {"oid": "45be5f24b53f9ab77c0cb6bf677bc239ca811e88", "url": "https://github.com/Alluxio/alluxio/commit/45be5f24b53f9ab77c0cb6bf677bc239ca811e88", "message": "Update MetadataCache.java", "committedDate": "2020-07-11T01:20:30Z", "type": "commit"}, {"oid": "6fe914e313fdf7dc21a05c62d901c704be5c5c49", "url": "https://github.com/Alluxio/alluxio/commit/6fe914e313fdf7dc21a05c62d901c704be5c5c49", "message": "add unit test for MetadataCache", "committedDate": "2020-07-16T03:51:21Z", "type": "commit"}]}