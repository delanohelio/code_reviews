{"pr_number": 12120, "pr_title": "Avoid printing long proto lines in messages and exception descriptions", "pr_author": "gpang", "pr_createdAt": "2020-09-21T20:45:40Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/12120", "timeline": [{"oid": "905db3270b76893bc2b2a968e0d284bbd4058a57", "url": "https://github.com/Alluxio/alluxio/commit/905db3270b76893bc2b2a968e0d284bbd4058a57", "message": "Truncate long proto lines", "committedDate": "2020-09-21T20:43:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0OTE5MA==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492349190", "body": "```suggestion\r\n          formatErrorMessage(\"Failed to send request %s: stream is already closed or cancelled.\",\r\n```\r\nsince we're editing this line", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      formatErrorMessage(\"Failed to send request %s: stream is already closed or canceled.\",\n          \n          \n            \n                      formatErrorMessage(\"Failed to send request %s: stream is already closed or cancelled.\",\n          \n      \n    \n    \n  \n\nsince we're editing this line", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          formatErrorMessage(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to send request %s: stream is already closed or <span class=\"x x-first x-last\">canceled</span>.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          formatErrorMessage(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to send request %s: stream is already closed or <span class=\"x x-first x-last\">cancelled</span>.<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">since we're editing this line</p>", "author": "ZacBlanco", "createdAt": "2020-09-21T21:12:49Z", "path": "core/client/fs/src/main/java/alluxio/client/block/stream/GrpcBlockingStream.java", "diffHunk": "@@ -92,8 +93,9 @@ public GrpcBlockingStream(Function<StreamObserver<ResT>, StreamObserver<ReqT>> r\n    */\n   public void send(ReqT request, long timeoutMs) throws IOException {\n     if (mClosed || mCanceled || mClosedFromRemote) {\n-      throw new CancelledException(formatErrorMessage(\n-          \"Failed to send request %s: stream is already closed or canceled.\", request));\n+      throw new CancelledException(\n+          formatErrorMessage(\"Failed to send request %s: stream is already closed or canceled.\",", "originalCommit": "905db3270b76893bc2b2a968e0d284bbd4058a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM4Mzg0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492383845", "bodyText": "I didn't know what the correct spelling was, but this site says both are fine: https://www.grammarly.com/blog/canceled-vs-cancelled/\nI changed it to cancelled because that is what the exception name is also using.", "author": "gpang", "createdAt": "2020-09-21T22:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0OTE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0OTU1MQ==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492349551", "body": "most of the time its because of the large payload that the line is so large...what if instead we did `request.toBuilder().setPayload(null)` or something like that instead? Really it's just the payload causing the unreadability, right? I think it would be best to strip out the payload instead? I think its bad practice to be dumping that information in a log anyway.", "bodyText": "most of the time its because of the large payload that the line is so large...what if instead we did request.toBuilder().setPayload(null) or something like that instead? Really it's just the payload causing the unreadability, right? I think it would be best to strip out the payload instead? I think its bad practice to be dumping that information in a log anyway.", "bodyHTML": "<p dir=\"auto\">most of the time its because of the large payload that the line is so large...what if instead we did <code>request.toBuilder().setPayload(null)</code> or something like that instead? Really it's just the payload causing the unreadability, right? I think it would be best to strip out the payload instead? I think its bad practice to be dumping that information in a log anyway.</p>", "author": "ZacBlanco", "createdAt": "2020-09-21T21:13:38Z", "path": "core/client/fs/src/main/java/alluxio/client/block/stream/GrpcBlockingStream.java", "diffHunk": "@@ -92,8 +93,9 @@ public GrpcBlockingStream(Function<StreamObserver<ResT>, StreamObserver<ReqT>> r\n    */\n   public void send(ReqT request, long timeoutMs) throws IOException {\n     if (mClosed || mCanceled || mClosedFromRemote) {\n-      throw new CancelledException(formatErrorMessage(\n-          \"Failed to send request %s: stream is already closed or canceled.\", request));\n+      throw new CancelledException(\n+          formatErrorMessage(\"Failed to send request %s: stream is already closed or canceled.\",\n+              LogUtils.truncateMessageLines(request)));", "originalCommit": "905db3270b76893bc2b2a968e0d284bbd4058a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM4MDg3MQ==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492380871", "bodyText": "Well, the main problem is that we technically cannot assume what type the request is. It can be any type, so we cannot assume it is a proto, or even which proto it is.\nI wanted to avoid adding instanceof calls for various proto types, and so the current mechanism is to just truncate long lines.", "author": "gpang", "createdAt": "2020-09-21T22:26:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0OTU1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxOTQxNA==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492419414", "bodyText": "fair enough", "author": "ZacBlanco", "createdAt": "2020-09-22T00:35:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0OTU1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM1MDM4OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492350389", "body": "Since `LogUtils.truncateMessagelines(request)` is always called regardless of debug level, we'll always be serializing the payload and allocating a string. I think that we should do a `LOG.isDebugEnabled` statement around this message if we intend to keep the log call the same", "bodyText": "Since LogUtils.truncateMessagelines(request) is always called regardless of debug level, we'll always be serializing the payload and allocating a string. I think that we should do a LOG.isDebugEnabled statement around this message if we intend to keep the log call the same", "bodyHTML": "<p dir=\"auto\">Since <code>LogUtils.truncateMessagelines(request)</code> is always called regardless of debug level, we'll always be serializing the payload and allocating a string. I think that we should do a <code>LOG.isDebugEnabled</code> statement around this message if we intend to keep the log call the same</p>", "author": "ZacBlanco", "createdAt": "2020-09-21T21:15:28Z", "path": "core/client/fs/src/main/java/alluxio/client/block/stream/GrpcBlockingStream.java", "diffHunk": "@@ -126,7 +130,7 @@ public void send(ReqT request, long timeoutMs) throws IOException {\n   public void send(ReqT request) throws IOException {\n     if (mClosed || mCanceled || mClosedFromRemote) {\n       LOG.debug(\"Failed to send request {}: stream is already closed or canceled. ({})\",\n-          request, mDescription);\n+          LogUtils.truncateMessageLines(request), mDescription);", "originalCommit": "905db3270b76893bc2b2a968e0d284bbd4058a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM4MTMzMw==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492381333", "bodyText": "Done.", "author": "gpang", "createdAt": "2020-09-21T22:28:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM1MDM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM1MzE3Mw==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492353173", "body": "at first I thought this was the actual number of \"lines\" in the string. i.e. counting the number of `\\n` characters. Only after reading this code do I realize its the length of the string. Maybe rename to `truncateMessageLineLength`?\r\n\r\nAdditionally, do you think another method to limit the number of `\\n` characters useful?", "bodyText": "at first I thought this was the actual number of \"lines\" in the string. i.e. counting the number of \\n characters. Only after reading this code do I realize its the length of the string. Maybe rename to truncateMessageLineLength?\nAdditionally, do you think another method to limit the number of \\n characters useful?", "bodyHTML": "<p dir=\"auto\">at first I thought this was the actual number of \"lines\" in the string. i.e. counting the number of <code>\\n</code> characters. Only after reading this code do I realize its the length of the string. Maybe rename to <code>truncateMessageLineLength</code>?</p>\n<p dir=\"auto\">Additionally, do you think another method to limit the number of <code>\\n</code> characters useful?</p>", "author": "ZacBlanco", "createdAt": "2020-09-21T21:21:22Z", "path": "core/common/src/main/java/alluxio/util/LogUtils.java", "diffHunk": "@@ -132,4 +136,38 @@ public static void warnWithException(Logger logger, String message, Object ...ar\n       logger.warn(message + \": {}\", args);\n     }\n   }\n+\n+  /**\n+   * Truncates each line of a message to a certain length.\n+   *\n+   * @param message the message to truncate the lines for\n+   * @return the message, with lines truncated to length {@link #MAX_TRUNCATED_LENGTH}\n+   */\n+  public static String truncateMessageLines(Object message) {\n+    return truncateMessageLines(message, MAX_TRUNCATED_LENGTH);\n+  }\n+\n+  /**\n+   * Truncates each line of a message to a certain length.\n+   *\n+   * @param message the message to truncate the lines for\n+   * @param maxLineLength the maximum length of a message line\n+   * @return the message, with lines truncated to the specified length\n+   */\n+  public static String truncateMessageLines(Object message, int maxLineLength) {", "originalCommit": "905db3270b76893bc2b2a968e0d284bbd4058a57", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM4MjM5OQ==", "url": "https://github.com/Alluxio/alluxio/pull/12120#discussion_r492382399", "bodyText": "I renamed the methods.\nLimiting the number of lines could also be useful. We can add that in a later PR.", "author": "gpang", "createdAt": "2020-09-21T22:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM1MzE3Mw=="}], "type": "inlineReview"}, {"oid": "4a1bafaca4ae99dff7045173877dfff27ae966b9", "url": "https://github.com/Alluxio/alluxio/commit/4a1bafaca4ae99dff7045173877dfff27ae966b9", "message": "Update", "committedDate": "2020-09-21T22:35:19Z", "type": "commit"}]}