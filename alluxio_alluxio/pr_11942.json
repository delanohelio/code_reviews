{"pr_number": 11942, "pr_title": "Add -g option for du command", "pr_author": "JySongWithZhangCe", "pr_createdAt": "2020-08-08T15:27:18Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11942", "timeline": [{"oid": "edc06bcfb9be0bfbf3a8d30111c5d13e0b8de3be", "url": "https://github.com/Alluxio/alluxio/commit/edc06bcfb9be0bfbf3a8d30111c5d13e0b8de3be", "message": "new shell command for Displays information for In-Alluxio data size under the path group by worker", "committedDate": "2020-08-08T15:08:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzOTY2Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r467539667", "body": "If you want to give a parameter to the `%s`, you will need to use `System.out.format(\"%s%n\", x);` where `%n` is the newline character. ", "bodyText": "If you want to give a parameter to the %s, you will need to use System.out.format(\"%s%n\", x); where %n is the newline character.", "bodyHTML": "<p dir=\"auto\">If you want to give a parameter to the <code>%s</code>, you will need to use <code>System.out.format(\"%s%n\", x);</code> where <code>%n</code> is the newline character.</p>", "author": "jiacheliu3", "createdAt": "2020-08-09T05:40:41Z", "path": "shell/src/main/java/alluxio/cli/fs/command/LsPathInAlluxio.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.client.file.URIStatus;\n+import alluxio.exception.AlluxioException;\n+import alluxio.grpc.ListStatusPOptions;\n+import alluxio.util.FormatUtils;\n+import alluxio.wire.BlockLocation;\n+import alluxio.wire.FileBlockInfo;\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class LsPathInAlluxio extends AbstractFileSystemCommand {\n+\n+    private static final String READABLE_OPTION_NAME = \"h\";\n+\n+    private static final Option READABLE_OPTION =\n+            Option.builder(READABLE_OPTION_NAME)\n+                    .required(false)\n+                    .hasArg(false)\n+                    .desc(\"print sizes in human readable format (e.g., 1KB 234MB 2GB)\")\n+                    .build();\n+\n+    public LsPathInAlluxio(@Nullable FileSystemContext fsContext) {\n+        super(fsContext);\n+    }\n+\n+    /**\n+     * Displays information for In-Alluxio data size under the path group by worker.\n+     *\n+     * @param path The {@link AlluxioURI} path as the input of the command\n+     * @param readable whether to print info of human readable format\n+     */\n+    private void lsPathInAlluxio(AlluxioURI path, boolean readable) throws AlluxioException, IOException {\n+\n+        Timer timer = new Timer();\n+        timer.schedule(new TimerTask() {\n+            @Override\n+            public void run() {\n+                System.out.println(\"Getting directory status of %s files or sub-directories \"", "originalCommit": "edc06bcfb9be0bfbf3a8d30111c5d13e0b8de3be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzOTg4Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r467539887", "body": "Maybe `Displays information for in-Alluxio data size under the path, grouped by worker` ?", "bodyText": "Maybe Displays information for in-Alluxio data size under the path, grouped by worker ?", "bodyHTML": "<p dir=\"auto\">Maybe <code>Displays information for in-Alluxio data size under the path, grouped by worker</code> ?</p>", "author": "jiacheliu3", "createdAt": "2020-08-09T05:43:23Z", "path": "shell/src/main/java/alluxio/cli/fs/command/LsPathInAlluxio.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.client.file.URIStatus;\n+import alluxio.exception.AlluxioException;\n+import alluxio.grpc.ListStatusPOptions;\n+import alluxio.util.FormatUtils;\n+import alluxio.wire.BlockLocation;\n+import alluxio.wire.FileBlockInfo;\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class LsPathInAlluxio extends AbstractFileSystemCommand {\n+\n+    private static final String READABLE_OPTION_NAME = \"h\";\n+\n+    private static final Option READABLE_OPTION =\n+            Option.builder(READABLE_OPTION_NAME)\n+                    .required(false)\n+                    .hasArg(false)\n+                    .desc(\"print sizes in human readable format (e.g., 1KB 234MB 2GB)\")\n+                    .build();\n+\n+    public LsPathInAlluxio(@Nullable FileSystemContext fsContext) {\n+        super(fsContext);\n+    }\n+\n+    /**\n+     * Displays information for In-Alluxio data size under the path group by worker.\n+     *\n+     * @param path The {@link AlluxioURI} path as the input of the command\n+     * @param readable whether to print info of human readable format\n+     */\n+    private void lsPathInAlluxio(AlluxioURI path, boolean readable) throws AlluxioException, IOException {\n+\n+        Timer timer = new Timer();\n+        timer.schedule(new TimerTask() {\n+            @Override\n+            public void run() {\n+                System.out.println(\"Getting directory status of %s files or sub-directories \"\n+                        + \"may take a while.\");\n+            }\n+        }, 10000);\n+        ListStatusPOptions.Builder optionsBuilder = ListStatusPOptions.newBuilder();\n+        optionsBuilder.setRecursive(true);\n+        List<URIStatus> statuses = mFileSystem.listStatus(path, optionsBuilder.build());\n+        timer.cancel();\n+\n+        Map<String, Long> distributionMap = new HashMap<>();\n+        for (URIStatus status: statuses) {\n+            for (FileBlockInfo fileBlockInfo : status.getFileBlockInfos()) {\n+                Long length = fileBlockInfo.getBlockInfo().getLength();\n+                for (BlockLocation blockLocation : fileBlockInfo.getBlockInfo().getLocations()) {\n+                    distributionMap.put(blockLocation.getWorkerAddress().getHost(),\n+                        distributionMap.getOrDefault(blockLocation.getWorkerAddress().getHost(), 0L) + length);\n+                }\n+            }\n+        }\n+\n+        distributionMap.forEach((workerHostName, size) -> {\n+            printInfo(workerHostName, readable ? FormatUtils.getSizeFromBytes(size) : String.valueOf(size));\n+        });\n+    }\n+\n+    /**\n+     * Prints the size messages.\n+     *\n+     * @param workerHostName Host name of the worker\n+     * @param inAlluxioMessage the in Alluxio size message to print\n+     */\n+    private static void printInfo(String workerHostName, String inAlluxioMessage) {\n+        System.out.println(String.format(\"%-25s %s\", workerHostName, inAlluxioMessage));\n+    }\n+\n+    @Override\n+    protected void processHeader(CommandLine cl) {\n+        printInfo(\"Worker Host Name\", \"In Alluxio\");\n+    }\n+\n+    @Override\n+    protected void runPlainPath(AlluxioURI path, CommandLine cl)\n+            throws AlluxioException, IOException {\n+        lsPathInAlluxio(path, cl.hasOption(READABLE_OPTION_NAME));\n+    }\n+\n+    @Override\n+    public int run(CommandLine cl) throws AlluxioException, IOException {\n+        String[] args = cl.getArgs();\n+        AlluxioURI path = new AlluxioURI(args[0]);\n+        runWildCardCmd(path, cl);\n+        return 0;\n+    }\n+\n+    @Override\n+    public String getCommandName() {\n+        return \"lsPathInAlluxio\";\n+    }\n+\n+    @Override\n+    public String getUsage() {\n+        return \"lsPathInAlluxio [-h] <path>\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Displays information for In-Alluxio data size under the path group by worker.\";", "originalCommit": "edc06bcfb9be0bfbf3a8d30111c5d13e0b8de3be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2MTk2Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r467561966", "bodyText": "Ok", "author": "JySongWithZhangCe", "createdAt": "2020-08-09T09:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzOTg4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU0MDIwOQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r467540209", "body": "Maybe `assertEquals` on each of them, with `-h` and without `-h`. Don't verify these two together.", "bodyText": "Maybe assertEquals on each of them, with -h and without -h. Don't verify these two together.", "bodyHTML": "<p dir=\"auto\">Maybe <code>assertEquals</code> on each of them, with <code>-h</code> and without <code>-h</code>. Don't verify these two together.</p>", "author": "jiacheliu3", "createdAt": "2020-08-09T05:47:38Z", "path": "tests/src/test/java/alluxio/client/cli/fs/command/LsPathInAlluxioTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.cli.fs.command;\n+\n+import alluxio.client.cli.fs.AbstractFileSystemShellTest;\n+import alluxio.client.file.FileSystemTestUtils;\n+import alluxio.grpc.WritePType;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Tests for lsPathInAlluxio command.\n+ */\n+public class LsPathInAlluxioTest extends AbstractFileSystemShellTest {\n+\n+    @Test\n+    public void lsInAlluxio() throws Exception {\n+        FileSystemTestUtils\n+                .createByteFile(sFileSystem, \"/testRoot/testFileA\", WritePType.MUST_CACHE, 50, 50);\n+        FileSystemTestUtils\n+                .createByteFile(sFileSystem, \"/testRoot/testFileZ\", WritePType.MUST_CACHE, 10, 10);\n+        FileSystemTestUtils\n+                .createByteFile(sFileSystem, \"/testRoot/testLongFile\", WritePType.MUST_CACHE, 100, 100);\n+\n+        String workerHost = sLocalAlluxioCluster.getWorkerAddress().getHost();\n+        String expected = \"\";\n+        String format = \"%-25s %s\\n\";\n+\n+        sFsShell.run(\"lsInAlluxio\", \"/testRoot\");\n+        expected += String.format(format, \"Worker Host Name\", \"In Alluxio\");\n+        expected += String.format(format, workerHost, 160);\n+\n+        sFsShell.run(\"lsInAlluxio\", \"-h\", \"/testRoot\");\n+        expected += String.format(format, \"Worker Address\", \"In Alluxio\");\n+        expected += String.format(format, workerHost, \"160B\");\n+\n+        assertEquals(expected, mOutput.toString());", "originalCommit": "edc06bcfb9be0bfbf3a8d30111c5d13e0b8de3be", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU2MjA3NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r467562075", "bodyText": "ok", "author": "JySongWithZhangCe", "createdAt": "2020-08-09T09:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU0MDIwOQ=="}], "type": "inlineReview"}, {"oid": "d8cef138a90b9c85cd82e67f78b5c1dc70c9d8d4", "url": "https://github.com/Alluxio/alluxio/commit/d8cef138a90b9c85cd82e67f78b5c1dc70c9d8d4", "message": "fix code style", "committedDate": "2020-08-09T09:46:11Z", "type": "commit"}, {"oid": "d86e7008a740e48e550ab718e330b09e33b4e4e3", "url": "https://github.com/Alluxio/alluxio/commit/d86e7008a740e48e550ab718e330b09e33b4e4e3", "message": "fix print info and javadoc content", "committedDate": "2020-08-09T10:01:58Z", "type": "commit"}, {"oid": "38995e72be5fd5f46ce8a2f6555b42f74f62155b", "url": "https://github.com/Alluxio/alluxio/commit/38995e72be5fd5f46ce8a2f6555b42f74f62155b", "message": "fix test code style", "committedDate": "2020-08-09T10:03:24Z", "type": "commit"}, {"oid": "3fc71126124c733df027970830b132c92fcef6f8", "url": "https://github.com/Alluxio/alluxio/commit/3fc71126124c733df027970830b132c92fcef6f8", "message": "fix test assert logic", "committedDate": "2020-08-09T10:14:36Z", "type": "commit"}, {"oid": "3f0bb9678fedb92e351b3de0a92da5db418a10f5", "url": "https://github.com/Alluxio/alluxio/commit/3f0bb9678fedb92e351b3de0a92da5db418a10f5", "message": "fix test commond", "committedDate": "2020-08-09T11:47:55Z", "type": "commit"}, {"oid": "e155f6377436d1da6fb969b7f405f65dd4d49cf4", "url": "https://github.com/Alluxio/alluxio/commit/e155f6377436d1da6fb969b7f405f65dd4d49cf4", "message": "fix test commond", "committedDate": "2020-08-09T12:39:08Z", "type": "commit"}, {"oid": "74185bc33fc1c9f859282e9db7ca78dcd668861d", "url": "https://github.com/Alluxio/alluxio/commit/74185bc33fc1c9f859282e9db7ca78dcd668861d", "message": "fix test commond", "committedDate": "2020-08-09T13:59:23Z", "type": "commit"}, {"oid": "6bd8413de3fcc1119a2ddcde28ba7bd22bf850f6", "url": "https://github.com/Alluxio/alluxio/commit/6bd8413de3fcc1119a2ddcde28ba7bd22bf850f6", "message": "change printinfo format", "committedDate": "2020-08-09T15:40:49Z", "type": "commit"}, {"oid": "e6f8504d0572cc6698ff9d8103513aa93588561a", "url": "https://github.com/Alluxio/alluxio/commit/e6f8504d0572cc6698ff9d8103513aa93588561a", "message": "change printinfo format", "committedDate": "2020-08-09T16:13:58Z", "type": "commit"}, {"oid": "9a5207dbd4be1ffc89410e25f00673ae5b70758c", "url": "https://github.com/Alluxio/alluxio/commit/9a5207dbd4be1ffc89410e25f00673ae5b70758c", "message": "fix test commond", "committedDate": "2020-08-10T13:10:39Z", "type": "commit"}, {"oid": "42a9e4fbef689981130b15d475922d46e87551f0", "url": "https://github.com/Alluxio/alluxio/commit/42a9e4fbef689981130b15d475922d46e87551f0", "message": "improve test commond", "committedDate": "2020-08-10T13:17:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MTc5MQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r471181791", "body": "fix indentation , see https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#coding-style", "bodyText": "fix indentation , see https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#coding-style", "bodyHTML": "<p dir=\"auto\">fix indentation , see <a href=\"https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#coding-style\" rel=\"nofollow\">https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#coding-style</a></p>", "author": "apc999", "createdAt": "2020-08-17T00:39:11Z", "path": "shell/src/main/java/alluxio/cli/fs/command/LsPathInAlluxioCommand.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.client.file.URIStatus;\n+import alluxio.exception.AlluxioException;\n+import alluxio.grpc.ListStatusPOptions;\n+import alluxio.util.FormatUtils;\n+import alluxio.wire.BlockLocation;\n+import alluxio.wire.FileBlockInfo;\n+\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+\n+import java.io.IOException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.HashMap;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Displays information for In-Alluxio data size under the path, grouped by worker.\n+ */\n+public class LsPathInAlluxioCommand extends AbstractFileSystemCommand {\n+  private static final String READABLE_OPTION_NAME = \"h\";\n+  private static final Option READABLE_OPTION =\n+          Option.builder(READABLE_OPTION_NAME)", "originalCommit": "42a9e4fbef689981130b15d475922d46e87551f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MjMwOA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r471182308", "body": "how is this different from `DuCommand`? can we add an option to `Du` to group output by workers?", "bodyText": "how is this different from DuCommand? can we add an option to Du to group output by workers?", "bodyHTML": "<p dir=\"auto\">how is this different from <code>DuCommand</code>? can we add an option to <code>Du</code> to group output by workers?</p>", "author": "apc999", "createdAt": "2020-08-17T00:43:04Z", "path": "shell/src/main/java/alluxio/cli/fs/command/LsPathInAlluxioCommand.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.client.file.URIStatus;\n+import alluxio.exception.AlluxioException;\n+import alluxio.grpc.ListStatusPOptions;\n+import alluxio.util.FormatUtils;\n+import alluxio.wire.BlockLocation;\n+import alluxio.wire.FileBlockInfo;\n+\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+\n+import java.io.IOException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.HashMap;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Displays information for In-Alluxio data size under the path, grouped by worker.\n+ */\n+public class LsPathInAlluxioCommand extends AbstractFileSystemCommand {", "originalCommit": "42a9e4fbef689981130b15d475922d46e87551f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4MjMyOA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r471182328", "body": "indentation", "bodyText": "indentation", "bodyHTML": "<p dir=\"auto\">indentation</p>", "author": "apc999", "createdAt": "2020-08-17T00:43:16Z", "path": "shell/src/main/java/alluxio/cli/fs/command/LsPathInAlluxioCommand.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.cli.fs.command;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.FileSystemContext;\n+import alluxio.client.file.URIStatus;\n+import alluxio.exception.AlluxioException;\n+import alluxio.grpc.ListStatusPOptions;\n+import alluxio.util.FormatUtils;\n+import alluxio.wire.BlockLocation;\n+import alluxio.wire.FileBlockInfo;\n+\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+\n+import java.io.IOException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.HashMap;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Displays information for In-Alluxio data size under the path, grouped by worker.\n+ */\n+public class LsPathInAlluxioCommand extends AbstractFileSystemCommand {\n+  private static final String READABLE_OPTION_NAME = \"h\";\n+  private static final Option READABLE_OPTION =\n+          Option.builder(READABLE_OPTION_NAME)\n+                  .required(false)\n+                  .hasArg(false)\n+                  .desc(\"print sizes in human readable format (e.g., 1KB 234MB 2GB)\")\n+                  .build();\n+\n+  /**\n+   * Constructs a new instance to display information for In-Alluxio data size under\n+   * the path, grouped by worker.\n+   *\n+   * @param fsContext the filesystem of Alluxio\n+   */\n+  public LsPathInAlluxioCommand(@Nullable FileSystemContext fsContext) {\n+    super(fsContext);\n+  }\n+\n+  /**\n+   * Displays information for In-Alluxio data size under the path, grouped by worker.\n+   *\n+   * @param path     The {@link AlluxioURI} path as the input of the command\n+   * @param readable whether to print info of human readable format\n+   */\n+  private void lsPathInAlluxio(AlluxioURI path, boolean readable)\n+          throws AlluxioException, IOException {", "originalCommit": "42a9e4fbef689981130b15d475922d46e87551f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d5699647d1310c60b8f7f387c26c64a2b89bdd4c", "url": "https://github.com/Alluxio/alluxio/commit/d5699647d1310c60b8f7f387c26c64a2b89bdd4c", "message": "merge LsPathInAlluxioCommand into DuCommand", "committedDate": "2020-10-03T04:00:04Z", "type": "commit"}, {"oid": "c15ac5f66567f82e331af4c3c8ca84bfa3155058", "url": "https://github.com/Alluxio/alluxio/commit/c15ac5f66567f82e331af4c3c8ca84bfa3155058", "message": "Fix DuCommandTest codestyte", "committedDate": "2020-10-03T04:16:34Z", "type": "commit"}, {"oid": "a67f736e8ff961a5d83d1cdf7dcdce0d22f287c1", "url": "https://github.com/Alluxio/alluxio/commit/a67f736e8ff961a5d83d1cdf7dcdce0d22f287c1", "message": "Fix DuCommand processHeader", "committedDate": "2020-10-03T05:52:32Z", "type": "commit"}, {"oid": "901efa8e76111910f46cabf591adf6519049de4e", "url": "https://github.com/Alluxio/alluxio/commit/901efa8e76111910f46cabf591adf6519049de4e", "message": "Fix DuCommand du -h -s -g printInfo bug", "committedDate": "2020-10-03T06:35:37Z", "type": "commit"}, {"oid": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "url": "https://github.com/Alluxio/alluxio/commit/b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "message": "Fix DuCommandIntegrationTest du -h -s -g test case", "committedDate": "2020-10-03T08:57:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzI3Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253273", "body": "What is the difference between MID_1 and MID_2? I think maybe you can add comments to each with an example, like below, and the \"aaa bbb\" are one sample output.\r\n```\r\n  // aaaaaaaa bbbb cccc dddd e\r\n  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\r\n  // aaaaaaaa bbbb cccc dddd\r\n  private static final String MID_1_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\r\n  // aaaaaaaa bbbb cccc dddddddddd\r\n  private static final String MID_2_INFO_FORMAT = \"%-13s %-16s %-25s %s\";\r\n```\r\n", "bodyText": "What is the difference between MID_1 and MID_2? I think maybe you can add comments to each with an example, like below, and the \"aaa bbb\" are one sample output.\n  // aaaaaaaa bbbb cccc dddd e\n  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n  // aaaaaaaa bbbb cccc dddd\n  private static final String MID_1_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n  // aaaaaaaa bbbb cccc dddddddddd\n  private static final String MID_2_INFO_FORMAT = \"%-13s %-16s %-25s %s\";", "bodyHTML": "<p dir=\"auto\">What is the difference between MID_1 and MID_2? I think maybe you can add comments to each with an example, like below, and the \"aaa bbb\" are one sample output.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  // aaaaaaaa bbbb cccc dddd e\n  private static final String LONG_INFO_FORMAT = &quot;%-13s %-16s %-16s %-25s %s&quot;;\n  // aaaaaaaa bbbb cccc dddd\n  private static final String MID_1_INFO_FORMAT = &quot;%-13s %-16s %-16s %s&quot;;\n  // aaaaaaaa bbbb cccc dddddddddd\n  private static final String MID_2_INFO_FORMAT = &quot;%-13s %-16s %-25s %s&quot;;\n\"><pre><code>  // aaaaaaaa bbbb cccc dddd e\n  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n  // aaaaaaaa bbbb cccc dddd\n  private static final String MID_1_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n  // aaaaaaaa bbbb cccc dddddddddd\n  private static final String MID_2_INFO_FORMAT = \"%-13s %-16s %-25s %s\";\n</code></pre></div>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:35:58Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,16 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n+  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n+  private static final String MID_1_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n+  private static final String MID_2_INFO_FORMAT = \"%-13s %-16s %-25s %s\";", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzQzMg==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253432", "body": "What is the difference between:\r\n`cl.hasOption(MEMORY_OPTION_NAME) ? Optional.of(\"In Memory\") : Optional.empty()`\r\nand \r\n`cl.hasOption(MEMORY_OPTION_NAME) ? \"In Memory\" : \"\"`", "bodyText": "What is the difference between:\ncl.hasOption(MEMORY_OPTION_NAME) ? Optional.of(\"In Memory\") : Optional.empty()\nand\ncl.hasOption(MEMORY_OPTION_NAME) ? \"In Memory\" : \"\"", "bodyHTML": "<p dir=\"auto\">What is the difference between:<br>\n<code>cl.hasOption(MEMORY_OPTION_NAME) ? Optional.of(\"In Memory\") : Optional.empty()</code><br>\nand<br>\n<code>cl.hasOption(MEMORY_OPTION_NAME) ? \"In Memory\" : \"\"</code></p>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:37:42Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -83,7 +98,9 @@ public String getCommandName() {\n   @Override\n   protected void processHeader(CommandLine cl) {\n     printInfo(\"File Size\", \"In Alluxio\",\n-        cl.hasOption(MEMORY_OPTION_NAME) ? \"In Memory\" : \"\", \"Path\");\n+        cl.hasOption(MEMORY_OPTION_NAME) ? Optional.of(\"In Memory\") : Optional.empty(),", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzU0OA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253548", "body": "Why not \r\n`String workerHostName = groupByWorker ? \"total\" : \"\"`?", "bodyText": "Why not\nString workerHostName = groupByWorker ? \"total\" : \"\"?", "bodyHTML": "<p dir=\"auto\">Why not<br>\n<code>String workerHostName = groupByWorker ? \"total\" : \"\"</code>?</p>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:39:13Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -108,28 +126,50 @@ protected void runPlainPath(AlluxioURI path, CommandLine cl)\n    * @param statuses the statuses of files and folders\n    * @param readable whether to print info of human readable format\n    * @param summarize whether to display the aggregate summary lengths\n+   * @param groupByWorker whether to display In-Alluxio groupByWorker\n    * @param addMemory whether to display the memory size and percentage information\n    */\n   protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n-      boolean readable, boolean summarize, boolean addMemory) {\n+      boolean readable, boolean summarize, boolean groupByWorker, boolean addMemory) {\n+    Optional<String> workerHostName = groupByWorker ? Optional.of(\"total\") : Optional.empty();", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzcxOA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253718", "body": "Same here, why do we need Optional?", "bodyText": "Same here, why do we need Optional?", "bodyHTML": "<p dir=\"auto\">Same here, why do we need Optional?</p>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:40:48Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -108,28 +126,50 @@ protected void runPlainPath(AlluxioURI path, CommandLine cl)\n    * @param statuses the statuses of files and folders\n    * @param readable whether to print info of human readable format\n    * @param summarize whether to display the aggregate summary lengths\n+   * @param groupByWorker whether to display In-Alluxio groupByWorker\n    * @param addMemory whether to display the memory size and percentage information\n    */\n   protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n-      boolean readable, boolean summarize, boolean addMemory) {\n+      boolean readable, boolean summarize, boolean groupByWorker, boolean addMemory) {\n+    Optional<String> workerHostName = groupByWorker ? Optional.of(\"total\") : Optional.empty();\n     if (summarize) {\n       long totalSize = 0;\n       long sizeInAlluxio = 0;\n       long sizeInMem = 0;\n+      Map<String, Long> distributionMap = new HashMap<>();\n       for (URIStatus status : statuses) {\n         if (!status.isFolder()) {\n           long size = status.getLength();\n           totalSize += size;\n           sizeInMem += size * status.getInMemoryPercentage();\n           sizeInAlluxio += size * status.getInAlluxioPercentage();\n         }\n+        if (groupByWorker) {\n+          for (FileBlockInfo fileBlockInfo : status.getFileBlockInfos()) {\n+            long length = fileBlockInfo.getBlockInfo().getLength();\n+            for (BlockLocation blockLocation : fileBlockInfo.getBlockInfo().getLocations()) {\n+              distributionMap.put(blockLocation.getWorkerAddress().getHost(),\n+                      distributionMap.getOrDefault(\n+                              blockLocation.getWorkerAddress().getHost(), 0L) + length);\n+            }\n+          }\n+        }\n       }\n       String sizeMessage = readable ? FormatUtils.getSizeFromBytes(totalSize)\n           : String.valueOf(totalSize);\n       String inAlluxioMessage = getFormattedValues(readable, sizeInAlluxio / 100, totalSize);\n-      String inMemMessage = addMemory\n-          ? getFormattedValues(readable, sizeInMem / 100, totalSize) : \"\";\n-      printInfo(sizeMessage, inAlluxioMessage, inMemMessage, path.toString());\n+      Optional<String> inMemMessage = addMemory", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1Mzc4Mw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253783", "body": "This looks duplicate of another code block. Extract into a method?", "bodyText": "This looks duplicate of another code block. Extract into a method?", "bodyHTML": "<p dir=\"auto\">This looks duplicate of another code block. Extract into a method?</p>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:41:25Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,9 +178,27 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            for (FileBlockInfo fileBlockInfo : status.getFileBlockInfos()) {\n+              long length = fileBlockInfo.getBlockInfo().getLength();\n+              for (BlockLocation blockLocation : fileBlockInfo.getBlockInfo().getLocations()) {\n+                distributionMap.put(blockLocation.getWorkerAddress().getHost(),\n+                        distributionMap.getOrDefault(\n+                                blockLocation.getWorkerAddress().getHost(), 0L) + length);\n+              }\n+            }", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1MzgzMQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499253831", "body": "Why need Optional?", "bodyText": "Why need Optional?", "bodyHTML": "<p dir=\"auto\">Why need Optional?</p>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:41:50Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,9 +178,27 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            for (FileBlockInfo fileBlockInfo : status.getFileBlockInfos()) {\n+              long length = fileBlockInfo.getBlockInfo().getLength();\n+              for (BlockLocation blockLocation : fileBlockInfo.getBlockInfo().getLocations()) {\n+                distributionMap.put(blockLocation.getWorkerAddress().getHost(),\n+                        distributionMap.getOrDefault(\n+                                blockLocation.getWorkerAddress().getHost(), 0L) + length);\n+              }\n+            }\n+          }\n+          Optional<String> inMem = inMemMessage.isPresent() ? Optional.of(\"\") : inMemMessage;", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1NDU0NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r499254545", "body": "There should be multiple ways to make this better:\r\n1. Generate the FORMAT string based on whether the optional are present, then `String.format(generatedFormat, obj[])` give it the format and the list of strings. You can decide how many items in the obj[] based on whether they are present.\r\n\r\n2. Also generate the format, with 5 elements, but if one element (for example `inMemMessage.equals(\"\")`) then you can change the length for that part to maybe 0 or 1?\r\n\r\n3. Up to you if you have better ideas.", "bodyText": "There should be multiple ways to make this better:\n\n\nGenerate the FORMAT string based on whether the optional are present, then String.format(generatedFormat, obj[]) give it the format and the list of strings. You can decide how many items in the obj[] based on whether they are present.\n\n\nAlso generate the format, with 5 elements, but if one element (for example inMemMessage.equals(\"\")) then you can change the length for that part to maybe 0 or 1?\n\n\nUp to you if you have better ideas.", "bodyHTML": "<p dir=\"auto\">There should be multiple ways to make this better:</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Generate the FORMAT string based on whether the optional are present, then <code>String.format(generatedFormat, obj[])</code> give it the format and the list of strings. You can decide how many items in the obj[] based on whether they are present.</p>\n</li>\n<li>\n<p dir=\"auto\">Also generate the format, with 5 elements, but if one element (for example <code>inMemMessage.equals(\"\")</code>) then you can change the length for that part to maybe 0 or 1?</p>\n</li>\n<li>\n<p dir=\"auto\">Up to you if you have better ideas.</p>\n</li>\n</ol>", "author": "jiacheliu3", "createdAt": "2020-10-04T14:49:16Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -171,17 +229,29 @@ private static String getFormattedValues(boolean readable, long size, long total\n    * @param inAlluxioMessage the in Alluxio size message to print\n    * @param inMemMessage the in memory size message to print\n    * @param path the path to print\n+   * @param workerHostName the worker host name to print\n    */\n-  private static void printInfo(String sizeMessage,\n-      String inAlluxioMessage, String inMemMessage, String path) {\n-    System.out.println(inMemMessage.isEmpty()\n-        ? String.format(SHORT_INFO_FORMAT, sizeMessage, inAlluxioMessage, path)\n-        : String.format(LONG_INFO_FORMAT, sizeMessage, inAlluxioMessage, inMemMessage, path));\n+  private static void printInfo(String sizeMessage, String inAlluxioMessage,\n+      Optional<String> inMemMessage, String path, Optional<String> workerHostName) {\n+    String message;\n+    if (inMemMessage.isPresent() && workerHostName.isPresent()) {\n+      message = String.format(LONG_INFO_FORMAT, sizeMessage, inAlluxioMessage,\n+              inMemMessage.get(), workerHostName.get(), path);\n+    } else if (inMemMessage.isPresent()) {\n+      message = String.format(MID_1_INFO_FORMAT, sizeMessage, inAlluxioMessage,\n+              inMemMessage.get(), path);\n+    } else if (workerHostName.isPresent()) {\n+      message = String.format(MID_2_INFO_FORMAT, sizeMessage, inAlluxioMessage,\n+              workerHostName.get(), path);\n+    } else {\n+      message = String.format(SHORT_INFO_FORMAT, sizeMessage, inAlluxioMessage, path);\n+    }\n+    System.out.println(message);", "originalCommit": "b8e0c1bcf08ab92c981c381964e451b8f0c6c448", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bd7ce81fbf82f0a1e2979994f7b96fbed758ad21", "url": "https://github.com/Alluxio/alluxio/commit/bd7ce81fbf82f0a1e2979994f7b96fbed758ad21", "message": "Add two method with re-use codes in DuCommand", "committedDate": "2020-10-05T14:03:35Z", "type": "commit"}, {"oid": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "url": "https://github.com/Alluxio/alluxio/commit/49e53522d99f5be0c9c76bc2287ad68deb3e10db", "message": "Add print format comment for DuCommand", "committedDate": "2020-10-06T05:12:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMjIzNg==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500412236", "body": "\r\n```suggestion\r\n    expected += String.format(\"File Size     In Alluxio       Path%n%s%n\", \r\n          ExceptionMessage.PATH_DOES_NOT_EXIST.getMessage(\"/testRoot/noneExisting\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                expected += \"File Size     In Alluxio       Path\\n\";\n          \n          \n            \n                expected += ExceptionMessage.PATH_DOES_NOT_EXIST.getMessage(\"/testRoot/noneExisting\") + \"\\n\";\n          \n          \n            \n                expected += String.format(\"File Size     In Alluxio       Path%n%s%n\", \n          \n          \n            \n                      ExceptionMessage.PATH_DOES_NOT_EXIST.getMessage(\"/testRoot/noneExisting\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    expected <span class=\"pl-k\">+=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File Size     In Alluxio       Path<span class=\"pl-cce x x-first\">\\n</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first\">expected </span><span class=\"pl-k x\">+=</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">ExceptionMessage</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PATH_DOES_NOT_EXIST</span><span class=\"pl-k\">.</span>getMessage(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/testRoot/noneExisting<span class=\"pl-pds\">\"</span></span>)<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-cce x\">\\n</span><span class=\"pl-pds x x-last\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    expected <span class=\"pl-k\">+=</span> <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">format(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File Size     In Alluxio       Path<span class=\"x x-first\">%n%s%n</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"x x-first x-last\">      </span><span class=\"pl-smi\">ExceptionMessage</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PATH_DOES_NOT_EXIST</span><span class=\"pl-k\">.</span>getMessage(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/testRoot/noneExisting<span class=\"pl-pds\">\"</span></span>)<span class=\"x x-first x-last\">)</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T15:54:44Z", "path": "tests/src/test/java/alluxio/client/cli/fs/command/DuCommandIntegrationTest.java", "diffHunk": "@@ -40,24 +40,42 @@ public void du() throws Exception {\n     sFsShell.run(\"du\", \"/testRoot/noneExisting\");\n     expected += \"File Size     In Alluxio       Path\\n\";\n     expected += ExceptionMessage.PATH_DOES_NOT_EXIST.getMessage(\"/testRoot/noneExisting\") + \"\\n\";", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMzc4MA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500413780", "body": "```suggestion\r\n  // File Size     In Alluxio       In Memory        Worker Host Name          Path\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              //File Size     In Alluxio       In Memory        Worker Host Name          Path\n          \n          \n            \n              // File Size     In Alluxio       In Memory        Worker Host Name          Path", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span>File Size     In Alluxio       In Memory        Worker Host Name          Path</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>File Size     In Alluxio       In Memory        Worker Host Name          Path</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T15:56:47Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,20 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n-  private static final String SHORT_INFO_FORMAT = \"%-13s %-16s %s\";\n+  //File Size     In Alluxio       In Memory        Worker Host Name          Path", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMzk4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500413985", "body": "Same here", "bodyText": "Same here", "bodyHTML": "<p dir=\"auto\">Same here</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T15:57:04Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,20 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n-  private static final String SHORT_INFO_FORMAT = \"%-13s %-16s %s\";\n+  //File Size     In Alluxio       In Memory        Worker Host Name          Path\n+  private static final String G_MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n+  //File Size     In Alluxio       In Memory        Path", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDQ2OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500414469", "body": "What about changing \"G\" to \"GROUPED\"?", "bodyText": "What about changing \"G\" to \"GROUPED\"?", "bodyHTML": "<p dir=\"auto\">What about changing \"G\" to \"GROUPED\"?</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T15:57:46Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,20 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n-  private static final String SHORT_INFO_FORMAT = \"%-13s %-16s %s\";\n+  //File Size     In Alluxio       In Memory        Worker Host Name          Path\n+  private static final String G_MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %-25s %s\";", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDc4NA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500414784", "body": "Does it make sense to work with `-m` too?", "bodyText": "Does it make sense to work with -m too?", "bodyHTML": "<p dir=\"auto\">Does it make sense to work with <code>-m</code> too?</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T15:58:15Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,20 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n-  private static final String SHORT_INFO_FORMAT = \"%-13s %-16s %s\";\n+  //File Size     In Alluxio       In Memory        Worker Host Name          Path\n+  private static final String G_MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n+  //File Size     In Alluxio       In Memory        Path\n+  private static final String MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %s\";\n+  //File Size     In Alluxio       Worker Host Name          Path\n+  private static final String G_OPTION_FORMAT = \"%-13s %-16s %-25s %s\";\n+  //File Size     In Alluxio       Path\n+  private static final String NON_G_MEMORY_FORMAT = \"%-13s %-16s %s\";\n   private static final String VALUE_AND_PERCENT_FORMAT = \"%s (%d%%)\";\n \n   private static final String MEMORY_OPTION_NAME = \"memory\";", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNTE3Mg==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500415172", "bodyText": "--memory is the full option name and -m is the short form. You can refer to how other options are done.", "author": "jiacheliu3", "createdAt": "2020-10-06T15:58:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDc4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxOTY4NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500419685", "body": "Reorder the parameters so the two Optionals are together?", "bodyText": "Reorder the parameters so the two Optionals are together?", "bodyHTML": "<p dir=\"auto\">Reorder the parameters so the two Optionals are together?</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T16:05:03Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -171,17 +256,29 @@ private static String getFormattedValues(boolean readable, long size, long total\n    * @param inAlluxioMessage the in Alluxio size message to print\n    * @param inMemMessage the in memory size message to print\n    * @param path the path to print\n+   * @param workerHostName the worker host name to print\n    */\n-  private static void printInfo(String sizeMessage,\n-      String inAlluxioMessage, String inMemMessage, String path) {\n-    System.out.println(inMemMessage.isEmpty()\n-        ? String.format(SHORT_INFO_FORMAT, sizeMessage, inAlluxioMessage, path)\n-        : String.format(LONG_INFO_FORMAT, sizeMessage, inAlluxioMessage, inMemMessage, path));\n+  private static void printInfo(String sizeMessage, String inAlluxioMessage,\n+      Optional<String> inMemMessage, String path, Optional<String> workerHostName) {", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyMDU5Ng==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500420596", "body": "Did you just re-use this variable? Try not to do this.", "bodyText": "Did you just re-use this variable? Try not to do this.", "bodyHTML": "<p dir=\"auto\">Did you just re-use this variable? Try not to do this.</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T16:06:18Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,14 +182,55 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyNzA1Mg==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500427052", "body": "```suggestion\r\n      // If inMemMessage is present, the \u201cIn Alluxio\u201d and \"Worker Host Name\"\r\n      // columns need an empty string as placeholders. \r\n      // Otherwise we use an empty Optional.\r\n      // e.g. inMemMessage is present, inMem should be \"\"\r\n      // File Size     In Alluxio       In Memory        Worker Host Name          Path\r\n      // 2                 2                    2                        total                                  /\r\n      //                    2                                              node1\r\n      //e.g. inMemMessage is not present, inMem should be an empty Optional\r\n      //File Size     In Alluxio       Worker Host Name          Path\r\n      //2                 2                    total                                  /\r\n      //                   2                    node1\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //If inMemMessage is present, underline information composed with In-Alluxio size\n          \n          \n            \n                  //and worker host name need a \"\" as placeholder. If inMemMessage is not present,\n          \n          \n            \n                  //which means inMemMessage is not exist, underline information need an empty Optional.\n          \n          \n            \n                  //e.g. inMemMessage is present, inMem should be \"\"\n          \n          \n            \n                  //File Size     In Alluxio       In Memory        Worker Host Name          Path\n          \n          \n            \n                  //2             2                2                total                     /\n          \n          \n            \n                  //              2                                 node1\n          \n          \n            \n                  //e.g. inMemMessage is not present, inMem should be an empty Optional\n          \n          \n            \n                  //File Size     In Alluxio       Worker Host Name          Path\n          \n          \n            \n                  //2             2                total                     /\n          \n          \n            \n                  //              2                node1\n          \n          \n            \n                  // If inMemMessage is present, the \u201cIn Alluxio\u201d and \"Worker Host Name\"\n          \n          \n            \n                  // columns need an empty string as placeholders. \n          \n          \n            \n                  // Otherwise we use an empty Optional.\n          \n          \n            \n                  // e.g. inMemMessage is present, inMem should be \"\"\n          \n          \n            \n                  // File Size     In Alluxio       In Memory        Worker Host Name          Path\n          \n          \n            \n                  // 2                 2                    2                        total                                  /\n          \n          \n            \n                  //                    2                                              node1\n          \n          \n            \n                  //e.g. inMemMessage is not present, inMem should be an empty Optional\n          \n          \n            \n                  //File Size     In Alluxio       Worker Host Name          Path\n          \n          \n            \n                  //2                 2                    total                                  /\n          \n          \n            \n                  //                   2                    node1", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>If inMemMessage is present, <span class=\"x x-first x-last\">underline information composed with In-Alluxio size</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\">and worker host name </span>need <span class=\"x x-first x-last\">a \"\" </span>as <span class=\"x x-first x-last\">placeholder. If inMemMessage is not present,</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\">which means inMemMessage is not exist, underline information need</span> an empty Optional.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>e.g. inMemMessage is present, inMem should be \"\"</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>File Size     In Alluxio       In Memory        Worker Host Name          Path</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>2             2                2                total                     /</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>              <span class=\"x x-first x-last\">2</span>                                 node1</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>e.g. inMemMessage is not present, inMem should be an empty Optional</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>File Size     In Alluxio       Worker Host Name          Path</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>2             2                total                     /</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>              <span class=\"x x-first x-last\">2</span>                node1</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>If inMemMessage is present, <span class=\"x x-first x-last\">the \u201cIn Alluxio\u201d and \"Worker Host Name\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> columns </span>need <span class=\"x x-first x-last\">an empty string </span>as <span class=\"x x-first x-last\">placeholders. </span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> Otherwise we use</span> an empty Optional.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>e.g. inMemMessage is present, inMem should be \"\"</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>File Size     In Alluxio       In Memory        Worker Host Name          Path</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>2             <span class=\"x x-first x-last\">    </span>2                <span class=\"x x-first x-last\">    </span>2                <span class=\"x x-first x-last\">        </span>total<span class=\"x x-first x-last\">             </span>                     /</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>              <span class=\"x x-first x-last\">      2             </span>                                 node1</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>e.g. inMemMessage is not present, inMem should be an empty Optional</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>File Size     In Alluxio       Worker Host Name          Path</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>2             <span class=\"x x-first x-last\">    </span>2                <span class=\"x x-first x-last\">    </span>total<span class=\"x x-first x-last\">             </span>                     /</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span>              <span class=\"x x-first x-last\">     2    </span>                node1</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:16:15Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -108,28 +130,50 @@ protected void runPlainPath(AlluxioURI path, CommandLine cl)\n    * @param statuses the statuses of files and folders\n    * @param readable whether to print info of human readable format\n    * @param summarize whether to display the aggregate summary lengths\n+   * @param groupByWorker whether to display In-Alluxio groupByWorker\n    * @param addMemory whether to display the memory size and percentage information\n    */\n   protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n-      boolean readable, boolean summarize, boolean addMemory) {\n+      boolean readable, boolean summarize, boolean groupByWorker, boolean addMemory) {\n+    Optional<String> workerHostName = groupByWorker ? Optional.of(\"total\") : Optional.empty();\n     if (summarize) {\n       long totalSize = 0;\n       long sizeInAlluxio = 0;\n       long sizeInMem = 0;\n+      Map<String, Long> distributionMap = new HashMap<>();\n       for (URIStatus status : statuses) {\n         if (!status.isFolder()) {\n           long size = status.getLength();\n           totalSize += size;\n           sizeInMem += size * status.getInMemoryPercentage();\n           sizeInAlluxio += size * status.getInAlluxioPercentage();\n         }\n+        if (groupByWorker) {\n+          fillDistributionMap(distributionMap, status);\n+        }\n       }\n       String sizeMessage = readable ? FormatUtils.getSizeFromBytes(totalSize)\n           : String.valueOf(totalSize);\n       String inAlluxioMessage = getFormattedValues(readable, sizeInAlluxio / 100, totalSize);\n-      String inMemMessage = addMemory\n-          ? getFormattedValues(readable, sizeInMem / 100, totalSize) : \"\";\n-      printInfo(sizeMessage, inAlluxioMessage, inMemMessage, path.toString());\n+      Optional<String> inMemMessage = addMemory\n+          ? Optional.of(getFormattedValues(readable, sizeInMem / 100, totalSize))\n+              : Optional.empty();\n+\n+      printInfo(sizeMessage, inAlluxioMessage, inMemMessage, path.toString(), workerHostName);\n+\n+      //If inMemMessage is present, underline information composed with In-Alluxio size\n+      //and worker host name need a \"\" as placeholder. If inMemMessage is not present,\n+      //which means inMemMessage is not exist, underline information need an empty Optional.\n+      //e.g. inMemMessage is present, inMem should be \"\"\n+      //File Size     In Alluxio       In Memory        Worker Host Name          Path\n+      //2             2                2                total                     /\n+      //              2                                 node1\n+      //e.g. inMemMessage is not present, inMem should be an empty Optional\n+      //File Size     In Alluxio       Worker Host Name          Path\n+      //2             2                total                     /\n+      //              2                node1", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyNzcyNA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500427724", "body": "```suggestion\r\n   * Gets each block info under the url status, then accumulates block sizes\r\n   * grouped by the worker host name, finally records info into a distribution map.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Get each block info under the url status, then accumulate block size\n          \n          \n            \n               * grouped by worker host name, finally record info into distribution map.\n          \n          \n            \n               * Gets each block info under the url status, then accumulates block sizes\n          \n          \n            \n               * grouped by the worker host name, finally records info into a distribution map.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Get</span> each block info under the url status, then <span class=\"x x-first x-last\">accumulate</span> block <span class=\"x x-first x-last\">size</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> grouped by worker host name, <span class=\"pl-k\">finally</span> <span class=\"x x-first x-last\">record</span> info into distribution map.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Gets</span> each block info under the url status, then <span class=\"x x-first x-last\">accumulates</span> block <span class=\"x x-first x-last\">sizes</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> grouped by <span class=\"x x-first x-last\">the </span>worker host name, <span class=\"pl-k\">finally</span> <span class=\"x x-first x-last\">records</span> info into<span class=\"x x-first x-last\"> a</span> distribution map.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:17:14Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,14 +182,55 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            fillDistributionMap(distributionMap, status);\n+          }\n+          Optional<String> inMem = inMemMessage.isPresent() ? Optional.of(\"\") : inMemMessage;\n+          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath(), workerHostName);\n+          getSizeInfoGroupByWorker(distributionMap, readable, inMem);\n         }\n       }\n     }\n   }\n \n+  /**\n+   * Get each block info under the url status, then accumulate block size\n+   * grouped by worker host name, finally record info into distribution map.", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyNzk2OQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500427969", "body": "```suggestion\r\n   * @param status whether to print info in human readable format\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param status whether to print info of human readable format\n          \n          \n            \n               * @param status whether to print info in human readable format", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> status whether to print info <span class=\"x x-first x-last\">of</span> human readable format</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> status whether to print info <span class=\"x x-first x-last\">in</span> human readable format</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:17:38Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,14 +182,55 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            fillDistributionMap(distributionMap, status);\n+          }\n+          Optional<String> inMem = inMemMessage.isPresent() ? Optional.of(\"\") : inMemMessage;\n+          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath(), workerHostName);\n+          getSizeInfoGroupByWorker(distributionMap, readable, inMem);\n         }\n       }\n     }\n   }\n \n+  /**\n+   * Get each block info under the url status, then accumulate block size\n+   * grouped by worker host name, finally record info into distribution map.\n+   *\n+   * @param distributionMap map of workers and their total block size\n+   * @param status whether to print info of human readable format", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyODEwNw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500428107", "body": "```suggestion\r\n   * @param distributionMap map of workers to their total block sizes\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param distributionMap map of workers and their total block size\n          \n          \n            \n               * @param distributionMap map of workers to their total block sizes", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> distributionMap map of workers <span class=\"x x-first x-last\">and</span> their total block <span class=\"x x-first x-last\">size</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> distributionMap map of workers <span class=\"x x-first x-last\">to</span> their total block <span class=\"x x-first x-last\">sizes</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:17:48Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,14 +182,55 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            fillDistributionMap(distributionMap, status);\n+          }\n+          Optional<String> inMem = inMemMessage.isPresent() ? Optional.of(\"\") : inMemMessage;\n+          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath(), workerHostName);\n+          getSizeInfoGroupByWorker(distributionMap, readable, inMem);\n         }\n       }\n     }\n   }\n \n+  /**\n+   * Get each block info under the url status, then accumulate block size\n+   * grouped by worker host name, finally record info into distribution map.\n+   *\n+   * @param distributionMap map of workers and their total block size", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMDE5Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500430197", "body": "I guess maybe this one can be named `SHORT_INFO_FORMAT`? What do you think?", "bodyText": "I guess maybe this one can be named SHORT_INFO_FORMAT? What do you think?", "bodyHTML": "<p dir=\"auto\">I guess maybe this one can be named <code>SHORT_INFO_FORMAT</code>? What do you think?</p>", "author": "jiacheliu3", "createdAt": "2020-10-06T16:20:56Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -38,13 +42,20 @@\n @ThreadSafe\n @PublicApi\n public final class DuCommand extends AbstractFileSystemCommand {\n-  private static final String LONG_INFO_FORMAT = \"%-13s %-16s %-16s %s\";\n-  private static final String SHORT_INFO_FORMAT = \"%-13s %-16s %s\";\n+  //File Size     In Alluxio       In Memory        Worker Host Name          Path\n+  private static final String G_MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %-25s %s\";\n+  //File Size     In Alluxio       In Memory        Path\n+  private static final String MEMORY_OPTION_FORMAT = \"%-13s %-16s %-16s %s\";\n+  //File Size     In Alluxio       Worker Host Name          Path\n+  private static final String G_OPTION_FORMAT = \"%-13s %-16s %-25s %s\";\n+  //File Size     In Alluxio       Path\n+  private static final String NON_G_MEMORY_FORMAT = \"%-13s %-16s %s\";", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMDgxMw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500430813", "body": "```suggestion\r\n   * @param groupByWorker whether to group by worker\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param groupByWorker whether to display In-Alluxio groupByWorker\n          \n          \n            \n               * @param groupByWorker whether to group by worker", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> groupByWorker whether to <span class=\"x x-first\">display </span><span class=\"pl-smi x\">In</span><span class=\"pl-k x\">-</span><span class=\"pl-smi x\">Alluxio</span><span class=\"x x-last\"> groupByWorker</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> groupByWorker whether to <span class=\"x x-first x-last\">group by worker</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:21:54Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -108,28 +130,50 @@ protected void runPlainPath(AlluxioURI path, CommandLine cl)\n    * @param statuses the statuses of files and folders\n    * @param readable whether to print info of human readable format\n    * @param summarize whether to display the aggregate summary lengths\n+   * @param groupByWorker whether to display In-Alluxio groupByWorker", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzMTA5Nw==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500431097", "body": "```suggestion\r\n                  .desc(\"display information for In-Alluxio data size under the path, \"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              .desc(\"displays information for In-Alluxio data size under the path, \"\n          \n          \n            \n                              .desc(\"display information for In-Alluxio data size under the path, \"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  .desc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">displays</span> information for In-Alluxio data size under the path, <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  .desc(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">display</span> information for In-Alluxio data size under the path, <span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jiacheliu3", "createdAt": "2020-10-06T16:22:17Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -68,6 +79,14 @@\n           .desc(\"display the aggregate summary of file lengths being displayed\")\n           .build();\n \n+  private static final Option GROUP_BY_WORKER_OPTION =\n+          Option.builder(GROUP_BY_WORKER_OPTION_NAME)\n+                  .required(false)\n+                  .hasArg(false)\n+                  .desc(\"displays information for In-Alluxio data size under the path, \"", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwNjc4Mg==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500506782", "body": "wrong indentation, please refer to https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#javadoc-style", "bodyText": "wrong indentation, please refer to https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#javadoc-style", "bodyHTML": "<p dir=\"auto\">wrong indentation, please refer to <a href=\"https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#javadoc-style\" rel=\"nofollow\">https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#javadoc-style</a></p>", "author": "apc999", "createdAt": "2020-10-06T18:23:32Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -68,6 +79,14 @@\n           .desc(\"display the aggregate summary of file lengths being displayed\")\n           .build();\n \n+  private static final Option GROUP_BY_WORKER_OPTION =\n+          Option.builder(GROUP_BY_WORKER_OPTION_NAME)", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNjgwMA==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500516800", "body": "How about `distributionMap.compute` instead of `distributtionMap.put` ?", "bodyText": "How about distributionMap.compute instead of distributtionMap.put ?", "bodyHTML": "<p dir=\"auto\">How about <code>distributionMap.compute</code> instead of <code>distributtionMap.put</code> ?</p>", "author": "apc999", "createdAt": "2020-10-06T18:39:24Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -138,14 +182,55 @@ protected static void getSizeInfo(AlluxioURI path, List<URIStatus> statuses,\n               : String.valueOf(totalSize);\n           String inAlluxioMessage = getFormattedValues(readable,\n               status.getInAlluxioPercentage() * totalSize / 100, totalSize);\n-          String inMemMessage = addMemory ? getFormattedValues(readable,\n-              status.getInMemoryPercentage() * totalSize / 100, totalSize) : \"\";\n-          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath());\n+          Optional<String> inMemMessage = addMemory ? Optional.of(getFormattedValues(readable,\n+              status.getInMemoryPercentage() * totalSize / 100, totalSize)) : Optional.empty();\n+\n+          Map<String, Long> distributionMap = new HashMap<>();\n+          if (groupByWorker) {\n+            fillDistributionMap(distributionMap, status);\n+          }\n+          Optional<String> inMem = inMemMessage.isPresent() ? Optional.of(\"\") : inMemMessage;\n+          printInfo(sizeMessage, inAlluxioMessage, inMemMessage, status.getPath(), workerHostName);\n+          getSizeInfoGroupByWorker(distributionMap, readable, inMem);\n         }\n       }\n     }\n   }\n \n+  /**\n+   * Get each block info under the url status, then accumulate block size\n+   * grouped by worker host name, finally record info into distribution map.\n+   *\n+   * @param distributionMap map of workers and their total block size\n+   * @param status whether to print info of human readable format\n+   */\n+  private static void fillDistributionMap(Map<String, Long> distributionMap, URIStatus status) {\n+    for (FileBlockInfo fileBlockInfo : status.getFileBlockInfos()) {\n+      long length = fileBlockInfo.getBlockInfo().getLength();\n+      for (BlockLocation blockLocation : fileBlockInfo.getBlockInfo().getLocations()) {\n+        distributionMap.put(blockLocation.getWorkerAddress().getHost(),", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUxNzYxNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11942#discussion_r500517615", "body": "nit: sort these lines alphabetically ", "bodyText": "nit: sort these lines alphabetically", "bodyHTML": "<p dir=\"auto\">nit: sort these lines alphabetically</p>", "author": "apc999", "createdAt": "2020-10-06T18:40:43Z", "path": "shell/src/main/java/alluxio/cli/fs/command/DuCommand.java", "diffHunk": "@@ -196,8 +293,11 @@ public void validateArgs(CommandLine cl) throws InvalidArgumentException {\n \n   @Override\n   public Options getOptions() {\n-    return new Options().addOption(MEMORY_OPTION)\n-        .addOption(READABLE_OPTION).addOption(SUMMARIZE_OPTION);\n+    return new Options()\n+        .addOption(MEMORY_OPTION)", "originalCommit": "49e53522d99f5be0c9c76bc2287ad68deb3e10db", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5fb8b3d3561e7df4591c4547a066eaf11108bdb3", "url": "https://github.com/Alluxio/alluxio/commit/5fb8b3d3561e7df4591c4547a066eaf11108bdb3", "message": "use map compute instead of put", "committedDate": "2020-10-07T16:58:23Z", "type": "commit"}]}