{"pr_number": 11548, "pr_title": "Use ttfb field to filter profile output", "pr_author": "HelloHorizon", "pr_createdAt": "2020-06-11T03:58:22Z", "pr_url": "https://github.com/Alluxio/alluxio/pull/11548", "timeline": [{"oid": "dd2b298b66224c6999ef9b8144dc8eb9dd0c5ee0", "url": "https://github.com/Alluxio/alluxio/commit/dd2b298b66224c6999ef9b8144dc8eb9dd0c5ee0", "message": "Change ttfb filter to ttfb flag filter", "committedDate": "2020-06-11T03:56:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1MTE2NQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438551165", "body": "Instead of passing in this via the parameters, can we just introduce a simple java class that just stores the json fields? Then, we can let the `nameTransformer` be a `Function<ProfileClass, String>` and the function implementation can deal with it how it chooses.", "bodyText": "Instead of passing in this via the parameters, can we just introduce a simple java class that just stores the json fields? Then, we can let the nameTransformer be a Function<ProfileClass, String> and the function implementation can deal with it how it chooses.", "bodyHTML": "<p dir=\"auto\">Instead of passing in this via the parameters, can we just introduce a simple java class that just stores the json fields? Then, we can let the <code>nameTransformer</code> be a <code>Function&lt;ProfileClass, String&gt;</code> and the function implementation can deal with it how it chooses.</p>", "author": "gpang", "createdAt": "2020-06-11T05:31:10Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/Benchmark.java", "diffHunk": "@@ -167,13 +167,14 @@ public String run(String[] args) throws Exception {\n    *\n    * @param startMs the start time\n    * @param endMs the end time\n+   * @param isTTFB check if method is time to first byte function\n    * @param nameTransformer function which transforms the type and method into a name. If the\n    *                        function returns null, then the method is skipped\n    * @return a map of names to statistics\n    */\n   @SuppressFBWarnings(value = \"DMI_HARDCODED_ABSOLUTE_FILENAME\")\n   protected Map<String, MethodStatistics> processMethodProfiles(long startMs, long endMs,\n-      BiFunction<String, String, String> nameTransformer) throws IOException {\n+      boolean isTTFB, BiFunction<String, String, String> nameTransformer) throws IOException {", "originalCommit": "dd2b298b66224c6999ef9b8144dc8eb9dd0c5ee0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2NzE4MQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438567181", "bodyText": "changed to Function<ProfileClass, String>.", "author": "HelloHorizon", "createdAt": "2020-06-11T06:24:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1MTE2NQ=="}], "type": "inlineReview"}, {"oid": "26919f425b870e68df847f9e3b1b0e2140fef499", "url": "https://github.com/Alluxio/alluxio/commit/26919f425b870e68df847f9e3b1b0e2140fef499", "message": "Change parsing parameters to parse object", "committedDate": "2020-06-11T06:23:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDc2NA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438944764", "body": "```suggestion\r\n  protected static final class ProfileInput {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected static final class JavaAgentInput {\n          \n          \n            \n              protected static final class ProfileInput {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">JavaAgentInput</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">protected</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">ProfileInput</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gpang", "createdAt": "2020-06-11T17:17:40Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/Benchmark.java", "diffHunk": "@@ -230,6 +233,46 @@ public String run(String[] args) throws Exception {\n     return nameStatistics;\n   }\n \n+  protected static final class JavaAgentInput {", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MjUxNw==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438952517", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:31:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDc2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDgzOA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438944838", "body": "why is the setter needed?", "bodyText": "why is the setter needed?", "bodyHTML": "<p dir=\"auto\">why is the setter needed?</p>", "author": "gpang", "createdAt": "2020-06-11T17:17:50Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/Benchmark.java", "diffHunk": "@@ -230,6 +233,46 @@ public String run(String[] args) throws Exception {\n     return nameStatistics;\n   }\n \n+  protected static final class JavaAgentInput {\n+    private String mType;\n+    private String mMethod;\n+    private boolean mIsttfb;\n+\n+    JavaAgentInput(String type, String method, boolean isttfb) {\n+      mType = type;\n+      mMethod = method;\n+      mIsttfb = isttfb;\n+    }\n+\n+    /**\n+     * @return class type\n+     */\n+    public String getType() {\n+      return mType;\n+    }\n+\n+    /**\n+     * @return method name\n+     */\n+    public String getMethod() {\n+      return mMethod;\n+    }\n+\n+    /**\n+     * @return method name\n+     */\n+    public void setMethod(String method) {", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0OTQwNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438949405", "bodyText": "it is used in StressMasterBench.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:25:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDgzOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjE1NA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438946154", "body": "NIT: I think the term `nameTransformer` made more sense?", "bodyText": "NIT: I think the term nameTransformer made more sense?", "bodyHTML": "<p dir=\"auto\">NIT: I think the term <code>nameTransformer</code> made more sense?</p>", "author": "gpang", "createdAt": "2020-06-11T17:20:14Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/Benchmark.java", "diffHunk": "@@ -167,13 +167,13 @@ public String run(String[] args) throws Exception {\n    *\n    * @param startMs the start time\n    * @param endMs the end time\n-   * @param nameTransformer function which transforms the type and method into a name. If the\n+   * @param javaAgentTransformer function which transforms the type and method into a name. If the\n    *                        function returns null, then the method is skipped\n    * @return a map of names to statistics\n    */\n   @SuppressFBWarnings(value = \"DMI_HARDCODED_ABSOLUTE_FILENAME\")\n   protected Map<String, MethodStatistics> processMethodProfiles(long startMs, long endMs,\n-      BiFunction<String, String, String> nameTransformer) throws IOException {\n+      Function<JavaAgentInput, String> javaAgentTransformer) throws IOException {", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MjczOA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438952738", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:31:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjQ5MA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438946490", "body": "If the class was renamed, then this would probably be `profileInput`", "bodyText": "If the class was renamed, then this would probably be profileInput", "bodyHTML": "<p dir=\"auto\">If the class was renamed, then this would probably be <code>profileInput</code></p>", "author": "gpang", "createdAt": "2020-06-11T17:20:50Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "diffHunk": "@@ -215,13 +215,15 @@ public synchronized void addAdditionalResult() throws IOException {\n         return;\n       }\n       Map<String, MethodStatistics> nameStatistics =\n-          processMethodProfiles(mResult.getRecordStartMs(), mResult.getEndMs(), (type, method) -> {\n-            if (type.contains(\"RPC\")) {\n-              final int classNameDivider = method.lastIndexOf(\".\");\n-              method = method.substring(classNameDivider + 1);\n-            }\n-            return type + \":\" + method;\n-          });\n+          processMethodProfiles(mResult.getRecordStartMs(), mResult.getEndMs(),\n+              javaAgentInput -> {", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MjkzOQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438952939", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:32:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjQ5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjU0NA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438946544", "body": "If the class was renamed, then this would probably be `profileInput`", "bodyText": "If the class was renamed, then this would probably be profileInput", "bodyHTML": "<p dir=\"auto\">If the class was renamed, then this would probably be <code>profileInput</code></p>", "author": "gpang", "createdAt": "2020-06-11T17:20:56Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/client/StressClientIOBench.java", "diffHunk": "@@ -195,13 +195,9 @@ public ClientIOTaskResult runLocal() throws Exception {\n     Map<String, SummaryStatistics> summaryStatistics = new HashMap<>();\n \n     Map<String, MethodStatistics> nameStatistics =\n-        processMethodProfiles(startMs, endMs, (type, method) -> {\n-          if ((type.equals(\"AlluxioBlockInStream\") && method.equals(\"readChunk\")) || (\n-              type.equals(\"HDFSPacketReceiver\") && method.equals(\"doRead\")) || (\n-              type.equals(\"HDFSBlockReaderRemote\")\n-                  && method.equals(\"newBlockReader\")\n-                  || method.equals(\"readChunk\"))) {\n-            return method;\n+        processMethodProfiles(startMs, endMs, javaAgentInput -> {\n+          if (javaAgentInput.getIsttfb()) {", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1MzEyNA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438953124", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:32:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjU0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjU3MA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438956570", "body": "this should not set the input, but just have local variables, to construct the name with.", "bodyText": "this should not set the input, but just have local variables, to construct the name with.", "bodyHTML": "<p dir=\"auto\">this should not set the input, but just have local variables, to construct the name with.</p>", "author": "gpang", "createdAt": "2020-06-11T17:38:51Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "diffHunk": "@@ -215,13 +215,15 @@ public synchronized void addAdditionalResult() throws IOException {\n         return;\n       }\n       Map<String, MethodStatistics> nameStatistics =\n-          processMethodProfiles(mResult.getRecordStartMs(), mResult.getEndMs(), (type, method) -> {\n-            if (type.contains(\"RPC\")) {\n-              final int classNameDivider = method.lastIndexOf(\".\");\n-              method = method.substring(classNameDivider + 1);\n-            }\n-            return type + \":\" + method;\n-          });\n+          processMethodProfiles(mResult.getRecordStartMs(), mResult.getEndMs(),\n+              javaAgentInput -> {\n+              if (javaAgentInput.getType().contains(\"RPC\")) {\n+                final int classNameDivider = javaAgentInput.getMethod().lastIndexOf(\".\");\n+                javaAgentInput.setMethod(", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2ODgyOQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438968829", "bodyText": "Got u.", "author": "HelloHorizon", "createdAt": "2020-06-11T17:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjU3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MzQ1MA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438973450", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T18:00:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjcwNA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438956704", "body": "these all should be `final`.", "bodyText": "these all should be final.", "bodyHTML": "<p dir=\"auto\">these all should be <code>final</code>.</p>", "author": "gpang", "createdAt": "2020-06-11T17:39:06Z", "path": "stress/shell/src/main/java/alluxio/stress/cli/Benchmark.java", "diffHunk": "@@ -230,6 +233,46 @@ public String run(String[] args) throws Exception {\n     return nameStatistics;\n   }\n \n+  protected static final class JavaAgentInput {\n+    private String mType;", "originalCommit": "26919f425b870e68df847f9e3b1b0e2140fef499", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2MDQ2NA==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438960464", "bodyText": "do you want me to remove the setMethod() in ProfileInput?", "author": "HelloHorizon", "createdAt": "2020-06-11T17:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjcwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3MzQxNQ==", "url": "https://github.com/Alluxio/alluxio/pull/11548#discussion_r438973415", "bodyText": "changed.", "author": "HelloHorizon", "createdAt": "2020-06-11T18:00:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1NjcwNA=="}], "type": "inlineReview"}, {"oid": "ddbe7607384a4cd0aaeb385d9720657425ccadcb", "url": "https://github.com/Alluxio/alluxio/commit/ddbe7607384a4cd0aaeb385d9720657425ccadcb", "message": "Rename JavaAgentInput to ProfileInput", "committedDate": "2020-06-11T17:52:51Z", "type": "commit"}, {"oid": "cca7113956c100e78aab3fa52a100e620ba16046", "url": "https://github.com/Alluxio/alluxio/commit/cca7113956c100e78aab3fa52a100e620ba16046", "message": "Change method call in StressMasterBench", "committedDate": "2020-06-11T18:04:40Z", "type": "commit"}]}