{"pr_number": 3032, "pr_title": "[DROOLS-5517] Enhance DMNResult/DMNContext to be able to return stron\u2026", "pr_author": "tkobayas", "pr_createdAt": "2020-08-05T08:40:07Z", "pr_url": "https://github.com/kiegroup/drools/pull/3032", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzNDgxNQ==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r466434815", "body": "I am not sure we need for a context to hold reference for an input Vs output, given this would lead to a different design and semantic.\r\n\r\nI believe it should be possible to keep `DMNContextFPAImpl` as is.\r\n\r\nI also believe it should be possible to keep `DMNResultImpl` without any need for an additional specialization, but this less of a concern to me.\r\n\r\nWhen the `DMNRuntimeImpl` creates the `DMNResultImpl`, it should be possible to supply a `DMNContext` which has for the _wrapped_ `FEELPropertyAccessible fpa` the full list of inputs,decisions,bkms, etc.\r\n\r\nWhat do you think?", "bodyText": "I am not sure we need for a context to hold reference for an input Vs output, given this would lead to a different design and semantic.\nI believe it should be possible to keep DMNContextFPAImpl as is.\nI also believe it should be possible to keep DMNResultImpl without any need for an additional specialization, but this less of a concern to me.\nWhen the DMNRuntimeImpl creates the DMNResultImpl, it should be possible to supply a DMNContext which has for the wrapped FEELPropertyAccessible fpa the full list of inputs,decisions,bkms, etc.\nWhat do you think?", "bodyHTML": "<p dir=\"auto\">I am not sure we need for a context to hold reference for an input Vs output, given this would lead to a different design and semantic.</p>\n<p dir=\"auto\">I believe it should be possible to keep <code>DMNContextFPAImpl</code> as is.</p>\n<p dir=\"auto\">I also believe it should be possible to keep <code>DMNResultImpl</code> without any need for an additional specialization, but this less of a concern to me.</p>\n<p dir=\"auto\">When the <code>DMNRuntimeImpl</code> creates the <code>DMNResultImpl</code>, it should be possible to supply a <code>DMNContext</code> which has for the <em>wrapped</em> <code>FEELPropertyAccessible fpa</code> the full list of inputs,decisions,bkms, etc.</p>\n<p dir=\"auto\">What do you think?</p>", "author": "tarilabs", "createdAt": "2020-08-06T14:01:31Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -29,12 +29,20 @@\n \n public class DMNContextFPAImpl implements DMNContext {\n \n-    private final FEELPropertyAccessible fpa;\n+    private final FEELPropertyAccessible inputSet;\n+    private final FEELPropertyAccessible outputSet;", "originalCommit": "27a29f8a54e8f82ef80b2ad0bba6a87689a9803b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0NjIwMw==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r466946203", "body": "Here I supply `OutputSet` class.", "bodyText": "Here I supply OutputSet class.", "bodyHTML": "<p dir=\"auto\">Here I supply <code>OutputSet</code> class.</p>", "author": "tkobayas", "createdAt": "2020-08-07T10:03:49Z", "path": "kie-dmn/kie-dmn-core/src/test/java/org/kie/dmn/core/stronglytyped/DMNRuntimeTypesTest.java", "diffHunk": "@@ -98,7 +99,8 @@ public void testOneOfEachType() {\n         assertThat(dmnResult.getDecisionResultByName(\"DecisionTime\").getResult(), is(LocalTime.of(10, 0)));\n \n         if (isTypeSafe()) {\n-            FEELPropertyAccessible outputSet = convertToOutputSet(dmnModel, dmnResult);\n+            DMNContextTypeSafeImpl resultContext = (DMNContextTypeSafeImpl)dmnResult.getContext();\n+            FEELPropertyAccessible outputSet = resultContext.getFpa(getOutputSetClass(dmnModel));", "originalCommit": "5c3708685e1526fddf9c4e00bbc6294c3d786709", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ec05a85067c99b9ca788bb3b9d123d6f0196708", "url": "https://github.com/kiegroup/drools/commit/5ec05a85067c99b9ca788bb3b9d123d6f0196708", "message": "- set Collection", "committedDate": "2020-08-24T07:14:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwODkwOA==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r478308908", "body": "```suggestion\r\n        DMNContextFPAImpl newCtx = new DMNContextFPAImpl(newFpa, metadata.asMap(), fallbackMap.clone());\r\n```\r\n\r\nI assume?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    DMNContextFPAImpl newCtx = new DMNContextFPAImpl(newFpa, metadata.asMap(), fallbackMap);\n          \n          \n            \n                    DMNContextFPAImpl newCtx = new DMNContextFPAImpl(newFpa, metadata.asMap(), fallbackMap.clone());\n          \n      \n    \n    \n  \n\nI assume?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">DMNContextFPAImpl</span> newCtx <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DMNContextFPAImpl</span>(newFpa, metadata<span class=\"pl-k\">.</span>asMap(), fallbackMap);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">DMNContextFPAImpl</span> newCtx <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DMNContextFPAImpl</span>(newFpa, metadata<span class=\"pl-k\">.</span>asMap(), fallbackMap<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">clone()</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I assume?</p>", "author": "tarilabs", "createdAt": "2020-08-27T10:12:50Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/core/impl/DMNContextFPAImpl.java", "diffHunk": "@@ -93,7 +149,15 @@ public DMNMetadata getMetadata() {\n \n     @Override\n     public DMNContext clone() {\n-        DMNContextImpl newCtx = new DMNContextImpl(fpa.allFEELProperties(), metadata.asMap());\n+        FEELPropertyAccessible newFpa;\n+        try {\n+            newFpa = fpa.getClass().getDeclaredConstructor().newInstance();\n+        } catch (InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException\n+                | NoSuchMethodException | SecurityException e) {\n+                    throw new DMNTypeSafeException(\"Exception while instantiating \" + fpa.getClass(), e);\n+        }\n+        newFpa.fromMap(fpa.allFEELProperties());\n+        DMNContextFPAImpl newCtx = new DMNContextFPAImpl(newFpa, metadata.asMap(), fallbackMap);", "originalCommit": "5ec05a85067c99b9ca788bb3b9d123d6f0196708", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7ec873ad0fa579486c6e9f09dd97fdebd6b3005f", "url": "https://github.com/kiegroup/drools/commit/7ec873ad0fa579486c6e9f09dd97fdebd6b3005f", "message": "[DROOLS-5517] Enhance DMNResult/DMNContext to be able to return strongly typed OutputSet", "committedDate": "2020-09-01T06:46:00Z", "type": "commit"}, {"oid": "7ec873ad0fa579486c6e9f09dd97fdebd6b3005f", "url": "https://github.com/kiegroup/drools/commit/7ec873ad0fa579486c6e9f09dd97fdebd6b3005f", "message": "[DROOLS-5517] Enhance DMNResult/DMNContext to be able to return strongly typed OutputSet", "committedDate": "2020-09-01T06:46:00Z", "type": "forcePushed"}, {"oid": "9b92f3b33028f019c58e7de7c172e958c7226e95", "url": "https://github.com/kiegroup/drools/commit/9b92f3b33028f019c58e7de7c172e958c7226e95", "message": "- cover evaluateById and evaluateByName", "committedDate": "2020-09-03T09:37:34Z", "type": "commit"}, {"oid": "0d6d49910fd615817a5a2bc4df888ba383685243", "url": "https://github.com/kiegroup/drools/commit/0d6d49910fd615817a5a2bc4df888ba383685243", "message": "- Move conversion to the test infrastructure", "committedDate": "2020-09-05T01:33:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NTE2Mw==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r485385163", "body": "just to be sure I understood the latest modifications. This `extraFields` is used to store the `DefinedKeySetField` which is a `Set<String>` of the properties which have been set on the Input/Output Set pojo. However, this is not really \"used\" so far, since DMNRuntimeImpl uses the Map-backed DMNContextImpl. Correct?\r\nIt's fine I just wanted to check the intention :) ", "bodyText": "just to be sure I understood the latest modifications. This extraFields is used to store the DefinedKeySetField which is a Set<String> of the properties which have been set on the Input/Output Set pojo. However, this is not really \"used\" so far, since DMNRuntimeImpl uses the Map-backed DMNContextImpl. Correct?\nIt's fine I just wanted to check the intention :)", "bodyHTML": "<p dir=\"auto\">just to be sure I understood the latest modifications. This <code>extraFields</code> is used to store the <code>DefinedKeySetField</code> which is a <code>Set&lt;String&gt;</code> of the properties which have been set on the Input/Output Set pojo. However, this is not really \"used\" so far, since DMNRuntimeImpl uses the Map-backed DMNContextImpl. Correct?<br>\nIt's fine I just wanted to check the intention :)</p>", "author": "tarilabs", "createdAt": "2020-09-09T07:06:55Z", "path": "kie-dmn/kie-dmn-core/src/main/java/org/kie/dmn/typesafe/AbstractDMNSetType.java", "diffHunk": "@@ -32,7 +32,8 @@\n \n abstract class AbstractDMNSetType implements TypeDefinition {\n \n-    List<DMNDeclaredField> fields = new ArrayList<>();\n+    List<DMNDeclaredField> dmnFields = new ArrayList<>();\n+    List<FieldDefinition> extraFields = new ArrayList<>();", "originalCommit": "0d6d49910fd615817a5a2bc4df888ba383685243", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MjE2OQ==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r486042169", "bodyText": "@tarilabs\nDefinedKeySetField is actually used now. When we start strongly typed DMN, we instantiate DMNContextFPAImpl with an OutputSet instance. Then, DMNContextFPAImpl is converted to DMNContextImpl for evaluation. At this point, we call fpa.allFEELProperties() inside DMNContextImpl.clone() to convert the FPA fields to a Map. Here, we need to distinguish between \"undefined\" (= don't put in the Map) and \"explicit null\" (= put the key with null value). So DefinedKeySetField mechanism is required.\nIf we use InputSet for the first DMNContextFPAImpl, we don't need this mechanism because InputSet doesn't have Decision node fields so we can always assume \"null\" is \"explicit null\". So... if we decide back to the approach \"Instantiate DMNContextFPAImpl with an InputSet instance first. Then convert the result to OutputSet\", I can remove the DefinedKeySetField. WDYT?", "author": "tkobayas", "createdAt": "2020-09-10T03:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NTE2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjE1MjMyMQ==", "url": "https://github.com/kiegroup/drools/pull/3032#discussion_r486152321", "bodyText": "oh I see now, thanks @tkobayas for the explanation, makes sense.\nI would say please leave this as-is.\nThis can be helpful for supporting the use case when for instance on Kogito, we want to supply pre-evaluated-decision via kogito scaffolding.\nGiven inputset and outputset are infrastructural classes and emerging by the design of the DMN model itself, I believe it is good we have this utility method to distinguish the cases, as you pointed out. I just wanted to be sure if it was actually used, and now I see how :)\nThanks!", "author": "tarilabs", "createdAt": "2020-09-10T08:16:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NTE2Mw=="}], "type": "inlineReview"}]}