{"pr_number": 2728, "pr_title": "DROOLS-4968: Guided Rule Editor removes matches statement from rule", "pr_author": "danielzhe", "pr_createdAt": "2020-01-20T12:32:28Z", "pr_url": "https://github.com/kiegroup/drools/pull/2728", "timeline": [{"oid": "e5980649db9174f9b4b54cd17874805c865e00f1", "url": "https://github.com/kiegroup/drools/commit/e5980649db9174f9b4b54cd17874805c865e00f1", "message": "RHPAM-2631: Guided Rule Editor removes matches statement from rule", "committedDate": "2020-01-22T17:52:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyMDAyNA==", "url": "https://github.com/kiegroup/drools/pull/2728#discussion_r369720024", "body": "I think we use instanceof in many places. Is is possible to change this to use it for consistency or is the `isAssignableFrom` check needed?", "bodyText": "I think we use instanceof in many places. Is is possible to change this to use it for consistency or is the isAssignableFrom check needed?", "bodyHTML": "<p dir=\"auto\">I think we use instanceof in many places. Is is possible to change this to use it for consistency or is the <code>isAssignableFrom</code> check needed?</p>", "author": "Rikkola", "createdAt": "2020-01-22T18:11:07Z", "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4291,6 +4292,17 @@ public FieldConstraint asFieldConstraint(final RuleModel m,\n                 comp.addConstraint(expr.asFieldConstraint(m,\n                                                           factPattern));\n             }\n+            String fieldName = \"\";\n+            for (FieldConstraint field : comp.getConstraints()) {\n+                if (SingleFieldConstraint.class.isAssignableFrom(field.getClass())) {", "originalCommit": "e5980649db9174f9b4b54cd17874805c865e00f1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "url": "https://github.com/kiegroup/drools/commit/2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "message": "DROOLS-4968: Guided Rule Editor removes matches statement from rule", "committedDate": "2020-01-22T18:34:09Z", "type": "commit"}, {"oid": "2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "url": "https://github.com/kiegroup/drools/commit/2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "message": "DROOLS-4968: Guided Rule Editor removes matches statement from rule", "committedDate": "2020-01-22T18:34:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2MDA1NQ==", "url": "https://github.com/kiegroup/drools/pull/2728#discussion_r369960055", "body": "Please simplify this as:\r\n```java\r\nif (StringUtils.isEmpty(constraint.getFieldName()) \r\n        && (Objects.equals(constraint.getOperator(), \"matches\") || Objects.equals(constraint.getOperator(), \"not matches\"))) {\r\n```", "bodyText": "Please simplify this as:\nif (StringUtils.isEmpty(constraint.getFieldName()) \n        && (Objects.equals(constraint.getOperator(), \"matches\") || Objects.equals(constraint.getOperator(), \"not matches\"))) {", "bodyHTML": "<p dir=\"auto\">Please simplify this as:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (StringUtils.isEmpty(constraint.getFieldName()) \n        &amp;&amp; (Objects.equals(constraint.getOperator(), &quot;matches&quot;) || Objects.equals(constraint.getOperator(), &quot;not matches&quot;))) {\"><pre><span class=\"pl-k\">if</span> (<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>isEmpty(constraint<span class=\"pl-k\">.</span>getFieldName()) \n        <span class=\"pl-k\">&amp;&amp;</span> (<span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(constraint<span class=\"pl-k\">.</span>getOperator(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>matches<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">||</span> <span class=\"pl-smi\">Objects</span><span class=\"pl-k\">.</span>equals(constraint<span class=\"pl-k\">.</span>getOperator(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>not matches<span class=\"pl-pds\">\"</span></span>))) {</pre></div>", "author": "jomarko", "createdAt": "2020-01-23T07:16:09Z", "path": "drools-workbench-models/drools-workbench-models-commons/src/main/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceImpl.java", "diffHunk": "@@ -4291,6 +4292,17 @@ public FieldConstraint asFieldConstraint(final RuleModel m,\n                 comp.addConstraint(expr.asFieldConstraint(m,\n                                                           factPattern));\n             }\n+            String fieldName = \"\";\n+            for (FieldConstraint field : comp.getConstraints()) {\n+                if (field instanceof SingleFieldConstraint) {\n+                    SingleFieldConstraint constraint = (SingleFieldConstraint) field;\n+                    if (StringUtils.isEmpty(constraint.getFieldName()) && !StringUtils.isEmpty(constraint.getOperator())\n+                            && (constraint.getOperator().equals(\"matches\") || constraint.getOperator().equals(\"not matches\"))) {", "originalCommit": "2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2MDgyMQ==", "url": "https://github.com/kiegroup/drools/pull/2728#discussion_r369960821", "body": "Maybe this would be good to mention also in `RuleModelDRLPersistenceImpl`, or wrap the new code there into some private method with some meaningful name. The name of the test is nice - helps to explain what is ongoing. ", "bodyText": "Maybe this would be good to mention also in RuleModelDRLPersistenceImpl, or wrap the new code there into some private method with some meaningful name. The name of the test is nice - helps to explain what is ongoing.", "bodyHTML": "<p dir=\"auto\">Maybe this would be good to mention also in <code>RuleModelDRLPersistenceImpl</code>, or wrap the new code there into some private method with some meaningful name. The name of the test is nice - helps to explain what is ongoing.</p>", "author": "jomarko", "createdAt": "2020-01-23T07:19:11Z", "path": "drools-workbench-models/drools-workbench-models-commons/src/test/java/org/drools/workbench/models/commons/backend/rule/RuleModelDRLPersistenceTest.java", "diffHunk": "@@ -5057,4 +5057,56 @@ public boolean hasDSLSentences() {\n \n         checkMarshalling(expected, model);\n     }\n+\n+    @Test\n+    public void testMatchesLegacyToNewVersion() {\n+\n+        // Fact(something != null && matches \"P.*\") = was supported before, now is deprecated.\n+        // It breaks the UI if user has a rule with this case, so we convert to the new format:\n+        // Fact(something != null && something matches \"P.*\")\n+        //                           ^^^^^^^^^", "originalCommit": "2948863ffeea0a8bc4352dc0f1cf7413a6d0858f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2OTYwNg==", "url": "https://github.com/kiegroup/drools/pull/2728#discussion_r369969606", "bodyText": "I vote for private method. Comments in code tend to get separated or not updated over long periods of time.", "author": "Rikkola", "createdAt": "2020-01-23T07:48:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2MDgyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExODY3Mw==", "url": "https://github.com/kiegroup/drools/pull/2728#discussion_r370118673", "bodyText": "Good idea! Thank you, guys!", "author": "danielzhe", "createdAt": "2020-01-23T13:34:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk2MDgyMQ=="}], "type": "inlineReview"}, {"oid": "aa73c7fe1d16588da7fd2360f2076e781c5d08fb", "url": "https://github.com/kiegroup/drools/commit/aa73c7fe1d16588da7fd2360f2076e781c5d08fb", "message": "Code review.", "committedDate": "2020-01-23T14:23:12Z", "type": "commit"}]}