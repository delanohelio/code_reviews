{"pr_number": 3264, "pr_title": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events", "pr_author": "fjtirado", "pr_createdAt": "2020-11-24T16:41:10Z", "pr_url": "https://github.com/kiegroup/drools/pull/3264", "timeline": [{"oid": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "url": "https://github.com/kiegroup/drools/commit/a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages", "committedDate": "2020-11-24T19:09:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NzEwNA==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r530887104", "body": "can be replaced with method reference\r\n```suggestion\r\n            notifyAllListeners(event, ProcessEventListener::onSignal);\r\n```", "bodyText": "can be replaced with method reference\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        notifyAllListeners(event, (l, e) -> l.onSignal(e));\n          \n          \n            \n                        notifyAllListeners(event, ProcessEventListener::onSignal);", "bodyHTML": "<p dir=\"auto\">can be replaced with method reference</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            notifyAllListeners(event, <span class=\"x x-first\">(l, e) </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> l</span><span class=\"pl-k x x-last\">.</span>onSignal<span class=\"x x-first x-last\">(e)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            notifyAllListeners(event, <span class=\"pl-smi x x-first\">ProcessEventListener</span><span class=\"pl-k x x-last\">::</span>onSignal);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-11-26T09:28:20Z", "path": "drools-core/src/main/java/org/drools/core/event/ProcessEventSupport.java", "diffHunk": "@@ -143,6 +145,29 @@ public void fireAfterSLAViolated(final ProcessInstance instance, NodeInstance no\n         }\n     }\n \n+    public void fireOnSignal(final ProcessInstance instance,\n+                             NodeInstance nodeInstance,\n+                             KieRuntime kruntime,\n+                             String signalName,\n+                             Object signalObject) {\n+        if (hasListeners()) {\n+            final SignalEvent event = new SignalEventImpl(instance, kruntime, nodeInstance, signalName, signalObject);\n+            notifyAllListeners(event, (l, e) -> l.onSignal(e));", "originalCommit": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1MjQ0OQ==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531152449", "bodyText": "good point", "author": "fjtirado", "createdAt": "2020-11-26T17:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NzEwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NzQ3Mw==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r530887473", "body": "same as above\r\n```suggestion\r\n            notifyAllListeners(event, ProcessEventListener::onMessage);\r\n```", "bodyText": "same as above\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        notifyAllListeners(event, (l, e) -> l.onMessage(e));\n          \n          \n            \n                        notifyAllListeners(event, ProcessEventListener::onMessage);", "bodyHTML": "<p dir=\"auto\">same as above</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            notifyAllListeners(event, <span class=\"x x-first\">(l, e) </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> l</span><span class=\"pl-k x x-last\">.</span>onMessage<span class=\"x x-first x-last\">(e)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            notifyAllListeners(event, <span class=\"pl-smi x x-first\">ProcessEventListener</span><span class=\"pl-k x x-last\">::</span>onMessage);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-11-26T09:28:49Z", "path": "drools-core/src/main/java/org/drools/core/event/ProcessEventSupport.java", "diffHunk": "@@ -143,6 +145,29 @@ public void fireAfterSLAViolated(final ProcessInstance instance, NodeInstance no\n         }\n     }\n \n+    public void fireOnSignal(final ProcessInstance instance,\n+                             NodeInstance nodeInstance,\n+                             KieRuntime kruntime,\n+                             String signalName,\n+                             Object signalObject) {\n+        if (hasListeners()) {\n+            final SignalEvent event = new SignalEventImpl(instance, kruntime, nodeInstance, signalName, signalObject);\n+            notifyAllListeners(event, (l, e) -> l.onSignal(e));\n+        }\n+    }\n+\n+    public void fireOnMessage(final ProcessInstance instance,\n+                              NodeInstance nodeInstance,\n+                              KieRuntime kruntime,\n+                              String messageName,\n+                              Object messageObject) {\n+        if (hasListeners()) {\n+            final MessageEvent event = new MessageEventImpl(instance, kruntime, nodeInstance, messageName,\n+                    messageObject);\n+            notifyAllListeners(event, (l, e) -> l.onMessage(e));", "originalCommit": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODQ4MQ==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531128481", "body": "_toString()_ method may be implemented to be similar to other classes that extend from ProcessEvent, wdyt?", "bodyText": "toString() method may be implemented to be similar to other classes that extend from ProcessEvent, wdyt?", "bodyHTML": "<p dir=\"auto\"><em>toString()</em> method may be implemented to be similar to other classes that extend from ProcessEvent, wdyt?</p>", "author": "gmunozfe", "createdAt": "2020-11-26T16:16:16Z", "path": "drools-core/src/main/java/org/drools/core/event/MessageEventImpl.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.core.event;\n+\n+import org.kie.api.event.process.MessageEvent;\n+import org.kie.api.runtime.KieRuntime;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.api.runtime.process.ProcessInstance;\n+\n+public class MessageEventImpl extends ProcessEvent implements MessageEvent {\n+\n+    private static final long serialVersionUID = 1L;\n+    private NodeInstance nodeInstance;\n+    private String messageName;\n+    private Object messageObject;\n+\n+    public MessageEventImpl(ProcessInstance instance, KieRuntime kruntime, NodeInstance nodeInstance,\n+                            String messageName, Object messageObject) {\n+        super(instance, kruntime);\n+        this.nodeInstance = nodeInstance;\n+        this.messageName = messageName;\n+        this.messageObject = messageObject;\n+    }\n+\n+    @Override\n+    public NodeInstance getNodeInstance() {\n+        return nodeInstance;\n+    }\n+\n+    @Override\n+    public String getMessageName() {\n+        return messageName;\n+    }\n+\n+    @Override\n+    public Object getMessage() {\n+        return messageObject;\n+    }", "originalCommit": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1MzM5NA==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531153394", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-11-26T17:08:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODQ4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODc2Mw==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531128763", "body": "Same here, implement _toString()_", "bodyText": "Same here, implement toString()", "bodyHTML": "<p dir=\"auto\">Same here, implement <em>toString()</em></p>", "author": "gmunozfe", "createdAt": "2020-11-26T16:16:49Z", "path": "drools-core/src/main/java/org/drools/core/event/SignalEventImpl.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.core.event;\n+\n+import org.kie.api.event.process.SignalEvent;\n+import org.kie.api.runtime.KieRuntime;\n+import org.kie.api.runtime.process.NodeInstance;\n+import org.kie.api.runtime.process.ProcessInstance;\n+\n+public class SignalEventImpl extends ProcessEvent implements SignalEvent {\n+\n+    private static final long serialVersionUID = 1L;\n+    private NodeInstance nodeInstance;\n+    private String signalName;\n+    private Object signalObject;\n+\n+    public SignalEventImpl(ProcessInstance instance, KieRuntime kruntime, NodeInstance nodeInstance,\n+                            String signalName, Object signalObject) {\n+        super(instance, kruntime);\n+        this.nodeInstance = nodeInstance;\n+        this.signalName = signalName;\n+        this.signalObject = signalObject;\n+    }\n+\n+    @Override\n+    public NodeInstance getNodeInstance() {\n+        return nodeInstance;\n+    }\n+\n+    @Override\n+    public String getSignalName() {\n+        return signalName;\n+    }\n+\n+    @Override\n+    public Object getSignal() {\n+        return signalObject;\n+    }", "originalCommit": "a8b8f4e27cd0e02e10b53da862663c54d5a66e7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE1MzQ0OQ==", "url": "https://github.com/kiegroup/drools/pull/3264#discussion_r531153449", "bodyText": "done", "author": "fjtirado", "createdAt": "2020-11-26T17:08:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTEyODc2Mw=="}], "type": "inlineReview"}, {"oid": "7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "url": "https://github.com/kiegroup/drools/commit/7d6ef08bb059213f51227dea1a1ea49e0effdbf3", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages", "committedDate": "2020-11-26T17:08:11Z", "type": "forcePushed"}, {"oid": "5a99003199b272975b9b5034e55404db013f466f", "url": "https://github.com/kiegroup/drools/commit/5a99003199b272975b9b5034e55404db013f466f", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages", "committedDate": "2020-11-30T12:31:59Z", "type": "commit"}, {"oid": "5a99003199b272975b9b5034e55404db013f466f", "url": "https://github.com/kiegroup/drools/commit/5a99003199b272975b9b5034e55404db013f466f", "message": "[JBPM-9474] Produce events to Kafka by Signal or Messages Events\n\nAdding listener for signal and messages", "committedDate": "2020-11-30T12:31:59Z", "type": "forcePushed"}]}