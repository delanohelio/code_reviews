{"pr_number": 215, "pr_title": "KOGITO-1166 Unable to execute a job with expiration time in past", "pr_author": "tiagodolphine", "pr_createdAt": "2020-05-12T16:31:22Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/215", "timeline": [{"oid": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "url": "https://github.com/kiegroup/kogito-apps/commit/d3e4eaf617793a216cba89a6e7548e75ddf964c7", "message": "KOGITO-1166 Unable to execute a job with expiration time in past\n\nAdd javadoc to the config property", "committedDate": "2020-05-12T16:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4MDgxOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424280818", "body": "```suggestion\r\n     * Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an\r\n     * exception will be thrown.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Flag to allow anf force a job with expirationTime in the past to be executed immediately. If false and\n          \n          \n            \n                 * exception will be thrown.\n          \n          \n            \n                 * Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an\n          \n          \n            \n                 * exception will be thrown.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Flag</span> to allow <span class=\"x x-first x-last\">anf</span> force a job with expirationTime in the past to be executed immediately. <span class=\"pl-smi\">If</span> <span class=\"pl-c1\">false</span> <span class=\"x x-first x-last\">and</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> exception will be thrown.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Flag</span> to allow <span class=\"x x-first x-last\">and</span> force a job with expirationTime in the past to be executed immediately. <span class=\"pl-smi\">If</span> <span class=\"pl-c1\">false</span> <span class=\"x x-first x-last\">an</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> exception will be thrown.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "radtriste", "createdAt": "2020-05-13T08:56:30Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -55,6 +55,13 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * Flag to allow anf force a job with expirationTime in the past to be executed immediately. If false and\n+     * exception will be thrown.", "originalCommit": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDk4MQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424284981", "body": "only minus one day ? this is quite arbitrary ... shouldn't that be also configurable ?", "bodyText": "only minus one day ? this is quite arbitrary ... shouldn't that be also configurable ?", "bodyHTML": "<p dir=\"auto\">only minus one day ? this is quite arbitrary ... shouldn't that be also configurable ?</p>", "author": "radtriste", "createdAt": "2020-05-13T09:03:06Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/JobSchedulerManager.java", "diffHunk": "@@ -99,7 +99,8 @@ void loadScheduledJobs() {\n     }\n \n     private PublisherBuilder<ScheduledJob> loadJobsInCurrentChunk() {\n-        return repository.findByStatusBetweenDatesOrderByPriority(DateUtil.now(), DateUtil.now().plusMinutes(schedulerChunkInMinutes),\n+        return repository.findByStatusBetweenDatesOrderByPriority(DateUtil.now().minusDays(1),", "originalCommit": "d3e4eaf617793a216cba89a6e7548e75ddf964c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM4MTk2NQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424381965", "bodyText": "yep, I agree, in fact I added this during the tests to allow when loading persisted jobs, to schedule \"expired\" ones when the force configuration set, but it should be a configuration parameter indeed. Any suggestion for the default value/time for instance minutes, hours, days, etc.", "author": "tiagodolphine", "createdAt": "2020-05-13T12:01:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDk4MQ=="}], "type": "inlineReview"}, {"oid": "17287f3ed9ea4df659e78fd6d8b8012281f7400a", "url": "https://github.com/kiegroup/kogito-apps/commit/17287f3ed9ea4df659e78fd6d8b8012281f7400a", "message": "Update jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java\n\nCo-authored-by: Tristan Radisson <tristan.radisson@gmail.com>", "committedDate": "2020-05-13T12:03:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424418362", "body": "Is there any specific reason to use Optional here?\r\nThe property is specified in application.properties anyway.", "bodyText": "Is there any specific reason to use Optional here?\nThe property is specified in application.properties anyway.", "bodyHTML": "<p dir=\"auto\">Is there any specific reason to use Optional here?<br>\nThe property is specified in application.properties anyway.</p>", "author": "sutaakar", "createdAt": "2020-05-13T13:02:02Z", "path": "jobs-service/src/main/java/org/kie/kogito/jobs/service/scheduler/BaseTimerJobScheduler.java", "diffHunk": "@@ -55,6 +55,13 @@\n     @ConfigProperty(name = \"kogito.jobs-service.maxIntervalLimitToRetryMillis\")\n     long maxIntervalLimitToRetryMillis;\n \n+    /**\n+     * Flag to allow and force a job with expirationTime in the past to be executed immediately. If false an\n+     * exception will be thrown.\n+     */\n+    @ConfigProperty(name = \"kogito.jobs-service.forceExecuteExpiredJobs\")\n+    Optional<Boolean> forceExecuteExpiredJobs;", "originalCommit": "17287f3ed9ea4df659e78fd6d8b8012281f7400a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNDMzOQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424424339", "bodyText": "The property is used on the calculateInterval method where I prefer to use a functional approach there, otherwise, I would need to use Optional.of()... anyway any specific reason to not use Optional?", "author": "tiagodolphine", "createdAt": "2020-05-13T13:11:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MTA0Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/215#discussion_r424471047", "bodyText": "I was just curious what is the rationale behind.\nOk to be kept like that.", "author": "sutaakar", "createdAt": "2020-05-13T14:13:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxODM2Mg=="}], "type": "inlineReview"}, {"oid": "04be9ce94ddb16a3dd44e8f7771de8d568f8f4c4", "url": "https://github.com/kiegroup/kogito-apps/commit/04be9ce94ddb16a3dd44e8f7771de8d568f8f4c4", "message": "Adding configuration property to be used on load jobs method on the date parameter from", "committedDate": "2020-05-13T13:58:33Z", "type": "commit"}]}