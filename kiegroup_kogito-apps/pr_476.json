{"pr_number": 476, "pr_title": "KOGITO-3501: Queries in infinispan aren't correctly grouping clauses inside AND's/OR's", "pr_author": "pefernan", "pr_createdAt": "2020-10-06T13:32:48Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/476", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3OTIzNg==", "url": "https://github.com/kiegroup/kogito-apps/pull/476#discussion_r500679236", "body": "perhaps change to, that way you can remove the outer strings.\r\n```suggestion\r\n                .collect(joining(joining, \"(\", \")\")) + \")\";\r\n```", "bodyText": "perhaps change to, that way you can remove the outer strings.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .collect(joining(joining)) + \")\";\n          \n          \n            \n                            .collect(joining(joining, \"(\", \")\")) + \")\";", "bodyHTML": "<p dir=\"auto\">perhaps change to, that way you can remove the outer strings.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .collect(joining(joining)) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .collect(joining(joining<span class=\"x x-first\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">(</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">)</span><span class=\"pl-pds x x-last\">\"</span></span>)) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cristianonicolai", "createdAt": "2020-10-07T01:05:52Z", "path": "persistence-commons/persistence-commons-infinispan/src/main/java/org/kie/kogito/persistence/infinispan/query/InfinispanQuery.java", "diffHunk": "@@ -145,6 +145,9 @@ protected InfinispanQuery(QueryFactory qf, String rootType) {\n     }\n \n     private String getRecursiveString(AttributeFilter<?> filter, String joining) {\n-        return ((List<AttributeFilter<?>>) filter.getValue()).stream().map(filterStringFunction()).collect(joining(joining));\n+        return \"(\" + ((List<AttributeFilter<?>>) filter.getValue())\n+                .stream()\n+                .map(filterStringFunction())\n+                .collect(joining(joining)) + \")\";", "originalCommit": "8212cc759c05792f7b51da3b7a0921545d4bf98e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc4NzQ5Mg==", "url": "https://github.com/kiegroup/kogito-apps/pull/476#discussion_r500787492", "bodyText": "good catch @cristianonicolai", "author": "pefernan", "createdAt": "2020-10-07T07:15:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY3OTIzNg=="}], "type": "inlineReview"}, {"oid": "d216eee8a2cb8dd4ee4ea96c1e6684fea51263ac", "url": "https://github.com/kiegroup/kogito-apps/commit/d216eee8a2cb8dd4ee4ea96c1e6684fea51263ac", "message": "KOGITO-3501: Queries in infinispan aren't correctly grouping clauses inside AND's/OR's", "committedDate": "2020-10-07T06:58:06Z", "type": "commit"}, {"oid": "ee94af6328493c8dee6ce5a83bd30b68a6cb6fde", "url": "https://github.com/kiegroup/kogito-apps/commit/ee94af6328493c8dee6ce5a83bd30b68a6cb6fde", "message": "- Code suggestions", "committedDate": "2020-10-07T07:03:35Z", "type": "commit"}, {"oid": "ee94af6328493c8dee6ce5a83bd30b68a6cb6fde", "url": "https://github.com/kiegroup/kogito-apps/commit/ee94af6328493c8dee6ce5a83bd30b68a6cb6fde", "message": "- Code suggestions", "committedDate": "2020-10-07T07:03:35Z", "type": "forcePushed"}]}