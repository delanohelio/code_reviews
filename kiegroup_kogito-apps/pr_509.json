{"pr_number": 509, "pr_title": "[KOGITO-3566] Improve Task Inbox Query", "pr_author": "bxf12315", "pr_createdAt": "2020-10-27T07:39:05Z", "pr_url": "https://github.com/kiegroup/kogito-apps/pull/509", "timeline": [{"oid": "af105d3bf56347746619f6a2f930ffcce926c25d", "url": "https://github.com/kiegroup/kogito-apps/commit/af105d3bf56347746619f6a2f930ffcce926c25d", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-27T09:09:09Z", "type": "forcePushed"}, {"oid": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9", "url": "https://github.com/kiegroup/kogito-apps/commit/3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-27T12:13:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r512665421", "body": "Wouldnt be enought to do:\r\n```suggestion\r\n        event.getData().setActualOwner(null);\r\n```", "bodyText": "Wouldnt be enought to do:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n          \n          \n            \n                    event.getData().setActualOwner(null);", "bodyHTML": "<p dir=\"auto\">Wouldnt be enought to do:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        event<span class=\"pl-k\">.</span><span class=\"x x-first\">setData((</span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">KogitoUserTaskCloudEventDeserializer</span><span class=\"x\">()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">deserialize</span>(<span class=\"pl-c1\">null</span><span class=\"x x-first\">, readFileContent(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">user_task_instance_event.json</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        event<span class=\"pl-k\">.</span><span class=\"x x-first\">getData()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">setActualOwner</span>(<span class=\"pl-c1\">null</span><span class=\"x x-first x-last\">);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cristianonicolai", "createdAt": "2020-10-27T12:52:14Z", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")", "originalCommit": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NDgyNw==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r512754827", "bodyText": "it does not work, because of code line [1]\nI also can not remove the condition, if remove it, the unit test will be failed [2]\n[1] \n  \n    \n      kogito-apps/data-index/data-index-storage/data-index-storage-api/src/main/java/org/kie/kogito/index/model/UserTaskInstanceMeta.java\n    \n    \n         Line 86\n      in\n      3604788\n    \n    \n    \n    \n\n        \n          \n           if (id != null && !id.trim().isEmpty()) { \n        \n    \n  \n\n.\n[2] \n  \n    \n      kogito-apps/data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/messaging/KogitoCloudEventDeserializerTest.java\n    \n    \n         Line 143\n      in\n      edaf89d\n    \n    \n    \n    \n\n        \n          \n           .hasFieldOrPropertyWithValue(\"data.actualOwner\", null)", "author": "bxf12315", "createdAt": "2020-10-27T14:45:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NDU3NA==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513854574", "bodyText": "this should help:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n          \n          \n            \n                    event = getUserTaskCloudEvent(taskId, processId, processInstanceId, null, null, state);\n          \n          \n            \n                    event.getData().setActualOwner(null);", "author": "cristianonicolai", "createdAt": "2020-10-29T01:19:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk0MDUyOA==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513940528", "bodyText": "Done", "author": "bxf12315", "createdAt": "2020-10-29T04:01:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NTQyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513855159", "body": "```suggestion\r\nvalidateUserTaskInstance(getUserTaskInstanceByIdNoActualOwner(taskId), event);\r\n```\r\n\r\nYou actually need to create the method `getUserTaskInstanceByIdNoActualOwner`, with a query that does the same that Task Console ( `actualOwner: { isNull: true }` ). Same for `getDealsByTaskId`, a variation where the actualOwner is also filtered. The real value is to assert that the queries execute fine and respond the expect value.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            validateUserTaskInstance(getUserTaskInstanceByIdNoActualOwner(taskId), event);\n          \n      \n    \n    \n  \n\nYou actually need to create the method getUserTaskInstanceByIdNoActualOwner, with a query that does the same that Task Console ( actualOwner: { isNull: true } ). Same for getDealsByTaskId, a variation where the actualOwner is also filtered. The real value is to assert that the queries execute fine and respond the expect value.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"802\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"802\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first x-last\">validateUserTaskInstance(getUserTaskInstanceByIdNoActualOwner(taskId), event);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">You actually need to create the method <code>getUserTaskInstanceByIdNoActualOwner</code>, with a query that does the same that Task Console ( <code>actualOwner: { isNull: true }</code> ). Same for <code>getDealsByTaskId</code>, a variation where the actualOwner is also filtered. The real value is to assert that the queries execute fine and respond the expect value.</p>", "author": "cristianonicolai", "createdAt": "2020-10-29T01:20:13Z", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +795,17 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event.setData((new KogitoUserTaskCloudEventDeserializer().deserialize(null, readFileContent(\"user_task_instance_event.json\")\n+                .getBytes()).getData()));\n+        indexUserTaskCloudEvent(event);\n+", "originalCommit": "3a2ebf55bcd2e6d518f62f803be4c24a1b6223b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5OTQ0Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513899443", "bodyText": "Done", "author": "bxf12315", "createdAt": "2020-10-29T02:52:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2ODIwMg==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513968202", "bodyText": "Still need a query for deals to test the task metada actualOwner.", "author": "cristianonicolai", "createdAt": "2020-10-29T04:53:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4ODg2Ng==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r514188866", "bodyText": "Updated", "author": "bxf12315", "createdAt": "2020-10-29T11:30:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0NDY5Nw==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r514644697", "bodyText": "@bxf12315 getDealsByTaskId does not use actualOwner: { isNull: true }, you need a new query.", "author": "cristianonicolai", "createdAt": "2020-10-30T00:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg1NTE1OQ=="}], "type": "inlineReview"}, {"oid": "baa8fd93a03d4058324d3a405a77024f67520094", "url": "https://github.com/kiegroup/kogito-apps/commit/baa8fd93a03d4058324d3a405a77024f67520094", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T02:46:21Z", "type": "forcePushed"}, {"oid": "13ec1c22edb882e121714dbdf59cf2f47b0eba6f", "url": "https://github.com/kiegroup/kogito-apps/commit/13ec1c22edb882e121714dbdf59cf2f47b0eba6f", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T02:50:12Z", "type": "forcePushed"}, {"oid": "3cd1114bd3078c917f9dd411d6980af460c2801c", "url": "https://github.com/kiegroup/kogito-apps/commit/3cd1114bd3078c917f9dd411d6980af460c2801c", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T03:59:50Z", "type": "forcePushed"}, {"oid": "84efd38e8b73bd6029ef57b060d103c7775ab7f7", "url": "https://github.com/kiegroup/kogito-apps/commit/84efd38e8b73bd6029ef57b060d103c7775ab7f7", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T04:21:27Z", "type": "forcePushed"}, {"oid": "1622a2acf35188d2d5a187f2ae854a14396d6207", "url": "https://github.com/kiegroup/kogito-apps/commit/1622a2acf35188d2d5a187f2ae854a14396d6207", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T04:25:18Z", "type": "forcePushed"}, {"oid": "d50bbf7176b96de8987e8ea78cb65df759e51828", "url": "https://github.com/kiegroup/kogito-apps/commit/d50bbf7176b96de8987e8ea78cb65df759e51828", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T04:27:39Z", "type": "forcePushed"}, {"oid": "1c72bcdbe08e03ea9b54c9fc2562e83ee6c51c2f", "url": "https://github.com/kiegroup/kogito-apps/commit/1c72bcdbe08e03ea9b54c9fc2562e83ee6c51c2f", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T04:30:58Z", "type": "forcePushed"}, {"oid": "dba3c1a0a8eb4af5d08d3ce7c8bcffdd1cf8bf09", "url": "https://github.com/kiegroup/kogito-apps/commit/dba3c1a0a8eb4af5d08d3ce7c8bcffdd1cf8bf09", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T04:50:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzk2Nzg0Mw==", "url": "https://github.com/kiegroup/kogito-apps/pull/509#discussion_r513967843", "body": "```suggestion\r\n        validateUserTaskInstance(getUserTaskInstanceByIdNotActualOwner(taskId,), event);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    given().contentType(ContentType.JSON)\n          \n          \n            \n                            .body(getUserTaskInstanceByIdNotActualOwner(taskId))\n          \n          \n            \n                            .when().post(\"/graphql\")\n          \n          \n            \n                            .then().log().ifValidationFails().statusCode(200)\n          \n          \n            \n                            .body(\"data.UserTaskInstances[0].actualOwner\", nullValue());\n          \n          \n            \n                    validateUserTaskInstance(getUserTaskInstanceByIdNotActualOwner(taskId,), event);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        given()<span class=\"pl-k\">.</span>contentType(<span class=\"pl-smi\">ContentType</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>JSON</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .body(getUserTaskInstanceByIdNotActualOwner(taskId))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .when()<span class=\"pl-k\">.</span>post(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/graphql<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .then()<span class=\"pl-k\">.</span>log()<span class=\"pl-k\">.</span>ifValidationFails()<span class=\"pl-k\">.</span>statusCode(<span class=\"pl-c1\">200</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .body(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>data.UserTaskInstances[0].actualOwner<span class=\"pl-pds\">\"</span></span>, nullValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        validateUserTaskInstance(getUserTaskInstanceByIdNotActualOwner(taskId,), event);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cristianonicolai", "createdAt": "2020-10-29T04:52:42Z", "path": "data-index/data-index-service/data-index-service-common/src/test/java/org/kie/kogito/index/service/AbstractIndexingServiceIT.java", "diffHunk": "@@ -794,6 +797,16 @@ void testUserTaskInstanceIndex() throws Exception {\n                 .body(\"data.Deals[0].metadata.userTasks[0].started\", is(formatZonedDateTime(event.getData().getStarted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].completed\", is(formatZonedDateTime(event.getData().getCompleted().withZoneSameInstant(ZoneOffset.UTC))))\n                 .body(\"data.Deals[0].metadata.userTasks[0].lastUpdate\", is(formatZonedDateTime(event.getTime().withZoneSameInstant(ZoneOffset.UTC))));\n+\n+        event = getUserTaskCloudEvent(taskId, processId, processInstanceId, null, null, state, null);\n+        indexUserTaskCloudEvent(event);\n+\n+        given().contentType(ContentType.JSON)\n+                .body(getUserTaskInstanceByIdNotActualOwner(taskId))\n+                .when().post(\"/graphql\")\n+                .then().log().ifValidationFails().statusCode(200)\n+                .body(\"data.UserTaskInstances[0].actualOwner\", nullValue());", "originalCommit": "dba3c1a0a8eb4af5d08d3ce7c8bcffdd1cf8bf09", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "58e48a3209062c0f5fb64527727b393113eaf6b8", "url": "https://github.com/kiegroup/kogito-apps/commit/58e48a3209062c0f5fb64527727b393113eaf6b8", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-29T11:29:47Z", "type": "forcePushed"}, {"oid": "e97443c217c485af4c6431dd027f5852e4f4bd44", "url": "https://github.com/kiegroup/kogito-apps/commit/e97443c217c485af4c6431dd027f5852e4f4bd44", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-10-30T15:42:49Z", "type": "forcePushed"}, {"oid": "b8819875c1266ee5d62873f0815735796d8acd2c", "url": "https://github.com/kiegroup/kogito-apps/commit/b8819875c1266ee5d62873f0815735796d8acd2c", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-11-02T12:53:08Z", "type": "forcePushed"}, {"oid": "70f2245ae9ab4e973d2cb2f0cb493e3e9e6cef8b", "url": "https://github.com/kiegroup/kogito-apps/commit/70f2245ae9ab4e973d2cb2f0cb493e3e9e6cef8b", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-11-02T13:19:50Z", "type": "forcePushed"}, {"oid": "edc591640b84295be353dce133345aec3c0ee100", "url": "https://github.com/kiegroup/kogito-apps/commit/edc591640b84295be353dce133345aec3c0ee100", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-11-03T14:32:41Z", "type": "commit"}, {"oid": "edc591640b84295be353dce133345aec3c0ee100", "url": "https://github.com/kiegroup/kogito-apps/commit/edc591640b84295be353dce133345aec3c0ee100", "message": "[KOGITO-3566] Improve Task Inbox Query", "committedDate": "2020-11-03T14:32:41Z", "type": "forcePushed"}]}