{"pr_number": 1322, "pr_title": "Add test for listFileNames", "pr_author": "elharo", "pr_createdAt": "2020-03-30T18:13:00Z", "pr_url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322", "timeline": [{"oid": "6bb17c9bd1aef3e6b7b7ceab208894da454ad812", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/6bb17c9bd1aef3e6b7b7ceab208894da454ad812", "message": "test listFileNames", "committedDate": "2020-03-30T18:06:59Z", "type": "commit"}, {"oid": "dd187157ac460a48d494a551efdcaeafcce98480", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/dd187157ac460a48d494a551efdcaeafcce98480", "message": "test listFileNames", "committedDate": "2020-03-30T18:11:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzA3OQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r400407079", "body": "```suggestion\r\n    Artifact artifact = LinkageCheckerTest.resolvePaths(\"com.google.truth.extensions:truth-java8-extension:1.0.1\").get(0).getArtifact();\r\n```\r\n\r\nThis does almost same thing, although `resolveArtifact` does not fetch (unnecessary) dependencies.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Artifact artifact = resolveArtifact(\"com.google.truth.extensions:truth-java8-extension:1.0.1\");\n          \n          \n            \n                Artifact artifact = LinkageCheckerTest.resolvePaths(\"com.google.truth.extensions:truth-java8-extension:1.0.1\").get(0).getArtifact();\n          \n      \n    \n    \n  \n\nThis does almost same thing, although resolveArtifact does not fetch (unnecessary) dependencies.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">Artifact</span> artifact <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">resolveArtifact</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.google.truth.extensions:truth-java8-extension:1.0.1<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Artifact</span> artifact <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">LinkageCheckerTest</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">resolvePaths</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>com.google.truth.extensions:truth-java8-extension:1.0.1<span class=\"pl-pds\">\"</span></span><span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-c1 x\">0</span><span class=\"x\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getArtifact(</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This does almost same thing, although <code>resolveArtifact</code> does not fetch (unnecessary) dependencies.</p>", "author": "suztomo", "createdAt": "2020-03-30T18:32:51Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathEntryTest.java", "diffHunk": "@@ -78,6 +86,38 @@ public void testToStringArtifact() {\n     assertEquals(\"com.google:foo:0.0.1\", entry.toString());\n   }\n \n+  @Test\n+  public void testListFileNames() throws IOException, ArtifactResolutionException {\n+    \n+    // copy into the local repository so we can read the jar file\n+    Artifact artifact = resolveArtifact(\"com.google.truth.extensions:truth-java8-extension:1.0.1\");", "originalCommit": "dd187157ac460a48d494a551efdcaeafcce98480", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMTA1NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r400411054", "bodyText": "Or, you can just use one of the JAR files in test/resources/testdata. This idea does not require (unnecessary) network connections.", "author": "suztomo", "createdAt": "2020-03-30T18:39:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyNzgyMg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r400427822", "bodyText": "This test definitely shouldn't pull an entire dependency tree to only look at one jar.\nWe could bundle it. I might yet do that if we need to contrive a specific jar with specific characteristic for testing. For now this one was small and simple enough that it could easily be characterized.", "author": "elharo", "createdAt": "2020-03-30T19:08:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ3MjQzNQ==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r400472435", "bodyText": "Truth-java-8-extension is small JAR file and thus a good case to observe the completeness of listing.\nApart from that, I found conscrypt-openjdk-uber-1.4.2.jar in test/resources/testdata has nice list of contents to assert.\nsuztomo-macbookpro44% jar tf dependencies/src/test/resources/testdata/conscrypt-openjdk-uber-1.4.2.jar\nMETA-INF/MANIFEST.MF\nMETA-INF/SIGNINGC.SF\nMETA-INF/SIGNINGC.RSA\nMETA-INF/\nMETA-INF/native/\nMETA-INF/native/libconscrypt_openjdk_jni-linux-x86_64.so\nMETA-INF/native/conscrypt_openjdk_jni-windows-x86.dll\nMETA-INF/native/libconscrypt_openjdk_jni-osx-x86_64.dylib\nMETA-INF/native/conscrypt_openjdk_jni-windows-x86_64.dll\norg/\norg/conscrypt/\norg/conscrypt/NativeCrypto.class\norg/conscrypt/OpenSSLSignature$1.class\norg/conscrypt/TrustManagerImpl$1.class\norg/conscrypt/OpenSSLContextImpl$TLSv1.class\norg/conscrypt/OpenSSLX509CertPath.class\norg/conscrypt/OpenSSLECPrivateKey.class\norg/conscrypt/OpenSSLCipherRSA$OAEP$SHA512.class", "author": "suztomo", "createdAt": "2020-03-30T20:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzA3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNDMzNg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r401124336", "bodyText": "That does have some nice inner classes and is not too large.\nAs to network connections in tests, yes, I am nervous about that. Though I do wonder, is this any different than pulling in our own dependencies from Maven central. In fact, this is a Maven dependency we're loading from the same serverlocal cache we'd load it from if we depended on it directly from pom.xml.", "author": "elharo", "createdAt": "2020-03-31T18:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQwNzA3OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMDI3MA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r400410270", "body": "You may want to add some inner classes.", "bodyText": "You may want to add some inner classes.", "bodyHTML": "<p dir=\"auto\">You may want to add some inner classes.</p>", "author": "suztomo", "createdAt": "2020-03-30T18:38:25Z", "path": "dependencies/src/test/java/com/google/cloud/tools/opensource/classpath/ClassPathEntryTest.java", "diffHunk": "@@ -78,6 +86,38 @@ public void testToStringArtifact() {\n     assertEquals(\"com.google:foo:0.0.1\", entry.toString());\n   }\n \n+  @Test\n+  public void testListFileNames() throws IOException, ArtifactResolutionException {\n+    \n+    // copy into the local repository so we can read the jar file\n+    Artifact artifact = resolveArtifact(\"com.google.truth.extensions:truth-java8-extension:1.0.1\");\n+    \n+    ClassPathEntry entry = new ClassPathEntry(artifact);\n+    ImmutableSet<String> classFileNames = entry.listClassFileNames();\n+    Truth.assertThat(classFileNames).containsExactly(\n+        \"com.google.common.truth.IntStreamSubject\",\n+        \"com.google.common.truth.LongStreamSubject\",\n+        \"com.google.common.truth.OptionalDoubleSubject\",\n+        \"com.google.common.truth.OptionalSubject\",\n+        \"com.google.common.truth.OptionalIntSubject\",\n+        \"com.google.common.truth.OptionalLongSubject\",\n+        \"com.google.common.truth.PathSubject\",\n+        \"com.google.common.truth.Truth8\",\n+        \"com.google.common.truth.StreamSubject\");", "originalCommit": "dd187157ac460a48d494a551efdcaeafcce98480", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyNDQ5NA==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r401124494", "bodyText": "yes, looking at that now.", "author": "elharo", "createdAt": "2020-03-31T18:27:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMDI3MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE2MjI2Mg==", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/pull/1322#discussion_r401162262", "bodyText": "Also verify there's no such class that has package name META-INF?", "author": "suztomo", "createdAt": "2020-03-31T19:30:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMDI3MA=="}], "type": "inlineReview"}, {"oid": "3c78e21da1324c090d69c599085633a02bf3e277", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/3c78e21da1324c090d69c599085633a02bf3e277", "message": "Merge branch 'master' into jar", "committedDate": "2020-03-30T18:59:54Z", "type": "commit"}, {"oid": "08e6f503162d1a9dacce69e59acd8387902934a8", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/08e6f503162d1a9dacce69e59acd8387902934a8", "message": "test for inner classes", "committedDate": "2020-03-31T18:38:34Z", "type": "commit"}, {"oid": "fa4187920187252561744640b44a46cdc8d651a4", "url": "https://github.com/GoogleCloudPlatform/cloud-opensource-java/commit/fa4187920187252561744640b44a46cdc8d651a4", "message": "Merge branch 'master' into jar", "committedDate": "2020-03-31T22:26:27Z", "type": "commit"}]}