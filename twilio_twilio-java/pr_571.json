{"pr_number": 571, "pr_title": "fix: paging breaks with + sign on phone number", "pr_author": "thinkingserious", "pr_createdAt": "2020-08-26T23:58:52Z", "pr_url": "https://github.com/twilio/twilio-java/pull/571", "merge_commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "timeline": [{"oid": "9277ce2972403d36495b23532b722be2b7926859", "url": "https://github.com/twilio/twilio-java/commit/9277ce2972403d36495b23532b722be2b7926859", "message": "fix: paging breaks with + sign on phone number", "committedDate": "2020-08-26T23:56:05Z", "type": "commit"}, {"oid": "c4ace549d8f9924a0ffbccfd699ca87f2a0a08ab", "url": "https://github.com/twilio/twilio-java/commit/c4ace549d8f9924a0ffbccfd699ca87f2a0a08ab", "message": "remove logging", "committedDate": "2020-08-26T23:58:31Z", "type": "commit"}, {"oid": "cd465e722a8fb0914f576daa54336b70e35ba4cf", "url": "https://github.com/twilio/twilio-java/commit/cd465e722a8fb0914f576daa54336b70e35ba4cf", "message": "moved logic to correct function", "committedDate": "2020-08-27T00:32:32Z", "type": "commit"}, {"oid": "d9e02fb47d2c90c6c2ea5ecdfcb94d16624c6ebd", "url": "https://github.com/twilio/twilio-java/commit/d9e02fb47d2c90c6c2ea5ecdfcb94d16624c6ebd", "message": "decoder no longer needed", "committedDate": "2020-08-27T00:33:39Z", "type": "commit"}, {"oid": "ef0ca3a3dd04657b63c367f645a88c960d58e5b4", "url": "https://github.com/twilio/twilio-java/commit/ef0ca3a3dd04657b63c367f645a88c960d58e5b4", "message": "fix test", "committedDate": "2020-08-27T01:02:37Z", "type": "commit"}, {"oid": "616f00bfdd1a810fc4e9ab18bcfc3ccb0e302947", "url": "https://github.com/twilio/twilio-java/commit/616f00bfdd1a810fc4e9ab18bcfc3ccb0e302947", "message": "fix test", "committedDate": "2020-08-27T01:43:24Z", "type": "commit"}, {"oid": "0d000d44c11a75f33f8d556527819ef510daa777", "url": "https://github.com/twilio/twilio-java/commit/0d000d44c11a75f33f8d556527819ef510daa777", "message": "fix test", "committedDate": "2020-08-27T01:55:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDUwNQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r478430505", "body": "This is not the proper solution and there are many other characters which this would not solve for. Proper changes are needed in `com.twilio.http.Request.buildURL()`", "bodyText": "This is not the proper solution and there are many other characters which this would not solve for. Proper changes are needed in com.twilio.http.Request.buildURL()", "bodyHTML": "<p dir=\"auto\">This is not the proper solution and there are many other characters which this would not solve for. Proper changes are needed in <code>com.twilio.http.Request.buildURL()</code></p>", "author": "childish-sambino", "createdAt": "2020-08-27T13:45:15Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -285,7 +285,12 @@ private static String encodeParameters(final Map<String, List<String>> params) {\n                         continue;\n                     }\n \n-                    String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n+                    String encodedValue;\n+                    if (value.startsWith(\"+\")) {", "originalCommit": "0d000d44c11a75f33f8d556527819ef510daa777", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwNjMxMw==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r478706313", "bodyText": "buildURL() appears to be constructing the URL properly (I compared the current method with the method prior to #558). The issue seems to be within encodeParameters() where each parameter is encoded. In the case of a phone number, it appears we should not encode the + sign. contructURL() is where we add the parameters to the final URL.", "author": "thinkingserious", "createdAt": "2020-08-27T21:29:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwNzE1NQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r478707155", "bodyText": "The first page works fine which is where encodeParameters is called. The second page fails because buildURL is re-encoding the already-encoded parameters.", "author": "childish-sambino", "createdAt": "2020-08-27T21:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDUwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxNzU1Mw==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r478717553", "bodyText": "I'm not seeing where buildURL is re-encoding the parameters. Might be easier to talk through it?\nI added code to decode each value first before encoding. That seems to work locally, checking tests.", "author": "thinkingserious", "createdAt": "2020-08-27T21:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDUwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "0c772f7395bf046c23dfa952b9e805699a5ba3a5", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 408947890..482312a7a 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -285,13 +286,7 @@ public class Request {\n                         continue;\n                     }\n \n-                    String encodedValue;\n-                    if (value.startsWith(\"+\")) {\n-                        encodedValue = value;\n-                    } else {\n-                        encodedValue = URLEncoder.encode(value, \"UTF-8\");\n-                    }\n-                    parameters.add(encodedName + \"=\" + encodedValue);\n+                    String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                 }\n             } catch (final UnsupportedEncodingException e) {\n                 throw new InvalidRequestException(\"Couldn't encode params\", entry.getKey(), e);\n", "next_change": {"commit": "4d4efb4623a7ecc61d5663238e9a219ddd339700", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 482312a7a..73b955a49 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -286,7 +287,9 @@ public class Request {\n                         continue;\n                     }\n \n-                    String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n+                    String decodedValue = URLDecoder.decode(value, \"UTF-8\");\n+                    String encodedValue = URLEncoder.encode(decodedValue, \"UTF-8\");\n+                    parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n             } catch (final UnsupportedEncodingException e) {\n                 throw new InvalidRequestException(\"Couldn't encode params\", entry.getKey(), e);\n", "next_change": {"commit": "bb6221e2788bfe45c4936acd54f0760414b16a0b", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 73b955a49..73b2a8011 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -286,9 +283,7 @@ public class Request {\n                     if (value == null) {\n                         continue;\n                     }\n-\n-                    String decodedValue = URLDecoder.decode(value, \"UTF-8\");\n-                    String encodedValue = URLEncoder.encode(decodedValue, \"UTF-8\");\n+                    String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                     parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n             } catch (final UnsupportedEncodingException e) {\n", "next_change": {"commit": "36e94674b13366ed4272599b555e42c216ece26e", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 73b2a8011..6c7f2145d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -283,6 +304,7 @@ public class Request {\n                     if (value == null) {\n                         continue;\n                     }\n+\n                     String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                     parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 408947890..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -285,12 +295,7 @@ public class Request {\n                         continue;\n                     }\n \n-                    String encodedValue;\n-                    if (value.startsWith(\"+\")) {\n-                        encodedValue = value;\n-                    } else {\n-                        encodedValue = URLEncoder.encode(value, \"UTF-8\");\n-                    }\n+                    String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                     parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n             } catch (final UnsupportedEncodingException e) {\n", "next_change": null}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "0c772f7395bf046c23dfa952b9e805699a5ba3a5", "url": "https://github.com/twilio/twilio-java/commit/0c772f7395bf046c23dfa952b9e805699a5ba3a5", "message": "revert improper solution", "committedDate": "2020-08-27T21:01:50Z", "type": "commit"}, {"oid": "4d4efb4623a7ecc61d5663238e9a219ddd339700", "url": "https://github.com/twilio/twilio-java/commit/4d4efb4623a7ecc61d5663238e9a219ddd339700", "message": "do not re-encode", "committedDate": "2020-08-27T21:51:51Z", "type": "commit"}, {"oid": "bb6221e2788bfe45c4936acd54f0760414b16a0b", "url": "https://github.com/twilio/twilio-java/commit/bb6221e2788bfe45c4936acd54f0760414b16a0b", "message": "revert URL builder", "committedDate": "2020-08-28T18:45:10Z", "type": "commit"}, {"oid": "7ed30ad45b68e2469f1ad3979fabc5fab778f6e6", "url": "https://github.com/twilio/twilio-java/commit/7ed30ad45b68e2469f1ad3979fabc5fab778f6e6", "message": "update test", "committedDate": "2020-08-28T18:55:20Z", "type": "commit"}, {"oid": "f05dc8085f9e3bb7a077c93ea7decbd73cccb78e", "url": "https://github.com/twilio/twilio-java/commit/f05dc8085f9e3bb7a077c93ea7decbd73cccb78e", "message": "avoid double encoding", "committedDate": "2020-08-28T21:50:07Z", "type": "commit"}, {"oid": "b2737afd0198107e55f1f716f2178858cfa1a0ab", "url": "https://github.com/twilio/twilio-java/commit/b2737afd0198107e55f1f716f2178858cfa1a0ab", "message": "clean up", "committedDate": "2020-08-28T21:53:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU1Mzk1MA==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r479553950", "body": "https://en.wikipedia.org/wiki/URI_fragment\r\n> The fragment identifier introduced by a hash mark `#` is the optional last part of a URL for a document.\r\n\r\nThis places it _before_ the query.\r\n\r\nWhat about just decoding the query part before constructing the URI?", "bodyText": "https://en.wikipedia.org/wiki/URI_fragment\n\nThe fragment identifier introduced by a hash mark # is the optional last part of a URL for a document.\n\nThis places it before the query.\nWhat about just decoding the query part before constructing the URI?", "bodyHTML": "<p dir=\"auto\"><a href=\"https://en.wikipedia.org/wiki/URI_fragment\" rel=\"nofollow\">https://en.wikipedia.org/wiki/URI_fragment</a></p>\n<blockquote>\n<p dir=\"auto\">The fragment identifier introduced by a hash mark <code>#</code> is the optional last part of a URL for a document.</p>\n</blockquote>\n<p dir=\"auto\">This places it <em>before</em> the query.</p>\n<p dir=\"auto\">What about just decoding the query part before constructing the URI?</p>", "author": "childish-sambino", "createdAt": "2020-08-28T22:05:59Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -174,9 +174,14 @@ private String buildURL() {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-\n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n+            String getQuery = \"\";\n+            if( parsedUrl.getQuery() != null ) {\n+                getQuery = \"?\" + parsedUrl.getQuery();\n+            }\n+            String constructedURI = new URI(\n+                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n+                    parsedUrl.getPath(), null, parsedUrl.getRef()).toString() + getQuery;", "originalCommit": "b2737afd0198107e55f1f716f2178858cfa1a0ab", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ca5d7c31772d4361cf10d807d9ada17afc88c259", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 94018d790..89415a652 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -178,9 +178,15 @@ public class Request {\n             if( parsedUrl.getQuery() != null ) {\n                 getQuery = \"?\" + parsedUrl.getQuery();\n             }\n+            String getFragment = \"\";\n+            if( parsedUrl.getRef() != null ) {\n+                getFragment = \"#\" + parsedUrl.getRef();\n+            }\n+            System.out.println(\"getQuery: \" + getQuery + getFragment);\n             String constructedURI = new URI(\n                     parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), null, parsedUrl.getRef()).toString() + getQuery;\n+                    parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n+            System.out.println(\"constructedURI: \" + constructedURI);\n             return new URI(constructedURI).toString();\n         } catch (final MalformedURLException | URISyntaxException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "5dfaebdebb31122ac77c3ecb90cb63dd34ae7e61", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 89415a652..665c84adc 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,9 @@ public class Request {\n             if( parsedUrl.getRef() != null ) {\n                 getFragment = \"#\" + parsedUrl.getRef();\n             }\n-            System.out.println(\"getQuery: \" + getQuery + getFragment);\n             String constructedURI = new URI(\n                     parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n                     parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n-            System.out.println(\"constructedURI: \" + constructedURI);\n             return new URI(constructedURI).toString();\n         } catch (final MalformedURLException | URISyntaxException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "4511139ed393b429815dd8ee2da6e66e62b6dcff", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 665c84adc..3fbd926a2 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -174,19 +174,25 @@ public class Request {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-            String getQuery = \"\";\n-            if( parsedUrl.getQuery() != null ) {\n-                getQuery = \"?\" + parsedUrl.getQuery();\n+\n+            int port = -1;\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                port = parsedUrl.getPort();\n+                urlPort = \":\" + port;\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n+            String query = null;\n+            if (parsedUrl.getQuery() != null ) {\n+                query = \"?\" + parsedUrl.getQuery();\n             }\n-            String getFragment = \"\";\n-            if( parsedUrl.getRef() != null ) {\n-                getFragment = \"#\" + parsedUrl.getRef();\n+            String ref = null;\n+            if (parsedUrl.getRef() != null) {\n+                ref = \"#\" + parsedUrl.getRef();\n             }\n-            String constructedURI = new URI(\n-                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n-            return new URI(constructedURI).toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n+        } catch (final MalformedURLException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "ccc351781bb274bb0d832b1591cf12e651e52e17", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 3fbd926a2..1ff02c84f 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,24 +175,29 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n             String urlPort = null;\n             if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n+                urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n             String query = null;\n-            if (parsedUrl.getQuery() != null ) {\n+            if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n             }\n             String ref = null;\n             if (parsedUrl.getRef() != null) {\n                 ref = \"#\" + parsedUrl.getRef();\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String credentials = null;\n+            if (parsedUrl.getUserInfo() != null) {\n+                credentials = parsedUrl.getUserInfo() + \"@\";\n+            }\n+            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "1da78503519aa5427ee2efa07820ec8ff09b7f24", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 1ff02c84f..ac96b4ab3 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +196,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ac96b4ab3..babfcc80d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +197,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex babfcc80d..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -183,20 +183,10 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n-            String encodedPath = StringUtils.join(pathPieces, \"/\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 94018d790..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -174,15 +175,19 @@ public class Request {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-            String getQuery = \"\";\n-            if( parsedUrl.getQuery() != null ) {\n-                getQuery = \"?\" + parsedUrl.getQuery();\n+\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String constructedURI = new URI(\n-                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), null, parsedUrl.getRef()).toString() + getQuery;\n-            return new URI(constructedURI).toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "b3866a341d66777e8d71e59d240d9823556825fa", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..c4f6537fe 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,16 +197,17 @@ public class Request {\n      * Add query parameters for date ranges.\n      *\n      * @param name  name of query parameter\n-     * @param range date range\n+     * @param lowerBound lower bound of LocalDate range\n+     * @param upperBound upper bound of LocalDate range\n      */\n-    public void addQueryDateRange(final String name, final Range<LocalDate> range) {\n-        if (range.hasLowerBound()) {\n-            String value = range.lowerEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+    public void addQueryDateRange(final String name, LocalDate lowerBound, LocalDate upperBound) {\n+        if (lowerBound != null) {\n+            String value = lowerBound.toString();\n             addQueryParam(name + \">\", value);\n         }\n \n-        if (range.hasUpperBound()) {\n-            String value = range.upperEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+        if (upperBound != null) {\n+            String value = upperBound.toString();\n             addQueryParam(name + \"<\", value);\n         }\n     }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "ca5d7c31772d4361cf10d807d9ada17afc88c259", "url": "https://github.com/twilio/twilio-java/commit/ca5d7c31772d4361cf10d807d9ada17afc88c259", "message": "add fragment", "committedDate": "2020-08-28T22:09:28Z", "type": "commit"}, {"oid": "5dfaebdebb31122ac77c3ecb90cb63dd34ae7e61", "url": "https://github.com/twilio/twilio-java/commit/5dfaebdebb31122ac77c3ecb90cb63dd34ae7e61", "message": "remove logging", "committedDate": "2020-08-28T22:17:48Z", "type": "commit"}, {"oid": "ef6c2d2826b1900f6d350aff6cbfd2b779d267fe", "url": "https://github.com/twilio/twilio-java/commit/ef6c2d2826b1900f6d350aff6cbfd2b779d267fe", "message": "Merge branch 'main' into 569-paging-bug", "committedDate": "2020-08-28T22:34:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MTIyNg==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r480241226", "body": "`new URI().toString()` from a `new URI().toString()`? This looks even more overly-complicated. Can we just drop the usage of `URI` and construct the URL similar to what we do in other languages?", "bodyText": "new URI().toString() from a new URI().toString()? This looks even more overly-complicated. Can we just drop the usage of URI and construct the URL similar to what we do in other languages?", "bodyHTML": "<p dir=\"auto\"><code>new URI().toString()</code> from a <code>new URI().toString()</code>? This looks even more overly-complicated. Can we just drop the usage of <code>URI</code> and construct the URL similar to what we do in other languages?</p>", "author": "childish-sambino", "createdAt": "2020-08-31T16:21:59Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -174,9 +174,18 @@ private String buildURL() {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-\n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n+            String getQuery = \"\";\n+            if( parsedUrl.getQuery() != null ) {\n+                getQuery = \"?\" + parsedUrl.getQuery();\n+            }\n+            String getFragment = \"\";\n+            if( parsedUrl.getRef() != null ) {\n+                getFragment = \"#\" + parsedUrl.getRef();\n+            }\n+            String constructedURI = new URI(\n+                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n+                    parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n+            return new URI(constructedURI).toString();", "originalCommit": "ef6c2d2826b1900f6d350aff6cbfd2b779d267fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3MTU3OA==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r480271578", "bodyText": "I'll give constructing the URL manually a shot.", "author": "thinkingserious", "createdAt": "2020-08-31T17:16:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI0MTIyNg=="}], "type": "inlineReview", "revised_code": {"commit": "4511139ed393b429815dd8ee2da6e66e62b6dcff", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 665c84adc..3fbd926a2 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -174,19 +174,25 @@ public class Request {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-            String getQuery = \"\";\n-            if( parsedUrl.getQuery() != null ) {\n-                getQuery = \"?\" + parsedUrl.getQuery();\n+\n+            int port = -1;\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                port = parsedUrl.getPort();\n+                urlPort = \":\" + port;\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n+            String query = null;\n+            if (parsedUrl.getQuery() != null ) {\n+                query = \"?\" + parsedUrl.getQuery();\n             }\n-            String getFragment = \"\";\n-            if( parsedUrl.getRef() != null ) {\n-                getFragment = \"#\" + parsedUrl.getRef();\n+            String ref = null;\n+            if (parsedUrl.getRef() != null) {\n+                ref = \"#\" + parsedUrl.getRef();\n             }\n-            String constructedURI = new URI(\n-                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n-            return new URI(constructedURI).toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n+        } catch (final MalformedURLException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "ccc351781bb274bb0d832b1591cf12e651e52e17", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 3fbd926a2..1ff02c84f 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,24 +175,29 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n             String urlPort = null;\n             if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n+                urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n             String query = null;\n-            if (parsedUrl.getQuery() != null ) {\n+            if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n             }\n             String ref = null;\n             if (parsedUrl.getRef() != null) {\n                 ref = \"#\" + parsedUrl.getRef();\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String credentials = null;\n+            if (parsedUrl.getUserInfo() != null) {\n+                credentials = parsedUrl.getUserInfo() + \"@\";\n+            }\n+            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "1da78503519aa5427ee2efa07820ec8ff09b7f24", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 1ff02c84f..ac96b4ab3 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +196,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ac96b4ab3..babfcc80d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +197,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex babfcc80d..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -183,20 +183,10 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n-            String encodedPath = StringUtils.join(pathPieces, \"/\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 665c84adc..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -174,19 +175,19 @@ public class Request {\n \n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n-            String getQuery = \"\";\n-            if( parsedUrl.getQuery() != null ) {\n-                getQuery = \"?\" + parsedUrl.getQuery();\n-            }\n-            String getFragment = \"\";\n-            if( parsedUrl.getRef() != null ) {\n-                getFragment = \"#\" + parsedUrl.getRef();\n+\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String constructedURI = new URI(\n-                    parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), null,null).toString() + getQuery + getFragment;\n-            return new URI(constructedURI).toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "b3866a341d66777e8d71e59d240d9823556825fa", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..c4f6537fe 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,16 +197,17 @@ public class Request {\n      * Add query parameters for date ranges.\n      *\n      * @param name  name of query parameter\n-     * @param range date range\n+     * @param lowerBound lower bound of LocalDate range\n+     * @param upperBound upper bound of LocalDate range\n      */\n-    public void addQueryDateRange(final String name, final Range<LocalDate> range) {\n-        if (range.hasLowerBound()) {\n-            String value = range.lowerEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+    public void addQueryDateRange(final String name, LocalDate lowerBound, LocalDate upperBound) {\n+        if (lowerBound != null) {\n+            String value = lowerBound.toString();\n             addQueryParam(name + \">\", value);\n         }\n \n-        if (range.hasUpperBound()) {\n-            String value = range.upperEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+        if (upperBound != null) {\n+            String value = upperBound.toString();\n             addQueryParam(name + \"<\", value);\n         }\n     }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "4511139ed393b429815dd8ee2da6e66e62b6dcff", "url": "https://github.com/twilio/twilio-java/commit/4511139ed393b429815dd8ee2da6e66e62b6dcff", "message": "build the URL", "committedDate": "2020-09-01T18:38:09Z", "type": "commit"}, {"oid": "6d0e87c5a7d137b16e96d4126d2dcb7fbab32458", "url": "https://github.com/twilio/twilio-java/commit/6d0e87c5a7d137b16e96d4126d2dcb7fbab32458", "message": "formatting", "committedDate": "2020-09-01T18:40:31Z", "type": "commit"}, {"oid": "be4f84d3a15b8c63ecdeea13ea94308b14abd775", "url": "https://github.com/twilio/twilio-java/commit/be4f84d3a15b8c63ecdeea13ea94308b14abd775", "message": "Merge branch 'main' into 569-paging-bug", "committedDate": "2020-09-04T15:25:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4ODM2OA==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r483688368", "body": "Nooooooooo", "bodyText": "Nooooooooo", "bodyHTML": "<p dir=\"auto\">Nooooooooo</p>", "author": "childish-sambino", "createdAt": "2020-09-04T15:25:57Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -284,7 +299,6 @@ private static String encodeParameters(final Map<String, List<String>> params) {\n                     if (value == null) {\n                         continue;\n                     }\n-", "originalCommit": "be4f84d3a15b8c63ecdeea13ea94308b14abd775", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36e94674b13366ed4272599b555e42c216ece26e", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..6c7f2145d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -299,6 +304,7 @@ public class Request {\n                     if (value == null) {\n                         continue;\n                     }\n+\n                     String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                     parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -299,6 +294,7 @@ public class Request {\n                     if (value == null) {\n                         continue;\n                     }\n+\n                     String encodedValue = URLEncoder.encode(value, \"UTF-8\");\n                     parameters.add(encodedName + \"=\" + encodedValue);\n                 }\n", "next_change": null}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4OTAyOQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r483689029", "body": "This var isn't needed.", "bodyText": "This var isn't needed.", "bodyHTML": "<p dir=\"auto\">This var isn't needed.</p>", "author": "childish-sambino", "createdAt": "2020-09-04T15:27:06Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +175,24 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            int port = -1;", "originalCommit": "be4f84d3a15b8c63ecdeea13ea94308b14abd775", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccc351781bb274bb0d832b1591cf12e651e52e17", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..1ff02c84f 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,13 +175,14 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n             String urlPort = null;\n             if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n+                urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n", "next_change": {"commit": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 1ff02c84f..babfcc80d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,8 +183,8 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            String encodedPath = String.join(\"/\", pathPieces);\n-            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n+            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n+            String encodedPath = StringUtils.join(pathPieces, \"/\");\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n", "next_change": {"commit": "85283077c8cf9ca0ce45afad981ec62ede2163a7", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex babfcc80d..95b1e1c58 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -183,8 +184,7 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n-            String encodedPath = StringUtils.join(pathPieces, \"/\");\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n", "next_change": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 95b1e1c58..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -185,18 +184,9 @@ public class Request {\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,24 +176,18 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "b3866a341d66777e8d71e59d240d9823556825fa", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..c4f6537fe 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,16 +197,17 @@ public class Request {\n      * Add query parameters for date ranges.\n      *\n      * @param name  name of query parameter\n-     * @param range date range\n+     * @param lowerBound lower bound of LocalDate range\n+     * @param upperBound upper bound of LocalDate range\n      */\n-    public void addQueryDateRange(final String name, final Range<LocalDate> range) {\n-        if (range.hasLowerBound()) {\n-            String value = range.lowerEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+    public void addQueryDateRange(final String name, LocalDate lowerBound, LocalDate upperBound) {\n+        if (lowerBound != null) {\n+            String value = lowerBound.toString();\n             addQueryParam(name + \">\", value);\n         }\n \n-        if (range.hasUpperBound()) {\n-            String value = range.upperEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+        if (upperBound != null) {\n+            String value = upperBound.toString();\n             addQueryParam(name + \"<\", value);\n         }\n     }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTIxMQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r483691211", "body": "Does this handle URLs with embedded credentials.", "bodyText": "Does this handle URLs with embedded credentials.", "bodyHTML": "<p dir=\"auto\">Does this handle URLs with embedded credentials.</p>", "author": "childish-sambino", "createdAt": "2020-09-04T15:29:39Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +175,24 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            int port = -1;\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                port = parsedUrl.getPort();\n+                urlPort = \":\" + port;\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n+            String query = null;\n+            if (parsedUrl.getQuery() != null) {\n+                query = \"?\" + parsedUrl.getQuery();\n+            }\n+            String ref = null;\n+            if (parsedUrl.getRef() != null) {\n+                ref = \"#\" + parsedUrl.getRef();\n+            }\n+            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);", "originalCommit": "be4f84d3a15b8c63ecdeea13ea94308b14abd775", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI0NDY3MQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r485244671", "bodyText": "Now it does. Great catch!", "author": "thinkingserious", "createdAt": "2020-09-08T23:11:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "ccc351781bb274bb0d832b1591cf12e651e52e17", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..1ff02c84f 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -191,8 +192,12 @@ public class Request {\n             if (parsedUrl.getRef() != null) {\n                 ref = \"#\" + parsedUrl.getRef();\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String credentials = null;\n+            if (parsedUrl.getUserInfo() != null) {\n+                credentials = parsedUrl.getUserInfo() + \"@\";\n+            }\n+            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "1da78503519aa5427ee2efa07820ec8ff09b7f24", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 1ff02c84f..ac96b4ab3 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +196,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials ,host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ac96b4ab3..babfcc80d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,7 +197,7 @@ public class Request {\n             if (parsedUrl.getUserInfo() != null) {\n                 credentials = parsedUrl.getUserInfo() + \"@\";\n             }\n-            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, path, query, ref);\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n", "next_change": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex babfcc80d..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -183,20 +183,10 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n-            String encodedPath = StringUtils.join(pathPieces, \"/\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,24 +176,18 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "b3866a341d66777e8d71e59d240d9823556825fa", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..c4f6537fe 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,16 +197,17 @@ public class Request {\n      * Add query parameters for date ranges.\n      *\n      * @param name  name of query parameter\n-     * @param range date range\n+     * @param lowerBound lower bound of LocalDate range\n+     * @param upperBound upper bound of LocalDate range\n      */\n-    public void addQueryDateRange(final String name, final Range<LocalDate> range) {\n-        if (range.hasLowerBound()) {\n-            String value = range.lowerEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+    public void addQueryDateRange(final String name, LocalDate lowerBound, LocalDate upperBound) {\n+        if (lowerBound != null) {\n+            String value = lowerBound.toString();\n             addQueryParam(name + \">\", value);\n         }\n \n-        if (range.hasUpperBound()) {\n-            String value = range.upperEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+        if (upperBound != null) {\n+            String value = upperBound.toString();\n             addQueryParam(name + \"<\", value);\n         }\n     }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTgyMQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r483691821", "body": "This needs to use a proper encoder. There are many other characters that it would cover.", "bodyText": "This needs to use a proper encoder. There are many other characters that it would cover.", "bodyHTML": "<p dir=\"auto\">This needs to use a proper encoder. There are many other characters that it would cover.</p>", "author": "childish-sambino", "createdAt": "2020-09-04T15:30:17Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +175,24 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            int port = -1;\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                port = parsedUrl.getPort();\n+                urlPort = \":\" + port;\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");", "originalCommit": "be4f84d3a15b8c63ecdeea13ea94308b14abd775", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "ccc351781bb274bb0d832b1591cf12e651e52e17", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..1ff02c84f 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,13 +175,14 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n             String urlPort = null;\n             if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n+                urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n", "next_change": {"commit": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 1ff02c84f..babfcc80d 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,8 +183,8 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            String encodedPath = String.join(\"/\", pathPieces);\n-            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n+            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n+            String encodedPath = StringUtils.join(pathPieces, \"/\");\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n", "next_change": {"commit": "85283077c8cf9ca0ce45afad981ec62ede2163a7", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex babfcc80d..95b1e1c58 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -183,8 +184,7 @@ public class Request {\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            // TODO: We can use String.join and drop the apache.commons dependency when we upgrade to Java 8\n-            String encodedPath = StringUtils.join(pathPieces, \"/\");\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = null;\n             if (parsedUrl.getQuery() != null) {\n                 query = \"?\" + parsedUrl.getQuery();\n", "next_change": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 95b1e1c58..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -185,18 +184,9 @@ public class Request {\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex ba162a174..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -175,24 +176,18 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            int port = -1;\n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                port = parsedUrl.getPort();\n-                urlPort = \":\" + port;\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String path = parsedUrl.getPath().replace(\"|\", \"%7C\");\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            return joinIgnoreNull(\"\", protocol, host, urlPort, path, query, ref);\n-        } catch (final MalformedURLException e) {\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n+        } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n         }\n     }\n", "next_change": {"commit": "b3866a341d66777e8d71e59d240d9823556825fa", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..c4f6537fe 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -196,16 +197,17 @@ public class Request {\n      * Add query parameters for date ranges.\n      *\n      * @param name  name of query parameter\n-     * @param range date range\n+     * @param lowerBound lower bound of LocalDate range\n+     * @param upperBound upper bound of LocalDate range\n      */\n-    public void addQueryDateRange(final String name, final Range<LocalDate> range) {\n-        if (range.hasLowerBound()) {\n-            String value = range.lowerEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+    public void addQueryDateRange(final String name, LocalDate lowerBound, LocalDate upperBound) {\n+        if (lowerBound != null) {\n+            String value = lowerBound.toString();\n             addQueryParam(name + \">\", value);\n         }\n \n-        if (range.hasUpperBound()) {\n-            String value = range.upperEndpoint().toString(QUERY_STRING_DATE_FORMAT);\n+        if (upperBound != null) {\n+            String value = upperBound.toString();\n             addQueryParam(name + \"<\", value);\n         }\n     }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "26c8f6b47ba76494702b225de893322d159b193e", "url": "https://github.com/twilio/twilio-java/commit/26c8f6b47ba76494702b225de893322d159b193e", "message": "Merge branch 'main' of https://github.com/twilio/twilio-java into 569-paging-bug", "committedDate": "2020-09-08T22:10:48Z", "type": "commit"}, {"oid": "ccc351781bb274bb0d832b1591cf12e651e52e17", "url": "https://github.com/twilio/twilio-java/commit/ccc351781bb274bb0d832b1591cf12e651e52e17", "message": "add credentails, user proper encoder", "committedDate": "2020-09-08T23:11:00Z", "type": "commit"}, {"oid": "e5acba8da96c60a7cbb0d9fd62cf15f14508120d", "url": "https://github.com/twilio/twilio-java/commit/e5acba8da96c60a7cbb0d9fd62cf15f14508120d", "message": "Merge branch '569-paging-bug' of https://github.com/twilio/twilio-java into 569-paging-bug", "committedDate": "2020-09-08T23:11:15Z", "type": "commit"}, {"oid": "1da78503519aa5427ee2efa07820ec8ff09b7f24", "url": "https://github.com/twilio/twilio-java/commit/1da78503519aa5427ee2efa07820ec8ff09b7f24", "message": "formatting", "committedDate": "2020-09-08T23:12:40Z", "type": "commit"}, {"oid": "36e94674b13366ed4272599b555e42c216ece26e", "url": "https://github.com/twilio/twilio-java/commit/36e94674b13366ed4272599b555e42c216ece26e", "message": "formatting", "committedDate": "2020-09-08T23:17:48Z", "type": "commit"}, {"oid": "14e2a314df79e3d1388e3bde760f8201f6a146ba", "url": "https://github.com/twilio/twilio-java/commit/14e2a314df79e3d1388e3bde760f8201f6a146ba", "message": "formatting", "committedDate": "2020-09-08T23:19:16Z", "type": "commit"}, {"oid": "7a774590e3b09fdf8eb2d2b63ffa097bb91e2e6b", "url": "https://github.com/twilio/twilio-java/commit/7a774590e3b09fdf8eb2d2b63ffa097bb91e2e6b", "message": "Update pom.xml", "committedDate": "2020-09-08T23:19:51Z", "type": "commit"}, {"oid": "92c7ee6034716bf3651fac24ce37391fe17f0f8c", "url": "https://github.com/twilio/twilio-java/commit/92c7ee6034716bf3651fac24ce37391fe17f0f8c", "message": "revert to java 7 friendly joiner", "committedDate": "2020-09-08T23:39:35Z", "type": "commit"}, {"oid": "d080a42ef502f9ba40a5c0ef6281beb7e4c443e7", "url": "https://github.com/twilio/twilio-java/commit/d080a42ef502f9ba40a5c0ef6281beb7e4c443e7", "message": "fix apache dependency", "committedDate": "2020-09-08T23:43:46Z", "type": "commit"}, {"oid": "85283077c8cf9ca0ce45afad981ec62ede2163a7", "url": "https://github.com/twilio/twilio-java/commit/85283077c8cf9ca0ce45afad981ec62ede2163a7", "message": "revert to guava joiner", "committedDate": "2020-09-15T04:52:02Z", "type": "commit"}, {"oid": "b0bc241f52c7be29f0d5e43d35b9ffff87180938", "url": "https://github.com/twilio/twilio-java/commit/b0bc241f52c7be29f0d5e43d35b9ffff87180938", "message": "revert to guava joiner", "committedDate": "2020-09-15T04:52:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4Mzk1Nw==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r489083957", "body": "Simplify these for readability: `String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;`", "bodyText": "Simplify these for readability: String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;", "bodyHTML": "<p dir=\"auto\">Simplify these for readability: <code>String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;</code></p>", "author": "eshanholtz", "createdAt": "2020-09-16T00:02:09Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +176,28 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                urlPort = \":\" + parsedUrl.getPort();\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = null;\n+            if (parsedUrl.getQuery() != null) {\n+                query = \"?\" + parsedUrl.getQuery();\n+            }", "originalCommit": "b0bc241f52c7be29f0d5e43d35b9ffff87180938", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "380c84cf831a92765ab1182162dd0ce72b74f926", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 4cc65c9a0..2b206bca8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -184,18 +184,9 @@ public class Request {\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n-            }\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 4cc65c9a0..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,26 +176,16 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n-            String query = null;\n-            if (parsedUrl.getQuery() != null) {\n-                query = \"?\" + parsedUrl.getQuery();\n-            }\n-            String ref = null;\n-            if (parsedUrl.getRef() != null) {\n-                ref = \"#\" + parsedUrl.getRef();\n-            }\n-            String credentials = null;\n-            if (parsedUrl.getUserInfo() != null) {\n-                credentials = parsedUrl.getUserInfo() + \"@\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..97b8cba29 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,7 +181,7 @@ public class Request {\n             for (int i = 0; i < pathPieces.length; i++) {\n                 pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n", "next_change": {"commit": "fccfa00c5631fdc7becdeb02117109ed529aa360", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 97b8cba29..5d0f749a4 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -187,7 +188,7 @@ public class Request {\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n-            throw new ApiException(\"Bad URL: \" + url, e);\n+            throw new ApiException(\"Bad URL: \"+ e.getMessage());\n         }\n     }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "380c84cf831a92765ab1182162dd0ce72b74f926", "url": "https://github.com/twilio/twilio-java/commit/380c84cf831a92765ab1182162dd0ce72b74f926", "message": "simplifications", "committedDate": "2020-09-16T05:28:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490318659", "body": "I don't understand this `pathPieces` logic. Needs a comment.", "bodyText": "I don't understand this pathPieces logic. Needs a comment.", "bodyHTML": "<p dir=\"auto\">I don't understand this <code>pathPieces</code> logic. Needs a comment.</p>", "author": "childish-sambino", "createdAt": "2020-09-17T14:55:16Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +176,19 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                urlPort = \":\" + parsedUrl.getPort();\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");", "originalCommit": "380c84cf831a92765ab1182162dd0ce72b74f926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzMTY3Mg==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490331672", "bodyText": "Comment added. The idea is to only encode the path portion of the URL.", "author": "thinkingserious", "createdAt": "2020-09-17T15:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5NTQ0MQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490495441", "bodyText": "So if you have /foo|bar/baz|qux only baz/qux gets encoded?", "author": "childish-sambino", "createdAt": "2020-09-17T19:15:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUxMTgyMQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490511821", "bodyText": "Yes, baz|qux would only be encoded. Based on our tests, I'm assuming this case does not happen. If we do expect that use case, then perhaps we should encode all pieces of the path, save / characters.", "author": "thinkingserious", "createdAt": "2020-09-17T19:34:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUxNjYxOQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490516619", "bodyText": "We don't control where the characters needing encoding would be. Best to encode them all.", "author": "childish-sambino", "createdAt": "2020-09-17T19:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyMDMzNw==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490520337", "bodyText": "Updated", "author": "thinkingserious", "createdAt": "2020-09-17T19:47:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODY1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,17 +176,16 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..97b8cba29 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,7 +181,7 @@ public class Request {\n             for (int i = 0; i < pathPieces.length; i++) {\n                 pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n", "next_change": {"commit": "fccfa00c5631fdc7becdeb02117109ed529aa360", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 97b8cba29..5d0f749a4 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -187,7 +188,7 @@ public class Request {\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n-            throw new ApiException(\"Bad URL: \" + url, e);\n+            throw new ApiException(\"Bad URL: \"+ e.getMessage());\n         }\n     }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxOTA0NQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490319045", "body": "Spacing looks off. Are you using IntelliJ to format?", "bodyText": "Spacing looks off. Are you using IntelliJ to format?", "bodyHTML": "<p dir=\"auto\">Spacing looks off. Are you using IntelliJ to format?</p>", "author": "childish-sambino", "createdAt": "2020-09-17T14:55:42Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +176,19 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                urlPort = \":\" + parsedUrl.getPort();\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n+            String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n+            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;", "originalCommit": "380c84cf831a92765ab1182162dd0ce72b74f926", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMzMjY3Mg==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490332672", "bodyText": "Nice! The formatter caught a stray space after credentials.", "author": "thinkingserious", "createdAt": "2020-09-17T15:13:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxOTA0NQ=="}], "type": "inlineReview", "revised_code": {"commit": "70770a86f5b8d6b51f68562c2e551004298031f4", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..112a3ca11 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,11 +182,12 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,9 +181,10 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 2b206bca8..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,17 +176,16 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n-            String credentials  = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n+            String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n             throw new ApiException(\"Bad URL: \" + url, e);\n", "next_change": {"commit": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..97b8cba29 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,7 +181,7 @@ public class Request {\n             for (int i = 0; i < pathPieces.length; i++) {\n                 pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n", "next_change": {"commit": "fccfa00c5631fdc7becdeb02117109ed529aa360", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 97b8cba29..5d0f749a4 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -187,7 +188,7 @@ public class Request {\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n-            throw new ApiException(\"Bad URL: \" + url, e);\n+            throw new ApiException(\"Bad URL: \"+ e.getMessage());\n         }\n     }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "70770a86f5b8d6b51f68562c2e551004298031f4", "url": "https://github.com/twilio/twilio-java/commit/70770a86f5b8d6b51f68562c2e551004298031f4", "message": "add comment, formatting", "committedDate": "2020-09-17T15:11:41Z", "type": "commit"}, {"oid": "4e25c5d1ef274c27d3dc8ffd402120def87b5506", "url": "https://github.com/twilio/twilio-java/commit/4e25c5d1ef274c27d3dc8ffd402120def87b5506", "message": "Merge branch 'main' into 569-paging-bug", "committedDate": "2020-09-17T15:13:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5NDU1MQ==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490494551", "body": "Default limit is already `0` so second arg not needed.", "bodyText": "Default limit is already 0 so second arg not needed.", "bodyHTML": "<p dir=\"auto\">Default limit is already <code>0</code> so second arg not needed.</p>", "author": "childish-sambino", "createdAt": "2020-09-17T19:14:15Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +176,20 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                urlPort = \":\" + parsedUrl.getPort();\n+            }\n+            String protocol = parsedUrl.getProtocol() + \"://\";\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);", "originalCommit": "4e25c5d1ef274c27d3dc8ffd402120def87b5506", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1b033626650c686922f3912f1f2fdd14563b1560", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..02f0c9867 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -181,7 +181,7 @@ public class Request {\n                 urlPort = \":\" + parsedUrl.getPort();\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n             // Encode only the file path of the URL\n             pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n", "next_change": {"commit": "908953b80ecdc7030fa7995229b21abc331b1d73", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 02f0c9867..86d5c6fc8 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,8 +182,9 @@ public class Request {\n             }\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\");\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 112a3ca11..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,14 +176,12 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n-            String[] pathPieces = parsedUrl.getPath().split(\"/\", 0);\n-            // Encode only the file path of the URL\n-            pathPieces[pathPieces.length-1] = URLEncoder.encode(pathPieces[pathPieces.length-1], \"UTF-8\");\n+            String[] pathPieces = parsedUrl.getPath().split(\"/\");\n+            for (int i = 0; i < pathPieces.length; i++) {\n+                pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n+            }\n             String encodedPath = Joiner.on(\"/\").join(pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n", "next_change": {"commit": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..97b8cba29 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,7 +181,7 @@ public class Request {\n             for (int i = 0; i < pathPieces.length; i++) {\n                 pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n", "next_change": {"commit": "fccfa00c5631fdc7becdeb02117109ed529aa360", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 97b8cba29..5d0f749a4 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -187,7 +188,7 @@ public class Request {\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n-            throw new ApiException(\"Bad URL: \" + url, e);\n+            throw new ApiException(\"Bad URL: \"+ e.getMessage());\n         }\n     }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "1b033626650c686922f3912f1f2fdd14563b1560", "url": "https://github.com/twilio/twilio-java/commit/1b033626650c686922f3912f1f2fdd14563b1560", "message": "remove uncessary param", "committedDate": "2020-09-17T19:36:34Z", "type": "commit"}, {"oid": "1d1e3a07a6beac9e1022e05fbc9e2498bf667119", "url": "https://github.com/twilio/twilio-java/commit/1d1e3a07a6beac9e1022e05fbc9e2498bf667119", "message": "Merge branch '569-paging-bug' of https://github.com/twilio/twilio-java into 569-paging-bug", "committedDate": "2020-09-17T19:36:47Z", "type": "commit"}, {"oid": "908953b80ecdc7030fa7995229b21abc331b1d73", "url": "https://github.com/twilio/twilio-java/commit/908953b80ecdc7030fa7995229b21abc331b1d73", "message": "encode all pieces of the path", "committedDate": "2020-09-17T19:47:07Z", "type": "commit"}, {"oid": "aeda0b263ab173e741adf56c8d3807ae02499bca", "url": "https://github.com/twilio/twilio-java/commit/aeda0b263ab173e741adf56c8d3807ae02499bca", "message": "Merge branch 'main' into 569-paging-bug", "committedDate": "2020-09-17T19:51:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU0Nzg5Ng==", "url": "https://github.com/twilio/twilio-java/pull/571#discussion_r490547896", "body": "Could do one more simplification here similar to below:\r\n`String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;`", "bodyText": "Could do one more simplification here similar to below:\nString urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;", "bodyHTML": "<p dir=\"auto\">Could do one more simplification here similar to below:<br>\n<code>String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;</code></p>", "author": "eshanholtz", "createdAt": "2020-09-17T20:38:10Z", "path": "src/main/java/com/twilio/http/Request.java", "diffHunk": "@@ -175,9 +176,21 @@ private String buildURL() {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            return new URI(parsedUrl.getProtocol(), parsedUrl.getUserInfo(), host, parsedUrl.getPort(),\n-                    parsedUrl.getPath(), parsedUrl.getQuery(), parsedUrl.getRef()).toURL().toString();\n-        } catch (final MalformedURLException | URISyntaxException e) {\n+            String urlPort = null;\n+            if (parsedUrl.getPort() != -1) {\n+                urlPort = \":\" + parsedUrl.getPort();\n+            }", "originalCommit": "aeda0b263ab173e741adf56c8d3807ae02499bca", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "958a5588c12827e2d892cace357d7563d9e2bfc2", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 86d5c6fc8..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,10 +176,7 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\");\n             for (int i = 0; i < pathPieces.length; i++) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 86d5c6fc8..fdab6b9ad 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -176,10 +176,7 @@ public class Request {\n                 host = joinIgnoreNull(\".\", product, targetEdge, targetRegion, domain);\n             }\n \n-            String urlPort = null;\n-            if (parsedUrl.getPort() != -1) {\n-                urlPort = \":\" + parsedUrl.getPort();\n-            }\n+            String urlPort = parsedUrl.getPort() != -1 ? \":\" + parsedUrl.getPort() : null;\n             String protocol = parsedUrl.getProtocol() + \"://\";\n             String[] pathPieces = parsedUrl.getPath().split(\"/\");\n             for (int i = 0; i < pathPieces.length; i++) {\n", "next_change": {"commit": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex fdab6b9ad..97b8cba29 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -182,7 +181,7 @@ public class Request {\n             for (int i = 0; i < pathPieces.length; i++) {\n                 pathPieces[i] = URLEncoder.encode(pathPieces[i], \"UTF-8\");\n             }\n-            String encodedPath = Joiner.on(\"/\").join(pathPieces);\n+            String encodedPath = String.join(\"/\", pathPieces);\n             String query = parsedUrl.getQuery() != null ? \"?\" + parsedUrl.getQuery() : null;\n             String ref = parsedUrl.getRef() != null ? \"#\" + parsedUrl.getRef() : null;\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n", "next_change": {"commit": "fccfa00c5631fdc7becdeb02117109ed529aa360", "changed_code": [{"header": "diff --git a/src/main/java/com/twilio/http/Request.java b/src/main/java/com/twilio/http/Request.java\nindex 97b8cba29..5d0f749a4 100644\n--- a/src/main/java/com/twilio/http/Request.java\n+++ b/src/main/java/com/twilio/http/Request.java\n", "chunk": "@@ -187,7 +188,7 @@ public class Request {\n             String credentials = parsedUrl.getUserInfo() != null ? parsedUrl.getUserInfo() + \"@\" : null;\n             return joinIgnoreNull(\"\", protocol, credentials, host, urlPort, encodedPath, query, ref);\n         } catch (final MalformedURLException | UnsupportedEncodingException e) {\n-            throw new ApiException(\"Bad URL: \" + url, e);\n+            throw new ApiException(\"Bad URL: \"+ e.getMessage());\n         }\n     }\n \n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "2f5b9d570c844f2b2eebc741a97c7d302e5f6a32", "message": "Merge commit", "committedDate": null}, {"oid": "a9279b6b6c3b22ea325bf774e2b5e34a360bf5bf", "committedDate": "2020-09-22 17:16:01 -0500", "message": "chore: drop last 'com.google.common.base.Joiner'"}, {"oid": "e700f5eae11432a689bcbbbbe7056f3603fdf743", "committedDate": "2020-09-23 09:34:50 -0500", "message": "chore!: remove joda-time dependency (#572)"}, {"oid": "b3866a341d66777e8d71e59d240d9823556825fa", "committedDate": "2020-09-28 11:33:23 -0700", "message": "chore!: remove Guava Range() (#584)"}, {"oid": "fccfa00c5631fdc7becdeb02117109ed529aa360", "committedDate": "2021-10-05 13:27:12 -0700", "message": "fix: System Information Leak (#649)"}, {"oid": "2c29bbe3cdec20b1051e42813be422d9f2f3e927", "committedDate": "2022-05-25 10:53:24 +0530", "message": "feat: modify user agent string (#683)"}, {"oid": "6e6c5b6c618f9535b22fed459b07c8b4cbf71543", "committedDate": "2022-10-10 13:21:39 -0700", "message": "misc: remove dependency on javax jaxb-api (#714)"}, {"oid": "61acfef98ee81d1a21ca0ce5bef306b4f6a42b5f", "committedDate": "2023-01-31 10:30:56 +0530", "message": "fix: add non null values to param list (#727)"}, {"oid": "97d07ff8b4c3a208de6f472bbef32975a64bb6f7", "committedDate": "2023-02-03 17:56:47 +0530", "message": "fix: add null string check (#730)"}, {"oid": "3fac721afc281aaad425dd66d718d131c4d883d6", "committedDate": "2023-02-03 18:23:55 +0530", "message": "fix: add request null check (#731)"}]}, {"oid": "958a5588c12827e2d892cace357d7563d9e2bfc2", "url": "https://github.com/twilio/twilio-java/commit/958a5588c12827e2d892cace357d7563d9e2bfc2", "message": "simplification", "committedDate": "2020-09-17T21:03:04Z", "type": "commit"}, {"oid": "f973e481b9ebc2912b3326778f9365bc8da2eb48", "url": "https://github.com/twilio/twilio-java/commit/f973e481b9ebc2912b3326778f9365bc8da2eb48", "message": "Merge branch '569-paging-bug' of https://github.com/twilio/twilio-java into 569-paging-bug", "committedDate": "2020-09-17T21:03:16Z", "type": "commit"}]}