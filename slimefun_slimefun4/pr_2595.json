{"pr_number": 2595, "pr_title": "Fix ghost blocks", "pr_author": "Patbox", "pr_createdAt": "2020-12-05T17:06:05Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2595", "timeline": [{"oid": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "url": "https://github.com/Slimefun/Slimefun4/commit/f4633c528fb2e61529a297bef3c9312e17ea62c2", "message": "Fix ghost blocks", "committedDate": "2020-12-05T16:48:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTQzNA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831434", "body": "Why would you `return;` here...\r\nIf this is to prevent the Event from being cancelled, use an `if/else` structure.", "bodyText": "Why would you return; here...\nIf this is to prevent the Event from being cancelled, use an if/else structure.", "bodyHTML": "<p dir=\"auto\">Why would you <code>return;</code> here...<br>\nIf this is to prevent the Event from being cancelled, use an <code>if/else</code> structure.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:54:05Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();\n+                World world = block.getWorld();\n+                Location loc = block.getLocation();\n+                while (item.hasNext()) {\n+                    world.dropItem(loc, item.next());\n+                }\n+                BlockStorage.clearBlockInfo(block);\n+                return;", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTQ3NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831474", "body": "Why the iterator...", "bodyText": "Why the iterator...", "bodyHTML": "<p dir=\"auto\">Why the iterator...</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:54:14Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTUxOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831519", "body": "You cannot drop null or air items, so you would need to check for that.", "bodyText": "You cannot drop null or air items, so you would need to check for that.", "bodyHTML": "<p dir=\"auto\">You cannot drop null or air items, so you would need to check for that.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:54:30Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();\n+                World world = block.getWorld();\n+                Location loc = block.getLocation();\n+                while (item.hasNext()) {\n+                    world.dropItem(loc, item.next());", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTU2Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831563", "body": "Also *dropItemNaturally", "bodyText": "Also *dropItemNaturally", "bodyHTML": "<p dir=\"auto\">Also *dropItemNaturally</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:54:47Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();\n+                World world = block.getWorld();\n+                Location loc = block.getLocation();\n+                while (item.hasNext()) {\n+                    world.dropItem(loc, item.next());", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTY4NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831684", "body": "These two statements can be merged.", "bodyText": "These two statements can be merged.", "bodyHTML": "<p dir=\"auto\">These two statements can be merged.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:55:42Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTczMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831730", "body": "The order of these checks should be swapped for performance reasons.", "bodyText": "The order of these checks should be swapped for performance reasons.", "bodyHTML": "<p dir=\"auto\">The order of these checks should be swapped for performance reasons.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:55:56Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTkwMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831901", "body": "Calling `BlockStorage.check()` here is completely redundant.\r\nYou are already doing a check by doing `hasBlockInfo()` above, this is essentially doing two concurrent operations redundantly, a null check would be more sufficient here.", "bodyText": "Calling BlockStorage.check() here is completely redundant.\nYou are already doing a check by doing hasBlockInfo() above, this is essentially doing two concurrent operations redundantly, a null check would be more sufficient here.", "bodyHTML": "<p dir=\"auto\">Calling <code>BlockStorage.check()</code> here is completely redundant.<br>\nYou are already doing a check by doing <code>hasBlockInfo()</code> above, this is essentially doing two concurrent operations redundantly, a null check would be more sufficient here.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:56:55Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgzMTk5OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536831999", "body": "Not really much of a point in making these variables here.", "bodyText": "Not really much of a point in making these variables here.", "bodyHTML": "<p dir=\"auto\">Not really much of a point in making these variables here.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T17:57:21Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,7 +61,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n+        Block block = e.getBlock();\n+        if (BlockStorage.hasBlockInfo(block)) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                Iterator<ItemStack> item = BlockStorage.check(block).getDrops().iterator();\n+                World world = block.getWorld();\n+                Location loc = block.getLocation();", "originalCommit": "f4633c528fb2e61529a297bef3c9312e17ea62c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ff634c0f5ce91ca4955b43c57c77e0b7c726f7fc", "url": "https://github.com/Slimefun/Slimefun4/commit/ff634c0f5ce91ca4955b43c57c77e0b7c726f7fc", "message": "Make code better", "committedDate": "2020-12-05T19:22:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3Nzk1Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536877956", "body": "Speaking of which, since you modified this class, feel free to add yourself here.\r\nSo we know who to contact XD", "bodyText": "Speaking of which, since you modified this class, feel free to add yourself here.\nSo we know who to contact XD", "bodyHTML": "<p dir=\"auto\">Speaking of which, since you modified this class, feel free to add yourself here.<br>\nSo we know who to contact XD</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T19:28:49Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -38,10 +38,10 @@\n /**\n  * The {@link BlockListener} is responsible for listening to the {@link BlockPlaceEvent}\n  * and {@link BlockBreakEvent}.\n- * \n+ *\n  * @author TheBusyBiscuit\n  * @author Linox\n- * ", "originalCommit": "ff634c0f5ce91ca4955b43c57c77e0b7c726f7fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODQ5OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536878498", "body": "As stated in a prior review, these two checks should be swapped for performance reason.\r\nAny `BlockStorage` operations might be heavy depending on their concurrent behaviour and take a relatively long time to compute, whereas the `.isAir()` check is very inexpensive.\r\nSwapping will reduce those heavy lookups to a bare minimum.\r\n\r\n```suggestion\r\n        if (e.getBlockReplacedState().getType().isAir()) {\r\n            Block block = e.getBlock();\r\n            SlimefunItem sfItem = BlockStorage.check(block);\r\n\r\n            if (sfItem != null) {\r\n```", "bodyText": "As stated in a prior review, these two checks should be swapped for performance reason.\nAny BlockStorage operations might be heavy depending on their concurrent behaviour and take a relatively long time to compute, whereas the .isAir() check is very inexpensive.\nSwapping will reduce those heavy lookups to a bare minimum.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Block block = e.getBlock();\n          \n          \n            \n                    SlimefunItem sfItem = BlockStorage.check(block);\n          \n          \n            \n            \n          \n          \n            \n                    if (sfItem != null) {\n          \n          \n            \n                        if (e.getBlockReplacedState().getType().isAir()) {\n          \n          \n            \n                    if (e.getBlockReplacedState().getType().isAir()) {\n          \n          \n            \n                        Block block = e.getBlock();\n          \n          \n            \n                        SlimefunItem sfItem = BlockStorage.check(block);\n          \n          \n            \n            \n          \n          \n            \n                        if (sfItem != null) {", "bodyHTML": "<p dir=\"auto\">As stated in a prior review, these two checks should be swapped for performance reason.<br>\nAny <code>BlockStorage</code> operations might be heavy depending on their concurrent behaviour and take a relatively long time to compute, whereas the <code>.isAir()</code> check is very inexpensive.<br>\nSwapping will reduce those heavy lookups to a bare minimum.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi x x-first\">Block</span><span class=\"x\"> block </span><span class=\"pl-k x\">=</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getBlock();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi x x-first\">SlimefunItem</span><span class=\"x\"> sfItem </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">BlockStorage</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">check(block</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">        </span><span class=\"pl-k x\">if</span><span class=\"x\"> (sfItem </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"x x-first\">e</span><span class=\"pl-k x\">.</span><span class=\"x\">getBlockReplacedState()</span><span class=\"pl-k x\">.</span><span class=\"x\">getType()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isAir()</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (e</span><span class=\"pl-k x\">.</span><span class=\"x\">getBlockReplacedState()</span><span class=\"pl-k x\">.</span><span class=\"x\">getType()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isAir()) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">    </span><span class=\"pl-smi x\">Block</span><span class=\"x\"> block </span><span class=\"pl-k x\">=</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getBlock(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"x x-first\">            </span><span class=\"pl-smi x\">SlimefunItem</span><span class=\"x\"> sfItem </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">BlockStorage</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">check(block);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"x x-first\">sfItem </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T19:32:10Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,8 +58,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n-            e.setCancelled(true);\n+        Block block = e.getBlock();\n+        SlimefunItem sfItem = BlockStorage.check(block);\n+\n+        if (sfItem != null) {\n+            if (e.getBlockReplacedState().getType().isAir()) {", "originalCommit": "ff634c0f5ce91ca4955b43c57c77e0b7c726f7fc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODUxNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536878516", "body": "Formatting, also for non-blocks a simple AIR check is sufficient.\r\n```suggestion\r\n                    if (item != null && item.getType() != Material.AIR) {\r\n                        block.getWorld().dropItemNaturally(block.getLocation(), item);\r\n                    }\r\n```", "bodyText": "Formatting, also for non-blocks a simple AIR check is sufficient.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (item != null && !item.getType().isAir()) { block.getWorld().dropItemNaturally(block.getLocation(), item); }\n          \n          \n            \n                                if (item != null && item.getType() != Material.AIR) {\n          \n          \n            \n                                    block.getWorld().dropItemNaturally(block.getLocation(), item);\n          \n          \n            \n                                }", "bodyHTML": "<p dir=\"auto\">Formatting, also for non-blocks a simple AIR check is sufficient.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (item <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k x x-first x-last\">!</span>item<span class=\"pl-k\">.</span>getType()<span class=\"pl-k x x-first\">.</span><span class=\"x\">isAir()) { block</span><span class=\"pl-k x\">.</span><span class=\"x\">getWorld()</span><span class=\"pl-k x\">.</span><span class=\"x\">dropItemNaturally(block</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getLocation(), item); }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (item <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> item<span class=\"pl-k\">.</span>getType()<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-smi x\">Material</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">AIR</span></span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        block<span class=\"pl-k\">.</span>getWorld()<span class=\"pl-k\">.</span>dropItemNaturally(block<span class=\"pl-k\">.</span>getLocation(), item);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-12-05T19:32:13Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,8 +58,18 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n-            e.setCancelled(true);\n+        Block block = e.getBlock();\n+        SlimefunItem sfItem = BlockStorage.check(block);\n+\n+        if (sfItem != null) {\n+            if (e.getBlockReplacedState().getType().isAir()) {\n+                for (ItemStack item : sfItem.getDrops()) {\n+                    if (item != null && !item.getType().isAir()) { block.getWorld().dropItemNaturally(block.getLocation(), item); }", "originalCommit": "ff634c0f5ce91ca4955b43c57c77e0b7c726f7fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg4ODMyMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r536888320", "bodyText": "Well.... There's multiple different airs now (1.16 api and 1.17 implementation).\nisAir is definitely best to use unless we know 100% that it would be AIR and not something like CAVE_AIR. Your code will check if it isn't AIR but can be CAVE_AIR. Just gonna cause issues\nWe should always be using isAir now", "author": "WalshyDev", "createdAt": "2020-12-05T20:36:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjg3ODUxNg=="}], "type": "inlineReview"}, {"oid": "7afb9b9791e4cd54996e5a566c5a847908d570cb", "url": "https://github.com/Slimefun/Slimefun4/commit/7afb9b9791e4cd54996e5a566c5a847908d570cb", "message": "Implement more suggestions", "committedDate": "2020-12-05T19:51:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3MjYzMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r540072630", "body": "I probably worded that wrongly, the null check is still required here, I simply meant that you could replace `.isAir()` with a `Material.AIR` check.\r\nBut either works tbh.\r\n\r\n```suggestion\r\n                    if (item != null && !item.getType().isAir()) {\r\n```", "bodyText": "I probably worded that wrongly, the null check is still required here, I simply meant that you could replace .isAir() with a Material.AIR check.\nBut either works tbh.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (!item.getType().isAir()) {\n          \n          \n            \n                                if (item != null && !item.getType().isAir()) {", "bodyHTML": "<p dir=\"auto\">I probably worded that wrongly, the null check is still required here, I simply meant that you could replace <code>.isAir()</code> with a <code>Material.AIR</code> check.<br>\nBut either works tbh.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>item<span class=\"pl-k\">.</span>getType()<span class=\"pl-k\">.</span>isAir()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (<span class=\"x x-first\">item </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span><span class=\"pl-k\">!</span>item<span class=\"pl-k\">.</span>getType()<span class=\"pl-k\">.</span>isAir()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-12-10T10:56:55Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,8 +59,21 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n-            e.setCancelled(true);\n+        Block block = e.getBlock();\n+\n+        if (e.getBlockReplacedState().getType().isAir()) {\n+            SlimefunItem sfItem = BlockStorage.check(block);\n+\n+            if (sfItem != null) {\n+                for (ItemStack item : sfItem.getDrops()) {\n+                    if (!item.getType().isAir()) {", "originalCommit": "7afb9b9791e4cd54996e5a566c5a847908d570cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA3NDE2MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2595#discussion_r540074161", "body": "I would suggest to add a fallback here, because the `BlockPlaceEvent` will also be called when a Player tries to place the block in the same space as tall grass or other passable materials.\r\nFor these, we want to cancel it nonetheless as they would need to destroy the block first.\r\n\r\n```suggestion\r\n        } else if (BlockStorage.hasBlockInfo(e.getBlock())) {\r\n            e.setCancelled(true);\r\n        }\r\n```", "bodyText": "I would suggest to add a fallback here, because the BlockPlaceEvent will also be called when a Player tries to place the block in the same space as tall grass or other passable materials.\nFor these, we want to cancel it nonetheless as they would need to destroy the block first.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else if (BlockStorage.hasBlockInfo(e.getBlock())) {\n          \n          \n            \n                        e.setCancelled(true);\n          \n          \n            \n                    }", "bodyHTML": "<p dir=\"auto\">I would suggest to add a fallback here, because the <code>BlockPlaceEvent</code> will also be called when a Player tries to place the block in the same space as tall grass or other passable materials.<br>\nFor these, we want to cancel it nonetheless as they would need to destroy the block first.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }<span class=\"x x-first\"> </span><span class=\"pl-k x\">else</span><span class=\"x\"> </span><span class=\"pl-k x\">if</span><span class=\"x\"> (</span><span class=\"pl-smi x\">BlockStorage</span><span class=\"pl-k x\">.</span><span class=\"x\">hasBlockInfo(e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getBlock())) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            e<span class=\"pl-k\">.</span>setCancelled(<span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-12-10T10:59:16Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/listeners/BlockListener.java", "diffHunk": "@@ -58,8 +59,21 @@ public void onBlockPlaceExisting(BlockPlaceEvent e) {\n         // This prevents Players from placing a block where another block already exists\n         // While this can cause ghost blocks it also prevents them from replacing grass\n         // or saplings etc...\n-        if (BlockStorage.hasBlockInfo(e.getBlock())) {\n-            e.setCancelled(true);\n+        Block block = e.getBlock();\n+\n+        if (e.getBlockReplacedState().getType().isAir()) {\n+            SlimefunItem sfItem = BlockStorage.check(block);\n+\n+            if (sfItem != null) {\n+                for (ItemStack item : sfItem.getDrops()) {\n+                    if (!item.getType().isAir()) {\n+                        block.getWorld().dropItemNaturally(block.getLocation(), item);\n+                    }\n+                }\n+                BlockStorage.clearBlockInfo(block);\n+            } else {\n+                e.setCancelled(true);\n+            }\n         }", "originalCommit": "7afb9b9791e4cd54996e5a566c5a847908d570cb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "28e5771ca8068576b883e5c2c9ce27278ef0d13c", "url": "https://github.com/Slimefun/Slimefun4/commit/28e5771ca8068576b883e5c2c9ce27278ef0d13c", "message": "Implement more suggestions", "committedDate": "2020-12-10T11:38:31Z", "type": "commit"}]}