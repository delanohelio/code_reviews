{"pr_number": 2648, "pr_title": "Fixes #2647", "pr_author": "WalshyDev", "pr_createdAt": "2020-12-23T14:19:47Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2648", "timeline": [{"oid": "2872cf8a2e832267f6a7f1deed1c580940af790b", "url": "https://github.com/Slimefun/Slimefun4/commit/2872cf8a2e832267f6a7f1deed1c580940af790b", "message": "Fixed #2647", "committedDate": "2020-12-23T14:17:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547981731", "body": "I think this unholy abomination of new lines justifies to have its own dedicated method.", "bodyText": "I think this unholy abomination of new lines justifies to have its own dedicated method.", "bodyHTML": "<p dir=\"auto\">I think this unholy abomination of new lines justifies to have its own dedicated method.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T14:21:52Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -47,7 +47,12 @@ public void stomp(EntityDamageEvent fallDamageEvent) {\n         p.setVelocity(new Vector(0, 0.7, 0));\n \n         for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n+            if (n instanceof LivingEntity\n+                && n.isValid()\n+                && !n.getUniqueId().equals(p.getUniqueId())\n+                && ((LivingEntity) n).isCollidable()\n+                && n.hasGravity()\n+            ) {", "originalCommit": "2872cf8a2e832267f6a7f1deed1c580940af790b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MjQzMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547982430", "bodyText": "\"abomination\"\nyou seen a few lines down? 181 chars on a line monkaS", "author": "WalshyDev", "createdAt": "2020-12-23T14:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4NTk4Mg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547985982", "bodyText": "Still, putting this statement into its own method would also allow for flexibility in case a sub implementation wants to add additional checks.", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T14:30:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MTczMQ=="}], "type": "inlineReview"}, {"oid": "00c233dee59d1160e60513bea50439502eeb7818", "url": "https://github.com/Slimefun/Slimefun4/commit/00c233dee59d1160e60513bea50439502eeb7818", "message": "Move to a method", "committedDate": "2020-12-23T14:32:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547988022", "body": "changes p to player but b not to block?", "bodyText": "changes p to player but b not to block?", "bodyHTML": "<p dir=\"auto\">changes p to player but b not to block?</p>", "author": "J3fftw1", "createdAt": "2020-12-23T14:35:28Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,54 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity\n-                && n.isValid()\n-                && !n.getUniqueId().equals(p.getUniqueId())\n-                && ((LivingEntity) n).isCollidable()\n-                && n.hasGravity()\n-            ) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block b = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);", "originalCommit": "00c233dee59d1160e60513bea50439502eeb7818", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODMyNg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547988326", "bodyText": "reeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee leave me alone. Was just changing the shit associated with my method. Also b is a bit clearer than n or p", "author": "WalshyDev", "createdAt": "2020-12-23T14:36:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk5MTM4Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r547991387", "bodyText": "i mean b is as clear as p in this case i agree n is weird but b and p are both really clear in this case so i would say make them all full name or 1 letter be consistent", "author": "J3fftw1", "createdAt": "2020-12-23T14:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4ODAyMg=="}], "type": "inlineReview"}, {"oid": "6cf2051e604499c78e8f40c0be1bea463f8b4331", "url": "https://github.com/Slimefun/Slimefun4/commit/6cf2051e604499c78e8f40c0be1bea463f8b4331", "message": "Panda smells", "committedDate": "2020-12-23T14:56:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA4ODk5MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548088990", "body": "Why are you using `@code` instead of `@link` here?", "bodyText": "Why are you using @code instead of @link here?", "bodyHTML": "<p dir=\"auto\">Why are you using <code>@code</code> instead of <code>@link</code> here?</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T17:51:53Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying\n+     * collision with {@code LivingEntity#setCollidable(false)} or\n+     * gravity with {@code LivingEntity#setGravity(false)}.", "originalCommit": "6cf2051e604499c78e8f40c0be1bea463f8b4331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4NTk4MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548285981", "bodyText": "Just for the sake of adding false to be clear what people should do. I can change it", "author": "WalshyDev", "createdAt": "2020-12-23T22:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA4ODk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MDgxMA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548090810", "body": "I would suggest to swap the order of parameters here and rename the method.\r\nThe current order is unintuitive in my opinion or at least in a grammatical sense. If the method was called \"canBePushedBy\" then the current order would make more sense. So I am in favour of swapping these here.\r\n\r\nAlso if you want this to be overridden, then it should be at least `protected`.\r\n\r\n```suggestion\r\n    protected boolean canPush(@Nonnull Player player, @Nonnull LivingEntity entity) {\r\n```", "bodyText": "I would suggest to swap the order of parameters here and rename the method.\nThe current order is unintuitive in my opinion or at least in a grammatical sense. If the method was called \"canBePushedBy\" then the current order would make more sense. So I am in favour of swapping these here.\nAlso if you want this to be overridden, then it should be at least protected.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean canMoveEntity(@Nonnull LivingEntity entity, @Nonnull Player player) {\n          \n          \n            \n                protected boolean canPush(@Nonnull Player player, @Nonnull LivingEntity entity) {", "bodyHTML": "<p dir=\"auto\">I would suggest to swap the order of parameters here and rename the method.<br>\nThe current order is unintuitive in my opinion or at least in a grammatical sense. If the method was called \"canBePushedBy\" then the current order would make more sense. So I am in favour of swapping these here.</p>\n<p dir=\"auto\">Also if you want this to be overridden, then it should be at least <code>protected</code>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first x-last\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">canMoveEntity</span>(<span class=\"pl-k\">@Nonnull</span> <span class=\"pl-smi x x-first\">LivingEntity</span><span class=\"x x-last\"> entity</span>, <span class=\"pl-k\">@Nonnull</span> <span class=\"pl-smi x x-first\">Player</span><span class=\"x x-last\"> player</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">protected</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">canPush</span>(<span class=\"pl-k\">@Nonnull</span> <span class=\"pl-smi x x-first\">Player</span><span class=\"x x-last\"> player</span>, <span class=\"pl-k\">@Nonnull</span> <span class=\"pl-smi x x-first\">LivingEntity</span><span class=\"x x-last\"> entity</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T17:54:03Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying\n+     * collision with {@code LivingEntity#setCollidable(false)} or\n+     * gravity with {@code LivingEntity#setGravity(false)}.\n+     *\n+     * @param entity\n+     *            The {@link LivingEntity} to check.\n+     * @param player\n+     *            The {@link Player} using the {@link StomperBoots}.\n+     * @return If the entity can move.\n+     */\n+    private boolean canMoveEntity(@Nonnull LivingEntity entity, @Nonnull Player player) {", "originalCommit": "6cf2051e604499c78e8f40c0be1bea463f8b4331", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MTU3MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548091570", "body": "According to the javadocs convention `<br>` should not be used. Instead `<p>` should be used to start a new paragraph.\r\nAlthough you will see the line break quite often in this codebase already because I didn't know that until recently either.", "bodyText": "According to the javadocs convention <br> should not be used. Instead <p> should be used to start a new paragraph.\nAlthough you will see the line break quite often in this codebase already because I didn't know that until recently either.", "bodyHTML": "<p dir=\"auto\">According to the javadocs convention <code>&lt;br&gt;</code> should not be used. Instead <code>&lt;p&gt;</code> should be used to start a new paragraph.<br>\nAlthough you will see the line break quite often in this codebase already because I didn't know that until recently either.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T17:54:54Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -89,4 +91,20 @@ private Vector getShockwave(Location origin, Location target) {\n         }\n     }\n \n+    /**\n+     * Checks if the stomper boots can move an entity and is not the player who is using the boots.\n+     * <br><b>For developers:</b> If you're spawning an immovable NPC, you should be denying", "originalCommit": "6cf2051e604499c78e8f40c0be1bea463f8b4331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI4NjIwOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548286208", "bodyText": "Was doing it for consistency but sute", "author": "WalshyDev", "createdAt": "2020-12-23T22:14:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MTU3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MjgzOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548092838", "body": "I don't really see much of a problem with the naming of p, n and b but sure.", "bodyText": "I don't really see much of a problem with the naming of p, n and b but sure.", "bodyHTML": "<p dir=\"auto\">I don't really see much of a problem with the naming of p, n and b but sure.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-12-23T17:56:20Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/armor/StomperBoots.java", "diffHunk": "@@ -37,49 +39,49 @@ public StomperBoots(Category category, SlimefunItemStack item, RecipeType recipe\n \n     /**\n      * This will apply the \"stomp\" effect to the given {@link EntityDamageEvent}.\n-     * \n+     *\n      * @param fallDamageEvent\n      *            The {@link EntityDamageEvent} in which the {@link Player} has taken fall damage\n      */\n     public void stomp(EntityDamageEvent fallDamageEvent) {\n-        Player p = (Player) fallDamageEvent.getEntity();\n-        p.getWorld().playSound(p.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n-        p.setVelocity(new Vector(0, 0.7, 0));\n+        Player player = (Player) fallDamageEvent.getEntity();\n+        player.getWorld().playSound(player.getLocation(), Sound.ENTITY_ZOMBIE_BREAK_WOODEN_DOOR, 1F, 2F);\n+        player.setVelocity(new Vector(0, 0.7, 0));\n \n-        for (Entity n : p.getNearbyEntities(4, 4, 4)) {\n-            if (n instanceof LivingEntity && n.isValid() && !n.getUniqueId().equals(p.getUniqueId())) {\n-                Vector velocity = getShockwave(p.getLocation(), n.getLocation());\n-                n.setVelocity(velocity);\n+        for (Entity entity : player.getNearbyEntities(4, 4, 4)) {\n+            if (entity instanceof LivingEntity && canMoveEntity((LivingEntity) entity, player)) {\n+                Vector velocity = getShockwave(player.getLocation(), entity.getLocation());\n+                entity.setVelocity(velocity);\n \n                 // Check if it's not a Player or if PvP is enabled\n-                if (!(n instanceof Player) || (p.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(p, n.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n-                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(p, n, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n+                if (!(entity instanceof Player) || (player.getWorld().getPVP() && SlimefunPlugin.getProtectionManager().hasPermission(player, entity.getLocation(), ProtectableAction.ATTACK_PLAYER))) {\n+                    EntityDamageByEntityEvent event = new EntityDamageByEntityEvent(player, entity, DamageCause.ENTITY_ATTACK, fallDamageEvent.getDamage() / 2);\n                     Bukkit.getPluginManager().callEvent(event);\n \n                     if (!event.isCancelled()) {\n-                        ((LivingEntity) n).damage(event.getDamage());\n+                        ((LivingEntity) entity).damage(event.getDamage());\n                     }\n                 }\n             }\n         }\n \n         for (BlockFace face : BlockFace.values()) {\n-            Block b = p.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n-            p.getWorld().playEffect(b.getLocation(), Effect.STEP_SOUND, b.getType());\n+            Block block = player.getLocation().getBlock().getRelative(BlockFace.DOWN).getRelative(face);\n+            player.getWorld().playEffect(block.getLocation(), Effect.STEP_SOUND, block.getType());\n         }", "originalCommit": "6cf2051e604499c78e8f40c0be1bea463f8b4331", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI3MTQyMQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2648#discussion_r548271421", "bodyText": "p and b could be used fine like that but n for entity is a bit odd here, and besides I think using full names is cleaner and more easily readable", "author": "svr333", "createdAt": "2020-12-23T21:53:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MjgzOA=="}], "type": "inlineReview"}, {"oid": "9c31c746dd61da13303ad08fc41559fa22a4cebe", "url": "https://github.com/Slimefun/Slimefun4/commit/9c31c746dd61da13303ad08fc41559fa22a4cebe", "message": "Requested changes", "committedDate": "2020-12-23T22:16:45Z", "type": "commit"}]}