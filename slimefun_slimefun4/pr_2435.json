{"pr_number": 2435, "pr_title": "Stop unwanted actions from StrangeNetherGoo and Heavy Cream", "pr_author": "TheSilentPro", "pr_createdAt": "2020-10-10T16:57:41Z", "pr_url": "https://github.com/Slimefun/Slimefun4/pull/2435", "timeline": [{"oid": "0580a873ec204f3372dca87e233c29c6731fcf34", "url": "https://github.com/Slimefun/Slimefun4/commit/0580a873ec204f3372dca87e233c29c6731fcf34", "message": "Stop unwanted actions with StrangeNetherGoo and HeavyCream", "committedDate": "2020-10-10T16:50:41Z", "type": "commit"}, {"oid": "cf0f7c37e08acaf07a5062d48a9d8349039bddae", "url": "https://github.com/Slimefun/Slimefun4/commit/cf0f7c37e08acaf07a5062d48a9d8349039bddae", "message": "Merge remote-tracking branch 'upstream/master'", "committedDate": "2020-10-10T16:50:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE0OA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812148", "body": "You can also just make this a `SimpleSlimefunItem<ItemUseHandler>` to avoid the class casting.", "bodyText": "You can also just make this a SimpleSlimefunItem<ItemUseHandler> to avoid the class casting.", "bodyHTML": "<p dir=\"auto\">You can also just make this a <code>SimpleSlimefunItem&lt;ItemUseHandler&gt;</code> to avoid the class casting.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T17:21:41Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {", "originalCommit": "cf0f7c37e08acaf07a5062d48a9d8349039bddae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812173", "body": "ParamsAreNonnullByDefault", "bodyText": "ParamsAreNonnullByDefault", "bodyHTML": "<p dir=\"auto\">ParamsAreNonnullByDefault</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T17:21:52Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting and, it's\n+ * used for various food recipes recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SlimefunItem {\n+", "originalCommit": "cf0f7c37e08acaf07a5062d48a9d8349039bddae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMzEyMw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502813123", "bodyText": "Add it to the class? (And both classes or just this one)\nMay you tell me what that does, haven't really seen it in other sf classes?", "author": "TheSilentPro", "createdAt": "2020-10-10T17:32:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxNDAxOQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502814019", "bodyText": "To the constructor, it marks the parameters to be \"non-null\".\nIt is used for most of our constructors and methods.\nI see the preview being a bit inaccurate there...\nI marked the line above the constructor but forgot that it doesn't show the constructor below in the preview :/", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T17:42:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjE3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxMjMxNA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502812314", "body": "Again, SimpleSlimefunItem<ItemUseHandler> and probably only cancel it for signs", "bodyText": "Again, SimpleSlimefunItem and probably only cancel it for signs", "bodyHTML": "<p dir=\"auto\">Again, SimpleSlimefunItem and probably only cancel it for signs</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T17:23:46Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +39,9 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Override\n+    public void preRegister() {\n+        addItemHandler((ItemUseHandler) PlayerRightClickEvent::cancel);", "originalCommit": "cf0f7c37e08acaf07a5062d48a9d8349039bddae", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f9928e5e109bdb57b02db1ba755cfad8e701251b", "url": "https://github.com/Slimefun/Slimefun4/commit/f9928e5e109bdb57b02db1ba755cfad8e701251b", "message": "Add requested changes", "committedDate": "2020-10-10T18:20:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502818004", "body": "Use tags.", "bodyText": "Use tags.", "bodyHTML": "<p dir=\"auto\">Use tags.</p>", "author": "LinoxGH", "createdAt": "2020-10-10T18:25:20Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +43,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (e.getClickedBlock().get().getType().name().contains(\"SIGN\")) {", "originalCommit": "f9928e5e109bdb57b02db1ba755cfad8e701251b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyMDE1MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502820150", "bodyText": "Tag.SIGNS please", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T18:47:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyNjU1Nw==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502826557", "bodyText": "Didn't know that was a thing, i will get on it sorry.", "author": "TheSilentPro", "createdAt": "2020-10-10T19:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgxODAwNA=="}], "type": "inlineReview"}, {"oid": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "url": "https://github.com/Slimefun/Slimefun4/commit/dfe33b35346c24552ed949b4d1756b43c7bfd447", "message": "Didn't know this existed", "committedDate": "2020-10-10T20:05:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0MzkzOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843938", "body": "First off: This should NOT be public.\r\nAlso a missing nullability annotation.\r\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "bodyHTML": "<p dir=\"auto\">First off: This should NOT be public.<br>\nAlso a missing nullability annotation.<br>\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:32:36Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843966", "body": "Formatting\r\n```suggestion\r\n        } else {\r\n```", "bodyText": "Formatting\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    else {\n          \n          \n            \n                    } else {", "bodyHTML": "<p dir=\"auto\">Formatting</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:32:56Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+                e.cancel();\n+            }\n+        }\n+        else {", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Mjc5NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502892794", "bodyText": "Last time i had it like that and you said to put it in the next line", "author": "TheSilentPro", "createdAt": "2020-10-11T09:53:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NDM3OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502894379", "bodyText": "I know, but since many seemed to prefer the other style, we have revised our styling guidelines to now go with what the majority seems to prefer.", "author": "TheBusyBiscuit", "createdAt": "2020-10-11T10:08:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mzk4NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502843984", "body": "First off: This should NOT be public.\r\nAlso a missing nullability annotation.\r\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "bodyText": "First off: This should NOT be public.\nAlso a missing nullability annotation.\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.", "bodyHTML": "<p dir=\"auto\">First off: This should NOT be public.<br>\nAlso a missing nullability annotation.<br>\nBut most importantly, there is no need for this method, this can all easily be done as a lambda expression.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:33:15Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAwOA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844008", "body": "You can merge these two statements using &&", "bodyText": "You can merge these two statements using &&", "bodyHTML": "<p dir=\"auto\">You can merge these two statements using &amp;&amp;</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:33:38Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+                e.cancel();\n+            }\n+        }", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDAzMg==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844032", "body": "Calling the method twice is a bit non-optimal, you should store the Optional<Block> as a variable and use that.", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "bodyHTML": "<p dir=\"auto\">Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:34:05Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -37,4 +44,18 @@ public int getBarteringLootChance() {\n         return chance.getValue();\n     }\n \n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0NDA0NA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502844044", "body": "Calling the method twice is a bit non-optimal, you should store the Optional<Block> as a variable and use that.", "bodyText": "Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.", "bodyHTML": "<p dir=\"auto\">Calling the method twice is a bit non-optimal, you should store the Optional as a variable and use that.</p>", "author": "TheBusyBiscuit", "createdAt": "2020-10-10T23:34:10Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.github.thebusybiscuit.slimefun4.implementation.items.food;\n+\n+import io.github.thebusybiscuit.slimefun4.api.events.PlayerRightClickEvent;\n+import io.github.thebusybiscuit.slimefun4.core.handlers.ItemUseHandler;\n+import io.github.thebusybiscuit.slimefun4.implementation.items.SimpleSlimefunItem;\n+import me.mrCookieSlime.Slimefun.Lists.RecipeType;\n+import me.mrCookieSlime.Slimefun.Objects.Category;\n+import me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem;\n+import me.mrCookieSlime.Slimefun.api.SlimefunItemStack;\n+import org.bukkit.inventory.ItemStack;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+/**\n+ * This {@link SlimefunItem} can be obtained by crafting, it's\n+ * used for various foods and recipes\n+ *\n+ * @author TheSilentPro\n+ */\n+public class HeavyCream extends SimpleSlimefunItem<ItemUseHandler> {\n+\n+    @ParametersAreNonnullByDefault\n+    public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeType, ItemStack[] recipe, ItemStack recipeOutput) {\n+        super(category, item, recipeType, recipe, recipeOutput);\n+    }\n+\n+    @Nonnull\n+    @Override\n+    public ItemUseHandler getItemHandler() {\n+        return this::use;\n+    }\n+\n+    public void use(PlayerRightClickEvent e) {\n+        if (e.getClickedBlock().isPresent()) {\n+            if (!e.getClickedBlock().get().getType().isInteractable()) {", "originalCommit": "dfe33b35346c24552ed949b4d1756b43c7bfd447", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2902f74d10bf547fb92615d284b3c1cbd80d2608", "url": "https://github.com/Slimefun/Slimefun4/commit/2902f74d10bf547fb92615d284b3c1cbd80d2608", "message": "Changes", "committedDate": "2020-10-11T10:14:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NTE5MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502895190", "body": "I don't think i can use && here due to that else statement, correct me if i'm wrong though", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though", "bodyHTML": "<p dir=\"auto\">I don't think i can use &amp;&amp; here due to that else statement, correct me if i'm wrong though</p>", "author": "TheSilentPro", "createdAt": "2020-10-11T10:16:25Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "originalCommit": "2902f74d10bf547fb92615d284b3c1cbd80d2608", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NjU2MA==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896560", "bodyText": "Correct.", "author": "LinoxGH", "createdAt": "2020-10-11T10:29:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5NTE5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk1OQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896959", "body": "> I don't think i can use && here due to that else statement, correct me if i'm wrong though\r\n\r\nYes buuuuuut what cou could do is the following.\r\n```suggestion\r\n        return e -> {\r\n            Optional<Block> block = e.getClickedBlock();\r\n\r\n            if (!block.isPresent() || !block.get().getType().isInteractable()) {\r\n                e.cancel();\r\n            }\r\n```", "bodyText": "I don't think i can use && here due to that else statement, correct me if i'm wrong though\n\nYes buuuuuut what cou could do is the following.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent()) {\n          \n          \n            \n                            if (!block.get().getType().isInteractable()) {\n          \n          \n            \n                                e.cancel();\n          \n          \n            \n                            }\n          \n          \n            \n                        } else {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }\n          \n          \n            \n                    return e -> {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (!block.isPresent() || !block.get().getType().isInteractable()) {\n          \n          \n            \n                            e.cancel();\n          \n          \n            \n                        }", "bodyHTML": "<blockquote>\n<p dir=\"auto\">I don't think i can use &amp;&amp; here due to that else statement, correct me if i'm wrong though</p>\n</blockquote>\n<p dir=\"auto\">Yes buuuuuut what cou could do is the following.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"38\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Block</span>&gt;</span> block <span class=\"pl-k\">=</span> e<span class=\"pl-k\">.</span>getClickedBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (block<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>block<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getType()<span class=\"pl-k\">.</span>isInteractable()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    e<span class=\"pl-k\">.</span>cancel();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"43\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"44\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                e<span class=\"pl-k\">.</span>cancel();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"45\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"38\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Block</span>&gt;</span> block <span class=\"pl-k\">=</span> e<span class=\"pl-k\">.</span>getClickedBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"39\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"40\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>block<span class=\"pl-k\">.</span>isPresent() <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>block<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getType()<span class=\"pl-k\">.</span>isInteractable()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"41\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                e<span class=\"pl-k\">.</span>cancel();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"42\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-10-11T10:32:17Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/food/HeavyCream.java", "diffHunk": "@@ -28,18 +29,16 @@ public HeavyCream(Category category, SlimefunItemStack item, RecipeType recipeTy\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (!e.getClickedBlock().get().getType().isInteractable()) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent()) {\n+                if (!block.get().getType().isInteractable()) {\n+                    e.cancel();\n+                }\n+            } else {\n                 e.cancel();\n             }", "originalCommit": "2902f74d10bf547fb92615d284b3c1cbd80d2608", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg5Njk5MQ==", "url": "https://github.com/Slimefun/Slimefun4/pull/2435#discussion_r502896991", "body": "An empty line before the if always looks a bit nicer\r\n```suggestion\r\n            Optional<Block> block = e.getClickedBlock();\r\n\r\n            if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {\r\n```", "bodyText": "An empty line before the if always looks a bit nicer\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {\n          \n          \n            \n                        Optional<Block> block = e.getClickedBlock();\n          \n          \n            \n            \n          \n          \n            \n                        if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "bodyHTML": "<p dir=\"auto\">An empty line before the if always looks a bit nicer</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Block</span>&gt;</span> block <span class=\"pl-k\">=</span> e<span class=\"pl-k\">.</span>getClickedBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (block<span class=\"pl-k\">.</span>isPresent() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Tag</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SIGNS</span><span class=\"pl-k\">.</span>isTagged(block<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getType())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Block</span>&gt;</span> block <span class=\"pl-k\">=</span> e<span class=\"pl-k\">.</span>getClickedBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (block<span class=\"pl-k\">.</span>isPresent() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi\">Tag</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SIGNS</span><span class=\"pl-k\">.</span>isTagged(block<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getType())) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheBusyBiscuit", "createdAt": "2020-10-11T10:32:37Z", "path": "src/main/java/io/github/thebusybiscuit/slimefun4/implementation/items/misc/StrangeNetherGoo.java", "diffHunk": "@@ -47,15 +47,12 @@ public int getBarteringLootChance() {\n     @Nonnull\n     @Override\n     public ItemUseHandler getItemHandler() {\n-        return this::use;\n-    }\n-\n-    public void use(PlayerRightClickEvent e) {\n-        if (e.getClickedBlock().isPresent()) {\n-            if (Tag.SIGNS.isTagged(e.getClickedBlock().get().getType())) {\n+        return e -> {\n+            Optional<Block> block = e.getClickedBlock();\n+            if (block.isPresent() && Tag.SIGNS.isTagged(block.get().getType())) {", "originalCommit": "2902f74d10bf547fb92615d284b3c1cbd80d2608", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7177946aaef78cb0ac0de5371ceac09a4047bdb7", "url": "https://github.com/Slimefun/Slimefun4/commit/7177946aaef78cb0ac0de5371ceac09a4047bdb7", "message": "Changes pt2", "committedDate": "2020-10-11T10:44:15Z", "type": "commit"}]}