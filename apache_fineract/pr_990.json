{"pr_number": 990, "pr_title": "FINERACT-821 Added and Enforced EmptyBlock Checkstyle", "pr_author": "thesmallstar", "pr_createdAt": "2020-06-06T23:11:14Z", "pr_url": "https://github.com/apache/fineract/pull/990", "timeline": [{"oid": "ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "url": "https://github.com/apache/fineract/commit/ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "message": "INERACT-821 Added and Enforced EmptyBlock Checkstyle", "committedDate": "2020-06-08T18:57:07Z", "type": "commit"}, {"oid": "ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "url": "https://github.com/apache/fineract/commit/ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "message": "INERACT-821 Added and Enforced EmptyBlock Checkstyle", "committedDate": "2020-06-08T18:57:07Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTU1OA==", "url": "https://github.com/apache/fineract/pull/990#discussion_r436989558", "body": "Why changing this? Just curious..", "bodyText": "Why changing this? Just curious..", "bodyHTML": "<p dir=\"auto\">Why changing this? Just curious..</p>", "author": "vorburger", "createdAt": "2020-06-08T20:44:17Z", "path": "fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java", "diffHunk": "@@ -261,8 +261,10 @@ private String getTellerCriteria(final String sqlSearch, final Long officeId, fi\n             extraCriteria.append(\" and status = 300 \");\n         } else if (status.equalsIgnoreCase(\"inActive\")) {\n             extraCriteria.append(\" and status = 0 \");\n-        } else if (status.equalsIgnoreCase(\"all\")) {} else {\n+        } else {\n+            if (!status.equalsIgnoreCase(\"all\")){", "originalCommit": "ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzExNTA0NQ==", "url": "https://github.com/apache/fineract/pull/990#discussion_r437115045", "bodyText": "Else if block is empty for condition (status.equalsIgnoreCase(\"all\")), this is not supported.\nBut as else if block works, we cannot simply remove it, or even if the (status.equalsIgnoreCase(\"all\")) value is true it will go in else.\nWe don't want that, so I have added a extra check in else block to make sure (status.equalsIgnoreCase(\"all\")) is not true, and only then perform else action that what we received is incorrect and act on it.", "author": "thesmallstar", "createdAt": "2020-06-09T03:17:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTU1OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA4NjQwOA==", "url": "https://github.com/apache/fineract/pull/990#discussion_r439086408", "bodyText": "got it, thanks for clarifying!", "author": "vorburger", "createdAt": "2020-06-11T21:44:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4OTU1OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5MjEyNQ==", "url": "https://github.com/apache/fineract/pull/990#discussion_r436992125", "body": "I'm not 100% sure if PlatformDataIntegrityException is \"correct\" here, but don't really have a better idea without more closely than I have time for, and it probably doesn't really matter all that much, anyway. One fine day we should look into and then write up Guidance in the README about which exact Fineract Exception type to use in which \"layer\" (e.g. *Resource VS *Service). @ptuomola I doubt that's something you would fancy digging into?", "bodyText": "I'm not 100% sure if PlatformDataIntegrityException is \"correct\" here, but don't really have a better idea without more closely than I have time for, and it probably doesn't really matter all that much, anyway. One fine day we should look into and then write up Guidance in the README about which exact Fineract Exception type to use in which \"layer\" (e.g. *Resource VS *Service). @ptuomola I doubt that's something you would fancy digging into?", "bodyHTML": "<p dir=\"auto\">I'm not 100% sure if PlatformDataIntegrityException is \"correct\" here, but don't really have a better idea without more closely than I have time for, and it probably doesn't really matter all that much, anyway. One fine day we should look into and then write up Guidance in the README about which exact Fineract Exception type to use in which \"layer\" (e.g. *Resource VS *Service). <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ptuomola/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ptuomola\">@ptuomola</a> I doubt that's something you would fancy digging into?</p>", "author": "vorburger", "createdAt": "2020-06-08T20:49:24Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/sms/service/SmsCampaignDropdownReadPlatformServiceImpl.java", "diffHunk": "@@ -70,19 +71,18 @@ public SmsCampaignDropdownReadPlatformServiceImpl(final SmsConfigUtils smsConfig\n     public Collection<SmsProviderData> retrieveSmsProviders() {\n         Collection<SmsProviderData> smsProviderOptions = new ArrayList<>();\n         String hostName = \"\" ;\n-        try {\n             Map<String, Object> hostConfig = this.smsConfigUtils.getMessageGateWayRequestURI(\"smsbridges\", null);\n             URI uri = (URI) hostConfig.get(\"uri\");\n             hostName = uri.getHost() ;\n             HttpEntity<?> entity = (HttpEntity<?>) hostConfig.get(\"entity\");\n             ResponseEntity<Collection<SmsProviderData>> responseOne = restTemplate.exchange(uri, HttpMethod.GET, entity,\n                     new ParameterizedTypeReference<Collection<SmsProviderData>>() {});\n+             if (!responseOne.getStatusCode().equals(HttpStatus.OK)) {", "originalCommit": "ce134c7cf9ee8ce7ba634260bd223e328ef2cf2d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}