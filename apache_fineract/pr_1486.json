{"pr_number": 1486, "pr_title": "Bump ancient OkHTTP & Retrofit in Hooks (FINERACT-1252)", "pr_author": "vorburger", "pr_createdAt": "2020-11-01T14:48:28Z", "pr_url": "https://github.com/apache/fineract/pull/1486", "timeline": [{"oid": "6d5b1ebe7165815c3d9418ac7b72473a453c763f", "url": "https://github.com/apache/fineract/commit/6d5b1ebe7165815c3d9418ac7b72473a453c763f", "message": "Bump ancient OkHTTP & Retrofit in Hooks (FINERACT-1252)", "committedDate": "2020-11-02T09:58:19Z", "type": "commit"}, {"oid": "6d5b1ebe7165815c3d9418ac7b72473a453c763f", "url": "https://github.com/apache/fineract/commit/6d5b1ebe7165815c3d9418ac7b72473a453c763f", "message": "Bump ancient OkHTTP & Retrofit in Hooks (FINERACT-1252)", "committedDate": "2020-11-02T09:58:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwMDk4NA==", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516400984", "body": "just wondering if this part is taken care ?  \"  // Swallow error if it's because of method not supported or\r\n                    // if url throws 404 - required for integration test,\r\n                    // url generated on 1st POST request\"", "bodyText": "just wondering if this part is taken care ?  \"  // Swallow error if it's because of method not supported or\n// if url throws 404 - required for integration test,\n// url generated on 1st POST request\"", "bodyHTML": "<p dir=\"auto\">just wondering if this part is taken care ?  \"  // Swallow error if it's because of method not supported or<br>\n// if url throws 404 - required for integration test,<br>\n// url generated on 1st POST request\"</p>", "author": "fynmanoj", "createdAt": "2020-11-03T02:44:55Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/service/HookWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -282,15 +282,10 @@ private void validateHookRules(final HookTemplate template, final Set<HookConfig\n             if (conf.getFieldName().equals(payloadURLName)) {\n                 try {\n                     final WebHookService service = processorHelper.createWebHookService(fieldValue);\n-                    service.sendEmptyRequest();\n-                } catch (RetrofitError re) {\n-                    // Swallow error if it's because of method not supported or\n-                    // if url throws 404 - required for integration test,\n-                    // url generated on 1st POST request\n-                    if (re.getResponse() == null) {\n-                        String errorMessage = \"url.invalid\";\n-                        baseDataValidator.reset().failWithCodeNoParameterAddedToErrorCode(errorMessage);\n-                    }\n+                    service.sendEmptyRequest().execute();\n+                } catch (IOException re) {\n+                    String errorMessage = \"url.invalid\";", "originalCommit": "6d5b1ebe7165815c3d9418ac7b72473a453c763f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4NDQyNQ==", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516484425", "bodyText": "I was also wondering, but the integration tests all still pass now, so looks like this actually wasn't needed.", "author": "vorburger", "createdAt": "2020-11-03T08:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwMDk4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUwMTM1MQ==", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516501351", "body": "Weird host this Heroku URL is failing in Postman with trailing / but working in Retrofit with trailing /.", "bodyText": "Weird host this Heroku URL is failing in Postman with trailing / but working in Retrofit with trailing /.", "bodyHTML": "<p dir=\"auto\">Weird host this Heroku URL is failing in Postman with trailing / but working in Retrofit with trailing /.</p>", "author": "avikganguly01", "createdAt": "2020-11-03T08:45:44Z", "path": "integration-tests/src/test/java/org/apache/fineract/integrationtests/HookIntegrationTest.java", "diffHunk": "@@ -98,12 +93,11 @@ public void shouldSendOfficeCreationNotification() {\n         } finally {\n             this.hookHelper.deleteHook(hookId.longValue());\n         }\n-\n     }\n \n     @Test\n     public void createUpdateAndDeleteHook() {\n-        final String payloadURL = \"http://echo-webhook.herokuapp.com:80/Z7RXoCBdLSFMDrpn?\";\n+        final String payloadURL = \"http://echo-webhook.herokuapp.com:80/Z7RXoCBdLSFMDrpn/\";", "originalCommit": "6d5b1ebe7165815c3d9418ac7b72473a453c763f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}