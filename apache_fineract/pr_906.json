{"pr_number": 906, "pr_title": "FINERACT-942 Remove use of printStackTrace and added checkstyle", "pr_author": "thesmallstar", "pr_createdAt": "2020-05-18T00:51:03Z", "pr_url": "https://github.com/apache/fineract/pull/906", "merge_commit": "16fb971f4570c3fa4f0aa5d7710671ac93b52440", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r426406214", "body": "I suggest you using a logger but maybe @vorburger  or @awasum, @ptuomola or anyone else would have a different opinion as far as this is concerned.\r\nIt's more a convention to use here, whether checked or unchecked exceptions.", "bodyText": "I suggest you using a logger but maybe @vorburger  or @awasum, @ptuomola or anyone else would have a different opinion as far as this is concerned.\nIt's more a convention to use here, whether checked or unchecked exceptions.", "bodyHTML": "<p dir=\"auto\">I suggest you using a logger but maybe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/vorburger/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vorburger\">@vorburger</a>  or <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/awasum/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/awasum\">@awasum</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ptuomola/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ptuomola\">@ptuomola</a> or anyone else would have a different opinion as far as this is concerned.<br>\nIt's more a convention to use here, whether checked or unchecked exceptions.</p>", "author": "xurror", "createdAt": "2020-05-18T06:59:24Z", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java", "diffHunk": "@@ -587,11 +587,8 @@ public void checkPeriodicAccrualAccountingFlow() {\n         this.journalEntryHelper.checkJournalEntryForAssetAccount(assetAccount, this.EXPECTED_DISBURSAL_DATE, assetAccountInitialEntry);\n \n         final String jobName = \"Add Accrual Transactions\";\n-        try {\n-            this.schedulerJobHelper.executeJob(jobName);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQzNTI4Nw==", "url": "https://github.com/apache/fineract/pull/906#discussion_r426435287", "bodyText": "No, in a test, exceptions typically should not be logged but just \"fall through\" (propagate, with 'testXYZ() throws SomeException, Another # Exception...'), so that the test fails, if the exception happens. PS: We need to write this and more like this up into Logging Guidelines, e.g. on the README. Do you want to make a start with that in this PR?", "author": "vorburger", "createdAt": "2020-05-18T07:57:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0Mzg3MA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r426943870", "bodyText": "Yes, I will update the readme.", "author": "thesmallstar", "createdAt": "2020-05-18T23:20:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3OTc4OA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r427579788", "body": "@thesmallstar this needs to be kept. It's \"special\", and SupressWarning is OK here (only)", "bodyText": "@thesmallstar this needs to be kept. It's \"special\", and SupressWarning is OK here (only)", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/thesmallstar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thesmallstar\">@thesmallstar</a> this needs to be kept. It's \"special\", and SupressWarning is OK here (only)</p>", "author": "vorburger", "createdAt": "2020-05-19T20:28:27Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -87,7 +86,6 @@ public void printStackTrace(PrintStream s) {\n         int i = 0;\n         for (Throwable e : throwables) {\n             s.print(++i + \".\");\n-            e.printStackTrace(s);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDAxMA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580010", "body": "as above", "bodyText": "as above", "bodyHTML": "<p dir=\"auto\">as above</p>", "author": "vorburger", "createdAt": "2020-05-19T20:28:53Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -97,7 +95,6 @@ public void printStackTrace(PrintWriter s) {\n         int i = 0;\n         for (Throwable e : throwables) {\n             s.print(++i + \".\");\n-            e.printStackTrace(s);", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDE0MQ==", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580141", "body": "as below", "bodyText": "as below", "bodyHTML": "<p dir=\"auto\">as below</p>", "author": "vorburger", "createdAt": "2020-05-19T20:29:07Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -77,7 +76,7 @@ public void printStackTrace() {\n         int i = 0;\n         for (Throwable e : throwables) {\n             LOG.info(\"{}.\",++i);\n-            e.printStackTrace();", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDIzMA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580230", "body": "as below, must keep this as is", "bodyText": "as below, must keep this as is", "bodyHTML": "<p dir=\"auto\">as below, must keep this as is</p>", "author": "vorburger", "createdAt": "2020-05-19T20:29:19Z", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -65,7 +65,6 @@ public String getMessage() {\n             sb.append(++i);\n             sb.append(\". \");\n             Writer w = CharStreams.asWriter(sb);\n-            e.printStackTrace(new PrintWriter(w, true));", "originalCommit": null, "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r428561244", "body": "Two thoughts on this this: a) your LOG.error() is wrong, as everywhere else, please:\r\n\r\n```suggestion\r\n            LOG.error(\"Invalid date: \" + seedDateStr, e);\r\n```\r\n\r\nbut, b) more importantly, isn't this catch plain wrong, not required, and can just be removed?! `new Date()` does not throw ParseException - or am I missing something obvious?", "bodyText": "Two thoughts on this this: a) your LOG.error() is wrong, as everywhere else, please:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.error(\"{}\",e.getMessage());\n          \n          \n            \n                        LOG.error(\"Invalid date: \" + seedDateStr, e);\n          \n      \n    \n    \n  \n\nbut, b) more importantly, isn't this catch plain wrong, not required, and can just be removed?! new Date() does not throw ParseException - or am I missing something obvious?", "bodyHTML": "<p dir=\"auto\">Two thoughts on this this: a) your LOG.error() is wrong, as everywhere else, please:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first\">{}</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">,e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first\">Invalid date: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> seedDateStr, e</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">but, b) more importantly, isn't this catch plain wrong, not required, and can just be removed?! <code>new Date()</code> does not throw ParseException - or am I missing something obvious?</p>", "author": "vorburger", "createdAt": "2020-05-21T10:04:31Z", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "diffHunk": "@@ -114,7 +116,7 @@ private static Date convertToiCal4JCompatibleDate(final LocalDate inputDate) {\n         try {\n             formattedDate = new Date(seedDateStr, \"yyyy-MM-dd\");\n         } catch (final ParseException e) {\n-            e.printStackTrace();\n+            LOG.error(\"{}\",e.getMessage());", "originalCommit": null, "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyNTY3Mw==", "url": "https://github.com/apache/fineract/pull/906#discussion_r428725673", "bodyText": "It does throw a parse exception, a possible explanation is the string received might be complete gibberish and could not be parsed as a date?", "author": "thesmallstar", "createdAt": "2020-05-21T15:24:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyNjU4NA==", "url": "https://github.com/apache/fineract/pull/906#discussion_r428726584", "bodyText": "Replacing it with:\nLOG.error(\"Invalid date: {} \", seedDateStr, e);\nor spot bugs won't like it :)", "author": "thesmallstar", "createdAt": "2020-05-21T15:26:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NzI4MQ==", "url": "https://github.com/apache/fineract/pull/906#discussion_r428767281", "bodyText": "LGTM!", "author": "vorburger", "createdAt": "2020-05-21T16:28:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "ec45239269c44c4144bb183229866cac4e78880c", "url": "https://github.com/apache/fineract/commit/ec45239269c44c4144bb183229866cac4e78880c", "message": "FINERACT-942 Remove use of printStackTrace and added checkstyle", "committedDate": "2020-05-21T15:49:36Z", "type": "commit"}, {"oid": "ec45239269c44c4144bb183229866cac4e78880c", "url": "https://github.com/apache/fineract/commit/ec45239269c44c4144bb183229866cac4e78880c", "message": "FINERACT-942 Remove use of printStackTrace and added checkstyle", "committedDate": "2020-05-21T15:49:36Z", "type": "forcePushed"}]}