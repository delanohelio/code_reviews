{"pr_number": 7394, "pr_title": "Resolve Gradle's project's classes dir in case the JAR isn't availablable", "pr_author": "aloubyansky", "pr_createdAt": "2020-02-24T17:44:16Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7394", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxMzY0MA==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383613640", "body": "```suggestion\r\n            throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n          \n          \n            \n                        throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">RuntimeException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">UncheckedIOException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-25T01:37:34Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusGradleUtils.java", "diffHunk": "@@ -1,19 +1,79 @@\n package io.quarkus.gradle.tasks;\n \n+import java.io.File;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.internal.AbstractTask;\n+import org.gradle.api.tasks.SourceSet;\n \n import io.quarkus.bootstrap.model.AppModel;\n \n public class QuarkusGradleUtils {\n \n+    private static final String ERROR_COLLECTING_PROJECT_CLASSES = \"Failed to collect project's classes in a temporary dir\";\n+\n     public static Path serializeAppModel(final AppModel appModel) throws IOException {\n         final Path serializedModel = Files.createTempFile(\"quarkus-\", \"-gradle-test\");\n         try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(serializedModel))) {\n             out.writeObject(appModel);\n         }\n         return serializedModel;\n     }\n+\n+    public static String getClassesDir(SourceSet sourceSet, AbstractTask context) {\n+        final Set<String> sourcePaths = new HashSet<>();\n+        for (File sourceDir : sourceSet.getAllJava().getSrcDirs()) {\n+            sourcePaths.add(sourceDir.getAbsolutePath());\n+        }\n+\n+        FileCollection classesDirs = sourceSet.getOutput().getClassesDirs();\n+        Set<File> classDirFiles = classesDirs.getFiles();\n+        if (classDirFiles.size() == 1) {\n+            return classesDirs.getAsPath();\n+        }\n+\n+        //there does not seem to be any sane way of dealing with multiple output dirs, as there does not seem\n+        //to be a way to map them. We will need to address this at some point, but for now we just stick them\n+        //all in a temp dir\n+\n+        final Path tmpClassesDir = context.getTemporaryDir().toPath().resolve(\"quarkus-app-classes\");\n+        try {\n+            Files.createDirectories(tmpClassesDir);\n+        } catch (IOException e) {\n+            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNDg0OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383614849", "body": "```suggestion\r\n                stream.filter(Files::isRegularFile).forEach (s-> {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            stream.forEach(s -> {\n          \n          \n            \n                            stream.filter(Files::isRegularFile).forEach (s-> {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                stream<span class=\"pl-k\">.</span>forEach<span class=\"x x-first x-last\">(s </span><span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                stream<span class=\"pl-k\">.</span><span class=\"x x-first\">filter(</span><span class=\"pl-smi x\">Files</span><span class=\"pl-k x\">::</span><span class=\"x\">isRegularFile)</span><span class=\"pl-k x x-last\">.</span>forEach<span class=\"x x-first x-last\"> (s</span><span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-25T01:42:26Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusGradleUtils.java", "diffHunk": "@@ -1,19 +1,79 @@\n package io.quarkus.gradle.tasks;\n \n+import java.io.File;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.internal.AbstractTask;\n+import org.gradle.api.tasks.SourceSet;\n \n import io.quarkus.bootstrap.model.AppModel;\n \n public class QuarkusGradleUtils {\n \n+    private static final String ERROR_COLLECTING_PROJECT_CLASSES = \"Failed to collect project's classes in a temporary dir\";\n+\n     public static Path serializeAppModel(final AppModel appModel) throws IOException {\n         final Path serializedModel = Files.createTempFile(\"quarkus-\", \"-gradle-test\");\n         try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(serializedModel))) {\n             out.writeObject(appModel);\n         }\n         return serializedModel;\n     }\n+\n+    public static String getClassesDir(SourceSet sourceSet, AbstractTask context) {\n+        final Set<String> sourcePaths = new HashSet<>();\n+        for (File sourceDir : sourceSet.getAllJava().getSrcDirs()) {\n+            sourcePaths.add(sourceDir.getAbsolutePath());\n+        }\n+\n+        FileCollection classesDirs = sourceSet.getOutput().getClassesDirs();\n+        Set<File> classDirFiles = classesDirs.getFiles();\n+        if (classDirFiles.size() == 1) {\n+            return classesDirs.getAsPath();\n+        }\n+\n+        //there does not seem to be any sane way of dealing with multiple output dirs, as there does not seem\n+        //to be a way to map them. We will need to address this at some point, but for now we just stick them\n+        //all in a temp dir\n+\n+        final Path tmpClassesDir = context.getTemporaryDir().toPath().resolve(\"quarkus-app-classes\");\n+        try {\n+            Files.createDirectories(tmpClassesDir);\n+        } catch (IOException e) {\n+            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n+        }\n+        for (File c : classDirFiles) {\n+            Path cd = c.toPath();\n+            if (!Files.exists(cd)) {\n+                continue;\n+            }\n+            try (Stream<Path> stream = Files.walk(cd)) {\n+                stream.forEach(s -> {", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNTE2NA==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383615164", "body": "`Files.copy(s, targetPath)` is faster ", "bodyText": "Files.copy(s, targetPath) is faster", "bodyHTML": "<p dir=\"auto\"><code>Files.copy(s, targetPath)</code> is faster</p>", "author": "gastaldi", "createdAt": "2020-02-25T01:43:45Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusGradleUtils.java", "diffHunk": "@@ -1,19 +1,79 @@\n package io.quarkus.gradle.tasks;\n \n+import java.io.File;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.internal.AbstractTask;\n+import org.gradle.api.tasks.SourceSet;\n \n import io.quarkus.bootstrap.model.AppModel;\n \n public class QuarkusGradleUtils {\n \n+    private static final String ERROR_COLLECTING_PROJECT_CLASSES = \"Failed to collect project's classes in a temporary dir\";\n+\n     public static Path serializeAppModel(final AppModel appModel) throws IOException {\n         final Path serializedModel = Files.createTempFile(\"quarkus-\", \"-gradle-test\");\n         try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(serializedModel))) {\n             out.writeObject(appModel);\n         }\n         return serializedModel;\n     }\n+\n+    public static String getClassesDir(SourceSet sourceSet, AbstractTask context) {\n+        final Set<String> sourcePaths = new HashSet<>();\n+        for (File sourceDir : sourceSet.getAllJava().getSrcDirs()) {\n+            sourcePaths.add(sourceDir.getAbsolutePath());\n+        }\n+\n+        FileCollection classesDirs = sourceSet.getOutput().getClassesDirs();\n+        Set<File> classDirFiles = classesDirs.getFiles();\n+        if (classDirFiles.size() == 1) {\n+            return classesDirs.getAsPath();\n+        }\n+\n+        //there does not seem to be any sane way of dealing with multiple output dirs, as there does not seem\n+        //to be a way to map them. We will need to address this at some point, but for now we just stick them\n+        //all in a temp dir\n+\n+        final Path tmpClassesDir = context.getTemporaryDir().toPath().resolve(\"quarkus-app-classes\");\n+        try {\n+            Files.createDirectories(tmpClassesDir);\n+        } catch (IOException e) {\n+            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n+        }\n+        for (File c : classDirFiles) {\n+            Path cd = c.toPath();\n+            if (!Files.exists(cd)) {\n+                continue;\n+            }\n+            try (Stream<Path> stream = Files.walk(cd)) {\n+                stream.forEach(s -> {\n+                    try {\n+                        if (Files.isDirectory(s)) {\n+                            return;\n+                        }\n+                        final Path file = cd.relativize(tmpClassesDir);\n+                        final Path targetPath = tmpClassesDir.resolve(file.toString());\n+                        Files.createDirectories(targetPath.getParent());\n+                        byte[] data = Files.readAllBytes(s);\n+                        Files.write(targetPath, data);", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNTIzMw==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383615233", "body": "```suggestion\r\n                        throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n          \n          \n            \n                                    throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">RuntimeException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">UncheckedIOException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-25T01:44:02Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusGradleUtils.java", "diffHunk": "@@ -1,19 +1,79 @@\n package io.quarkus.gradle.tasks;\n \n+import java.io.File;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.internal.AbstractTask;\n+import org.gradle.api.tasks.SourceSet;\n \n import io.quarkus.bootstrap.model.AppModel;\n \n public class QuarkusGradleUtils {\n \n+    private static final String ERROR_COLLECTING_PROJECT_CLASSES = \"Failed to collect project's classes in a temporary dir\";\n+\n     public static Path serializeAppModel(final AppModel appModel) throws IOException {\n         final Path serializedModel = Files.createTempFile(\"quarkus-\", \"-gradle-test\");\n         try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(serializedModel))) {\n             out.writeObject(appModel);\n         }\n         return serializedModel;\n     }\n+\n+    public static String getClassesDir(SourceSet sourceSet, AbstractTask context) {\n+        final Set<String> sourcePaths = new HashSet<>();\n+        for (File sourceDir : sourceSet.getAllJava().getSrcDirs()) {\n+            sourcePaths.add(sourceDir.getAbsolutePath());\n+        }\n+\n+        FileCollection classesDirs = sourceSet.getOutput().getClassesDirs();\n+        Set<File> classDirFiles = classesDirs.getFiles();\n+        if (classDirFiles.size() == 1) {\n+            return classesDirs.getAsPath();\n+        }\n+\n+        //there does not seem to be any sane way of dealing with multiple output dirs, as there does not seem\n+        //to be a way to map them. We will need to address this at some point, but for now we just stick them\n+        //all in a temp dir\n+\n+        final Path tmpClassesDir = context.getTemporaryDir().toPath().resolve(\"quarkus-app-classes\");\n+        try {\n+            Files.createDirectories(tmpClassesDir);\n+        } catch (IOException e) {\n+            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n+        }\n+        for (File c : classDirFiles) {\n+            Path cd = c.toPath();\n+            if (!Files.exists(cd)) {\n+                continue;\n+            }\n+            try (Stream<Path> stream = Files.walk(cd)) {\n+                stream.forEach(s -> {\n+                    try {\n+                        if (Files.isDirectory(s)) {\n+                            return;\n+                        }\n+                        final Path file = cd.relativize(tmpClassesDir);\n+                        final Path targetPath = tmpClassesDir.resolve(file.toString());\n+                        Files.createDirectories(targetPath.getParent());\n+                        byte[] data = Files.readAllBytes(s);\n+                        Files.write(targetPath, data);\n+                    } catch (IOException e) {\n+                        throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNTI4Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383615286", "body": "```suggestion\r\n                throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n          \n          \n            \n                            throw new UncheckedIOException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">RuntimeException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first x-last\">UncheckedIOException</span>(<span class=\"pl-c1\">ERROR_COLLECTING_PROJECT_CLASSES</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-25T01:44:17Z", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusGradleUtils.java", "diffHunk": "@@ -1,19 +1,79 @@\n package io.quarkus.gradle.tasks;\n \n+import java.io.File;\n import java.io.IOException;\n import java.io.ObjectOutputStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import org.gradle.api.file.FileCollection;\n+import org.gradle.api.internal.AbstractTask;\n+import org.gradle.api.tasks.SourceSet;\n \n import io.quarkus.bootstrap.model.AppModel;\n \n public class QuarkusGradleUtils {\n \n+    private static final String ERROR_COLLECTING_PROJECT_CLASSES = \"Failed to collect project's classes in a temporary dir\";\n+\n     public static Path serializeAppModel(final AppModel appModel) throws IOException {\n         final Path serializedModel = Files.createTempFile(\"quarkus-\", \"-gradle-test\");\n         try (ObjectOutputStream out = new ObjectOutputStream(Files.newOutputStream(serializedModel))) {\n             out.writeObject(appModel);\n         }\n         return serializedModel;\n     }\n+\n+    public static String getClassesDir(SourceSet sourceSet, AbstractTask context) {\n+        final Set<String> sourcePaths = new HashSet<>();\n+        for (File sourceDir : sourceSet.getAllJava().getSrcDirs()) {\n+            sourcePaths.add(sourceDir.getAbsolutePath());\n+        }\n+\n+        FileCollection classesDirs = sourceSet.getOutput().getClassesDirs();\n+        Set<File> classDirFiles = classesDirs.getFiles();\n+        if (classDirFiles.size() == 1) {\n+            return classesDirs.getAsPath();\n+        }\n+\n+        //there does not seem to be any sane way of dealing with multiple output dirs, as there does not seem\n+        //to be a way to map them. We will need to address this at some point, but for now we just stick them\n+        //all in a temp dir\n+\n+        final Path tmpClassesDir = context.getTemporaryDir().toPath().resolve(\"quarkus-app-classes\");\n+        try {\n+            Files.createDirectories(tmpClassesDir);\n+        } catch (IOException e) {\n+            throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n+        }\n+        for (File c : classDirFiles) {\n+            Path cd = c.toPath();\n+            if (!Files.exists(cd)) {\n+                continue;\n+            }\n+            try (Stream<Path> stream = Files.walk(cd)) {\n+                stream.forEach(s -> {\n+                    try {\n+                        if (Files.isDirectory(s)) {\n+                            return;\n+                        }\n+                        final Path file = cd.relativize(tmpClassesDir);\n+                        final Path targetPath = tmpClassesDir.resolve(file.toString());\n+                        Files.createDirectories(targetPath.getParent());\n+                        byte[] data = Files.readAllBytes(s);\n+                        Files.write(targetPath, data);\n+                    } catch (IOException e) {\n+                        throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);\n+                    }\n+\n+                });\n+            } catch (IOException e) {\n+                throw new RuntimeException(ERROR_COLLECTING_PROJECT_CLASSES, e);", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxNTQ0MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7394#discussion_r383615441", "body": "Better also add an assert in the constructor to make sure `root` is never null", "bodyText": "Better also add an assert in the constructor to make sure root is never null", "bodyHTML": "<p dir=\"auto\">Better also add an assert in the constructor to make sure <code>root</code> is never null</p>", "author": "gastaldi", "createdAt": "2020-02-25T01:44:53Z", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/DirectoryClassPathElement.java", "diffHunk": "@@ -102,4 +102,9 @@ public ProtectionDomain getProtectionDomain(ClassLoader classLoader) {\n     public void close() throws IOException {\n         //noop\n     }\n+\n+    @Override\n+    public String toString() {\n+        return root.toAbsolutePath().toString();", "originalCommit": "60c6c67468527ce677cbee14903a5a268b401565", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e245f48cd93cb37359e45c37a20c1c60cdd1083a", "url": "https://github.com/quarkusio/quarkus/commit/e245f48cd93cb37359e45c37a20c1c60cdd1083a", "message": "Resolve Gradle's project's classes dir in case the JAR isn't available yet", "committedDate": "2020-02-25T10:00:01Z", "type": "forcePushed"}, {"oid": "6dc99743f7b0ef941191ec596bb3283ddf054455", "url": "https://github.com/quarkusio/quarkus/commit/6dc99743f7b0ef941191ec596bb3283ddf054455", "message": "* Resolve Gradle's project's classes dir in case the JAR isn't available yet\n* Use only the direct extension deps when creating a detached deployment classpath config", "committedDate": "2020-02-25T15:56:02Z", "type": "commit"}, {"oid": "6dc99743f7b0ef941191ec596bb3283ddf054455", "url": "https://github.com/quarkusio/quarkus/commit/6dc99743f7b0ef941191ec596bb3283ddf054455", "message": "* Resolve Gradle's project's classes dir in case the JAR isn't available yet\n* Use only the direct extension deps when creating a detached deployment classpath config", "committedDate": "2020-02-25T15:56:02Z", "type": "forcePushed"}]}