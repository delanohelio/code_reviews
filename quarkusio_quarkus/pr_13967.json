{"pr_number": 13967, "pr_title": "Qute cleanup and minor optimizations", "pr_author": "mkouba", "pr_createdAt": "2020-12-18T10:09:12Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/13967", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2MTI2MQ==", "url": "https://github.com/quarkusio/quarkus/pull/13967#discussion_r545761261", "body": "```suggestion\r\n            // Iterate the resolvers lazily \r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Iterare the resolvers lazily \n          \n          \n            \n                        // Iterate the resolvers lazily", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> <span class=\"x x-first x-last\">Iterare</span> the resolvers lazily </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> <span class=\"x x-first x-last\">Iterate</span> the resolvers lazily </span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-12-18T11:06:33Z", "path": "independent-projects/qute/core/src/main/java/io/quarkus/qute/EvaluatorImpl.java", "diffHunk": "@@ -86,46 +86,55 @@ private NamespaceResolver findNamespaceResolver(String namespace, ResolutionCont\n \n         if (tryCachedResolver) {\n             // Try the cached resolver first\n-            ValueResolver cachedResolver = ((PartImpl) evalContext.part).cachedResolver;\n+            ValueResolver cachedResolver = evalContext.getCachedResolver();\n             if (cachedResolver != null && cachedResolver.appliesTo(evalContext)) {\n                 return cachedResolver.resolve(evalContext).thenCompose(r -> {\n                     if (Result.NOT_FOUND.equals(r)) {\n-                        return resolve(evalContext, resolvers, false);\n+                        return resolve(evalContext, null, false);\n                     } else {\n                         return toCompletionStage(r);\n                     }\n                 });\n             }\n         }\n \n-        if (!resolvers.hasNext()) {\n+        if (resolvers == null) {\n+            // Iterare the resolvers lazily ", "originalCommit": "5ce69805db77d32a481b115b1ea99686da3e4a7b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3f140d7f019dea65ad766265b80d3aeafbbb4de2", "url": "https://github.com/quarkusio/quarkus/commit/3f140d7f019dea65ad766265b80d3aeafbbb4de2", "message": "Qute cleanup and minor optimizations\n\n- also fix the problem with non-deterministic order of methods in\nthe resolve() method of the generated value resolvers\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-12-18T11:22:36Z", "type": "commit"}, {"oid": "3f140d7f019dea65ad766265b80d3aeafbbb4de2", "url": "https://github.com/quarkusio/quarkus/commit/3f140d7f019dea65ad766265b80d3aeafbbb4de2", "message": "Qute cleanup and minor optimizations\n\n- also fix the problem with non-deterministic order of methods in\nthe resolve() method of the generated value resolvers\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-12-18T11:22:36Z", "type": "forcePushed"}]}