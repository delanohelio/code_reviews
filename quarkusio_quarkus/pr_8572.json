{"pr_number": 8572, "pr_title": "Replace kscript for the native cron report with jbang", "pr_author": "geoand", "pr_createdAt": "2020-04-14T16:50:34Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/8572", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5MjcwMw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408292703", "body": "Minor nitpick: this comment looks useless?", "bodyText": "Minor nitpick: this comment looks useless?", "bodyHTML": "<p dir=\"auto\">Minor nitpick: this comment looks useless?</p>", "author": "gsmet", "createdAt": "2020-04-14T16:59:22Z", "path": ".github/NativeBuildReport.java", "diffHunk": "@@ -0,0 +1,97 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+\n+//DEPS org.kohsuke:github-api:1.101\n+//DEPS info.picocli:picocli:4.2.0\n+\n+import org.kohsuke.github.*;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+import picocli.CommandLine.Parameters;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.concurrent.TimeUnit;\n+\n+@Command(name = \"report\", mixinStandardHelpOptions = true,\n+\t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")\n+class Report implements Runnable {\n+\n+\t@Option(names = \"token\", description = \"Github token to use when calling the Github API\")\n+\tprivate String token;\n+\n+\t@Option(names = \"status\", description = \"The status of the CI run\")\n+\tprivate String status;\n+\n+\t@Option(names = \"issueRepo\", description = \"The repository where the issue resides (i.e. quarkusio/quarkus)\")\n+\tprivate String issueRepo;\n+\n+\t@Option(names = \"issueNumber\", description = \"The issue to update\")\n+\tprivate Integer issueNumber;\n+\n+\t@Option(names = \"thisRepo\", description = \"The repository for which we are reporting the CI status\")\n+\tprivate String thisRepo;\n+\n+\t@Option(names = \"runId\", description = \"The ID of the Github Action run for  which we are reporting the CI status\")\n+\tprivate String runId;\n+\n+\t@Override\n+\tpublic void run() {\n+\t\ttry {\n+\t\t\tfinal boolean succeed = \"success\".equalsIgnoreCase(status);\n+\t\t\tif (\"cancelled\".equalsIgnoreCase(status)) {\n+\t\t\t\tSystem.out.println(\"Job status is `cancelled` - exiting\");\n+\t\t\t\tSystem.exit(0);\n+\t\t\t}\n+\n+\t\t\tSystem.out.println(String.format(\"The CI build had status %s.\", status));\n+\n+\t\t\tfinal GitHub github = new GitHubBuilder().withOAuthToken(token).build();\n+\t\t\tfinal GHRepository repository = github.getRepository(issueRepo);\n+\n+\t\t\tfinal GHIssue issue = repository.getIssue(issueNumber);\n+\t\t\tif (issue == null) {\n+\t\t\t\tSystem.out.println(String.format(\"Unable to find the issue %s in project %s\", issueNumber, issueRepo));\n+\t\t\t\tSystem.exit(-1);\n+\t\t\t} else {\n+\t\t\t\tSystem.out.println(String.format(\"Report issue found: %s - %s\", issue.getTitle(), issue.getHtmlUrl().toString()));\n+\t\t\t\tSystem.out.println(String.format(\"The issue is currently %s\", issue.getState().toString()));\n+\t\t\t}\n+\n+\t\t\tif (succeed) {\n+\t\t\t\tif (issue != null  && isOpen(issue)) {\n+\t\t\t\t\t// close issue with a comment\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"Build fixed:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tissue.close();\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s, the issue has also been closed\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t} else {\n+\t\t\t\t\tSystem.out.println(\"Nothing to do - the build passed and the issue is already closed\");\n+\t\t\t\t}\n+\t\t\t} else  {\n+\t\t\t\tif (isOpen(issue)) {\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"The build is still failing:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t} else {\n+\t\t\t\t\tissue.reopen();\n+\t\t\t\t\tfinal GHIssueComment comment = issue.comment(String.format(\"Unfortunately, the build failed:\\n* Link to latest CI run: https://github.com/%s/actions/runs/%s\", thisRepo, runId));\n+\t\t\t\t\tSystem.out.println(String.format(\"Comment added on issue %s - %s, the issue has been re-opened\", issue.getHtmlUrl().toString(), comment.getHtmlUrl().toString()));\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tcatch (IOException e) {\n+\t\t\tthrow new UncheckedIOException(e);\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isOpen(GHIssue issue) {\n+\t\treturn (issue.getState() == GHIssueState.OPEN);\n+\t}\n+\n+\t// this example implements Callable, so parsing, error handling and handling user\n+\t// requests for usage help or version help can be done with one line of code.", "originalCommit": "e6292ae6742de3034648726cd4d3acfd4474de36", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5NTcxNw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408295717", "bodyText": "Oooops, fixed :)", "author": "geoand", "createdAt": "2020-04-14T17:04:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI5MjcwMw=="}], "type": "inlineReview"}, {"oid": "c7fdfc0d0b3459e8264ac04994065272d4463211", "url": "https://github.com/quarkusio/quarkus/commit/c7fdfc0d0b3459e8264ac04994065272d4463211", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:03:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxMzcwNQ==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408313705", "body": "```suggestion\r\n\t\tdescription = \"Takes care of updating an issue depending on the status of the build\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")\n          \n          \n            \n            \t\tdescription = \"Takes care of updating an issue depending on the status of the build\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tdescription <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Takes care of updating <span class=\"x x-first x-last\">the </span>an issue depending on the status of the build<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\tdescription <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Takes care of updating an issue depending on the status of the build<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "machi1990", "createdAt": "2020-04-14T17:33:05Z", "path": ".github/NativeBuildReport.java", "diffHunk": "@@ -0,0 +1,95 @@\n+//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n+\n+//DEPS org.kohsuke:github-api:1.101\n+//DEPS info.picocli:picocli:4.2.0\n+\n+import org.kohsuke.github.*;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+import picocli.CommandLine.Parameters;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.concurrent.TimeUnit;\n+\n+@Command(name = \"report\", mixinStandardHelpOptions = true,\n+\t\tdescription = \"Takes care of updating the an issue depending on the status of the build\")", "originalCommit": "c7fdfc0d0b3459e8264ac04994065272d4463211", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxOTkzNw==", "url": "https://github.com/quarkusio/quarkus/pull/8572#discussion_r408319937", "bodyText": "Updated, thanks", "author": "geoand", "createdAt": "2020-04-14T17:43:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxMzcwNQ=="}], "type": "inlineReview"}, {"oid": "02df24696b85589100b1d471da144c028f0e1bf9", "url": "https://github.com/quarkusio/quarkus/commit/02df24696b85589100b1d471da144c028f0e1bf9", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:42:48Z", "type": "commit"}, {"oid": "02df24696b85589100b1d471da144c028f0e1bf9", "url": "https://github.com/quarkusio/quarkus/commit/02df24696b85589100b1d471da144c028f0e1bf9", "message": "Replace kscript for the native cron report with jbang\n\nAlso provide a deep link into the GH Action that run\n\nThis work was originally done for and tested with\nhttps://github.com/quarkusio/quarkus-ecosystem-ci", "committedDate": "2020-04-14T17:42:48Z", "type": "forcePushed"}]}