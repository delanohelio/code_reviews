{"pr_number": 7130, "pr_title": "Add first version of Spring Cloud Config Client extension", "pr_author": "geoand", "pr_createdAt": "2020-02-11T09:22:35Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7130", "timeline": [{"oid": "a622434789a9ae3034bcc168a63ea608593f5dcb", "url": "https://github.com/quarkusio/quarkus/commit/a622434789a9ae3034bcc168a63ea608593f5dcb", "message": "Start adding Spring Config Server Client extension", "committedDate": "2020-02-11T09:34:08Z", "type": "forcePushed"}, {"oid": "6dc07054a62df24df1b89d2af5182c6ec596be89", "url": "https://github.com/quarkusio/quarkus/commit/6dc07054a62df24df1b89d2af5182c6ec596be89", "message": "Start adding Spring Config Server Client extension", "committedDate": "2020-02-11T14:50:13Z", "type": "forcePushed"}, {"oid": "473de6dcdb19113d63476a1b6d3cf6219c74e127", "url": "https://github.com/quarkusio/quarkus/commit/473de6dcdb19113d63476a1b6d3cf6219c74e127", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-12T10:39:52Z", "type": "forcePushed"}, {"oid": "b2e4b07ac3bd7b62fd53ee14090782ff8c599554", "url": "https://github.com/quarkusio/quarkus/commit/b2e4b07ac3bd7b62fd53ee14090782ff8c599554", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-12T15:24:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0MTA0NA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378441044", "body": "Maybe also change the package to `io.quarkus.spring.cloud.config.*`?", "bodyText": "Maybe also change the package to io.quarkus.spring.cloud.config.*?", "bodyHTML": "<p dir=\"auto\">Maybe also change the package to <code>io.quarkus.spring.cloud.config.*</code>?</p>", "author": "gastaldi", "createdAt": "2020-02-12T18:43:37Z", "path": "integration-tests/spring-config-server-client/src/test/java/io/quarkus/spring/configserver/client/runtime/GreetingResourceTest.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.quarkus.spring.configserver.client.runtime;", "originalCommit": "b2e4b07ac3bd7b62fd53ee14090782ff8c599554", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2dfc2c00f2a03753672a38a7915f3c24d996141a", "url": "https://github.com/quarkusio/quarkus/commit/2dfc2c00f2a03753672a38a7915f3c24d996141a", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-12T20:22:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NDk4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378494989", "body": "This is inconsistent.", "bodyText": "This is inconsistent.", "bodyHTML": "<p dir=\"auto\">This is inconsistent.</p>", "author": "gsmet", "createdAt": "2020-02-12T20:28:56Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/FeatureBuildItem.java", "diffHunk": "@@ -84,6 +84,7 @@\n     public static final String SPRING_DATA_JPA = \"spring-data-jpa\";\n     public static final String SPRING_SECURITY = \"spring-security\";\n     public static final String SPRING_BOOT_PROPERTIES = \"spring-boot-properties\";\n+    public static final String SPRING_CONFIG_SERVER_CLIENT = \"spring-config-server-client\";", "originalCommit": "2dfc2c00f2a03753672a38a7915f3c24d996141a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NjUyNA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378496524", "body": "```suggestion\r\n                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. Consider setting it via 'quarkus.\"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. Considering setting it via 'quarkus.\"\n          \n          \n            \n                                \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. Consider setting it via 'quarkus.\"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. <span class=\"x x-first x-last\">Considering</span> setting it via 'quarkus.<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. <span class=\"x x-first x-last\">Consider</span> setting it via 'quarkus.<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-02-12T20:32:25Z", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientRecorder.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.quarkus.spring.cloud.config.client.runtime;\n+\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+import org.eclipse.microprofile.config.spi.ConfigSourceProvider;\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.runtime.ApplicationConfig;\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.annotations.Recorder;\n+import io.quarkus.runtime.configuration.ProfileManager;\n+\n+@Recorder\n+public class SpringCloudConfigClientRecorder {\n+\n+    private static final Logger log = Logger.getLogger(SpringCloudConfigClientRecorder.class);\n+\n+    public RuntimeValue<ConfigSourceProvider> create(SpringCloudConfigServerClientConfig springCloudConfigServerClientConfig,\n+            ApplicationConfig applicationConfig) {\n+        if (!springCloudConfigServerClientConfig.enabled) {\n+            log.debug(\n+                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the functionality has been disabled via configuration\");\n+            return new RuntimeValue<>(new EmptyConfigSourceProvider());\n+        }\n+\n+        if (!springCloudConfigServerClientConfig.baseUri.isPresent()) {\n+            log.warn(\n+                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. Considering setting it via 'quarkus.\"", "originalCommit": "2dfc2c00f2a03753672a38a7915f3c24d996141a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5ODM0NA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378498344", "bodyText": "Btw, nice try to put the typos outside of my review screen ;).", "author": "gsmet", "createdAt": "2020-02-12T20:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NjUyNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5OTc2OA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378499768", "bodyText": "One can only try \ud83d\ude06", "author": "geoand", "createdAt": "2020-02-12T20:39:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NjUyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NjY0NQ==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378496645", "body": "```suggestion\r\n                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. Consider setting it via 'quarkus.application.name'\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. Considering setting it via 'quarkus.application.name'\");\n          \n          \n            \n                                \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. Consider setting it via 'quarkus.application.name'\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. <span class=\"x x-first x-last\">Considering</span> setting it via 'quarkus.application.name'<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. <span class=\"x x-first x-last\">Consider</span> setting it via 'quarkus.application.name'<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-02-12T20:32:44Z", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientRecorder.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package io.quarkus.spring.cloud.config.client.runtime;\n+\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigSource;\n+import org.eclipse.microprofile.config.spi.ConfigSourceProvider;\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.runtime.ApplicationConfig;\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.annotations.Recorder;\n+import io.quarkus.runtime.configuration.ProfileManager;\n+\n+@Recorder\n+public class SpringCloudConfigClientRecorder {\n+\n+    private static final Logger log = Logger.getLogger(SpringCloudConfigClientRecorder.class);\n+\n+    public RuntimeValue<ConfigSourceProvider> create(SpringCloudConfigServerClientConfig springCloudConfigServerClientConfig,\n+            ApplicationConfig applicationConfig) {\n+        if (!springCloudConfigServerClientConfig.enabled) {\n+            log.debug(\n+                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the functionality has been disabled via configuration\");\n+            return new RuntimeValue<>(new EmptyConfigSourceProvider());\n+        }\n+\n+        if (!springCloudConfigServerClientConfig.baseUri.isPresent()) {\n+            log.warn(\n+                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the baseUri has not been set. Considering setting it via 'quarkus.\"\n+                            + SpringCloudConfigServerClientConfig.NAME + \".base-uri'\");\n+            return new RuntimeValue<>(new EmptyConfigSourceProvider());\n+        }\n+\n+        if (!applicationConfig.name.isPresent()) {\n+            log.warn(\n+                    \"No attempt will be made to obtain configuration from the Spring Cloud Config Server because the application name has not been set. Considering setting it via 'quarkus.application.name'\");", "originalCommit": "2dfc2c00f2a03753672a38a7915f3c24d996141a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5Njk1Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378496953", "body": "```suggestion\r\n     * If enabled, will try to read the configuration from a Spring Cloud Config Server\r\n```\r\n?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * If enabled, configuration will be attempted to be read from a Spring Cloud Config Server\n          \n          \n            \n                 * If enabled, will try to read the configuration from a Spring Cloud Config Server\n          \n      \n    \n    \n  \n\n?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">If</span> enabled, <span class=\"x x-first x-last\">configuration </span>will <span class=\"x x-first x-last\">be attempted </span>to <span class=\"x x-first x-last\">be </span>read from a <span class=\"pl-smi\">Spring</span> <span class=\"pl-smi\">Cloud</span> <span class=\"pl-smi\">Config</span> <span class=\"pl-smi\">Server</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">If</span> enabled, will <span class=\"pl-k x x-first\">try</span><span class=\"x x-last\"> </span>to read<span class=\"x x-first x-last\"> the configuration</span> from a <span class=\"pl-smi\">Spring</span> <span class=\"pl-smi\">Cloud</span> <span class=\"pl-smi\">Config</span> <span class=\"pl-smi\">Server</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">?</p>", "author": "gsmet", "createdAt": "2020-02-12T20:33:23Z", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigServerClientConfig.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.spring.cloud.config.client.runtime;\n+\n+import java.util.Optional;\n+\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n+\n+@ConfigRoot(phase = ConfigPhase.BOOTSTRAP, name = SpringCloudConfigServerClientConfig.NAME)\n+public class SpringCloudConfigServerClientConfig {\n+\n+    protected static final String NAME = \"sccsc\";\n+    /**\n+     * If enabled, configuration will be attempted to be read from a Spring Cloud Config Server", "originalCommit": "2dfc2c00f2a03753672a38a7915f3c24d996141a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUwMzM3NA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378503374", "bodyText": "Went with your suggestion since it does sounds better than what I had", "author": "geoand", "createdAt": "2020-02-12T20:47:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5Njk1Mw=="}], "type": "inlineReview"}, {"oid": "aaaa4481bce79aee4f59eb3157822c6184b8083f", "url": "https://github.com/quarkusio/quarkus/commit/aaaa4481bce79aee4f59eb3157822c6184b8083f", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-12T20:46:15Z", "type": "forcePushed"}, {"oid": "bf02ff56733f6464f674194d8145e520f8c61e1d", "url": "https://github.com/quarkusio/quarkus/commit/bf02ff56733f6464f674194d8145e520f8c61e1d", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T08:12:08Z", "type": "forcePushed"}, {"oid": "5641c827d34e6019f55e8145b07c158c8f4385a3", "url": "https://github.com/quarkusio/quarkus/commit/5641c827d34e6019f55e8145b07c158c8f4385a3", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T12:15:33Z", "type": "forcePushed"}, {"oid": "23841cbe69ed309e8269bedb027edaa74f843e4c", "url": "https://github.com/quarkusio/quarkus/commit/23841cbe69ed309e8269bedb027edaa74f843e4c", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T12:19:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMjA5Ng==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378832096", "body": "The variable name needs tpo be renamed?", "bodyText": "The variable name needs tpo be renamed?", "bodyHTML": "<p dir=\"auto\">The variable name needs tpo be renamed?</p>", "author": "gastaldi", "createdAt": "2020-02-13T12:33:33Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/FeatureBuildItem.java", "diffHunk": "@@ -85,6 +85,7 @@\n     public static final String SPRING_DATA_JPA = \"spring-data-jpa\";\n     public static final String SPRING_SECURITY = \"spring-security\";\n     public static final String SPRING_BOOT_PROPERTIES = \"spring-boot-properties\";\n+    public static final String SPRING_CONFIG_SERVER_CLIENT = \"spring-cloud-config-client\";", "originalCommit": "23841cbe69ed309e8269bedb027edaa74f843e4c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMjcwOA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378832708", "bodyText": "I'm never gonna catch a break with the rename :P", "author": "geoand", "createdAt": "2020-02-13T12:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMjA5Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMjk2MA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378832960", "bodyText": "Fixed", "author": "geoand", "createdAt": "2020-02-13T12:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMjA5Ng=="}], "type": "inlineReview"}, {"oid": "84c8b2ee9c4c1f3a8cabbaf9dbe9c4c1c1af05b6", "url": "https://github.com/quarkusio/quarkus/commit/84c8b2ee9c4c1f3a8cabbaf9dbe9c4c1c1af05b6", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T12:35:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg0OTU3MQ==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378849571", "body": "```suggestion\r\ninterface SpringCloudConfigClientGateway {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            interface SpringCloudConfigServerClientGateway {\n          \n          \n            \n            interface SpringCloudConfigClientGateway {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">interface</span> <span class=\"pl-en x x-first x-last\">SpringCloudConfigServerClientGateway</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">interface</span> <span class=\"pl-en x x-first x-last\">SpringCloudConfigClientGateway</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-13T13:11:00Z", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigServerClientGateway.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package io.quarkus.spring.cloud.config.client.runtime;\n+\n+import java.io.IOException;\n+\n+interface SpringCloudConfigServerClientGateway {", "originalCommit": "84c8b2ee9c4c1f3a8cabbaf9dbe9c4c1c1af05b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg0OTcxMA==", "url": "https://github.com/quarkusio/quarkus/pull/7130#discussion_r378849710", "body": "```suggestion\r\nclass SpringCloudConfigClientGatewayTest {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class SpringCloudConfigServerClientGatewayTest {\n          \n          \n            \n            class SpringCloudConfigClientGatewayTest {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">SpringCloudConfigServerClientGatewayTest</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">SpringCloudConfigClientGatewayTest</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-02-13T13:11:18Z", "path": "extensions/spring-cloud-config-client/runtime/src/test/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigServerClientGatewayTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package io.quarkus.spring.cloud.config.client.runtime;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.entry;\n+\n+import java.io.IOException;\n+import java.nio.charset.Charset;\n+import java.time.Duration;\n+import java.util.Optional;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+\n+class SpringCloudConfigServerClientGatewayTest {", "originalCommit": "84c8b2ee9c4c1f3a8cabbaf9dbe9c4c1c1af05b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "851bae4e726da41dfb4c13c01962a79c7340335a", "url": "https://github.com/quarkusio/quarkus/commit/851bae4e726da41dfb4c13c01962a79c7340335a", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T13:21:46Z", "type": "forcePushed"}, {"oid": "15cdc7d2bfb754c20d052b495be820a64e3da22d", "url": "https://github.com/quarkusio/quarkus/commit/15cdc7d2bfb754c20d052b495be820a64e3da22d", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T13:22:33Z", "type": "commit"}, {"oid": "15cdc7d2bfb754c20d052b495be820a64e3da22d", "url": "https://github.com/quarkusio/quarkus/commit/15cdc7d2bfb754c20d052b495be820a64e3da22d", "message": "Add first version of Spring Config Server Client extension", "committedDate": "2020-02-13T13:22:33Z", "type": "forcePushed"}]}