{"pr_number": 9241, "pr_title": "Introduce the ability to read runtime configuration from Consul", "pr_author": "geoand", "pr_createdAt": "2020-05-12T14:26:17Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/9241", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODkzOA==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423778938", "body": "```suggestion\r\n    public static final String CONSUL_CONFIG = \"consul-config\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String CONSUL_CONFIG = \"config-config\";\n          \n          \n            \n                public static final String CONSUL_CONFIG = \"consul-config\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">CONSUL_CONFIG</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">config</span>-config<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">CONSUL_CONFIG</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">consul</span>-config<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-05-12T14:27:48Z", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/FeatureBuildItem.java", "diffHunk": "@@ -18,6 +18,7 @@\n     public static final String CACHE = \"cache\";\n     public static final String CDI = \"cdi\";\n     public static final String CONFIG_YAML = \"config-yaml\";\n+    public static final String CONSUL_CONFIG = \"config-config\";", "originalCommit": "ca4c61beddd32e1e9c42232ecad67b61d592586e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MDI2Ng==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423780266", "body": "```suggestion\r\n     * When this is used, the keys that end up in the user configuration are the keys of the properties file,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * When this is used, the keys that end up in the user configuration are the keys of the of the properties file,\n          \n          \n            \n                 * When this is used, the keys that end up in the user configuration are the keys of the properties file,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">When</span> <span class=\"pl-c1\">this</span> is used, the keys that end up in the user configuration are the keys of the <span class=\"x x-first x-last\">of the </span>properties file,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">When</span> <span class=\"pl-c1\">this</span> is used, the keys that end up in the user configuration are the keys of the properties file,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-05-12T14:29:29Z", "path": "extensions/consul-config/runtime/src/main/java/io/quarkus/consul/config/runtime/ConsulConfig.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package io.quarkus.consul.config.runtime;\n+\n+import java.net.InetSocketAddress;\n+import java.time.Duration;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n+\n+@ConfigRoot(name = \"consul-config\", phase = ConfigPhase.BOOTSTRAP)\n+public class ConsulConfig {\n+\n+    /**\n+     * If set to true, the application will attempt to look up the configuration from Consul\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    boolean enabled;\n+\n+    /**\n+     * Consul agent related configuration\n+     */\n+    @ConfigItem\n+    AgentConfig agent;\n+\n+    /**\n+     * Common prefix that all keys share when looking up the keys from Consul.\n+     * The prefix is <b>not</b> included in the keys of the user configuration\n+     */\n+    @ConfigItem\n+    Optional<String> prefix;\n+\n+    /**\n+     * Keys whose value is a raw string.\n+     * When this is used, the keys that end up in the user configuration are the keys specified her with '/' replaced by '.'\n+     */\n+    @ConfigItem\n+    Optional<List<String>> rawValueKeys;\n+\n+    /**\n+     * Keys whose value represents a properties file.\n+     * When this is used, the keys that end up in the user configuration are the keys of the of the properties file,", "originalCommit": "ca4c61beddd32e1e9c42232ecad67b61d592586e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MTA1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423781052", "body": "Don't we need a trustStore configuration? Also might be a good idea to check other extensions for consistency on this.", "bodyText": "Don't we need a trustStore configuration? Also might be a good idea to check other extensions for consistency on this.", "bodyHTML": "<p dir=\"auto\">Don't we need a trustStore configuration? Also might be a good idea to check other extensions for consistency on this.</p>", "author": "gsmet", "createdAt": "2020-05-12T14:30:28Z", "path": "extensions/consul-config/runtime/src/main/java/io/quarkus/consul/config/runtime/ConsulConfig.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package io.quarkus.consul.config.runtime;\n+\n+import java.net.InetSocketAddress;\n+import java.time.Duration;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n+\n+@ConfigRoot(name = \"consul-config\", phase = ConfigPhase.BOOTSTRAP)\n+public class ConsulConfig {\n+\n+    /**\n+     * If set to true, the application will attempt to look up the configuration from Consul\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    boolean enabled;\n+\n+    /**\n+     * Consul agent related configuration\n+     */\n+    @ConfigItem\n+    AgentConfig agent;\n+\n+    /**\n+     * Common prefix that all keys share when looking up the keys from Consul.\n+     * The prefix is <b>not</b> included in the keys of the user configuration\n+     */\n+    @ConfigItem\n+    Optional<String> prefix;\n+\n+    /**\n+     * Keys whose value is a raw string.\n+     * When this is used, the keys that end up in the user configuration are the keys specified her with '/' replaced by '.'\n+     */\n+    @ConfigItem\n+    Optional<List<String>> rawValueKeys;\n+\n+    /**\n+     * Keys whose value represents a properties file.\n+     * When this is used, the keys that end up in the user configuration are the keys of the of the properties file,\n+     * not these keys\n+     */\n+    @ConfigItem\n+    Optional<List<String>> propertiesValueKeys;\n+\n+    /**\n+     * If set to true, the application will not start if any of the configured config sources cannot be located\n+     */\n+    @ConfigItem(defaultValue = \"true\")\n+    boolean failOnMissingKey;\n+\n+    Map<String, ValueType> keysAsMap() {\n+        Map<String, ValueType> result = new LinkedHashMap<>();\n+        if (rawValueKeys.isPresent()) {\n+            for (String key : rawValueKeys.get()) {\n+                result.put(key, ValueType.RAW);\n+            }\n+        }\n+        if (propertiesValueKeys.isPresent()) {\n+            for (String key : propertiesValueKeys.get()) {\n+                result.put(key, ValueType.PROPERTIES);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    @ConfigGroup\n+    public static class AgentConfig {\n+\n+        /**\n+         * Consul agent host\n+         */\n+        @ConfigItem(defaultValue = \"localhost:8500\")\n+        InetSocketAddress hostPort;\n+\n+        /**\n+         * Whether or not to use HTTPS when communicating with the agent\n+         */\n+        @ConfigItem(defaultValue = \"false\")\n+        boolean useHttps;\n+\n+        /**\n+         * Consul token to be provided when authentication is enabled\n+         */\n+        @ConfigItem\n+        Optional<String> token;\n+\n+        /**\n+         * When using HTTPS, whether or not to trust self-signed certificatd\n+         */\n+        @ConfigItem(defaultValue = \"false\")\n+        boolean trustCerts;", "originalCommit": "ca4c61beddd32e1e9c42232ecad67b61d592586e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5MDEwNA==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423790104", "bodyText": "Yeah, I was planning on looking into it", "author": "geoand", "createdAt": "2020-05-12T14:42:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5MzIzMQ==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423793231", "bodyText": "I wonder if we should have some sort of shared config group for that. That would enforce consistency.", "author": "gsmet", "createdAt": "2020-05-12T14:46:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0NTYxMA==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r423945610", "bodyText": "That's what Max was saying IIRC in a mailing thread.\nI am personally sceptical, but not completely opposed to it.", "author": "geoand", "createdAt": "2020-05-12T18:28:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MTA1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI3NzgyMw==", "url": "https://github.com/quarkusio/quarkus/pull/9241#discussion_r424277823", "bodyText": "I added support for a KeyStore file", "author": "geoand", "createdAt": "2020-05-13T08:51:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MTA1Mg=="}], "type": "inlineReview"}, {"oid": "d77c4f7395045a4481ab11e3d561a224eb4890f2", "url": "https://github.com/quarkusio/quarkus/commit/d77c4f7395045a4481ab11e3d561a224eb4890f2", "message": "Introduce the ability to read runtime configuration from Consul\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-12T14:43:10Z", "type": "forcePushed"}, {"oid": "2b4e15b299890e4d1201477812c082e95afb7b00", "url": "https://github.com/quarkusio/quarkus/commit/2b4e15b299890e4d1201477812c082e95afb7b00", "message": "Introduce the ability to read runtime configuration from Consul\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-13T08:43:06Z", "type": "forcePushed"}, {"oid": "df66ad45da4cac4aa1d4e761550117eae42f8757", "url": "https://github.com/quarkusio/quarkus/commit/df66ad45da4cac4aa1d4e761550117eae42f8757", "message": "Introduce the ability to read runtime configuration from Consul\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-15T11:50:56Z", "type": "commit"}, {"oid": "df66ad45da4cac4aa1d4e761550117eae42f8757", "url": "https://github.com/quarkusio/quarkus/commit/df66ad45da4cac4aa1d4e761550117eae42f8757", "message": "Introduce the ability to read runtime configuration from Consul\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>", "committedDate": "2020-05-15T11:50:56Z", "type": "forcePushed"}]}