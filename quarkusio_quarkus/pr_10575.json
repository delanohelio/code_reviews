{"pr_number": 10575, "pr_title": "Qute - fix incorrect behavior of Evaluator in loop sections", "pr_author": "mkouba", "pr_createdAt": "2020-07-08T14:14:00Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10575", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3MTM1NA==", "url": "https://github.com/quarkusio/quarkus/pull/10575#discussion_r452171354", "body": "```suggestion\r\n\r\n    @Test\r\n    void testScopeEach() {\r\n        final HashMap<String, Object> dep1 = new HashMap<>();\r\n        dep1.put(\"version\", \"1.0\");\r\n        final HashMap<String, Object> data = new HashMap<>();\r\n        data.put(\"dependencies\", Arrays.asList(dep1, new HashMap<>()));\r\n        data.put(\"version\", \"hellllllo\");\r\n        final String result = Engine.builder().addDefaults().build()\r\n                .parse(\"{#each dependencies}{#if it.version}<version>{it.version}</version>{/if}{/each}\")\r\n                .render(data);\r\n        assertFalse(result.contains(\"hellllllo\"), result);\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n                @Test\n          \n          \n            \n                void testScopeEach() {\n          \n          \n            \n                    final HashMap<String, Object> dep1 = new HashMap<>();\n          \n          \n            \n                    dep1.put(\"version\", \"1.0\");\n          \n          \n            \n                    final HashMap<String, Object> data = new HashMap<>();\n          \n          \n            \n                    data.put(\"dependencies\", Arrays.asList(dep1, new HashMap<>()));\n          \n          \n            \n                    data.put(\"version\", \"hellllllo\");\n          \n          \n            \n                    final String result = Engine.builder().addDefaults().build()\n          \n          \n            \n                            .parse(\"{#each dependencies}{#if it.version}<version>{it.version}</version>{/if}{/each}\")\n          \n          \n            \n                            .render(data);\n          \n          \n            \n                    assertFalse(result.contains(\"hellllllo\"), result);\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"172\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"172\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"173\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"174\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">void</span> testScopeEach() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"175\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">HashMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> dep1 <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"176\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        dep1<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>version<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"177\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">HashMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> data <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"178\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        data<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dependencies<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(dep1, <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"179\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        data<span class=\"pl-k\">.</span>put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>version<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hellllllo<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"180\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> result <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Engine</span><span class=\"pl-k\">.</span>builder()<span class=\"pl-k\">.</span>addDefaults()<span class=\"pl-k\">.</span>build()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"181\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .parse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{#each dependencies}{#if it.version}&lt;version&gt;{it.version}&lt;/version&gt;{/if}{/each}<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"182\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .render(data);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"183\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertFalse(result<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hellllllo<span class=\"pl-pds\">\"</span></span>), result);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"184\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ia3andy", "createdAt": "2020-07-09T12:12:26Z", "path": "independent-projects/qute/core/src/test/java/io/quarkus/qute/LoopSectionTest.java", "diffHunk": "@@ -147,4 +148,17 @@ public void testNoniterable() {\n         }\n     }\n \n+    @Test\n+    void testScope() {\n+        final HashMap<String, Object> dep1 = new HashMap<>();\n+        dep1.put(\"version\", \"1.0\");\n+        final HashMap<String, Object> data = new HashMap<>();\n+        data.put(\"dependencies\", Arrays.asList(dep1, new HashMap<>()));\n+        data.put(\"version\", \"hellllllo\");\n+        final String result = Engine.builder().addDefaults().build()\n+                .parse(\"{#for dep in dependencies}{#if dep.version}<version>{dep.version}</version>{/if}{/for}\")\n+                .render(data);\n+        assertFalse(result.contains(\"hellllllo\"), result);\n+    }\n+", "originalCommit": "8df6ef3c72b06a1017fae8a62dcac63fa40c264c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIxMzUzOQ==", "url": "https://github.com/quarkusio/quarkus/pull/10575#discussion_r452213539", "bodyText": "Oh and maybe we should also test that {version} works in another test?", "author": "ia3andy", "createdAt": "2020-07-09T13:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3MTM1NA=="}], "type": "inlineReview"}, {"oid": "abe9923cb811d8d32bef20ebacbb216992d36df6", "url": "https://github.com/quarkusio/quarkus/commit/abe9923cb811d8d32bef20ebacbb216992d36df6", "message": "Qute - fix incorrect behavior of Evaluator in loop sections\n\n- only try the parent context/outer scope for the first part of an\nexpression\n- resolves #10572", "committedDate": "2020-07-10T08:15:10Z", "type": "commit"}, {"oid": "abe9923cb811d8d32bef20ebacbb216992d36df6", "url": "https://github.com/quarkusio/quarkus/commit/abe9923cb811d8d32bef20ebacbb216992d36df6", "message": "Qute - fix incorrect behavior of Evaluator in loop sections\n\n- only try the parent context/outer scope for the first part of an\nexpression\n- resolves #10572", "committedDate": "2020-07-10T08:15:10Z", "type": "forcePushed"}]}