{"pr_number": 7614, "pr_title": "Support for recognizing multiple Quarkus platforms in a project", "pr_author": "aloubyansky", "pr_createdAt": "2020-03-05T16:34:16Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7614", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTQxMg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388415412", "body": "Add the exception stacktrace to the debug message", "bodyText": "Add the exception stacktrace to the debug message", "bodyHTML": "<p dir=\"auto\">Add the exception stacktrace to the debug message</p>", "author": "gastaldi", "createdAt": "2020-03-05T16:37:27Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -137,6 +131,39 @@ public void execute() throws MojoExecutionException {\n         }\n     }\n \n+    private QuarkusPlatformDescriptor loadPlatformDescriptor(final MavenArtifactResolver mvn, final MessageWriter log,\n+            Artifact descrArtifact) {\n+        return QuarkusJsonPlatformDescriptorResolver.newInstance()\n+                .setArtifactResolver(new BootstrapAppModelResolver(mvn))\n+                .setMessageWriter(log)\n+                .resolveFromJson(descrArtifact.getFile().toPath());\n+    }\n+\n+    private Artifact resolveJsonOrNull(MavenArtifactResolver mvn, String bomGroupId, String bomArtifactId, String bomVersion) {\n+        Artifact jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId, null, \"json\", bomVersion);\n+        try {\n+            jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+        } catch (Exception e) {\n+            if (getLog().isDebugEnabled()) {\n+                getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);\n+            }\n+            jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId + \"-descriptor-json\", null, \"json\",\n+                    bomVersion);\n+            try {\n+                jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+            } catch (Exception e1) {\n+                if (getLog().isDebugEnabled()) {\n+                    getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0NzMzMg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388747332", "bodyText": "TBH, I'd rather remove this logging altogether. Given that we are trying every imported BOM here, if it happens to be not a platform BOM is pretty much a usual situation. IMO, logging a stacktrace is going to make look scarier than it actually is.\nThe reason I'd consider removing this log message is that if you enable debug, the resolver itself is going to be pretty verbose about what's been tried and what didn't work.", "author": "aloubyansky", "createdAt": "2020-03-06T07:25:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTQxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTU5OQ==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388415599", "body": "Add the exception stacktrace to the log statement", "bodyText": "Add the exception stacktrace to the log statement", "bodyHTML": "<p dir=\"auto\">Add the exception stacktrace to the log statement</p>", "author": "gastaldi", "createdAt": "2020-03-05T16:37:43Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -137,6 +131,39 @@ public void execute() throws MojoExecutionException {\n         }\n     }\n \n+    private QuarkusPlatformDescriptor loadPlatformDescriptor(final MavenArtifactResolver mvn, final MessageWriter log,\n+            Artifact descrArtifact) {\n+        return QuarkusJsonPlatformDescriptorResolver.newInstance()\n+                .setArtifactResolver(new BootstrapAppModelResolver(mvn))\n+                .setMessageWriter(log)\n+                .resolveFromJson(descrArtifact.getFile().toPath());\n+    }\n+\n+    private Artifact resolveJsonOrNull(MavenArtifactResolver mvn, String bomGroupId, String bomArtifactId, String bomVersion) {\n+        Artifact jsonArtifact = new DefaultArtifact(bomGroupId, bomArtifactId, null, \"json\", bomVersion);\n+        try {\n+            jsonArtifact = mvn.resolve(jsonArtifact).getArtifact();\n+        } catch (Exception e) {\n+            if (getLog().isDebugEnabled()) {\n+                getLog().debug(\"Failed to resolve JSON descriptor as \" + jsonArtifact);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc0NzQ0Nw==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r388747447", "bodyText": "Same as above.", "author": "aloubyansky", "createdAt": "2020-03-06T07:25:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQxNTU5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTU3Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r389249572", "body": "```suggestion\r\n                    getLog().debug(\"Failed to resolve version of \" + expr);\r\n```\r\n\r\nBecause v == null :wink: ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                getLog().debug(\"Failed to resolve version of \" + v);\n          \n          \n            \n                                getLog().debug(\"Failed to resolve version of \" + expr);\n          \n      \n    \n    \n  \n\nBecause v == null \ud83d\ude09", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    getLog()<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to resolve version of <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"x x-first x-last\">v</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    getLog()<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to resolve version of <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"x x-first x-last\">expr</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Because v == null <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>", "author": "gastaldi", "createdAt": "2020-03-07T11:53:52Z", "path": "devtools/maven/src/main/java/io/quarkus/maven/BuildFileMojoBase.java", "diffHunk": "@@ -147,7 +174,9 @@ private String resolveValue(String expr, BuildFile buildFile) throws IOException\n         if (expr.startsWith(\"${\") && expr.endsWith(\"}\")) {\n             final String v = buildFile.getProperty(expr.substring(2, expr.length() - 1));\n             if (v == null) {\n-                getLog().debug(\"Failed to resolve version of \" + v);\n+                if (getLog().isDebugEnabled()) {\n+                    getLog().debug(\"Failed to resolve version of \" + v);", "originalCommit": "dd87661a8c16808b676af696774d670e6a11e0d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNDg1Mg==", "url": "https://github.com/quarkusio/quarkus/pull/7614#discussion_r389314852", "bodyText": "Fixed, thanks!", "author": "aloubyansky", "createdAt": "2020-03-07T21:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTU3Mg=="}], "type": "inlineReview"}, {"oid": "74a02ef31bf1267ceca67c5aec2479d9122fd946", "url": "https://github.com/quarkusio/quarkus/commit/74a02ef31bf1267ceca67c5aec2479d9122fd946", "message": "Support for recognizing multiple Quarkus platforms in a project (both maven and gradle supported) and merging their descriptors into a single one (with the platforms imported earlier dominating over those imported later) for the tools to be able to list and add extensions.", "committedDate": "2020-03-07T21:52:16Z", "type": "commit"}, {"oid": "74a02ef31bf1267ceca67c5aec2479d9122fd946", "url": "https://github.com/quarkusio/quarkus/commit/74a02ef31bf1267ceca67c5aec2479d9122fd946", "message": "Support for recognizing multiple Quarkus platforms in a project (both maven and gradle supported) and merging their descriptors into a single one (with the platforms imported earlier dominating over those imported later) for the tools to be able to list and add extensions.", "committedDate": "2020-03-07T21:52:16Z", "type": "forcePushed"}]}