{"pr_number": 7586, "pr_title": "Upgrade to RESTEasy 4.5 to support async IO", "pr_author": "stuartwdouglas", "pr_createdAt": "2020-03-04T23:33:31Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7586", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAxMTE5Mw==", "url": "https://github.com/quarkusio/quarkus/pull/7586#discussion_r388011193", "body": "Can't `asyncFlush` happen before `asyncWrite` in this snippet? Wondering if it's better to read:\r\n\r\n```suggestion\r\n        return entityStream.asyncWrite(jsonArray.toBuffer().getBytes())\r\n                       .thenCompose(v -> entityStream.asyncFlush());\r\n```", "bodyText": "Can't asyncFlush happen before asyncWrite in this snippet? Wondering if it's better to read:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    CompletionStage<Void> a = entityStream.asyncWrite(jsonArray.toBuffer().getBytes());\n          \n          \n            \n                    CompletionStage<Void> b = entityStream.asyncFlush();\n          \n          \n            \n                    return a.thenCompose(v -> b);\n          \n          \n            \n                    return entityStream.asyncWrite(jsonArray.toBuffer().getBytes())\n          \n          \n            \n                                   .thenCompose(v -> entityStream.asyncFlush());", "bodyHTML": "<p dir=\"auto\">Can't <code>asyncFlush</code> happen before <code>asyncWrite</code> in this snippet? Wondering if it's better to read:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">CompletionStage&lt;<span class=\"pl-smi\">Void</span>&gt;</span> a <span class=\"pl-k\">=</span> entityStream<span class=\"pl-k\">.</span>asyncWrite(jsonArray<span class=\"pl-k\">.</span>toBuffer()<span class=\"pl-k\">.</span>getBytes());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">CompletionStage&lt;<span class=\"pl-smi\">Void</span>&gt;</span> b <span class=\"pl-k\">=</span> entityStream<span class=\"pl-k\">.</span>asyncFlush();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> a<span class=\"pl-k\">.</span>thenCompose(v <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> b);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> entityStream<span class=\"pl-k\">.</span>asyncWrite(jsonArray<span class=\"pl-k\">.</span>toBuffer()<span class=\"pl-k\">.</span>getBytes())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                       .thenCompose(v <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> entityStream<span class=\"pl-k\">.</span>asyncFlush());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-03-05T00:17:23Z", "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/vertx/JsonArrayWriter.java", "diffHunk": "@@ -35,4 +38,14 @@ public void writeTo(JsonArray jsonArray, Class<?> type, Type genericType, Annota\n         entityStream.flush();\n         entityStream.close();\n     }\n+\n+    @Override\n+    public CompletionStage<Void> asyncWriteTo(JsonArray jsonArray, Class<?> type, Type genericType, Annotation[] annotations,\n+            MediaType mediaType,\n+            MultivaluedMap<String, Object> httpHeaders,\n+            AsyncOutputStream entityStream) {\n+        CompletionStage<Void> a = entityStream.asyncWrite(jsonArray.toBuffer().getBytes());\n+        CompletionStage<Void> b = entityStream.asyncFlush();\n+        return a.thenCompose(v -> b);", "originalCommit": "b68ec9ea69bda712f0c5e44ae996bea86b7799c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3OTcwNg==", "url": "https://github.com/quarkusio/quarkus/pull/7586#discussion_r388079706", "bodyText": "I just removed the flush, it looks like none of the other writers have it, and in general flushes are a bad idea as they can force chunked encoding when it is not nessesary.", "author": "stuartwdouglas", "createdAt": "2020-03-05T05:03:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODAxMTE5Mw=="}], "type": "inlineReview"}, {"oid": "160a2398ae6e64f8cb5f19f7aeaeb96237fea239", "url": "https://github.com/quarkusio/quarkus/commit/160a2398ae6e64f8cb5f19f7aeaeb96237fea239", "message": "Upgrade to RESTEasy 4.5 to support async IO\n\n- Remove second vertx instance\n- Microprofile REST client 1.4\n\nFixes #5593", "committedDate": "2020-03-05T04:43:22Z", "type": "commit"}, {"oid": "160a2398ae6e64f8cb5f19f7aeaeb96237fea239", "url": "https://github.com/quarkusio/quarkus/commit/160a2398ae6e64f8cb5f19f7aeaeb96237fea239", "message": "Upgrade to RESTEasy 4.5 to support async IO\n\n- Remove second vertx instance\n- Microprofile REST client 1.4\n\nFixes #5593", "committedDate": "2020-03-05T04:43:22Z", "type": "forcePushed"}]}