{"pr_number": 10283, "pr_title": "Turn reactive datasource pools into synthetic beans", "pr_author": "mkouba", "pr_createdAt": "2020-06-25T17:28:54Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/10283", "timeline": [{"oid": "7c2401acd26179fb736f1e7696ffd927ab67a63e", "url": "https://github.com/quarkusio/quarkus/commit/7c2401acd26179fb736f1e7696ffd927ab67a63e", "message": "Turn PgPoolProducer.pgPool() into synthetic bean\n\n- resolves #10059", "committedDate": "2020-06-25T17:09:09Z", "type": "commit"}, {"oid": "7a4c1c4329bfd6f8224ac6f370e945e61c582169", "url": "https://github.com/quarkusio/quarkus/commit/7a4c1c4329bfd6f8224ac6f370e945e61c582169", "message": "Turn MySQLPoolProducer.mysqlPool() into synthetic bean", "committedDate": "2020-06-25T17:26:19Z", "type": "commit"}, {"oid": "32e90e6205f8d459f0180bd9d64cd25a391545f1", "url": "https://github.com/quarkusio/quarkus/commit/32e90e6205f8d459f0180bd9d64cd25a391545f1", "message": "Turn DB2PoolProducer.db2Pool() into synthetic bean", "committedDate": "2020-06-25T17:26:45Z", "type": "commit"}, {"oid": "d40baaf45b900458bafa9296bbff493702f37899", "url": "https://github.com/quarkusio/quarkus/commit/d40baaf45b900458bafa9296bbff493702f37899", "message": "VertxProcessor - collect event consumers during bean registration phase", "committedDate": "2020-06-26T06:58:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MDU5OA==", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446040598", "body": "Out of curiosity, the bean container will invoke this just once and keep a reference to the result, correct?", "bodyText": "Out of curiosity, the bean container will invoke this just once and keep a reference to the result, correct?", "bodyHTML": "<p dir=\"auto\">Out of curiosity, the bean container will invoke this just once and keep a reference to the result, correct?</p>", "author": "tsegismont", "createdAt": "2020-06-26T08:23:17Z", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolProducer.java", "diffHunk": "@@ -13,43 +14,16 @@\n \n     private static final Logger LOGGER = Logger.getLogger(PgPoolProducer.class);\n \n-    private volatile PgPool pgPool;\n-    private io.vertx.mutiny.pgclient.PgPool mutinyPgPool;\n-\n-    /**\n-     * @deprecated The Axle API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.axle.pgclient.PgPool axlePgPool;\n-    /**\n-     * @deprecated The RX API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.reactivex.pgclient.PgPool rxPgPool;\n-\n-    void initialize(PgPool pgPool) {\n-        this.pgPool = pgPool;\n-    }\n-\n-    /**\n-     * @return the <em>bare</em> PostGreSQL Pool instance.\n-     */\n-    @Singleton\n-    @Produces\n-    public PgPool pgPool() {\n-        return pgPool;\n-    }\n+    @Inject\n+    PgPool pgPool;\n \n     /**\n      * @return the <em>mutiny</em> PostGreSQL Pool instance. The instance is created lazily.\n      */\n     @Singleton\n     @Produces\n-    public synchronized io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n-        if (mutinyPgPool == null) {\n-            mutinyPgPool = io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);\n-        }\n-        return mutinyPgPool;\n+    public io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n+        return io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);", "originalCommit": "d40baaf45b900458bafa9296bbff493702f37899", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MTQ2Nw==", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446041467", "bodyText": "Yep, it's @Singleton so the returned instance is stored in the context.", "author": "mkouba", "createdAt": "2020-06-26T08:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MDU5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjExNzg4OQ==", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446117889", "body": "```suggestion\r\n        // Synthetic bean for DB2Pool\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Synthetic bean for MySQLPool\n          \n          \n            \n                    // Synthetic bean for DB2Pool", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Synthetic bean for <span class=\"x x-first x-last\">MySQLPool</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Synthetic bean for <span class=\"x x-first x-last\">DB2Pool</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gsmet", "createdAt": "2020-06-26T11:06:20Z", "path": "extensions/reactive-db2-client/deployment/src/main/java/io/quarkus/reactive/db2/client/deployment/ReactiveDB2ClientProcessor.java", "diffHunk": "@@ -55,11 +58,16 @@ ServiceStartBuildItem build(BuildProducer<FeatureBuildItem> feature,\n             return serviceStart;\n         }\n \n-        RuntimeValue<DB2Pool> db2PoolValue = recorder.configureDB2Pool(vertx.getVertx(), beanContainer.getValue(),\n+        RuntimeValue<DB2Pool> db2PoolValue = recorder.configureDB2Pool(vertx.getVertx(),\n                 dataSourcesRuntimeConfig, dataSourceReactiveRuntimeConfig, dataSourceReactiveDB2Config,\n                 shutdown);\n         db2Pool.produce(new DB2PoolBuildItem(db2PoolValue));\n \n+        // Synthetic bean for MySQLPool", "originalCommit": "7c29ed46e5731b2ffd20b131d0013f9fa7109790", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ca9783a67b4657d5e55ed8d4334bad03c13662d4", "url": "https://github.com/quarkusio/quarkus/commit/ca9783a67b4657d5e55ed8d4334bad03c13662d4", "message": "Reactive client beans - add io.vertx.sqlclient.Pool as a bean type", "committedDate": "2020-06-26T14:13:50Z", "type": "commit"}, {"oid": "ca9783a67b4657d5e55ed8d4334bad03c13662d4", "url": "https://github.com/quarkusio/quarkus/commit/ca9783a67b4657d5e55ed8d4334bad03c13662d4", "message": "Reactive client beans - add io.vertx.sqlclient.Pool as a bean type", "committedDate": "2020-06-26T14:13:50Z", "type": "forcePushed"}]}