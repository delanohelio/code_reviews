{"pr_number": 7943, "pr_title": "Remove Spring Data maven-invoker style tests", "pr_author": "geoand", "pr_createdAt": "2020-03-18T18:28:22Z", "pr_url": "https://github.com/quarkusio/quarkus/pull/7943", "timeline": [{"oid": "cace1078da700643617b6d6e5e7d45fc85704a38", "url": "https://github.com/quarkusio/quarkus/commit/cace1078da700643617b6d6e5e7d45fc85704a38", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T18:30:11Z", "type": "forcePushed"}, {"oid": "0711d399597af64ce6e28545d79933489b767c1d", "url": "https://github.com/quarkusio/quarkus/commit/0711d399597af64ce6e28545d79933489b767c1d", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T19:05:27Z", "type": "forcePushed"}, {"oid": "d6112a475e00f530b5a93efd2783114d4e867f52", "url": "https://github.com/quarkusio/quarkus/commit/d6112a475e00f530b5a93efd2783114d4e867f52", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T19:07:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxNTE1NA==", "url": "https://github.com/quarkusio/quarkus/pull/7943#discussion_r394615154", "body": "```suggestion\r\nimport java.util.logging.LogRecord;\r\nimport org.wildfly.common.Assert;\r\n\r\npublic class InMemoryLogHandler extends Handler {\r\n\r\n    private final Predicate<LogRecord> predicate;\r\n\r\n    public InMemoryLogHandler(Predicate<LogRecord> predicate) {\r\n        this.predicate = Assert.checkNotNullParam(\"predicate\",predicate);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.logging.LogRecord;\n          \n          \n            \n            \n          \n          \n            \n            public class InMemoryLogHandler extends Handler {\n          \n          \n            \n            \n          \n          \n            \n                private final Predicate<LogRecord> predicate;\n          \n          \n            \n            \n          \n          \n            \n                public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n          \n          \n            \n                    this.predicate = predicate;\n          \n          \n            \n            import java.util.logging.LogRecord;\n          \n          \n            \n            import org.wildfly.common.Assert;\n          \n          \n            \n            \n          \n          \n            \n            public class InMemoryLogHandler extends Handler {\n          \n          \n            \n            \n          \n          \n            \n                private final Predicate<LogRecord> predicate;\n          \n          \n            \n            \n          \n          \n            \n                public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n          \n          \n            \n                    this.predicate = Assert.checkNotNullParam(\"predicate\",predicate);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">java.util.logging.LogRecord</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">InMemoryLogHandler</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">Handler</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">LogRecord</span>&gt;</span> predicate;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> InMemoryLogHandler(<span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">LogRecord</span>&gt;</span> predicate) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>predicate <span class=\"pl-k\">=</span> predicate;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">java.util.logging.LogRecord</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.wildfly.common.Assert</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">InMemoryLogHandler</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">Handler</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">LogRecord</span>&gt;</span> predicate;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> InMemoryLogHandler(<span class=\"pl-k\">Predicate&lt;<span class=\"pl-smi\">LogRecord</span>&gt;</span> predicate) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>predicate <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>checkNotNullParam(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>predicate<span class=\"pl-pds\">\"</span></span>,predicate);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gastaldi", "createdAt": "2020-03-18T20:19:23Z", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/InMemoryLogHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Predicate;\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class InMemoryLogHandler extends Handler {\n+\n+    private final Predicate<LogRecord> predicate;\n+\n+    public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n+        this.predicate = predicate;", "originalCommit": "d6112a475e00f530b5a93efd2783114d4e867f52", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "217954a235773b81c890c5621cec903a52165f74", "url": "https://github.com/quarkusio/quarkus/commit/217954a235773b81c890c5621cec903a52165f74", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T20:57:04Z", "type": "forcePushed"}, {"oid": "a53797385efb613e537bf4f75016543766360974", "url": "https://github.com/quarkusio/quarkus/commit/a53797385efb613e537bf4f75016543766360974", "message": "Add the ability to capture the build logs in QuarkusProdModeTest\n\nCo-Authored-By: George Gastaldi <gegastaldi@gmail.com>", "committedDate": "2020-03-18T21:00:30Z", "type": "commit"}, {"oid": "832803a621cc71be1b0e9abac33b509c15df41e0", "url": "https://github.com/quarkusio/quarkus/commit/832803a621cc71be1b0e9abac33b509c15df41e0", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T21:00:30Z", "type": "commit"}, {"oid": "832803a621cc71be1b0e9abac33b509c15df41e0", "url": "https://github.com/quarkusio/quarkus/commit/832803a621cc71be1b0e9abac33b509c15df41e0", "message": "Replace Spring Data maven-invoker style tests with QuarkusProdModeTest\n\nUnblocks: #7922", "committedDate": "2020-03-18T21:00:30Z", "type": "forcePushed"}]}