{"pr_number": 117, "pr_title": "Not found response created", "pr_author": "olenagerasimova", "pr_createdAt": "2020-04-13T12:48:41Z", "pr_url": "https://github.com/artipie/http/pull/117", "timeline": [{"oid": "2cdb18a4631091b9561414cdfefc36b1fcd69622", "url": "https://github.com/artipie/http/commit/2cdb18a4631091b9561414cdfefc36b1fcd69622", "message": "Not found response created", "committedDate": "2020-04-13T11:36:15Z", "type": "commit"}, {"oid": "844cabb9011e230d88946a477ecf1f25932569d1", "url": "https://github.com/artipie/http/commit/844cabb9011e230d88946a477ecf1f25932569d1", "message": "correction to make build pass", "committedDate": "2020-04-14T17:28:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzkyOA==", "url": "https://github.com/artipie/http/pull/117#discussion_r408643928", "body": "@olenagerasimova why using JSON here? I'd not put any volatile date to default 404 response. Same for headers ", "bodyText": "@olenagerasimova why using JSON here? I'd not put any volatile date to default 404 response. Same for headers", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/olenagerasimova/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/olenagerasimova\">@olenagerasimova</a> why using JSON here? I'd not put any volatile date to default 404 response. Same for headers</p>", "author": "g4s8", "createdAt": "2020-04-15T07:43:56Z", "path": "src/main/java/com/artipie/http/Response.java", "diffHunk": "@@ -44,6 +47,17 @@\n         Flowable.empty()\n     );\n \n+    /**\n+     * Not found response.\n+     */\n+    Response NOT_FOUND = con -> con.accept(\n+        RsStatus.NOT_FOUND,\n+        new ListOf<java.util.Map.Entry<String, String>>(\n+            new MapEntry<>(\"Content-Type\", \"application/json\")\n+        ),\n+        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))", "originalCommit": "844cabb9011e230d88946a477ecf1f25932569d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43866e7ae6144cf069d4f49d67fc5ca983969004", "changed_code": [{"header": "diff --git a/src/main/java/com/artipie/http/Response.java b/src/main/java/com/artipie/http/Response.java\nindex fb1a803..1da28c8 100644\n--- a/src/main/java/com/artipie/http/Response.java\n+++ b/src/main/java/com/artipie/http/Response.java\n", "chunk": "@@ -40,24 +37,15 @@ public interface Response {\n \n     /**\n      * Empty response.\n+     * @deprecated Use {@link com.artipie.http.rs.StandardRs#EMPTY}.\n      */\n+    @Deprecated\n     Response EMPTY = con -> con.accept(\n         RsStatus.OK,\n         Collections.emptyList(),\n         Flowable.empty()\n     );\n \n-    /**\n-     * Not found response.\n-     */\n-    Response NOT_FOUND = con -> con.accept(\n-        RsStatus.NOT_FOUND,\n-        new ListOf<java.util.Map.Entry<String, String>>(\n-            new MapEntry<>(\"Content-Type\", \"application/json\")\n-        ),\n-        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))\n-    );\n-\n     /**\n      * Send the response.\n      *\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0NTU4MA==", "url": "https://github.com/artipie/http/pull/117#discussion_r408645580", "body": "@olenagerasimova Maybe we can move it to some enum which implements `Response` interface isntead of using interface fields? E.g.:\r\n```java\r\nenum StandardResponses implements Response {\r\n    NOT_FOUND(new RsWithStatus(RsStatus.NOT_FOUND));\r\n\r\n   private final Response origin;\r\n   StandardResponses(Response origin) {\r\n      this.origin = origin;\r\n   }\r\n   @Override\r\n   send(COnnection con) {\r\n     this.origin.send(con);\r\n   }\r\n}\r\n```", "bodyText": "@olenagerasimova Maybe we can move it to some enum which implements Response interface isntead of using interface fields? E.g.:\nenum StandardResponses implements Response {\n    NOT_FOUND(new RsWithStatus(RsStatus.NOT_FOUND));\n\n   private final Response origin;\n   StandardResponses(Response origin) {\n      this.origin = origin;\n   }\n   @Override\n   send(COnnection con) {\n     this.origin.send(con);\n   }\n}", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/olenagerasimova/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/olenagerasimova\">@olenagerasimova</a> Maybe we can move it to some enum which implements <code>Response</code> interface isntead of using interface fields? E.g.:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"enum StandardResponses implements Response {\n    NOT_FOUND(new RsWithStatus(RsStatus.NOT_FOUND));\n\n   private final Response origin;\n   StandardResponses(Response origin) {\n      this.origin = origin;\n   }\n   @Override\n   send(COnnection con) {\n     this.origin.send(con);\n   }\n}\n\"><pre><span class=\"pl-k\">enum</span> <span class=\"pl-en\">StandardResponses</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">Response</span> {\n    <span class=\"pl-c1\">NOT_FOUND</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RsWithStatus</span>(<span class=\"pl-smi\">RsStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NOT_FOUND</span>));\n\n   <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Response</span> origin;\n   <span class=\"pl-en\">StandardResponses</span>(<span class=\"pl-smi\">Response</span> <span class=\"pl-v\">origin</span>) {\n      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>origin <span class=\"pl-k\">=</span> origin;\n   }\n   <span class=\"pl-k\">@Override</span>\n   <span class=\"pl-en\">send</span>(<span class=\"pl-smi\">COnnection</span> <span class=\"pl-v\">con</span>) {\n     <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>origin<span class=\"pl-k\">.</span>send(con);\n   }\n}</pre></div>", "author": "g4s8", "createdAt": "2020-04-15T07:46:47Z", "path": "src/main/java/com/artipie/http/Response.java", "diffHunk": "@@ -44,6 +47,17 @@\n         Flowable.empty()\n     );\n \n+    /**\n+     * Not found response.\n+     */\n+    Response NOT_FOUND = con -> con.accept(", "originalCommit": "844cabb9011e230d88946a477ecf1f25932569d1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "43866e7ae6144cf069d4f49d67fc5ca983969004", "changed_code": [{"header": "diff --git a/src/main/java/com/artipie/http/Response.java b/src/main/java/com/artipie/http/Response.java\nindex fb1a803..1da28c8 100644\n--- a/src/main/java/com/artipie/http/Response.java\n+++ b/src/main/java/com/artipie/http/Response.java\n", "chunk": "@@ -40,24 +37,15 @@ public interface Response {\n \n     /**\n      * Empty response.\n+     * @deprecated Use {@link com.artipie.http.rs.StandardRs#EMPTY}.\n      */\n+    @Deprecated\n     Response EMPTY = con -> con.accept(\n         RsStatus.OK,\n         Collections.emptyList(),\n         Flowable.empty()\n     );\n \n-    /**\n-     * Not found response.\n-     */\n-    Response NOT_FOUND = con -> con.accept(\n-        RsStatus.NOT_FOUND,\n-        new ListOf<java.util.Map.Entry<String, String>>(\n-            new MapEntry<>(\"Content-Type\", \"application/json\")\n-        ),\n-        Flowable.fromArray(ByteBuffer.wrap(\"{\\\"error\\\" : \\\"not found\\\"}\".getBytes()))\n-    );\n-\n     /**\n      * Send the response.\n      *\n", "next_change": null}]}}, {"oid": "43866e7ae6144cf069d4f49d67fc5ca983969004", "url": "https://github.com/artipie/http/commit/43866e7ae6144cf069d4f49d67fc5ca983969004", "message": "Standard responses created", "committedDate": "2020-04-15T13:22:28Z", "type": "commit"}, {"oid": "abebe675a012f3af66805f29a52ac70498b5872b", "url": "https://github.com/artipie/http/commit/abebe675a012f3af66805f29a52ac70498b5872b", "message": "Replaced deprecated usages", "committedDate": "2020-04-15T13:26:28Z", "type": "commit"}, {"oid": "8135dc4a8712dc0d5ea745819495f2e3d478ede8", "url": "https://github.com/artipie/http/commit/8135dc4a8712dc0d5ea745819495f2e3d478ede8", "message": "empty resp corrected", "committedDate": "2020-04-15T13:32:38Z", "type": "commit"}]}