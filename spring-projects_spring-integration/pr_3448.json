{"pr_number": 3448, "pr_title": "Subscribe to Publisher in the NullChannel", "pr_author": "artembilan", "pr_createdAt": "2020-12-21T21:32:25Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3448", "timeline": [{"oid": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "url": "https://github.com/spring-projects/spring-integration/commit/e051f0d282f0d3a587e6c7495f280c8ed346783e", "message": "Subscribe to Publisher in the NullChannel\n\nIf a payload of the message in the flow is a `org.reactivestreams.Publisher`,\nit must be subscribed somewhere downstream to initiate reactive processing.\nThe `NullChannel` just ignores the message altogether and therefore `Publisher`\nis lost\n\n* Check the payload of the message in the `NullChannel` for `Publisher` type\nand subscribe to it\n* Verify in the test and mention this logic in the docs\n\n**Cherry-pick to 5.4.x**", "committedDate": "2020-12-21T22:32:15Z", "type": "commit"}, {"oid": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "url": "https://github.com/spring-projects/spring-integration/commit/e051f0d282f0d3a587e6c7495f280c8ed346783e", "message": "Subscribe to Publisher in the NullChannel\n\nIf a payload of the message in the flow is a `org.reactivestreams.Publisher`,\nit must be subscribed somewhere downstream to initiate reactive processing.\nThe `NullChannel` just ignores the message altogether and therefore `Publisher`\nis lost\n\n* Check the payload of the message in the `NullChannel` for `Publisher` type\nand subscribe to it\n* Verify in the test and mention this logic in the docs\n\n**Cherry-pick to 5.4.x**", "committedDate": "2020-12-21T22:32:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNjIzNg==", "url": "https://github.com/spring-projects/spring-integration/pull/3448#discussion_r547336236", "body": "```suggestion\r\n * and all {@link #send} calls will return {@code true} although no action is performed.\r\n * Unless the payload of a sent message is a {@link Publisher} implementation, in\r\n * which case the {@link Publisher#subscribe(Subscriber)} is called to initiate\r\n * the reactive stream, although the data is discarded by this channel.\r\n ```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * and all {@link #send} calls will return {@code true} although no action is performed.\n          \n          \n            \n             * Unless the payload of a sent is a {@link Publisher} implementation.\n          \n          \n            \n             * In this case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n          \n          \n            \n             * the reactive stream, although data is ignored in this channel.\n          \n          \n            \n             * and all {@link #send} calls will return {@code true} although no action is performed.\n          \n          \n            \n             * Unless the payload of a sent message is a {@link Publisher} implementation, in\n          \n          \n            \n             * which case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n          \n          \n            \n             * the reactive stream, although the data is discarded by this channel.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> and all {<span class=\"pl-k\">@link</span> #send} calls will <span class=\"pl-k\">return</span> {<span class=\"pl-k\">@code</span> <span class=\"pl-c1\">true</span>} although no action is performed.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Unless</span> the payload of a sent is a {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Publisher</span>} implementation<span class=\"x x-first x-last\">.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">In</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">this</span> <span class=\"pl-k\">case</span> the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Publisher</span>#subscribe(<span class=\"pl-smi\">Subscriber</span>)} is called to initiate</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> the reactive stream, although data is <span class=\"x x-first x-last\">ignored in</span> <span class=\"pl-c1\">this</span> channel.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> and all {<span class=\"pl-k\">@link</span> #send} calls will <span class=\"pl-k\">return</span> {<span class=\"pl-k\">@code</span> <span class=\"pl-c1\">true</span>} although no action is performed.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Unless</span> the payload of a sent <span class=\"x x-first x-last\">message </span>is a {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Publisher</span>} implementation<span class=\"x x-first x-last\">, in</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">which</span> <span class=\"pl-k\">case</span> the {<span class=\"pl-k\">@link</span> <span class=\"pl-smi\">Publisher</span>#subscribe(<span class=\"pl-smi\">Subscriber</span>)} is called to initiate</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> the reactive stream, although <span class=\"x x-first x-last\">the </span>data is <span class=\"x x-first x-last\">discarded by</span> <span class=\"pl-c1\">this</span> channel.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "garyrussell", "createdAt": "2020-12-22T15:19:19Z", "path": "spring-integration-core/src/main/java/org/springframework/integration/channel/NullChannel.java", "diffHunk": "@@ -35,13 +38,16 @@\n \n /**\n  * A channel implementation that essentially behaves like \"/dev/null\".\n- * All receive() calls will return <em>null</em>, and all send() calls\n- * will return <em>true</em> although no action is performed.\n+ * All {@link #receive()} calls will return {@code null},\n+ * and all {@link #send} calls will return {@code true} although no action is performed.\n+ * Unless the payload of a sent is a {@link Publisher} implementation.\n+ * In this case the {@link Publisher#subscribe(Subscriber)} is called to initiate\n+ * the reactive stream, although data is ignored in this channel.", "originalCommit": "e051f0d282f0d3a587e6c7495f280c8ed346783e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d78f851a89032ae8429d59ded7dac4191c4dc2b9", "url": "https://github.com/spring-projects/spring-integration/commit/d78f851a89032ae8429d59ded7dac4191c4dc2b9", "message": "Apply suggestions from code review\n\nCo-authored-by: Gary Russell <grussell@vmware.com>", "committedDate": "2020-12-22T16:08:29Z", "type": "commit"}]}