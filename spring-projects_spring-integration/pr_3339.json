{"pr_number": 3339, "pr_title": "Fix Kafka Send Timeout", "pr_author": "garyrussell", "pr_createdAt": "2020-07-14T21:03:50Z", "pr_url": "https://github.com/spring-projects/spring-integration/pull/3339", "merge_commit": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88", "timeline": [{"oid": "d6213c64edc3f7b26e479bb3d41b521ca2542059", "url": "https://github.com/spring-projects/spring-integration/commit/d6213c64edc3f7b26e479bb3d41b521ca2542059", "message": "Fix Kafka Send Timeout\n\nResolves https://github.com/spring-cloud/spring-cloud-stream-binder-kafka/issues/928\n\nKafka has a longer default send timeout; this means a send could be successful long\nafter Spring has timed out the send.\n\n**I will backport to the 3.3.x extension after merge**", "committedDate": "2020-07-14T21:03:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1ODk4Nw==", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454658987", "body": "Why can't we call `setSendTimeout(long sendTimeout)` instead?", "bodyText": "Why can't we call setSendTimeout(long sendTimeout) instead?", "bodyHTML": "<p dir=\"auto\">Why can't we call <code>setSendTimeout(long sendTimeout)</code> instead?</p>", "author": "artembilan", "createdAt": "2020-07-14T21:34:12Z", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -175,6 +181,25 @@ public KafkaProducerMessageHandler(final KafkaTemplate<K, V> kafkaTemplate) {\n \t\t\tlogger.warn(\"The KafkaTemplate is transactional; this gateway will only work if the consumer is \"\n \t\t\t\t\t+ \"configured to read uncommitted records\");\n \t\t}\n+\t\tdetermineSendTimeout();\n+\t\tthis.deliveryTimeoutMsProperty = this.sendTimeoutExpression.getValue(Long.class) - TIMEOUT_BUFFER;\n+\t}\n+\n+\tprivate void determineSendTimeout() {\n+\t\tMap<String, Object> props = this.kafkaTemplate.getProducerFactory().getConfigurationProperties();\n+\t\tObject dt = props.get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\tif (dt == null) {\n+\t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n+\t\t}\n+\t\tif (dt instanceof Long) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof Integer) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t}\n+\t\telse if (dt instanceof String) {\n+\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.parseLong((String) dt) + TIMEOUT_BUFFER);", "originalCommit": "d6213c64edc3f7b26e479bb3d41b521ca2542059", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 6115c40871..36dceb7d15 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -192,13 +192,13 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n \t\t}\n \t\tif (dt instanceof Long) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(((Long) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t\telse if (dt instanceof Integer) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t\telse if (dt instanceof String) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.parseLong((String) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.parseLong((String) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t}\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 6115c40871..36dceb7d15 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -192,13 +192,13 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n \t\t}\n \t\tif (dt instanceof Long) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(((Long) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t\telse if (dt instanceof Integer) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t\telse if (dt instanceof String) {\n-\t\t\tthis.sendTimeoutExpression = new ValueExpression<>(Long.parseLong((String) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.parseLong((String) dt) + TIMEOUT_BUFFER);\n \t\t}\n \t}\n \n", "next_change": {"commit": "75d14d32e7716cd532fa4ccf257d203f4ae83398", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 36dceb7d15..7663ef9e7f 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -192,13 +200,13 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t\t\tdt = ProducerConfig.configDef().defaultValues().get(ProducerConfig.DELIVERY_TIMEOUT_MS_CONFIG);\n \t\t}\n \t\tif (dt instanceof Long) {\n-\t\t\tsetSendTimeout(((Long) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(((Long) dt) + this.timeoutBuffer);\n \t\t}\n \t\telse if (dt instanceof Integer) {\n-\t\t\tsetSendTimeout(Long.valueOf((Integer) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.valueOf((Integer) dt) + this.timeoutBuffer);\n \t\t}\n \t\telse if (dt instanceof String) {\n-\t\t\tsetSendTimeout(Long.parseLong((String) dt) + TIMEOUT_BUFFER);\n+\t\t\tsetSendTimeout(Long.parseLong((String) dt) + this.timeoutBuffer);\n \t\t}\n \t}\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88", "message": "Merge commit", "committedDate": null}, {"oid": "8b16aede894d430bad2e90c3ddf60ea12d8fc7bf", "committedDate": "2020-07-16 11:36:04 -0400", "message": "Fix new Sonar smells"}, {"oid": "1beb854fb4f498d2fb8ab037f1df84881eed7222", "committedDate": "2020-08-07 12:56:57 -0400", "message": "Remove Legacy Metrics"}, {"oid": "9c6000e453d438ee92ee72e6d1e6a05605d5ec1d", "committedDate": "2020-10-16 14:37:37 -0400", "message": "Kafka Outbound Endpoints - Add futuresChannel"}, {"oid": "75d14d32e7716cd532fa4ccf257d203f4ae83398", "committedDate": "2020-10-16 16:28:34 -0400", "message": "Further Improve Kafka Test Run Time"}, {"oid": "b6d60bfd6913a45d5a64f6456ced9a42be46f127", "committedDate": "2020-10-19 11:32:33 -0400", "message": "KPMH - Remove unused parameter"}, {"oid": "3cf66cc53961698f01e6e56adf3746c4c1425a7d", "committedDate": "2020-10-19 11:48:18 -0400", "message": "Fix previous commit"}, {"oid": "c57634f085bc0252232b04445133a0b70e4a62a9", "committedDate": "2021-04-07 16:59:57 -0400", "message": "Properly mention Apache Kafka trademark in docs (#3540)"}, {"oid": "1b7d622777e6443a5acc15b90c2a9484ef82b0ea", "committedDate": "2021-07-28 11:54:31 -0400", "message": "GH-3600: Fix Kafka Tx Synchronization"}, {"oid": "e2557a42c23628591b33d43829d09e18126046e8", "committedDate": "2021-10-06 16:10:57 -0400", "message": "GH-3617: KPMH - Option To Use Template's Converter"}, {"oid": "6f3fdc76c1a9182770f1cd92365da003a81c8dd4", "committedDate": "2021-11-15 10:00:14 -0500", "message": "Some docs clean up"}, {"oid": "22b74c7a337d418d59b19cfe16305e064c1e54b7", "committedDate": "2022-05-05 21:51:16 -0400", "message": "GH-3790: Use new header constants for Kafka headers"}, {"oid": "573c29793a76c2d2d7c5d284e82691488aaf1b9d", "committedDate": "2022-07-25 17:19:19 -0400", "message": "Fix SIK module for latest SK compatibility"}, {"oid": "7864658d01b5875133132eea5a029842cd16ab02", "committedDate": "2022-11-14 10:55:21 -0500", "message": "GH-3686: Apply SF editor config"}, {"oid": "e19e6d4726a6acd52b81820565a22e8020814bda", "committedDate": "2022-11-15 08:39:54 -0500", "message": "GH-3942: Fix Race in Kafka OB Gateway"}, {"oid": "77a752934d4b7f57a3405f8c948e99f42d63b7c7", "committedDate": "2022-11-15 14:41:39 -0500", "message": "Improve Kafka Exception Message"}, {"oid": "c4ee5512f6f7170ada43af4f1167d74adb2e0dd2", "committedDate": "2023-06-08 13:44:29 -0400", "message": "GH-8638: Kafka: Send All Fails to Failure Channel"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTE3Nw==", "url": "https://github.com/spring-projects/spring-integration/pull/3339#discussion_r454659177", "body": "Looks like you have changed your mind and decided to not use this setter in the ctor.\r\nI mean doesn't look like there is still a justification for a `final`...", "bodyText": "Looks like you have changed your mind and decided to not use this setter in the ctor.\nI mean doesn't look like there is still a justification for a final...", "bodyHTML": "<p dir=\"auto\">Looks like you have changed your mind and decided to not use this setter in the ctor.<br>\nI mean doesn't look like there is still a justification for a <code>final</code>...</p>", "author": "artembilan", "createdAt": "2020-07-14T21:34:36Z", "path": "spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java", "diffHunk": "@@ -257,13 +282,14 @@ public void setSendTimeout(long sendTimeout) {\n \n \t/**\n \t * Specify a SpEL expression to evaluate a timeout in milliseconds for how long this\n-\t * {@link KafkaProducerMessageHandler} should wait wait for send operation\n-\t * results. Defaults to 10 seconds. The timeout is applied only in {@link #sync} mode.\n+\t * {@link KafkaProducerMessageHandler} should wait wait for send operation results.\n+\t * Defaults to the kafka {@code delivery.timeout.ms} property + 5 seconds. The timeout\n+\t * is applied only in {@link #sync} mode.\n \t * @param sendTimeoutExpression the {@link Expression} for timeout to wait for result\n-\t * fo send operation.\n+\t * for a send operation.\n \t * @since 2.1.1\n \t */\n-\tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n+\tpublic final void setSendTimeoutExpression(Expression sendTimeoutExpression) {", "originalCommit": "d6213c64edc3f7b26e479bb3d41b521ca2542059", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 6115c40871..36dceb7d15 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -289,7 +289,7 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t * for a send operation.\n \t * @since 2.1.1\n \t */\n-\tpublic final void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n+\tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n \t\tAssert.notNull(sendTimeoutExpression, \"'sendTimeoutExpression' must not be null\");\n \t\tthis.sendTimeoutExpression = sendTimeoutExpression;\n \t}\n", "next_change": null}]}, "revised_code_in_main": {"commit": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 6115c40871..36dceb7d15 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -289,7 +289,7 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t * for a send operation.\n \t * @since 2.1.1\n \t */\n-\tpublic final void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n+\tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n \t\tAssert.notNull(sendTimeoutExpression, \"'sendTimeoutExpression' must not be null\");\n \t\tthis.sendTimeoutExpression = sendTimeoutExpression;\n \t}\n", "next_change": {"commit": "75d14d32e7716cd532fa4ccf257d203f4ae83398", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 36dceb7d15..7663ef9e7f 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -284,10 +292,12 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t * Specify a SpEL expression to evaluate a timeout in milliseconds for how long this\n \t * {@link KafkaProducerMessageHandler} should wait wait for send operation results.\n \t * Defaults to the kafka {@code delivery.timeout.ms} property + 5 seconds. The timeout\n-\t * is applied only in {@link #sync} mode.\n+\t * is applied only in {@link #sync} mode. If this expression yields a result that is\n+\t * less than that value, the higher value is used.\n \t * @param sendTimeoutExpression the {@link Expression} for timeout to wait for result\n \t * for a send operation.\n \t * @since 2.1.1\n+\t * @see #setTimeoutBuffer(int)\n \t */\n \tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n \t\tAssert.notNull(sendTimeoutExpression, \"'sendTimeoutExpression' must not be null\");\n", "next_change": {"commit": "c57634f085bc0252232b04445133a0b70e4a62a9", "changed_code": [{"header": "diff --git a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\nindex 7663ef9e7f..d41d748af0 100644\n--- a/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n+++ b/spring-integration-kafka/src/main/java/org/springframework/integration/kafka/outbound/KafkaProducerMessageHandler.java\n", "chunk": "@@ -296,7 +291,6 @@ public class KafkaProducerMessageHandler<K, V> extends AbstractReplyProducingMes\n \t * less than that value, the higher value is used.\n \t * @param sendTimeoutExpression the {@link Expression} for timeout to wait for result\n \t * for a send operation.\n-\t * @since 2.1.1\n \t * @see #setTimeoutBuffer(int)\n \t */\n \tpublic void setSendTimeoutExpression(Expression sendTimeoutExpression) {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "9c252be028ab11a1aa6f3cb5908258b8f7e10d88", "message": "Merge commit", "committedDate": null}, {"oid": "8b16aede894d430bad2e90c3ddf60ea12d8fc7bf", "committedDate": "2020-07-16 11:36:04 -0400", "message": "Fix new Sonar smells"}, {"oid": "1beb854fb4f498d2fb8ab037f1df84881eed7222", "committedDate": "2020-08-07 12:56:57 -0400", "message": "Remove Legacy Metrics"}, {"oid": "9c6000e453d438ee92ee72e6d1e6a05605d5ec1d", "committedDate": "2020-10-16 14:37:37 -0400", "message": "Kafka Outbound Endpoints - Add futuresChannel"}, {"oid": "75d14d32e7716cd532fa4ccf257d203f4ae83398", "committedDate": "2020-10-16 16:28:34 -0400", "message": "Further Improve Kafka Test Run Time"}, {"oid": "b6d60bfd6913a45d5a64f6456ced9a42be46f127", "committedDate": "2020-10-19 11:32:33 -0400", "message": "KPMH - Remove unused parameter"}, {"oid": "3cf66cc53961698f01e6e56adf3746c4c1425a7d", "committedDate": "2020-10-19 11:48:18 -0400", "message": "Fix previous commit"}, {"oid": "c57634f085bc0252232b04445133a0b70e4a62a9", "committedDate": "2021-04-07 16:59:57 -0400", "message": "Properly mention Apache Kafka trademark in docs (#3540)"}, {"oid": "1b7d622777e6443a5acc15b90c2a9484ef82b0ea", "committedDate": "2021-07-28 11:54:31 -0400", "message": "GH-3600: Fix Kafka Tx Synchronization"}, {"oid": "e2557a42c23628591b33d43829d09e18126046e8", "committedDate": "2021-10-06 16:10:57 -0400", "message": "GH-3617: KPMH - Option To Use Template's Converter"}, {"oid": "6f3fdc76c1a9182770f1cd92365da003a81c8dd4", "committedDate": "2021-11-15 10:00:14 -0500", "message": "Some docs clean up"}, {"oid": "22b74c7a337d418d59b19cfe16305e064c1e54b7", "committedDate": "2022-05-05 21:51:16 -0400", "message": "GH-3790: Use new header constants for Kafka headers"}, {"oid": "573c29793a76c2d2d7c5d284e82691488aaf1b9d", "committedDate": "2022-07-25 17:19:19 -0400", "message": "Fix SIK module for latest SK compatibility"}, {"oid": "7864658d01b5875133132eea5a029842cd16ab02", "committedDate": "2022-11-14 10:55:21 -0500", "message": "GH-3686: Apply SF editor config"}, {"oid": "e19e6d4726a6acd52b81820565a22e8020814bda", "committedDate": "2022-11-15 08:39:54 -0500", "message": "GH-3942: Fix Race in Kafka OB Gateway"}, {"oid": "77a752934d4b7f57a3405f8c948e99f42d63b7c7", "committedDate": "2022-11-15 14:41:39 -0500", "message": "Improve Kafka Exception Message"}, {"oid": "c4ee5512f6f7170ada43af4f1167d74adb2e0dd2", "committedDate": "2023-06-08 13:44:29 -0400", "message": "GH-8638: Kafka: Send All Fails to Failure Channel"}]}, {"oid": "0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "url": "https://github.com/spring-projects/spring-integration/commit/0962bb7e5f6a77bbcd3a2eae4f2df13c2f5a1daa", "message": "Use setSendTimeout; make it final.", "committedDate": "2020-07-15T14:34:07Z", "type": "commit"}]}