{"pr_number": 941, "pr_title": "fix: make sure to fall back to old query path when query job is incomplete", "pr_createdAt": "2020-11-12T19:58:45Z", "pr_url": "https://github.com/googleapis/java-bigquery/pull/941", "merge_commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "timeline": [{"oid": "4231057ca98bf0c76d615630f0c0332cc349ff6b", "url": "https://github.com/googleapis/java-bigquery/commit/4231057ca98bf0c76d615630f0c0332cc349ff6b", "message": "fix: make sure to fall back to old query path when query job is incomplete (takes more than 10s)", "committedDate": "2020-11-12T19:58:05Z", "type": "commit"}, {"oid": "fd75e609c70208c04d79221c2188fbc564a739ec", "url": "https://github.com/googleapis/java-bigquery/commit/fd75e609c70208c04d79221c2188fbc564a739ec", "message": "nit", "committedDate": "2020-11-12T19:59:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407473", "body": "This block reads quite confusing now.\r\n\r\nconsider flipping it..\r\n\r\nif (results.getJobComplete() && results.getSchema() != null) {\r\n  schema = Schema.fromPb(results.getSchema());\r\n  // Your logic below for numRows, numDml...\r\n} else {\r\n  JobId jobId = ....\r\n....\r\n}", "bodyText": "This block reads quite confusing now.\nconsider flipping it..\nif (results.getJobComplete() && results.getSchema() != null) {\nschema = Schema.fromPb(results.getSchema());\n// Your logic below for numRows, numDml...\n} else {\nJobId jobId = ....\n....\n}", "bodyHTML": "<p dir=\"auto\">This block reads quite confusing now.</p>\n<p dir=\"auto\">consider flipping it..</p>\n<p dir=\"auto\">if (results.getJobComplete() &amp;&amp; results.getSchema() != null) {<br>\nschema = Schema.fromPb(results.getSchema());<br>\n// Your logic below for numRows, numDml...<br>\n} else {<br>\nJobId jobId = ....<br>\n....<br>\n}</p>", "author": "epavan123", "createdAt": "2020-11-12T20:30:35Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,7 +1268,7 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n+    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NTk4MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523075981", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw=="}], "type": "inlineReview", "revised_code": {"commit": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex ae3a548..fd5ec93 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1268,13 +1268,8 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n \n     long numRows;\n     Schema schema;\n-    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n", "next_change": {"commit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex fd5ec93..f129608 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1278,6 +1278,9 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n         numRows = results.getTotalRows().longValue();\n       }\n     } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n       TableResult tableResult = job.getQueryResults();\n", "next_change": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f129608..0ed1ca6 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex ae3a5480..0ed1ca68 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1268,13 +1268,8 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n \n     long numRows;\n     Schema schema;\n-    if ((results.getSchema() == null && results.getJobComplete()) || !results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n", "next_change": null}]}, "commits_in_main": [{"oid": "bd7d85c489cd260feeabbdc9ecbb8dcdc8d9ae77", "message": "Merge commit", "committedDate": null}, {"oid": "1739d57c59cfb6b90ccf3fcc9c07d1449fc17238", "committedDate": "2020-11-25 09:26:53 -0500", "message": "fix: update listPartitions() to support tables from other projects (#974)"}, {"oid": "68808e9f47c07af598324f3f07dd996bc1e5297b", "committedDate": "2021-06-15 12:41:10 -0400", "message": "fix: handle specific exceptions (#1370)"}, {"oid": "95f1a6c2e3281d61d38660749cf31fa504ddf8e0", "committedDate": "2021-06-24 17:48:15 -0400", "message": "feat: add support for jobs.delete (#1387)"}, {"oid": "44d97953febac11c9167efe6781c779f486355d0", "committedDate": "2021-07-14 09:58:29 -0400", "message": "feat: Implemented BigQueryRetryAlgorithm to retry on the basis of the configured re-triable error messages (#1426)"}, {"oid": "ec68c1145a89753e7d42458bbea86737cad6090f", "committedDate": "2021-08-11 12:08:08 -0400", "message": "feat: Updated `BigQueryRetryAlgorithm` so that it can retry on RateLimit Errors using RegEx (#1499)"}, {"oid": "4251b19f5b240b907aa5fc6d0cc64026245714cf", "committedDate": "2021-09-20 22:58:51 +0000", "message": "fix: do not throw NPE from BigQueryImpl.testIamPermissions (#1596)"}, {"oid": "fd06ad2728e52eac2e8570b0ba15830ad79470ad", "committedDate": "2021-10-21 14:46:12 -0400", "message": "fix: allow retry on connection establishing exceptions (#1666)"}, {"oid": "97a61dc90fb701986a51a12c9c83b7138894307a", "committedDate": "2021-12-14 15:00:09 -0500", "message": "feat: create Job retry for rate limit exceeded with status code 200 (#1744)"}, {"oid": "73e829bad373279b13fb59a56b1dc60eac0835a0", "committedDate": "2022-03-11 02:40:23 +0000", "message": "feat: set Table.Schema for permanent external tables (#1701)"}, {"oid": "380427511b33938209241f3800bff05914957f2b", "committedDate": "2022-05-06 08:33:08 -0400", "message": "feat: add Connection interface (#1374)"}, {"oid": "460ef318297fe5562a983f64c407b7c0fa5a9a8b", "committedDate": "2022-10-17 23:28:13 +0000", "message": "fix: properly handle external table schema on table update (#2236)"}, {"oid": "42c083ac680c657bf3f648fbce81004ecac8be87", "committedDate": "2022-11-11 14:16:08 -0500", "message": "feat: add fast query path support when empty jobId object is passed (#2349)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r522407880", "body": "Please also add a mock test showing that the subsequent getQueryResults call gets made.", "bodyText": "Please also add a mock test showing that the subsequent getQueryResults call gets made.", "bodyHTML": "<p dir=\"auto\">Please also add a mock test showing that the subsequent getQueryResults call gets made.</p>", "author": "epavan123", "createdAt": "2020-11-12T20:31:18Z", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/it/ITBigQueryTest.java", "diffHunk": "@@ -1813,6 +1813,36 @@ public void testFastDDLQuery() throws InterruptedException {\n     }\n   }\n \n+  @Test\n+  public void testFastQuerySlowDDL() throws InterruptedException {\n+    String tableName =", "originalCommit": "fd75e609c70208c04d79221c2188fbc564a739ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3NjA0Mg==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523076042", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T16:50:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzg4MA=="}], "type": "inlineReview", "revised_code": null}, {"oid": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "url": "https://github.com/googleapis/java-bigquery/commit/e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "message": "address comments", "committedDate": "2020-11-13T16:46:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523163804", "body": "Please add a comment here.\r\n\r\n// Query is long running (> 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.", "bodyText": "Please add a comment here.\n// Query is long running (> 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.", "bodyHTML": "<p dir=\"auto\">Please add a comment here.</p>\n<p dir=\"auto\">// Query is long running (&gt; 10s) and hasn't completed yet, or query completed but didn't return the schema, fallback. Some operations don't return the schema and can be optimized here, but this is left as future work.</p>", "author": "epavan123", "createdAt": "2020-11-13T19:01:04Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,20 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {", "originalCommit": "e561ab4956a49a0ea297dfcb95d0ae9c308c047c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NTA2MQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523165061", "bodyText": "done", "author": "stephaniewang526", "createdAt": "2020-11-13T19:03:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MzgwNA=="}], "type": "inlineReview", "revised_code": {"commit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex fd5ec93..f129608 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1278,6 +1278,9 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n         numRows = results.getTotalRows().longValue();\n       }\n     } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n       TableResult tableResult = job.getQueryResults();\n", "next_change": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f129608..0ed1ca6 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}}]}}, {"oid": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "url": "https://github.com/googleapis/java-bigquery/commit/6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "message": "add comment", "committedDate": "2020-11-13T19:03:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523166440", "body": "nit: simplify as `return job.getQueryResults();` ?", "bodyText": "nit: simplify as return job.getQueryResults(); ?", "bodyHTML": "<p dir=\"auto\">nit: simplify as <code>return job.getQueryResults();</code> ?</p>", "author": "shollyman", "createdAt": "2020-11-13T19:06:36Z", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java", "diffHunk": "@@ -1268,20 +1268,23 @@ private TableResult queryRpc(\n \n     long numRows;\n     Schema schema;\n-    if (results.getSchema() == null && results.getJobComplete()) {\n-      JobId jobId = JobId.fromPb(results.getJobReference());\n-      Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n-    } else {\n-      schema = results.getSchema() == null ? null : Schema.fromPb(results.getSchema());\n+    if (results.getJobComplete() && results.getSchema() != null) {\n+      schema = Schema.fromPb(results.getSchema());\n       if (results.getNumDmlAffectedRows() == null && results.getTotalRows() == null) {\n         numRows = 0L;\n       } else if (results.getNumDmlAffectedRows() != null) {\n         numRows = results.getNumDmlAffectedRows();\n       } else {\n         numRows = results.getTotalRows().longValue();\n       }\n+    } else {\n+      // Query is long running (> 10s) and hasn't completed yet, or query completed but didn't\n+      // return the schema, fallback. Some operations don't return the schema and can be optimized\n+      // here, but this is left as future work.\n+      JobId jobId = JobId.fromPb(results.getJobReference());\n+      Job job = getJob(jobId, options);\n+      TableResult tableResult = job.getQueryResults();", "originalCommit": "6a782a827fc5efe2bad3b0f102e5f3dae2d717c0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE4MzEwNQ==", "url": "https://github.com/googleapis/java-bigquery/pull/941#discussion_r523183105", "bodyText": "done - ty!", "author": "stephaniewang526", "createdAt": "2020-11-13T19:40:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2NjQ0MA=="}], "type": "inlineReview", "revised_code": {"commit": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "changed_code": [{"header": "diff --git a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\nindex f129608..0ed1ca6 100644\n--- a/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n+++ b/google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/BigQueryImpl.java\n", "chunk": "@@ -1283,8 +1283,7 @@ final class BigQueryImpl extends BaseService<BigQueryOptions> implements BigQuer\n       // here, but this is left as future work.\n       JobId jobId = JobId.fromPb(results.getJobReference());\n       Job job = getJob(jobId, options);\n-      TableResult tableResult = job.getQueryResults();\n-      return tableResult;\n+      return job.getQueryResults();\n     }\n \n     if (results.getPageToken() != null) {\n", "next_change": null}]}}, {"oid": "5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "url": "https://github.com/googleapis/java-bigquery/commit/5aa0f7f83e35d641cf79782a42d3a9bbac0fb206", "message": "nit update", "committedDate": "2020-11-13T19:17:32Z", "type": "commit"}]}