{"pr_number": 190, "pr_title": "[MOB-1157] - Retain data during configuration change", "pr_author": "Ayyanchira", "pr_createdAt": "2020-02-04T02:20:13Z", "pr_url": "https://github.com/Iterable/iterable-android-sdk/pull/190", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4NzY2Mw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r374987663", "body": "`Fragment` itself does this\r\n```\r\n        FragmentActivity activity = this.getActivity();\r\n        boolean isChangingConfigurations = activity != null && activity.isChangingConfigurations();\r\n        if (this.mViewModelStore != null && !isChangingConfigurations) {\r\n            this.mViewModelStore.clear();\r\n        }\r\n```\r\nLooks like we can use a similar check for whether it's being destroyed because of a configuration change.", "bodyText": "Fragment itself does this\n        FragmentActivity activity = this.getActivity();\n        boolean isChangingConfigurations = activity != null && activity.isChangingConfigurations();\n        if (this.mViewModelStore != null && !isChangingConfigurations) {\n            this.mViewModelStore.clear();\n        }\n\nLooks like we can use a similar check for whether it's being destroyed because of a configuration change.", "bodyHTML": "<p dir=\"auto\"><code>Fragment</code> itself does this</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        FragmentActivity activity = this.getActivity();\n        boolean isChangingConfigurations = activity != null &amp;&amp; activity.isChangingConfigurations();\n        if (this.mViewModelStore != null &amp;&amp; !isChangingConfigurations) {\n            this.mViewModelStore.clear();\n        }\"><pre><code>        FragmentActivity activity = this.getActivity();\n        boolean isChangingConfigurations = activity != null &amp;&amp; activity.isChangingConfigurations();\n        if (this.mViewModelStore != null &amp;&amp; !isChangingConfigurations) {\n            this.mViewModelStore.clear();\n        }\n</code></pre></div>\n<p dir=\"auto\">Looks like we can use a similar check for whether it's being destroyed because of a configuration change.</p>", "author": "vbabenkoru", "createdAt": "2020-02-04T23:44:11Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -90,6 +91,25 @@ public void onCreate(@Nullable Bundle savedInstanceState) {\n             htmlString = args.getString(\"html\", null);\n             callbackOnCancel = args.getBoolean(\"callbackOnCancel\", false);\n         }\n+        isReloading = false;\n+        setCallback(IterableInAppDisplayer.urlCallBack);\n+        setLocation(IterableInAppDisplayer.location);\n+    }\n+\n+    @Override\n+    public void onSaveInstanceState(Bundle outState) {\n+        super.onSaveInstanceState(outState);\n+        isReloading = true;\n+        outState.putBoolean(\"isReloading\", true);", "originalCommit": "81e0acefdf2a9aff505e50de404fe7d9eee62f22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk4NzgxNw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r374987817", "body": "This is not necessary, `callbackOnCancel` is already handled in `IterableInAppFragmentHTMLNotification`.", "bodyText": "This is not necessary, callbackOnCancel is already handled in IterableInAppFragmentHTMLNotification.", "bodyHTML": "<p dir=\"auto\">This is not necessary, <code>callbackOnCancel</code> is already handled in <code>IterableInAppFragmentHTMLNotification</code>.</p>", "author": "vbabenkoru", "createdAt": "2020-02-04T23:44:44Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppDisplayer.java", "diffHunk": "@@ -101,7 +105,16 @@ static boolean showIterableFragmentNotificationHTML(Context context, String html\n                 notification.setBackgroundAlpha(backgroundAlpha);\n                 notification.setPadding(padding);\n                 notification.setLocation(location);\n-\n+                \n+//                TODO: Callback on cancel for DialogFragment needs to be implemented", "originalCommit": "81e0acefdf2a9aff505e50de404fe7d9eee62f22", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ccd154520b264b7bee004c0b0dd536d2cdf41c5", "url": "https://github.com/Iterable/iterable-android-sdk/commit/5ccd154520b264b7bee004c0b0dd536d2cdf41c5", "message": "[MOB-1157] - Retain data for during configuration change\n\nGlobally saves urlCallBack and location.\nRetains if the view is going to reload. If not it will assign the stored variable to null.", "committedDate": "2020-02-05T19:48:15Z", "type": "forcePushed"}, {"oid": "f49af43b621877fe0f9d7ace25a290b0bdc58da2", "url": "https://github.com/Iterable/iterable-android-sdk/commit/f49af43b621877fe0f9d7ace25a290b0bdc58da2", "message": "[MOB-1157] - Retain data for during configuration change\n\nGlobally saves urlCallBack and location.\nRetains if the view is going to reload. If not it will assign the stored variable to null.", "committedDate": "2020-02-05T19:53:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4MTg2OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r375581869", "body": "This assigns the static variables before the checks that follow. It is possible that the callback will be assigned, but no in-app message will get spawned. I think it might be better to move these variables to `IterableInAppFragmentHTMLNotification` class instead and pass them through `createInstance`...", "bodyText": "This assigns the static variables before the checks that follow. It is possible that the callback will be assigned, but no in-app message will get spawned. I think it might be better to move these variables to IterableInAppFragmentHTMLNotification class instead and pass them through createInstance...", "bodyHTML": "<p dir=\"auto\">This assigns the static variables before the checks that follow. It is possible that the callback will be assigned, but no in-app message will get spawned. I think it might be better to move these variables to <code>IterableInAppFragmentHTMLNotification</code> class instead and pass them through <code>createInstance</code>...</p>", "author": "vbabenkoru", "createdAt": "2020-02-06T00:22:03Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppDisplayer.java", "diffHunk": "@@ -87,6 +89,8 @@ public void onCancel(DialogInterface dialog) {\n      * @param padding\n      */\n     static boolean showIterableFragmentNotificationHTML(Context context, String htmlString, String messageId, final IterableHelper.IterableUrlCallback clickCallback, double backgroundAlpha, Rect padding, boolean callbackOnCancel, IterableInAppLocation location) {\n+        IterableInAppDisplayer.urlCallBack = clickCallback;", "originalCommit": "f49af43b621877fe0f9d7ace25a290b0bdc58da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4NTI1Ng==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r375585256", "bodyText": "This should have been the very first approach. \ud83d\udc4d", "author": "Ayyanchira", "createdAt": "2020-02-06T00:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4MTg2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4MjMxMA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r375582310", "body": "`isShowingInApp` is still referencing the old class, so this line may not be safe to switch without changing it.", "bodyText": "isShowingInApp is still referencing the old class, so this line may not be safe to switch without changing it.", "bodyHTML": "<p dir=\"auto\"><code>isShowingInApp</code> is still referencing the old class, so this line may not be safe to switch without changing it.</p>", "author": "vbabenkoru", "createdAt": "2020-02-06T00:23:45Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppDisplayer.java", "diffHunk": "@@ -22,7 +24,7 @@ boolean showMessage(IterableInAppMessage message, IterableInAppLocation location\n         Activity currentActivity = activityMonitor.getCurrentActivity();\n         // Prevent double display\n         if (currentActivity != null) {\n-            return IterableInAppDisplayer.showIterableNotificationHTML(currentActivity,\n+            return IterableInAppDisplayer.showIterableFragmentNotificationHTML(currentActivity,", "originalCommit": "f49af43b621877fe0f9d7ace25a290b0bdc58da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4Mjc4Ng==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r375582786", "bodyText": "Might also be more correct to move notification = null; to onDestroy (and only reset it if the dialog isn't being recreated because of a configuration change).", "author": "vbabenkoru", "createdAt": "2020-02-06T00:25:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4MjMxMA=="}], "type": "inlineReview"}, {"oid": "e4cc8173acf32fd40d03a8430b9432669a69b1ab", "url": "https://github.com/Iterable/iterable-android-sdk/commit/e4cc8173acf32fd40d03a8430b9432669a69b1ab", "message": "[MOB-1157] - Retain data for during configuration change\n\nGlobally saves urlCallBack and location.\nRetains if the view is going to reload. If not it will assign the stored variable to null.", "committedDate": "2020-02-06T17:09:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg3MzQ4Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/190#discussion_r376873487", "body": "I think we should only switch to `IterableInAppFragmentHTMLNotification` when all known issues are resolved. Right now it doesn't retain some properties on rotation and uses a default DialogFragment animation.", "bodyText": "I think we should only switch to IterableInAppFragmentHTMLNotification when all known issues are resolved. Right now it doesn't retain some properties on rotation and uses a default DialogFragment animation.", "bodyHTML": "<p dir=\"auto\">I think we should only switch to <code>IterableInAppFragmentHTMLNotification</code> when all known issues are resolved. Right now it doesn't retain some properties on rotation and uses a default DialogFragment animation.</p>", "author": "vbabenkoru", "createdAt": "2020-02-10T05:27:09Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppDisplayer.java", "diffHunk": "@@ -15,14 +15,14 @@\n     }\n \n     boolean isShowingInApp() {\n-        return IterableInAppHTMLNotification.getInstance() != null;\n+        return IterableInAppFragmentHTMLNotification.getInstance() != null;\n     }\n \n     boolean showMessage(IterableInAppMessage message, IterableInAppLocation location, final IterableHelper.IterableUrlCallback clickCallback) {\n         Activity currentActivity = activityMonitor.getCurrentActivity();\n         // Prevent double display\n         if (currentActivity != null) {\n-            return IterableInAppDisplayer.showIterableNotificationHTML(currentActivity,\n+            return IterableInAppDisplayer.showIterableFragmentNotificationHTML(currentActivity,", "originalCommit": "e4cc8173acf32fd40d03a8430b9432669a69b1ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ecd3398b650ea7a0861f7af35cc6feb07cbb79e", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ecd3398b650ea7a0861f7af35cc6feb07cbb79e", "message": "[MOB-1157] - Retain data for during configuration change\n\nGlobally saves urlCallBack and location.\nRetains if the view is going to reload. If not it will assign the stored variable to null.", "committedDate": "2020-02-10T18:20:40Z", "type": "commit"}, {"oid": "9ecd3398b650ea7a0861f7af35cc6feb07cbb79e", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ecd3398b650ea7a0861f7af35cc6feb07cbb79e", "message": "[MOB-1157] - Retain data for during configuration change\n\nGlobally saves urlCallBack and location.\nRetains if the view is going to reload. If not it will assign the stored variable to null.", "committedDate": "2020-02-10T18:20:40Z", "type": "forcePushed"}]}