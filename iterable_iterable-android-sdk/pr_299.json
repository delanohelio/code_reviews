{"pr_number": 299, "pr_title": "[MOB-2446] - Online vs Offline handling", "pr_author": "Ayyanchira", "pr_createdAt": "2020-12-16T19:51:22Z", "pr_url": "https://github.com/Iterable/iterable-android-sdk/pull/299", "timeline": [{"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly", "committedDate": "2020-12-16T20:20:22Z", "type": "commit"}, {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly", "committedDate": "2020-12-16T20:20:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1NjY5Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544656697", "body": "```suggestion\r\n    private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n          \n          \n            \n                private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">Set&lt;<span class=\"pl-smi\">String</span>&gt;</span> offlineApiSet <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;&gt;</span>(<span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first\">private</span><span class=\"x\"> </span><span class=\"pl-k x\">static</span><span class=\"x\"> </span><span class=\"pl-k x\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">Set&lt;<span class=\"pl-smi\">String</span>&gt;</span> offlineApiSet <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;&gt;</span>(<span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vbabenkoru", "createdAt": "2020-12-16T22:05:56Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "originalCommit": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c5edd95583b8e82456f6a692ff11983a015fded8", "url": "https://github.com/Iterable/iterable-android-sdk/commit/c5edd95583b8e82456f6a692ff11983a015fded8", "message": "Update iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>", "committedDate": "2020-12-16T22:36:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3ODI5MA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544678290", "body": "```suggestion\r\n    public void testAllOfflineApisUseTaskScheduler() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testAllOfflineApisUseTaskSchedular() {\n          \n          \n            \n                public void testAllOfflineApisUseTaskScheduler() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testAllOfflineApisUseTaskSchedular</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testAllOfflineApisUseTaskScheduler</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vbabenkoru", "createdAt": "2020-12-16T22:46:29Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private IterableTaskStorage mockTaskStorage;\n+\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskStorage = mock(IterableTaskStorage.class);\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(getContext(), mockTaskStorage, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(1)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(0)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testAllOfflineApisUseTaskSchedular() {", "originalCommit": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMjA5OA==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544722098", "body": "You can inject just `taskRunner` and `taskScheduler` as dependencies, skipping `storage`.", "bodyText": "You can inject just taskRunner and taskScheduler as dependencies, skipping storage.", "bodyHTML": "<p dir=\"auto\">You can inject just <code>taskRunner</code> and <code>taskScheduler</code> as dependencies, skipping <code>storage</code>.</p>", "author": "vbabenkoru", "createdAt": "2020-12-17T00:31:28Z", "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n+            IterableConstants.ENDPOINT_TRACK,\n+            IterableConstants.ENDPOINT_TRACK_PUSH_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_PURCHASE,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLICK,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLOSE,\n+            IterableConstants.ENDPOINT_TRACK_INBOX_SESSION,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_DELIVERY,\n+            IterableConstants.ENDPOINT_INAPP_CONSUME));\n \n     OfflineRequestProcessor(Context context) {\n         IterableTaskStorage taskStorage = IterableTaskStorage.sharedInstance(context);\n         taskRunner = new IterableTaskRunner(taskStorage, IterableActivityMonitor.getInstance());\n         taskScheduler = new TaskScheduler(taskStorage, taskRunner);\n     }\n \n+    @VisibleForTesting\n+    OfflineRequestProcessor(Context context, IterableTaskStorage storage, IterableTaskRunner iterableTaskRunner) {\n+        taskRunner = iterableTaskRunner;\n+        taskScheduler = new TaskScheduler(storage, taskRunner);", "originalCommit": "c5edd95583b8e82456f6a692ff11983a015fded8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1Mzc1OQ==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545553759", "body": "What are these logging lines for? It seems like they are not part of the test logic.", "bodyText": "What are these logging lines for? It seems like they are not part of the test logic.", "bodyHTML": "<p dir=\"auto\">What are these logging lines for? It seems like they are not part of the test logic.</p>", "author": "vbabenkoru", "createdAt": "2020-12-18T03:42:13Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");", "originalCommit": "984190b63fa5eff5960af379cead01e038198f03", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDI0Mw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545554243", "body": "Why `PUSH_DISABLE_AFTER_REGISTRATION`? Non-offline endpoint constant would fit better here I think..", "bodyText": "Why PUSH_DISABLE_AFTER_REGISTRATION? Non-offline endpoint constant would fit better here I think..", "bodyHTML": "<p dir=\"auto\">Why <code>PUSH_DISABLE_AFTER_REGISTRATION</code>? Non-offline endpoint constant would fit better here I think..</p>", "author": "vbabenkoru", "createdAt": "2020-12-18T03:44:03Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");\n+            }\n+        }, new IterableHelper.FailureHandler() {\n+            @Override\n+            public void onFailure(@NonNull String reason, @Nullable JSONObject data) {\n+                IterableLogger.e(\"OfflineRequestProcessorTest\", \"OnFailure callback executed\");\n+            }\n+        });\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), any(IterableHelper.SuccessHandler.class), any(IterableHelper.FailureHandler.class));\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);", "originalCommit": "984190b63fa5eff5960af379cead01e038198f03", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY3ODY0Nw==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545678647", "bodyText": "Oh.. I thought its disableDevice... My bad\ud83d\ude05", "author": "Ayyanchira", "createdAt": "2020-12-18T08:59:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDI0Mw=="}], "type": "inlineReview"}, {"oid": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "url": "https://github.com/Iterable/iterable-android-sdk/commit/3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:54:50Z", "type": "forcePushed"}, {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:58:43Z", "type": "commit"}, {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers", "committedDate": "2020-12-18T08:58:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0OTQ2Mg==", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r546149462", "body": "```suggestion\r\n        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), isNull(IterableHelper.SuccessHandler.class), isNull(IterableHelper.FailureHandler.class));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());\n          \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), isNull(IterableHelper.SuccessHandler.class), isNull(IterableHelper.FailureHandler.class));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        verify(mockTaskScheduler)<span class=\"pl-k\">.</span>scheduleTask(any(<span class=\"pl-smi\">IterableApiRequest</span><span class=\"pl-k\">.</span>class), (<span class=\"pl-smi\">IterableHelper</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SuccessHandler</span><span class=\"x x-first x-last\">)</span> isNull(<span class=\"x x-first x-last\">), (</span><span class=\"pl-smi\">IterableHelper</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">FailureHandler</span><span class=\"x x-first x-last\">) isNull(</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        verify(mockTaskScheduler)<span class=\"pl-k\">.</span>scheduleTask(any(<span class=\"pl-smi\">IterableApiRequest</span><span class=\"pl-k\">.</span>class), <span class=\"x x-first x-last\">isNull</span>(<span class=\"pl-smi\">IterableHelper</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">SuccessHandler</span><span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">class),</span> isNull(<span class=\"pl-smi\">IterableHelper</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">FailureHandler</span><span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">class</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vbabenkoru", "createdAt": "2020-12-18T23:46:20Z", "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.isNull;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());", "originalCommit": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9ef2b682b1efde952ad97f728336043423bdb7ab", "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ef2b682b1efde952ad97f728336043423bdb7ab", "message": "Update iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>", "committedDate": "2020-12-18T23:51:38Z", "type": "commit"}]}