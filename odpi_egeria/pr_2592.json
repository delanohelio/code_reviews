{"pr_number": 2592, "pr_title": "Git2577 introduce view services", "pr_author": "davidradl", "pr_createdAt": "2020-02-14T17:05:46Z", "pr_url": "https://github.com/odpi/egeria/pull/2592", "merge_commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "timeline": [{"oid": "c983eaa1aa86f766e2578f0c310a35758d31681e", "url": "https://github.com/odpi/egeria/commit/c983eaa1aa86f766e2578f0c310a35758d31681e", "message": "#2577 add view services\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T16:24:30Z", "type": "commit"}, {"oid": "5fa9ec9ee7a2dd4fba09355b531f4ea07f5ff86f", "url": "https://github.com/odpi/egeria/commit/5fa9ec9ee7a2dd4fba09355b531f4ea07f5ff86f", "message": "#2577 add view services documentation\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T16:55:25Z", "type": "commit"}, {"oid": "5f4faad62d57932035a6c0aa34ac728deae9846b", "url": "https://github.com/odpi/egeria/commit/5f4faad62d57932035a6c0aa34ac728deae9846b", "message": "#2577 merge from master\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T17:02:09Z", "type": "commit"}, {"oid": "7c111e9f12c5166f01b7c401ab6b98fd159718ff", "url": "https://github.com/odpi/egeria/commit/7c111e9f12c5166f01b7c401ab6b98fd159718ff", "message": "#2577 resolve a conflict from master\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T17:13:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0NzI0NQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379547245", "body": "Governance engine?", "bodyText": "Governance engine?", "bodyHTML": "<p dir=\"auto\">Governance engine?</p>", "author": "planetf1", "createdAt": "2020-02-14T17:12:39Z", "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,169 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+\n+\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Governance Engine OMAS.\",", "originalCommit": "5f4faad62d57932035a6c0aa34ac728deae9846b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "40aff8bb62f44971134f18574bf936052a59f24c", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nindex 0cea72f0b4..e3ce586140 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n", "chunk": "@@ -30,33 +30,32 @@ import java.util.Arrays;\n public enum SubjectAreaViewAuditCode {\n     SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is initializing\",\n+            \"The Subject Area View Service (OMVS) is initializing\",\n             \"The local server has started up the Subject Area OMVS.\",\n             \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n \n     SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is initialized\",\n+            \"The Subject Area View Service (OMVS) is initialized\",\n             \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n \n     SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down\",\n+            \"The Subject Area View Service (OMVS) is shutting down\",\n             \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n-\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n \n     SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n     SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Governance Engine OMAS.\",\n-            \"No action is required.  This is part of the normal operation of the service.\"),\n+            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n \n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 71%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..e221c0d0fc 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server has started up the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS. The operator should verify that shutdown was intended.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 66%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex 0cea72f0b4..a31f3eb5a2 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,38 +25,37 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server is initializing the Glossary Author OMVS. If the initialization is successful then audit message OMVS-GLOSSARY-AUTHOR-0003 will be issued, if there were errors then they should be shown in the audit log. \",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0002\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization. Calls will be accepted by this service, if OMRS is also configured and the view server has been started. \",\n+            \"No action is required.  This is part of the normal operation of the Glossary Author OMVS. Once the OMRS is configured and the server is started, Glossary Author view service requests can be accepted.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the  Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shutdown of the Glossary Author OMVS.\",\n+            \"No action is required. The operator should verify that shutdown was intended. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-\n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0005\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Open Metadata Access Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Governance Engine OMAS.\",\n-            \"No action is required.  This is part of the normal operation of the service.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"oid": "40aff8bb62f44971134f18574bf936052a59f24c", "url": "https://github.com/odpi/egeria/commit/40aff8bb62f44971134f18574bf936052a59f24c", "message": "#2577 addressing Nigels feedback\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T17:28:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODUyMw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598523", "body": "This should probably be `setServiceCode` rather than `setserviceCode` (?)", "bodyText": "This should probably be setServiceCode rather than setserviceCode (?)", "bodyHTML": "<p dir=\"auto\">This should probably be <code>setServiceCode</code> rather than <code>setserviceCode</code> (?)</p>", "author": "cmgrote", "createdAt": "2020-02-14T19:12:11Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -121,7 +121,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceCode  int type code\n      */\n-    public void setserviceCode(int serviceCode)\n+    public void setServiceCode(int serviceCode)\n     {\n         this.serviceCode = serviceCode;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODY4OA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598688", "body": "This should probably be `setServiceName` rather than `setserviceName` (?)", "bodyText": "This should probably be setServiceName rather than setserviceName (?)", "bodyHTML": "<p dir=\"auto\">This should probably be <code>setServiceName</code> rather than <code>setserviceName</code> (?)</p>", "author": "cmgrote", "createdAt": "2020-02-14T19:12:31Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -144,7 +144,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceName  String default name\n      */\n-    public void setserviceName(String serviceName)\n+    public void setServiceName(String serviceName)\n     {\n         this.serviceName = serviceName;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODgzMQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598831", "body": "`setServiceFullName`", "bodyText": "setServiceFullName", "bodyHTML": "<p dir=\"auto\"><code>setServiceFullName</code></p>", "author": "cmgrote", "createdAt": "2020-02-14T19:12:48Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -167,7 +167,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceFullName  String default name\n      */\n-    public void setserviceFullName(String serviceFullName)\n+    public void setServiceFullName(String serviceFullName)\n     {\n         this.serviceFullName = serviceFullName;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5ODkzMg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379598932", "body": "`setServiceDescription`", "bodyText": "setServiceDescription", "bodyHTML": "<p dir=\"auto\"><code>setServiceDescription</code></p>", "author": "cmgrote", "createdAt": "2020-02-14T19:13:04Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -213,7 +213,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceDescription  String default description\n      */\n-    public void setserviceDescription(String serviceDescription)\n+    public void setServiceDescription(String serviceDescription)\n     {\n         this.serviceDescription = serviceDescription;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTAzMg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599032", "body": "`setServiceWiki`", "bodyText": "setServiceWiki", "bodyHTML": "<p dir=\"auto\"><code>setServiceWiki</code></p>", "author": "cmgrote", "createdAt": "2020-02-14T19:13:18Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -235,7 +235,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceWiki  String URL name for the wiki page\n      */\n-    public void setserviceWiki(String serviceWiki)\n+    public void setServiceWiki(String serviceWiki)\n     {\n         this.serviceWiki = serviceWiki;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTE0OQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599149", "body": "`setServiceOperationalStatus`", "bodyText": "setServiceOperationalStatus", "bodyHTML": "<p dir=\"auto\"><code>setServiceOperationalStatus</code></p>", "author": "cmgrote", "createdAt": "2020-02-14T19:13:32Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)\n+    {\n+        this.serviceWiki = serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Return the initial operational status for this  service.\n+     *\n+     * @return serviceOperationalStatus enum\n+     */\n+    public ServiceOperationalStatus getServiceOperationalStatus()\n+    {\n+        return serviceOperationalStatus;\n+    }\n+\n+\n+    /**\n+     * Set up the initial operational status for this  service.\n+     *\n+     * @param serviceOperationalStatus serviceOperationalStatus enum\n+     */\n+    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -257,7 +257,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceOperationalStatus serviceOperationalStatus enum\n      */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n+    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n     {\n         this.serviceOperationalStatus = serviceOperationalStatus;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU5OTIyNg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379599226", "body": "`setServiceAdminClassName`", "bodyText": "setServiceAdminClassName", "bodyHTML": "<p dir=\"auto\"><code>setServiceAdminClassName</code></p>", "author": "cmgrote", "createdAt": "2020-02-14T19:13:44Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.adminservices.configuration.registration;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * ServiceRegistration is used by a service to register its admin services interface.\n+ */\n+public class ServiceRegistration implements Serializable\n+{\n+    private static final long     serialVersionUID    = 1L;\n+    private static final String   defaultTopicRoot    = \"omas.\";\n+    private static final String   defaultInTopicLeaf  = \".inTopic\";\n+    private static final String   defaultOutTopicLeaf = \".outTopic\";\n+\n+\n+    private int                            serviceCode;\n+    private String                         serviceName;\n+    private String                         serviceFullName;\n+    private String                         serviceURLMarker;\n+    private String                         serviceDescription;\n+    private String                         serviceWiki;\n+    private ServiceOperationalStatus       serviceOperationalStatus;\n+    private String                         serviceAdminClassName;\n+\n+    /**\n+     * Complete Constructor\n+     *\n+     * @param serviceCode ordinal for this access service\n+     * @param serviceName symbolic name for this access service\n+     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n+     * @param serviceDescription short description for this access service\n+     * @param serviceWiki wiki page for the access service for this access service\n+     * @param serviceOperationalStatus default initial operational status for the access service\n+     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(int                            serviceCode,\n+                                     String                         serviceName,\n+                                     String                         serviceFullName,\n+                                     String                         serviceURLMarker,\n+                                     String                         serviceDescription,\n+                                     String                         serviceWiki,\n+                                     ServiceOperationalStatus       serviceOperationalStatus,\n+                                     String                         serviceAdminClassName)\n+    {\n+        this.serviceCode = serviceCode;\n+        this.serviceName = serviceName;\n+        this.serviceFullName = serviceFullName;\n+        this.serviceURLMarker = serviceURLMarker;\n+        this.serviceDescription = serviceDescription;\n+        this.serviceWiki = serviceWiki;\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+        this.serviceAdminClassName = serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Access Service Enum Constructor\n+     *\n+     * @param accessServiceDescription enum for this access service\n+     * @param accessServiceOperationalStatus default initial operational status for the access service\n+     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n+     */\n+    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n+                               ServiceOperationalStatus       accessServiceOperationalStatus,\n+                               String                         accessServiceAdminClassName)\n+    {\n+        this(accessServiceDescription.getAccessServiceCode(),\n+             accessServiceDescription.getAccessServiceName(),\n+             accessServiceDescription.getAccessServiceFullName(),\n+             accessServiceDescription.getAccessServiceURLMarker(),\n+             accessServiceDescription.getAccessServiceDescription(),\n+             accessServiceDescription.getAccessServiceWiki(),\n+             accessServiceOperationalStatus,\n+             accessServiceAdminClassName);\n+    }\n+\n+    /**\n+     * View Service Enum Constructor\n+     *\n+     * @param viewServiceDescription enum for this view service\n+     * @param viewServiceOperationalStatus default initial operational status for the view service\n+     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n+     */\n+    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n+                               ServiceOperationalStatus viewServiceOperationalStatus,\n+                               String                         viewServiceAdminClassName)\n+    {\n+        this(viewServiceDescription.getViewServiceCode(),\n+                viewServiceDescription.getViewServiceName(),\n+                viewServiceDescription.getViewServiceFullName(),\n+                viewServiceDescription.getViewServiceURLMarker(),\n+                viewServiceDescription.getViewServiceDescription(),\n+                viewServiceDescription.getViewServiceWiki(),\n+                viewServiceOperationalStatus,\n+                viewServiceAdminClassName);\n+    }\n+\n+\n+    /**\n+     * Default constructor\n+     */\n+    public ServiceRegistration()\n+    {\n+    }\n+\n+    /**\n+     * Return the code for this  service\n+     *\n+     * @return int type code\n+     */\n+    public int getServiceCode()\n+    {\n+        return serviceCode;\n+    }\n+\n+\n+    /**\n+     * Set up the code for this  service\n+     *\n+     * @param serviceCode  int type code\n+     */\n+    public void setserviceCode(int serviceCode)\n+    {\n+        this.serviceCode = serviceCode;\n+    }\n+\n+\n+    /**\n+     * Return the default name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceName()\n+    {\n+        return serviceName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the default name for this  service.\n+     *\n+     * @param serviceName  String default name\n+     */\n+    public void setserviceName(String serviceName)\n+    {\n+        this.serviceName = serviceName;\n+    }\n+\n+\n+    /**\n+     * Return the full name for this  service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceFullName()\n+    {\n+        return serviceFullName;\n+    }\n+\n+\n+\n+    /**\n+     * Set up the full name for this  service.\n+     *\n+     * @param serviceFullName  String default name\n+     */\n+    public void setserviceFullName(String serviceFullName)\n+    {\n+        this.serviceFullName = serviceFullName;\n+    }\n+\n+\n+    /**\n+     * Return the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @return String default name\n+     */\n+    public String getServiceURLMarker()\n+    {\n+        return serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Set up the string that appears in the REST API URL that identifies the owning service.\n+     * Null means no REST APIs supported by this service.\n+     *\n+     * @param serviceURLMarker url fragment\n+     */\n+    public void setServiceURLMarker(String serviceURLMarker)\n+    {\n+        this.serviceURLMarker = serviceURLMarker;\n+    }\n+\n+\n+    /**\n+     * Return the default description for the type for this  service.\n+     *\n+     * @return String default description\n+     */\n+    public String getServiceDescription()\n+    {\n+        return serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Set up the default description for the type for this  service.\n+     *\n+     * @param serviceDescription  String default description\n+     */\n+    public void setserviceDescription(String serviceDescription)\n+    {\n+        this.serviceDescription = serviceDescription;\n+    }\n+\n+\n+    /**\n+     * Return the URL for the wiki page describing this  service.\n+     *\n+     * @return String URL name for the wiki page\n+     */\n+    public String getServiceWiki()\n+    {\n+        return serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Set up the URL for the wiki page describing this  service.\n+     *\n+     * @param serviceWiki  String URL name for the wiki page\n+     */\n+    public void setserviceWiki(String serviceWiki)\n+    {\n+        this.serviceWiki = serviceWiki;\n+    }\n+\n+\n+    /**\n+     * Return the initial operational status for this  service.\n+     *\n+     * @return serviceOperationalStatus enum\n+     */\n+    public ServiceOperationalStatus getServiceOperationalStatus()\n+    {\n+        return serviceOperationalStatus;\n+    }\n+\n+\n+    /**\n+     * Set up the initial operational status for this  service.\n+     *\n+     * @param serviceOperationalStatus serviceOperationalStatus enum\n+     */\n+    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n+    {\n+        this.serviceOperationalStatus = serviceOperationalStatus;\n+    }\n+\n+    /**\n+     * Return the class name of the admin class that should be called during initialization and\n+     * termination.\n+     *\n+     * @return class name\n+     */\n+    public String getServiceAdminClassName()\n+    {\n+        return serviceAdminClassName;\n+    }\n+\n+\n+    /**\n+     * Set up the class name of the admin class that should be called during initialization and\n+     * termination.\n+     *\n+     * @param serviceAdminClassName  class name\n+     */\n+    public void setserviceAdminClassName(String serviceAdminClassName)", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "17c4faf68842a9a01a3d41252864be100ce78ab3", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\nindex b6eeea9fb4..223bf5e0f8 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n", "chunk": "@@ -280,7 +280,7 @@ public class ServiceRegistration implements Serializable\n      *\n      * @param serviceAdminClassName  class name\n      */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n+    public void setServiceAdminClassName(String serviceAdminClassName)\n     {\n         this.serviceAdminClassName = serviceAdminClassName;\n     }\n", "next_change": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex 223bf5e0f8..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex b6eeea9fb4..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                            serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus viewServiceOperationalStatus,\n-                               String                         viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setserviceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setserviceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setserviceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setserviceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setserviceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setserviceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setserviceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMDgzOA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379600838", "body": "Is the plan to eventual merge these different `OMAG...ServiceRegistration` classes into one?  They're looking pretty identical now that the `ServiceRegistration` class they register is identical across all of them (?)", "bodyText": "Is the plan to eventual merge these different OMAG...ServiceRegistration classes into one?  They're looking pretty identical now that the ServiceRegistration class they register is identical across all of them (?)", "bodyHTML": "<p dir=\"auto\">Is the plan to eventual merge these different <code>OMAG...ServiceRegistration</code> classes into one?  They're looking pretty identical now that the <code>ServiceRegistration</code> class they register is identical across all of them (?)</p>", "author": "cmgrote", "createdAt": "2020-02-14T19:17:29Z", "path": "open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java", "diffHunk": "@@ -2,7 +2,7 @@\n /* Copyright Contributors to the ODPi Egeria project. */\n package org.odpi.openmetadata.adminservices.configuration;\n \n-import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0MDAyNQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379640025", "bodyText": "Raised issue #2593 to track this.", "author": "davidradl", "createdAt": "2020-02-14T20:54:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMDgzOA=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\nindex 6855369422..33a6696ff0 100644\n--- a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\n", "chunk": "@@ -2,7 +2,7 @@\n /* Copyright Contributors to the ODPi Egeria project. */\n package org.odpi.openmetadata.adminservices.configuration;\n \n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n \n import java.util.ArrayList;\n import java.util.HashMap;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\nindex 6855369422..33a6696ff0 100644\n--- a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\n+++ b/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\n", "chunk": "@@ -2,7 +2,7 @@\n /* Copyright Contributors to the ODPi Egeria project. */\n package org.odpi.openmetadata.adminservices.configuration;\n \n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n \n import java.util.ArrayList;\n import java.util.HashMap;\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\ndeleted file mode 100644\nindex 33a6696ff0..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-registration/src/main/java/org/odpi/openmetadata/adminservices/configuration/OMAGAccessServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,93 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration;\n-\n-import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n-\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n-\n-/**\n- * OMAGAccessServiceRegistration provides static methods to enable an access service to dynamically\n- * register itself with the OMAG Server.\n- *\n- * Static methods are needed to be able to get this information to the Admin Services REST API singletons\n- * created by Spring.\n- */\n-public class OMAGAccessServiceRegistration\n-{\n-    /*\n-     * A map is used so multiple registrations from the same access service are ignored.\n-     * The last registration is used.\n-     */\n-    static private Map<String, AccessServiceRegistration> accessServiceRegistrationMap = new HashMap<>();\n-\n-\n-    /**\n-     * Register OMAS\n-     *\n-     * @param registration information about the specific OMAS\n-     */\n-    public static synchronized void registerAccessService(AccessServiceRegistration registration)\n-    {\n-        if (registration != null)\n-        {\n-            String  serviceName = registration.getAccessServiceName();\n-\n-            if (serviceName != null)\n-            {\n-                accessServiceRegistrationMap.put(serviceName, registration);\n-            }\n-        }\n-    }\n-\n-\n-    /**\n-     * Retrieve the list of registered OMASs\n-     *\n-     * @return list of registration info\n-     */\n-    public static synchronized List<AccessServiceRegistration> getAccessServiceRegistrationList()\n-    {\n-        List<AccessServiceRegistration>  registrationList = new ArrayList<>();\n-\n-        for (AccessServiceRegistration accessServiceRegistration : accessServiceRegistrationMap.values())\n-        {\n-            if (accessServiceRegistration != null)\n-            {\n-                registrationList.add(accessServiceRegistration);\n-            }\n-        }\n-\n-        return registrationList;\n-    }\n-\n-\n-    /**\n-     * Retrieve the requested OMAS registration information\n-     *\n-     * @param urlMarker URL insert that identifies the service\n-     * @return access service registration info\n-     */\n-    public static synchronized AccessServiceRegistration getAccessServiceRegistration(String   urlMarker)\n-    {\n-        if (urlMarker != null)\n-        {\n-            for (AccessServiceRegistration accessServiceRegistration : accessServiceRegistrationMap.values())\n-            {\n-                if (accessServiceRegistration != null)\n-                {\n-                    if (urlMarker.equals(accessServiceRegistration.getAccessServiceURLMarker()))\n-                    {\n-                        return accessServiceRegistration;\n-                    }\n-                }\n-            }\n-        }\n-\n-        return null;\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "4abdba88ca002cfa57699a6f4a1c17c4f4f79616", "committedDate": "2022-08-24 10:02:12 +0100", "message": "Add Open Metadata Store Service"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU0MQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379602541", "body": "There are _many_ formatting changes to the code in this one -- and while I personally prefer the new style, I thought per Dev Guidelines we were meant to stick to the original style of the code we change (and I recall on one of our calls @mandy-chessell suggesting she was spending time fixing formatting again after-the-fact)?", "bodyText": "There are many formatting changes to the code in this one -- and while I personally prefer the new style, I thought per Dev Guidelines we were meant to stick to the original style of the code we change (and I recall on one of our calls @mandy-chessell suggesting she was spending time fixing formatting again after-the-fact)?", "bodyHTML": "<p dir=\"auto\">There are <em>many</em> formatting changes to the code in this one -- and while I personally prefer the new style, I thought per Dev Guidelines we were meant to stick to the original style of the code we change (and I recall on one of our calls <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mandy-chessell/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mandy-chessell\">@mandy-chessell</a> suggesting she was spending time fixing formatting again after-the-fact)?</p>", "author": "cmgrote", "createdAt": "2020-02-14T19:21:26Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java", "diffHunk": "@@ -70,56 +69,43 @@\n      * start and returns the error.  Otherwise it continues through the list, returning the successful\n      * start up messages.\n      *\n-     * @param userId  user that is issuing the request\n-     * @param serverNames  list of server names\n+     * @param userId      user that is issuing the request\n+     * @param serverNames list of server names\n      * @return success message or\n      * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n      * OMAGInvalidParameterException the server name is invalid or\n      * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n      */\n-    public SuccessMessageResponse activateServerListWithStoredConfig(String       userId,\n-                                                                     List<String> serverNames)\n-    {\n-        String                 startUpMessage = null;\n-        SuccessMessageResponse response       = new SuccessMessageResponse();\n+    public SuccessMessageResponse activateServerListWithStoredConfig(String userId,\n+                                                                     List<String> serverNames) {\n+        String startUpMessage = null;\n+        SuccessMessageResponse response = new SuccessMessageResponse();\n \n         response.setRelatedHTTPCode(200);\n \n-        if (serverNames != null)\n-        {\n-            for (String serverName : serverNames)\n-            {\n-                if (serverName != null)\n-                {\n+        if (serverNames != null) {", "originalCommit": "40aff8bb62f44971134f18574bf936052a59f24c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzNjY2MQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379636661", "bodyText": "@mandy-chessell  @cmgrote I will fix the formatting", "author": "davidradl", "createdAt": "2020-02-14T20:45:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU0MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY1OTExMA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r379659110", "bodyText": "fixed formatting", "author": "davidradl", "createdAt": "2020-02-14T21:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\nindex acb5a67af8..8e6353bc59 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n", "chunk": "@@ -69,43 +70,56 @@ public class OMAGServerOperationalServices {\n      * start and returns the error.  Otherwise it continues through the list, returning the successful\n      * start up messages.\n      *\n-     * @param userId      user that is issuing the request\n-     * @param serverNames list of server names\n+     * @param userId  user that is issuing the request\n+     * @param serverNames  list of server names\n      * @return success message or\n      * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n      * OMAGInvalidParameterException the server name is invalid or\n      * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n      */\n-    public SuccessMessageResponse activateServerListWithStoredConfig(String userId,\n-                                                                     List<String> serverNames) {\n-        String startUpMessage = null;\n-        SuccessMessageResponse response = new SuccessMessageResponse();\n+    public SuccessMessageResponse activateServerListWithStoredConfig(String       userId,\n+                                                                     List<String> serverNames)\n+    {\n+        String                 startUpMessage = null;\n+        SuccessMessageResponse response       = new SuccessMessageResponse();\n \n         response.setRelatedHTTPCode(200);\n \n-        if (serverNames != null) {\n-            for (String serverName : serverNames) {\n-                if (serverName != null) {\n+        if (serverNames != null)\n+        {\n+            for (String serverName : serverNames)\n+            {\n+                if (serverName != null)\n+                {\n                     response = activateWithStoredConfig(userId, serverName.trim());\n \n-                    if (response.getRelatedHTTPCode() == 200) {\n+                    if (response.getRelatedHTTPCode() == 200)\n+                    {\n                         String serverStartUpMessage = \"OMAG Server '\" + serverName + \"' successful start , with message: \" +\n                                 response.getSuccessMessage() + System.lineSeparator();\n-                        if (startUpMessage == null) {\n+                        if (startUpMessage == null)\n+                        {\n                             startUpMessage = serverStartUpMessage;\n-                        } else {\n+                        }\n+                        else\n+                        {\n                             startUpMessage += serverStartUpMessage;\n                         }\n-                    } else {\n+                    }\n+                    else\n+                    {\n                         break;\n                     }\n                 }\n             }\n-        } else {\n+        }\n+        else\n+        {\n             startUpMessage = \"No OMAG servers listed in startup configuration\";\n         }\n \n-        if (response.getRelatedHTTPCode() == 200) {\n+        if (response.getRelatedHTTPCode() == 200)\n+        {\n             response.setSuccessMessage(startUpMessage);\n         }\n \n", "next_change": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\nindex 8e6353bc59..b2ce44091a 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n", "chunk": "@@ -120,7 +120,7 @@ public class OMAGServerOperationalServices\n \n         if (response.getRelatedHTTPCode() == 200)\n         {\n-            response.setSuccessMessage(startUpMessage);\n+            response.setSuccessMessage(new Date().toString() + \" \" + startUpMessage);\n         }\n \n         return response;\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\nindex acb5a67af8..b2ce44091a 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n", "chunk": "@@ -69,44 +70,57 @@ public class OMAGServerOperationalServices {\n      * start and returns the error.  Otherwise it continues through the list, returning the successful\n      * start up messages.\n      *\n-     * @param userId      user that is issuing the request\n-     * @param serverNames list of server names\n+     * @param userId  user that is issuing the request\n+     * @param serverNames  list of server names\n      * @return success message or\n      * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n      * OMAGInvalidParameterException the server name is invalid or\n      * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n      */\n-    public SuccessMessageResponse activateServerListWithStoredConfig(String userId,\n-                                                                     List<String> serverNames) {\n-        String startUpMessage = null;\n-        SuccessMessageResponse response = new SuccessMessageResponse();\n+    public SuccessMessageResponse activateServerListWithStoredConfig(String       userId,\n+                                                                     List<String> serverNames)\n+    {\n+        String                 startUpMessage = null;\n+        SuccessMessageResponse response       = new SuccessMessageResponse();\n \n         response.setRelatedHTTPCode(200);\n \n-        if (serverNames != null) {\n-            for (String serverName : serverNames) {\n-                if (serverName != null) {\n+        if (serverNames != null)\n+        {\n+            for (String serverName : serverNames)\n+            {\n+                if (serverName != null)\n+                {\n                     response = activateWithStoredConfig(userId, serverName.trim());\n \n-                    if (response.getRelatedHTTPCode() == 200) {\n+                    if (response.getRelatedHTTPCode() == 200)\n+                    {\n                         String serverStartUpMessage = \"OMAG Server '\" + serverName + \"' successful start , with message: \" +\n                                 response.getSuccessMessage() + System.lineSeparator();\n-                        if (startUpMessage == null) {\n+                        if (startUpMessage == null)\n+                        {\n                             startUpMessage = serverStartUpMessage;\n-                        } else {\n+                        }\n+                        else\n+                        {\n                             startUpMessage += serverStartUpMessage;\n                         }\n-                    } else {\n+                    }\n+                    else\n+                    {\n                         break;\n                     }\n                 }\n             }\n-        } else {\n+        }\n+        else\n+        {\n             startUpMessage = \"No OMAG servers listed in startup configuration\";\n         }\n \n-        if (response.getRelatedHTTPCode() == 200) {\n-            response.setSuccessMessage(startUpMessage);\n+        if (response.getRelatedHTTPCode() == 200)\n+        {\n+            response.setSuccessMessage(new Date().toString() + \" \" + startUpMessage);\n         }\n \n         return response;\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\ndeleted file mode 100644\nindex b2ce44091a..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerOperationalServices.java\n+++ /dev/null\n", "chunk": "@@ -1,1761 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices;\n-\n-\n-import org.odpi.openmetadata.adapters.repositoryservices.ConnectorConfigurationFactory;\n-import org.odpi.openmetadata.adminservices.auditlog.OMAGAdminAuditCode;\n-import org.odpi.openmetadata.adminservices.classifier.ServerTypeClassifier;\n-import org.odpi.openmetadata.adminservices.configuration.properties.*;\n-import org.odpi.openmetadata.adminservices.configuration.registration.*;\n-import org.odpi.openmetadata.adminservices.ffdc.OMAGAdminErrorCode;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGConfigurationErrorException;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGInvalidParameterException;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGNotAuthorizedException;\n-import org.odpi.openmetadata.adminservices.rest.OMAGServerConfigResponse;\n-import org.odpi.openmetadata.adminservices.rest.SuccessMessageResponse;\n-import org.odpi.openmetadata.commonservices.ffdc.RESTCallLogger;\n-import org.odpi.openmetadata.commonservices.ffdc.RESTCallToken;\n-import org.odpi.openmetadata.commonservices.ffdc.exceptions.PropertyServerException;\n-import org.odpi.openmetadata.commonservices.ffdc.rest.VoidResponse;\n-import org.odpi.openmetadata.commonservices.multitenant.OMAGServerPlatformInstanceMap;\n-import org.odpi.openmetadata.commonservices.ocf.metadatamanagement.admin.OCFMetadataOperationalServices;\n-import org.odpi.openmetadata.conformance.server.ConformanceSuiteOperationalServices;\n-import org.odpi.openmetadata.dataplatformservices.admin.DataPlatformOperationalServices;\n-import org.odpi.openmetadata.governanceservers.discoveryengineservices.server.DiscoveryServerOperationalServices;\n-import org.odpi.openmetadata.frameworks.connectors.ffdc.InvalidParameterException;\n-import org.odpi.openmetadata.frameworks.connectors.ffdc.UserNotAuthorizedException;\n-import org.odpi.openmetadata.frameworks.connectors.properties.beans.Connection;\n-import org.odpi.openmetadata.governanceservers.dataengineproxy.admin.DataEngineProxyOperationalServices;\n-import org.odpi.openmetadata.governanceservers.openlineage.admin.OpenLineageServerOperationalServices;\n-import org.odpi.openmetadata.governanceservers.stewardshipservices.admin.StewardshipOperationalServices;\n-import org.odpi.openmetadata.governanceservers.virtualizationservices.admin.VirtualizationOperationalServices;\n-import org.odpi.openmetadata.metadatasecurity.server.OpenMetadataServerSecurityVerifier;\n-import org.odpi.openmetadata.repositoryservices.admin.OMRSOperationalServices;\n-import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLog;\n-import org.odpi.openmetadata.repositoryservices.connectors.omrstopic.OMRSTopicConnector;\n-import org.odpi.openmetadata.repositoryservices.connectors.stores.metadatacollectionstore.repositoryconnector.OMRSRepositoryConnector;\n-import org.odpi.openmetadata.securityofficerservices.registration.SecurityOfficerOperationalServices;\n-import org.odpi.openmetadata.securitysyncservices.registration.SecuritySyncOperationalServices;\n-import org.slf4j.LoggerFactory;\n-\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.List;\n-\n-/**\n- * OMAGServerOperationalServices will provide support to start, manage and stop services in the OMAG Server.\n- */\n-public class OMAGServerOperationalServices\n-{\n-    private OMAGServerOperationalInstanceHandler instanceHandler = new OMAGServerOperationalInstanceHandler(CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceName());\n-\n-    private OMAGServerPlatformInstanceMap  platformInstanceMap = new OMAGServerPlatformInstanceMap();\n-\n-    private OMAGServerAdminStoreServices   configStore  = new OMAGServerAdminStoreServices();\n-    private OMAGServerErrorHandler         errorHandler = new OMAGServerErrorHandler();\n-    private OMAGServerExceptionHandler     exceptionHandler = new OMAGServerExceptionHandler();\n-\n-    private static RESTCallLogger restCallLogger = new RESTCallLogger(LoggerFactory.getLogger(OMAGServerOperationalServices.class),\n-                                                                      CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceName());\n-\n-    /*\n-     * =============================================================\n-     * Initialization and shutdown\n-     */\n-\n-    /**\n-     * Activate the list of open metadata and governance servers using the stored configuration information.\n-     * The code works through the list, starting each server in turn.  It stops if one of the servers fails to\n-     * start and returns the error.  Otherwise it continues through the list, returning the successful\n-     * start up messages.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverNames  list of server names\n-     * @return success message or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException the server name is invalid or\n-     * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n-     */\n-    public SuccessMessageResponse activateServerListWithStoredConfig(String       userId,\n-                                                                     List<String> serverNames)\n-    {\n-        String                 startUpMessage = null;\n-        SuccessMessageResponse response       = new SuccessMessageResponse();\n-\n-        response.setRelatedHTTPCode(200);\n-\n-        if (serverNames != null)\n-        {\n-            for (String serverName : serverNames)\n-            {\n-                if (serverName != null)\n-                {\n-                    response = activateWithStoredConfig(userId, serverName.trim());\n-\n-                    if (response.getRelatedHTTPCode() == 200)\n-                    {\n-                        String serverStartUpMessage = \"OMAG Server '\" + serverName + \"' successful start , with message: \" +\n-                                response.getSuccessMessage() + System.lineSeparator();\n-                        if (startUpMessage == null)\n-                        {\n-                            startUpMessage = serverStartUpMessage;\n-                        }\n-                        else\n-                        {\n-                            startUpMessage += serverStartUpMessage;\n-                        }\n-                    }\n-                    else\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-        }\n-        else\n-        {\n-            startUpMessage = \"No OMAG servers listed in startup configuration\";\n-        }\n-\n-        if (response.getRelatedHTTPCode() == 200)\n-        {\n-            response.setSuccessMessage(new Date().toString() + \" \" + startUpMessage);\n-        }\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Activate the open metadata and governance services using the stored configuration information.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverName  local server name\n-     * @return success message response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException the server name is invalid or\n-     * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n-     */\n-    public SuccessMessageResponse activateWithStoredConfig(String userId,\n-                                                           String serverName)\n-    {\n-        final String methodName = \"activateWithStoredConfig\";\n-\n-        SuccessMessageResponse response = new SuccessMessageResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            response = activateWithSuppliedConfig(userId, serverName, configStore.getServerConfig(userId, serverName, methodName));\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Activate the open metadata and governance services using the supplied configuration\n-     * document.  Inside the configuration document are sections that each relate\n-     * to an open metadata and governance subsystem.  This method reads the configuration\n-     * document, starting up each requested subsystem.  If any subsystem throws an exception,\n-     * the whole start up process is halted and the exception is returned to the caller.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param configuration  properties used to initialize the services\n-     * @param serverName  local server name\n-     * @return success message response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException the server name is invalid or\n-     * OMAGConfigurationErrorException there is a problem using the supplied configuration.\n-     */\n-    public SuccessMessageResponse activateWithSuppliedConfig(String           userId,\n-                                                             String           serverName,\n-                                                             OMAGServerConfig configuration)\n-    {\n-        final String methodName        = \"activateWithSuppliedConfig\";\n-        final String actionDescription = \"Initialize OMAG Server subsystems\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        List<String>           activatedServiceList = new ArrayList<>();\n-        SuccessMessageResponse response             = new SuccessMessageResponse();\n-\n-        try\n-        {\n-            /*\n-             * Check that a serverName and userId is supplied\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            /*\n-             * Validate the content of the configuration document.  This will throw an exception if the\n-             * configuration document is null or the combination of requested services does not make a useful server.\n-             */\n-            ServerTypeClassifier     serverTypeClassifier = new ServerTypeClassifier(serverName, configuration);\n-            ServerTypeClassification serverTypeClassification = serverTypeClassifier.getServerType();\n-\n-            /*\n-             * If the server type is not set then use the value from the classification.\n-             */\n-            if (configuration.getLocalServerType() == null)\n-            {\n-                configuration.setLocalServerType(serverTypeClassification.getServerTypeName());\n-            }\n-\n-            /*\n-             * Save the configuration document to the config store.  This ensures we have the latest version of the\n-             * config document on file.\n-             */\n-            configStore.saveServerConfig(serverName, methodName, configuration);\n-\n-            /*\n-             * Validate that the server is not running already.  If it is running it should be shutdown.\n-             */\n-            if (instanceHandler.isServerActive(userId, serverName))\n-            {\n-                this.deactivateTemporarily(userId, serverName);\n-            }\n-\n-            /*\n-             * The instance saves the operational services objects for this server instance so they can be retrieved\n-             * in response to subsequent REST calls for the server.  These instances provide the multi-tenant\n-             * support in Egeria.\n-             */\n-            OMAGOperationalServicesInstance instance = new OMAGOperationalServicesInstance(serverName,\n-                                                                                           CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceName(),\n-                                                                                           configuration.getMaxPageSize());\n-\n-            /*\n-             * Save the configuration that is going to be used to start the server for this instance.  This configuration can be queried by\n-             * the operator to verify the configuration used to start the server. (The values in the config store may have been\n-             * updated since the server was started.)\n-             */\n-            instance.setOperationalConfiguration(configuration);\n-\n-            /* ================================\n-             * Ready to start subsystems.  A failure in startup for any subsystem is fatal.\n-             */\n-\n-            /*\n-             * Initialize the open metadata repository services first since other services depend on it.\n-             * (Even the governance servers need the audit log.)\n-             */\n-            OMRSOperationalServices         operationalRepositoryServices;\n-\n-            operationalRepositoryServices = new OMRSOperationalServices(configuration.getLocalServerName(),\n-                                                                        configuration.getLocalServerType(),\n-                                                                        configuration.getOrganizationName(),\n-                                                                        configuration.getLocalServerUserId(),\n-                                                                        configuration.getLocalServerPassword(),\n-                                                                        configuration.getLocalServerURL(),\n-                                                                        configuration.getMaxPageSize());\n-            activatedServiceList.add(CommonServicesDescription.REPOSITORY_SERVICES.getServiceName());\n-            operationalRepositoryServices.initializeAuditLog(configuration.getRepositoryServicesConfig(),\n-                                                             serverTypeClassification.getServerTypeName());\n-\n-\n-            /*\n-             * Create an audit log for logging initialization progress and errors.\n-             * Each subsystem should be logging the start up of their components and handling\n-             * their errors.  However the logging and error handling done by this method is to bracket the\n-             * start up of the different types of subsystems and provide minimal diagnostics for\n-             * immature subsystems that have not yet developed their logging and error handling.\n-             */\n-            OMRSAuditLog auditLog = operationalRepositoryServices.getAuditLog(\n-                    CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceCode(),\n-                    CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceName(),\n-                    CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceDescription(),\n-                    CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceWiki());\n-            instance.setAuditLog(auditLog);\n-\n-            /*\n-             * There are many paging services in Egeria.  This value sets a maximum page size that a requester can use.\n-             * It is passed to each subsystem at start up so it can enforce the limit on all paging REST calls.\n-             * Having a limit helps to prevent a denial of service attack that uses very large requests to overwhelm the server.\n-             * If this value is 0 it means there is no upper limit.  If this value is negative then it is invalid.\n-             */\n-            this.validateMaxPageSize(configuration.getMaxPageSize(), serverName, auditLog, methodName);\n-\n-            /*\n-             * Save the instance of the repository services and then initialize it.  OMRS has 2 modes of initialization.\n-             * Firstly for a basic server such as a governance server, just the audit log is initialized.\n-             * For a metadata server, repository proxy and conformance test server, initialization will optionally set up the\n-             * connector to the local repository, initialize the enterprise repository services (used by\n-             * the access services and conformance test server) and connect to the server's cohorts.   It is controlled by the settings in the\n-             * repository services configuration document.  The repository services instance is saved since it needs to be called for shutdown.\n-             */\n-            instance.setOperationalRepositoryServices(operationalRepositoryServices);\n-\n-            /*\n-             * A this point the type of server influences the start up sequence.\n-             */\n-\n-            if (ServerTypeClassification.VIEW_SERVER.equals(serverTypeClassification))\n-            {\n-                initializeViewServices(instance,\n-                                       configuration.getViewServicesConfig(),\n-                                       operationalRepositoryServices,\n-                                       configuration.getLocalServerUserId(),\n-                                       serverName,\n-                                       activatedServiceList,\n-                                       configuration.getMaxPageSize(),\n-                                       auditLog);\n-            } else if ((ServerTypeClassification.METADATA_SERVER.equals(serverTypeClassification)) ||\n-                (ServerTypeClassification.METADATA_ACCESS_POINT.equals(serverTypeClassification)) ||\n-                (ServerTypeClassification.REPOSITORY_PROXY.equals(serverTypeClassification)) ||\n-                (ServerTypeClassification.CONFORMANCE_SERVER.equals(serverTypeClassification)))\n-            {\n-                /*\n-                 * This server is a source of metadata and is capable of joining an open metadata repository cohort.\n-                 */\n-                operationalRepositoryServices.initializeMetadataServer(configuration.getRepositoryServicesConfig());\n-\n-                /*\n-                 * Set up the server instance - ensure it is active and the security has been set up correctly.\n-                 */\n-                OpenMetadataServerSecurityVerifier securityVerifier =\n-                        platformInstanceMap.startUpServerInstance(configuration.getLocalServerUserId(),\n-                                                                  serverName,\n-                                                                  operationalRepositoryServices.getAuditLog(CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceCode(),\n-                                                                                                            CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceName(),\n-                                                                                                            CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceDescription(),\n-                                                                                                            CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceWiki()),\n-                                                                  configuration.getServerSecurityConnection());\n-\n-                /*\n-                 * Pass the resulting security verifier to the repository services.  It will be set up in the local\n-                 * repository (if there is a local repository in this server).\n-                 */\n-                operationalRepositoryServices.setSecurityVerifier(securityVerifier);\n-\n-                /*\n-                 * Next initialize the Open Connector Framework (OCF) metadata services.  These services are only initialized\n-                 * if the enterprise repository services are enabled.  They support requests for metadata from connectors running\n-                 * outside the metadata server.\n-                 */\n-                OMRSRepositoryConnector enterpriseRepositoryConnector\n-                        = operationalRepositoryServices.getEnterpriseOMRSRepositoryConnector(CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceName());\n-\n-                if (enterpriseRepositoryConnector != null)\n-                {\n-                    /*\n-                     * The enterprise repository services have been requested so OCF metadata management can be started.\n-                     */\n-                    OCFMetadataOperationalServices operationalOCFMetadataServices;\n-\n-                    operationalOCFMetadataServices = new OCFMetadataOperationalServices(configuration.getLocalServerName(),\n-                                                                                        enterpriseRepositoryConnector,\n-                                                                                        operationalRepositoryServices.getAuditLog(\n-                                                                                                CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceCode(),\n-                                                                                                CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceName(),\n-                                                                                                CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceDescription(),\n-                                                                                                CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceWiki()),\n-                                                                                        configuration.getLocalServerUserId(),\n-                                                                                        configuration.getMaxPageSize());\n-\n-                    instance.setOperationalOCFMetadataServices(operationalOCFMetadataServices);\n-                    activatedServiceList.add(CommonServicesDescription.OCF_METADATA_MANAGEMENT.getServiceName());\n-                }\n-\n-                /*\n-                 * Now initialize the configured open metadata access services.  Each access service has its own subsystem.  It is\n-                 * initialized via an Admin object that controls its start up and shutdown.  The configuration service just needs to create the\n-                 * appropriate admin object (specified in the configuration) and initialize it with its own configuration\n-                 * document.  The admin object then does the rest.  The admin objects are stored in the instance since\n-                 * they also need to be called for shutdown.\n-                 *\n-                 * Each access service is given access to the events from open metadata repository cohorts that this server connects to.\n-                 * The enterprise topic connector supplies these events.  The access service registers a listener with it to receive them.\n-                 */\n-                OMRSTopicConnector        enterpriseTopicConnector = operationalRepositoryServices.getEnterpriseOMRSTopicConnector();\n-\n-                initializeAccessServices(instance,\n-                                         configuration.getAccessServicesConfig(),\n-                                         operationalRepositoryServices,\n-                                         enterpriseTopicConnector,\n-                                         configuration.getLocalServerUserId(),\n-                                         serverName,\n-                                         activatedServiceList,\n-                                         auditLog);\n-\n-                /*\n-                 * Initialize the Open Metadata Conformance Suite Services.  This runs the Open Metadata TestLabs that are\n-                 * part of the ODPi Egeria Conformance Program.\n-                 */\n-                if (ServerTypeClassification.CONFORMANCE_SERVER.equals(serverTypeClassification))\n-                {\n-                    ConformanceSuiteOperationalServices\n-                            operationalConformanceSuiteServices = new ConformanceSuiteOperationalServices(configuration.getLocalServerName(),\n-                                                                                                          configuration.getLocalServerUserId(),\n-                                                                                                          configuration.getLocalServerPassword(),\n-                                                                                                          configuration.getMaxPageSize());\n-                    instance.setOperationalConformanceSuiteServices(operationalConformanceSuiteServices);\n-                    operationalConformanceSuiteServices.initialize(configuration.getConformanceSuiteConfig(),\n-                                                                   enterpriseTopicConnector,\n-                                                                   operationalRepositoryServices.getEnterpriseConnectorManager(),\n-                                                                   operationalRepositoryServices.getAuditLog(\n-                                                                           GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceCode(),\n-                                                                           GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceName(),\n-                                                                           GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceDescription(),\n-                                                                           GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceWiki()));\n-\n-                    activatedServiceList.add(GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceName());\n-                }\n-\n-                /*\n-                 * The enterprise topic passes OMRS Events from the cohort to the listening access services.\n-                 * During the access services start up, they registered listeners with the enterprise topic.\n-                 * Starting the enterprise topic will start the flow of events to the registered access services.\n-                 */\n-                if (enterpriseTopicConnector != null)\n-                {\n-                    try\n-                    {\n-                        enterpriseTopicConnector.start();\n-                    }\n-                    catch (Exception  error)\n-                    {\n-                        OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.ENTERPRISE_TOPIC_START_FAILED;\n-                        String             errorMessage = errorCode.getErrorMessageId()\n-                                                        + errorCode.getFormattedErrorMessage(serverName, error.getMessage());\n-\n-                        throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                                  this.getClass().getName(),\n-                                                                  methodName,\n-                                                                  errorMessage,\n-                                                                  errorCode.getSystemAction(),\n-                                                                  errorCode.getUserAction());\n-                    }\n-                }\n-            }\n-            else /* governance servers */\n-            {\n-                /*\n-                 * Governance servers are varied in nature.  Many host connectors that exchange metadata with third party technologies.\n-                 * However they may also host specific types of engines, or provide an implementation of a complete governance service.\n-                 * Because of this variety, Egeria does not (yet) provide any specialist frameworks for supporting the governance servers.\n-                 * All of the implementation is in the governance services subsystems initialized below.\n-                 *\n-                 * Set up the server instance - ensure it is active and the security has been set up correctly.\n-                 */\n-                platformInstanceMap.startUpServerInstance(configuration.getLocalServerUserId(),\n-                                                          serverName,\n-                                                          operationalRepositoryServices.getAuditLog(\n-                                                                  CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceCode(),\n-                                                                  CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceName(),\n-                                                                  CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceDescription(),\n-                                                                  CommonServicesDescription.OPEN_METADATA_SECURITY.getServiceWiki()),\n-                                                          configuration.getServerSecurityConnection());\n-\n-                /*\n-                 * Start up the governance services subsystem.   Each type of governance server has its own type of governance services\n-                 * subsystem.  Each is responsible for handling its own errors.  The error handling that follows helps to position\n-                 * where any issues are occurring.\n-                 */\n-                try\n-                {\n-                    OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.STARTING_GOVERNANCE_SERVICES;\n-                    auditLog.logRecord(actionDescription,\n-                                       auditCode.getLogMessageId(),\n-                                       auditCode.getSeverity(),\n-                                       auditCode.getFormattedLogMessage(serverTypeClassifier.getServerType().getServerTypeName(), serverName),\n-                                       null,\n-                                       auditCode.getSystemAction(),\n-                                       auditCode.getUserAction());\n-\n-                    initializeGovernanceServices(instance,\n-                                                 configuration,\n-                                                 serverTypeClassification,\n-                                                 operationalRepositoryServices,\n-                                                 activatedServiceList);\n-\n-                    auditCode = OMAGAdminAuditCode.GOVERNANCE_SERVICES_STARTED;\n-                    auditLog.logRecord(actionDescription,\n-                                       auditCode.getLogMessageId(),\n-                                       auditCode.getSeverity(),\n-                                       auditCode.getFormattedLogMessage(serverTypeClassifier.getServerType().getServerTypeName(), serverName),\n-                                       null,\n-                                       auditCode.getSystemAction(),\n-                                       auditCode.getUserAction());\n-                }\n-                catch (OMAGConfigurationErrorException  error)\n-                {\n-                    /*\n-                     * There is a configuration error that means that the governance services subsystem can not start.  Since this is\n-                     * the primary function of the server then there is no purpose in continuing.\n-                     */\n-                    OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.GOVERNANCE_SERVICE_FAILURE;\n-                    auditLog.logException(actionDescription,\n-                                          auditCode.getLogMessageId(),\n-                                          auditCode.getSeverity(),\n-                                          auditCode.getFormattedLogMessage(error.getClass().getName(),\n-                                                                           serverTypeClassifier.getServerType().getServerTypeName(),\n-                                                                           serverName,\n-                                                                           error.getErrorMessage()),\n-                                          null,\n-                                          error.getReportedSystemAction(),\n-                                          error.getReportedUserAction(),\n-                                          error);\n-                    throw error;\n-                }\n-                catch (Exception  error)\n-                {\n-                    /*\n-                     * Uncontrolled error from the governance service subsystem.  The subsystem could be in any state.\n-                     * Capture additional information about the error and stop the server startup.\n-                     */\n-                    OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.GOVERNANCE_SERVICE_FAILURE;\n-                    auditLog.logException(actionDescription,\n-                                          auditCode.getLogMessageId(),\n-                                          auditCode.getSeverity(),\n-                                          auditCode.getFormattedLogMessage(error.getClass().getName(),\n-                                                                           serverTypeClassifier.getServerType().getServerTypeName(),\n-                                                                           serverName,\n-                                                                           error.getMessage()),\n-                                          null,\n-                                          auditCode.getSystemAction(),\n-                                          auditCode.getUserAction(),\n-                                          error);\n-                    throw error;\n-                }\n-            }\n-\n-            /*\n-             * All subsystems are started - just log messages and return.\n-             */\n-            String successMessage = new Date().toString() + \" \" + serverName + \" is running the following services: \" + activatedServiceList.toString();\n-\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.SERVER_STARTUP_SUCCESS;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(serverName, activatedServiceList.toString()),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-\n-            response.setSuccessMessage(successMessage);\n-        }\n-        catch (UserNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (OMAGConfigurationErrorException  error)\n-        {\n-            exceptionHandler.captureConfigurationErrorException(response, error);\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-        return response;\n-    }\n-\n-\n-    /**\n-     * There are many paging services in Egeria.  This value sets a maximum page size that a requester can use.\n-     * It is passed to each component at start up so each can enforce it on all REST calls.\n-     * This helps to prevent a denial of service attack that uses very large requests to overwhelm the server.\n-     * If this value is 0 it means there is no upper limit.  If this value is negative then it isd invalid.\n-     *\n-     * @param maxPageSize value to validate\n-     * @param serverName name of the server that the configuration comes from\n-     * @param auditLog logging destination\n-     * @param methodName calling method\n-     * @throws OMAGConfigurationErrorException the max page size is negative.\n-     */\n-    private void validateMaxPageSize(int          maxPageSize,\n-                                     String       serverName,\n-                                     OMRSAuditLog auditLog,\n-                                     String       methodName) throws OMAGConfigurationErrorException\n-    {\n-        final String actionDescription = \"Validating max page size during server initialization\";\n-\n-        if (maxPageSize > 0)\n-        {\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.MAX_PAGE_SIZE;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(serverName, Integer.toString(maxPageSize)),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-        }\n-        else if (maxPageSize == 0)\n-        {\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.UNLIMITED_MAX_PAGE_SIZE;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(serverName),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-        }\n-        else\n-        {\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.INVALID_MAX_PAGE_SIZE;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(serverName, Integer.toString(maxPageSize)),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-\n-            OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.BAD_MAX_PAGE_SIZE;\n-            String             errorMessage = errorCode.getErrorMessageId()\n-                                            + errorCode.getFormattedErrorMessage(serverName,\n-                                                                                 Integer.toString(maxPageSize));\n-\n-            throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                    this.getClass().getName(),\n-                                                    methodName,\n-                                                    errorMessage,\n-                                                    errorCode.getSystemAction(),\n-                                                    errorCode.getUserAction());\n-        }\n-    }\n-\n-\n-    /**\n-     * Start up the access services.\n-     *\n-     * @param instance server instance\n-     * @param accessServiceConfigList configured access services\n-     * @param operationalRepositoryServices repository services\n-     * @param enterpriseTopicConnector events from the cohort\n-     * @param localServerUserId servers userId\n-     * @param serverName server name\n-     * @param activatedServiceList list of services (subsystems) running in the server\n-     * @throws OMAGConfigurationErrorException problem with the configuration\n-     */\n-    private void initializeAccessServices(OMAGOperationalServicesInstance instance,\n-                                          List<AccessServiceConfig>       accessServiceConfigList,\n-                                          OMRSOperationalServices         operationalRepositoryServices,\n-                                          OMRSTopicConnector              enterpriseTopicConnector,\n-                                          String                          localServerUserId,\n-                                          String                          serverName,\n-                                          List<String>                    activatedServiceList,\n-                                          OMRSAuditLog                    auditLog) throws OMAGConfigurationErrorException\n-    {\n-        final String methodName = \"initializeAccessServices\";\n-        final String actionDescription = \"Initialize Access Services\";\n-\n-        List<AccessServiceAdmin>        operationalAccessServiceAdminList = instance.getOperationalAccessServiceAdminList();\n-        if (accessServiceConfigList != null)\n-        {\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.STARTING_ACCESS_SERVICES;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-\n-            /*\n-             * Need to count the access services because of the possibility of deprecated or disabled access services in the list.\n-             */\n-            int  configuredAccessServiceCount = 0;\n-            int  enabledAccessServiceCount = 0;\n-\n-            for (AccessServiceConfig  accessServiceConfig : accessServiceConfigList)\n-            {\n-                /*\n-                 * Connected Asset OMAS has been removed but may be present in some older configuration documents.  It is skipped over if\n-                 * present.\n-                 */\n-                if ((accessServiceConfig != null) && (accessServiceConfig.getAccessServiceId() != AccessServiceDescription.CONNECTED_ASSET_OMAS.getAccessServiceCode()))\n-                {\n-                    configuredAccessServiceCount ++;\n-\n-                    if (ServiceOperationalStatus.ENABLED.equals(accessServiceConfig.getAccessServiceOperationalStatus()))\n-                    {\n-                        enabledAccessServiceCount ++;\n-\n-                        try\n-                        {\n-                            AccessServiceAdmin accessServiceAdmin = this.getAccessServiceAdminClass(accessServiceConfig, auditLog, serverName);\n-\n-                            /*\n-                             * Each access service has its own audit log instance.\n-                             */\n-                            OMRSAuditLog accessServicesAuditLog\n-                                    = operationalRepositoryServices.getAuditLog(accessServiceConfig.getAccessServiceId(),\n-                                                                                accessServiceConfig.getAccessServiceFullName(),\n-                                                                                accessServiceConfig.getAccessServiceDescription(),\n-                                                                                accessServiceConfig.getAccessServiceWiki());\n-\n-                            accessServiceAdmin.initialize(accessServiceConfig,\n-                                                          enterpriseTopicConnector,\n-                                                          operationalRepositoryServices.getEnterpriseOMRSRepositoryConnector(accessServiceConfig.getAccessServiceFullName()),\n-                                                          accessServicesAuditLog,\n-                                                          localServerUserId);\n-                            operationalAccessServiceAdminList.add(accessServiceAdmin);\n-                            activatedServiceList.add(accessServiceConfig.getAccessServiceFullName());\n-\n-                        }\n-                        catch (OMAGConfigurationErrorException error)\n-                        {\n-                            auditCode = OMAGAdminAuditCode.ACCESS_SERVICE_INSTANCE_FAILURE;\n-                            auditLog.logException(methodName,\n-                                                  auditCode.getLogMessageId(),\n-                                                  auditCode.getSeverity(),\n-                                                  auditCode.getFormattedLogMessage(accessServiceConfig.getAccessServiceName(), error.getMessage()),\n-                                                  accessServiceConfig.toString(),\n-                                                  auditCode.getSystemAction(),\n-                                                  auditCode.getUserAction(),\n-                                                  error);\n-                            throw error;\n-                        }\n-                        catch (Throwable error)\n-                        {\n-                            auditCode = OMAGAdminAuditCode.ACCESS_SERVICE_INSTANCE_FAILURE;\n-                            auditLog.logException(methodName,\n-                                                  auditCode.getLogMessageId(),\n-                                                  auditCode.getSeverity(),\n-                                                  auditCode.getFormattedLogMessage(error.getMessage(),\n-                                                                                   accessServiceConfig.getAccessServiceName(),\n-                                                                                   error.getMessage()),\n-                                                  accessServiceConfig.toString(),\n-                                                  auditCode.getSystemAction(),\n-                                                  auditCode.getUserAction(),\n-                                                  error);\n-\n-                            OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.UNEXPECTED_INITIALIZATION_EXCEPTION;\n-                            String errorMessage = errorCode.getErrorMessageId()\n-                                                + errorCode.getFormattedErrorMessage(serverName, accessServiceConfig.getAccessServiceName());\n-\n-                            throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                                      this.getClass().getName(),\n-                                                                      methodName,\n-                                                                      errorMessage,\n-                                                                      errorCode.getSystemAction(),\n-                                                                      errorCode.getUserAction(),\n-                                                                      error);\n-                        }\n-                    }\n-                    else\n-                    {\n-                        auditCode = OMAGAdminAuditCode.SKIPPING_ACCESS_SERVICE;\n-                        auditLog.logRecord(actionDescription,\n-                                           auditCode.getLogMessageId(),\n-                                           auditCode.getSeverity(),\n-                                           auditCode.getFormattedLogMessage(accessServiceConfig.getAccessServiceFullName(), serverName),\n-                                           null,\n-                                           auditCode.getSystemAction(),\n-                                           auditCode.getUserAction());\n-                    }\n-                }\n-            }\n-\n-            auditCode = OMAGAdminAuditCode.ALL_ACCESS_SERVICES_STARTED;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(Integer.toString(enabledAccessServiceCount),\n-                                                                Integer.toString(configuredAccessServiceCount)),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-        }\n-\n-        /*\n-         * Save the list of running access services to the instance and then add the instance to the instance map.\n-         * The instance information can then be retrieved for shutdown or other management requests.\n-         */\n-        instance.setOperationalAccessServiceAdminList(operationalAccessServiceAdminList);\n-    }\n-\n-    /**\n-     * Start up the view services.\n-     *\n-     * @param instance                      server instance\n-     * @param viewServiceConfigList         configured view services\n-     * @param operationalRepositoryServices repository services\n-     * @param localServerUserId             servers userId\n-     * @param serverName                    server name\n-     * @param activatedServiceList          list of services (subsystems) running in the server\n-     * @param maxPageSize                   maximum page size. 0 means unlimited\n-     * @param auditLog                      audit log\n-     * @throws OMAGConfigurationErrorException problem with the configuration\n-     */\n-    private void initializeViewServices(OMAGOperationalServicesInstance instance,\n-                                        List<ViewServiceConfig> viewServiceConfigList,\n-                                        OMRSOperationalServices operationalRepositoryServices,\n-                                        String localServerUserId,\n-                                        String serverName,\n-                                        List<String> activatedServiceList,\n-                                        int maxPageSize,\n-                                        OMRSAuditLog auditLog) throws OMAGConfigurationErrorException\n-    {\n-        final String methodName = \"initializeViewServices\";\n-        final String actionDescription = \"Initialize View Services\";\n-\n-        List<ViewServiceAdmin> operationalViewServiceAdminList = instance.getOperationalViewServiceAdminList();\n-        if (viewServiceConfigList != null)\n-        {\n-            OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.STARTING_VIEW_SERVICES;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-\n-            /*\n-             * Need to count the view services because of the possibility of deprecated or disabled view services in the list.\n-             */\n-            int configuredViewServiceCount = 0;\n-            int enabledViewServiceCount = 0;\n-\n-            for (ViewServiceConfig viewServiceConfig : viewServiceConfigList)\n-            {\n-\n-                configuredViewServiceCount++;\n-\n-                if (ServiceOperationalStatus.ENABLED.equals(viewServiceConfig.getViewServiceOperationalStatus())) {\n-                    enabledViewServiceCount++;\n-\n-                    try\n-                    {\n-                        ViewServiceAdmin viewServiceAdmin = this.getViewServiceAdminClass(viewServiceConfig, auditLog, serverName);\n-\n-                        /*\n-                         * Each view service has its own audit log instance.\n-                         */\n-                        OMRSAuditLog viewServicesAuditLog\n-                                = operationalRepositoryServices.getAuditLog(viewServiceConfig.getViewServiceId(),\n-                                                                            viewServiceConfig.getViewServiceFullName(),\n-                                                                            viewServiceConfig.getViewServiceDescription(),\n-                                                                            viewServiceConfig.getViewServiceWiki());\n-\n-                        viewServiceAdmin.initialize(serverName,\n-                                                    viewServiceConfig,\n-                                                    viewServicesAuditLog,\n-                                                    localServerUserId,\n-                                                    maxPageSize);\n-                        operationalViewServiceAdminList.add(viewServiceAdmin);\n-                        activatedServiceList.add(viewServiceConfig.getViewServiceFullName());\n-\n-                    } catch (OMAGConfigurationErrorException error)\n-                    {\n-                        auditCode = OMAGAdminAuditCode.VIEW_SERVICE_INSTANCE_FAILURE;\n-                        auditLog.logException(methodName,\n-                                              auditCode.getLogMessageId(),\n-                                              auditCode.getSeverity(),\n-                                              auditCode.getFormattedLogMessage(viewServiceConfig.getViewServiceName(), error.getMessage()),\n-                                              viewServiceConfig.toString(),\n-                                              auditCode.getSystemAction(),\n-                                              auditCode.getUserAction(),\n-                                              error);\n-                        throw error;\n-                    } catch (Throwable error)\n-                    {\n-                        auditCode = OMAGAdminAuditCode.VIEW_SERVICE_INSTANCE_FAILURE;\n-                        auditLog.logException(methodName,\n-                                              auditCode.getLogMessageId(),\n-                                              auditCode.getSeverity(),\n-                                              auditCode.getFormattedLogMessage(error.getMessage(),\n-                                                                               viewServiceConfig.getViewServiceName(),\n-                                                                               error.getMessage()),\n-                                              viewServiceConfig.toString(),\n-                                              auditCode.getSystemAction(),\n-                                              auditCode.getUserAction(),\n-                                              error);\n-\n-                        OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.UNEXPECTED_INITIALIZATION_EXCEPTION;\n-                        String errorMessage = errorCode.getErrorMessageId()\n-                                + errorCode.getFormattedErrorMessage(serverName, viewServiceConfig.getViewServiceName());\n-\n-                        throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                                  this.getClass().getName(),\n-                                                                  methodName,\n-                                                                  errorMessage,\n-                                                                  errorCode.getSystemAction(),\n-                                                                  errorCode.getUserAction(),\n-                                                                  error);\n-                    }\n-                } else\n-                {\n-                    auditCode = OMAGAdminAuditCode.SKIPPING_VIEW_SERVICE;\n-                    auditLog.logRecord(actionDescription,\n-                                       auditCode.getLogMessageId(),\n-                                       auditCode.getSeverity(),\n-                                       auditCode.getFormattedLogMessage(viewServiceConfig.getViewServiceFullName(), serverName),\n-                                       null,\n-                                       auditCode.getSystemAction(),\n-                                       auditCode.getUserAction());\n-                }\n-\n-            }\n-\n-            auditCode = OMAGAdminAuditCode.ALL_VIEW_SERVICES_STARTED;\n-            auditLog.logRecord(actionDescription,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(Integer.toString(enabledViewServiceCount),\n-                                                                Integer.toString(configuredViewServiceCount)),\n-                               null,\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-        }\n-\n-        /*\n-         * Save the list of running view services to the instance and then add the instance to the instance map.\n-         * The instance information can then be retrieved for shutdown or other management requests.\n-         */\n-        instance.setOperationalViewServiceAdminList(operationalViewServiceAdminList);\n-    }\n-\n-\n-    /**\n-     *\n-     * @param accessServiceConfig configuration for the access service\n-     * @param auditLog logging destination\n-     * @param serverName this server instance\n-     * @return Admin class for the access service\n-     * @throws OMAGConfigurationErrorException if the class is invalid\n-     */\n-    private AccessServiceAdmin getAccessServiceAdminClass(AccessServiceConfig   accessServiceConfig,\n-                                                          OMRSAuditLog          auditLog,\n-                                                          String                serverName) throws OMAGConfigurationErrorException\n-    {\n-        final String methodName = \"getAccessServiceAdminClass\";\n-        OMAGAdminAuditCode auditCode;\n-\n-        String    accessServiceAdminClassName = accessServiceConfig.getAccessServiceAdminClass();\n-\n-        if (accessServiceAdminClassName != null)\n-        {\n-            try\n-            {\n-                return (AccessServiceAdmin) Class.forName(accessServiceAdminClassName).newInstance();\n-            }\n-            catch (ClassNotFoundException | InstantiationException | IllegalAccessException error)\n-            {\n-                auditCode = OMAGAdminAuditCode.BAD_ACCESS_SERVICE_ADMIN_CLASS;\n-                auditLog.logException(methodName,\n-                                      auditCode.getLogMessageId(),\n-                                      auditCode.getSeverity(),\n-                                      auditCode.getFormattedLogMessage(error.getMessage(),\n-                                                                       accessServiceConfig.getAccessServiceName(),\n-                                                                       error.getMessage()),\n-                                      accessServiceConfig.toString(),\n-                                      auditCode.getSystemAction(),\n-                                      auditCode.getUserAction(),\n-                                      error);\n-\n-                OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.BAD_ACCESS_SERVICE_ADMIN_CLASS;\n-                String errorMessage = errorCode.getErrorMessageId()\n-                        + errorCode.getFormattedErrorMessage(serverName,\n-                                                             accessServiceAdminClassName,\n-                                                             accessServiceConfig.getAccessServiceName());\n-\n-                throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                          this.getClass().getName(),\n-                                                          methodName,\n-                                                          errorMessage,\n-                                                          errorCode.getSystemAction(),\n-                                                          errorCode.getUserAction(),\n-                                                          error);\n-            }\n-            catch (Throwable error)\n-            {\n-                auditCode = OMAGAdminAuditCode.BAD_ACCESS_SERVICE_ADMIN_CLASS;\n-                auditLog.logException(methodName,\n-                                      auditCode.getLogMessageId(),\n-                                      auditCode.getSeverity(),\n-                                      auditCode.getFormattedLogMessage(error.getMessage(),\n-                                                                       accessServiceConfig.getAccessServiceName(),\n-                                                                       error.getMessage()),\n-                                      accessServiceConfig.toString(),\n-                                      auditCode.getSystemAction(),\n-                                      auditCode.getUserAction(),\n-                                      error);\n-\n-                throw error;\n-            }\n-        }\n-        else\n-        {\n-            auditCode = OMAGAdminAuditCode.NULL_ACCESS_SERVICE_ADMIN_CLASS;\n-            auditLog.logRecord(methodName,\n-                               auditCode.getLogMessageId(),\n-                               auditCode.getSeverity(),\n-                               auditCode.getFormattedLogMessage(serverName,\n-                                                                accessServiceConfig.getAccessServiceFullName()),\n-                               accessServiceConfig.toString(),\n-                               auditCode.getSystemAction(),\n-                               auditCode.getUserAction());\n-\n-            OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.NULL_ACCESS_SERVICE_ADMIN_CLASS;\n-            String errorMessage = errorCode.getErrorMessageId()\n-                    + errorCode.getFormattedErrorMessage(serverName,\n-                                                         accessServiceConfig.getAccessServiceName());\n-\n-            throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                                                      this.getClass().getName(),\n-                                                      methodName,\n-                                                      errorMessage,\n-                                                      errorCode.getSystemAction(),\n-                                                      errorCode.getUserAction());\n-        }\n-    }\n-\n-    /**\n-     * Get the View Service admin class for a named server's view service configuration.\n-     *\n-     * @param viewServiceConfig configuration for the view service\n-     * @param auditLog logging destination\n-     * @param serverName this server instance\n-     * @return Admin class for the view service\n-     * @throws OMAGConfigurationErrorException if the class is invalid\n-     */\n-    private ViewServiceAdmin getViewServiceAdminClass(ViewServiceConfig         viewServiceConfig,\n-                                                          OMRSAuditLog          auditLog,\n-                                                          String                serverName) throws OMAGConfigurationErrorException\n-    {\n-        final String methodName = \"getViewServiceAdminClass\";\n-        OMAGAdminAuditCode auditCode;\n-\n-        String    viewServiceAdminClassName = viewServiceConfig.getViewServiceAdminClass();\n-\n-        if (viewServiceAdminClassName != null)\n-        {\n-            try\n-            {\n-                return (ViewServiceAdmin) Class.forName(viewServiceAdminClassName).newInstance();\n-            }\n-            catch (ClassNotFoundException | InstantiationException | IllegalAccessException error)\n-            {\n-                auditCode = OMAGAdminAuditCode.BAD_VIEW_SERVICE_ADMIN_CLASS;\n-                auditLog.logException(methodName,\n-                        auditCode.getLogMessageId(),\n-                        auditCode.getSeverity(),\n-                        auditCode.getFormattedLogMessage(error.getMessage(),\n-                                viewServiceConfig.getViewServiceName(),\n-                                error.getMessage()),\n-                        viewServiceConfig.toString(),\n-                        auditCode.getSystemAction(),\n-                        auditCode.getUserAction(),\n-                        error);\n-\n-                OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.BAD_VIEW_SERVICE_ADMIN_CLASS;\n-                String errorMessage = errorCode.getErrorMessageId()\n-                        + errorCode.getFormattedErrorMessage(serverName,\n-                        viewServiceAdminClassName,\n-                        viewServiceConfig.getViewServiceName());\n-\n-                throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                        this.getClass().getName(),\n-                        methodName,\n-                        errorMessage,\n-                        errorCode.getSystemAction(),\n-                        errorCode.getUserAction(),\n-                        error);\n-            }\n-            catch (Throwable error)\n-            {\n-                auditCode = OMAGAdminAuditCode.BAD_VIEW_SERVICE_ADMIN_CLASS;\n-                auditLog.logException(methodName,\n-                        auditCode.getLogMessageId(),\n-                        auditCode.getSeverity(),\n-                        auditCode.getFormattedLogMessage(error.getMessage(),\n-                                viewServiceConfig.getViewServiceName(),\n-                                error.getMessage()),\n-                        viewServiceConfig.toString(),\n-                        auditCode.getSystemAction(),\n-                        auditCode.getUserAction(),\n-                        error);\n-\n-                throw error;\n-            }\n-        }\n-        else\n-        {\n-            auditCode = OMAGAdminAuditCode.NULL_VIEW_SERVICE_ADMIN_CLASS;\n-            auditLog.logRecord(methodName,\n-                    auditCode.getLogMessageId(),\n-                    auditCode.getSeverity(),\n-                    auditCode.getFormattedLogMessage(serverName,\n-                            viewServiceConfig.getViewServiceFullName()),\n-                    viewServiceConfig.toString(),\n-                    auditCode.getSystemAction(),\n-                    auditCode.getUserAction());\n-\n-            OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.NULL_VIEW_SERVICE_ADMIN_CLASS;\n-            String errorMessage = errorCode.getErrorMessageId()\n-                    + errorCode.getFormattedErrorMessage(serverName,\n-                    viewServiceConfig.getViewServiceName());\n-\n-            throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n-                    this.getClass().getName(),\n-                    methodName,\n-                    errorMessage,\n-                    errorCode.getSystemAction(),\n-                    errorCode.getUserAction());\n-        }\n-    }\n-\n-\n-    /**\n-     * Initialize the appropriate governance service subsystem for a governance server.\n-     *\n-     * @param instance this server's instance object where information about the governance service subsystem is stashed.\n-     * @param configuration whole server configuration document.\n-     * @param serverTypeClassification what type of server is this\n-     * @param operationalRepositoryServices the open metadata repository services (OMRS) instance - use to manufacture audit logs.\n-     * @param activatedServiceList current list of activated services to append to.\n-     * @throws OMAGConfigurationErrorException exception throw if governance service subsystem discovered a fatal error.\n-     *         It will cause the server startup to fail.\n-     */\n-    private void initializeGovernanceServices(OMAGOperationalServicesInstance instance,\n-                                              OMAGServerConfig                configuration,\n-                                              ServerTypeClassification        serverTypeClassification,\n-                                              OMRSOperationalServices         operationalRepositoryServices,\n-                                              List<String>                    activatedServiceList) throws OMAGConfigurationErrorException\n-    {\n-        /*\n-         * Initialize the Data Platform Services.  This is a governance server that extracts technical metadata from\n-         * a data platform and catalogs it in an open metadata server.\n-         */\n-        if (ServerTypeClassification.DATA_PLATFORM_SERVER.equals(serverTypeClassification))\n-        {\n-            DataPlatformOperationalServices dataPlatformOperationalServices\n-                    = new DataPlatformOperationalServices(configuration.getLocalServerName(),\n-                                                          configuration.getLocalServerUserId(),\n-                                                          configuration.getLocalServerType(),\n-                                                          configuration.getLocalServerURL());\n-\n-            instance.setOperationalDataPlatformServices(dataPlatformOperationalServices);\n-            dataPlatformOperationalServices.initialize(configuration.getDataPlatformServicesConfig(),\n-                                                       operationalRepositoryServices.getAuditLog(\n-                                                               GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceCode(),\n-                                                               GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceName(),\n-                                                               GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceDescription(),\n-                                                               GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Data Engine Proxy Services.  This is a governance server that extracts metadata about processes from\n-         * a data engine.\n-         */\n-        else if (ServerTypeClassification.DATA_ENGINE_PROXY.equals(serverTypeClassification))\n-        {\n-            DataEngineProxyOperationalServices operationalDataEngineProxyServices\n-                    = new DataEngineProxyOperationalServices(configuration.getLocalServerName(),\n-                                                             configuration.getLocalServerUserId(),\n-                                                             configuration.getLocalServerPassword());\n-\n-            instance.setOperationalDataEngineProxyServices(operationalDataEngineProxyServices);\n-            operationalDataEngineProxyServices.initialize(configuration.getDataEngineProxyConfig(),\n-                                                          operationalRepositoryServices.getAuditLog(\n-                                                                  GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceCode(),\n-                                                                  GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceName(),\n-                                                                  GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceDescription(),\n-                                                                  GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Discovery Engine Services for discovery server.  This is a governance server for running automated metadata discovery.\n-         */\n-        else if (ServerTypeClassification.DISCOVERY_SERVER.equals(serverTypeClassification))\n-        {\n-            DiscoveryServerOperationalServices operationalDiscoveryServer\n-                    = new DiscoveryServerOperationalServices(configuration.getLocalServerName(),\n-                                                             configuration.getLocalServerUserId(),\n-                                                             configuration.getLocalServerPassword(),\n-                                                             configuration.getMaxPageSize());\n-\n-            instance.setOperationalDiscoveryServer(operationalDiscoveryServer);\n-            operationalDiscoveryServer.initialize(configuration.getDiscoveryEngineServicesConfig(),\n-                                                  operationalRepositoryServices.getAuditLog(\n-                                                          GovernanceServicesDescription.DISCOVERY_ENGINE_SERVICES.getServiceCode(),\n-                                                          GovernanceServicesDescription.DISCOVERY_ENGINE_SERVICES.getServiceName(),\n-                                                          GovernanceServicesDescription.DISCOVERY_ENGINE_SERVICES.getServiceDescription(),\n-                                                          GovernanceServicesDescription.DISCOVERY_ENGINE_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.DISCOVERY_ENGINE_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Open Lineage Services.  This is supports the storing and querying of asset lineage.\n-         */\n-        else if (ServerTypeClassification.OPEN_LINEAGE_SERVER.equals(serverTypeClassification))\n-        {\n-            OpenLineageServerOperationalServices\n-                    operationalOpenLineageServer = new OpenLineageServerOperationalServices(configuration.getLocalServerName(),\n-                                                                                            configuration.getLocalServerUserId(),\n-                                                                                            configuration.getLocalServerPassword(),\n-                                                                                            configuration.getMaxPageSize());\n-            instance.setOpenLineageOperationalServices(operationalOpenLineageServer);\n-            operationalOpenLineageServer.initialize(configuration.getOpenLineageServerConfig(),\n-                                                    operationalRepositoryServices.getAuditLog(\n-                                                            GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceCode(),\n-                                                            GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceName(),\n-                                                            GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceDescription(),\n-                                                            GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Security Officer Services.  This is a governance server for maintaining the configuration\n-         * in security officer engines.\n-         */\n-        else if (ServerTypeClassification.SECURITY_OFFICER_SERVER.equals(serverTypeClassification))\n-        {\n-            SecurityOfficerOperationalServices operationalSecurityOfficer = new SecurityOfficerOperationalServices(configuration.getLocalServerName(),\n-                                                                                                                   configuration.getLocalServerType(),\n-                                                                                                                   configuration.getOrganizationName(),\n-                                                                                                                   configuration.getLocalServerUserId(),\n-                                                                                                                   configuration.getLocalServerURL(),\n-                                                                                                                   configuration.getMaxPageSize());\n-            instance.setOperationalSecurityOfficerService(operationalSecurityOfficer);\n-            operationalSecurityOfficer.initialize(configuration.getSecurityOfficerConfig(),\n-                                                  operationalRepositoryServices.getAuditLog(\n-                                                          GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceCode(),\n-                                                          GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceName(),\n-                                                          GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceDescription(),\n-                                                          GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Security Sync Services.  This is a governance server for maintaining the configuration\n-         * in security oriented governance engines.\n-         */\n-        else if (ServerTypeClassification.SECURITY_SYNC_SERVER.equals(serverTypeClassification))\n-        {\n-            SecuritySyncOperationalServices operationalSecuritySync\n-                    = new SecuritySyncOperationalServices(configuration.getLocalServerName(),\n-                                                          configuration.getLocalServerType(),\n-                                                          configuration.getOrganizationName(),\n-                                                          configuration.getLocalServerUserId(),\n-                                                          configuration.getLocalServerURL(),\n-                                                          configuration.getMaxPageSize());\n-\n-            instance.setOperationalSecuritySyncServices(operationalSecuritySync);\n-            operationalSecuritySync.initialize(configuration.getSecuritySyncConfig(),\n-                                               operationalRepositoryServices.getAuditLog(\n-                                                       GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceCode(),\n-                                                       GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceName(),\n-                                                       GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceDescription(),\n-                                                       GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Stewardship Engine Services.  This is a governance daemon for running automated stewardship actions.\n-         */\n-        else if (ServerTypeClassification.STEWARDSHIP_SERVER.equals(serverTypeClassification))\n-        {\n-            StewardshipOperationalServices\n-                    operationalStewardshipServices = new StewardshipOperationalServices(configuration.getLocalServerName(),\n-                                                                                        configuration.getLocalServerUserId(),\n-                                                                                        configuration.getMaxPageSize());\n-            instance.setOperationalStewardshipServices(operationalStewardshipServices);\n-            operationalStewardshipServices.initialize(configuration.getStewardshipEngineServicesConfig(),\n-                                                      operationalRepositoryServices.getAuditLog(\n-                                                              GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceCode(),\n-                                                              GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName(),\n-                                                              GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceDescription(),\n-                                                              GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName());\n-        }\n-\n-        /*\n-         * Initialize the Virtualization Services.  This is a governance server for automatically configuring a data virtualization\n-         * platform with views over new relational assets and maintaining views when existing relational assets change.\n-         */\n-        else if (ServerTypeClassification.VIRTUALIZER_SERVER.equals(serverTypeClassification))\n-        {\n-            VirtualizationOperationalServices operationalVirtualizationServices\n-                    = new VirtualizationOperationalServices(configuration.getLocalServerName(),\n-                                                            configuration.getLocalServerType(),\n-                                                            configuration.getOrganizationName(),\n-                                                            configuration.getLocalServerUserId(),\n-                                                            configuration.getLocalServerURL());\n-\n-            instance.setOperationalVirtualizationServices(operationalVirtualizationServices);\n-            operationalVirtualizationServices.initialize(configuration.getVirtualizationConfig(),\n-                                                         operationalRepositoryServices.getAuditLog(\n-                                                                 GovernanceServicesDescription.VIRTUALIZATION_SERVICES.getServiceCode(),\n-                                                                 GovernanceServicesDescription.VIRTUALIZATION_SERVICES.getServiceName(),\n-                                                                 GovernanceServicesDescription.VIRTUALIZATION_SERVICES.getServiceDescription(),\n-                                                                 GovernanceServicesDescription.VIRTUALIZATION_SERVICES.getServiceWiki()));\n-\n-            activatedServiceList.add(GovernanceServicesDescription.VIRTUALIZATION_SERVICES.getServiceName());\n-        }\n-    }\n-\n-\n-    /**\n-     * Shutdown any running services for a specific server instance.\n-     *\n-     * @param userId calling user\n-     * @param serverName name of this server\n-     * @param methodName calling method\n-     * @param instance a list of the running services\n-     * @param permanentDeactivation should the server be permanently disconnected\n-     * @throws InvalidParameterException one of the services detected an invalid parameter\n-     * @throws PropertyServerException one of the services had problems shutting down\n-     */\n-    private void deactivateRunningServiceInstances(String                          userId,\n-                                                   String                          serverName,\n-                                                   String                          methodName,\n-                                                   OMAGOperationalServicesInstance instance,\n-                                                   boolean                         permanentDeactivation) throws InvalidParameterException,\n-                                                                                                                 PropertyServerException\n-    {\n-        final String actionDescription = \"Shutdown server\";\n-\n-        if (instance != null)\n-        {\n-            OMRSAuditLog auditLog = instance.getAuditLog();\n-\n-            if (auditLog != null)\n-            {\n-                OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.SERVER_SHUTDOWN_STARTED;\n-                auditLog.logRecord(actionDescription,\n-                                   auditCode.getLogMessageId(),\n-                                   auditCode.getSeverity(),\n-                                   auditCode.getFormattedLogMessage(serverName),\n-                                   Boolean.toString(permanentDeactivation),\n-                                   auditCode.getSystemAction(),\n-                                   auditCode.getUserAction());\n-            }\n-\n-            try\n-            {\n-                /*\n-                 * Shutdown the access services\n-                 */\n-                if (instance.getOperationalAccessServiceAdminList() != null)\n-                {\n-                    for (AccessServiceAdmin accessServiceAdmin : instance.getOperationalAccessServiceAdminList())\n-                    {\n-                        if (accessServiceAdmin != null)\n-                        {\n-                            accessServiceAdmin.shutdown();\n-                        }\n-                    }\n-                }\n-\n-                /*\n-                 * Shutdown the OCF metadata management services\n-                 */\n-                if (instance.getOperationalOCFMetadataServices() != null)\n-                {\n-                    instance.getOperationalOCFMetadataServices().shutdown();\n-                }\n-\n-                /*\n-                 * Shutdown the discovery engine\n-                 */\n-                if (instance.getOperationalDiscoveryServer() != null)\n-                {\n-                    instance.getOperationalDiscoveryServer().terminate();\n-                }\n-\n-                /*\n-                 * Shutdown the open lineage services\n-                 */\n-                if (instance.getOpenLineageOperationalServices() != null)\n-                {\n-                    instance.getOpenLineageOperationalServices().shutdown();\n-                }\n-\n-                /*\n-                 * Shutdown the security sync\n-                 */\n-                if (instance.getOperationalSecuritySyncServices() != null)\n-                {\n-                    instance.getOperationalSecuritySyncServices().disconnect();\n-                }\n-\n-                /*\n-                 * Shutdown the security officer\n-                 */\n-                if (instance.getOperationalSecurityOfficerService() != null)\n-                {\n-                    instance.getOperationalSecurityOfficerService().disconnect();\n-                }\n-\n-                /*\n-                 * Shutdown the virtualizer\n-                 */\n-                if (instance.getOperationalVirtualizationServices() != null)\n-                {\n-                    instance.getOperationalVirtualizationServices().disconnect(permanentDeactivation);\n-                }\n-\n-\n-                /*\n-                 * Shutdown the stewardship services\n-                 */\n-                if (instance.getOperationalStewardshipServices() != null)\n-                {\n-                    instance.getOperationalStewardshipServices().terminate(permanentDeactivation);\n-                }\n-\n-                /*\n-                 * Shutdown the data platform services\n-                 */\n-                if (instance.getOperationalDataPlatformServices() != null)\n-                {\n-                    instance.getOperationalDataPlatformServices().disconnect(permanentDeactivation);\n-                }\n-\n-                /*\n-                 * Shutdown the conformance test suite\n-                 */\n-                if (instance.getOperationalConformanceSuiteServices() != null)\n-                {\n-                    instance.getOperationalConformanceSuiteServices().terminate(permanentDeactivation);\n-                }\n-\n-                /*\n-                 * Terminate the OMRS\n-                 */\n-                if (instance.getOperationalRepositoryServices() != null)\n-                {\n-                    instance.getOperationalRepositoryServices().disconnect(permanentDeactivation);\n-                }\n-\n-                instanceHandler.removeServerServiceInstance(serverName);\n-\n-                if (auditLog != null)\n-                {\n-                    OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.SERVER_SHUTDOWN_SUCCESS;\n-                    auditLog.logRecord(actionDescription,\n-                                       auditCode.getLogMessageId(),\n-                                       auditCode.getSeverity(),\n-                                       auditCode.getFormattedLogMessage(serverName),\n-                                       Boolean.toString(permanentDeactivation),\n-                                       auditCode.getSystemAction(),\n-                                       auditCode.getUserAction());\n-                }\n-            }\n-            catch (Exception   error)\n-            {\n-                 if (auditLog != null)\n-                 {\n-                     OMAGAdminAuditCode auditCode = OMAGAdminAuditCode.SERVER_SHUTDOWN_ERROR;\n-                     auditLog.logException(actionDescription,\n-                                           auditCode.getLogMessageId(),\n-                                           auditCode.getSeverity(),\n-                                           auditCode.getFormattedLogMessage(serverName,\n-                                                                            error.getClass().getName(),\n-                                                                            error.getMessage()),\n-                                           Boolean.toString(permanentDeactivation),\n-                                           auditCode.getSystemAction(),\n-                                           auditCode.getUserAction(),\n-                                           error);\n-                 }\n-\n-                 throw error;\n-            }\n-        }\n-\n-        platformInstanceMap.shutdownServerInstance(userId, serverName, methodName);\n-    }\n-\n-\n-    /**\n-     * Temporarily deactivate the open metadata and governance servers in th supplied list.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverNames list of server names\n-     */\n-    public void deactivateTemporarilyServerList(String        userId,\n-                                                List<String>  serverNames)\n-    {\n-        if (serverNames != null)\n-        {\n-            for (String serverName : serverNames)\n-            {\n-                if (serverName != null)\n-                {\n-                    deactivateTemporarily(userId, serverName);\n-                }\n-            }\n-        }\n-    }\n-\n-\n-    /**\n-     * Temporarily deactivate any open metadata and governance services for the requested server.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverName  local server name\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException the serverName is invalid.\n-     */\n-    public VoidResponse deactivateTemporarily(String  userId,\n-                                              String  serverName)\n-    {\n-        final String methodName = \"deactivateTemporarily\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            deactivateRunningServiceInstances(userId,\n-                                              serverName,\n-                                              methodName,\n-                                              instanceHandler.getServerServiceInstance(userId, serverName, methodName),\n-                                              false);\n-        }\n-        catch (InvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (UserNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Terminate any running open metadata and governance services, remove the server from any open metadata cohorts\n-     * and delete the server's configuration.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverName  local server name\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException the serverName is invalid.\n-     */\n-    public VoidResponse deactivatePermanently(String  userId,\n-                                              String  serverName)\n-    {\n-        final String methodName = \"deactivatePermanently\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            deactivateRunningServiceInstances(userId,\n-                                              serverName,\n-                                              methodName,\n-                                              instanceHandler.getServerServiceInstance(userId, serverName, methodName),\n-                                              true);\n-\n-            /*\n-             * Delete the configuration for this server\n-             */\n-            configStore.saveServerConfig(serverName, methodName, null);\n-        }\n-        catch (InvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (UserNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (PropertyServerException error)\n-        {\n-            exceptionHandler.capturePropertyServerException(response, error);\n-        }\n-        catch (Throwable error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-        return response;\n-    }\n-\n-\n-    /*\n-     * =============================================================\n-     * Services on running instances\n-     */\n-\n-    /*\n-     * Query current configuration\n-     */\n-\n-\n-    /**\n-     * Return the complete set of configuration properties in use by the server.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverName  local server name\n-     * @return OMAGServerConfig properties or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName parameter.\n-     */\n-    public OMAGServerConfigResponse getActiveConfiguration(String userId,\n-                                                           String serverName)\n-    {\n-        final String methodName = \"getActiveConfiguration\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        OMAGServerConfigResponse response = new OMAGServerConfigResponse();\n-\n-        try\n-        {\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGOperationalServicesInstance instance = instanceHandler.getServerServiceInstance(userId, serverName, methodName);\n-\n-            response.setOMAGServerConfig(instance.getOperationalConfiguration());\n-        }\n-        catch (InvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (UserNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Add a new open metadata archive to running repository.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @param fileName name of the open metadata archive file.\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or fileName parameter.\n-     */\n-    public VoidResponse addOpenMetadataArchiveFile(String userId,\n-                                                   String serverName,\n-                                                   String fileName)\n-    {\n-        final String methodName = \"addOpenMetadataArchiveFile\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-            errorHandler.validateFileName(fileName, serverName, methodName);\n-\n-            ConnectorConfigurationFactory configurationFactory   = new ConnectorConfigurationFactory();\n-            Connection newOpenMetadataArchive = configurationFactory.getOpenMetadataArchiveFileConnection(fileName);\n-\n-            OMAGOperationalServicesInstance instance = instanceHandler.getServerServiceInstance(userId, serverName, methodName);\n-            OMRSOperationalServices         repositoryServicesInstance = instance.getOperationalRepositoryServices();\n-\n-            repositoryServicesInstance.addOpenMetadataArchive(newOpenMetadataArchive, fileName);\n-        }\n-        catch (InvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (UserNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-        return response;\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "996cc3cc60b93e0f2870e07aab317b7745b185ac", "committedDate": "2020-03-05 18:56:50 +0000", "message": "Fix up Javadoc"}, {"oid": "e43d2f66a84f17238f7b2704870ac8d4f14daf4b", "committedDate": "2020-03-11 15:22:14 +0000", "message": "Support ALF in exceptions and messages (#2537)"}, {"oid": "cfa56b8bb4826a059678cbfedcc5203d9bc3dfcc", "committedDate": "2020-03-18 11:27:38 +0000", "message": "Update to new ALF APIs (#2537)"}, {"oid": "e659dfefa73de059e0ca96725c01e5c750fb95c7", "committedDate": "2020-05-30 15:20:38 +0100", "message": "Updates from dojo (#3064)"}, {"oid": "b38898b1122e646b2545526701b95457553ee243", "committedDate": "2020-06-02 17:07:17 +0100", "message": "Rename Data Platform OMAS to Data Manager OMAS"}, {"oid": "57f2496a88d917c48b9394f37d38231d909a1913", "committedDate": "2020-09-17 15:41:19 +0100", "message": "Enable view admin calls"}, {"oid": "33dd7218df708c68c355f39ad3db6a6d0b919c73", "committedDate": "2020-09-25 13:21:58 +0200", "message": "Fix DE event client/connector issue caused by kafka consumer group config."}, {"oid": "70ac9363353c05de37d360882a340d933c8d1c59", "committedDate": "2020-09-25 13:21:59 +0200", "message": "Merge branch 'master' of github.com:odpi/egeria into de-server-eventsclient"}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "76f43150aa624aab3555eb8f785daad2fe764a4f", "committedDate": "2020-09-29 22:20:40 +0100", "message": "Merge branch 'master' of https://github.com/odpi/egeria into foundation-and-empire"}, {"oid": "de83e66f8afd26a414414ecedfda8b31f8fcc7e1", "committedDate": "2020-10-19 16:01:23 +0100", "message": "Looks for view services that need to be shutdown"}, {"oid": "cc944574815c77a8ed56f2e941a25cb00a549715", "committedDate": "2020-11-12 13:22:39 +0000", "message": "#4093 Ties in disconnect to shutdown data engine proxy services"}, {"oid": "c82de42e1a2f6c859b3541106d7afcc3114bd3d1", "committedDate": "2020-12-13 12:38:00 +0000", "message": "Add engine administration"}, {"oid": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "committedDate": "2021-01-01 12:37:18 +0000", "message": "Updated config for the engine host"}, {"oid": "d92b1299ae6f243e412e36f5330b2589673099a6", "committedDate": "2021-02-16 20:50:38 +0000", "message": "Simplify use of event mapper (#4700)"}, {"oid": "1c2920792f5db74b627ac6cc4018c58395495371", "committedDate": "2021-02-26 18:12:30 +0000", "message": "Nolonger catch Throwable"}, {"oid": "46fec31f50cd3d7c86bc6694f2aca2c811d4ef7d", "committedDate": "2021-07-09 15:58:18 +0100", "message": "Update calls to deprecated newInstance"}, {"oid": "24fddcefb9d0437af44635151fd4a19aecb1addb", "committedDate": "2021-08-14 21:15:55 +0100", "message": "Add start/stop server"}, {"oid": "c003e28bbd7e48e47df2dc976b8625345ffc62ae", "committedDate": "2021-11-05 10:46:01 +0200", "message": "use local server id as the caller id when retrieving the out topic connection"}, {"oid": "ff6ee9b3b229dac4acea7b7764ada9cd0787fe5a", "committedDate": "2021-11-09 17:08:51 +0000", "message": "Fix admin security checks and msgs (#5825)"}, {"oid": "76645006114237cb4de0b6db8ff5040e8250ac46", "committedDate": "2021-11-09 17:10:23 +0000", "message": "Merge branch 'master' of https://github.com/odpi/egeria into egeria-code"}, {"oid": "19210edab74310c929dd69cdd1cf9c7a09aa651e", "committedDate": "2021-11-10 08:38:13 +0000", "message": "Update URLs to docs"}, {"oid": "515988eaba52811f4bface6da5f468fd388e26df", "committedDate": "2021-11-11 17:55:30 +0000", "message": "Add new call to adminservices to show status of running server"}, {"oid": "d4d5be2c92ac14caceea3a1cb442753dd2ea0e84", "committedDate": "2021-11-11 18:13:29 +0000", "message": "Add OMRS RUNNING status in engine host and int daemon"}, {"oid": "6d1e18d8859903d4b809ef9d3b07e9d2fa9188b4", "committedDate": "2022-02-15 19:15:20 +0000", "message": "Updates for the developer dojo"}, {"oid": "cbe76a037ad31cac6182fb4fc6591f6be253faa4", "committedDate": "2022-02-15 19:42:14 +0000", "message": "Merge branch 'master' of https://github.com/odpi/egeria into egeria-code"}, {"oid": "55a890dac01fbad3bea86e155f07800dce7b5567", "committedDate": "2022-03-14 15:01:31 +0000", "message": "Add new dev status and update URLs (#6158, #6155)"}, {"oid": "6e98cb2c64e0cbe9974c5281efb6bb89374f1641", "committedDate": "2022-07-25 12:28:33 +0100", "message": "Minor typos, finals and javadoc"}, {"oid": "68f725973729ae89e361a652c9981f2ab6b6c5d7", "committedDate": "2022-08-15 09:31:40 +0100", "message": "Add extensions for sustainability"}, {"oid": "4abdba88ca002cfa57699a6f4a1c17c4f4f79616", "committedDate": "2022-08-24 10:02:12 +0100", "message": "Add Open Metadata Store Service"}, {"oid": "1da34a40060737064fdd974eac8b5a76cd242338", "committedDate": "2022-11-27 21:12:18 +0000", "message": "Add missing JavaDoc"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}]}, {"oid": "17c4faf68842a9a01a3d41252864be100ce78ab3", "url": "https://github.com/odpi/egeria/commit/17c4faf68842a9a01a3d41252864be100ce78ab3", "message": "#2577 change setters to use correct camel case from review feedback\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T20:53:37Z", "type": "commit"}, {"oid": "b6e52e58efecc40f4815d4fccb991777391a70ae", "url": "https://github.com/odpi/egeria/commit/b6e52e58efecc40f4815d4fccb991777391a70ae", "message": "#2577 revert formatting\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-14T21:43:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzI1Mg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380133252", "body": "I am not comfortable with merging the access service description with the view service description since they are very different types of service.", "bodyText": "I am not comfortable with merging the access service description with the view service description since they are very different types of service.", "bodyHTML": "<p dir=\"auto\">I am not comfortable with merging the access service description with the view service description since they are very different types of service.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:39:44Z", "path": "open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java", "diffHunk": "@@ -4,8 +4,8 @@\n \n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0ODI0Mg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380348242", "bodyText": "@mandy-chessell Ok I will revert.", "author": "davidradl", "createdAt": "2020-02-17T19:59:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzI1Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjY1MQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382006651", "bodyText": "fixed", "author": "davidradl", "createdAt": "2020-02-20T13:45:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzI1Mg=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex 092f001eb1..a1e12ec362 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -5,7 +5,7 @@ package org.odpi.openmetadata.accessservices.assetcatalog.admin;\n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;\n import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n \n /**\n  * AssetCatalogRegistration registers the access service with the OMAG Server administration services.\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex 092f001eb1..a1e12ec362 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -5,7 +5,7 @@ package org.odpi.openmetadata.accessservices.assetcatalog.admin;\n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;\n import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n \n /**\n  * AssetCatalogRegistration registers the access service with the OMAG Server administration services.\n", "next_change": {"commit": "4466abb4f4b446c34c5883f95aa5c5e4eaba025f", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex a1e12ec362..de96cd50b5 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -4,8 +4,8 @@ package org.odpi.openmetadata.accessservices.assetcatalog.admin;\n \n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;\n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n \n /**\n  * AssetCatalogRegistration registers the access service with the OMAG Server administration services.\n", "next_change": {"commit": "d8dbadedae9a2eb75d08c42be4aad1344bc03492", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex de96cd50b5..9c165b4e23 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -2,6 +2,8 @@\n /* Copyright Contributors to the ODPi Egeria project. */\n package org.odpi.openmetadata.accessservices.assetcatalog.admin;\n \n+import lombok.AccessLevel;\n+import lombok.NoArgsConstructor;\n import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex 9c165b4e23..e2a781f11c 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -4,9 +4,9 @@ package org.odpi.openmetadata.accessservices.assetcatalog.admin;\n \n import lombok.AccessLevel;\n import lombok.NoArgsConstructor;\n-import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n+import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistrationEntry;\n+import org.odpi.openmetadata.adminservices.registration.OMAGAccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceDescription;\n-import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n \n /**\n", "next_change": null}]}}, {"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex de96cd50b5..9c165b4e23 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -13,11 +15,9 @@ import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOpe\n  * then use this registration information as confirmation that there is an implementation of this\n  * access service in the server and it can be configured and used.\n  */\n+@NoArgsConstructor(access = AccessLevel.PRIVATE)\n class AssetCatalogRegistration {\n \n-    private AssetCatalogRegistration() {\n-    }\n-\n     /**\n      * Pass information about this access service to the OMAG Server administration services.\n      */\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\nindex 9c165b4e23..e2a781f11c 100644\n--- a/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n+++ b/open-metadata-implementation/access-services/asset-catalog/asset-catalog-server/src/main/java/org/odpi/openmetadata/accessservices/assetcatalog/admin/AssetCatalogRegistration.java\n", "chunk": "@@ -24,9 +24,9 @@ class AssetCatalogRegistration {\n     static void registerAccessService() {\n         AccessServiceDescription myDescription = AccessServiceDescription.ASSET_CATALOG_OMAS;\n \n-        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n-                                                                                 ServiceOperationalStatus.ENABLED,\n-                                                                                 AssetCatalogAdmin.class.getName());\n+        AccessServiceRegistrationEntry myRegistration = new AccessServiceRegistrationEntry(myDescription,\n+                                                                                           ServiceOperationalStatus.ENABLED,\n+                                                                                           AssetCatalogAdmin.class.getName());\n         OMAGAccessServiceRegistration.registerAccessService(myRegistration);\n     }\n }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "4466abb4f4b446c34c5883f95aa5c5e4eaba025f", "committedDate": "2020-03-24 18:00:39 +0200", "message": "Asset Catalog OMAS - changes in API model - from some services the return type was a list with a single elements. Those were changed to return more specific objects."}, {"oid": "d8dbadedae9a2eb75d08c42be4aad1344bc03492", "committedDate": "2021-04-15 11:39:16 +0300", "message": "Add Lombok to Asset Catalog"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzcxNA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380133714", "body": "layout", "bodyText": "layout", "bodyHTML": "<p dir=\"auto\">layout</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:40:53Z", "path": "open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java", "diffHunk": "@@ -24,8 +24,8 @@ public static void registerAccessService()\n     {\n         AccessServiceDescription myDescription = AccessServiceDescription.IT_INFRASTRUCTURE_OMAS;\n \n-        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n-                                                                                 AccessServiceOperationalStatus.ENABLED,\n+        ServiceRegistration myRegistration = new ServiceRegistration(myDescription,\n+                                                                                 ServiceOperationalStatus.ENABLED,", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjc5Ng==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382006796", "bodyText": "File no longer in the fix", "author": "davidradl", "createdAt": "2020-02-20T13:45:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzMzcxNA=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\nindex 69a59ab9db..a967d68f0e 100644\n--- a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n+++ b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n", "chunk": "@@ -24,7 +24,7 @@ public class ITInfrastructureRegistration\n     {\n         AccessServiceDescription myDescription = AccessServiceDescription.IT_INFRASTRUCTURE_OMAS;\n \n-        ServiceRegistration myRegistration = new ServiceRegistration(myDescription,\n+        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n                                                                                  ServiceOperationalStatus.ENABLED,\n                                                                                  ITInfrastructureAdmin.class.getName());\n         OMAGAccessServiceRegistration.registerAccessService(myRegistration);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\nindex 69a59ab9db..a967d68f0e 100644\n--- a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n+++ b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n", "chunk": "@@ -24,7 +24,7 @@ public class ITInfrastructureRegistration\n     {\n         AccessServiceDescription myDescription = AccessServiceDescription.IT_INFRASTRUCTURE_OMAS;\n \n-        ServiceRegistration myRegistration = new ServiceRegistration(myDescription,\n+        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n                                                                                  ServiceOperationalStatus.ENABLED,\n                                                                                  ITInfrastructureAdmin.class.getName());\n         OMAGAccessServiceRegistration.registerAccessService(myRegistration);\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\nindex a967d68f0e..0958f94d2b 100644\n--- a/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n+++ b/open-metadata-implementation/access-services/it-infrastructure/it-infrastructure-server/src/main/java/org/odpi/openmetadata/accessservices/itinfrastructure/server/ITInfrastructureRegistration.java\n", "chunk": "@@ -24,9 +24,9 @@ public class ITInfrastructureRegistration\n     {\n         AccessServiceDescription myDescription = AccessServiceDescription.IT_INFRASTRUCTURE_OMAS;\n \n-        AccessServiceRegistration myRegistration = new AccessServiceRegistration(myDescription,\n-                                                                                 ServiceOperationalStatus.ENABLED,\n-                                                                                 ITInfrastructureAdmin.class.getName());\n+        AccessServiceRegistrationEntry myRegistration = new AccessServiceRegistrationEntry(myDescription,\n+                                                                                           ServiceOperationalStatus.ENABLED,\n+                                                                                           ITInfrastructureAdmin.class.getName());\n         OMAGAccessServiceRegistration.registerAccessService(myRegistration);\n     }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDE4OQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134189", "body": "These changes are invalid - the description should be reverted to original values.", "bodyText": "These changes are invalid - the description should be reverted to original values.", "bodyHTML": "<p dir=\"auto\">These changes are invalid - the description should be reverted to original values.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:42:01Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -30,9 +30,9 @@\n  */\n public enum SubjectAreaErrorCode {\n     SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n-            \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n+            \"The remote server Platform root URL is null\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNjk1NQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382006955", "bodyText": "reverted", "author": "davidradl", "createdAt": "2020-02-20T13:46:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDE4OQ=="}], "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -30,9 +30,9 @@ import java.util.Arrays;\n  */\n public enum SubjectAreaErrorCode {\n     SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n-            \"The remote server Platform root URL is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG Server Platform root URL is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n     NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -30,9 +30,9 @@ import java.util.Arrays;\n  */\n public enum SubjectAreaErrorCode {\n     SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n-            \"The remote server Platform root URL is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG Server Platform root URL is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n     NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDUyNQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134525", "body": "The changes to the SERVER_NAME_NOT_SPECIFIED message are invalid - the message description should be reverted to original values.", "bodyText": "The changes to the SERVER_NAME_NOT_SPECIFIED message are invalid - the message description should be reverted to original values.", "bodyHTML": "<p dir=\"auto\">The changes to the SERVER_NAME_NOT_SPECIFIED message are invalid - the message description should be reverted to original values.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:42:49Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -308,10 +308,13 @@\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-\n+            \"The remote server name is null\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwODgzNw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382008837", "bodyText": "fixed", "author": "davidradl", "createdAt": "2020-02-20T13:49:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -308,11 +308,11 @@ public enum SubjectAreaErrorCode {\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The remote server name is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG server name is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n     UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",\n+            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n             \"The system is got unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n     OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -308,11 +308,11 @@ public enum SubjectAreaErrorCode {\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The remote server name is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG server name is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n     UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",\n+            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n             \"The system is got unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n     OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDY1MQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134651", "body": "Lower case 'E'", "bodyText": "Lower case 'E'", "bodyHTML": "<p dir=\"auto\">Lower case 'E'</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:43:05Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -308,10 +308,13 @@\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n-            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-\n+            \"The remote server name is null\",\n+            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n+            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n+            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNzE3NA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382007174", "bodyText": "amended", "author": "davidradl", "createdAt": "2020-02-20T13:46:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDY1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -308,11 +308,11 @@ public enum SubjectAreaErrorCode {\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The remote server name is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG server name is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n     UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",\n+            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n             \"The system is got unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n     OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -308,11 +308,11 @@ public enum SubjectAreaErrorCode {\n             \"The system is unable to process the request.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n     SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n-            \"The remote server name is null\",\n-            \"The system is unable to connect to the remote server to retrieve metadata properties.\",\n-            \"Ensure a valid remote server name is passed to the Subject Area OMAS when it is created.\"),\n+            \"The OMAG server name is null\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n     UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected exception occurred while processing method {0}. The Exception message is {1}.\",\n+            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n             \"The system is got unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n     OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDgwMg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134802", "body": "Please revert change - original text is correct", "bodyText": "Please revert change - original text is correct", "bodyHTML": "<p dir=\"auto\">Please revert change - original text is correct</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:43:29Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwOTcwNg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382009706", "bodyText": "done", "author": "davidradl", "createdAt": "2020-02-20T13:51:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDgwMg=="}], "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDg3OQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134879", "body": "Please revert change - original text is correct", "bodyText": "Please revert change - original text is correct", "bodyHTML": "<p dir=\"auto\">Please revert change - original text is correct</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:43:38Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDkzMA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380134930", "body": "Please revert change - original text is correct", "bodyText": "Please revert change - original text is correct", "bodyHTML": "<p dir=\"auto\">Please revert change - original text is correct</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:43:45Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n-            \"Verify that the OMAG server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNTAwOA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380135008", "body": "Please revert change - original text is correct", "bodyText": "Please revert change - original text is correct", "bodyHTML": "<p dir=\"auto\">Please revert change - original text is correct</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:43:55Z", "path": "open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java", "diffHunk": "@@ -323,18 +326,18 @@\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in OMAG Server {1}\",\n+            \"The requested connection {0} is not found in remote server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n-            \"Verify that the OMAG server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n+            \"Verify that the remote server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the remote server {1}\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 20106d5f1b..846851b63f 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -326,18 +326,18 @@ public enum SubjectAreaErrorCode {\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n     NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n-            \"The requested connection {0} is not found in remote server {1}\",\n+            \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the remote server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n     NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n-            \"The system is unable to create a connector because the remote server is not returning the Connection properties.\",\n-            \"Verify that the remote server running and the connection definition is correctly \" +\n+            \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n+            \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n     NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n-            \"The requested connector for connection named {0} is not returned by the remote server {1}\",\n+            \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n     NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n", "next_change": {"commit": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\nindex 846851b63f..7ee5d115c0 100644\n--- a/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n+++ b/open-metadata-implementation/access-services/subject-area/subject-area-api/src/main/java/org/odpi/openmetadata/accessservices/subjectarea/ffdc/SubjectAreaErrorCode.java\n", "chunk": "@@ -28,452 +30,315 @@ import java.util.Arrays;\n  * <li>UserAction - describes how a SubjectAreaInterface should correct the error</li>\n  * </ul>\n  */\n-public enum SubjectAreaErrorCode {\n-    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001 \",\n+public enum SubjectAreaErrorCode implements ExceptionMessageSet {\n+    SERVER_URL_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-001\",\n             \"The OMAG Server Platform root URL is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server url was not specified.\",\n             \"Ensure a valid OMAG Server Platform root URL is passed to the Subject Area OMAS when it is created.\"),\n-    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002 \",\n+    NULL_USER_ID(400, \"OMAS-SUBJECT-AREA-400-002\",\n             \"The user identifier (user id) passed on the {0} operation is null\",\n             \"The system is unable to process the request without a user id.\",\n             \"Correct the code in the caller to provide the user id.\"),\n-    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003 \",\n-            \"The unique identifier (guid) passed on the {0} parameter of the {1} operation is null\",\n-            \"The system is unable to process the request without a guid.\",\n-            \"Correct the code in the caller to provide the guid.\"),\n-    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004 \",\n+    NULL_GUID(400, \"OMAS-SUBJECT-AREA-400-003\",\n+            \"The unique identifier (userId) passed on the {0} parameter of the {1} operation is null\",\n+            \"The system is unable to process the request without a userId.\",\n+            \"Correct the code in the caller to provide the userId.\"),\n+    NULL_NAME(400, \"OMAS-SUBJECT-AREA-400-004\",\n             \"The name passed on the {0} parameter of the {1} operation is null\",\n             \"The system is unable to process the request without a name.\",\n             \"Correct the code in the caller to provide the name.\"),\n-    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005 \",\n-            \"The unique identifier (guid) {0} passed on the {1} operation does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a guid that exists on the metadata server.\"),\n-    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006 \",\n+    GUID_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-005\",\n+            \"The unique identifier (userId) {0} passed on the {1} operation does not exist in the metadata repository\",\n+            \"The system is unable to process the request without a userId that exists.\",\n+            \"Correct the code in the caller to provide a userId that exists on the metadata server.\"),\n+    USER_NOT_AUTHORIZED(400, \"OMAS-SUBJECT-AREA-400-006\",\n             \"User {0} is not authorized to issue the {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n             \"The system is unable to process the request.\",\n             \"Verify the access rights of the user.\"),\n-    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007 \",\n+    METADATA_SERVER_UNCONTACTABLE_ERROR(400, \"OMAS-SUBJECT-AREA-400-007\",\n             \"An unexpected error with message {0} was returned by the property org.odpi.openmetadata.accessservices.subjectarea.server during {1} request for open metadata access service {2} on org.odpi.openmetadata.accessservices.subjectarea.server {3}\",\n-            \"The system is unable to process the request.\",\n-            \"Verify the access rights of the user.\"),\n-\n-    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008 \",\n+            \"The system is unable to process the request as the metadata server in not contactable.\",\n+            \"Contact your admin to correct configuration to enable the Metadata server to be contacted.\"),\n+    CREATE_WITHOUT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-008\",\n             \"Cannot continue with create without a glossary processing request {0}\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request as the create requires a Glossary to be passed.\",\n             \"Correct the code in the caller to create with a glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009 \",\n+    GLOSSARY_TERM_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-009\",\n             \"Cannot create a Term without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a term create request without a name.\",\n             \"Correct the code in the caller to create a Term with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010 \",\n+    GLOSSARY_CATEGORY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-010\",\n             \"Cannot create a Category without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a category create request without a name.\",\n             \"Correct the code in the caller to create a Category with a name.\"),\n-    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011 \",\n+    GLOSSARY_TERM_CREATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-011\",\n             \"Cannot create a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process a Term create request specifying categories.\",\n             \"Correct the code in the caller to remove the categories. Knit the term into categories after it has been created.\"),\n-    GLOSSARY_TERM_CREATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-012 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013 \",\n+    GLOSSARY_TERM_UPDATE_WITH_CATEGORIES(400, \"OMAS-SUBJECT-AREA-400-013\",\n             \"Cannot update a Glossary Term {0} with categories\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to update a term with categories .\",\n             \"Correct the code in the caller to remove the categories.\"),\n-    GLOSSARY_TERM_UPDATE_WITH_ASSETS(400, \"OMAS-SUBJECT-AREA-400-014 \",\n-            \"Cannot create a Glossary Term {0} with assets\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the assets.\"),\n-    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015 \",\n+    GLOSSARY_PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-015\",\n             \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to create a glossary project without a name.\",\n             \"Correct the code in the caller to create a Project with a name.\"),\n-    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016 \",\n+    INVALID_PROJECT_DELETION(400, \"OMAS-SUBJECT-AREA-400-016\",\n             \"Cannot delete Project as it was not intended for glossary use.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to delete Glossary Projects.\"),\n-    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017 \",\n-            \"Glossary relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018 \",\n-            \"Glossary with guid {0} does not exist. Cannot create without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid glossary.\"),\n-    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019 \",\n+            \"The system is unable to delete a project that is not a glossary project.\",\n+            \"Correct the code in the caller to only delete Glossary Projects.\"),\n+    CREATE_WITH_GLOSSARY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-017\",\n+            \"Glossary relationship with userId {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n+            \"The system is unable to proceed with the create request, as it has unexpectly found a relationship to a glossary already exists.\",\n+            \"Raise a Git issue indicating that OMAS-SUBJECT-AREA-400-017 has been issued.\"),\n+    CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-018\",\n+            \"Glossary with userId {0} does not exist. Cannot create without a glossary\",\n+            \"The system is unable to process create request as the supplied glossary userId does not exist.\",\n+            \"Correct the code in the caller to create with a valid glossary userId.\"),\n+    GLOSSARY_TERM_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-019\",\n             \"Cannot create a Glossary Term {0} with projects\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term create request with projects.\",\n             \"Correct the code in the caller to remove the projects. Knit the term into a project after the term has been created.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021 \",\n+//    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-020\",\n+//            \"Glossary with name {0} does not exist. Cannot create a Category without a glossary\",\n+//            \"The system is unable to process the request.\",\n+//            \"Correct the code in the caller to create a Category with a valid glossaryName.\"),\n+    GLOSSARY_TERM_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-021\",\n             \"Term creation with name {0} failed, because it was unable to create its classifications\",\n             \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022 \",\n+            \"Retry the Glossary Term creation with correct classifications.\"),\n+    GLOSSARY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-022\",\n             \"Glossary creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary and is unable to process the request.\",\n-            \"Retry the Glossary creation.\"),\n-    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023 \",\n-            \"Glossary (guid {0}) deletion failed, because there is glossary content\",\n-            \"The system is unable to process the request.\",\n+            \"The system has deleted the Glossary and is unable to process the requested classifications.\",\n+            \"Retry the Glossary creation with valid classifications.\"),\n+    GLOSSARY_CONTENT_PREVENTED_DELETE(400, \"OMAS-SUBJECT-AREA-400-023\",\n+            \"Glossary (userId {0}) deletion failed, because there is glossary content\",\n+            \"The system is unable to process the glossary delete becase the glossary has content.\",\n             \"Retry the Glossary deletion when it is is empty.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024 \",\n+    GLOSSARY_CATEGORY_CREATE_FAILED_ADDING_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-024\",\n             \"Category creation with name {0} failed, because it was unable to create its classifications\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025 \",\n+            \"The system has deleted the Glossary category and is unable to add the requested classifications .\",\n+            \"Retry the Glossary Category creation with valid classifications.\"),\n+    GLOSSARY_CATEGORY_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-025\",\n             \"Glossary Category creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary category and is unable to process the request.\",\n-            \"Retry the Glossary Category creation.\"),\n-    GLOSSARY_CATEGORY_CREATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-026 \",\n-            \"Category creation with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category creation with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_CATEGORY_NAME_ALREADY_USED(400, \"OMAS-SUBJECT-AREA-400-027 \",\n-            \"Category update with name {0} failed, because the requested name was already present in a sibling category under the categories parent\",\n-            \"The system is unable to process the request.\",\n-            \"Retry the Glossary Category update with a name that does not match a sibling categories name.\"),\n-    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028 \",\n+            \"The system has deleted the Glossary category and is unable to create a relationship to the requested glossary.\",\n+            \"Retry the Glossary Category creation with a valid glossary.\"),\n+    CATEGORY_UPDATE_FAILED_ON_DELETED_CATEGORY(400, \"OMAS-SUBJECT-AREA-400-028\",\n             \"Glossary Category update with failed, because the category has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Category update request - becase the category has already been deleted..\",\n             \"Retry the Glossary Category update against a category that has not been deleted.\"),\n-    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029 \",\n+    GLOSSARY_UPDATE_FAILED_ON_DELETED_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-029\",\n             \"Glossary update with failed, because the glossary has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the glossary update request, because the glossary has been deleted..\",\n             \"Retry the Glossary update against a glossary that has not been deleted.\"),\n-    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030 \",\n+    TERM_UPDATE_FAILED_ON_DELETED_TERM(400, \"OMAS-SUBJECT-AREA-400-030\",\n             \"Term update with failed, because the term has been deleted.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Term update request, because the Term has been deleted.\",\n             \"Retry the term update against a term that has not been deleted.\"),\n-    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031 \",\n+    TYPEDEF_NOT_KNOWN(400, \"OMAS-SUBJECT-AREA-400-031\",\n             \"A request {0} has been made for type {1} which is not known.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request with an unknown TypeDef\",\n             \"Look into whether the typename was correctly specified.\"),\n-    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032 \",\n+    TYPEDEF_ERROR(400, \"OMAS-SUBJECT-AREA-400-032\",\n             \"An error occurred when processing a request {0}; the instance is not associated with a known type.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033 \",\n+            \"The system is unable to process the request as there was an error associated with the requested type.\",\n+            \"Correct the call so that the Typedef is well valid.\"),\n+    ENTITY_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-033\",\n             \"An error occurred when processing a request {0} involving entity {1}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the entity was not known.\",\n             \"Retry the request with a known entity.\"),\n-    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034 \",\n+    RELATIONSHIP_NOT_KNOWN_ERROR(400, \"OMAS-SUBJECT-AREA-400-034\",\n             \"An error occurred when processing a request {0}  involving relationship {1} .\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request for the relationship, because it is not known.\",\n             \"Retry the request with a known relationship.\"),\n \n \n     // The following Exceptions are not descriptive enough - they need more information from the OMRS Exception\n-    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035 \",\n+    INVALID_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-035\",\n             \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to an invalid parameter.\",\n             \"Please correct the parameter and retry.\"),\n-    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036 \",\n-            \"Invalid parameter processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+    CLASSIFICATION_ERROR(400, \"OMAS-SUBJECT-AREA-400-036\",\n+            \"Invalid classification processing request {0}.\",\n+            \"The system is unable to process the request due to a classification error.\",\n             \"Please correct the classification and retry.\"),\n-    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037 \",\n+    STATUS_NOT_SUPPORTED_ERROR(400, \"OMAS-SUBJECT-AREA-400-037\",\n             \"Status not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request because the requested status is not supported\",\n             \"Please correct the status and retry.\"),\n-    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038 \",\n+    FUNCTION_NOT_SUPPORTED(400, \"OMAS-SUBJECT-AREA-400-038\",\n             \"Function not supported occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request, as the requested function is not supported.\",\n             \"Please so not use this function as it is unsupported.\"),\n-    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039 \",\n+    PAGING_ERROR(400, \"OMAS-SUBJECT-AREA-400-039\",\n             \"Paging error occurred processing request {0}.\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the request due to a paging error.\",\n             \"Please retry the request with different paging options.\"),\n     // End of The following Exception\n \n-    WRONG_TYPENAME(400, \"OMAS-SUBJECT-AREA-400-040 \",\n-            \"The type name {0} is not of the expected type {1}\",\n-            \"The system is unable to populate the requested connection object.\",\n-            \"Amend the request to refer to an appropriate typename.\"),\n-    GLOSSARY_NAME_DOES_NOT_EXIST(400, \"OMAS-SUBJECT-AREA-400-041 \",\n-            \"The glossary name {0}  does not exist in the metadata repository\",\n-            \"The system is unable to process the request without a guid that exists.\",\n-            \"Correct the code in the caller to provide a glossary name that exists on the metadata server.\"),\n-    GOVERNANCE_CLASSIFICATION_SUPPLIED_IN_CLASSIFICATIONS(400, \"OMAS-SUBJECT-AREA-400-042 \",\n-            \"The goverance action classification {0} has been supplied with classifications\",\n-            \"The system is unable to process the request with the classification supplied this way.\",\n-            \"Correct the code in the caller to provide the {0} in the {0} field.\"),\n-    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043 \",\n+\n+    CLIENT_RECEIVED_AN_UNEXPECTED_RESPONSE_ERROR(400, \"OMAS-SUBJECT-AREA-400-043\",\n             \"Received unexpected response category {0} from the server.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    CLIENT_INPUT_PARAMETER_COULD_NOT_BE_PROCESSED(400, \"OMAS-SUBJECT-AREA-400-0044 \",\n-            \"The input parameter {0} could not be processed\",\n-            \"The system is unable to process the request with invalid parameters.\",\n-            \"Investigate why the input parameter is not valid (cannot be serialised to json).\"),\n-    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045 \",\n+            \"The system is unable to process the request as it has received an unexpected error response.\",\n+            \"Contact your administrator to review the audit log to find the cause of the unexpected error.\"),\n+\n+    INVALID_STATUS_VALUE_SUPPLIED(400, \"OMAS-SUBJECT-AREA-400-0045\",\n             \"A status value {0} was supplied - but this is not a valid status\",\n             \"The system is unable to process the request with invalid parameters.\",\n             \"Correct the code in the caller to provide a valid status.\"),\n-    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046 \",\n+    STATUS_UPDATE_TO_DELETED_NOT_ALLOWED(400, \"OMAS-SUBJECT-AREA-400-0046\",\n             \"A status was attempted to be updated to deleted, this is not permitted.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request to change the status to deleted.\",\n             \"Correct the code in the caller to provide a valid status. Use delete call to change status to deleted.\"),\n-    GLOSSARY_TERM_CREATE_FAILED_KNITTING_TO_GLOSSARY(400, \"OMAS-SUBJECT-AREA-400-047 \",\n-            \"Term creation with name {0} failed, because it was unable to create the relationship with its Glossary\",\n-            \"The system has deleted the Glossary term and is unable to process the request.\",\n-            \"Retry the Glossary Term creation.\"),\n-    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048 \",\n+\n+    GUID_NOT_PURGED_ERROR(400, \"OMAS-SUBJECT-AREA-400-048\",\n             \"Guid {0} was not deleted.\",\n-            \"The system is unable to process the request.\",\n-            \"Contact your administrator to review the audit log to find the cause of the error.\"),\n-    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049 \",\n+            \"The system is unable to process to delete the userId.\",\n+            \"Contact your administrator to review the audit log to find the cause of why this userId cannot be deleted.\"),\n+    GLOSSARY_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-049\",\n             \"Cannot create a Glossary without a name\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the Glossary create request without a name.\",\n             \"Correct the code in the caller to create a Glossary with a name.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_NAME(400, \"OMAS-SUBJECT-AREA-400-050 \",\n-            \"Glossary with name {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossaryName.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_GLOSSARY_GUID(400, \"OMAS-SUBJECT-AREA-400-051 \",\n-            \"Glossary with guid {0} does not exist. Cannot create a Glossary Category without a glossary\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Glossary Category with a valid glossary.\"),\n-    CREATE_WITH_CATEGORY_RELATIONSHIP(400, \"OMAS-SUBJECT-AREA-400-052 \",\n-            \"Category relationship with guid {0} supplied on a create. The relationship cannot exist prior to the relationship end being created.\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category.\"),\n-    CREATE_WITH_NON_EXISTANT_CATEGORY_GUID(400, \"OMAS-SUBJECT-AREA-400-053 \",\n-            \"Category with guid {0} does not exist. Cannot create without a valid category guid\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create with a valid category guid.\"),\n-    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054 \",\n+\n+    UNABLE_TO_PARSE_SUPPLIED_JSON(400, \"OMAS-SUBJECT-AREA-400-0054\",\n             \"Unable to parse the supplied json.\",\n-            \"The system is unable to process the request with invalid parameters.\",\n+            \"The system is unable to process the request because it cannot parse the json.\",\n             \"Correct the code in the caller to provide a valid json.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_NON_EXISTANT_PARENT(400, \"OMAS-SUBJECT-AREA-400-055 \",\n-            \"Glossary category parent with guid {0} cannot be found. Cannot create a Category without a parent\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Category with a valid category parent.\"),\n-    GLOSSARY_CATEGORY_CREATE_WITH_PROJECTS(400, \"OMAS-SUBJECT-AREA-400-056 \",\n-            \"Cannot create a Category {0} with projects\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to remove the projects. Knit the category into a project after the category has been created.\"),\n-    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057 \",\n+    INVALID_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-057\",\n             \"The nodeType passed is not valid for this operation\",\n-            \"The system is unable to process the request without a node type.\",\n+            \"The system is unable to process the request with an invalid node type.\",\n             \"Correct the code in the caller to provide a valid NodeType\"),\n-    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058 \",\n-            \"The returned nodeType {0} did not equal the requested nodeType {1} \",\n-            \"The system returned an invalid node type  in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    INVALID_RELATIOMSHIP_GUID_WRONG_TYPE(400, \"OMAS-SUBJECT-AREA-400-059 \",\n-            \"A get was issued for a relationship with guid {0}. The returned relationship was not of the required type {1} \",\n-            \"The system returned an invalid node type in the response.\",\n-            \"Raising a github issue on the system.\"),\n-    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060 \",\n-            \"A restore was issued for guid {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n+    UNEXPECTED_NODETYPE(400, \"OMAS-SUBJECT-AREA-400-058\",\n+            \"The returned nodeType {0} did not equal the requested nodeType {1}\",\n+            \"The system returned an unexpected node type in the response.\",\n+            \"Raise a github issue on the system indicating that you received message OMAS-SUBJECT-AREA-400-058.\"),\n+\n+    GUID_NOT_DELETED_ERROR(400, \"OMAS-SUBJECT-AREA-400-060\",\n+            \"A restore was issued for userId {0}, but the status was not deleted. Restores can only succeed after a soft delete.\",\n             \"The system returns the not deleted response.\",\n-            \"Soft delete prior to attempting a restore.\"),\n-    PAST_EFFECTIVE_TO_DATE(400, \"OMAS-SUBJECT-AREA-400-061 \",\n-            \"The effective to date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    PAST_EFFECTIVE_FROM_DATE(400, \"OMAS-SUBJECT-AREA-400-062 \",\n-            \"The effective from date passed on the {0} operation is in the past\",\n-            \"The system is unable to process the request that requests the effective date begins in the past.\",\n-            \"Correct the code in the caller to either not use the effective To date or use an effective date in the future.\"),\n-    INCORRECT_EFFECTIVE_DATE_RANGE(400, \"OMAS-SUBJECT-AREA-400-063 \",\n-            \"The supplied effectivity Date range is incorrect, as it starts after it ends on the {0} operation\",\n-            \"The system is unable to process a request with an incorrect effectivity range.\",\n-            \"Correct the code in the caller to either not use the effectivity dates or to ensure the from is before the to Date.\"),\n-    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064 \",\n+            \"Issue a soft delete prior to attempting a restore.\"),\n+    ERROR_ENCODING_QUERY_PARAMETER(400, \"OMAS-SUBJECT-AREA-400-064\",\n             \"An error occurred when attempting to encode the value of Query parameter {0}\",\n             \"The client is unable to send the rest call as the supplied query parameter {0} cannot be encoded.\",\n             \"Correct the code in the caller to supply a query parameter that can be encoded.\"),\n-    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065 \",\n-            \"An error occurred because guid {0} has type {1} but was expected to have type {2} , \",\n-            \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to appropriate type.\"),\n-    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066 \",\n-            \"An error occurred because guid {0} is not a {1} so the Relationship cannot be mapped to a {1} , \",\n+    MAPPER_ENTITY_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-065\",\n+            \"An error occurred because userId {0} has type {1} but was expected to have type {2} ,\",\n             \"The server is unable to continue the call.\",\n-            \"Correct the code in the caller to supply a guid that corresponds to type {1}.\"),\n-    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067 \",\n+            \"Correct the code in the caller to supply a userId that corresponds to appropriate type.\"),\n+    MAPPER_RELATIONSHIP_GUID_TYPE_ERROR(400, \"OMAS-SUBJECT-AREA-400-066\",\n+            \"An error occurred because userId {0} is not a {1} so the Relationship cannot be mapped to a {1} ,\",\n+            \"The server is unable to continue the call as the supplied relationship userId is not associated with the expected type.\",\n+            \"Correct the code in the caller to supply a userId that corresponds to relationship type {1}.\"),\n+    LINE_UPDATE_ATTEMPTED_WITH_NO_PROPERTIES(400, \"OMAS-SUBJECT-AREA-400-067\",\n             \"Cannot update a Line if no properties are supplied\",\n-            \"The system is unable to process the request.\",\n+            \"The system is unable to process the line update request as no properties were supplied.\",\n             \"Correct the code in the caller to only issue updates if there is something to update.\"),\n-    PROJECT_CREATE_WITHOUT_NAME(400, \"OMAS-SUBJECT-AREA-400-068 \",\n-            \"Cannot create a Project without a name\",\n-            \"The system is unable to process the request.\",\n-            \"Correct the code in the caller to create a Project with a name.\"),\n-    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069 \",\n+    SERVER_NAME_NOT_SPECIFIED(400, \"OMAS-SUBJECT-AREA-400-069\",\n             \"The OMAG server name is null\",\n-            \"The system is unable to connect to the OMAG Server to retrieve metadata properties.\",\n+            \"The system is unable to connect to the OMAG Server to retrieve metadata properties as the server name was not specified.\",\n             \"Ensure a valid OMAG Server name is passed to the Subject Area OMAS when it is created.\"),\n-    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070 \",\n-            \"An unexpected Exception occurred while processing method {0}. The Exception message is {1}.\",\n-            \"The system is got unexpected exception.\",\n+    UNEXPECTED_EXCEPTION(400, \"OMAS-SUBJECT-AREA-400-070\",\n+            \"An unexpected Exception occurred. The Exception message is {1}.\",\n+            \"The system encountered an unexpected exception.\",\n             \"Review the exception message to assess whether this is a logic error (in which case raise a git issue against Egeria, or a resource constraint - in which case address that issue.\"),\n-    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001 \",\n+    BAD_OUT_TOPIC_CONNECTION(400, \"OMAS-SUBJECT-AREA-400-071\",\n+            \"The Subject Area Open Metadata Access Service (OMAS) has been passed an invalid connection for publishing events.  The connection was {0}.  The resulting exception of {1} included the following message: {2}\",\n+            \"The access service has not been passed valid configuration for its out topic connection.\",\n+            \"Correct the topic configuration and restart the service.\"),\n+    OMRS_NOT_INITIALIZED(404, \"OMAS-SUBJECT-AREA-404-001\",\n             \"The open metadata repository services are not initialized for the {0} operation\",\n             \"The system is unable to connect to the open metadata property server.\",\n             \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002 \",\n+    OMRS_NOT_AVAILABLE(404, \"OMAS-SUBJECT-AREA-404-002\",\n             \"The open metadata repository services are not available for the {0} operation\",\n             \"The system is unable to connect to the open metadata server.\",\n-            \"Check that the server where the Subject Area OMAS is running initialized correctly.\" +\n+            \"Check that the server where the Subject Area OMAS is running initialized OMRS correctly.\" +\n                     \"Correct any errors discovered and retry the request when the open metadata services are available.\"),\n-    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003 \",\n+    NO_METADATA_COLLECTION(404, \"OMAS-SUBJECT-AREA-404-003\",\n             \"The requested connection {0} is not found in OMAG Server {1}\",\n             \"The system is unable to populate the requested connection object.\",\n-            \"Check that the connection name and the OMAG Server Platform URL is correct.  Retry the request when the connection is available in the\" +\n+            \"Check that the connection name and the OMAG Server Platform URL is correct. Retry the request when the connection is available in the\" +\n                                    \" OMAS Service\"),\n \n-    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001 \",\n+    NULL_CONNECTION_RETURNED(500, \"OMAS-SUBJECT-AREA-500-001\",\n             \"The requested connection named {0} is not returned by the open metadata Server {1}\",\n             \"The system is unable to create a connector because the OMAG Server is not returning the Connection properties.\",\n             \"Verify that the OMAG server running and the connection definition is correctly \" +\n                                      \"configured.\"),\n-    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002 \",\n+    NULL_CONNECTOR_RETURNED(500, \"OMAS-SUBJECT-AREA-500-002\",\n             \"The requested connector for connection named {0} is not returned by the OMAG Server {1}\",\n             \"The system is unable to create a connector.\",\n             \"Verify that the server is running and the connection definition is correctly configured.\"),\n-    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001 \",\n+    NULL_RESPONSE_FROM_API(503, \"OMAS-SUBJECT-AREA-503-001\",\n             \"A null response was received from REST API call {0} to server {1}\",\n             \"The system has issued a call to an open metadata access service REST API in a remote server and has received a null response.\",\n             \"Look for errors in the remote server's audit log and console to understand and correct the source of the error.\"),\n-    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002 \",\n+    CLIENT_SIDE_REST_API_ERROR(503, \"OMAS-SUBJECT-AREA-503-002\",\n             \"A client-side exception was received from API call {0} to repository {1}.  The error message was {2}\",\n             \"The server has issued a call to the open metadata access service REST API in a remote server and has received an exception from the local client libraries.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error. This could be due to the url being incorrect or the server not being up.\"),\n-    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003 \",\n+    CLIENT_SIDE_API_REST_RESPONSE_ERROR(503, \"OMAS-SUBJECT-AREA-503-003\",\n             \"The rest call successfully completed, but the response content could not be interpreted for API call {0} to repository {1}.  The error message was {2}\",\n             \"REST API in a remote server completed, but the response returned was not as expected.\",\n             \"Look for errors in the local server's console to understand and correct the source of the error.\"),\n-    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004 \",\n+    SERVICE_NOT_INITIALIZED(504, \"OMAS-SUBJECT-AREA-503-004\",\n             \"The access service has not been initialized and can not support REST API call {0}\",\n             \"The server has received a call to one of its open metadata access services but is unable to process it because the access service is \" +\n                                     \"not active.\",\n             \"If the server is supposed to have this access service activated, correct the server configuration and restart the server.\")\n     ;\n+    private static final long    serialVersionUID = 1L;\n \n-    private int httpErrorCode;\n-    private String errorMessageId;\n-    private String errorMessage;\n-    private String systemAction;\n-    private String userAction;\n-\n-    private static final Logger log = LoggerFactory.getLogger(SubjectAreaErrorCode.class);\n+    private ExceptionMessageDefinition messageDefinition;\n \n \n     /**\n-     * The constructor for SubjectAreaErrorCode expects to be passed one of the enumeration rows defined in\n-     * SubjectAreaErrorCode above.   For example:\n-     * <p>\n-     * SubjectAreaErrorCode   errorCode = SubjectAreaErrorCode.ASSET_NOT_FOUND;\n-     * <p>\n-     * This will expand out to the 5 parameters shown below.\n+     * The constructor for AssetConsumerErrorCode expects to be passed one of the enumeration rows defined in\n+     * AssetConsumerErrorCode above.   For example:\n      *\n-     * @param newHTTPErrorCode  - error code to use over REST calls\n-     * @param newErrorMessageId - unique Id for the message\n-     * @param newErrorMessage   - text for the message\n-     * @param newSystemAction   - description of the action taken by the system when the error condition happened\n-     * @param newUserAction     - instructions for resolving the error\n-     */\n-    SubjectAreaErrorCode(int newHTTPErrorCode, String newErrorMessageId, String newErrorMessage, String newSystemAction, String newUserAction) {\n-        this.httpErrorCode = newHTTPErrorCode;\n-        this.errorMessageId = newErrorMessageId;\n-        this.errorMessage = newErrorMessage;\n-        this.systemAction = newSystemAction;\n-        this.userAction = newUserAction;\n-    }\n-\n-\n-    public int getHTTPErrorCode() {\n-        return httpErrorCode;\n-    }\n-\n-\n-    /**\n-     * Returns the unique identifier for the error message.\n+     *     AssetConsumerErrorCode   errorCode = AssetConsumerErrorCode.SERVER_NOT_AVAILABLE;\n      *\n-     * @return errorMessageId\n-     */\n-    public String getErrorMessageId() {\n-        return errorMessageId;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with placeholders for specific details.\n-     *\n-     * @return errorMessage (unformatted)\n-     */\n-    public String getUnformattedErrorMessage() {\n-        return errorMessage;\n-    }\n-\n-\n-    /**\n-     * Returns the error message with the placeholders filled out with the supplied parameters.\n-     *\n-     * @param params - strings that plug into the placeholders in the errorMessage\n-     * @return errorMessage (formatted with supplied parameters)\n-     */\n-    public String getFormattedErrorMessage(String... params) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"<== SubjectAreaErrorCode.getMessage(%s)\", Arrays.toString(params)));\n-        }\n-\n-        MessageFormat mf = new MessageFormat(errorMessage);\n-        String result = mf.format(params);\n-\n-        if (log.isDebugEnabled()) {\n-            log.debug(String.format(\"==> SubjectAreaErrorCode.getMessage(%s): %s\", Arrays.toString(params), result));\n-        }\n-\n-        return result;\n-    }\n-\n-\n-    /**\n-     * Returns a description of the action taken by the system when the condition that caused this exception was\n-     * detected.\n+     * This will expand out to the 5 parameters shown below.\n      *\n-     * @return systemAction\n+     * @param httpErrorCode   error code to use over REST calls\n+     * @param errorMessageId   unique Id for the message\n+     * @param errorMessage   text for the message\n+     * @param systemAction   description of the action taken by the system when the error condition happened\n+     * @param userAction   instructions for resolving the error\n      */\n-    public String getSystemAction() {\n-        return systemAction;\n+    SubjectAreaErrorCode(int  httpErrorCode, String errorMessageId, String errorMessage, String systemAction, String userAction)\n+    {\n+        this.messageDefinition = new ExceptionMessageDefinition(httpErrorCode,\n+                                                                errorMessageId,\n+                                                                errorMessage,\n+                                                                systemAction,\n+                                                                userAction);\n     }\n \n \n     /**\n-     * Returns instructions of how to resolve the issue reported in this exception.\n+     * Retrieve a message definition object for an exception.  This method is used when there are no message inserts.\n      *\n-     * @return userAction\n+     * @return message definition object.\n      */\n-    public String getUserAction() {\n-        return userAction;\n+    public ExceptionMessageDefinition getMessageDefinition()\n+    {\n+        return messageDefinition;\n     }\n \n \n     /**\n-     * JSON-style toString\n+     * Retrieve a message definition object for an exception.  This method is used when there are values to be inserted into the message.\n      *\n-     * @return string of property names and values for this enum\n+     * @param params array of parameters (all strings).  They are inserted into the message according to the numbering in the message text.\n+     * @return message definition object.\n      */\n-    @Override\n-    public String toString()\n+    public ExceptionMessageDefinition getMessageDefinition(String... params)\n     {\n-        return \"SubjectAreaErrorCode{\" +\n-                \"httpErrorCode=\" + httpErrorCode +\n-                \", errorMessageId='\" + errorMessageId + '\\'' +\n-                \", errorMessage='\" + errorMessage + '\\'' +\n-                \", systemAction='\" + systemAction + '\\'' +\n-                \", userAction='\" + userAction + '\\'' +\n-                '}';\n+        messageDefinition.setMessageParameters(params);\n+\n+        return messageDefinition;\n     }\n }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "337e20b66a0b991176b1dfff8a36ca2d0b85f5a7", "committedDate": "2020-05-16 10:23:53 +0100", "message": "#3061 correct refferences to asset consumer in subject area code"}, {"oid": "6c150eaa94a4339c51760b357cae1ffe3decf3b1", "committedDate": "2020-05-21 16:39:22 +0100", "message": "#3061 create topic for subject area and use MessageDefinitions for messages for subject area omas and glossary view omvs"}, {"oid": "3a58504c9b2d01cd2a884e562bc374d1e654e9ae", "committedDate": "2020-06-04 12:05:24 +0100", "message": "#3123 add spring connector to the subject area omas"}, {"oid": "29aae10d30c3ecdae0143594268cb8c14bad0f82", "committedDate": "2020-06-08 09:52:19 +0100", "message": "#3123 fixup code to allow FVT and subject area definition sample to work"}, {"oid": "7f6907cd7ce15b6bc3ea3d18add53efbdf1afc85", "committedDate": "2020-06-22 11:20:10 +0300", "message": "Change standard exception in OMRSAPIHepler"}, {"oid": "9073d1937ebb9ede0f073d979c40f6ab46698181", "committedDate": "2020-06-23 12:49:55 +0300", "message": "Fix exceptions"}, {"oid": "434ee3eda01ff0637391c473313ab838f15b0ad2", "committedDate": "2020-06-23 13:43:54 +0300", "message": "fix my mistake"}, {"oid": "5a9c937d9e4f216562031f4677184041d61cfac2", "committedDate": "2020-09-22 12:17:04 +0300", "message": "# Added error code."}, {"oid": "a0389d36af116d09e6de5aa2984d585c4b2e9c67", "committedDate": "2020-09-29 22:18:16 +0100", "message": "Add Glossary Author breadcrumb view service"}, {"oid": "f975e4f6570399556a5e83c6c3d7a3d311a117bf", "committedDate": "2020-10-06 14:07:20 +0100", "message": "git3753 add in basic categories support"}, {"oid": "8ab69135f24dce86cb6abc6cc179e1088d854697", "committedDate": "2020-11-05 10:25:46 +0000", "message": "#4057 add term and categoray search ages, fix corresponding server side API find calls"}, {"oid": "c640b87ed119878c4c819e55194253d84e1b38aa", "committedDate": "2021-03-18 16:08:56 +0000", "message": "#4923 change Line to Relationship in Subject Area OMAS"}, {"oid": "f93b58e3f41b96ae6c994ed950c307925e4f5d3e", "committedDate": "2021-03-29 10:39:06 +0100", "message": "#4916 add read only indicator to subject area"}, {"oid": "e6d706d71f196879a468bf6da5d8cffb0262e5b5", "committedDate": "2021-06-17 16:18:27 +0100", "message": "#5305 add unit test"}, {"oid": "30f9595e21c00e29b9380d74364aa797b0ea85a0", "committedDate": "2021-07-08 14:29:37 +0100", "message": "#5399 remove purge"}, {"oid": "b53355debb933b3d74e15288ff9248cc203f35c5", "committedDate": "2021-07-26 16:00:08 +0100", "message": "#5399 remove provenance tests"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "aeaaa082e5d316207241b0d937a9551f6de411c9", "committedDate": "2022-03-27 09:33:10 +0100", "message": "Improve error message test"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNjg5OA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380136898", "body": "This name change seems unhelpful", "bodyText": "This name change seems unhelpful", "bodyHTML": "<p dir=\"auto\">This name change seems unhelpful</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:48:52Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java", "diffHunk": "@@ -79,16 +78,16 @@ public AccessServiceConfig(AccessServiceConfig  template)\n      *\n      * @param accessServiceRegistration fixed properties about the access service\n      */\n-    public AccessServiceConfig(AccessServiceRegistration accessServiceRegistration)\n+    public AccessServiceConfig(ServiceRegistration accessServiceRegistration)\n     {\n-        this.accessServiceId = accessServiceRegistration.getAccessServiceCode();\n-        this.accessServiceName = accessServiceRegistration.getAccessServiceName();\n-        this.accessServiceFullName = accessServiceRegistration.getAccessServiceFullName();\n-        this.accessServiceURLMarker = accessServiceRegistration.getAccessServiceURLMarker();\n-        this.accessServiceAdminClass = accessServiceRegistration.getAccessServiceAdminClassName();\n-        this.accessServiceDescription = accessServiceRegistration.getAccessServiceDescription();\n-        this.accessServiceWiki = accessServiceRegistration.getAccessServiceWiki();\n-        this.accessServiceOperationalStatus = accessServiceRegistration.getAccessServiceOperationalStatus();\n+        this.accessServiceId = accessServiceRegistration.getServiceCode();", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\nindex e01abbf1b8..b36aed6465 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\n", "chunk": "@@ -78,16 +78,16 @@ public class AccessServiceConfig extends AdminServicesConfigHeader\n      *\n      * @param accessServiceRegistration fixed properties about the access service\n      */\n-    public AccessServiceConfig(ServiceRegistration accessServiceRegistration)\n+    public AccessServiceConfig(AccessServiceRegistration accessServiceRegistration)\n     {\n-        this.accessServiceId = accessServiceRegistration.getServiceCode();\n-        this.accessServiceName = accessServiceRegistration.getServiceName();\n-        this.accessServiceFullName = accessServiceRegistration.getServiceFullName();\n-        this.accessServiceURLMarker = accessServiceRegistration.getServiceURLMarker();\n-        this.accessServiceAdminClass = accessServiceRegistration.getServiceAdminClassName();\n-        this.accessServiceDescription = accessServiceRegistration.getServiceDescription();\n-        this.accessServiceWiki = accessServiceRegistration.getServiceWiki();\n-        this.accessServiceOperationalStatus = accessServiceRegistration.getServiceOperationalStatus();\n+        this.accessServiceId = accessServiceRegistration.getAccessServiceCode();\n+        this.accessServiceName = accessServiceRegistration.getAccessServiceName();\n+        this.accessServiceFullName = accessServiceRegistration.getAccessServiceFullName();\n+        this.accessServiceURLMarker = accessServiceRegistration.getAccessServiceURLMarker();\n+        this.accessServiceAdminClass = accessServiceRegistration.getAccessServiceAdminClassName();\n+        this.accessServiceDescription = accessServiceRegistration.getAccessServiceDescription();\n+        this.accessServiceWiki = accessServiceRegistration.getAccessServiceWiki();\n+        this.accessServiceOperationalStatus = accessServiceRegistration.getAccessServiceOperationalStatus();\n     }\n \n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\nindex e01abbf1b8..b36aed6465 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/AccessServiceConfig.java\n", "chunk": "@@ -78,16 +78,16 @@ public class AccessServiceConfig extends AdminServicesConfigHeader\n      *\n      * @param accessServiceRegistration fixed properties about the access service\n      */\n-    public AccessServiceConfig(ServiceRegistration accessServiceRegistration)\n+    public AccessServiceConfig(AccessServiceRegistration accessServiceRegistration)\n     {\n-        this.accessServiceId = accessServiceRegistration.getServiceCode();\n-        this.accessServiceName = accessServiceRegistration.getServiceName();\n-        this.accessServiceFullName = accessServiceRegistration.getServiceFullName();\n-        this.accessServiceURLMarker = accessServiceRegistration.getServiceURLMarker();\n-        this.accessServiceAdminClass = accessServiceRegistration.getServiceAdminClassName();\n-        this.accessServiceDescription = accessServiceRegistration.getServiceDescription();\n-        this.accessServiceWiki = accessServiceRegistration.getServiceWiki();\n-        this.accessServiceOperationalStatus = accessServiceRegistration.getServiceOperationalStatus();\n+        this.accessServiceId = accessServiceRegistration.getAccessServiceCode();\n+        this.accessServiceName = accessServiceRegistration.getAccessServiceName();\n+        this.accessServiceFullName = accessServiceRegistration.getAccessServiceFullName();\n+        this.accessServiceURLMarker = accessServiceRegistration.getAccessServiceURLMarker();\n+        this.accessServiceAdminClass = accessServiceRegistration.getAccessServiceAdminClassName();\n+        this.accessServiceDescription = accessServiceRegistration.getAccessServiceDescription();\n+        this.accessServiceWiki = accessServiceRegistration.getAccessServiceWiki();\n+        this.accessServiceOperationalStatus = accessServiceRegistration.getAccessServiceOperationalStatus();\n     }\n \n \n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "a2456452feb94f695e0b26588291314025e2428b", "committedDate": "2020-10-09 16:55:56 +0100", "message": "Changes for view service administration plus corrections for access services"}, {"oid": "0562273f240e228e91d514653ce29f065e7ef093", "committedDate": "2020-10-19 11:16:58 +0100", "message": "Resolving conflicts between parallel updates to view services admin"}, {"oid": "ade6d8b969a40fc877f7c44fe62f680a35fd1bd5", "committedDate": "2021-06-04 12:33:02 +0100", "message": "#458 remove references to Atlas wiki"}, {"oid": "55a890dac01fbad3bea86e155f07800dce7b5567", "committedDate": "2022-03-14 15:01:31 +0000", "message": "Add new dev status and update URLs (#6158, #6155)"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNzMzMQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380137331", "body": "This name change seems unhelpful", "bodyText": "This name change seems unhelpful", "bodyHTML": "<p dir=\"auto\">This name change seems unhelpful</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:49:53Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java", "diffHunk": "@@ -69,15 +71,15 @@ public ViewServiceConfig(ViewServiceConfig template)\n      *\n      * @param viewRegistration fixed properties about the view service\n      */\n-    public ViewServiceConfig(ViewServiceRegistration viewRegistration)\n+    public ViewServiceConfig(ServiceRegistration viewRegistration)\n     {\n-        this.viewServiceId = viewRegistration.getViewServiceCode();\n-        this.viewServiceName = viewRegistration.getViewServiceName();\n-        this.viewURLMarker = viewRegistration.getViewServiceURLMarker();\n-        this.viewAdminClass = viewRegistration.getViewServiceAdminClassName();", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\nindex 833fada5f4..fa98f62a8e 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n", "chunk": "@@ -71,15 +71,15 @@ public class ViewServiceConfig extends AdminServicesConfigHeader\n      *\n      * @param viewRegistration fixed properties about the view service\n      */\n-    public ViewServiceConfig(ServiceRegistration viewRegistration)\n+    public ViewServiceConfig(ViewServiceRegistration viewRegistration)\n     {\n-        this.viewServiceId = viewRegistration.getServiceCode();\n-        this.viewServiceName = viewRegistration.getServiceName();\n-        this.viewURLMarker = viewRegistration.getServiceURLMarker();\n-        this.viewAdminClass = viewRegistration.getServiceAdminClassName();\n-        this.viewDescription = viewRegistration.getServiceDescription();\n-        this.viewWiki = viewRegistration.getServiceWiki();\n-        this.viewOperationalStatus = viewRegistration.getServiceOperationalStatus();\n+        this.viewServiceId = viewRegistration.getViewServiceCode();\n+        this.viewServiceName = viewRegistration.getViewServiceName();\n+        this.viewURLMarker = viewRegistration.getViewServiceURLMarker();\n+        this.viewAdminClass = viewRegistration.getViewServiceAdminClassName();\n+        this.viewDescription = viewRegistration.getViewServiceDescription();\n+        this.viewWiki = viewRegistration.getViewServiceWiki();\n+        this.viewOperationalStatus = viewRegistration.getViewServiceOperationalStatus();\n     }\n \n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\nindex 833fada5f4..16986b3b35 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n", "chunk": "@@ -71,15 +71,15 @@ public class ViewServiceConfig extends AdminServicesConfigHeader\n      *\n      * @param viewRegistration fixed properties about the view service\n      */\n-    public ViewServiceConfig(ServiceRegistration viewRegistration)\n+    public ViewServiceConfig(ViewServiceRegistration viewRegistration)\n     {\n-        this.viewServiceId = viewRegistration.getServiceCode();\n-        this.viewServiceName = viewRegistration.getServiceName();\n-        this.viewURLMarker = viewRegistration.getServiceURLMarker();\n-        this.viewAdminClass = viewRegistration.getServiceAdminClassName();\n-        this.viewDescription = viewRegistration.getServiceDescription();\n-        this.viewWiki = viewRegistration.getServiceWiki();\n-        this.viewOperationalStatus = viewRegistration.getServiceOperationalStatus();\n+        this.viewServiceId = viewRegistration.getViewServiceCode();\n+        this.viewServiceName = viewRegistration.getViewServiceName();\n+        this.viewURLMarker = viewRegistration.getViewServiceURLMarker();\n+        this.viewAdminClass = viewRegistration.getViewServiceAdminClassName();\n+        this.viewDescription = viewRegistration.getViewServiceDescription();\n+        this.viewWiki = viewRegistration.getViewServiceWiki();\n+        this.viewOperationalStatus = viewRegistration.getViewServiceOperationalStatus();\n     }\n \n \n", "next_change": {"commit": "afbdd456a664bb65a1b102b86fa7a975a816ddd2", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\nindex 16986b3b35..e186e65106 100644\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n+++ b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/properties/ViewServiceConfig.java\n", "chunk": "@@ -75,11 +87,11 @@ public class ViewServiceConfig extends OMAGServerClientConfig\n     {\n         this.viewServiceId = viewRegistration.getViewServiceCode();\n         this.viewServiceName = viewRegistration.getViewServiceName();\n-        this.viewURLMarker = viewRegistration.getViewServiceURLMarker();\n-        this.viewAdminClass = viewRegistration.getViewServiceAdminClassName();\n-        this.viewDescription = viewRegistration.getViewServiceDescription();\n-        this.viewWiki = viewRegistration.getViewServiceWiki();\n-        this.viewOperationalStatus = viewRegistration.getViewServiceOperationalStatus();\n+        this.viewServiceURLMarker = viewRegistration.getViewServiceURLMarker();\n+        this.viewServiceAdminClass = viewRegistration.getViewServiceAdminClassName();\n+        this.viewServiceDescription = viewRegistration.getViewServiceDescription();\n+        this.viewServiceWiki = viewRegistration.getViewServiceWiki();\n+        this.viewServiceOperationalStatus = viewRegistration.getViewServiceOperationalStatus();\n     }\n \n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "62c9df8761937df819e37206ed2d446873f6687d", "committedDate": "2020-04-17 20:36:43 +0100", "message": "Fix build warning around serialVersionUID"}, {"oid": "57f2496a88d917c48b9394f37d38231d909a1913", "committedDate": "2020-09-17 15:41:19 +0100", "message": "Enable view admin calls"}, {"oid": "b9e5f584e56e8fafc350a7529ee087ed8a1d865c", "committedDate": "2020-09-22 21:39:58 +0100", "message": "#3629 correct merge from main"}, {"oid": "afbdd456a664bb65a1b102b86fa7a975a816ddd2", "committedDate": "2020-09-22 21:45:09 +0100", "message": "#3629 correct merge from main"}, {"oid": "a3ed233c15d503b37d77c84ffe80a49bfeff80c8", "committedDate": "2020-09-22 22:36:21 +0100", "message": "#3629 ensure full name is in the view service"}, {"oid": "a2456452feb94f695e0b26588291314025e2428b", "committedDate": "2020-10-09 16:55:56 +0100", "message": "Changes for view service administration plus corrections for access services"}, {"oid": "ade6d8b969a40fc877f7c44fe62f680a35fd1bd5", "committedDate": "2021-06-04 12:33:02 +0100", "message": "#458 remove references to Atlas wiki"}, {"oid": "55a890dac01fbad3bea86e155f07800dce7b5567", "committedDate": "2022-03-14 15:01:31 +0000", "message": "Add new dev status and update URLs (#6158, #6155)"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzODUwNw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380138507", "body": "If we combine the  the status of the view service with the access service it means that they have to havethe same statuses - is that always to be true when they are so different?", "bodyText": "If we combine the  the status of the view service with the access service it means that they have to havethe same statuses - is that always to be true when they are so different?", "bodyHTML": "<p dir=\"auto\">If we combine the  the status of the view service with the access service it means that they have to havethe same statuses - is that always to be true when they are so different?</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:52:32Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceOperationalStatus.java", "diffHunk": "@@ -6,13 +6,13 @@\n import java.io.Serializable;\n \n /**\n- * AccessServiceOperationalStatus sets up whether an open metadata access service (OMAS) is enabled or not.\n+ * ServiceOperationalStatus sets up whether an open metadata service is enabled or not.\n  */\n-public enum AccessServiceOperationalStatus implements Serializable\n+public enum ServiceOperationalStatus implements Serializable\n {\n-    NOT_IMPLEMENTED  (0, \"Not Implemented\", \"Code for this access server is not available.\"),\n-    ENABLED          (1, \"Enabled\",         \"The access service is available and running.\"),\n-    DISABLED         (2, \"Disabled\",        \"The access service has been disabled.\");\n+    NOT_IMPLEMENTED  (0, \"Not Implemented\", \"Code for this service is not available.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MDIyNw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380140227", "body": "Having a common ServiceRegistration class for view services and access services does not make any sense.  They are very different types of services and are likely to need different values in the registration.  For example, the access services have in and out topics - are we doing that for the view services?  If so, having OMAS in the topic name for a view service is confusing.", "bodyText": "Having a common ServiceRegistration class for view services and access services does not make any sense.  They are very different types of services and are likely to need different values in the registration.  For example, the access services have in and out topics - are we doing that for the view services?  If so, having OMAS in the topic name for a view service is confusing.", "bodyHTML": "<p dir=\"auto\">Having a common ServiceRegistration class for view services and access services does not make any sense.  They are very different types of services and are likely to need different values in the registration.  For example, the access services have in and out topics - are we doing that for the view services?  If so, having OMAS in the topic name for a view service is confusing.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:56:29Z", "path": "open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java", "diffHunk": "@@ -0,0 +1,310 @@\n+/* SPDX-License-Identifier: Apache-2.0 */", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex f4136c8ead..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                                  serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java b/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\ndeleted file mode 100644\nindex f4136c8ead..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-api/src/main/java/org/odpi/openmetadata/adminservices/configuration/registration/ServiceRegistration.java\n+++ /dev/null\n", "chunk": "@@ -1,310 +0,0 @@\n-/* SPDX-License-Identifier: Apache-2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices.configuration.registration;\n-\n-import java.io.Serializable;\n-\n-/**\n- * ServiceRegistration is used by a service to register its admin services interface.\n- */\n-public class ServiceRegistration implements Serializable\n-{\n-    private static final long     serialVersionUID    = 1L;\n-    private static final String   defaultTopicRoot    = \"omas.\";\n-    private static final String   defaultInTopicLeaf  = \".inTopic\";\n-    private static final String   defaultOutTopicLeaf = \".outTopic\";\n-\n-\n-    private int                            serviceCode;\n-    private String                         serviceName;\n-    private String                         serviceFullName;\n-    private String                         serviceURLMarker;\n-    private String                         serviceDescription;\n-    private String                         serviceWiki;\n-    private ServiceOperationalStatus       serviceOperationalStatus;\n-    private String                         serviceAdminClassName;\n-\n-    /**\n-     * Complete Constructor\n-     *\n-     * @param serviceCode ordinal for this access service\n-     * @param serviceName symbolic name for this access service\n-     * @param serviceURLMarker name of the part of the URL that is the name of the access service\n-     * @param serviceDescription short description for this access service\n-     * @param serviceWiki wiki page for the access service for this access service\n-     * @param serviceOperationalStatus default initial operational status for the access service\n-     * @param serviceAdminClassName  name of serviceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(int                                  serviceCode,\n-                                     String                         serviceName,\n-                                     String                         serviceFullName,\n-                                     String                         serviceURLMarker,\n-                                     String                         serviceDescription,\n-                                     String                         serviceWiki,\n-                                     ServiceOperationalStatus       serviceOperationalStatus,\n-                                     String                         serviceAdminClassName)\n-    {\n-        this.serviceCode = serviceCode;\n-        this.serviceName = serviceName;\n-        this.serviceFullName = serviceFullName;\n-        this.serviceURLMarker = serviceURLMarker;\n-        this.serviceDescription = serviceDescription;\n-        this.serviceWiki = serviceWiki;\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Access Service Enum Constructor\n-     *\n-     * @param accessServiceDescription enum for this access service\n-     * @param accessServiceOperationalStatus default initial operational status for the access service\n-     * @param accessServiceAdminClassName  name of AccessServiceAdmin implementation class for the access service\n-     */\n-    public ServiceRegistration(AccessServiceDescription       accessServiceDescription,\n-                               ServiceOperationalStatus       accessServiceOperationalStatus,\n-                               String                         accessServiceAdminClassName)\n-    {\n-        this(accessServiceDescription.getAccessServiceCode(),\n-             accessServiceDescription.getAccessServiceName(),\n-             accessServiceDescription.getAccessServiceFullName(),\n-             accessServiceDescription.getAccessServiceURLMarker(),\n-             accessServiceDescription.getAccessServiceDescription(),\n-             accessServiceDescription.getAccessServiceWiki(),\n-             accessServiceOperationalStatus,\n-             accessServiceAdminClassName);\n-    }\n-\n-    /**\n-     * View Service Enum Constructor\n-     *\n-     * @param viewServiceDescription enum for this view service\n-     * @param viewServiceOperationalStatus default initial operational status for the view service\n-     * @param viewServiceAdminClassName  name of viewServiceAdmin implementation class for the view service\n-     */\n-    public ServiceRegistration(ViewServiceDescription      viewServiceDescription,\n-                               ServiceOperationalStatus    viewServiceOperationalStatus,\n-                               String                      viewServiceAdminClassName)\n-    {\n-        this(viewServiceDescription.getViewServiceCode(),\n-                viewServiceDescription.getViewServiceName(),\n-                viewServiceDescription.getViewServiceFullName(),\n-                viewServiceDescription.getViewServiceURLMarker(),\n-                viewServiceDescription.getViewServiceDescription(),\n-                viewServiceDescription.getViewServiceWiki(),\n-                viewServiceOperationalStatus,\n-                viewServiceAdminClassName);\n-    }\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public ServiceRegistration()\n-    {\n-    }\n-\n-    /**\n-     * Return the code for this  service\n-     *\n-     * @return int type code\n-     */\n-    public int getServiceCode()\n-    {\n-        return serviceCode;\n-    }\n-\n-\n-    /**\n-     * Set up the code for this  service\n-     *\n-     * @param serviceCode  int type code\n-     */\n-    public void setServiceCode(int serviceCode)\n-    {\n-        this.serviceCode = serviceCode;\n-    }\n-\n-\n-    /**\n-     * Return the default name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceName()\n-    {\n-        return serviceName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the default name for this  service.\n-     *\n-     * @param serviceName  String default name\n-     */\n-    public void setServiceName(String serviceName)\n-    {\n-        this.serviceName = serviceName;\n-    }\n-\n-\n-    /**\n-     * Return the full name for this  service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceFullName()\n-    {\n-        return serviceFullName;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the full name for this  service.\n-     *\n-     * @param serviceFullName  String default name\n-     */\n-    public void setServiceFullName(String serviceFullName)\n-    {\n-        this.serviceFullName = serviceFullName;\n-    }\n-\n-\n-    /**\n-     * Return the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @return String default name\n-     */\n-    public String getServiceURLMarker()\n-    {\n-        return serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Set up the string that appears in the REST API URL that identifies the owning service.\n-     * Null means no REST APIs supported by this service.\n-     *\n-     * @param serviceURLMarker url fragment\n-     */\n-    public void setServiceURLMarker(String serviceURLMarker)\n-    {\n-        this.serviceURLMarker = serviceURLMarker;\n-    }\n-\n-\n-    /**\n-     * Return the default description for the type for this  service.\n-     *\n-     * @return String default description\n-     */\n-    public String getServiceDescription()\n-    {\n-        return serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Set up the default description for the type for this  service.\n-     *\n-     * @param serviceDescription  String default description\n-     */\n-    public void setServiceDescription(String serviceDescription)\n-    {\n-        this.serviceDescription = serviceDescription;\n-    }\n-\n-\n-    /**\n-     * Return the URL for the wiki page describing this  service.\n-     *\n-     * @return String URL name for the wiki page\n-     */\n-    public String getServiceWiki()\n-    {\n-        return serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Set up the URL for the wiki page describing this  service.\n-     *\n-     * @param serviceWiki  String URL name for the wiki page\n-     */\n-    public void setServiceWiki(String serviceWiki)\n-    {\n-        this.serviceWiki = serviceWiki;\n-    }\n-\n-\n-    /**\n-     * Return the initial operational status for this  service.\n-     *\n-     * @return serviceOperationalStatus enum\n-     */\n-    public ServiceOperationalStatus getServiceOperationalStatus()\n-    {\n-        return serviceOperationalStatus;\n-    }\n-\n-\n-    /**\n-     * Set up the initial operational status for this  service.\n-     *\n-     * @param serviceOperationalStatus serviceOperationalStatus enum\n-     */\n-    public void setServiceOperationalStatus(ServiceOperationalStatus serviceOperationalStatus)\n-    {\n-        this.serviceOperationalStatus = serviceOperationalStatus;\n-    }\n-\n-    /**\n-     * Return the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @return class name\n-     */\n-    public String getServiceAdminClassName()\n-    {\n-        return serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Set up the class name of the admin class that should be called during initialization and\n-     * termination.\n-     *\n-     * @param serviceAdminClassName  class name\n-     */\n-    public void setServiceAdminClassName(String serviceAdminClassName)\n-    {\n-        this.serviceAdminClassName = serviceAdminClassName;\n-    }\n-\n-\n-    /**\n-     * Return the InTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceInTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultInTopicLeaf;\n-    }\n-\n-\n-    /**\n-     * Return the OutTopic name for the  service.\n-     *\n-     * @return String topic name\n-     */\n-    public String getServiceOutTopic()\n-    {\n-        return defaultTopicRoot + serviceURLMarker.replaceAll(\"-\", \"\") + defaultOutTopicLeaf;\n-    }\n-\n-}\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MTM2Mg==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380141362", "body": "Only access services have an Out topic", "bodyText": "Only access services have an Out topic", "bodyHTML": "<p dir=\"auto\">Only access services have an Out topic</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T11:59:19Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java", "diffHunk": "@@ -336,14 +336,14 @@ private AccessServiceConfig  createAccessServiceConfig(AccessServiceRegistration\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultInTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceInTopic(),\n+                                                                           registration.getServiceInTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n         accessServiceConfig.setAccessServiceOutTopic(\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultOutTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceOutTopic(),\n+                                                                           registration.getServiceOutTopic(),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\nindex f163b58a9f..d4711dcb36 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n", "chunk": "@@ -336,14 +336,14 @@ public class OMAGServerAdminForAccessServices\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultInTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getServiceInTopic(),\n+                                                                           registration.getAccessServiceInTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n         accessServiceConfig.setAccessServiceOutTopic(\n                 connectorConfigurationFactory.getDefaultEventBusConnection(defaultOutTopicName,\n                                                                            eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getServiceOutTopic(),\n+                                                                           registration.getAccessServiceOutTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n \n", "next_change": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\nindex d4711dcb36..84bf0c7c1c 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n", "chunk": "@@ -333,15 +342,13 @@ public class OMAGServerAdminForAccessServices\n \n         accessServiceConfig.setAccessServiceOptions(accessServiceOptions);\n         accessServiceConfig.setAccessServiceInTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(defaultInTopicName,\n-                                                                           eventBusConfig.getConnectorProvider(),\n+                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n                                                                            registration.getAccessServiceInTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n         accessServiceConfig.setAccessServiceOutTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(defaultOutTopicName,\n-                                                                           eventBusConfig.getConnectorProvider(),\n+                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n                                                                            registration.getAccessServiceOutTopic(),\n                                                                            localServerId,\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\nindex f163b58a9f..84bf0c7c1c 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n", "chunk": "@@ -333,17 +342,15 @@ public class OMAGServerAdminForAccessServices\n \n         accessServiceConfig.setAccessServiceOptions(accessServiceOptions);\n         accessServiceConfig.setAccessServiceInTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(defaultInTopicName,\n-                                                                           eventBusConfig.getConnectorProvider(),\n+                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getServiceInTopic(),\n+                                                                           registration.getAccessServiceInTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n         accessServiceConfig.setAccessServiceOutTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(defaultOutTopicName,\n-                                                                           eventBusConfig.getConnectorProvider(),\n+                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n                                                                            eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getServiceOutTopic(),\n+                                                                           registration.getAccessServiceOutTopic(),\n                                                                            localServerId,\n                                                                            eventBusConfig.getConfigurationProperties()));\n \n", "next_change": {"commit": "617b7cf26e233ad4d5ee320d75962e1d553f7f5f", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\nindex 84bf0c7c1c..1c0a164760 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n", "chunk": "@@ -341,18 +342,22 @@ public class OMAGServerAdminForAccessServices\n         AccessServiceConfig accessServiceConfig = new AccessServiceConfig(registration);\n \n         accessServiceConfig.setAccessServiceOptions(accessServiceOptions);\n-        accessServiceConfig.setAccessServiceInTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n-                                                                           eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceInTopic(),\n-                                                                           localServerId,\n-                                                                           eventBusConfig.getConfigurationProperties()));\n-        accessServiceConfig.setAccessServiceOutTopic(\n-                connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n-                                                                           eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                           registration.getAccessServiceOutTopic(),\n-                                                                           localServerId,\n-                                                                           eventBusConfig.getConfigurationProperties()));\n+\n+        if (eventBusConfig != null)\n+        {\n+            accessServiceConfig.setAccessServiceInTopic(\n+                    connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n+                                                                               eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n+                                                                               registration.getAccessServiceInTopic(),\n+                                                                               localServerId,\n+                                                                               eventBusConfig.getConfigurationProperties()));\n+            accessServiceConfig.setAccessServiceOutTopic(\n+                    connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n+                                                                               eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n+                                                                               registration.getAccessServiceOutTopic(),\n+                                                                               localServerId,\n+                                                                               eventBusConfig.getConfigurationProperties()));\n+        }\n \n         return accessServiceConfig;\n     }\n", "next_change": {"commit": "d6d316cac6f3a386c30f996e04d897e946994626", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\ndeleted file mode 100644\nindex 1c0a164760..0000000000\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/OMAGServerAdminForAccessServices.java\n+++ /dev/null\n", "chunk": "@@ -1,1087 +0,0 @@\n-/* SPDX-License-Identifier: Apache 2.0 */\n-/* Copyright Contributors to the ODPi Egeria project. */\n-package org.odpi.openmetadata.adminservices;\n-\n-\n-import org.odpi.openmetadata.adapters.repositoryservices.ConnectorConfigurationFactory;\n-import org.odpi.openmetadata.adminservices.configuration.OMAGAccessServiceRegistration;\n-import org.odpi.openmetadata.adminservices.configuration.properties.*;\n-import org.odpi.openmetadata.adminservices.configuration.registration.ServiceOperationalStatus;\n-import org.odpi.openmetadata.adminservices.configuration.registration.AccessServiceRegistration;\n-import org.odpi.openmetadata.adminservices.configuration.registration.CommonServicesDescription;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGConfigurationErrorException;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGInvalidParameterException;\n-import org.odpi.openmetadata.adminservices.ffdc.exception.OMAGNotAuthorizedException;\n-import org.odpi.openmetadata.adminservices.rest.AccessServiceConfigResponse;\n-import org.odpi.openmetadata.commonservices.ffdc.RESTCallLogger;\n-import org.odpi.openmetadata.commonservices.ffdc.RESTCallToken;\n-import org.odpi.openmetadata.commonservices.ffdc.rest.RegisteredOMAGService;\n-import org.odpi.openmetadata.commonservices.ffdc.rest.RegisteredOMAGServicesResponse;\n-import org.odpi.openmetadata.commonservices.ffdc.rest.StringMapResponse;\n-import org.odpi.openmetadata.commonservices.ffdc.rest.VoidResponse;\n-import org.odpi.openmetadata.frameworks.connectors.properties.beans.Connection;\n-import org.odpi.openmetadata.frameworks.connectors.properties.beans.Endpoint;\n-import org.odpi.openmetadata.repositoryservices.admin.OMRSConfigurationFactory;\n-import org.slf4j.LoggerFactory;\n-\n-import java.util.*;\n-\n-/**\n- * OMAGServerAdminForAccessServices provides the server-side support for the services that add access services\n- * configuration to an OMAG Server.\n- */\n-public class OMAGServerAdminForAccessServices\n-{\n-    private static RESTCallLogger restCallLogger = new RESTCallLogger(LoggerFactory.getLogger(OMAGServerAdminForAccessServices.class),\n-                                                                      CommonServicesDescription.ADMIN_OPERATIONAL_SERVICES.getServiceName());\n-\n-    private static final String      defaultInTopicName = \"InTopic\";\n-    private static final String      defaultOutTopicName = \"OutTopic\";\n-\n-    private OMAGServerAdminStoreServices   configStore = new OMAGServerAdminStoreServices();\n-    private OMAGServerErrorHandler         errorHandler = new OMAGServerErrorHandler();\n-    private OMAGServerExceptionHandler     exceptionHandler = new OMAGServerExceptionHandler();\n-\n-\n-    /**\n-     * Default constructor\n-     */\n-    public OMAGServerAdminForAccessServices()\n-    {\n-    }\n-\n-\n-    /**\n-     * Return the list of access services that are configured for this server.\n-     *\n-     * @param userId calling user\n-     * @param serverName name of server\n-     *\n-     * @return list of access service descriptions\n-     */\n-    public RegisteredOMAGServicesResponse getConfiguredAccessServices(String              userId,\n-                                                                      String              serverName)\n-    {\n-        final String methodName = \"getConfiguredAccessServices\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        RegisteredOMAGServicesResponse response = new RegisteredOMAGServicesResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            /*\n-             * Get the list of Access Services configured in this server.\n-             */\n-            List<AccessServiceConfig> accessServiceConfigList = serverConfig.getAccessServicesConfig();\n-\n-            /*\n-             * Set up the available access services.\n-             */\n-            if ((accessServiceConfigList != null) && (! accessServiceConfigList.isEmpty()))\n-            {\n-                List<RegisteredOMAGService> services = new ArrayList<>();\n-                for (AccessServiceConfig accessServiceConfig : accessServiceConfigList)\n-                {\n-                    if (accessServiceConfig != null)\n-                    {\n-                        if (accessServiceConfig.getAccessServiceOperationalStatus() == ServiceOperationalStatus.ENABLED)\n-                        {\n-                            RegisteredOMAGService service = new RegisteredOMAGService();\n-\n-                            service.setServiceName(accessServiceConfig.getAccessServiceFullName());\n-                            service.setServiceDescription(accessServiceConfig.getAccessServiceDescription());\n-                            service.setServiceURLMarker(accessServiceConfig.getAccessServiceURLMarker());\n-                            service.setServiceWiki(accessServiceConfig.getAccessServiceWiki());\n-                            services.add(service);\n-                        }\n-                    }\n-                }\n-                if (!services.isEmpty())\n-                {\n-                    response.setServices(services);\n-                }\n-\n-            }\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Enable a single access service.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @param serviceURLMarker access service name used in URL\n-     * @param accessServiceOptions  property name/value pairs used to configure the access services\n-     *\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGConfigurationErrorException the event bus has not been configured or\n-     * OMAGInvalidParameterException invalid serverName parameter.\n-     */\n-    public VoidResponse configureAccessService(String              userId,\n-                                               String              serverName,\n-                                               String              serviceURLMarker,\n-                                               Map<String, Object> accessServiceOptions)\n-    {\n-        final String methodName = \"configureAccessService\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            EventBusConfig            eventBusConfig          = serverConfig.getEventBusConfig();\n-            List<AccessServiceConfig> accessServiceConfigList = serverConfig.getAccessServicesConfig();\n-            EnterpriseAccessConfig    enterpriseAccessConfig  = this.getEnterpriseAccessConfig(serverConfig);\n-\n-            /*\n-             * Get the registration information for this access service.\n-             */\n-            AccessServiceRegistration accessServiceRegistration = OMAGAccessServiceRegistration.getAccessServiceRegistration(serviceURLMarker);\n-\n-            errorHandler.validateAccessServiceIsRegistered(accessServiceRegistration, serviceURLMarker, serverName, methodName);\n-\n-            accessServiceConfigList = this.updateAccessServiceConfig(createAccessServiceConfig(accessServiceRegistration,\n-                                                                                               accessServiceOptions,\n-                                                                                               eventBusConfig,\n-                                                                                               serverName,\n-                                                                                               serverConfig.getLocalServerId()),\n-                                                                     accessServiceConfigList);\n-\n-\n-            if (enterpriseAccessConfig == null)\n-            {\n-                /*\n-                 * Set up the enterprise repository services if this is the first access service.\n-                 */\n-                OMRSConfigurationFactory configurationFactory = new OMRSConfigurationFactory();\n-                enterpriseAccessConfig = configurationFactory.getDefaultEnterpriseAccessConfig(serverConfig.getLocalServerName(),\n-                                                                                               serverConfig.getLocalServerId());\n-            }\n-\n-            this.setAccessServicesConfig(userId, serverName, accessServiceConfigList);\n-            this.setEnterpriseAccessConfig(userId, serverName, enterpriseAccessConfig);\n-\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGConfigurationErrorException error)\n-        {\n-            exceptionHandler.captureConfigurationErrorException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Enable all access services that are registered with this server platform.   The configuration properties\n-     * for each access service can be changed from their default using setAccessServicesConfig operation.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @param accessServiceOptions  property name/value pairs used to configure the access services\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGConfigurationErrorException the event bus has not been configured or\n-     * OMAGInvalidParameterException invalid serverName parameter.\n-     */\n-    public VoidResponse configureAllAccessServices(String              userId,\n-                                                   String              serverName,\n-                                                   Map<String, Object> accessServiceOptions)\n-    {\n-        final String methodName = \"configureAllAccessServices\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            EventBusConfig            eventBusConfig          = errorHandler.validateEventBusIsSet(serverName, serverConfig, methodName);\n-            List<AccessServiceConfig> accessServiceConfigList = new ArrayList<>();\n-            EnterpriseAccessConfig    enterpriseAccessConfig  = null;\n-\n-            /*\n-             * Get the list of Access Services implemented in this server.\n-             */\n-            List<AccessServiceRegistration> accessServiceRegistrationList = OMAGAccessServiceRegistration.getAccessServiceRegistrationList();\n-\n-            /*\n-             * Set up the available access services.\n-             */\n-            if ((accessServiceRegistrationList != null) && (! accessServiceRegistrationList.isEmpty()))\n-            {\n-                for (AccessServiceRegistration registration : accessServiceRegistrationList)\n-                {\n-                    if (registration != null)\n-                    {\n-                        if (registration.getAccessServiceOperationalStatus() == ServiceOperationalStatus.ENABLED)\n-                        {\n-                            accessServiceConfigList.add(createAccessServiceConfig(registration,\n-                                                                                  accessServiceOptions,\n-                                                                                  eventBusConfig,\n-                                                                                  serverName,\n-                                                                                  serverConfig.getLocalServerId()));\n-                        }\n-                    }\n-                }\n-\n-                /*\n-                 * Now set up the enterprise repository services.\n-                 */\n-                OMRSConfigurationFactory configurationFactory = new OMRSConfigurationFactory();\n-                enterpriseAccessConfig = configurationFactory.getDefaultEnterpriseAccessConfig(serverConfig.getLocalServerName(),\n-                                                                                               serverConfig.getLocalServerId());\n-            }\n-\n-            if (accessServiceConfigList.isEmpty())\n-            {\n-                accessServiceConfigList = null;\n-            }\n-\n-            this.setAccessServicesConfig(userId, serverName, accessServiceConfigList);\n-            this.setEnterpriseAccessConfig(userId, serverName, enterpriseAccessConfig);\n-        }\n-        catch (OMAGInvalidParameterException error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGConfigurationErrorException error)\n-        {\n-            exceptionHandler.captureConfigurationErrorException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Set up the configuration for a single access service.\n-     *\n-     * @param registration registration information about the service.\n-     * @param accessServiceOptions options for the service\n-     * @param eventBusConfig details of the event bus\n-     * @param serverName name of this server\n-     * @param localServerId unique Id for this server\n-     * @return newly created config object\n-     */\n-    private AccessServiceConfig  createAccessServiceConfig(AccessServiceRegistration   registration,\n-                                                           Map<String, Object>         accessServiceOptions,\n-                                                           EventBusConfig              eventBusConfig,\n-                                                           String                      serverName,\n-                                                           String                      localServerId)\n-    {\n-        ConnectorConfigurationFactory connectorConfigurationFactory = new ConnectorConfigurationFactory();\n-\n-        AccessServiceConfig accessServiceConfig = new AccessServiceConfig(registration);\n-\n-        accessServiceConfig.setAccessServiceOptions(accessServiceOptions);\n-\n-        if (eventBusConfig != null)\n-        {\n-            accessServiceConfig.setAccessServiceInTopic(\n-                    connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n-                                                                               eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                               registration.getAccessServiceInTopic(),\n-                                                                               localServerId,\n-                                                                               eventBusConfig.getConfigurationProperties()));\n-            accessServiceConfig.setAccessServiceOutTopic(\n-                    connectorConfigurationFactory.getDefaultEventBusConnection(eventBusConfig.getConnectorProvider(),\n-                                                                               eventBusConfig.getTopicURLRoot() + \".server.\" + serverName,\n-                                                                               registration.getAccessServiceOutTopic(),\n-                                                                               localServerId,\n-                                                                               eventBusConfig.getConfigurationProperties()));\n-        }\n-\n-        return accessServiceConfig;\n-    }\n-\n-\n-    /**\n-     * Add/update the configuration for a single service in the configuration.\n-     *\n-     * @param accessServiceConfig configuration to add/change\n-     * @param currentList current config (may be null)\n-     * @return updated list\n-     */\n-    private List<AccessServiceConfig>  updateAccessServiceConfig(AccessServiceConfig         accessServiceConfig,\n-                                                                 List<AccessServiceConfig>   currentList)\n-    {\n-        if (accessServiceConfig == null)\n-        {\n-            return currentList;\n-        }\n-        else\n-        {\n-            List<AccessServiceConfig> newList = new ArrayList<>();\n-\n-            if (currentList != null)\n-            {\n-                for (AccessServiceConfig existingConfig : currentList)\n-                {\n-                    if (existingConfig != null)\n-                    {\n-                        if (accessServiceConfig.getAccessServiceId() != existingConfig.getAccessServiceId())\n-                        {\n-                            newList.add(existingConfig);\n-                        }\n-                    }\n-                }\n-            }\n-\n-            newList.add(accessServiceConfig);\n-\n-            if (newList.isEmpty())\n-            {\n-                return null;\n-            }\n-\n-            return newList;\n-        }\n-    }\n-\n-\n-    /**\n-     * Disable the access services.  This removes all configuration for the access services\n-     * and disables the enterprise repository services.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName  parameter.\n-     */\n-    public VoidResponse clearAllAccessServices(String          userId,\n-                                               String          serverName)\n-    {\n-        final String methodName = \"clearAllAccessServices\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            this.setAccessServicesConfig(userId, serverName, null);\n-            this.setEnterpriseAccessConfig(userId, serverName, null);\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Remove an access services.  This removes all configuration for the access services\n-     * and disables the enterprise repository services.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @param serviceURLMarker access service name used in URL\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName  parameter.\n-     */\n-    public AccessServiceConfigResponse getAccessServiceConfig(String userId,\n-                                                              String serverName,\n-                                                              String serviceURLMarker)\n-    {\n-        final String methodName = \"getAccessServiceConfig\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        AccessServiceConfigResponse response = new AccessServiceConfigResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            List<AccessServiceConfig> currentList = serverConfig.getAccessServicesConfig();\n-\n-            if (currentList != null)\n-            {\n-                for (AccessServiceConfig existingConfig : currentList)\n-                {\n-                    if (existingConfig != null)\n-                    {\n-                        if (serviceURLMarker.equals(existingConfig.getAccessServiceURLMarker()))\n-                        {\n-                            response.setConfig(existingConfig);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Remove an access service.  This removes all configuration for the access service.\n-     *\n-     * @param userId  user that is issuing the request.\n-     * @param serverName  local server name.\n-     * @param serviceURLMarker access service name used in URL\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName  parameter.\n-     */\n-    public VoidResponse clearAccessService(String userId,\n-                                           String serverName,\n-                                           String serviceURLMarker)\n-    {\n-        final String methodName = \"clearAccessService\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            List<AccessServiceConfig> currentList = serverConfig.getAccessServicesConfig();\n-            List<AccessServiceConfig> newList     = new ArrayList<>();\n-\n-            if (currentList != null)\n-            {\n-                for (AccessServiceConfig existingConfig : currentList)\n-                {\n-                    if (existingConfig != null)\n-                    {\n-                        if (! serviceURLMarker.equals(existingConfig.getAccessServiceURLMarker()))\n-                        {\n-                            newList.add(existingConfig);\n-                        }\n-                    }\n-                }\n-\n-                serverConfig.setAccessServicesConfig(newList);\n-                configStore.saveServerConfig(serverName, methodName, serverConfig);\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Retrieve the topic names for this access service\n-     *\n-     * @param userId                user that is issuing the request.\n-     * @param serverName            local server name.\n-     * @param serviceURLMarker string indicating which access service it requested\n-     *\n-     * @return map of topic names or\n-     * OMAGNotAuthorizedException  the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or accessServicesConfig parameter.\n-     */\n-    public StringMapResponse  getAccessServiceTopicNames(String userId,\n-                                                         String serverName,\n-                                                         String serviceURLMarker)\n-    {\n-        final String methodName   = \"getAccessServiceTopicNames\";\n-        final String propertyName = \"serviceURLMarker\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        StringMapResponse response = new StringMapResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-            errorHandler.validatePropertyNotNull(serviceURLMarker, propertyName, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-            List<AccessServiceConfig>  configuredAccessServices = serverConfig.getAccessServicesConfig();\n-\n-            if (configuredAccessServices != null)\n-            {\n-                for (AccessServiceConfig accessServiceConfig : configuredAccessServices)\n-                {\n-                    if (accessServiceConfig != null)\n-                    {\n-                        if (serviceURLMarker.equals(accessServiceConfig.getAccessServiceURLMarker()))\n-                        {\n-                            /*\n-                             * Found it - just need to set up response\n-                             */\n-                            Map<String, String>  topicNames = new HashMap<>();\n-\n-                            topicNames.put(accessServiceConfig.getAccessServiceFullName() + \" \" + defaultInTopicName,\n-                                           accessServiceConfig.getAccessServiceInTopic().getEndpoint().getAddress());\n-\n-                            topicNames.put(accessServiceConfig.getAccessServiceFullName() + \" \" + defaultOutTopicName,\n-                                           accessServiceConfig.getAccessServiceOutTopic().getEndpoint().getAddress());\n-\n-                            response.setStringMap(topicNames);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Retrieve the topic names for this access service\n-     *\n-     * @param userId                user that is issuing the request.\n-     * @param serverName            local server name.\n-     *\n-     * @return map of topic names or\n-     * OMAGNotAuthorizedException  the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or accessServicesConfig parameter.\n-     */\n-    public StringMapResponse  getAllAccessServiceTopicNames(String userId,\n-                                                            String serverName)\n-    {\n-        final String methodName   = \"getAccessServiceTopicNames\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        StringMapResponse response = new StringMapResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-            List<AccessServiceConfig>  configuredAccessServices = serverConfig.getAccessServicesConfig();\n-\n-            if (configuredAccessServices != null)\n-            {\n-                Map<String, String>  topicNames = new HashMap<>();\n-\n-                for (AccessServiceConfig accessServiceConfig : configuredAccessServices)\n-                {\n-                    if (accessServiceConfig != null)\n-                    {\n-                        topicNames.put(accessServiceConfig.getAccessServiceFullName() + \" \" + defaultInTopicName,\n-                                       accessServiceConfig.getAccessServiceInTopic().getEndpoint().getAddress());\n-\n-                        topicNames.put(accessServiceConfig.getAccessServiceFullName() + \" \" + defaultOutTopicName,\n-                                       accessServiceConfig.getAccessServiceOutTopic().getEndpoint().getAddress());\n-                    }\n-                }\n-\n-                response.setStringMap(topicNames);\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-\n-    /**\n-     * Update the in topic name for a specific access service.\n-     *\n-     * @param userId                user that is issuing the request.\n-     * @param serverName            local server name.\n-     * @param serviceURLMarker string indicating which access service it requested\n-     * @param topicName string for new topic name\n-     *\n-     * @return map of topic names or\n-     * OMAGNotAuthorizedException  the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or accessServicesConfig parameter.\n-     */\n-    public VoidResponse  overrideAccessServiceInTopicName(String userId,\n-                                                          String serverName,\n-                                                          String serviceURLMarker,\n-                                                          String topicName)\n-    {\n-        final String methodName   = \"overrideAccessServiceInTopicName\";\n-        final String serviceURLMarkerPropertyName = \"serviceURLMarker\";\n-        final String topicPropertyName = \"topicName\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-            errorHandler.validatePropertyNotNull(topicName, topicPropertyName, serverName, methodName);\n-            errorHandler.validatePropertyNotNull(serviceURLMarker, serviceURLMarkerPropertyName, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-            List<AccessServiceConfig>  configuredAccessServices = serverConfig.getAccessServicesConfig();\n-\n-            if (configuredAccessServices != null)\n-            {\n-                for (AccessServiceConfig accessServiceConfig : configuredAccessServices)\n-                {\n-                    if (accessServiceConfig != null)\n-                    {\n-                        if (serviceURLMarker.equals(accessServiceConfig.getAccessServiceURLMarker()))\n-                        {\n-                            /*\n-                             * Found it - just need to set up topic Name\n-                             */\n-                            Connection connection = accessServiceConfig.getAccessServiceInTopic();\n-\n-                            if (connection != null)\n-                            {\n-                                Endpoint endpoint = connection.getEndpoint();\n-\n-                                if (endpoint != null)\n-                                {\n-                                    endpoint.setAddress(topicName);\n-                                    connection.setEndpoint(endpoint);\n-                                    accessServiceConfig.setAccessServiceInTopic(connection);\n-                                    setAccessServicesConfig(userId, serverName, configuredAccessServices);\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Update the out topic name for a specific access service.\n-     *\n-     * @param userId                user that is issuing the request.\n-     * @param serverName            local server name.\n-     * @param serviceURLMarker string indicating which access service it requested\n-     * @param topicName string for new topic name\n-     *\n-     * @return map of topic names or\n-     * OMAGNotAuthorizedException  the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or accessServicesConfig parameter.\n-     */\n-    public VoidResponse  overrideAccessServiceOutTopicName(String userId,\n-                                                           String serverName,\n-                                                           String serviceURLMarker,\n-                                                           String topicName)\n-    {\n-        final String methodName   = \"overrideAccessServiceOutTopicName\";\n-        final String serviceURLMarkerPropertyName = \"serviceURLMarker\";\n-        final String topicPropertyName = \"topicName\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            /*\n-             * Validate and set up the userName and server name.\n-             */\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-            errorHandler.validatePropertyNotNull(topicName, topicPropertyName, serverName, methodName);\n-            errorHandler.validatePropertyNotNull(serviceURLMarker, serviceURLMarkerPropertyName, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-            List<AccessServiceConfig>  configuredAccessServices = serverConfig.getAccessServicesConfig();\n-\n-            if (configuredAccessServices != null)\n-            {\n-                for (AccessServiceConfig accessServiceConfig : configuredAccessServices)\n-                {\n-                    if (accessServiceConfig != null)\n-                    {\n-                        if (serviceURLMarker.equals(accessServiceConfig.getAccessServiceURLMarker()))\n-                        {\n-                            /*\n-                             * Found it - just need to set up topic Name\n-                             */\n-                            Connection connection = accessServiceConfig.getAccessServiceOutTopic();\n-\n-                            if (connection != null)\n-                            {\n-                                Endpoint endpoint = connection.getEndpoint();\n-\n-                                if (endpoint != null)\n-                                {\n-                                    endpoint.setAddress(topicName);\n-                                    connection.setEndpoint(endpoint);\n-                                    accessServiceConfig.setAccessServiceOutTopic(connection);\n-                                    setAccessServicesConfig(userId, serverName, configuredAccessServices);\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-\n-    /**\n-     * Set up the configuration for all of the open metadata access services (OMASs).  This overrides\n-     * the current values.\n-     *\n-     * @param userId                user that is issuing the request.\n-     * @param serverName            local server name.\n-     * @param accessServicesConfig  list of configuration properties for each access service.\n-     * @return void response or\n-     * OMAGNotAuthorizedException  the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or accessServicesConfig parameter.\n-     */\n-    public VoidResponse setAccessServicesConfig(String                    userId,\n-                                                String                    serverName,\n-                                                List<AccessServiceConfig> accessServicesConfig)\n-    {\n-        final String methodName = \"setAccessServicesConfig\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            List<String>  configAuditTrail          = serverConfig.getAuditTrail();\n-\n-            if (configAuditTrail == null)\n-            {\n-                configAuditTrail = new ArrayList<>();\n-            }\n-\n-            if (accessServicesConfig == null)\n-            {\n-                configAuditTrail.add(new Date().toString() + \" \" + userId + \" removed configuration for access services.\");\n-            }\n-            else\n-            {\n-                configAuditTrail.add(new Date().toString() + \" \" + userId + \" updated configuration for access services.\");\n-            }\n-\n-            serverConfig.setAuditTrail(configAuditTrail);\n-\n-            serverConfig.setAccessServicesConfig(accessServicesConfig);\n-\n-            configStore.saveServerConfig(serverName, methodName, serverConfig);\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-\n-\n-    /**\n-     * Extract the current value of the enterprise access configuration.\n-     *\n-     * @param serverConfig current configuration\n-     * @return enterprise access configuration\n-     */\n-    private EnterpriseAccessConfig getEnterpriseAccessConfig(OMAGServerConfig   serverConfig)\n-    {\n-        RepositoryServicesConfig repositoryServicesConfig = serverConfig.getRepositoryServicesConfig();\n-\n-        if (repositoryServicesConfig != null)\n-        {\n-            return repositoryServicesConfig.getEnterpriseAccessConfig();\n-        }\n-\n-        return null;\n-    }\n-\n-\n-    /**\n-     * Set up the configuration that controls the enterprise repository services.  These services are part\n-     * of the Open Metadata Repository Services (OMRS).  They provide federated queries and federated event\n-     * notifications that cover metadata from the local repository plus any repositories connected via\n-     * open metadata repository cohorts.\n-     *\n-     * @param userId  user that is issuing the request\n-     * @param serverName  local server name\n-     * @param enterpriseAccessConfig  enterprise repository services configuration properties.\n-     * @return void response or\n-     * OMAGNotAuthorizedException the supplied userId is not authorized to issue this command or\n-     * OMAGInvalidParameterException invalid serverName or enterpriseAccessConfig parameter.\n-     */\n-    public VoidResponse setEnterpriseAccessConfig(String                 userId,\n-                                                  String                 serverName,\n-                                                  EnterpriseAccessConfig enterpriseAccessConfig)\n-    {\n-        final String methodName = \"setEnterpriseAccessConfig\";\n-\n-        RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);\n-\n-        VoidResponse response = new VoidResponse();\n-\n-        try\n-        {\n-            errorHandler.validateServerName(serverName, methodName);\n-            errorHandler.validateUserId(userId, serverName, methodName);\n-\n-            OMAGServerConfig serverConfig = configStore.getServerConfig(userId, serverName, methodName);\n-\n-            List<String>  configAuditTrail          = serverConfig.getAuditTrail();\n-\n-            if (configAuditTrail == null)\n-            {\n-                configAuditTrail = new ArrayList<>();\n-            }\n-\n-            if (enterpriseAccessConfig == null)\n-            {\n-                configAuditTrail.add(new Date().toString() + \" \" + userId + \" removed configuration for enterprise repository services (used by access services).\");\n-            }\n-            else\n-            {\n-                configAuditTrail.add(new Date().toString() + \" \" + userId + \" updated configuration for enterprise repository services (used by access services).\");\n-            }\n-\n-            serverConfig.setAuditTrail(configAuditTrail);\n-\n-            RepositoryServicesConfig repositoryServicesConfig = serverConfig.getRepositoryServicesConfig();\n-\n-            if (repositoryServicesConfig != null)\n-            {\n-                repositoryServicesConfig.setEnterpriseAccessConfig(enterpriseAccessConfig);\n-            }\n-            else if (enterpriseAccessConfig != null)\n-            {\n-                OMRSConfigurationFactory configurationFactory     = new OMRSConfigurationFactory();\n-\n-                repositoryServicesConfig = configurationFactory.getDefaultRepositoryServicesConfig();\n-\n-                repositoryServicesConfig.setEnterpriseAccessConfig(enterpriseAccessConfig);\n-            }\n-\n-            serverConfig.setRepositoryServicesConfig(repositoryServicesConfig);\n-            configStore.saveServerConfig(serverName, methodName, serverConfig);\n-        }\n-        catch (OMAGInvalidParameterException  error)\n-        {\n-            exceptionHandler.captureInvalidParameterException(response, error);\n-        }\n-        catch (OMAGNotAuthorizedException  error)\n-        {\n-            exceptionHandler.captureNotAuthorizedException(response, error);\n-        }\n-        catch (Throwable  error)\n-        {\n-            exceptionHandler.capturePlatformRuntimeException(serverName, methodName, response, error);\n-        }\n-\n-        restCallLogger.logRESTCallReturn(token, response.toString());\n-\n-        return response;\n-    }\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "9579bdd4e0d67b75e990bf5525bcc5ebed68b3af", "committedDate": "2020-02-23 11:15:01 +0000", "message": "Add editing extensions to admin services (#284, #2514)"}, {"oid": "617b7cf26e233ad4d5ee320d75962e1d553f7f5f", "committedDate": "2020-05-24 22:20:36 +0100", "message": "Add documentation for Dojo (#3064)"}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "488de726b1263c68c144b5bd3375472186247616", "committedDate": "2020-10-09 11:23:00 +0100", "message": "Corrects error in Access Services Admin API"}, {"oid": "c25054e014ec124b66d406619f8f7049a7324416", "committedDate": "2020-10-19 10:06:38 +0100", "message": "Resolving conflict in readme file"}, {"oid": "1c2920792f5db74b627ac6cc4018c58395495371", "committedDate": "2021-02-26 18:12:30 +0000", "message": "Nolonger catch Throwable"}, {"oid": "24fddcefb9d0437af44635151fd4a19aecb1addb", "committedDate": "2021-08-14 21:15:55 +0100", "message": "Add start/stop server"}, {"oid": "969d62927b66587cf451b0ebce0d2f5a478dceeb", "committedDate": "2022-01-02 19:56:33 +0000", "message": "Clean up software server capabilities"}, {"oid": "55a890dac01fbad3bea86e155f07800dce7b5567", "committedDate": "2022-03-14 15:01:31 +0000", "message": "Add new dev status and update URLs (#6158, #6155)"}, {"oid": "95546760d7552b8648dff7af9dfe23d77d4fa30f", "committedDate": "2022-03-27 08:55:52 +0100", "message": "Improve event handling"}, {"oid": "68f725973729ae89e361a652c9981f2ab6b6c5d7", "committedDate": "2022-08-15 09:31:40 +0100", "message": "Add extensions for sustainability"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0Mjg3Mw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380142873", "body": "Was it necessary to reformat the whole file - makes it difficult to see what has changed", "bodyText": "Was it necessary to reformat the whole file - makes it difficult to see what has changed", "bodyHTML": "<p dir=\"auto\">Was it necessary to reformat the whole file - makes it difficult to see what has changed</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:02:53Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "f0b6c960cdc50a091d5a7faa0328a6031344d162", "committedDate": "2020-03-07 13:36:41 +0000", "message": "Renaming"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzIzNA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143234", "body": "These are view services not access services and they run in a View server not a Metadata server.", "bodyText": "These are view services not access services and they run in a View server not a Metadata server.", "bodyHTML": "<p dir=\"auto\">These are view services not access services and they run in a View server not a Metadata server.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:03:43Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "f0b6c960cdc50a091d5a7faa0328a6031344d162", "committedDate": "2020-03-07 13:36:41 +0000", "message": "Renaming"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzQ1Nw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143457", "body": "View services do not run in a metadata server - they run in a view server", "bodyText": "View services do not run in a metadata server - they run in a view server", "bodyHTML": "<p dir=\"auto\">View services do not run in a metadata server - they run in a view server</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:04:19Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +\n+                    \"a REST API. The view service subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that the expected access services are started and that they each report that their components are \" +\n+                    \"working correctly.\"),\n+\n+    SKIPPING_VIEW_SERVICE(\"OMAG-ADMIN-0021\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the view service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "f0b6c960cdc50a091d5a7faa0328a6031344d162", "committedDate": "2020-03-07 13:36:41 +0000", "message": "Renaming"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0MzYxNQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380143615", "body": "ditto - should be View server", "bodyText": "ditto - should be View server", "bodyHTML": "<p dir=\"auto\">ditto - should be View server</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:04:39Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/auditlog/OMAGAdminAuditCode.java", "diffHunk": "@@ -86,89 +86,174 @@\n                                     \"resources that they were using.  Restart the server whenever its services are needed again.\"),\n \n     STARTING_ACCESS_SERVICES(\"OMAG-ADMIN-0010\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The Open Metadata Access Services (OMASs) are starting\",\n-                             \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n-                                     \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n-                                     \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n-                                     \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n-                                     \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that the expected access services are started and that they each report that their components are \" +\n-                                     \"working correctly.\"),\n+        OMRSAuditLogRecordSeverity.STARTUP,\n+        \"The Open Metadata Access Services (OMASs) are starting\",\n+        \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                \"These provide specialist APIs for accessing open metadata.  Many of the access services support \" +\n+                \"both a REST API and event-based interaction through a topic.  They also support options that \" +\n+                \"control their behavior and the scope of the metadata that they work with.  The access service \" +\n+                \"subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+        \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                \"Verify that the expected access services are started and that they each report that their components are \" +\n+                \"working correctly.\"),\n \n     SKIPPING_ACCESS_SERVICE(\"OMAG-ADMIN-0011\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n-                             \"The operational admin services will skip the initialization of the access service subsystem \" +\n-                                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n-                             \"The server's configuration document lists the access services that should be started in this server.  \" +\n-                                     \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n-                                     \"of the access service in the configuration document to be enabled and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the access service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that this access service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the access service in the configuration document to be enabled and restart the server.\"),\n \n     ALL_ACCESS_SERVICES_STARTED(\"OMAG-ADMIN-0012\",\n-                             OMRSAuditLogRecordSeverity.STARTUP,\n-                             \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n-                             \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n-                                        \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n-                                        \"its configuration to the server's configuration document.  By default a newly configured access \" +\n-                                        \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n-                                        \"document.  In which case the start up sequence skips it and the number of started access services\" +\n-                                        \"is less than the number of configured access services.\",\n-                             \"Review the start up messages to ensure that all of the correct access services have been started \" +\n-                                        \"and they are operating without errors.\"),\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata Access Services (OMASs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the access service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An access services is configured by adding \" +\n+                    \"its configuration to the server's configuration document.  By default a newly configured access \" +\n+                    \"service is also ENABLED. A configured access service may be temporarily disabled in the configuration\" +\n+                    \"document.  In which case the start up sequence skips it and the number of started access services\" +\n+                    \"is less than the number of configured access services.\",\n+            \"Review the start up messages to ensure that all of the correct access services have been started \" +\n+                    \"and they are operating without errors.\"),\n \n     STOPPING_ACCESS_SERVICES(\"OMAG-ADMIN-0013\",\n-                             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                             \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n-                             \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n-                                     \" its shutdown, \" +\n-                                     \"it will no longer process events, nor REST API calls to this server.\",\n-                             \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n-                                     \"there are no errors reported.  \"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} are shutting down\",\n+            \"The server is in the process of The access services will be shut down one at a time.  When an access service competes\" +\n+                    \" its shutdown, \" +\n+                    \"it will no longer process events, nor REST API calls to this server.\",\n+            \"If the intention was to shutdown the access services, monitor the shutdown process to ensure that \" +\n+                    \"there are no errors reported.  \"),\n \n     ALL_ACCESS_SERVICES_STOPPED(\"OMAG-ADMIN-0014\",\n-                                OMRSAuditLogRecordSeverity.SHUTDOWN,\n-                                \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n-                                \"The access services are no longer available for the server.\",\n-                                \"Validate that all resources used by the access services have been released.\"),\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Open Metadata Access Services (OMASs) in server {0} have shutdown\",\n+            \"The access services are no longer available for the server.\",\n+            \"Validate that all resources used by the access services have been released.\"),\n \n     ACCESS_SERVICE_INSTANCE_FAILURE(\"OMAG-ADMIN-0015\",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n-                                    \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-                                    \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The {0} access service is unable to initialize a new instance; error message is {1}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n \n     BAD_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-0016\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n-                                           \"Service \" +\n-                                           \"(OMAS); error message is {2}\",\n-             \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n-             \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n-                                           \"server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services are not able to start the {0} access service because the  {0} whilst initializing the {1} Open Metadata Access \" +\n+                    \"Service \" +\n+                    \"(OMAS); error message is {2}\",\n+            \"The access service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and the other reported failures to determine the cause of the problem.  Once this is resolved, restart the \" +\n+                    \"server.\"),\n \n     ACCESS_SERVICE_FAILURE(\"OMAG-ADMIN-0017\",\n-             OMRSAuditLogRecordSeverity.EXCEPTION,\n-             \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n-                                   \" The error message is {2}\",\n-             \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n-                                   \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n-                                   \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n-             \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n-                                   \"typically either \" +\n-                                   \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n-                                   \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n-                                   \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n-                                   \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The admin services caught an unexpected {0} exception whilst initializing the {1} service. \" +\n+                    \" The error message is {2}\",\n+            \"The admin services detected an error during the start up of a specific access service subsystem.  \" +\n+                    \"Its services are not available for the server and so the server failed to start.  Details of the error \" +\n+                    \"that the access service detected are logged and a detailed exception is returned to the caller. \",\n+            \"Review the error message and the other failures reported by the access service to determine the cause of the problem.  It is \" +\n+                    \"typically either \" +\n+                    \"a configuration error, or one of the external resources it needs, such as a topic on the event bus, is not  \" +\n+                    \"available. Access services may be developed by the Egeria community or a third party.  If the error messages \" +\n+                    \"are not sufficient to resolve the problem, raise an issue with the author of the access service to get this \" +\n+                    \"improved.  Once the root cause of the error is resolved, restart the server.\"),\n \n     NULL_ACCESS_SERVICE_ADMIN_CLASS(\"OMAG-ADMIN-400-011 \",\n-                                    OMRSAuditLogRecordSeverity.EXCEPTION,\n-                                    \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n-                                    \"The system is unable to initialize this access service. The server failed to start.\",\n-                                    \"If the access service should be initialized then set up the appropriate admin services class name \" +\n-                                            \"in the access service's configuration and restart the server instance. Otherwise, \" +\n-                                            \"remove the configuration for this access service and restart the server.\"),\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The OMAG server {0} has been passed a null admin services class name for access service {1}\",\n+            \"The system is unable to initialize this access service. The server failed to start.\",\n+            \"If the access service should be initialized then set up the appropriate admin services class name \" +\n+                    \"in the access service's configuration and restart the server instance. Otherwise, \" +\n+                    \"remove the configuration for this access service and restart the server.\"),\n+\n+    STARTING_VIEW_SERVICES(\"OMAG-ADMIN-0020\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Open Metadata View Services (OMVSs) are starting\",\n+            \"The operational admin services are initializing the access service subsystems in a metadata server instance.  \" +\n+                    \"These provide specialist task orientated APIs for viewing open metadata.  The view services support \" +\n+                    \"a REST API. The view service subsystems are started one at a time.  A fatal error in any of them prevents the server from starting.\",\n+            \"The server's configuration document lists the access services that should be started in this server.  \" +\n+                    \"Verify that the expected access services are started and that they each report that their components are \" +\n+                    \"working correctly.\"),\n+\n+    SKIPPING_VIEW_SERVICE(\"OMAG-ADMIN-0021\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The {0} is marked as DISABLED and so will not be started in the {1} server\",\n+            \"The operational admin services will skip the initialization of the view service subsystem \" +\n+                    \"in this metadata server because it is marked as disabled in the configuration document.\",\n+            \"The server's configuration document lists the view services that should be started in this server.  \" +\n+                    \"Verify that this view service should be disabled. If it should be enabled then change the definition\" +\n+                    \"of the view service in the configuration document to be enabled and restart the server.\"),\n+\n+    ALL_VIEW_SERVICES_STARTED(\"OMAG-ADMIN-0022\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"{0} out of {1} configured Open Metadata View Services (OMVSs) have started.\",\n+            \"The operational admin services have completed the initialization of all of the view service subsystems \" +\n+                    \"enabled in the metadata server.  They are ready for use.  An view services is configured by adding \" +", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": null, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "f0b6c960cdc50a091d5a7faa0328a6031344d162", "committedDate": "2020-03-07 13:36:41 +0000", "message": "Renaming"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDIzNQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144235", "body": "Layout", "bodyText": "Layout", "bodyHTML": "<p dir=\"auto\">Layout</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:05:59Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -93,13 +95,12 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n         /*\n          * All servers need the repository services\n          */\n-        if (repositoryServicesConfig == null)\n-        {\n+        if (repositoryServicesConfig == null) {", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex bee537c242..04c758bed2 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -90,7 +90,6 @@ public class ServerTypeClassifier\n                                                       errorCode.getUserAction());\n         }\n \n-        this.validateConfigServerName(serverName, configurationDocument.getLocalServerName(), methodName);\n \n         /*\n          * All servers need the repository services\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex bee537c242..04c758bed2 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -90,7 +90,6 @@ public class ServerTypeClassifier\n                                                       errorCode.getUserAction());\n         }\n \n-        this.validateConfigServerName(serverName, configurationDocument.getLocalServerName(), methodName);\n \n         /*\n          * All servers need the repository services\n", "next_change": {"commit": "9579bdd4e0d67b75e990bf5525bcc5ebed68b3af", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 04c758bed2..63674e6d4c 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -94,7 +94,8 @@ public class ServerTypeClassifier\n         /*\n          * All servers need the repository services\n          */\n-        if (repositoryServicesConfig == null) {\n+        if (repositoryServicesConfig == null)\n+        {\n             /*\n              * To get here, then another service is configured but not the repository services.\n              */\n", "next_change": {"commit": "e43d2f66a84f17238f7b2704870ac8d4f14daf4b", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 63674e6d4c..1e7fa7ff10 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -99,15 +93,9 @@ public class ServerTypeClassifier\n             /*\n              * To get here, then another service is configured but not the repository services.\n              */\n-            OMAGAdminErrorCode errorCode = OMAGAdminErrorCode.NULL_REPOSITORY_CONFIG;\n-            String errorMessage = errorCode.getErrorMessageId() + errorCode.getFormattedErrorMessage(serverName);\n-\n-            throw new OMAGConfigurationErrorException(errorCode.getHTTPErrorCode(),\n+            throw new OMAGConfigurationErrorException(OMAGAdminErrorCode.NULL_REPOSITORY_CONFIG.getMessageDefinition(serverName),\n                                                       this.getClass().getName(),\n-                                                      methodName,\n-                                                      errorMessage,\n-                                                      errorCode.getSystemAction(),\n-                                                      errorCode.getUserAction());\n+                                                      methodName);\n         }\n \n         /*\n", "next_change": {"commit": "d92b1299ae6f243e412e36f5330b2589673099a6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 1e7fa7ff10..1677b869a4 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -104,14 +98,22 @@ public class ServerTypeClassifier\n         if (accessServiceConfigList != null)\n         {\n             LocalRepositoryMode localRepositoryMode = this.detectLocalRepository(repositoryServicesConfig);\n-            if (localRepositoryMode == LocalRepositoryMode.OPEN_METADATA_NATIVE)\n+            if (localRepositoryMode == LocalRepositoryMode.METADATA_CACHE)\n             {\n                 serverTypeClassification = ServerTypeClassification.METADATA_SERVER;\n             }\n-            else if (localRepositoryMode == LocalRepositoryMode.REPOSITORY_PROXY)\n+            else if (localRepositoryMode == LocalRepositoryMode.OPEN_METADATA_NATIVE)\n             {\n                 serverTypeClassification = ServerTypeClassification.METADATA_SERVER;\n             }\n+            else if (localRepositoryMode == LocalRepositoryMode.PLUGIN_REPOSITORY)\n+            {\n+                serverTypeClassification = ServerTypeClassification.METADATA_SERVER;\n+            }\n+            else if (localRepositoryMode == LocalRepositoryMode.REPOSITORY_PROXY)\n+            {\n+                serverTypeClassification = ServerTypeClassification.REPOSITORY_PROXY;\n+            }\n             else\n             {\n                 serverTypeClassification = ServerTypeClassification.METADATA_ACCESS_POINT;\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "9579bdd4e0d67b75e990bf5525bcc5ebed68b3af", "committedDate": "2020-02-23 11:15:01 +0000", "message": "Add editing extensions to admin services (#284, #2514)"}, {"oid": "e43d2f66a84f17238f7b2704870ac8d4f14daf4b", "committedDate": "2020-03-11 15:22:14 +0000", "message": "Support ALF in exceptions and messages (#2537)"}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "c82de42e1a2f6c859b3541106d7afcc3114bd3d1", "committedDate": "2020-12-13 12:38:00 +0000", "message": "Add engine administration"}, {"oid": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "committedDate": "2021-01-01 12:37:18 +0000", "message": "Updated config for the engine host"}, {"oid": "d92b1299ae6f243e412e36f5330b2589673099a6", "committedDate": "2021-02-16 20:50:38 +0000", "message": "Simplify use of event mapper (#4700)"}, {"oid": "0ef1b2fa8445e0514d37e3de33683ddcc78c0a57", "committedDate": "2021-06-03 15:16:31 +0100", "message": "#458 removal of gaian/ranger/derby/virtualization connectors/services"}, {"oid": "da166e104c9dc7a9c925df4f65af4744dbba9a42", "committedDate": "2021-06-03 21:50:57 +0100", "message": "#458 further removals of security sync etc"}, {"oid": "2ac247fb531a73444a38dc7ddd9f5c2d01eb7988", "committedDate": "2021-06-07 15:22:37 +0100", "message": "Remove discovery and strewardship server config"}, {"oid": "9d4ef3ece742c61dc4c177cd14f9d018e7d406e4", "committedDate": "2021-06-08 09:56:28 +0100", "message": "Merge branch 'master' of https://github.com/odpi/egeria into issue458a"}, {"oid": "d212b48ee7241a9345955a25d2e15956b8b1fcb1", "committedDate": "2021-06-08 10:15:17 +0100", "message": "#458 fix dropped brace from merge conflict resolution"}, {"oid": "ba9e5d6e75d939a4ba6c492b1b07ed03cc204f9e", "committedDate": "2021-06-10 16:30:58 +0200", "message": "Remove DataPlatformServicesConfig and references."}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}, {"oid": "2d0e753c7cd68869c806f7f1df59575aef7e11c7", "committedDate": "2023-03-19 12:04:25 +0000", "message": "Add OIF frameworks services"}, {"oid": "9ba0caecbfd83431d84d3794be3f797786bc4e2f", "committedDate": "2023-03-19 13:38:10 +0000", "message": "Merge branch 'main' of https://github.com/odpi/egeria into little-mac"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDQzNA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144434", "body": "Layout", "bodyText": "Layout", "bodyHTML": "<p dir=\"auto\">Layout</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:06:27Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -109,8 +110,7 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n                                                       errorCode.getUserAction());\n         }\n \n-        if (accessServiceConfigList != null)\n-        {\n+        if (accessServiceConfigList != null) {", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex bee537c242..04c758bed2 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -110,7 +109,20 @@ public class ServerTypeClassifier\n                                                       errorCode.getUserAction());\n         }\n \n-        if (accessServiceConfigList != null) {\n+        /*\n+         * The access service list is only allowed in a metadata server or metadata access point.\n+         */\n+        if (accessServiceConfigList != null)\n+        {\n+            if (this.detectLocalRepository(repositoryServicesConfig))\n+            {\n+                serverTypeClassification = ServerTypeClassification.METADATA_SERVER;\n+            }\n+            else\n+            {\n+                serverTypeClassification = ServerTypeClassification.METADATA_ACCESS_POINT;\n+            }\n+\n             this.validateSubsystemNotConfigured(serverName,\n                                                 serverTypeClassification.getServerTypeName(),\n                                                 GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceName(),\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex bee537c242..04c758bed2 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -110,7 +109,20 @@ public class ServerTypeClassifier\n                                                       errorCode.getUserAction());\n         }\n \n-        if (accessServiceConfigList != null) {\n+        /*\n+         * The access service list is only allowed in a metadata server or metadata access point.\n+         */\n+        if (accessServiceConfigList != null)\n+        {\n+            if (this.detectLocalRepository(repositoryServicesConfig))\n+            {\n+                serverTypeClassification = ServerTypeClassification.METADATA_SERVER;\n+            }\n+            else\n+            {\n+                serverTypeClassification = ServerTypeClassification.METADATA_ACCESS_POINT;\n+            }\n+\n             this.validateSubsystemNotConfigured(serverName,\n                                                 serverTypeClassification.getServerTypeName(),\n                                                 GovernanceServicesDescription.CONFORMANCE_SUITE_SERVICES.getServiceName(),\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "9579bdd4e0d67b75e990bf5525bcc5ebed68b3af", "committedDate": "2020-02-23 11:15:01 +0000", "message": "Add editing extensions to admin services (#284, #2514)"}, {"oid": "e43d2f66a84f17238f7b2704870ac8d4f14daf4b", "committedDate": "2020-03-11 15:22:14 +0000", "message": "Support ALF in exceptions and messages (#2537)"}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "c82de42e1a2f6c859b3541106d7afcc3114bd3d1", "committedDate": "2020-12-13 12:38:00 +0000", "message": "Add engine administration"}, {"oid": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "committedDate": "2021-01-01 12:37:18 +0000", "message": "Updated config for the engine host"}, {"oid": "d92b1299ae6f243e412e36f5330b2589673099a6", "committedDate": "2021-02-16 20:50:38 +0000", "message": "Simplify use of event mapper (#4700)"}, {"oid": "0ef1b2fa8445e0514d37e3de33683ddcc78c0a57", "committedDate": "2021-06-03 15:16:31 +0100", "message": "#458 removal of gaian/ranger/derby/virtualization connectors/services"}, {"oid": "da166e104c9dc7a9c925df4f65af4744dbba9a42", "committedDate": "2021-06-03 21:50:57 +0100", "message": "#458 further removals of security sync etc"}, {"oid": "2ac247fb531a73444a38dc7ddd9f5c2d01eb7988", "committedDate": "2021-06-07 15:22:37 +0100", "message": "Remove discovery and strewardship server config"}, {"oid": "9d4ef3ece742c61dc4c177cd14f9d018e7d406e4", "committedDate": "2021-06-08 09:56:28 +0100", "message": "Merge branch 'master' of https://github.com/odpi/egeria into issue458a"}, {"oid": "d212b48ee7241a9345955a25d2e15956b8b1fcb1", "committedDate": "2021-06-08 10:15:17 +0100", "message": "#458 fix dropped brace from merge conflict resolution"}, {"oid": "ba9e5d6e75d939a4ba6c492b1b07ed03cc204f9e", "committedDate": "2021-06-10 16:30:58 +0200", "message": "Remove DataPlatformServicesConfig and references."}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}, {"oid": "2d0e753c7cd68869c806f7f1df59575aef7e11c7", "committedDate": "2023-03-19 12:04:25 +0000", "message": "Add OIF frameworks services"}, {"oid": "9ba0caecbfd83431d84d3794be3f797786bc4e2f", "committedDate": "2023-03-19 13:38:10 +0000", "message": "Merge branch 'main' of https://github.com/odpi/egeria into little-mac"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NDc2Nw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380144767", "body": "Layout", "bodyText": "Layout", "bodyHTML": "<p dir=\"auto\">Layout</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:07:15Z", "path": "open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java", "diffHunk": "@@ -606,6 +640,59 @@ public ServerTypeClassification getServerType() throws OMAGInvalidParameterExcep\n                                                 GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName(),\n                                                 stewardshipEngineServicesConfig);\n         }\n+        if (viewServiceConfigList != null) {", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "c01facb69465c90261c21573347c128fffa2424e", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex bee537c242..795c88bb30 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -640,7 +776,9 @@ public class ServerTypeClassifier\n                                                 GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName(),\n                                                 stewardshipEngineServicesConfig);\n         }\n-        if (viewServiceConfigList != null) {\n+\n+        if (viewServiceConfigList != null)\n+        {\n             serverTypeClassification = ServerTypeClassification.VIEW_SERVER;\n \n             this.validateSubsystemNotConfigured(serverName,\n", "next_change": {"commit": "c82de42e1a2f6c859b3541106d7afcc3114bd3d1", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 795c88bb30..58fd1b9b17 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -770,11 +664,6 @@ public class ServerTypeClassifier\n                                                 serverTypeClassification.getServerTypeName(),\n                                                 GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceName(),\n                                                 securityOfficerConfig);\n-\n-            this.validateSubsystemNotConfigured(serverName,\n-                                                serverTypeClassification.getServerTypeName(),\n-                                                GovernanceServicesDescription.STEWARDSHIP_SERVICES.getServiceName(),\n-                                                stewardshipEngineServicesConfig);\n         }\n \n         if (viewServiceConfigList != null)\n", "next_change": {"commit": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 58fd1b9b17..2b9297d2b3 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -644,26 +315,6 @@ public class ServerTypeClassifier\n                                                 serverTypeClassification.getServerTypeName(),\n                                                 GovernanceServicesDescription.DATA_ENGINE_PROXY_SERVICES.getServiceName(),\n                                                 dataEngineProxyConfig);\n-\n-            this.validateSubsystemNotConfigured(serverName,\n-                                                serverTypeClassification.getServerTypeName(),\n-                                                GovernanceServicesDescription.DATA_PLATFORM_SERVICES.getServiceName(),\n-                                                dataPlatformServicesConfig);\n-\n-            this.validateSubsystemNotConfigured(serverName,\n-                                                serverTypeClassification.getServerTypeName(),\n-                                                GovernanceServicesDescription.OPEN_LINEAGE_SERVICES.getServiceName(),\n-                                                openLineageServerConfig);\n-\n-            this.validateSubsystemNotConfigured(serverName,\n-                                                serverTypeClassification.getServerTypeName(),\n-                                                GovernanceServicesDescription.SECURITY_SYNC_SERVICES.getServiceName(),\n-                                                securitySyncConfig);\n-\n-            this.validateSubsystemNotConfigured(serverName,\n-                                                serverTypeClassification.getServerTypeName(),\n-                                                GovernanceServicesDescription.SECURITY_OFFICER_SERVICES.getServiceName(),\n-                                                securityOfficerConfig);\n         }\n \n         if (viewServiceConfigList != null)\n", "next_change": null}]}}, {"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 795c88bb30..58fd1b9b17 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -786,6 +675,11 @@ public class ServerTypeClassifier\n                                                 ACCESS_SERVICES_NAME,\n                                                 accessServiceConfigList);\n \n+            this.validateSubsystemNotConfigured(serverName,\n+                                                serverTypeClassification.getServerTypeName(),\n+                                                ENGINE_SERVICES_NAME,\n+                                                engineServiceConfigList);\n+\n             this.validateSubsystemNotConfigured(serverName,\n                                                 serverTypeClassification.getServerTypeName(),\n                                                 INTEGRATION_SERVICES_NAME,\n", "next_change": {"commit": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "changed_code": [{"header": "diff --git a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\nindex 58fd1b9b17..2b9297d2b3 100644\n--- a/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n+++ b/open-metadata-implementation/admin-services/admin-services-server/src/main/java/org/odpi/openmetadata/adminservices/classifier/ServerTypeClassifier.java\n", "chunk": "@@ -677,8 +328,8 @@ public class ServerTypeClassifier\n \n             this.validateSubsystemNotConfigured(serverName,\n                                                 serverTypeClassification.getServerTypeName(),\n-                                                ENGINE_SERVICES_NAME,\n-                                                engineServiceConfigList);\n+                                                GovernanceServicesDescription.ENGINE_HOST_SERVICES.getServiceName(),\n+                                                engineHostServicesConfig);\n \n             this.validateSubsystemNotConfigured(serverName,\n                                                 serverTypeClassification.getServerTypeName(),\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "9579bdd4e0d67b75e990bf5525bcc5ebed68b3af", "committedDate": "2020-02-23 11:15:01 +0000", "message": "Add editing extensions to admin services (#284, #2514)"}, {"oid": "e43d2f66a84f17238f7b2704870ac8d4f14daf4b", "committedDate": "2020-03-11 15:22:14 +0000", "message": "Support ALF in exceptions and messages (#2537)"}, {"oid": "c01facb69465c90261c21573347c128fffa2424e", "committedDate": "2020-09-29 15:13:06 +0100", "message": "Admin for integration daemon (#2512) and improvements to View Service config"}, {"oid": "c82de42e1a2f6c859b3541106d7afcc3114bd3d1", "committedDate": "2020-12-13 12:38:00 +0000", "message": "Add engine administration"}, {"oid": "6e2dd382c4a7a668091e8f2812c8aa998dab9f6f", "committedDate": "2021-01-01 12:37:18 +0000", "message": "Updated config for the engine host"}, {"oid": "d92b1299ae6f243e412e36f5330b2589673099a6", "committedDate": "2021-02-16 20:50:38 +0000", "message": "Simplify use of event mapper (#4700)"}, {"oid": "0ef1b2fa8445e0514d37e3de33683ddcc78c0a57", "committedDate": "2021-06-03 15:16:31 +0100", "message": "#458 removal of gaian/ranger/derby/virtualization connectors/services"}, {"oid": "da166e104c9dc7a9c925df4f65af4744dbba9a42", "committedDate": "2021-06-03 21:50:57 +0100", "message": "#458 further removals of security sync etc"}, {"oid": "2ac247fb531a73444a38dc7ddd9f5c2d01eb7988", "committedDate": "2021-06-07 15:22:37 +0100", "message": "Remove discovery and strewardship server config"}, {"oid": "9d4ef3ece742c61dc4c177cd14f9d018e7d406e4", "committedDate": "2021-06-08 09:56:28 +0100", "message": "Merge branch 'master' of https://github.com/odpi/egeria into issue458a"}, {"oid": "d212b48ee7241a9345955a25d2e15956b8b1fcb1", "committedDate": "2021-06-08 10:15:17 +0100", "message": "#458 fix dropped brace from merge conflict resolution"}, {"oid": "ba9e5d6e75d939a4ba6c492b1b07ed03cc204f9e", "committedDate": "2021-06-10 16:30:58 +0200", "message": "Remove DataPlatformServicesConfig and references."}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}, {"oid": "2d0e753c7cd68869c806f7f1df59575aef7e11c7", "committedDate": "2023-03-19 12:04:25 +0000", "message": "Add OIF frameworks services"}, {"oid": "9ba0caecbfd83431d84d3794be3f797786bc4e2f", "committedDate": "2023-03-19 13:38:10 +0000", "message": "Merge branch 'main' of https://github.com/odpi/egeria into little-mac"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NjA1Nw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380146057", "body": "Layout - braces thoughtout", "bodyText": "Layout - braces thoughtout", "bodyHTML": "<p dir=\"auto\">Layout - braces thoughtout</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:10:23Z", "path": "open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java", "diffHunk": "@@ -89,43 +90,70 @@ private static RegisteredOMAGService getServiceDescription(String serviceName,\n     {\n         validateUserAsInvestigatorForPlatform(userId);\n \n-        List<RegisteredOMAGService> response = new ArrayList<>();\n-\n         /*\n          * Get the list of Access Services implemented in this server.\n          */\n-        List<AccessServiceRegistration> accessServiceRegistrationList = OMAGAccessServiceRegistration.getAccessServiceRegistrationList();\n+        List<ServiceRegistration> accessServiceRegistrationList = OMAGAccessServiceRegistration.getAccessServiceRegistrationList();\n \n         /*\n          * Set up the available access services.\n          */\n-        if ((accessServiceRegistrationList != null) && (! accessServiceRegistrationList.isEmpty()))\n-        {\n-            for (AccessServiceRegistration registration : accessServiceRegistrationList)\n-            {\n-                if (registration != null)\n-                {\n-                    if (registration.getAccessServiceOperationalStatus() == AccessServiceOperationalStatus.ENABLED)\n-                    {\n-                        response.add(getServiceDescription(registration.getAccessServiceName(),\n-                                                           registration.getAccessServiceURLMarker(),\n-                                                           registration.getAccessServiceDescription(),\n-                                                           registration.getAccessServiceWiki()));\n+        return getRegisteredOMAGServices(accessServiceRegistrationList);\n+    }\n+    /**\n+     * Return the list of view services that are registered (supported) in this OMAG Server Platform\n+     * and can be configured in a server.\n+     *\n+     * @param userId calling user\n+     * @return list of view service descriptions\n+     * @throws UserNotAuthorizedException user not authorized\n+     */\n+    public List<RegisteredOMAGService> getRegisteredViewServices(String userId) throws UserNotAuthorizedException\n+    {\n+        validateUserAsInvestigatorForPlatform(userId);\n+\n+\n+\n+        /*\n+         * Get the list of View Services implemented in this server.\n+         */\n+        List<ServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n+\n+        /*\n+         * Set up the available view services.\n+         */\n+        return getRegisteredOMAGServices(viewServiceRegistrationList);\n+    }\n+\n+    /**\n+     * Return the list of services that are registered (supported) in this OMAG Server Platform\n+     * and can be configured in a server.\n+     * @param serviceRegistrationList  service registrations.\n+     * @return list of service descriptions\n+     */\n+    private List<RegisteredOMAGService> getRegisteredOMAGServices(List<ServiceRegistration> serviceRegistrationList) {", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwOTM0NA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382009344", "bodyText": "fixed", "author": "davidradl", "createdAt": "2020-02-20T13:50:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0NjA1Nw=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java b/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\nindex 9d7b311b68..0dad04a151 100644\n--- a/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\n+++ b/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\n", "chunk": "@@ -112,48 +135,41 @@ public class OMAGServerPlatformInstanceMap\n     {\n         validateUserAsInvestigatorForPlatform(userId);\n \n-\n+        List<RegisteredOMAGService> response = new ArrayList<>();\n \n         /*\n          * Get the list of View Services implemented in this server.\n          */\n-        List<ServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n+        List<ViewServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n \n         /*\n          * Set up the available view services.\n          */\n-        return getRegisteredOMAGServices(viewServiceRegistrationList);\n-    }\n-\n-    /**\n-     * Return the list of services that are registered (supported) in this OMAG Server Platform\n-     * and can be configured in a server.\n-     * @param serviceRegistrationList  service registrations.\n-     * @return list of service descriptions\n-     */\n-    private List<RegisteredOMAGService> getRegisteredOMAGServices(List<ServiceRegistration> serviceRegistrationList) {\n-        List<RegisteredOMAGService> response = new ArrayList<>();\n-        if ((serviceRegistrationList != null) && (!serviceRegistrationList.isEmpty())) {\n-            for (ServiceRegistration registration : serviceRegistrationList) {\n-                if (registration != null) {\n-                    if (registration.getServiceOperationalStatus() == ServiceOperationalStatus.ENABLED) {\n-                        response.add(getServiceDescription(registration.getServiceName(),\n-                                registration.getServiceURLMarker(),\n-                                registration.getServiceDescription(),\n-                                registration.getServiceWiki()));\n+        if ((viewServiceRegistrationList != null) && (! viewServiceRegistrationList.isEmpty()))\n+        {\n+            for (ViewServiceRegistration registration : viewServiceRegistrationList)\n+            {\n+                if (registration != null)\n+                {\n+                    if (registration.getViewServiceOperationalStatus() == ServiceOperationalStatus.ENABLED)\n+                    {\n+                        response.add(getServiceDescription(registration.getViewServiceName(),\n+                                                           registration.getViewServiceURLMarker(),\n+                                                           registration.getViewServiceDescription(),\n+                                                           registration.getViewServiceWiki()));\n                     }\n                 }\n             }\n \n         }\n \n-        if (response.isEmpty()) {\n+        if (response.isEmpty())\n+        {\n             return null;\n         }\n \n         return response;\n     }\n-\n     /**\n      * Return the list of governance services that are registered (supported) in this OMAG Server Platform\n      * and can be configured as part of a governance server.\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java b/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\nindex 9d7b311b68..63b6a3ecf0 100644\n--- a/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\n+++ b/open-metadata-implementation/common-services/multi-tenant/src/main/java/org/odpi/openmetadata/commonservices/multitenant/OMAGServerPlatformInstanceMap.java\n", "chunk": "@@ -112,48 +135,41 @@ public class OMAGServerPlatformInstanceMap\n     {\n         validateUserAsInvestigatorForPlatform(userId);\n \n-\n+        List<RegisteredOMAGService> response = new ArrayList<>();\n \n         /*\n          * Get the list of View Services implemented in this server.\n          */\n-        List<ServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n+        List<ViewServiceRegistration> viewServiceRegistrationList = OMAGViewServiceRegistration.getViewServiceRegistrationList();\n \n         /*\n          * Set up the available view services.\n          */\n-        return getRegisteredOMAGServices(viewServiceRegistrationList);\n-    }\n-\n-    /**\n-     * Return the list of services that are registered (supported) in this OMAG Server Platform\n-     * and can be configured in a server.\n-     * @param serviceRegistrationList  service registrations.\n-     * @return list of service descriptions\n-     */\n-    private List<RegisteredOMAGService> getRegisteredOMAGServices(List<ServiceRegistration> serviceRegistrationList) {\n-        List<RegisteredOMAGService> response = new ArrayList<>();\n-        if ((serviceRegistrationList != null) && (!serviceRegistrationList.isEmpty())) {\n-            for (ServiceRegistration registration : serviceRegistrationList) {\n-                if (registration != null) {\n-                    if (registration.getServiceOperationalStatus() == ServiceOperationalStatus.ENABLED) {\n-                        response.add(getServiceDescription(registration.getServiceName(),\n-                                registration.getServiceURLMarker(),\n-                                registration.getServiceDescription(),\n-                                registration.getServiceWiki()));\n+        if ((viewServiceRegistrationList != null) && (! viewServiceRegistrationList.isEmpty()))\n+        {\n+            for (ViewServiceRegistration registration : viewServiceRegistrationList)\n+            {\n+                if (registration != null)\n+                {\n+                    if (registration.getViewServiceOperationalStatus() == ServiceOperationalStatus.ENABLED)\n+                    {\n+                        response.add(getServiceDescription(registration.getViewServiceName(),\n+                                                           registration.getViewServiceURLMarker(),\n+                                                           registration.getViewServiceDescription(),\n+                                                           registration.getViewServiceWiki()));\n                     }\n                 }\n             }\n \n         }\n \n-        if (response.isEmpty()) {\n+        if (response.isEmpty())\n+        {\n             return null;\n         }\n \n         return response;\n     }\n-\n     /**\n      * Return the list of governance services that are registered (supported) in this OMAG Server Platform\n      * and can be configured as part of a governance server.\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}, {"oid": "03c43dd74b749337cd482f0c4497df880d1492db", "committedDate": "2020-03-11 15:23:13 +0000", "message": "Support ALF in the multi-tenant services (#2537)"}, {"oid": "06fe064d6711ca2d4a44b5cfe81f5db133e5426b", "committedDate": "2020-04-29 12:27:13 +0100", "message": "Rex view-service initial drop"}, {"oid": "a3ffa6e9109875e127ca4f356ed20ec6868559f1", "committedDate": "2020-09-29 16:26:02 +0100", "message": "Remove ODF Handler dependencies (#3703)"}, {"oid": "60495d392ad0fa6c24732423dd1df629f2bb7228", "committedDate": "2020-10-19 16:36:09 +0100", "message": "Add finally clause to ensure server instance maps are updated"}, {"oid": "39ca47e9ca5e8fa88e262a10f72a48210712ea27", "committedDate": "2020-12-13 13:32:27 +0000", "message": "Support engien services"}, {"oid": "872d41009707f56e664127f1a2b27d0e75758e41", "committedDate": "2021-01-01 13:13:28 +0000", "message": "Support engine host services"}, {"oid": "d92b1299ae6f243e412e36f5330b2589673099a6", "committedDate": "2021-02-16 20:50:38 +0000", "message": "Simplify use of event mapper (#4700)"}, {"oid": "f5623b414443f571e46724b684125b20d3aeef72", "committedDate": "2021-09-01 15:32:10 +0100", "message": "Prevent relationships of same type between same entities (#5589)"}, {"oid": "515988eaba52811f4bface6da5f468fd388e26df", "committedDate": "2021-11-11 17:55:30 +0000", "message": "Add new call to adminservices to show status of running server"}, {"oid": "42776906a8bcab61ffd1b46e2adb38ec19b7ec42", "committedDate": "2022-02-04 10:14:06 +0000", "message": "Minor fixes to clients and samples to support developer dojo"}, {"oid": "55a890dac01fbad3bea86e155f07800dce7b5567", "committedDate": "2022-03-14 15:01:31 +0000", "message": "Add new dev status and update URLs (#6158, #6155)"}, {"oid": "95546760d7552b8648dff7af9dfe23d77d4fa30f", "committedDate": "2022-03-27 08:55:52 +0100", "message": "Improve event handling"}, {"oid": "4abdba88ca002cfa57699a6f4a1c17c4f4f79616", "committedDate": "2022-08-24 10:02:12 +0100", "message": "Add Open Metadata Store Service"}, {"oid": "9de2cc62f046e37ab1ac2d41571b6fc02c5f8066", "committedDate": "2022-11-13 23:55:01 +0000", "message": "Add connector type query (#7103)"}, {"oid": "1da34a40060737064fdd974eac8b5a76cd242338", "committedDate": "2022-11-27 21:12:18 +0000", "message": "Add missing JavaDoc"}, {"oid": "d6d316cac6f3a386c30f996e04d897e946994626", "committedDate": "2023-01-04 12:49:47 +0000", "message": "Rename split packages (#7246)"}, {"oid": "996be60aad929f0258395eb6ff31fa3a3d02c32c", "committedDate": "2023-03-07 09:55:35 +0000", "message": "Correct SPDX headers for Apache 2.0 license #6992"}, {"oid": "0166b12c0e325d5ac5a09827ff086f20dd31ddb7", "committedDate": "2023-06-09 15:32:33 +0100", "message": "Remove Serializable"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0Nzg0OA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380147848", "body": "Need to describe what the service does and what should happen next.", "bodyText": "Need to describe what the service does and what should happen next.", "bodyHTML": "<p dir=\"auto\">Need to describe what the service does and what should happen next.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:14:29Z", "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNzQzOA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382007438", "bodyText": "I have added more information", "author": "davidradl", "createdAt": "2020-02-20T13:46:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0Nzg0OA=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 71%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..e221c0d0fc 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server has started up the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS. The operator should verify that shutdown was intended.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 65%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..a31f3eb5a2 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server is initializing the Glossary Author OMVS. If the initialization is successful then audit message OMVS-GLOSSARY-AUTHOR-0003 will be issued, if there were errors then they should be shown in the audit log. \",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0002\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization. Calls will be accepted by this service, if OMRS is also configured and the view server has been started. \",\n+            \"No action is required.  This is part of the normal operation of the Glossary Author OMVS. Once the OMRS is configured and the server is started, Glossary Author view service requests can be accepted.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shutdown of the Glossary Author OMVS.\",\n+            \"No action is required. The operator should verify that shutdown was intended. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0005\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODAxOQ==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148019", "body": "Need to describe how to verify that it initialized correctly", "bodyText": "Need to describe how to verify that it initialized correctly", "bodyHTML": "<p dir=\"auto\">Need to describe how to verify that it initialized correctly</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:14:53Z", "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxMjgyOA==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382012828", "bodyText": "I have added that glossary author view calls can now be made.", "author": "davidradl", "createdAt": "2020-02-20T13:56:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODAxOQ=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 71%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..e221c0d0fc 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server has started up the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS. The operator should verify that shutdown was intended.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 65%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..a31f3eb5a2 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server is initializing the Glossary Author OMVS. If the initialization is successful then audit message OMVS-GLOSSARY-AUTHOR-0003 will be issued, if there were errors then they should be shown in the audit log. \",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0002\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization. Calls will be accepted by this service, if OMRS is also configured and the view server has been started. \",\n+            \"No action is required.  This is part of the normal operation of the Glossary Author OMVS. Once the OMRS is configured and the server is started, Glossary Author view service requests can be accepted.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shutdown of the Glossary Author OMVS.\",\n+            \"No action is required. The operator should verify that shutdown was intended. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0005\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODE4Ng==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148186", "body": "Need to describe what to look for to ensure shutdown was successful", "bodyText": "Need to describe what to look for to ensure shutdown was successful", "bodyHTML": "<p dir=\"auto\">Need to describe what to look for to ensure shutdown was successful</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:15:18Z", "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MzIzNw==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382473237", "bodyText": "updated text", "author": "davidradl", "createdAt": "2020-02-21T09:17:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODE4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 71%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..e221c0d0fc 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server has started up the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS. The operator should verify that shutdown was intended.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 65%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..a31f3eb5a2 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server is initializing the Glossary Author OMVS. If the initialization is successful then audit message OMVS-GLOSSARY-AUTHOR-0003 will be issued, if there were errors then they should be shown in the audit log. \",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0002\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization. Calls will be accepted by this service, if OMRS is also configured and the view server has been started. \",\n+            \"No action is required.  This is part of the normal operation of the Glossary Author OMVS. Once the OMRS is configured and the server is started, Glossary Author view service requests can be accepted.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shutdown of the Glossary Author OMVS.\",\n+            \"No action is required. The operator should verify that shutdown was intended. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0005\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODY2Ng==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r380148666", "body": "Need to add that operato shouldverify that shutdown was intended.", "bodyText": "Need to add that operato shouldverify that shutdown was intended.", "bodyHTML": "<p dir=\"auto\">Need to add that operato shouldverify that shutdown was intended.</p>", "author": "mandy-chessell", "createdAt": "2020-02-17T12:16:17Z", "path": "open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/* SPDX-License-Identifier: Apache-2.0 */\n+/* Copyright Contributors to the ODPi Egeria project. */\n+package org.odpi.openmetadata.viewservices.subjectarea.auditlog;\n+\n+\n+import org.odpi.openmetadata.repositoryservices.auditlog.OMRSAuditLogRecordSeverity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+\n+/**\n+ * The SubjectAreaAuditCode is used to define the message content for the OMRS Audit Log.\n+ *\n+ * The 5 fields in the enum are:\n+ * <ul>\n+ *     <li>Log Message Id - to uniquely identify the message</li>\n+ *     <li>Severity - is this an event, decision, action, error or exception</li>\n+ *     <li>Log Message Text - includes placeholder to allow additional values to be captured</li>\n+ *     <li>Additional Information - further parameters and data relating to the audit message (optional)</li>\n+ *     <li>SystemAction - describes the result of the situation</li>\n+ *     <li>UserAction - describes how a user should correct the situation</li>\n+ * </ul>\n+ */\n+\n+\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+\n+public enum SubjectAreaViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initializing\",\n+            \"The local server has started up the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+            OMRSAuditLogRecordSeverity.STARTUP,\n+            \"The Subject Area View Service (OMVS) is initialized\",\n+            \"The Subject Area OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+            OMRSAuditLogRecordSeverity.EXCEPTION,\n+            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n+            \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n+    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+            OMRSAuditLogRecordSeverity.SHUTDOWN,\n+            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"No action is required. This is part of the normal operation of the service.\"),", "originalCommit": "b6e52e58efecc40f4815d4fccb991777391a70ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwNzY2Ng==", "url": "https://github.com/odpi/egeria/pull/2592#discussion_r382007666", "bodyText": "added", "author": "davidradl", "createdAt": "2020-02-20T13:47:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE0ODY2Ng=="}], "type": "inlineReview", "revised_code": {"commit": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 71%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..e221c0d0fc 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server has started up the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shut down of the Glossary Author OMVS.\",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS. The operator should verify that shutdown was intended.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0032\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0033\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "changed_code": [{"header": "diff --git a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nsimilarity index 65%\nrename from open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\nrename to open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\nindex e3ce586140..a31f3eb5a2 100644\n--- a/open-metadata-implementation/view-services/subject-area-view/subject-area-view-server/src/main/java/org/odpi/openmetadata/viewservices/subjectarea/auditlog/SubjectAreaViewAuditCode.java\n+++ b/open-metadata-implementation/view-services/glossary-author-view/glossary-author-view-server/src/main/java/org/odpi/openmetadata/viewservices/glossaryauthor/auditlog/GlossaryAuthorViewAuditCode.java\n", "chunk": "@@ -25,36 +25,36 @@ import java.util.Arrays;\n  */\n \n \n-//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the beloe structure.\n+//TODO the adding of terms for audit will need to pass the guid as a parameter and maybe the fqname. I do not see how I can add parameters in the below structure.\n \n-public enum SubjectAreaViewAuditCode {\n-    SERVICE_INITIALIZING(\"OMVS-SUBJECT-AREA-0001\",\n+public enum GlossaryAuthorViewAuditCode {\n+    SERVICE_INITIALIZING(\"OMVS-GLOSSARY-AUTHOR-0001\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initializing\",\n-            \"The local server has started up the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initializing\",\n+            \"The local server is initializing the Glossary Author OMVS. If the initialization is successful then audit message OMVS-GLOSSARY-AUTHOR-0003 will be issued, if there were errors then they should be shown in the audit log. \",\n+            \"No action is required. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INITIALIZED(\"OMVS-SUBJECT-AREA-0003\",\n+    SERVICE_INITIALIZED(\"OMVS-GLOSSARY-AUTHOR-0002\",\n             OMRSAuditLogRecordSeverity.STARTUP,\n-            \"The Subject Area View Service (OMVS) is initialized\",\n-            \"The Subject Area OMVS has completed initialization.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is initialized\",\n+            \"The Glossary Author OMVS has completed initialization. Calls will be accepted by this service, if OMRS is also configured and the view server has been started. \",\n+            \"No action is required.  This is part of the normal operation of the Glossary Author OMVS. Once the OMRS is configured and the server is started, Glossary Author view service requests can be accepted.\"),\n \n-    SERVICE_SHUTDOWN(\"OMVS-SUBJECT-AREA-0004\",\n+    SERVICE_SHUTDOWN(\"OMVS-GLOSSARY-AUTHOR-0003\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down\",\n-            \"The local server has requested shut down of the Subject Area OMVS.\",\n-            \"No action is required. This is part of the normal operation of the Subject Area OMVS.\"),\n+            \"The Glossary Author View Service (OMVS) is shutting down\",\n+            \"The local server has requested shutdown of the Glossary Author OMVS.\",\n+            \"No action is required. The operator should verify that shutdown was intended. This is part of the normal operation of the Glossary Author OMVS.\"),\n \n-    SERVICE_INSTANCE_FAILURE(\"OMVS-SUBJECT-AREA-0032\",\n+    SERVICE_INSTANCE_FAILURE(\"OMVS-GLOSSARY-AUTHOR-0004\",\n             OMRSAuditLogRecordSeverity.EXCEPTION,\n-            \"The Subject Area View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n+            \"The Glossary Author View Service (OMVS) is unable to initialize a new instance; error message is {0}\",\n             \"The view service detected an error during the start up of a specific server instance.  Its services are not available for the server.\",\n             \"Review the error message and any other reported failures to determine the cause of the problem.  Once this is resolved, restart the server.\"),\n-    SERVICE_TERMINATING(\"OMVS-SUBJECT-AREA-0033\",\n+    SERVICE_TERMINATING(\"OMVS-GLOSSARY-AUTHOR-0005\",\n             OMRSAuditLogRecordSeverity.SHUTDOWN,\n-            \"The Subject Area View Service (OMVS) is shutting down server instance {0}\",\n-            \"The local handlers has requested shut down of the Subject Area OMVS.\",\n+            \"The Glossary Author View Service (OMVS) is shutting down server instance {0}\",\n+            \"The local handlers has requested shut down of the Glossary Author OMVS.\",\n             \"No action is required. This is part of the normal operation of the service.\"),\n \n     ;\n", "next_change": null}]}, "commits_in_main": [{"oid": "f487fbcd4713583af3ed60bde47a3905b6c2dadf", "message": "Merge commit", "committedDate": null}]}, {"oid": "b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "url": "https://github.com/odpi/egeria/commit/b30385bd8f0c218a796c73cb7a6658e39b6a62c6", "message": "#2577 split out view registration\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-19T16:48:36Z", "type": "commit"}, {"oid": "7932c3f94f791aad85f54bb778f97d0261ce5eb6", "url": "https://github.com/odpi/egeria/commit/7932c3f94f791aad85f54bb778f97d0261ce5eb6", "message": "#2577 addressing Mandy review comments\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-19T18:38:59Z", "type": "commit"}, {"oid": "7ae34b1b131e0cb845d4770e0d87a8598ff2998b", "url": "https://github.com/odpi/egeria/commit/7ae34b1b131e0cb845d4770e0d87a8598ff2998b", "message": "#2577 amended the view services to use the OMAGServerClient construct\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-20T13:20:10Z", "type": "commit"}, {"oid": "42a421c6e26d81f06a7aec2da4ea0916535cc995", "url": "https://github.com/odpi/egeria/commit/42a421c6e26d81f06a7aec2da4ea0916535cc995", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git2577", "committedDate": "2020-02-20T13:20:19Z", "type": "commit"}, {"oid": "9667007e5b4330a898af5f3b6b72092bfd644704", "url": "https://github.com/odpi/egeria/commit/9667007e5b4330a898af5f3b6b72092bfd644704", "message": "#2577 remove test file\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-20T13:35:50Z", "type": "commit"}, {"oid": "15320f08e0a987da68b4c374f92dbfe95c0f3b62", "url": "https://github.com/odpi/egeria/commit/15320f08e0a987da68b4c374f92dbfe95c0f3b62", "message": "#2577 fix type in message\n\nSigned-off-by: David Radley <david_radley@uk.ibm.com>", "committedDate": "2020-02-20T13:54:06Z", "type": "commit"}, {"oid": "c1805b048c4a087a4cbb938539a4886282e3f701", "url": "https://github.com/odpi/egeria/commit/c1805b048c4a087a4cbb938539a4886282e3f701", "message": "Merge branch 'master' of https://github.com/odpi/egeria into git2577", "committedDate": "2020-02-21T09:18:22Z", "type": "commit"}, {"oid": "88851ca2a0b40023e2bc51e4dec0edb1546b1f79", "url": "https://github.com/odpi/egeria/commit/88851ca2a0b40023e2bc51e4dec0edb1546b1f79", "message": "Merge branch 'master' into git2577", "committedDate": "2020-02-21T11:47:02Z", "type": "commit"}]}