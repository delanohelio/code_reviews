{"pr_number": 24887, "pr_title": "Add fix to handle tests outside tests directory", "pr_author": "Dilhasha", "pr_createdAt": "2020-07-22T10:41:52Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887", "timeline": [{"oid": "764ab4a596379d964ce6d7c4507511e03cf648c7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/764ab4a596379d964ce6d7c4507511e03cf648c7", "message": "Add fix to handle tests outside tests directory", "committedDate": "2020-07-22T10:23:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMjkyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r458712920", "body": "Won't this break in Windows? Why don't we have something like this?\r\n```suggestion\r\n                Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests\", \"outside-tests\").toAbsolutePath();\r\n```", "bodyText": "Won't this break in Windows? Why don't we have something like this?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/outside-tests\").toAbsolutePath();\n          \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests\", \"outside-tests\").toAbsolutePath();", "bodyHTML": "<p dir=\"auto\">Won't this break in Windows? Why don't we have something like this?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">Paths</span><span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>resources<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>project-based-tests<span class=\"x x-first x-last\">/</span>outside-tests<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>toAbsolutePath();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">Paths</span><span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>resources<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>project-based-tests<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>outside-tests<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>toAbsolutePath();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "parkavi11", "createdAt": "2020-07-22T11:06:18Z", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/BaseTestCase.java", "diffHunk": "@@ -78,6 +79,11 @@ public void initialize() throws BallerinaTestException, IOException {\n                 Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/test-report-tests\").toAbsolutePath();\n         reportTestProjectPath = tempProjectDirectory.resolve(\"test-report\");\n         FileUtils.copyFolder(originalReportTestProj, reportTestProjectPath);\n+\n+        Path outsideTestsProj =\n+                Paths.get(\"src\", \"test\", \"resources\", \"project-based-tests/outside-tests\").toAbsolutePath();", "originalCommit": "764ab4a596379d964ce6d7c4507511e03cf648c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA1MTExNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r459051117", "bodyText": "Thanks for the pointer @parkavi11\nYou are correct. We should either use \"File.separator\" or use the approach you suggested. I'll correct it,", "author": "Dilhasha", "createdAt": "2020-07-22T20:04:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcxMjkyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MTIzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r458981232", "body": "Why do we give it as `pathVerification.tests`? Looks like the module structure is wrong. The path to test files seems to be `outside-tests/src/pathVerification.tests` but the correct path should be `outside-tests/src/pathVerification/tests`.", "bodyText": "Why do we give it as pathVerification.tests? Looks like the module structure is wrong. The path to test files seems to be outside-tests/src/pathVerification.tests but the correct path should be outside-tests/src/pathVerification/tests.", "bodyHTML": "<p dir=\"auto\">Why do we give it as <code>pathVerification.tests</code>? Looks like the module structure is wrong. The path to test files seems to be <code>outside-tests/src/pathVerification.tests</code> but the correct path should be <code>outside-tests/src/pathVerification/tests</code>.</p>", "author": "azinneera", "createdAt": "2020-07-22T18:00:38Z", "path": "tests/testerina-integration-test/src/test/java/org/ballerinalang/testerina/test/PathVerificationTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ */\n+package org.ballerinalang.testerina.test;\n+\n+import org.ballerinalang.test.context.BMainInstance;\n+import org.ballerinalang.test.context.BallerinaTestException;\n+import org.ballerinalang.test.context.LogLeecher;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Test class containing tests related to test path verification.\n+ */\n+public class PathVerificationTest extends BaseTestCase {\n+\n+    private BMainInstance balClient;\n+    private String projectPath;\n+\n+    @BeforeClass\n+    public void setup() throws BallerinaTestException {\n+        balClient = new BMainInstance(balServer);\n+        projectPath = outsideTestsProjectPath.toString();\n+    }\n+\n+    @Test\n+    public void verifyTestsOutsidePath() throws BallerinaTestException {\n+        LogLeecher passingLeecher = new LogLeecher(\"1 passing\");\n+        LogLeecher failingLeecher = new LogLeecher(\"0 failing\");\n+        balClient.runMain(\"test\", new String[]{\"pathVerification.tests\"}, null, new String[0],", "originalCommit": "764ab4a596379d964ce6d7c4507511e03cf648c7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAzNTAzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/24887#discussion_r459035030", "bodyText": "@azinneera The module structure is correct, I generated it. I have both source files and test files since this check is to see whether tests defined in source files are being executed.\nI guess the module name is confusing, I will get rid of the \".tests\" part.", "author": "Dilhasha", "createdAt": "2020-07-22T19:34:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MTIzMg=="}], "type": "inlineReview"}, {"oid": "f29804bb181f32e31ea605dbe0ea29ccebd806e7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f29804bb181f32e31ea605dbe0ea29ccebd806e7", "message": "Fix PR suggestions", "committedDate": "2020-07-22T20:13:01Z", "type": "commit"}]}