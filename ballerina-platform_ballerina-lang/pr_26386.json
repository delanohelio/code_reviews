{"pr_number": 26386, "pr_title": "Fix path parameter URL in OpenAPI client generation", "pr_author": "lnash94", "pr_createdAt": "2020-10-16T10:53:28Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386", "timeline": [{"oid": "318f1670410848dd59236bbb336b405c4d1831df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/318f1670410848dd59236bbb336b405c4d1831df", "message": "Fix client generation path parameters", "committedDate": "2020-10-16T10:29:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NjAxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506296011", "body": "```suggestion\r\n        if (path.getParameters() != null && path.getParameters().size() > 0) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (null != path.getParameters() && path.getParameters().size() > 0) {\n          \n          \n            \n                    if (path.getParameters() != null && path.getParameters().size() > 0) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-c1 x x-first\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">!=</span><span class=\"x x-last\"> </span>path<span class=\"pl-k\">.</span>getParameters() <span class=\"pl-k\">&amp;&amp;</span> path<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (path<span class=\"pl-k\">.</span>getParameters()<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span> <span class=\"pl-k\">&amp;&amp;</span> path<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praveennadarajah", "createdAt": "2020-10-16T11:01:43Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (null != path.getParameters() && path.getParameters().size() > 0) {", "originalCommit": "318f1670410848dd59236bbb336b405c4d1831df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NjU1Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506296552", "body": "```suggestion\r\n                    .anyMatch(parameter -> parameter.getIn() != null) && parameter.getIn().equals(\"path\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));\n          \n          \n            \n                                .anyMatch(parameter -> parameter.getIn() != null) && parameter.getIn().equals(\"path\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1 x x-first\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">!=</span><span class=\"x x-last\"> </span>parameter<span class=\"pl-k\">.</span>getIn() <span class=\"pl-k\">&amp;&amp;</span> parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>path<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> parameter<span class=\"pl-k\">.</span>getIn(<span class=\"x x-first\">) </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>) <span class=\"pl-k\">&amp;&amp;</span> parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>path<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praveennadarajah", "createdAt": "2020-10-16T11:02:27Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (null != path.getParameters() && path.getParameters().size() > 0) {\n+            return path.getParameters().stream()\n+                    .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));", "originalCommit": "318f1670410848dd59236bbb336b405c4d1831df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5Njk2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506296963", "body": "```suggestion\r\n                if (operation.getParameters() != null && operation.getParameters().size() > 0) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (null != operation.getParameters() && operation.getParameters().size() > 0) {\n          \n          \n            \n                            if (operation.getParameters() != null && operation.getParameters().size() > 0) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (<span class=\"pl-c1 x x-first\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">!=</span><span class=\"x x-last\"> </span>operation<span class=\"pl-k\">.</span>getParameters() <span class=\"pl-k\">&amp;&amp;</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (operation<span class=\"pl-k\">.</span>getParameters()<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span> <span class=\"pl-k\">&amp;&amp;</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praveennadarajah", "createdAt": "2020-10-16T11:02:57Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (null != path.getParameters() && path.getParameters().size() > 0) {\n+            return path.getParameters().stream()\n+                    .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));\n+        }\n+        if (path.readOperations().size() > 0) {\n+            return path.readOperations().stream().anyMatch(operation -> {\n+                if (null != operation.getParameters() && operation.getParameters().size() > 0) {", "originalCommit": "318f1670410848dd59236bbb336b405c4d1831df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjI5NzMyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506297327", "body": "```suggestion\r\n                            .anyMatch(parameter -> parameter.getIn() != null && parameter.getIn().equals(\"path\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));\n          \n          \n            \n                                        .anyMatch(parameter -> parameter.getIn() != null && parameter.getIn().equals(\"path\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            .anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1 x x-first\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">!=</span><span class=\"x x-last\"> </span>parameter<span class=\"pl-k\">.</span>getIn() <span class=\"pl-k\">&amp;&amp;</span> parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>path<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            .anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> parameter<span class=\"pl-k\">.</span>getIn()<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span> <span class=\"pl-k\">&amp;&amp;</span> parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>path<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praveennadarajah", "createdAt": "2020-10-16T11:03:25Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (null != path.getParameters() && path.getParameters().size() > 0) {\n+            return path.getParameters().stream()\n+                    .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));\n+        }\n+        if (path.readOperations().size() > 0) {\n+            return path.readOperations().stream().anyMatch(operation -> {\n+                if (null != operation.getParameters() && operation.getParameters().size() > 0) {\n+                    return operation.getParameters().stream()\n+                            .anyMatch(parameter -> null != parameter.getIn() && parameter.getIn().equals(\"path\"));", "originalCommit": "318f1670410848dd59236bbb336b405c4d1831df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "054e9791b0ffd39a4c7f13fef74ddbf195d9ea70", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/054e9791b0ffd39a4c7f13fef74ddbf195d9ea70", "message": "Fix review suggestions", "committedDate": "2020-10-16T11:10:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyMzUyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506323527", "body": "Shall we assign the string `\"path\" ` to private static final variable and use it here instead of hard coding the value directly?\r\n`private static final String PATH = \"path\"`", "bodyText": "Shall we assign the string \"path\"  to private static final variable and use it here instead of hard coding the value directly?\nprivate static final String PATH = \"path\"", "bodyHTML": "<p dir=\"auto\">Shall we assign the string <code>\"path\" </code> to private static final variable and use it here instead of hard coding the value directly?<br>\n<code>private static final String PATH = \"path\"</code></p>", "author": "praveennadarajah", "createdAt": "2020-10-16T11:36:12Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (path.getParameters() != null && path.getParameters().size() > 0) {\n+            return path.getParameters().stream()\n+                    .anyMatch(parameter -> parameter.getIn() != null && parameter.getIn().equals(\"path\"));", "originalCommit": "054e9791b0ffd39a4c7f13fef74ddbf195d9ea70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyNDIxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506324215", "body": "Do the same [change](https://github.com/ballerina-platform/ballerina-lang/pull/26386/files#r506323527) here as well.", "bodyText": "Do the same change here as well.", "bodyHTML": "<p dir=\"auto\">Do the same <a href=\"https://github.com/ballerina-platform/ballerina-lang/pull/26386/files#r506323527\">change</a> here as well.</p>", "author": "praveennadarajah", "createdAt": "2020-10-16T11:37:02Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +127,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (path.getParameters() != null && path.getParameters().size() > 0) {\n+            return path.getParameters().stream()\n+                    .anyMatch(parameter -> parameter.getIn() != null && parameter.getIn().equals(\"path\"));\n+        }\n+        if (path.readOperations().size() > 0) {\n+            return path.readOperations().stream().anyMatch(operation -> {\n+                if (operation.getParameters() != null && operation.getParameters().size() > 0) {\n+                    return operation.getParameters().stream()\n+                            .anyMatch(parameter -> parameter.getIn() != null && parameter.getIn().equals(\"path\"));", "originalCommit": "054e9791b0ffd39a4c7f13fef74ddbf195d9ea70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6ef2dad221fcbd0bacb842c59acd3ed7c685aa9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a6ef2dad221fcbd0bacb842c59acd3ed7c685aa9", "message": "Add path value as constant", "committedDate": "2020-10-16T12:08:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2MjAwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506362001", "body": "IMO better to do an early return in here. WDYT? \r\n```suggestion\r\n        if (path.readOperations().isEmpty()) {\r\n            return false;\r\n        }\r\n        return path.readOperations().stream().anyMatch(operation -> {\r\n            if (operation.getParameters() != null && operation.getParameters().size() > 0) {\r\n                return operation.getParameters().stream().anyMatch(parameter -> parameter.getIn() != null &&\r\n                        parameter.getIn().equals(GeneratorConstants.PATH));\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n```", "bodyText": "IMO better to do an early return in here. WDYT?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (path.readOperations().size() > 0) {\n          \n          \n            \n                        return path.readOperations().stream().anyMatch(operation -> {\n          \n          \n            \n                            if (operation.getParameters() != null && operation.getParameters().size() > 0) {\n          \n          \n            \n                                return operation.getParameters().stream().anyMatch(parameter -> parameter.getIn() != null &&\n          \n          \n            \n                                        parameter.getIn().equals(GeneratorConstants.PATH));\n          \n          \n            \n                            }\n          \n          \n            \n                            return false;\n          \n          \n            \n                        });\n          \n          \n            \n                    }\n          \n          \n            \n                    return false;\n          \n          \n            \n                    if (path.readOperations().isEmpty()) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return path.readOperations().stream().anyMatch(operation -> {\n          \n          \n            \n                        if (operation.getParameters() != null && operation.getParameters().size() > 0) {\n          \n          \n            \n                            return operation.getParameters().stream().anyMatch(parameter -> parameter.getIn() != null &&\n          \n          \n            \n                                    parameter.getIn().equals(GeneratorConstants.PATH));\n          \n          \n            \n                        }\n          \n          \n            \n                        return false;\n          \n          \n            \n                    });\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\">IMO better to do an early return in here. WDYT?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (path<span class=\"pl-k\">.</span>readOperations()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> path<span class=\"pl-k\">.</span>readOperations()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>anyMatch(operation <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (operation<span class=\"pl-k\">.</span>getParameters() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">return</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> parameter<span class=\"pl-k\">.</span>getIn() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-smi\">GeneratorConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PATH</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (path<span class=\"pl-k\">.</span>readOperations()<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> path<span class=\"pl-k\">.</span>readOperations()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>anyMatch(operation <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (operation<span class=\"pl-k\">.</span>getParameters() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> operation<span class=\"pl-k\">.</span>getParameters()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>anyMatch(parameter <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> parameter<span class=\"pl-k\">.</span>getIn() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        parameter<span class=\"pl-k\">.</span>getIn()<span class=\"pl-k\">.</span>equals(<span class=\"pl-smi\">GeneratorConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PATH</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "NipunaRanasinghe", "createdAt": "2020-10-16T12:26:36Z", "path": "misc/openapi-ballerina/modules/openapi-to-ballerina-generator/src/main/java/org/ballerinalang/openapi/model/BallerinaOpenApi.java", "diffHunk": "@@ -127,8 +128,37 @@ private void setPaths(OpenAPI openAPI) throws BallerinaOpenApiException {\n                     }\n                 });\n             }\n-            paths.add(new AbstractMap.SimpleEntry<>(path.getKey(), balPath));\n+            String resourcePath;\n+            // Use ballerina string templating if there are path params.\n+            if (hasPathParams(path.getValue())) {\n+                resourcePath = \"string `\" + path.getKey().replace(\"{\", \"${\") + \"`\";\n+            } else {\n+                resourcePath = \"\\\"\" + path.getKey() + \"\\\"\";\n+            }\n+            paths.add(new AbstractMap.SimpleEntry<>(resourcePath, balPath));\n+        }\n+    }\n+\n+    /**\n+     * Checks if there are any path parameters in the operations.\n+     * @param path  The path item in the OpenAPI spec.\n+     * @return True if there are path parameters, else false.\n+     */\n+    private boolean hasPathParams(PathItem path) {\n+        if (path.getParameters() != null && path.getParameters().size() > 0) {\n+            return path.getParameters().stream().anyMatch(parameter -> parameter.getIn() != null && parameter.getIn()\n+                    .equals(GeneratorConstants.PATH));\n+        }\n+        if (path.readOperations().size() > 0) {\n+            return path.readOperations().stream().anyMatch(operation -> {\n+                if (operation.getParameters() != null && operation.getParameters().size() > 0) {\n+                    return operation.getParameters().stream().anyMatch(parameter -> parameter.getIn() != null &&\n+                            parameter.getIn().equals(GeneratorConstants.PATH));\n+                }\n+                return false;\n+            });\n         }\n+        return false;", "originalCommit": "a6ef2dad221fcbd0bacb842c59acd3ed7c685aa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2MzAzOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506363038", "bodyText": "Also, don't we need to validate whether path.readOperations() is null ?", "author": "NipunaRanasinghe", "createdAt": "2020-10-16T12:27:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2MjAwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUwMTkwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26386#discussion_r506501905", "bodyText": "yeah we don't need to validate with null :) it return list", "author": "lnash94", "createdAt": "2020-10-16T14:45:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2MjAwMQ=="}], "type": "inlineReview"}, {"oid": "1e08ee8dcad4e1f29a3b473db9cd14b0a948b3d6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1e08ee8dcad4e1f29a3b473db9cd14b0a948b3d6", "message": "Fix review suggestions", "committedDate": "2020-10-16T14:42:41Z", "type": "commit"}]}