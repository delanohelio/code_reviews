{"pr_number": 26159, "pr_title": "Fix annotation anchors and errors being classified as Types", "pr_author": "shehan360", "pr_createdAt": "2020-09-30T06:16:23Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159", "timeline": [{"oid": "52d682e9215d6d72572798723837f24495f3ab55", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/52d682e9215d6d72572798723837f24495f3ab55", "message": "Fix annotation anchor", "committedDate": "2020-09-30T06:14:29Z", "type": "commit"}, {"oid": "37151984f40b02a1dc6a44da1f22bd9e793aa6ae", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/37151984f40b02a1dc6a44da1f22bd9e793aa6ae", "message": "Fix errors being added to Types", "committedDate": "2020-09-30T10:31:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYyNzc0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r498627744", "body": "Is there a possibility to add a unit test for this?", "bodyText": "Is there a possibility to add a unit test for this?", "bodyHTML": "<p dir=\"auto\">Is there a possibility to add a unit test for this?</p>", "author": "pramodya1994", "createdAt": "2020-10-02T05:52:14Z", "path": "misc/docerina/src/main/java/org/ballerinalang/docgen/Generator.java", "diffHunk": "@@ -39,6 +39,7 @@\n import org.ballerinalang.model.tree.NodeKind;", "originalCommit": "37151984f40b02a1dc6a44da1f22bd9e793aa6ae", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3ODI1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r499378256", "bodyText": "Added a test case", "author": "shehan360", "createdAt": "2020-10-05T06:57:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYyNzc0NA=="}], "type": "inlineReview"}, {"oid": "1d907da1d218cb26abd8d84b301ccdeaeef0b700", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1d907da1d218cb26abd8d84b301ccdeaeef0b700", "message": "Add test cases", "committedDate": "2020-10-02T10:17:30Z", "type": "commit"}, {"oid": "c641595521fdc03b8382f912cd543d088b85c5cc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c641595521fdc03b8382f912cd543d088b85c5cc", "message": "Add a new line", "committedDate": "2020-10-02T10:19:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzNzc2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503037768", "body": "Shall we add license header?", "bodyText": "Shall we add license header?", "bodyHTML": "<p dir=\"auto\">Shall we add license header?</p>", "author": "pramodya1994", "createdAt": "2020-10-12T04:52:58Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;", "originalCommit": "c641595521fdc03b8382f912cd543d088b85c5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzNzgyNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503037827", "body": "Shall we add `@since` annotation?", "bodyText": "Shall we add @since annotation?", "bodyHTML": "<p dir=\"auto\">Shall we add <code>@since</code> annotation?</p>", "author": "pramodya1994", "createdAt": "2020-10-12T04:53:17Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases related to error types in docs.\n+ */", "originalCommit": "c641595521fdc03b8382f912cd543d088b85c5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzODIzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/26159#discussion_r503038230", "body": "```suggestion\r\n                Paths.get(\"src\", \"test\", \"resources\", sourceRoot).toAbsolutePath().toString(), modules);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);\n          \n          \n            \n                            Paths.get(\"src\", \"test\", \"resources\", sourceRoot).toAbsolutePath().toString(), modules);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">Paths</span><span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"x x-first x-last\">/</span>test<span class=\"x x-first x-last\">/</span>resources<span class=\"pl-pds\">\"</span></span>, sourceRoot)<span class=\"pl-k\">.</span>toAbsolutePath()<span class=\"pl-k\">.</span>toString(), modules);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">Paths</span><span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>src<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>test<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>resources<span class=\"pl-pds\">\"</span></span>, sourceRoot)<span class=\"pl-k\">.</span>toAbsolutePath()<span class=\"pl-k\">.</span>toString(), modules);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pramodya1994", "createdAt": "2020-10-12T04:55:03Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/documentation/ErrorsTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.ballerinalang.test.documentation;\n+\n+import org.ballerinalang.docgen.docs.BallerinaDocGenerator;\n+import org.ballerinalang.docgen.generator.model.Module;\n+import org.ballerinalang.docgen.generator.model.Project;\n+import org.ballerinalang.docgen.model.ModuleDoc;\n+import org.ballerinalang.test.util.BCompileUtil;\n+import org.ballerinalang.test.util.CompileResult;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.wso2.ballerinalang.compiler.tree.BLangPackage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Test cases related to error types in docs.\n+ */\n+public class ErrorsTest {\n+    private Module testModule;\n+\n+    @BeforeClass\n+    public void setup() throws IOException {\n+        String sourceRoot =\n+                \"test-src\" + File.separator + \"documentation\" + File.separator + \"errors_project\";\n+        CompileResult result = BCompileUtil.compile(sourceRoot, \"test_module\");\n+\n+        List<BLangPackage> modules = new LinkedList<>();\n+        modules.add((BLangPackage) result.getAST());\n+        Map<String, ModuleDoc> docsMap = BallerinaDocGenerator.generateModuleDocs(\n+                Paths.get(\"src/test/resources\", sourceRoot).toAbsolutePath().toString(), modules);", "originalCommit": "c641595521fdc03b8382f912cd543d088b85c5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ce3da426e1469cfa81661724cf1fb9c3bd65f15c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ce3da426e1469cfa81661724cf1fb9c3bd65f15c", "message": "Add license header", "committedDate": "2020-10-12T05:01:24Z", "type": "commit"}, {"oid": "bc9476c80650cd35afaa4334e573e1719b48c930", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc9476c80650cd35afaa4334e573e1719b48c930", "message": "Merge branch", "committedDate": "2020-10-12T05:57:53Z", "type": "commit"}, {"oid": "bc9476c80650cd35afaa4334e573e1719b48c930", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bc9476c80650cd35afaa4334e573e1719b48c930", "message": "Merge branch", "committedDate": "2020-10-12T05:57:53Z", "type": "forcePushed"}]}