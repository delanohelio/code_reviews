{"pr_number": 27320, "pr_title": "Fix issue in optional field access ", "pr_author": "KavinduZoysa", "pr_createdAt": "2020-12-03T09:29:56Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320", "timeline": [{"oid": "c9c473bb30b956a22a3821d93483b342f87fd7bc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c9c473bb30b956a22a3821d93483b342f87fd7bc", "message": "Fix issue in optional field access", "committedDate": "2020-12-07T15:11:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r540472180", "body": "While this change fixes the issue, wonder if we can remove the check for `INVOCATION` at https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770 altogether. \r\n\r\nIIRC, previously error/nil lifting access was allowed on invocations, but that is not allowed anymore. So we may be able to remove that condition. Shall we check if this is possible?", "bodyText": "While this change fixes the issue, wonder if we can remove the check for INVOCATION at https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770 altogether.\nIIRC, previously error/nil lifting access was allowed on invocations, but that is not allowed anymore. So we may be able to remove that condition. Shall we check if this is possible?", "bodyHTML": "<p dir=\"auto\">While this change fixes the issue, wonder if we can remove the check for <code>INVOCATION</code> at <a href=\"https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770\">https://github.com/ballerina-platform/ballerina-lang/blob/master/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java#L7770</a> altogether.</p>\n<p dir=\"auto\">IIRC, previously error/nil lifting access was allowed on invocations, but that is not allowed anymore. So we may be able to remove that condition. Shall we check if this is possible?</p>", "author": "MaryamZi", "createdAt": "2020-12-10T20:24:17Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5290,7 +5290,7 @@ private BSymbol getLangLibMethod(BLangInvocation iExpr, BType bType) {\n     }\n \n     private void checkInvocationParamAndReturnType(BLangInvocation iExpr) {\n-        BType actualType = checkInvocationParam(iExpr);\n+        BType actualType = iExpr.originalType = checkInvocationParam(iExpr);", "originalCommit": "c9c473bb30b956a22a3821d93483b342f87fd7bc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxOTQ3Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546519472", "bodyText": "Changed", "author": "KavinduZoysa", "createdAt": "2020-12-21T05:44:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njg0Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546847", "bodyText": "We don't need this change anymore, right?", "author": "MaryamZi", "createdAt": "2020-12-21T07:24:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzIxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546573214", "bodyText": "Yes, removed", "author": "KavinduZoysa", "createdAt": "2020-12-21T08:33:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjE4MA=="}], "type": "inlineReview"}, {"oid": "a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a3713ad6c2a4feddba242f1be30bdd89fc5361f4", "message": "Fix issue in optional field access", "committedDate": "2020-12-12T15:43:17Z", "type": "forcePushed"}, {"oid": "d5759ebbc86bdb96a0a81c515e4f84aa47e8cb35", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d5759ebbc86bdb96a0a81c515e4f84aa47e8cb35", "message": "Fix issue in optional field access", "committedDate": "2020-12-21T05:42:52Z", "type": "commit"}, {"oid": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "message": "Add negative tests", "committedDate": "2020-12-21T05:42:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njc4Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546546786", "body": "Can merge these 2 lines.", "bodyText": "Can merge these 2 lines.", "bodyHTML": "<p dir=\"auto\">Can merge these 2 lines.</p>", "author": "MaryamZi", "createdAt": "2020-12-21T07:24:05Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/desugar/Desugar.java", "diffHunk": "@@ -7769,8 +7769,7 @@ private void handleSafeNavigation(BLangAccessExpression accessExpr, BType type,\n         // If the parent of current expr is the root, terminate\n         NodeKind kind = accessExpr.expr.getKind();\n         if (kind == NodeKind.FIELD_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INDEX_BASED_ACCESS_EXPR ||\n-                kind == NodeKind.INVOCATION) {\n+                kind == NodeKind.INDEX_BASED_ACCESS_EXPR) {", "originalCommit": "97e6973eaf38cd1de94d63bff34d2e3b3287a0fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzI1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546573259", "bodyText": "Done", "author": "KavinduZoysa", "createdAt": "2020-12-21T08:34:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU0Njc4Ng=="}], "type": "inlineReview"}, {"oid": "a5261dd4233dbe0531ad262d6ae98530448067ae", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5261dd4233dbe0531ad262d6ae98530448067ae", "message": "Add negative tests", "committedDate": "2020-12-21T08:31:34Z", "type": "commit"}, {"oid": "a5261dd4233dbe0531ad262d6ae98530448067ae", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a5261dd4233dbe0531ad262d6ae98530448067ae", "message": "Add negative tests", "committedDate": "2020-12-21T08:31:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTQ3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546665478", "body": "```suggestion\r\n    public void testOptionalFieldAccessOnMethodCall() {\r\n        BRunUtil.invoke(result, \"testOptionalFieldAccessOnMethodCall\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testOptionalFieldAccessOnClassDef() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");\n          \n          \n            \n                public void testOptionalFieldAccessOnMethodCall() {\n          \n          \n            \n                    BRunUtil.invoke(result, \"testOptionalFieldAccessOnMethodCall\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testOptionalFieldAccessOnClassDef</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">BRunUtil</span><span class=\"pl-k\">.</span>invoke(result, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">testOptionalFieldAccessOnClassDef</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testOptionalFieldAccessOnMethodCall</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">BRunUtil</span><span class=\"pl-k\">.</span>invoke(result, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">testOptionalFieldAccessOnMethodCall</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "MaryamZi", "createdAt": "2020-12-21T11:54:59Z", "path": "tests/jballerina-unit-test/src/test/java/org/ballerinalang/test/expressions/access/OptionalFieldAccessTest.java", "diffHunk": "@@ -137,4 +139,9 @@ public void testOptionalFieldAccessOnInvocation(String function) {\n     public void testOptionalFieldAccessInUnionType() {\n         BRunUtil.invoke(result, \"testOptionalFieldAccessInUnionType\");\n     }\n+\n+    @Test\n+    public void testOptionalFieldAccessOnClassDef() {\n+        BRunUtil.invoke(result, \"testOptionalFieldAccessOnClassDef\");", "originalCommit": "32eb20400abd1cfe990419cb8804b2d85d4f177a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc1NTg4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27320#discussion_r546755883", "bodyText": "Fixed", "author": "KavinduZoysa", "createdAt": "2020-12-21T15:04:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2NTQ3OA=="}], "type": "inlineReview"}, {"oid": "ff67050c2cfb5cad2b4ea53c18a64ea034930288", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff67050c2cfb5cad2b4ea53c18a64ea034930288", "message": "Add more tests", "committedDate": "2020-12-21T15:03:36Z", "type": "commit"}, {"oid": "ff67050c2cfb5cad2b4ea53c18a64ea034930288", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ff67050c2cfb5cad2b4ea53c18a64ea034930288", "message": "Add more tests", "committedDate": "2020-12-21T15:03:36Z", "type": "forcePushed"}]}