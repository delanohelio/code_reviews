{"pr_number": 27460, "pr_title": "Fix included record parameter issue with non-basic types", "pr_author": "chiranSachintha", "pr_createdAt": "2020-12-11T10:27:03Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460", "timeline": [{"oid": "e3046e95f5f50d9fda145f234797d4af5852cf18", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e3046e95f5f50d9fda145f234797d4af5852cf18", "message": "Fix included record parameter issue with non-basic types", "committedDate": "2020-12-11T10:20:59Z", "type": "commit"}, {"oid": "7bcb904d148388e989eda93e7c855e93b5ef18fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bcb904d148388e989eda93e7c855e93b5ef18fc", "message": "Add unit tests for included record parameter", "committedDate": "2020-12-11T10:21:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjEyMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540876123", "body": "As discussed offline, let's check if we can use the expected type for the argument here to make use of the contextual information.", "bodyText": "As discussed offline, let's check if we can use the expected type for the argument here to make use of the contextual information.", "bodyHTML": "<p dir=\"auto\">As discussed offline, let's check if we can use the expected type for the argument here to make use of the contextual information.</p>", "author": "MaryamZi", "createdAt": "2020-12-11T11:19:03Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5680,9 +5680,10 @@ private BVarSymbol checkParameterNameForDefaultArgument(BLangIdentifier argName,\n             }\n         }\n         if (incRecordParamAllowAdditionalFields != null) {\n-            LinkedHashMap<String, BField> fields = ((BRecordType) incRecordParamAllowAdditionalFields.type).fields;\n-            if (!fields.containsKey(argName.value) && types.isAssignable(expr.type,\n-                                            ((BRecordType) incRecordParamAllowAdditionalFields.type).restFieldType)) {\n+            BRecordType incRecordType = (BRecordType) incRecordParamAllowAdditionalFields.type;\n+            BType exprType = checkExpr(expr, env);", "originalCommit": "7bcb904d148388e989eda93e7c855e93b5ef18fc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkwMDUwOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540900508", "bodyText": "Fixed.", "author": "chiranSachintha", "createdAt": "2020-12-11T12:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjEyMw=="}], "type": "inlineReview"}, {"oid": "2096269b1ae220f11edeb96dcfab15b0b410be11", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2096269b1ae220f11edeb96dcfab15b0b410be11", "message": "Fix review suggestions", "committedDate": "2020-12-11T11:55:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkxOTg2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540919864", "body": "```suggestion\r\n            if (!incRecordType.fields.containsKey(argName.value)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LinkedHashMap<String, BField> fields = incRecordType.fields;\n          \n          \n            \n                        if (!fields.containsKey(argName.value)) {\n          \n          \n            \n                        if (!incRecordType.fields.containsKey(argName.value)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">LinkedHashMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">BField</span>&gt;</span> fields <span class=\"pl-k\">=</span> incRecordType<span class=\"pl-k\">.</span>fields;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>fields<span class=\"pl-k\">.</span>containsKey(argName<span class=\"pl-k\">.</span>value)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>incRecordType<span class=\"pl-k\">.</span>fields<span class=\"pl-k\">.</span>containsKey(argName<span class=\"pl-k\">.</span>value)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "MaryamZi", "createdAt": "2020-12-11T12:41:55Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/TypeChecker.java", "diffHunk": "@@ -5680,9 +5680,10 @@ private BVarSymbol checkParameterNameForDefaultArgument(BLangIdentifier argName,\n             }\n         }\n         if (incRecordParamAllowAdditionalFields != null) {\n-            LinkedHashMap<String, BField> fields = ((BRecordType) incRecordParamAllowAdditionalFields.type).fields;\n-            if (!fields.containsKey(argName.value) && types.isAssignable(expr.type,\n-                                            ((BRecordType) incRecordParamAllowAdditionalFields.type).restFieldType)) {\n+            BRecordType incRecordType = (BRecordType) incRecordParamAllowAdditionalFields.type;\n+            checkExpr(expr, env, incRecordType.restFieldType);\n+            LinkedHashMap<String, BField> fields = incRecordType.fields;\n+            if (!fields.containsKey(argName.value)) {", "originalCommit": "2096269b1ae220f11edeb96dcfab15b0b410be11", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkyODE5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27460#discussion_r540928193", "bodyText": "Changed", "author": "chiranSachintha", "createdAt": "2020-12-11T12:57:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkxOTg2NA=="}], "type": "inlineReview"}, {"oid": "5d139988f0e57ffb3d13263d690cbb4dbe4344e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d139988f0e57ffb3d13263d690cbb4dbe4344e0", "message": "Fix review suggestions", "committedDate": "2020-12-11T12:55:14Z", "type": "commit"}]}