{"pr_number": 23765, "pr_title": "Update file module to new error syntax", "pr_author": "Bhashinee", "pr_createdAt": "2020-06-07T04:47:46Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765", "timeline": [{"oid": "4ec83fe29a5f85fcb8e341c64b8f76a14a728996", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4ec83fe29a5f85fcb8e341c64b8f76a14a728996", "message": "Update file module to new error syntax", "committedDate": "2020-06-07T04:44:47Z", "type": "commit"}, {"oid": "57017e3bfe5bb98cf4e29c31fb6da8ae3ba0b2c6", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/57017e3bfe5bb98cf4e29c31fb6da8ae3ba0b2c6", "message": "Merge branch '23283-add-distinct-type' of https://github.com/ballerina-lang/ballerina into file-distinct", "committedDate": "2020-06-08T01:50:18Z", "type": "commit"}, {"oid": "457118c9c94bbd5221b21244e0ea6232e79c895d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/457118c9c94bbd5221b21244e0ea6232e79c895d", "message": "Migrate ldap to new error syntax", "committedDate": "2020-06-08T02:13:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0OTc3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436449774", "body": "I think we can get rid of `populateSystemErrorRecord()` method as well. We only need to pass a record to createDistinctError method only if the detail record has are fields other than `message` and `cause`. So since we pass the `message` field to the `populateSystemErrorRecord()`, we can simply pass only the message.\r\n\r\n```suggestion\r\n        return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, details != null ? details : UNKNOWN_MESSAGE);\r\n```", "bodyText": "I think we can get rid of populateSystemErrorRecord() method as well. We only need to pass a record to createDistinctError method only if the detail record has are fields other than message and cause. So since we pass the message field to the populateSystemErrorRecord(), we can simply pass only the message.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, error, populateSystemErrorRecord(details));\n          \n          \n            \n                    return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, details != null ? details : UNKNOWN_MESSAGE);", "bodyHTML": "<p dir=\"auto\">I think we can get rid of <code>populateSystemErrorRecord()</code> method as well. We only need to pass a record to createDistinctError method only if the detail record has are fields other than <code>message</code> and <code>cause</code>. So since we pass the <code>message</code> field to the <code>populateSystemErrorRecord()</code>, we can simply pass only the message.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">BallerinaErrors</span><span class=\"pl-k\">.</span>createDistinctError(error, <span class=\"pl-c1\">FILE_PACKAGE_ID</span>, <span class=\"x x-first x-last\">error, populateSystemErrorRecord(</span>details<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">BallerinaErrors</span><span class=\"pl-k\">.</span>createDistinctError(error, <span class=\"pl-c1\">FILE_PACKAGE_ID</span>, <span class=\"x x-first\">details </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">?</span><span class=\"x x-last\"> </span>details<span class=\"x x-first\"> </span><span class=\"pl-k x\">:</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">UNKNOWN_MESSAGE</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "chamil321", "createdAt": "2020-06-08T04:17:32Z", "path": "stdlib/file/src/main/java/org/ballerinalang/stdlib/file/utils/FileUtils.java", "diffHunk": "@@ -71,7 +71,7 @@ public static ErrorValue getBallerinaError(String error, Throwable ex) {\n      * @return Ballerina error object.\n      */\n     public static ErrorValue getBallerinaError(String error, String details) {\n-        return BallerinaErrors.createError(error, populateSystemErrorRecord(details));\n+        return BallerinaErrors.createDistinctError(error, FILE_PACKAGE_ID, error, populateSystemErrorRecord(details));", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1MDE5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436450191", "bodyText": "Also, shall we change the param name from details to message. And the docs as well", "author": "chamil321", "createdAt": "2020-06-08T04:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ0OTc3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ1MDc1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436450757", "body": "Ideally FileConstants.INVALID_OPERATION_ERROR should not be retrieved as the error message. The message should be `File already exists in the new path ` ", "bodyText": "Ideally FileConstants.INVALID_OPERATION_ERROR should not be retrieved as the error message. The message should be File already exists in the new path", "bodyHTML": "<p dir=\"auto\">Ideally FileConstants.INVALID_OPERATION_ERROR should not be retrieved as the error message. The message should be <code>File already exists in the new path </code></p>", "author": "chamil321", "createdAt": "2020-06-08T04:23:31Z", "path": "stdlib/file/src/test/java/org/ballerinalang/stdlib/file/FileTest.java", "diffHunk": "@@ -121,7 +121,7 @@ public void testFileRenameWithInvalidPath() throws IOException {\n             BValue[] returns = BRunUtil.invoke(compileResult, \"testRename\", args);\n             assertTrue(returns[0] instanceof BError);\n             BError error = (BError) returns[0];\n-            assertEquals(error.getReason(), FileConstants.INVALID_OPERATION_ERROR);\n+            assertEquals(error.getMessage(), FileConstants.INVALID_OPERATION_ERROR);", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3MjE5Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r436472193", "body": "Can we remove the static import?", "bodyText": "Can we remove the static import?", "bodyHTML": "<p dir=\"auto\">Can we remove the static import?</p>", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-06-08T06:02:06Z", "path": "stdlib/ldap/src/main/java/org/ballerinalang/stdlib/ldap/util/LdapUtils.java", "diffHunk": "@@ -36,6 +36,8 @@\n import javax.naming.directory.SearchControls;\n import javax.naming.directory.SearchResult;\n \n+import static org.ballerinalang.stdlib.ldap.LdapConstants.LDAP_PACKAGE_ID;", "originalCommit": "457118c9c94bbd5221b21244e0ea6232e79c895d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzEwODg0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23765#discussion_r437108846", "bodyText": "These static imports do not damage the code and it improves the readability. Hence resolving", "author": "chamil321", "createdAt": "2020-06-09T02:52:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ3MjE5Mw=="}], "type": "inlineReview"}, {"oid": "df7be2805decbd7456e9e07167e48ec58e9f5523", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/df7be2805decbd7456e9e07167e48ec58e9f5523", "message": "Address review suggestions", "committedDate": "2020-06-08T10:10:20Z", "type": "commit"}]}