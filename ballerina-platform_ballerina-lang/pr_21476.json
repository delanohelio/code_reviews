{"pr_number": 21476, "pr_title": "Implement get generated keys only if supported by JDBC", "pr_author": "kalaiyarasiganeshalingam", "pr_createdAt": "2020-03-04T10:02:16Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476", "timeline": [{"oid": "6b1ac68f03d12320f0b729a65146a0930665c8dc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6b1ac68f03d12320f0b729a65146a0930665c8dc", "message": "Improve the supportsGetGeneratedkey() function\n\nImprove the implementation\n\nChange the error message", "committedDate": "2020-03-04T10:04:42Z", "type": "commit"}, {"oid": "dded750f7cbd57c06da9ce4a6e6ab95151bba783", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dded750f7cbd57c06da9ce4a6e6ab95151bba783", "message": "Remove unwanted files", "committedDate": "2020-03-04T10:07:30Z", "type": "commit"}, {"oid": "a51708cc7a8bfd913f183f7850b8093e985220a7", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a51708cc7a8bfd913f183f7850b8093e985220a7", "message": "Fix the reviewed comment\n\nMake changes in the example\n\nAdd value in the bal file", "committedDate": "2020-03-05T06:19:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMDQyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388220422", "body": "What is the reason for appending `.` at the end instead of the beginning of the line?", "bodyText": "What is the reason for appending . at the end instead of the beginning of the line?", "bodyHTML": "<p dir=\"auto\">What is the reason for appending <code>.</code> at the end instead of the beginning of the line?</p>", "author": "anupama-pathirage", "createdAt": "2020-03-05T10:57:58Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/methods/ExternFunctions.java", "diffHunk": "@@ -72,9 +74,9 @@ public static void createClient(ObjectValue client, MapValue<String, Object> con\n         String dbType = url.split(\":\")[1].toUpperCase(Locale.getDefault());\n \n         SQLDatasource.SQLDatasourceParamsBuilder builder = new SQLDatasource.SQLDatasourceParamsBuilder(dbType);\n-        SQLDatasource.SQLDatasourceParams sqlDatasourceParams = builder.withPoolOptions(poolOptionsWrapper)\n-                .withJdbcUrl(url).withUsername(username).withPassword(password).withDbOptionsMap(dbOptions)\n-                .withIsGlobalDatasource(userProvidedPoolOptionsNotPresent).build();\n+        SQLDatasource.SQLDatasourceParams sqlDatasourceParams = builder.withPoolOptions(poolOptionsWrapper).\n+                withJdbcUrl(url).withUsername(username).withPassword(password).withDbOptionsMap(dbOptions).\n+                withIsGlobalDatasource(userProvidedPoolOptionsNotPresent).build();", "originalCommit": "a51708cc7a8bfd913f183f7850b8093e985220a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "386f5d28bff6c29fba0dd770106c5981f6cd69c5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/386f5d28bff6c29fba0dd770106c5981f6cd69c5", "message": "Make suggested changes", "committedDate": "2020-03-05T19:11:49Z", "type": "commit"}, {"oid": "3ba0164d1576381c0b6953f54b8565240cba0a63", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3ba0164d1576381c0b6953f54b8565240cba0a63", "message": "Merge https://github.com/ballerina-platform/ballerina-lang into db_get_generated_key", "committedDate": "2020-03-05T19:40:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY5NzMzNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388697337", "body": "```suggestion\r\n    private boolean supportGeneratedKeys = false;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean supportsGetGeneratedKeys = false;\n          \n          \n            \n                private boolean supportGeneratedKeys = false;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">supportsGetGeneratedKeys</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">supportGeneratedKeys</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daneshk", "createdAt": "2020-03-06T03:32:23Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/datasource/SQLDatasource.java", "diffHunk": "@@ -50,6 +51,7 @@\n     private AtomicInteger clientCounter = new AtomicInteger(0);\n     private Lock mutex = new ReentrantLock();\n     private boolean poolShutdown = false;\n+    private boolean supportsGetGeneratedKeys = false;", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMTE1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388711158", "body": "Shall we change this to something like below and use that boolean for other two places? That will avoid taking `&&` twice with the same booleans.\r\n\r\n`boolean retrieveGeneratedKeys = isKeyRetrievalSupportedStatement() && getGeneratedKey`", "bodyText": "Shall we change this to something like below and use that boolean for other two places? That will avoid taking && twice with the same booleans.\nboolean retrieveGeneratedKeys = isKeyRetrievalSupportedStatement() && getGeneratedKey", "bodyHTML": "<p dir=\"auto\">Shall we change this to something like below and use that boolean for other two places? That will avoid taking <code>&amp;&amp;</code> twice with the same booleans.</p>\n<p dir=\"auto\"><code>boolean retrieveGeneratedKeys = isKeyRetrievalSupportedStatement() &amp;&amp; getGeneratedKey</code></p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T04:46:06Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/UpdateStatement.java", "diffHunk": "@@ -74,24 +78,26 @@ public Object execute() {\n             ArrayValue generatedParams = constructParameters(parameters);\n             conn = getDatabaseConnection(strand, client, datasource);\n             String processedQuery = createProcessedQueryString(query, generatedParams);\n-            stmt = conn.prepareStatement(processedQuery, Statement.RETURN_GENERATED_KEYS);\n+\n+            boolean keyRetrievalSupportedStatement = isKeyRetrievalSupportedStatement();", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMTgxMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388711812", "body": "What is the purpose of this method?", "bodyText": "What is the purpose of this method?", "bodyHTML": "<p dir=\"auto\">What is the purpose of this method?</p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T04:49:33Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/UpdateStatement.java", "diffHunk": "@@ -133,7 +134,25 @@ private boolean isDdlStatement() {\n         return populatedUpdateResultRecord;\n     }\n \n-    private enum DdlKeyword {\n-        CREATE, ALTER, DROP, TRUNCATE, COMMENT, RENAME\n+    private enum GenKeyStmt {\n+        INSERT, DELETE, UPDATE, MERGE\n+    }\n+\n+    /**\n+     * Check if the statement is one of INSERT, DELETE, UPDATE or MERGE.\n+     */\n+    private boolean isKeyRetrievalSupportedStatement() {\n+        if (datasource.isKeyRetrievalSupported()) {\n+            return Arrays.stream(GenKeyStmt.values()).anyMatch(stmt -> this.query.trim().toUpperCase(Locale.ENGLISH).\n+                    startsWith(stmt.name()));\n+        } else {\n+            ErrorHandlerUtils.printError(\"ERROR: Unable to get keys as JDBC is not supported to retrieve \" +\n+                    \"auto-generated keys from \" + datasource.getDatabaseProductName());\n+            return false;\n+        }\n+    }\n+\n+    public static boolean getGeneratedKey(Object getGeneratedKey) {", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMjM1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388712351", "body": "```suggestion\r\n            boolean keyRetrievalSupported = datasource.isKeyRetrievalSupported();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        boolean keyRetrievalSupportedStatement = datasource.isKeyRetrievalSupported();\n          \n          \n            \n                        boolean keyRetrievalSupported = datasource.isKeyRetrievalSupported();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">keyRetrievalSupportedStatement</span> <span class=\"pl-k\">=</span> datasource<span class=\"pl-k\">.</span>isKeyRetrievalSupported();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">keyRetrievalSupported</span> <span class=\"pl-k\">=</span> datasource<span class=\"pl-k\">.</span>isKeyRetrievalSupported();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daneshk", "createdAt": "2020-03-06T04:52:32Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/BatchUpdateStatement.java", "diffHunk": "@@ -83,8 +87,8 @@ public BatchUpdateStatement(ObjectValue client, SQLDatasource datasource, String\n         String errorMessagePrefix = \"failed to execute batch update\";\n         try {\n             conn = getDatabaseConnection(strand, client, datasource);\n-            boolean generatedKeyReturningSupported = isGeneratedKeyReturningSupported();\n-            if (generatedKeyReturningSupported) {\n+            boolean keyRetrievalSupportedStatement = datasource.isKeyRetrievalSupported();", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMjQ4OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388712488", "body": "Normal practice is boolean returned function name = `is` + `boolean` variable name. Can we rename the method name or variable name to follow the same practice?", "bodyText": "Normal practice is boolean returned function name = is + boolean variable name. Can we rename the method name or variable name to follow the same practice?", "bodyHTML": "<p dir=\"auto\">Normal practice is boolean returned function name = <code>is</code> + <code>boolean</code> variable name. Can we rename the method name or variable name to follow the same practice?</p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T04:53:22Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/datasource/SQLDatasource.java", "diffHunk": "@@ -119,6 +123,10 @@ public boolean isPoolShutdown() {\n         return poolShutdown;\n     }\n \n+    public boolean isKeyRetrievalSupported() {\n+        return this.supportsGetGeneratedKeys;", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMzQ3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388713476", "body": "Why do we need to define this constant like this? This is not a jdbc related constant. @daneshk / @wggihan Are we following similar pattern in other modules?", "bodyText": "Why do we need to define this constant like this? This is not a jdbc related constant. @daneshk / @wggihan Are we following similar pattern in other modules?", "bodyHTML": "<p dir=\"auto\">Why do we need to define this constant like this? This is not a jdbc related constant. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/daneshk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/daneshk\">@daneshk</a> / <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wggihan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wggihan\">@wggihan</a> Are we following similar pattern in other modules?</p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T04:58:33Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/Constants.java", "diffHunk": "@@ -165,6 +165,9 @@\n         public static final String MSSQL_SERVER = \"microsoft sql server\";\n     }\n \n+    // Warning suppression\n+    public static final String UNCHECKED = \"unchecked\";", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2Mzg2Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388763866", "bodyText": "AFAIK, directly using annotation without using this kind of constant in other modules.", "author": "wggihan", "createdAt": "2020-03-06T08:15:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxMzQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxNDA2MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388714060", "body": "We cannot rely on this API to check whether DB driver supports `get generated keys`. Because there is no guarantee that all DB driver implements this function. IMO we should not use this for our internal logic", "bodyText": "We cannot rely on this API to check whether DB driver supports get generated keys. Because there is no guarantee that all DB driver implements this function. IMO we should not use this for our internal logic", "bodyHTML": "<p dir=\"auto\">We cannot rely on this API to check whether DB driver supports <code>get generated keys</code>. Because there is no guarantee that all DB driver implements this function. IMO we should not use this for our internal logic</p>", "author": "daneshk", "createdAt": "2020-03-06T05:01:23Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/datasource/SQLDatasource.java", "diffHunk": "@@ -61,7 +63,9 @@ public SQLDatasource init(SQLDatasourceParams sqlDatasourceParams) {\n             throw ErrorGenerator.getSQLDatabaseError(e);\n         }\n         try (Connection con = getSQLConnection()) {\n-            databaseProductName = con.getMetaData().getDatabaseProductName().toLowerCase(Locale.ENGLISH);\n+            DatabaseMetaData metaData = con.getMetaData();\n+            databaseProductName = metaData.getDatabaseProductName().toLowerCase(Locale.ENGLISH);\n+            this.supportsGetGeneratedKeys = metaData.supportsGetGeneratedKeys();", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxNDMxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388714316", "body": "Instead of this comment, shall we use descriptive name for the function itself. This is the pattern followed for other test cases as well.", "bodyText": "Instead of this comment, shall we use descriptive name for the function itself. This is the pattern followed for other test cases as well.", "bodyHTML": "<p dir=\"auto\">Instead of this comment, shall we use descriptive name for the function itself. This is the pattern followed for other test cases as well.</p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T05:02:44Z", "path": "stdlib/jdbc/src/test/java/org/ballerinax/jdbc/actions/UpdateTest.java", "diffHunk": "@@ -229,12 +229,24 @@ public void testInsertBoolDataAsIntsAndReturnInts() {\n         Assert.assertEquals(((BInteger) returns[2]).intValue(), 1);\n     }\n \n+    /**\n+     * Test for getting auto-generated key when getGeneratedKey is true and the table doesn't have auto generated key.", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcxNjA5OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388716098", "body": "Shall we remove checking `keyRetrievalSupportedStatement` and only rely on value set by the user? \r\nand pass all the errors we encounter while performing the operation to the user.", "bodyText": "Shall we remove checking keyRetrievalSupportedStatement and only rely on value set by the user?\nand pass all the errors we encounter while performing the operation to the user.", "bodyHTML": "<p dir=\"auto\">Shall we remove checking <code>keyRetrievalSupportedStatement</code> and only rely on value set by the user?<br>\nand pass all the errors we encounter while performing the operation to the user.</p>", "author": "daneshk", "createdAt": "2020-03-06T05:11:36Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/BatchUpdateStatement.java", "diffHunk": "@@ -83,8 +87,8 @@ public BatchUpdateStatement(ObjectValue client, SQLDatasource datasource, String\n         String errorMessagePrefix = \"failed to execute batch update\";\n         try {\n             conn = getDatabaseConnection(strand, client, datasource);\n-            boolean generatedKeyReturningSupported = isGeneratedKeyReturningSupported();\n-            if (generatedKeyReturningSupported) {\n+            boolean keyRetrievalSupportedStatement = datasource.isKeyRetrievalSupported();\n+            if (getGeneratedKey && keyRetrievalSupportedStatement) {", "originalCommit": "3ba0164d1576381c0b6953f54b8565240cba0a63", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9d1c774a621c60895931bc54f3e7a6abd07cbf11", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9d1c774a621c60895931bc54f3e7a6abd07cbf11", "message": "Merge https://github.com/ballerina-platform/ballerina-lang into db_get_generated_key", "committedDate": "2020-03-06T06:59:31Z", "type": "commit"}, {"oid": "795d8a7c8689ac2af32d13bed5ae811980f957df", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/795d8a7c8689ac2af32d13bed5ae811980f957df", "message": "Improve the implementation", "committedDate": "2020-03-06T08:27:21Z", "type": "commit"}, {"oid": "5ecf0cabaa906d97448341042d4ff83688ad82e4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5ecf0cabaa906d97448341042d4ff83688ad82e4", "message": "Change variables' name", "committedDate": "2020-03-06T08:41:54Z", "type": "commit"}, {"oid": "d623a82ce636b043c49d8075c6ea01963e994a8f", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d623a82ce636b043c49d8075c6ea01963e994a8f", "message": "Make changes in the bal file", "committedDate": "2020-03-06T11:05:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3NjEwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388876102", "body": "Can we add a test case for this scenario as well.", "bodyText": "Can we add a test case for this scenario as well.", "bodyHTML": "<p dir=\"auto\">Can we add a test case for this scenario as well.</p>", "author": "anupama-pathirage", "createdAt": "2020-03-06T12:29:48Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/UpdateStatement.java", "diffHunk": "@@ -70,26 +71,36 @@ public Object execute() {\n         checkAndObserveSQLAction(strand, datasource, query);\n         boolean isInTransaction = strand.isInTransaction();\n         String errorMessagePrefix = \"failed to execute update query: \";\n+        MapValue<String, Object> generatedKeys = new MapValueImpl<>();\n         try {\n             ArrayValue generatedParams = constructParameters(parameters);\n             conn = getDatabaseConnection(strand, client, datasource);\n             String processedQuery = createProcessedQueryString(query, generatedParams);\n-            stmt = conn.prepareStatement(processedQuery, Statement.RETURN_GENERATED_KEYS);\n+\n+            if (returnGeneratedKeys) {\n+                stmt = conn.prepareStatement(processedQuery, PreparedStatement.RETURN_GENERATED_KEYS);\n+            } else {\n+                stmt = conn.prepareStatement(processedQuery);\n+            }\n+\n             ProcessedStatement processedStatement = new ProcessedStatement(conn, stmt, generatedParams,\n                     datasource.getDatabaseProductName());\n             stmt = processedStatement.prepare();\n             int count = stmt.executeUpdate();\n-            MapValue<String, Object> generatedKeys;\n-            if (!isDdlStatement()) {\n-                rs = stmt.getGeneratedKeys();\n-                //This result set contains the auto generated keys.\n-                if (rs.next()) {\n-                    generatedKeys = getGeneratedKeys(rs);\n+            if (returnGeneratedKeys) {\n+                if (isKeyRetrievalSupported()) {\n+                    rs = stmt.getGeneratedKeys();\n+                    //This result set contains the auto generated keys.\n+                    if (rs.next()) {\n+                        generatedKeys = getGeneratedKeys(rs);\n+                    }\n                 } else {\n-                    generatedKeys = new MapValueImpl<>();\n+                    handleErrorOnTransaction(this.strand);\n+                    String message = \"The returnGeneratedKeys only support INSERT, UPDATE, DELETE and MERGE \" +\n+                            \"operations.\";\n+                    checkAndObserveSQLError(strand, \"execute update failed: \" + message);\n+                    return ErrorGenerator.getSQLApplicationError(message);", "originalCommit": "d623a82ce636b043c49d8075c6ea01963e994a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4MTczNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r389381737", "bodyText": "Added.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-03-08T15:52:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3NjEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r388881205", "body": "Why do we need this extra check?", "bodyText": "Why do we need this extra check?", "bodyHTML": "<p dir=\"auto\">Why do we need this extra check?</p>", "author": "daneshk", "createdAt": "2020-03-06T12:42:16Z", "path": "stdlib/jdbc/src/main/java/org/ballerinax/jdbc/statement/UpdateStatement.java", "diffHunk": "@@ -70,26 +71,36 @@ public Object execute() {\n         checkAndObserveSQLAction(strand, datasource, query);\n         boolean isInTransaction = strand.isInTransaction();\n         String errorMessagePrefix = \"failed to execute update query: \";\n+        MapValue<String, Object> generatedKeys = new MapValueImpl<>();\n         try {\n             ArrayValue generatedParams = constructParameters(parameters);\n             conn = getDatabaseConnection(strand, client, datasource);\n             String processedQuery = createProcessedQueryString(query, generatedParams);\n-            stmt = conn.prepareStatement(processedQuery, Statement.RETURN_GENERATED_KEYS);\n+\n+            if (returnGeneratedKeys) {\n+                stmt = conn.prepareStatement(processedQuery, PreparedStatement.RETURN_GENERATED_KEYS);\n+            } else {\n+                stmt = conn.prepareStatement(processedQuery);\n+            }\n+\n             ProcessedStatement processedStatement = new ProcessedStatement(conn, stmt, generatedParams,\n                     datasource.getDatabaseProductName());\n             stmt = processedStatement.prepare();\n             int count = stmt.executeUpdate();\n-            MapValue<String, Object> generatedKeys;\n-            if (!isDdlStatement()) {\n-                rs = stmt.getGeneratedKeys();\n-                //This result set contains the auto generated keys.\n-                if (rs.next()) {\n-                    generatedKeys = getGeneratedKeys(rs);\n+            if (returnGeneratedKeys) {\n+                if (isKeyRetrievalSupported()) {", "originalCommit": "d623a82ce636b043c49d8075c6ea01963e994a8f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM4MTY0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r389381644", "bodyText": "The returnGeneratedKeys only support INSERT, UPDATE, DELETE and MERGE operations So we need to check if the statement has one of these.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-03-08T15:51:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMDkyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r389430925", "bodyText": "Do we need specifically handle this? what if we not handled and user set return generated keys for other operation. do we get a meaningful error from the driver?", "author": "daneshk", "createdAt": "2020-03-09T01:37:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg5Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r390219892", "bodyText": "We haven't got a meaningful error from the driver but got an empty ResultSet. So, I specifically handled this.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-03-10T10:28:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2MTYzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r390261630", "bodyText": "@daneshk I too think we don't need to explicitly check this. Isn't it a driver or DB dependent thing whether throwing an exception or returning empty result set. Why we are limiting only to the INSERT, DELETE, UPDATE, MERGE since the developer now has the full control to retrieve the generated keys or not.", "author": "anupama-pathirage", "createdAt": "2020-03-10T11:53:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMzNTI2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21476#discussion_r390335267", "bodyText": "Removed it.", "author": "kalaiyarasiganeshalingam", "createdAt": "2020-03-10T14:03:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg4MTIwNQ=="}], "type": "inlineReview"}, {"oid": "7f8f969e23a6e9176ca029ec72cce2590cb75549", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7f8f969e23a6e9176ca029ec72cce2590cb75549", "message": "Merge https://github.com/ballerina-platform/ballerina-lang into db_get_generated_key", "committedDate": "2020-03-08T14:17:43Z", "type": "commit"}, {"oid": "90dac1112bb6177ae3fc4d510624bf055576e0e9", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90dac1112bb6177ae3fc4d510624bf055576e0e9", "message": "Fix suggested changes", "committedDate": "2020-03-08T15:46:34Z", "type": "commit"}, {"oid": "2d526150f5addfdbeb8c63556baa5a98e26ed51c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2d526150f5addfdbeb8c63556baa5a98e26ed51c", "message": "Fix integration test failure", "committedDate": "2020-03-08T18:08:57Z", "type": "commit"}, {"oid": "cd58703e5c603bd46f47dd45300816d5bf2beb57", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd58703e5c603bd46f47dd45300816d5bf2beb57", "message": "Change the mendatory parameter to a defaultable parameter", "committedDate": "2020-03-10T12:12:31Z", "type": "commit"}, {"oid": "644cb2f52b862dbd8a46e4dac5f3d48104921f3c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/644cb2f52b862dbd8a46e4dac5f3d48104921f3c", "message": "Fix review comments", "committedDate": "2020-03-10T13:43:04Z", "type": "commit"}, {"oid": "b991435fedeab740ae1d6d4c1e985744b6e88d4e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b991435fedeab740ae1d6d4c1e985744b6e88d4e", "message": "Remove unwanted changes", "committedDate": "2020-03-10T13:53:35Z", "type": "commit"}, {"oid": "773e6c03d8f6e6ff1d6f499b69271dc672a80924", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/773e6c03d8f6e6ff1d6f499b69271dc672a80924", "message": "Add the bracket", "committedDate": "2020-03-10T14:01:05Z", "type": "commit"}]}