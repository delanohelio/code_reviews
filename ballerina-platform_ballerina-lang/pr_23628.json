{"pr_number": 23628, "pr_title": "Add improvements to Tracing Test Case", "pr_author": "nadundesilva", "pr_createdAt": "2020-05-31T15:52:50Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/23628", "timeline": [{"oid": "5e948261ddf7d0aeaafa2e431741ff61ad77476a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5e948261ddf7d0aeaafa2e431741ff61ad77476a", "message": "Cleanup JvmObservabilityGen class", "committedDate": "2020-05-27T17:59:36Z", "type": "commit"}, {"oid": "071492742799d0c0cd5f1f344c84bed7ee167110", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/071492742799d0c0cd5f1f344c84bed7ee167110", "message": "Improve TracingTestCase", "committedDate": "2020-05-29T14:04:21Z", "type": "commit"}, {"oid": "604bf5741b60dc703a1a28645e2ab1e1eff05fe3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/604bf5741b60dc703a1a28645e2ab1e1eff05fe3", "message": "Fix intermittent status code property set issue\n\n# Since the status code property is set after calling the super class methods in the ClientConnectorListeners, the status code may or may not be set after the observations finishes. This was fixed by changing the order of the calls.", "committedDate": "2020-05-31T15:45:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1OTcyOA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23628#discussion_r433159728", "body": "```suggestion\r\n                 * belongs to. Also these do not cover the observable calls and fp calls (they are handled using the\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                             * belongs to. Also these does not cover the observable calls and fp calls (they are handled using the\n          \n          \n            \n                             * belongs to. Also these do not cover the observable calls and fp calls (they are handled using the", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                 <span class=\"pl-k\">*</span> belongs to. <span class=\"pl-smi\">Also</span> these <span class=\"x x-first x-last\">does</span> not cover the observable calls and fp calls (they are handled using the</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                 <span class=\"pl-k\">*</span> belongs to. <span class=\"pl-smi\">Also</span> these <span class=\"pl-k x x-first x-last\">do</span> not cover the observable calls and fp calls (they are handled using the</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tharinduwijewardane", "createdAt": "2020-06-01T10:33:50Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmObservabilityGen.java", "diffHunk": "@@ -410,6 +431,16 @@ private void rewriteObservableFunctionBody(BIRFunction func, BIRPackage pkg, boo\n             } else if (currentBB.terminator.kind == InstructionKind.CALL\n                     || (currentBB.terminator.kind == InstructionKind.FP_CALL\n                     && !((FPCall) currentBB.terminator).isAsync)) {\n+                /*\n+                 * Traps for errors needs to be injected for each call and fp call separately to avoid messing up the\n+                 * line numbers in the stack trace shown when a panic is thrown.\n+                 *\n+                 * These panic traps are different from the traps added in rewriteObservableFunctionInvocations method,\n+                 * in the sense that these report the error to the Observation covering the current function this body\n+                 * belongs to. Also these does not cover the observable calls and fp calls (they are handled using the", "originalCommit": "604bf5741b60dc703a1a28645e2ab1e1eff05fe3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NTQ2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23628#discussion_r433165467", "bodyText": "Fixed in 8ee1b9f", "author": "nadundesilva", "createdAt": "2020-06-01T10:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1OTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MDEzMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23628#discussion_r433160131", "body": "```suggestion\r\n                     * Adding panic traps for the invocations. These report the error to the Observation covering\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                 * Adding panic traps for the invocations. These reports the error to the Observation covering\n          \n          \n            \n                                 * Adding panic traps for the invocations. These report the error to the Observation covering", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Adding</span> panic traps <span class=\"pl-k\">for</span> the invocations. <span class=\"pl-smi\">These</span> <span class=\"x x-first x-last\">reports</span> the error to the <span class=\"pl-smi\">Observation</span> covering</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Adding</span> panic traps <span class=\"pl-k\">for</span> the invocations. <span class=\"pl-smi\">These</span> <span class=\"x x-first x-last\">report</span> the error to the <span class=\"pl-smi\">Observation</span> covering</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tharinduwijewardane", "createdAt": "2020-06-01T10:34:50Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmObservabilityGen.java", "diffHunk": "@@ -554,6 +582,10 @@ private void rewriteObservableFunctionInvocations(BIRFunction func, BIRPackage p\n                     fixErrorTable(func, currentBB, observeEndBB);\n                 }\n                 {\n+                    /*\n+                     * Adding panic traps for the invocations. These reports the error to the Observation covering", "originalCommit": "604bf5741b60dc703a1a28645e2ab1e1eff05fe3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NTQwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/23628#discussion_r433165401", "bodyText": "Fixed in 8ee1b9f", "author": "nadundesilva", "createdAt": "2020-06-01T10:47:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2MDEzMQ=="}], "type": "inlineReview"}, {"oid": "8ee1b9f1d4f6b41626b41d6f09d71f536d814972", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8ee1b9f1d4f6b41626b41d6f09d71f536d814972", "message": "Fix code review suggestions", "committedDate": "2020-06-01T10:47:06Z", "type": "commit"}]}