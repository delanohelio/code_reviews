{"pr_number": 20753, "pr_title": "Implement  APIs  for  HTTP  persistent cookies", "pr_author": "Tharuja", "pr_createdAt": "2020-01-28T04:28:25Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753", "timeline": [{"oid": "7bfacf09f22df749224bca66340625d5d06ddee3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/7bfacf09f22df749224bca66340625d5d06ddee3", "message": "Add persistent cookies", "committedDate": "2020-01-13T08:26:06Z", "type": "commit"}, {"oid": "186e1ad60e25367def93529d450362328da29986", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/186e1ad60e25367def93529d450362328da29986", "message": "Add more functions into Cookie-Store", "committedDate": "2020-01-13T08:38:53Z", "type": "commit"}, {"oid": "538f2d80bd352c9541660ec6d4c28cd6aa1541ec", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/538f2d80bd352c9541660ec6d4c28cd6aa1541ec", "message": "Add limits on the number of cookies in cookie-store", "committedDate": "2020-01-13T08:56:42Z", "type": "commit"}, {"oid": "bd531e2ea345b44b811fa47c8e97d259000e5b38", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bd531e2ea345b44b811fa47c8e97d259000e5b38", "message": "Change cookie configuration", "committedDate": "2020-01-16T04:09:15Z", "type": "commit"}, {"oid": "ee2c275240a8824f49c96d7899f63fb7b28ab944", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ee2c275240a8824f49c96d7899f63fb7b28ab944", "message": "Add validateFileExtension function", "committedDate": "2020-01-16T09:50:32Z", "type": "commit"}, {"oid": "f4c02b1b9792a8576e9a93682d06f04214be1d2a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f4c02b1b9792a8576e9a93682d06f04214be1d2a", "message": "Change variable names in cookie", "committedDate": "2020-01-22T10:57:05Z", "type": "commit"}, {"oid": "377a86a5c9a3a042725336eabdcd0cd79349a747", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/377a86a5c9a3a042725336eabdcd0cd79349a747", "message": "Change cookie store functions", "committedDate": "2020-01-22T10:59:23Z", "type": "commit"}, {"oid": "90bd156e50d6bfd37fc997980168a9c592f56bc5", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/90bd156e50d6bfd37fc997980168a9c592f56bc5", "message": "Change cookie configuration", "committedDate": "2020-01-22T11:00:31Z", "type": "commit"}, {"oid": "cca53b9ee14cbf4ae2fd31a2a8ec790acd4d832b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cca53b9ee14cbf4ae2fd31a2a8ec790acd4d832b", "message": "Add Integration Tests", "committedDate": "2020-01-22T11:02:11Z", "type": "commit"}, {"oid": "4c83b4c7275a9d8bd4301e0d89711db161cccd52", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/4c83b4c7275a9d8bd4301e0d89711db161cccd52", "message": "Add unit tests", "committedDate": "2020-01-22T11:03:01Z", "type": "commit"}, {"oid": "92129a0822a677c9cd7a04a25b99f3eca4bb97c8", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/92129a0822a677c9cd7a04a25b99f3eca4bb97c8", "message": "Change variable names in addCookies function", "committedDate": "2020-01-22T11:03:55Z", "type": "commit"}, {"oid": "70a8d83a4576adf6a6385abfa4275a3e2a6f248d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/70a8d83a4576adf6a6385abfa4275a3e2a6f248d", "message": "Add CookieHandlingError", "committedDate": "2020-01-23T08:15:47Z", "type": "commit"}, {"oid": "b3e3918357767d838faf6ad7131c27776e0c8054", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b3e3918357767d838faf6ad7131c27776e0c8054", "message": "Add log-warning when using persistent cookies", "committedDate": "2020-01-24T05:50:22Z", "type": "commit"}, {"oid": "6167c6daf0d7607b129e4c7963f41c64582da848", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6167c6daf0d7607b129e4c7963f41c64582da848", "message": "Change csv persistent cookie handler", "committedDate": "2020-01-24T12:08:02Z", "type": "commit"}, {"oid": "1b0ba4db425bf37bcba28043315adb23cd6dfa3a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/1b0ba4db425bf37bcba28043315adb23cd6dfa3a", "message": "Change csv persistent cookie handler", "committedDate": "2020-01-25T15:45:31Z", "type": "commit"}, {"oid": "bed1e0171b4f30291b25349cfb9fc82afd8260ea", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bed1e0171b4f30291b25349cfb9fc82afd8260ea", "message": "Change unit tests and integration tests", "committedDate": "2020-01-26T10:50:48Z", "type": "commit"}, {"oid": "aa6bd5b442ccb1847662805e4db18fff06680204", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aa6bd5b442ccb1847662805e4db18fff06680204", "message": "Change language server unit tests", "committedDate": "2020-01-26T10:58:25Z", "type": "commit"}, {"oid": "3020a7e8db34f0cb0d0105cf59c2058edc6b069b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3020a7e8db34f0cb0d0105cf59c2058edc6b069b", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into apis-with-persistent-cookies", "committedDate": "2020-01-26T10:59:25Z", "type": "commit"}, {"oid": "b114da78a34acb4e5d708ffffe21c9ddb9cdb411", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b114da78a34acb4e5d708ffffe21c9ddb9cdb411", "message": "Fix issue in csv persistent cookie handler", "committedDate": "2020-01-27T06:30:32Z", "type": "commit"}, {"oid": "c4dc661c6c194c4fb64aef48c5a501532bf12879", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/c4dc661c6c194c4fb64aef48c5a501532bf12879", "message": "Change tests", "committedDate": "2020-01-27T06:32:20Z", "type": "commit"}, {"oid": "3bf9fc28385034d16a8d24dc87e70f584b360154", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bf9fc28385034d16a8d24dc87e70f584b360154", "message": "Change language server unit tests", "committedDate": "2020-01-27T12:04:36Z", "type": "commit"}, {"oid": "f07ec9842660728b8b36973efc601351ebc50a00", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f07ec9842660728b8b36973efc601351ebc50a00", "message": "Change variable names in cookie file", "committedDate": "2020-01-27T16:06:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMDY0Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371610646", "body": "```suggestion\r\n    @Test(description = \"Test to add a cookie with an unmatched path to the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test add a cookie with unmatched path to cookie store\")\n          \n          \n            \n                @Test(description = \"Test to add a cookie with an unmatched path to the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test add a cookie with unmatched path to cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>add a cookie with <span class=\"x x-first x-last\">an </span>unmatched path to<span class=\"x x-first x-last\"> the</span> cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T04:59:31Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -47,7 +47,7 @@ public void testAddCookieWithUnmatchedDomain() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"add a cookie with unmatched path to cookie store\")\n+    @Test(description = \"Test add a cookie with unmatched path to cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMDczNw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371610737", "body": "```suggestion\r\n    @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when it is a persistent cookie \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove a specific cookie which is not in the cookie store when persistent cookie \" +\n          \n          \n            \n                @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when it is a persistent cookie \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove a specific cookie which is not in the cookie store when persistent cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove a specific cookie<span class=\"x x-first x-last\">,</span> which is not in the cookie store when<span class=\"x x-first x-last\"> it is a</span> persistent cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:00:00Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -115,7 +115,8 @@ public void testGetCookieToUnmatchedPath2() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove a specific cookie which is not in the cookie store\")\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store when persistent cookie \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMDgzMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371610830", "body": "```suggestion\r\n    @Test(description = \"Test to add more cookies than the number in `maxTotalCookieCount` in the cookie configuration\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n          \n          \n            \n                @Test(description = \"Test to add more cookies than the number in `maxTotalCookieCount` in the cookie configuration\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test add <span class=\"x x-first x-last\">cookies </span>more than the number in maxTotalCookieCount in cookie configuration<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>add more <span class=\"x x-first x-last\">cookies </span>than the number in <span class=\"x x-first x-last\">`</span>maxTotalCookieCount<span class=\"x x-first x-last\">`</span> in<span class=\"x x-first x-last\"> the</span> cookie configuration<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:00:29Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMDg3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371610879", "body": "```suggestion\r\n    @Test(description = \"Test to add more cookies than the number in `maxCookiesPerDomain` in the cookie configuration\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")\n          \n          \n            \n                @Test(description = \"Test to add more cookies than the number in `maxCookiesPerDomain` in the cookie configuration\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test add <span class=\"x x-first x-last\">cookies </span>more than the number in maxCookiesPerDomain in cookie configuration<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>add more <span class=\"x x-first x-last\">cookies </span>than the number in <span class=\"x x-first x-last\">`</span>maxCookiesPerDomain<span class=\"x x-first x-last\">`</span> in<span class=\"x x-first x-last\"> the</span> cookie configuration<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:00:47Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n+    public void testCheckMaxTotalCookieCount() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxTotalCookieCount\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMDk1OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371610959", "body": "```suggestion\r\n    @Test(description = \"Test to give an invalid file extension when creating a `CsvPersistentCookieHandler` object\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test give invalid file extension when creating a CsvPersistentCookieHandler object\")\n          \n          \n            \n                @Test(description = \"Test to give an invalid file extension when creating a `CsvPersistentCookieHandler` object\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test give invalid file extension when creating a CsvPersistentCookieHandler object<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>give <span class=\"x x-first x-last\">an </span>invalid file extension when creating a <span class=\"x x-first x-last\">`</span>CsvPersistentCookieHandler<span class=\"x x-first x-last\">`</span> object<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:01:06Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n+    public void testCheckMaxTotalCookieCount() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxTotalCookieCount\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")\n+    public void testCheckMaxCookiesPerDomain() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxCookiesPerDomain\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test give invalid file extension when creating a CsvPersistentCookieHandler object\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTAwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611006", "body": "```suggestion\r\n    @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when there is a persistent \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is a persistent \" +\n          \n          \n            \n                @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when there is a persistent \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove a specific cookie which is not in the cookie store<span class=\"x x-first x-last\">,</span> when there is a persistent <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove a specific cookie<span class=\"x x-first x-last\">,</span> which is not in the cookie store when there is a persistent <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:01:21Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n+    public void testCheckMaxTotalCookieCount() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxTotalCookieCount\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")\n+    public void testCheckMaxCookiesPerDomain() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxCookiesPerDomain\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test give invalid file extension when creating a CsvPersistentCookieHandler object\")\n+    public void testAddPersistentCookieWithoutPersistentStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieWithoutPersistentStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is a persistent \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTA1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611058", "body": "```suggestion\r\n    @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when there is no persistent \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is no persistent \" +\n          \n          \n            \n                @Test(description = \"Test to remove a specific cookie, which is not in the cookie store when there is no persistent \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove a specific cookie which is not in the cookie store<span class=\"x x-first x-last\">,</span> when there is no persistent <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove a specific cookie<span class=\"x x-first x-last\">,</span> which is not in the cookie store when there is no persistent <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:01:33Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n+    public void testCheckMaxTotalCookieCount() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxTotalCookieCount\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")\n+    public void testCheckMaxCookiesPerDomain() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxCookiesPerDomain\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test give invalid file extension when creating a CsvPersistentCookieHandler object\")\n+    public void testAddPersistentCookieWithoutPersistentStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieWithoutPersistentStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is a persistent \" +\n+            \"cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore_1() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore_1\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the Return Values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is no persistent \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTA4Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611082", "body": "```suggestion\r\n    @Test(description = \"Test to remove all cookies when there is no persistent cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove all cookies when there is no persistent cookie store\")\n          \n          \n            \n                @Test(description = \"Test to remove all cookies when there is no persistent cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove all cookies when there is no persistent cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove all cookies when there is no persistent cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:01:41Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionNegativeTest.java", "diffHunk": "@@ -124,4 +125,61 @@ public void testRemoveCookieFromCookieStore() {\n         BMap<String, BValue> bvalue = (BMap) returnVals[0];\n         Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n     }\n+\n+    @Test(description = \"Test add cookies more than the number in maxTotalCookieCount in cookie configuration\")\n+    public void testCheckMaxTotalCookieCount() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxTotalCookieCount\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add cookies more than the number in maxCookiesPerDomain in cookie configuration\")\n+    public void testCheckMaxCookiesPerDomain() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testCheckMaxCookiesPerDomain\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test give invalid file extension when creating a CsvPersistentCookieHandler object\")\n+    public void testAddPersistentCookieWithoutPersistentStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieWithoutPersistentStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is a persistent \" +\n+            \"cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore_1() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore_1\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the Return Values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific cookie which is not in the cookie store, when there is no persistent \" +\n+            \"cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore_2\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test remove all cookies when there is no persistent cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTExOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611119", "body": "```suggestion\r\n    @Test(description = \"Test to remove all cookies from the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove all cookies from cookie store\")\n          \n          \n            \n                @Test(description = \"Test to remove all cookies from the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove all cookies from cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove all cookies from<span class=\"x x-first x-last\"> the</span> cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:01:55Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTE0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611144", "body": "```suggestion\r\n    @Test(description = \"Test to add a persistent cookie into the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test add persistent cookie into cookie store\")\n          \n          \n            \n                @Test(description = \"Test to add a persistent cookie into the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test add persistent cookie into cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>add <span class=\"x x-first x-last\">a </span>persistent cookie into<span class=\"x x-first x-last\"> the</span> cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:02:07Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTE5Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611197", "body": "```suggestion\r\n    @Test(description = \"Test to add a persistent cookie with a value below 69 for the year in which it expires attribute\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n          \n          \n            \n                @Test(description = \"Test to add a persistent cookie with a value below 69 for the year in which it expires attribute\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test add persistent cookie with a value below 69 for the year in expires attribute<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>add <span class=\"x x-first x-last\">a </span>persistent cookie with a value below 69 for the year in<span class=\"x x-first x-last\"> which it</span> expires attribute<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:02:31Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTIxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611219", "body": "```suggestion\r\n    @Test(description = \"Test to get the relevant persistent cookie from the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test get the relevant persistent cookie from cookie store\")\n          \n          \n            \n                @Test(description = \"Test to get the relevant persistent cookie from the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test get the relevant persistent cookie from cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>get the relevant persistent cookie from<span class=\"x x-first x-last\"> the</span> cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:02:42Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n+    public void testAddPersistentCookieToCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore_2\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get the relevant persistent cookie from cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTI0NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611244", "body": "```suggestion\r\n    @Test(description = \"Test to remove a specific persistent cookie from the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove a specific persistent cookie from cookie store\")\n          \n          \n            \n                @Test(description = \"Test to remove a specific persistent cookie from the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove a specific persistent cookie from cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove a specific persistent cookie from<span class=\"x x-first x-last\"> the</span> cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:02:51Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n+    public void testAddPersistentCookieToCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore_2\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get the relevant persistent cookie from cookie store\")\n+    public void testGetPersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetPersistentCookieFromCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific persistent cookie from cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTMwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611301", "body": "```suggestion\r\n    @Test(description = \"Test to get all cookies from the cookie store, which match the given cookie name\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie name\")\n          \n          \n            \n                @Test(description = \"Test to get all cookies from the cookie store, which match the given cookie name\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test get all cookies from cookie store, which <span class=\"x x-first x-last\">matched with </span>the given<span class=\"x x-first x-last\"> name as the</span> cookie name<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>get all cookies from <span class=\"x x-first x-last\">the </span>cookie store, which <span class=\"x x-first x-last\">match </span>the given cookie name<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:03:12Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n+    public void testAddPersistentCookieToCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore_2\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get the relevant persistent cookie from cookie store\")\n+    public void testGetPersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetPersistentCookieFromCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific persistent cookie from cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie name\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTM2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611362", "body": "```suggestion\r\n    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +\r\n```\r\n```suggestion\r\n    @Test(description = \"Test to get all cookies from the cookie store, which match with the given cookie \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +\n          \n          \n            \n                @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +\n          \n      \n    \n    \n  \n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +\n          \n          \n            \n                @Test(description = \"Test to get all cookies from the cookie store, which match with the given cookie \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test get all cookies from cookie store, which matched with the given name as the cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test get all cookies from cookie store, which matched with the given name as the cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test get all cookies from cookie store, which <span class=\"x x-first x-last\">matched</span> with the given<span class=\"x x-first x-last\"> name as the</span> cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>get all cookies from <span class=\"x x-first x-last\">the </span>cookie store, which <span class=\"x x-first x-last\">match</span> with the given cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:03:37Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n+    public void testAddPersistentCookieToCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore_2\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get the relevant persistent cookie from cookie store\")\n+    public void testGetPersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetPersistentCookieFromCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific persistent cookie from cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie name\")\n+    public void testGetCookiesByName() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetCookiesByName\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTQ0OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611448", "body": "```suggestion\r\n    @Test(description = \"Test to remove all cookies from the cookie store, which match the given cookie \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove all cookies from cookie store, which matched with the given name as the cookie \" +\n          \n          \n            \n                @Test(description = \"Test to remove all cookies from the cookie store, which match the given cookie \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove all cookies from cookie store, which <span class=\"x x-first x-last\">matched with </span>the given<span class=\"x x-first x-last\"> name as the</span> cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove all cookies from <span class=\"x x-first x-last\">the </span>cookie store, which <span class=\"x x-first x-last\">match </span>the given cookie <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:04:04Z", "path": "stdlib/http/src/test/java/org/ballerinalang/stdlib/services/nativeimpl/cookie/CookieNativeFunctionSuccessTest.java", "diffHunk": "@@ -225,9 +225,77 @@ public void testRemoveCookieFromCookieStore() {\n                           \"Cookie objects are in the Return Values\");\n     }\n \n-    @Test(description = \"Test remove all session cookies from cookie store\")\n-    public void testClearCookieStore() {\n-        BValue[] returnVals = BRunUtil.invoke(result, \"testClearAllCookiesInCookieStore\");\n+    @Test(description = \"Test remove all cookies from cookie store\")\n+    public void testRemoveAllCookiesInCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemoveAllCookiesInCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie into cookie store\")\n+    public void testAddPersistentCookieToCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test add persistent cookie with a value below 69 for the year in expires attribute\")\n+    public void testAddPersistentCookieToCookieStore_2() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testAddPersistentCookieToCookieStore_2\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get the relevant persistent cookie from cookie store\")\n+    public void testGetPersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetPersistentCookieFromCookieStore\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove a specific persistent cookie from cookie store\")\n+    public void testRemovePersistentCookieFromCookieStore() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testRemovePersistentCookieFromCookieStore\");\n+        Assert.assertTrue(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                          \"Cookie objects are in the Return Values\");\n+    }\n+\n+    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie name\")\n+    public void testGetCookiesByName() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetCookiesByName\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 1);\n+        BMap<String, BValue> bvalue = (BMap) returnVals[0];\n+        Assert.assertEquals(bvalue.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test get all cookies from cookie store, which matched with the given name as the cookie \" +\n+            \"domain\")\n+    public void testGetCookiesByDomain() {\n+        BValue[] returnVals = BRunUtil.invoke(result, \"testGetCookiesByDomain\");\n+        Assert.assertFalse(returnVals == null || returnVals.length == 0 || returnVals[0] == null,\n+                           \"No cookie objects in the return values\");\n+        Assert.assertTrue(returnVals.length == 2);\n+        BMap<String, BValue> bvalue1 = (BMap) returnVals[0];\n+        BMap<String, BValue> bvalue2 = (BMap) returnVals[1];\n+        Assert.assertEquals(bvalue1.get(\"name\").stringValue(), \"SID001\");\n+        Assert.assertEquals(bvalue2.get(\"name\").stringValue(), \"SID002\");\n+    }\n+\n+    @Test(description = \"Test remove all cookies from cookie store, which matched with the given name as the cookie \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTcyMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611722", "body": "```suggestion\r\n    @Test(description = \"Test to remove a persistent cookie by the client\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove persistent cookie by client\")\n          \n          \n            \n                @Test(description = \"Test to remove a persistent cookie by the client\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove persistent cookie by client<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove <span class=\"x x-first x-last\">a </span>persistent cookie by<span class=\"x x-first x-last\"> the</span> client<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:05:37Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTc2NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611764", "body": "```suggestion\r\n    @Test(description = \"Test to send similar persistent cookies in the response by server. The old cookie is replaced by \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n          \n          \n            \n                @Test(description = \"Test to send similar persistent cookies in the response by server. The old cookie is replaced by \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test send similar persistent cookies in the response by server<span class=\"x x-first x-last\">,</span> old cookie is replaced by <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>send similar persistent cookies in the response by server<span class=\"x x-first x-last\">. The</span> old cookie is replaced by <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:05:53Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTgwNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611806", "body": "```suggestion\r\n            \"new cookie in the cookie store\")\r\n```\r\n```suggestion\r\n            \"the new cookie in the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"new cookie in the cookie store\")\n          \n          \n            \n                        \"new cookie in the cookie store\")\n          \n      \n    \n    \n  \n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"new cookie in the cookie store\")\n          \n          \n            \n                        \"the new cookie in the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">the </span>new cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:06:01Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTg1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611851", "body": "```suggestion\r\n    @Test(description = \"Test to send a session cookie and a similar persistent cookie in the response by server. The old \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n          \n          \n            \n                @Test(description = \"Test to send a session cookie and a similar persistent cookie in the response by server. The old \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test send a session cookie and a similar persistent cookie in the response by server<span class=\"x x-first x-last\">,</span> old <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>send a session cookie and a similar persistent cookie in the response by server<span class=\"x x-first x-last\">. The</span> old <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:06:19Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTg3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611879", "body": "```suggestion\r\n            \"session cookie is replaced by the new persistent cookie in the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"session cookie is replaced by new persistent cookie in the cookie store\")\n          \n          \n            \n                        \"session cookie is replaced by the new persistent cookie in the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>session cookie is replaced by new persistent cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>session cookie is replaced by <span class=\"x x-first x-last\">the </span>new persistent cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:06:29Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611951", "body": "```suggestion\r\n    @Test(description = \"Test to send a persistent cookie and a similar session cookie in the response by the server. The old \" +\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +\n          \n          \n            \n                @Test(description = \"Test to send a persistent cookie and a similar session cookie in the response by the server. The old \" +", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test send a persistent cookie and a similar session cookie in the response by server<span class=\"x x-first x-last\">,</span> old <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>send a persistent cookie and a similar session cookie in the response by <span class=\"x x-first x-last\">the </span>server<span class=\"x x-first x-last\">. The</span> old <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:06:49Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_1() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_09.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=aeaa895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMTk3MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371611971", "body": "```suggestion\r\n            \"persistent cookie is replaced by the new session cookie in the cookie store\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"persistent cookie is replaced by new session cookie in the cookie store\")\n          \n          \n            \n                        \"persistent cookie is replaced by the new session cookie in the cookie store\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>persistent cookie is replaced by new session cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>persistent cookie is replaced by <span class=\"x x-first x-last\">the </span>new session cookie in the cookie store<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:06:57Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_1() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_09.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=aeaa895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +\n+            \"persistent cookie is replaced by new session cookie in the cookie store\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMjAwNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371612004", "body": "```suggestion\r\n    @Test(description = \"Test to remove a persistent cookie by the server\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test remove persistent cookie by server\")\n          \n          \n            \n                @Test(description = \"Test to remove a persistent cookie by the server\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test remove persistent cookie by server<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>remove <span class=\"x x-first x-last\">a </span>persistent cookie by<span class=\"x x-first x-last\"> the</span> server<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:07:10Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_1() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_09.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=aeaa895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +\n+            \"persistent cookie is replaced by new session cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_2() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_10.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by server\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYxMjA1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371612051", "body": "```suggestion\r\n    @Test(description = \"Test to send persistent cookies when the persistentCookieHandler is not configured\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test(description = \"Test send persistent cookies when persistentCookieHandler is not configured\")\n          \n          \n            \n                @Test(description = \"Test to send persistent cookies when the persistentCookieHandler is not configured\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test send persistent cookies when persistentCookieHandler is not configured<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span>(<span class=\"pl-c1\">description</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test <span class=\"x x-first x-last\">to </span>send persistent cookies when<span class=\"x x-first x-last\"> the</span> persistentCookieHandler is not configured<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "praneesha", "createdAt": "2020-01-28T05:07:25Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_1() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_09.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=aeaa895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +\n+            \"persistent cookie is replaced by new session cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_2() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_10.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by server\")\n+    public void testRemovePersistentCookieByServer() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_11.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send persistent cookies when persistentCookieHandler is not configured\")", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY3ODA1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/20753#discussion_r371678050", "body": "Shall we rename the variable balFilepath to balFilePath?", "bodyText": "Shall we rename the variable balFilepath to balFilePath?", "bodyHTML": "<p dir=\"auto\">Shall we rename the variable balFilepath to balFilePath?</p>", "author": "suganyasuven", "createdAt": "2020-01-28T09:06:25Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/http/sample/HTTPCookiesTestCase.java", "diffHunk": "@@ -98,6 +98,75 @@ public void testSendRequestsByClient() throws BallerinaTestException {\n         BMainInstance bMainInstance = new BMainInstance(balServer);\n         String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n                 \"cookieClient_06.bal\"}, balFilepath);\n-        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34; SID001=239d4dmnmsddd34\"));\n+        Assert.assertTrue(output.contains(\"SID001=239d4dmnmsddd34; SID003=895gd4dmnmsddd34; SID002=178gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by client\")\n+    public void testRemovePersistentCookieByClient() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_07.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send similar persistent cookies in the response by server, old cookie is replaced by \" +\n+            \"new cookie in the cookie store\")\n+    public void testAddSimilarPersistentCookies() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_08.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID001=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a session cookie and a similar persistent cookie in the response by server, old \" +\n+            \"session cookie is replaced by new persistent cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_1() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_09.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=aeaa895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test send a persistent cookie and a similar session cookie in the response by server, old \" +\n+            \"persistent cookie is replaced by new session cookie in the cookie store\")\n+    public void testSendSimilarPersistentAndSessionCookies_2() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +\n+                                               File.separator + \"http\" + File.separator + \"src\" + File.separator +\n+                                               \"cookie\")).getAbsolutePath();\n+        BMainInstance bMainInstance = new BMainInstance(balServer);\n+        String output = bMainInstance.runMainAndReadStdOut(\"run\", new String[]{\n+                \"cookieClient_10.bal\"}, balFilepath);\n+        Assert.assertTrue(output.contains(\"SID003=895gd4dmnmsddd34\"));\n+    }\n+\n+    @Test(description = \"Test remove persistent cookie by server\")\n+    public void testRemovePersistentCookieByServer() throws BallerinaTestException {\n+        String balFilepath = (new File(\"src\" + File.separator + \"test\" + File.separator + \"resources\" +", "originalCommit": "f07ec9842660728b8b36973efc601351ebc50a00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "644da0f7bb4e0aa4d756d096274f3c273b9e55f2", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/644da0f7bb4e0aa4d756d096274f3c273b9e55f2", "message": "Resolve language and formatting issues", "committedDate": "2020-01-29T05:31:39Z", "type": "commit"}, {"oid": "5904687a24dd1c4e9750f868f3c24f2c0fa82ec3", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5904687a24dd1c4e9750f868f3c24f2c0fa82ec3", "message": "Change cookie store and csv persistent cookie handler", "committedDate": "2020-01-29T08:38:09Z", "type": "commit"}, {"oid": "2dc1c20a942b24e9df35743d38a80b9f5632cc10", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2dc1c20a942b24e9df35743d38a80b9f5632cc10", "message": "Add InvalidCookieError", "committedDate": "2020-01-29T18:01:49Z", "type": "commit"}, {"oid": "dde5c1622d23eff1e427e98dfecc565d4801ee81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dde5c1622d23eff1e427e98dfecc565d4801ee81", "message": "Change language server unit tests", "committedDate": "2020-01-30T04:55:32Z", "type": "commit"}, {"oid": "dde5c1622d23eff1e427e98dfecc565d4801ee81", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/dde5c1622d23eff1e427e98dfecc565d4801ee81", "message": "Change language server unit tests", "committedDate": "2020-01-30T04:55:32Z", "type": "forcePushed"}, {"oid": "ddda14f9127bb432140fcf8267888c42668f3d3e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ddda14f9127bb432140fcf8267888c42668f3d3e", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into apis-with-persistent-cookies", "committedDate": "2020-01-30T05:32:31Z", "type": "commit"}, {"oid": "e910724ab92e79544e1bfd8accd2c522b1a4aa9c", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/e910724ab92e79544e1bfd8accd2c522b1a4aa9c", "message": "Change completionWithinTransaction file", "committedDate": "2020-01-30T06:20:58Z", "type": "commit"}, {"oid": "d3560997e8da6602240e2e42ae42f8e6bc7f4ecc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/d3560997e8da6602240e2e42ae42f8e6bc7f4ecc", "message": "Change cookie store and tests", "committedDate": "2020-01-30T16:15:35Z", "type": "commit"}]}