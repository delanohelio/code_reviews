{"pr_number": 27319, "pr_title": "Fix context stack of complex type descriptor", "pr_author": "lochana-chathura", "pr_createdAt": "2020-12-03T07:30:28Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319", "timeline": [{"oid": "5d7a48912bb362d67c386b41d286982ae6ad85e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5d7a48912bb362d67c386b41d286982ae6ad85e0", "message": "Fix extra wrapper being inserted to parser-ctx-stack with complex-type", "committedDate": "2020-12-03T07:32:06Z", "type": "forcePushed"}, {"oid": "aaaded8ed108fc3859ff80b3384a1c107fb1f8d1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/aaaded8ed108fc3859ff80b3384a1c107fb1f8d1", "message": "Fix context stack of complex type descriptor", "committedDate": "2020-12-17T08:06:37Z", "type": "commit"}, {"oid": "b747452f77b0892794cfdd7b96585cf5a0945518", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b747452f77b0892794cfdd7b96585cf5a0945518", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2020-12-17T08:08:09Z", "type": "commit"}, {"oid": "b747452f77b0892794cfdd7b96585cf5a0945518", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b747452f77b0892794cfdd7b96585cf5a0945518", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2020-12-17T08:08:09Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3MjY2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r547872667", "body": "Why we remove early return?", "bodyText": "Why we remove early return?", "bodyHTML": "<p dir=\"auto\">Why we remove early return?</p>", "author": "rdulmina", "createdAt": "2020-12-23T09:53:23Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2212,17 +2206,20 @@ private STNode parseTypeDescriptorInternal(List<STNode> qualifiers, ParserRuleCo\n             typeDesc = STNodeFactory.createSimpleNameReferenceNode(missingToken);\n         }\n \n-        return parseComplexTypeDescriptor(typeDesc, context, isTypedBindingPattern);\n+        typeDesc = parseComplexTypeDescriptor(typeDesc, context, isTypedBindingPattern);\n+        return typeDesc;", "originalCommit": "b747452f77b0892794cfdd7b96585cf5a0945518", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg5NjQxNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r547896416", "body": "We will lose the original context if we end the context before we complete parsing the complete type descriptor. \r\neg `type myint int[5;` error handler will look for expression after recovering `]` where it should look for the semicolon.", "bodyText": "We will lose the original context if we end the context before we complete parsing the complete type descriptor.\neg type myint int[5; error handler will look for expression after recovering ] where it should look for the semicolon.", "bodyHTML": "<p dir=\"auto\">We will lose the original context if we end the context before we complete parsing the complete type descriptor.<br>\neg <code>type myint int[5;</code> error handler will look for expression after recovering <code>]</code> where it should look for the semicolon.</p>", "author": "rdulmina", "createdAt": "2020-12-23T10:47:57Z", "path": "compiler/ballerina-parser/src/main/java/io/ballerina/compiler/internal/parser/BallerinaParser.java", "diffHunk": "@@ -2193,14 +2193,8 @@ private STNode parseTypeDescriptor(ParserRuleContext context, boolean isTypedBin\n     private STNode parseTypeDescriptor(List<STNode> qualifiers, ParserRuleContext context,\n                                        boolean isTypedBindingPattern, boolean isInConditionalExpr) {\n         startContext(context);\n-        STNode typeDesc = parseTypeDescriptorInternal(qualifiers, context, isTypedBindingPattern, isInConditionalExpr);\n-        endContext();\n-        return typeDesc;\n-    }\n-\n-    private STNode parseTypeDescriptorInternal(List<STNode> qualifiers, ParserRuleContext context,\n-                                               boolean isTypedBindingPattern, boolean isInConditionalExpr) {\n         STNode typeDesc = parseTypeDescriptorInternal(qualifiers, context, isInConditionalExpr);\n+        endContext();", "originalCommit": "b747452f77b0892794cfdd7b96585cf5a0945518", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "message": "Fix complex type context stack", "committedDate": "2021-01-04T05:57:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc2ODAyNg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r551768026", "body": "```suggestion\r\n        testTopLevelNode(\"array-type/array_type_assert_20.bal\", \"array-type/array_type_assert_20.json\");\r\n      \r\n```\r\nCan we sync bal file and assert file. It would be better if we can change the existing ones as well.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    testTopLevelNode(\"array-type/array_type_assert_05.bal\", \"array-type/array_type_assert_20.json\");\n          \n          \n            \n                    testTopLevelNode(\"array-type/array_type_assert_20.bal\", \"array-type/array_type_assert_20.json\");\n          \n          \n            \n                  \n          \n      \n    \n    \n  \n\nCan we sync bal file and assert file. It would be better if we can change the existing ones as well.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        testTopLevelNode(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>array-type/<span class=\"x x-first x-last\">array_type_assert_05</span>.bal<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>array-type/array_type_assert_20.json<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        testTopLevelNode(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>array-type/<span class=\"x x-first x-last\">array_type_assert_20</span>.bal<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>array-type/array_type_assert_20.json<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      </td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Can we sync bal file and assert file. It would be better if we can change the existing ones as well.</p>", "author": "rdulmina", "createdAt": "2021-01-05T07:55:15Z", "path": "compiler/ballerina-parser/src/test/java/io/ballerinalang/compiler/parser/test/syntax/types/ArrayTypeTest.java", "diffHunk": "@@ -104,6 +104,11 @@ public void testInvalidArrayTypeWithArrayLengthMissingCloseBracket() {\n         test(\"int[5 a;\", \"array-type/array_type_assert_11.json\");\n     }\n \n+    @Test\n+    public void testTopLevelArrayTypeWithMissingCloseBracket() {\n+        testTopLevelNode(\"array-type/array_type_assert_05.bal\", \"array-type/array_type_assert_20.json\");", "originalCommit": "ba4aa0ad66971cd55e9bf46aa211c4fc467bd077", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4Nzk1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27319#discussion_r551787951", "bodyText": "array_type_source_20.bal :P", "author": "lochana-chathura", "createdAt": "2021-01-05T08:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc2ODAyNg=="}], "type": "inlineReview"}, {"oid": "3903174012d0df14a044559e37cfc7b892474033", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3903174012d0df14a044559e37cfc7b892474033", "message": "Fix ArrayTypeTest file names", "committedDate": "2021-01-05T08:38:13Z", "type": "commit"}, {"oid": "cf896643e53c74463302a9790151f1f2a0cec1fc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cf896643e53c74463302a9790151f1f2a0cec1fc", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2021-01-05T10:35:57Z", "type": "commit"}, {"oid": "ae29951f895020f1ecedb35fa3654e2677972b78", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ae29951f895020f1ecedb35fa3654e2677972b78", "message": "Merge branch 'master' of https://github.com/ballerina-platform/ballerina-lang into fixes-2", "committedDate": "2021-01-05T12:07:31Z", "type": "commit"}]}