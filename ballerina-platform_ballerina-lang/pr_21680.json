{"pr_number": 21680, "pr_title": "Add gateway proxy generation support to gRPC", "pr_author": "daksithj", "pr_createdAt": "2020-03-11T15:25:52Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680", "timeline": [{"oid": "8d5bf362fc5df9ea5e8fafd2a2e49f1ff4122c95", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8d5bf362fc5df9ea5e8fafd2a2e49f1ff4122c95", "message": "Merge pull request #1 from ballerina-platform/master\n\nPull changes", "committedDate": "2020-02-24T05:34:53Z", "type": "commit"}, {"oid": "6977442ae32342eb6f482075da2ed07f0b26656a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6977442ae32342eb6f482075da2ed07f0b26656a", "message": "Add gateway proxy generation to gRPC - Fix Merge Conflicts", "committedDate": "2020-03-11T14:20:57Z", "type": "commit"}, {"oid": "02817279f71f2b402a1ad2f5bb76f39f7bce7b67", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/02817279f71f2b402a1ad2f5bb76f39f7bce7b67", "message": "Add gateway proxy generation to gRPC - Fixed Merge Conflicts with github repo", "committedDate": "2020-03-11T16:34:52Z", "type": "commit"}, {"oid": "ba7396a37780a1a67e63b96c277e10627073132d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/ba7396a37780a1a67e63b96c277e10627073132d", "message": "Add gateway proxy generation to gRPC - Fixed some errors introduced by syntax changes", "committedDate": "2020-03-11T19:36:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2Nzk5OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391467999", "body": "```suggestion\r\n    public void setMessageMap(List<Message> messageList) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setMessageList(List<Message> messageList) {\n          \n          \n            \n                public void setMessageMap(List<Message> messageList) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">setMessageList</span>(<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Message</span>&gt;</span> messageList) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">setMessageMap</span>(<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Message</span>&gt;</span> messageList) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "BuddhiWathsala", "createdAt": "2020-03-12T08:37:31Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -86,7 +83,11 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n     }\n \n     public void setMessageList(List<Message> messageList) {", "originalCommit": "ba7396a37780a1a67e63b96c277e10627073132d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4NjE1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r392786157", "bodyText": "I refactored the function name", "author": "daksithj", "createdAt": "2020-03-16T05:14:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2Nzk5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2ODQ4OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391468489", "body": "Rename `messageInList ` -> `message` to improve the readability.", "bodyText": "Rename messageInList  -> message to improve the readability.", "bodyHTML": "<p dir=\"auto\">Rename <code>messageInList </code> -&gt; <code>message</code> to improve the readability.</p>", "author": "BuddhiWathsala", "createdAt": "2020-03-12T08:38:35Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -86,7 +83,11 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n     }\n \n     public void setMessageList(List<Message> messageList) {\n-        this.messageList = messageList;\n+        Map<String, Message> messageMap = new HashMap<>();\n+        for (Message messageInList : messageList) {", "originalCommit": "ba7396a37780a1a67e63b96c277e10627073132d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4NjM3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r392786379", "bodyText": "I renamed the variable name", "author": "daksithj", "createdAt": "2020-03-16T05:15:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ2ODQ4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MTU5MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391471591", "body": "Do we really need an allocated variable since this `httpPath` used just once?", "bodyText": "Do we really need an allocated variable since this httpPath used just once?", "bodyHTML": "<p dir=\"auto\">Do we really need an allocated variable since this <code>httpPath</code> used just once?</p>", "author": "BuddhiWathsala", "createdAt": "2020-03-12T08:44:53Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Method.java", "diffHunk": "@@ -93,9 +143,100 @@ public Method build() {\n             String methodName = methodDescriptor.getName();\n             String inputType = methodDescriptor.getInputType();\n             inputType = inputType != null ? getMappingBalType(inputType) : null;\n+            boolean primitiveInput = inputType != null && checkPrimitiveType(inputType);\n             String outputType = methodDescriptor.getOutputType();\n             outputType = outputType != null ? getMappingBalType(outputType) : null;\n-            return new Method(methodName, methodId, inputType, outputType, methodType);\n+            HttpRule httpExtension = methodDescriptor.getOptions().getExtension(AnnotationsProto.http);\n+            String httpMethod = httpExtension.getPatternCase().name();\n+            String httpPath = resolveHttpPath(httpExtension);\n+            String httpBody = httpExtension.getBody();\n+            List<Param> paramSet = getParamList(inputType, messageMap, httpExtension);\n+            return new Method(methodName, methodId, inputType, primitiveInput, outputType, methodType, httpMethod,\n+                    httpPath, httpBody, paramSet);\n+        }\n+\n+        private String resolveHttpPath(HttpRule httpExtension) {\n+            int number = httpExtension.getPatternCase().getNumber();\n+            // the following http methods are mapped thee numbers\n+            // 0:no extension / 2:get /3:put /4:post /5:delete /6:patch\n+            switch (number) {\n+                case 2:\n+                    return httpExtension.getGet();\n+                case 3:\n+                    return httpExtension.getPut();\n+                case 4:\n+                    return httpExtension.getPost();\n+                case 5:\n+                    return httpExtension.getDelete();\n+                case 6:\n+                    return httpExtension.getPatch();\n+                default:\n+                    return \"\";\n+            }\n+        }\n+\n+        private List<Param> getParamList(String inputType, Map<String, Message> messageMap, HttpRule httpExtension) {\n+            String httpMethod = httpExtension.getPatternCase().name();\n+            if (httpMethod.equals(HTTP_PATTERN_NOT_SET) || inputType == null) {\n+               return new ArrayList<>();\n+            }\n+            String httpPath = resolveHttpPath(httpExtension);", "originalCommit": "ba7396a37780a1a67e63b96c277e10627073132d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4Njc0NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r392786745", "bodyText": "I removed the variable and directly applied the function at the one place it was used", "author": "daksithj", "createdAt": "2020-03-16T05:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MTU5MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MjI1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391472257", "body": "```suggestion\r\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n          \n          \n            \n             *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-smi\">Copyright</span> (c) <span class=\"pl-c1 x x-first x-last\">2018</span>, <span class=\"pl-c1\">WSO2</span> <span class=\"pl-smi\">Inc</span>. (http<span class=\"pl-k\">:</span><span class=\"pl-c\"><span class=\"pl-c\">//</span>www.wso2.org) All Rights Reserved.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-smi\">Copyright</span> (c) <span class=\"pl-c1 x x-first x-last\">2020</span>, <span class=\"pl-c1\">WSO2</span> <span class=\"pl-smi\">Inc</span>. (http<span class=\"pl-k\">:</span><span class=\"pl-c\"><span class=\"pl-c\">//</span>www.wso2.org) All Rights Reserved.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "BuddhiWathsala", "createdAt": "2020-03-12T08:46:12Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Param.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *  Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.", "originalCommit": "ba7396a37780a1a67e63b96c277e10627073132d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4MTQ1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r392781456", "bodyText": "I made the change", "author": "daksithj", "createdAt": "2020-03-16T04:50:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3MjI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3ODYxNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r391478614", "body": "Remove comments.", "bodyText": "Remove comments.", "bodyHTML": "<p dir=\"auto\">Remove comments.</p>", "author": "BuddhiWathsala", "createdAt": "2020-03-12T08:59:16Z", "path": "tests/jballerina-integration-test/src/test/java/org/ballerinalang/test/service/grpc/tool/StubGeneratorTestCase.java", "diffHunk": "@@ -344,6 +351,105 @@ public void testOneofFieldRecordGeneration() throws IllegalAccessException, Clas\n                 \"Expected imports not found in compile results.\");\n     }\n \n+    @Test(description = \"Test gateway proxy with only path and query parameters\")\n+    public void testHelloWorldGateway() throws IllegalAccessException, ClassNotFoundException,\n+            InstantiationException {\n+        CompileResult compileResult = getProxyCompileResult(\"helloWorldGateway.proto\",\n+                \"helloWorldGateway\");\n+        assertEquals(compileResult.getDiagnostics().length, 0);\n+        assertEquals(((BLangPackage) compileResult.getAST()).getCompilationUnits().size(), 4,\n+                \"Expected compilation units not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).typeDefinitions.size(), 8,\n+                \"Expected type definitions not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).functions.size(), 21,\n+                \"Expected functions not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).globalVars.size(), 4,\n+                \"Expected global variables not found in compile results.\");\n+        assertEquals(((BLangPackage) compileResult.getAST()).imports.size(), 5,\n+                \"Expected imports not found in compile results.\");\n+        validateAttachedResources(compileResult, 2);\n+//        Stream<Path> walk = Files.walk(Paths.get(\"src\", \"test\", \"resources\", \"grpc\", \"src\", \"proxyservices\"));\n+//        walk.forEach(file -> {\n+//            BalFileGenerationUtils.delete(file.toFile());\n+//        });", "originalCommit": "ba7396a37780a1a67e63b96c277e10627073132d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4MTg5NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r392781895", "bodyText": "I removed the comments", "author": "daksithj", "createdAt": "2020-03-16T04:52:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3ODYxNA=="}], "type": "inlineReview"}, {"oid": "cd1b80f0aa2ad57846a5d115e1995ce73ab0e223", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/cd1b80f0aa2ad57846a5d115e1995ce73ab0e223", "message": "Pull from the master branch to update", "committedDate": "2020-03-16T04:29:43Z", "type": "commit"}, {"oid": "b99d1426aa440d1c99b92c8eb93d48bdcbc893e0", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/b99d1426aa440d1c99b92c8eb93d48bdcbc893e0", "message": "Made some changes according to the review on the Pull request", "committedDate": "2020-03-16T07:04:45Z", "type": "commit"}, {"oid": "5dc5e9f70b0f2e91b335eeffe098c9ab7197e0c4", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/5dc5e9f70b0f2e91b335eeffe098c9ab7197e0c4", "message": "Add gateway proxy generation to gRPC - Made some further changes based on the review", "committedDate": "2020-03-16T07:09:48Z", "type": "commit"}, {"oid": "9cafcb6f96b561268fbfe3fad0dd34a630daae55", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/9cafcb6f96b561268fbfe3fad0dd34a630daae55", "message": "Add gateway proxy generation to gRPC - Updated the VSCode file changes", "committedDate": "2020-03-16T07:13:08Z", "type": "commit"}, {"oid": "3cf171f7c6c55ffbac3066de8383d17df7ab99a1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3cf171f7c6c55ffbac3066de8383d17df7ab99a1", "message": "Add gateway proxy generation to gRPC - Changed the formatting in the testing suite", "committedDate": "2020-03-16T08:53:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQzMDU4MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r393430580", "body": "```suggestion\r\n/**\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /**PROTOBUF\n          \n          \n            \n            /**", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"22\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>*<span class=\"x x-first x-last\">PROTOBUF</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"22\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daneshk", "createdAt": "2020-03-17T03:50:01Z", "path": "misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/BalGenerationConstants.java", "diffHunk": "@@ -19,7 +19,7 @@\n \n import java.io.File;\n \n-/**\n+/**PROTOBUF", "originalCommit": "3cf171f7c6c55ffbac3066de8383d17df7ab99a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "message": "Add gateway proxy generation to gRPC - Changed a javadoc comment", "committedDate": "2020-03-17T05:31:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5NzcxMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396897713", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    createTempDirectory(protobufHome);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">        createTempDirectory(protobufHome);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daneshk", "createdAt": "2020-03-24T04:34:45Z", "path": "misc/protobuf-ballerina/src/main/java/org/ballerinalang/protobuf/cmd/GrpcCmd.java", "diffHunk": "@@ -218,6 +219,9 @@ private File createTempDirectory() {\n         createTempDirectory(protobufHome);\n         File compilerHome = new File(protobufHome, TEMP_COMPILER_DIRECTORY);\n         createTempDirectory(compilerHome);\n+        File apiHome = new File(googleHome, TEMP_API_DIRECTORY);\n+        createTempDirectory(protobufHome);", "originalCommit": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5ODAzNA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396898034", "bodyText": "In line no: 219, we are creating the protobuf directory", "author": "daneshk", "createdAt": "2020-03-24T04:36:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5NzcxMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNTEwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r397625103", "bodyText": "Removed the line", "author": "daksithj", "createdAt": "2020-03-25T06:02:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg5NzcxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMTEyNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396911125", "body": "Instead of passing another parameter to this method. Shall we add a new setter method in `Method.Builder` class like `setMethodDescriptor`. ", "bodyText": "Instead of passing another parameter to this method. Shall we add a new setter method in Method.Builder class like setMethodDescriptor.", "bodyHTML": "<p dir=\"auto\">Instead of passing another parameter to this method. Shall we add a new setter method in <code>Method.Builder</code> class like <code>setMethodDescriptor</code>.</p>", "author": "daneshk", "createdAt": "2020-03-24T05:34:47Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/Method.java", "diffHunk": "@@ -32,20 +49,31 @@\n     private String methodName;\n     private String methodId;\n     private String inputType;\n+    private boolean primitiveInput;\n     private String outputType;\n     private MethodDescriptor.MethodType methodType;\n+    private String httpMethod;\n+    private String httpPath;\n+    private String httpBody;\n+    private List<Param> paramSet;\n \n-    private Method(String methodName, String methodId, String inputType, String outputType, MethodDescriptor\n-            .MethodType methodType) {\n+    private Method(String methodName, String methodId, String inputType, boolean primitiveInput, String outputType,\n+                   MethodDescriptor.MethodType methodType, String httpMethod, String httpPath, String httpBody,\n+                   List<Param> paramSet) {\n         this.methodName = methodName;\n         this.methodType = methodType;\n         this.methodId = methodId;\n         this.inputType = inputType;\n+        this.primitiveInput = primitiveInput;\n         this.outputType = outputType;\n+        this.httpMethod = httpMethod;\n+        this.httpPath = httpPath;\n+        this.httpBody = httpBody;\n+        this.paramSet = paramSet;\n     }\n \n-    public static Method.Builder newBuilder(String methodId) {\n-        return new Method.Builder(methodId);\n+    public static Method.Builder newBuilder(String methodId, Map<String, Message> messageMap) {\n+        return new Method.Builder(methodId, messageMap);", "originalCommit": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNTIxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r397625215", "bodyText": "Added a setter method, and removed the additional parameter", "author": "daksithj", "createdAt": "2020-03-25T06:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMTEyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxMzMzMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396913332", "body": "```suggestion\r\n```\r\nThis is already handled in line number 247", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                stubFileObject.setEnumList(enumList);\n          \n          \n            \n                                stubFileObject.setDescriptors(descriptors);\n          \n          \n            \n                                if (!stubRootDescriptor.isEmpty()) {\n          \n          \n            \n                                    stubFileObject.setRootDescriptor(stubRootDescriptor);\n          \n          \n            \n                                }\n          \n      \n    \n    \n  \n\nThis is already handled in line number 247", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    stubFileObject<span class=\"pl-k\">.</span>setEnumList(enumList);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    stubFileObject<span class=\"pl-k\">.</span>setDescriptors(descriptors);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>stubRootDescriptor<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        stubFileObject<span class=\"pl-k\">.</span>setRootDescriptor(stubRootDescriptor);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This is already handled in line number 247</p>", "author": "daneshk", "createdAt": "2020-03-24T05:43:21Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/BallerinaFileBuilder.java", "diffHunk": "@@ -222,12 +230,20 @@ private void computeSourceContent(byte[] descriptor, String mode) throws CodeBui\n                     writeOutputFile(new ClientFile(serviceDescriptor.getName(), isUnaryContains),\n                             DEFAULT_SAMPLE_DIR,\n                             SAMPLE_CLIENT_TEMPLATE_NAME, clientFilePath);\n-\n+                } else if (GRPC_PROXY.equals(mode)) {\n+                    stubFileObject.setEnumList(enumList);\n+                    stubFileObject.setDescriptors(descriptors);\n+                    if (!stubRootDescriptor.isEmpty()) {\n+                        stubFileObject.setRootDescriptor(stubRootDescriptor);\n+                    }", "originalCommit": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODE1OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r396918158", "body": "Shall we keep the method name as `setMessageList` here? \r\nSince we are setting a message list, I feel the previous name more suits.", "bodyText": "Shall we keep the method name as setMessageList here?\nSince we are setting a message list, I feel the previous name more suits.", "bodyHTML": "<p dir=\"auto\">Shall we keep the method name as <code>setMessageList</code> here?<br>\nSince we are setting a message list, I feel the previous name more suits.</p>", "author": "daneshk", "createdAt": "2020-03-24T06:01:33Z", "path": "stdlib/grpc/src/main/java/org/ballerinalang/net/grpc/builder/components/AbstractStub.java", "diffHunk": "@@ -85,8 +82,12 @@ public void setDescriptors(Set<Descriptor> descriptors) {\n         return descriptors;\n     }\n \n-    public void setMessageList(List<Message> messageList) {\n-        this.messageList = messageList;\n+    public void setMessageMap(List<Message> messageList) {", "originalCommit": "f35bbc2b481eafe7ad57d0446cdc2f65dfa143ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyNTQxMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/21680#discussion_r397625411", "bodyText": "Kept it as setMessageMap, but passed a map instead of a list as the parameter", "author": "daksithj", "createdAt": "2020-03-25T06:03:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODE1OA=="}], "type": "inlineReview"}, {"oid": "eac8977dc505b7b3b621f4a0c4319e5daad8b93b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/eac8977dc505b7b3b621f4a0c4319e5daad8b93b", "message": "Add gateway proxy generation to gRPC - resolved merge conflict", "committedDate": "2020-03-25T04:57:47Z", "type": "commit"}, {"oid": "91ed2b58f2b931b0ccb450f635eb0e37d6b40631", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/91ed2b58f2b931b0ccb450f635eb0e37d6b40631", "message": "Add gateway proxy generation to gRPC - made some changes according to review", "committedDate": "2020-03-25T06:04:25Z", "type": "commit"}, {"oid": "2216a3a9728ada44e78bd8cb565c29d42bc88b82", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/2216a3a9728ada44e78bd8cb565c29d42bc88b82", "message": "Add gateway proxy generation to gRPC - made some changes according to review", "committedDate": "2020-03-25T07:01:13Z", "type": "commit"}]}