{"pr_number": 27343, "pr_title": "Fix unreachable pattern issue in nested match-stmt", "pr_author": "KavinduZoysa", "pr_createdAt": "2020-12-04T12:07:10Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MzkxNQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r536353915", "body": "Don't think we need a method here. If we want a method it is good if we can make [line 850](https://github.com/ballerina-platform/ballerina-lang/pull/27343/files#diff-6b4a8cb1f7bd56d5a95a80500c4febcba531cdde5af59b66a477acd35e8485acR850) to a method call to make things consistent.", "bodyText": "Don't think we need a method here. If we want a method it is good if we can make line 850 to a method call to make things consistent.", "bodyHTML": "<p dir=\"auto\">Don't think we need a method here. If we want a method it is good if we can make <a href=\"https://github.com/ballerina-platform/ballerina-lang/pull/27343/files#diff-6b4a8cb1f7bd56d5a95a80500c4febcba531cdde5af59b66a477acd35e8485acR850\">line 850</a> to a method call to make things consistent.</p>", "author": "KRVPerera", "createdAt": "2020-12-04T20:13:28Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -864,6 +867,7 @@ public void visit(BLangMatchStatement matchStatement) {\n                     containsLastPatternInStatement || (matchClause.matchGuard == null && this.hasLastPatternInClause);\n         }\n         this.statementReturns = allClausesReturns && containsLastPatternInStatement;\n+        resetLastPatternInClause();", "originalCommit": "dfe2d7661750b4d03a576e96f13e940fc7790964", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIyNTk0MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r539225941", "bodyText": "IMO, it's OK to have a method, but yeah I agree that we should then change other usage too.", "author": "MaryamZi", "createdAt": "2020-12-09T11:25:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MzkxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4MjIyMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r541582221", "bodyText": "This is no longer used.", "author": "KavinduZoysa", "createdAt": "2020-12-12T14:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM1MzkxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIyODgwMQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r539228801", "body": "Shouldn't we reset `this.hasLastPatternInClause` here to what was there before visiting the match clauses?\r\n\r\nThe following doesn't fail with this change.\r\n\r\n```ballerina\r\nfunction func(any a, any b) returns string {\r\n    match a {\r\n        _ => {\r\n            match b {\r\n                \"bar\" => {\r\n                    return \"s1\";\r\n                }\r\n                _ => {\r\n                    return \"s2\";\r\n                }\r\n            }\r\n        }\r\n        \"foo\" => { // should get an error\r\n            \r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n```", "bodyText": "Shouldn't we reset this.hasLastPatternInClause here to what was there before visiting the match clauses?\nThe following doesn't fail with this change.\nfunction func(any a, any b) returns string {\n    match a {\n        _ => {\n            match b {\n                \"bar\" => {\n                    return \"s1\";\n                }\n                _ => {\n                    return \"s2\";\n                }\n            }\n        }\n        \"foo\" => { // should get an error\n            \n        }\n    }\n    return \"\";\n}", "bodyHTML": "<p dir=\"auto\">Shouldn't we reset <code>this.hasLastPatternInClause</code> here to what was there before visiting the match clauses?</p>\n<p dir=\"auto\">The following doesn't fail with this change.</p>\n<div class=\"highlight highlight-source-ballerina position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function func(any a, any b) returns string {\n    match a {\n        _ =&gt; {\n            match b {\n                &quot;bar&quot; =&gt; {\n                    return &quot;s1&quot;;\n                }\n                _ =&gt; {\n                    return &quot;s2&quot;;\n                }\n            }\n        }\n        &quot;foo&quot; =&gt; { // should get an error\n            \n        }\n    }\n    return &quot;&quot;;\n}\"><pre><span class=\"pl-k\">function</span> func(<span class=\"pl-k\">any</span> <span class=\"pl-v\">a</span>, <span class=\"pl-v\">any</span> <span class=\"pl-v\">b</span>) <span class=\"pl-k\">returns</span> <span class=\"pl-c1\">string</span> {\n    <span class=\"pl-k\">match</span> <span class=\"pl-smi\">a</span> {\n        <span class=\"pl-smi\">_</span> =&gt; {\n            <span class=\"pl-k\">match</span> <span class=\"pl-smi\">b</span> {\n                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span> =&gt; {\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s1<span class=\"pl-pds\">\"</span></span>;\n                }\n                <span class=\"pl-smi\">_</span> =&gt; {\n                    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s2<span class=\"pl-pds\">\"</span></span>;\n                }\n            }\n        }\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span> =&gt; { <span class=\"pl-c\">// should get an error</span>\n            \n        }\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>;\n}</pre></div>", "author": "MaryamZi", "createdAt": "2020-12-09T11:29:43Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -864,6 +867,7 @@ public void visit(BLangMatchStatement matchStatement) {\n                     containsLastPatternInStatement || (matchClause.matchGuard == null && this.hasLastPatternInClause);\n         }\n         this.statementReturns = allClausesReturns && containsLastPatternInStatement;\n+        resetLastPatternInClause();", "originalCommit": "dfe2d7661750b4d03a576e96f13e940fc7790964", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4MjI1Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r541582256", "bodyText": "Fixed", "author": "KavinduZoysa", "createdAt": "2020-12-12T14:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIyODgwMQ=="}], "type": "inlineReview"}, {"oid": "a7b7e37944c91e10b5467b0a0ea107c407bc6f31", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a7b7e37944c91e10b5467b0a0ea107c407bc6f31", "message": "Fix the review suggestions", "committedDate": "2020-12-12T13:59:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4Nzk1MA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r542087950", "body": "Please see https://github.com/ballerina-platform/ballerina-lang/pull/27292#discussion_r542087348.", "bodyText": "Please see #27292 (comment).", "bodyHTML": "<p dir=\"auto\">Please see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"755070295\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ballerina-platform/ballerina-lang/issues/27292\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/ballerina-platform/ballerina-lang/pull/27292/hovercard?comment_id=542087348&amp;comment_type=review_comment\" href=\"https://github.com/ballerina-platform/ballerina-lang/pull/27292#discussion_r542087348\">#27292 (comment)</a>.</p>", "author": "MaryamZi", "createdAt": "2020-12-14T03:30:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -862,6 +860,7 @@ public void visit(BLangMatchClause matchClause) {\n         matchClause.declaredVars.putAll(matchClause.matchPatterns.get(0).declaredVars);\n \n         analyzeNode(matchClause.blockStmt, env);\n+        this.matchClauseReturns = this.statementReturns;", "originalCommit": "a7b7e37944c91e10b5467b0a0ea107c407bc6f31", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxMzc1Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546513757", "bodyText": "Fixed", "author": "KavinduZoysa", "createdAt": "2020-12-21T05:19:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA4Nzk1MA=="}], "type": "inlineReview"}, {"oid": "97e6d7169c4ab16a8121dd17f536ca896570798d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/97e6d7169c4ab16a8121dd17f536ca896570798d", "message": "Fix the review suggestions", "committedDate": "2020-12-21T03:02:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxMDY2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546510662", "body": "```suggestion\r\n    public boolean hasLastPattern;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean hasLasPattern;\n          \n          \n            \n                public boolean hasLastPattern;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">hasLasPattern</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">hasLastPattern</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "MaryamZi", "createdAt": "2020-12-21T05:05:07Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/statements/BLangMatchStatement.java", "diffHunk": "@@ -37,6 +37,7 @@\n     public BLangExpression expr; // TODO : replace with new node `action|expression`\n     public List<BLangMatchClause> matchClauses = new ArrayList<>();\n     public BLangOnFailClause onFailClause;\n+    public boolean hasLasPattern;", "originalCommit": "97e6d7169c4ab16a8121dd17f536ca896570798d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5NDA2Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546594062", "bodyText": "Fixed", "author": "KavinduZoysa", "createdAt": "2020-12-21T09:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxMDY2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxNzU2OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546517568", "body": "Do we need both `wildCardMatchPattern.isLastPattern` and `wildCardMatchPattern.matchesAll`? Going by the expression, seems like the check is rather for something like `matchesAny`?", "bodyText": "Do we need both wildCardMatchPattern.isLastPattern and wildCardMatchPattern.matchesAll? Going by the expression, seems like the check is rather for something like matchesAny?", "bodyHTML": "<p dir=\"auto\">Do we need both <code>wildCardMatchPattern.isLastPattern</code> and <code>wildCardMatchPattern.matchesAll</code>? Going by the expression, seems like the check is rather for something like <code>matchesAny</code>?</p>", "author": "MaryamZi", "createdAt": "2020-12-21T05:36:02Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -1022,7 +1019,7 @@ public void visit(BLangConstPattern constMatchPattern) {\n \n     @Override\n     public void visit(BLangWildCardMatchPattern wildCardMatchPattern) {\n-        this.hasLastPatternInClause = wildCardMatchPattern.matchesAll =\n+        wildCardMatchPattern.isLastPattern = wildCardMatchPattern.matchesAll =", "originalCommit": "97e6d7169c4ab16a8121dd17f536ca896570798d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1MDY1NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546550655", "bodyText": "Remove matchesAll", "author": "KavinduZoysa", "createdAt": "2020-12-21T07:35:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUxNzU2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTM5Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546531396", "body": "I'm not sure if checking `matchGuard == null` will always produce correct results. See https://github.com/ballerina-platform/ballerina-lang/issues/27603", "bodyText": "I'm not sure if checking matchGuard == null will always produce correct results. See #27603", "bodyHTML": "<p dir=\"auto\">I'm not sure if checking <code>matchGuard == null</code> will always produce correct results. See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"771865636\" data-permission-text=\"Title is private\" data-url=\"https://github.com/ballerina-platform/ballerina-lang/issues/27603\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ballerina-platform/ballerina-lang/issues/27603/hovercard\" href=\"https://github.com/ballerina-platform/ballerina-lang/issues/27603\">#27603</a></p>", "author": "MaryamZi", "createdAt": "2020-12-21T06:30:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -819,11 +813,13 @@ public void visit(BLangMatchStatement matchStatement) {\n             }\n             this.resetErrorThrown();\n             analyzeNode(matchClause, env);\n-            allClausesReturns = allClausesReturns && this.matchClauseReturns;\n-            containsLastPatternInStatement =\n-                    containsLastPatternInStatement || (matchClause.matchGuard == null && this.hasLastPatternInClause);\n+            allClausesReturns = allClausesReturns && this.statementReturns;\n+            resetStatementReturns();\n+            matchStatement.hasLasPattern = matchStatement.hasLasPattern\n+                    || (matchClause.matchGuard == null && matchClause.hasLastPatternInClause);", "originalCommit": "97e6d7169c4ab16a8121dd17f536ca896570798d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU1MDY4NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r546550684", "bodyText": "I will check matchGuard related issues separately.", "author": "KavinduZoysa", "createdAt": "2020-12-21T07:35:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMTM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3MTI3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547071276", "body": "Noticed this in several places although not introduced by this PR? Can `matchExpr` be null? ", "bodyText": "Noticed this in several places although not introduced by this PR? Can matchExpr be null?", "bodyHTML": "<p dir=\"auto\">Noticed this in several places although not introduced by this PR? Can <code>matchExpr</code> be null?</p>", "author": "MaryamZi", "createdAt": "2020-12-22T05:10:38Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -1022,7 +1019,7 @@ public void visit(BLangConstPattern constMatchPattern) {\n \n     @Override\n     public void visit(BLangWildCardMatchPattern wildCardMatchPattern) {\n-        this.hasLastPatternInClause = wildCardMatchPattern.matchesAll =\n+        wildCardMatchPattern.isLastPattern =\n                 wildCardMatchPattern.matchExpr != null && types.isAssignable(wildCardMatchPattern.matchExpr.type,", "originalCommit": "ced7816db032c1ab7f856019d307f7844544cabe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNjE4Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547236183", "bodyText": "If we consider match-stmt, matchExpr cannot be null.\nIn every match-pattern, we try keep the matchExpr of match-stmt. If we consider list-match-pattern, we cannot say the matchExpr of list-match-pattern must be same as the matchExpr of member-match-patterns. Consider below example.\nmatch v {\n    [1, 2] => {} \n}\n\nmatchExpr of [1,2] (list-match-apttern) is v. But ew cannot apply the same thing to member-match-patterns which means 1 and 2.", "author": "KavinduZoysa", "createdAt": "2020-12-22T11:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3MTI3Ng=="}], "type": "inlineReview"}, {"oid": "6c72c8c097dd623a56b5a92187b2433b95ef6a08", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6c72c8c097dd623a56b5a92187b2433b95ef6a08", "message": "Remove matchedAll field", "committedDate": "2020-12-22T11:27:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyMzg3Ng==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547323876", "body": "Since we removed `matchesAll` and rely on `isLastPattern` now, shouldn't we set `isLastPattern` to true here? ", "bodyText": "Since we removed matchesAll and rely on isLastPattern now, shouldn't we set isLastPattern to true here?", "bodyHTML": "<p dir=\"auto\">Since we removed <code>matchesAll</code> and rely on <code>isLastPattern</code> now, shouldn't we set <code>isLastPattern</code> to true here?</p>", "author": "MaryamZi", "createdAt": "2020-12-22T14:57:19Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/SemanticAnalyzer.java", "diffHunk": "@@ -2614,7 +2614,6 @@ public void visit(BLangWildCardMatchPattern wildCardMatchPattern) {\n         }\n         BType matchExprType = wildCardMatchPattern.matchExpr.type;\n         if (types.isAssignable(matchExprType, symTable.anyType)) {\n-            wildCardMatchPattern.matchesAll = true;", "originalCommit": "6c72c8c097dd623a56b5a92187b2433b95ef6a08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3MDk3OA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547370978", "bodyText": "It is set in CodeAnalyser because it is related to code analysing.", "author": "KavinduZoysa", "createdAt": "2020-12-22T16:21:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyMzg3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyNTE2NQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547325165", "body": "Shouldn't this be\r\n```suggestion\r\n        this.hasLastPatternInClause = true;\r\n```\r\n\r\nIs `setLastPatternInClause` not used btw? If it is used, there should have been tests that failed due to this, right?", "bodyText": "Shouldn't this be\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.hasLastPatternInClause = hasLastPatternInClause;\n          \n          \n            \n                    this.hasLastPatternInClause = true;\n          \n      \n    \n    \n  \n\nIs setLastPatternInClause not used btw? If it is used, there should have been tests that failed due to this, right?", "bodyHTML": "<p dir=\"auto\">Shouldn't this be</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>hasLastPatternInClause <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">hasLastPatternInClause</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>hasLastPatternInClause <span class=\"pl-k\">=</span> <span class=\"pl-c1 x x-first x-last\">true</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Is <code>setLastPatternInClause</code> not used btw? If it is used, there should have been tests that failed due to this, right?</p>", "author": "MaryamZi", "createdAt": "2020-12-22T14:59:41Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/tree/clauses/BLangMatchClause.java", "diffHunk": "@@ -89,13 +89,13 @@ public void addMatchPattern(MatchPatternNode matchPattern) {\n     }\n \n     @Override\n-    public boolean isLastClause() {\n-        return isLastClause;\n+    public boolean hasLastPatternInClause() {\n+        return hasLastPatternInClause;\n     }\n \n     @Override\n-    public void setLastClause() {\n-        this.isLastClause = true;\n+    public void setLastPatternInClause() {\n+        this.hasLastPatternInClause = hasLastPatternInClause;", "originalCommit": "6c72c8c097dd623a56b5a92187b2433b95ef6a08", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYyNzEwMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547627100", "bodyText": "Removed that setter", "author": "KavinduZoysa", "createdAt": "2020-12-23T04:01:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMyNTE2NQ=="}], "type": "inlineReview"}, {"oid": "6651ab9fd2f463f99f2bf7603627ca86de487e4b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/6651ab9fd2f463f99f2bf7603627ca86de487e4b", "message": "Remove matchedAll field", "committedDate": "2020-12-23T04:00:52Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg4Mzc1MQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r547883751", "body": "Instead of adding a new field `hasLastPattern` to `BLangMatchStatement`, I think we should be able to extract this information based on just `this.hasLastPatternInStatement`.", "bodyText": "Instead of adding a new field hasLastPattern to BLangMatchStatement, I think we should be able to extract this information based on just this.hasLastPatternInStatement.", "bodyHTML": "<p dir=\"auto\">Instead of adding a new field <code>hasLastPattern</code> to <code>BLangMatchStatement</code>, I think we should be able to extract this information based on just <code>this.hasLastPatternInStatement</code>.</p>", "author": "MaryamZi", "createdAt": "2020-12-23T10:17:54Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -804,12 +799,11 @@ public void visit(BLangMatchStatement matchStatement) {\n         matchExprType = matchStatement.expr.type;\n \n         boolean currentErrorThrown = this.errorThrown;\n-        this.hasLastPatternInClause = false;\n-        boolean containsLastPatternInStatement = false;\n+        this.hasLastPatternInStatement = false;\n+        matchStatement.hasLastPattern = false;", "originalCommit": "6651ab9fd2f463f99f2bf7603627ca86de487e4b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA5MzkwMw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r548093903", "bodyText": "Yes, refactored that part", "author": "KavinduZoysa", "createdAt": "2020-12-23T17:57:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg4Mzc1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0NjQ4Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r548146487", "body": "We can do this when visiting `BLangMatchStatement`, before L803, right? Or we will be doing this assignment and re-assignment in L864 per clause even if there is no match statement in the clause?", "bodyText": "We can do this when visiting BLangMatchStatement, before L803, right? Or we will be doing this assignment and re-assignment in L864 per clause even if there is no match statement in the clause?", "bodyHTML": "<p dir=\"auto\">We can do this when visiting <code>BLangMatchStatement</code>, before L803, right? Or we will be doing this assignment and re-assignment in L864 per clause even if there is no match statement in the clause?</p>", "author": "MaryamZi", "createdAt": "2020-12-23T19:03:46Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -853,16 +849,19 @@ public void visit(BLangMatchClause matchClause) {\n \n             this.isJSONContext = types.isJSONContext(matchExprType);\n             analyzeNode(matchPattern, env);\n-            matchPattern.isLastPattern = this.hasLastPatternInClause;\n+            this.hasLastPatternInClause = this.hasLastPatternInClause || matchPattern.isLastPattern;\n         }\n \n         if (!patternListContainsSameVars) {\n             dlog.error(matchClause.pos, DiagnosticErrorCode.MATCH_PATTERNS_SHOULD_CONTAIN_SAME_SET_OF_VARIABLES);\n         }\n         matchClause.declaredVars.putAll(matchClause.matchPatterns.get(0).declaredVars);\n \n+        boolean hasLastPatternInStatement = this.hasLastPatternInStatement;", "originalCommit": "b61da509750f839e66da7f867a12cc71d9bb1650", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE4MDE0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r548180142", "bodyText": "Yes, changed", "author": "KavinduZoysa", "createdAt": "2020-12-23T19:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE0NjQ4Nw=="}], "type": "inlineReview"}, {"oid": "8964628cb6502ff5f91493d988fcceab68a48c37", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/8964628cb6502ff5f91493d988fcceab68a48c37", "message": "Remove unwanted fields", "committedDate": "2020-12-23T19:33:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNjM3OQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r548416379", "body": "We can move this logic to the visit of `BLangMatchClause`, right? We can probably get rid of the `hasLastPatternInClause` global variable by doing so.", "bodyText": "We can move this logic to the visit of BLangMatchClause, right? We can probably get rid of the hasLastPatternInClause global variable by doing so.", "bodyHTML": "<p dir=\"auto\">We can move this logic to the visit of <code>BLangMatchClause</code>, right? We can probably get rid of the <code>hasLastPatternInClause</code> global variable by doing so.</p>", "author": "MaryamZi", "createdAt": "2020-12-24T06:39:44Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/CodeAnalyzer.java", "diffHunk": "@@ -819,24 +814,27 @@ public void visit(BLangMatchStatement matchStatement) {\n             }\n             this.resetErrorThrown();\n             analyzeNode(matchClause, env);\n-            allClausesReturns = allClausesReturns && this.matchClauseReturns;\n-            containsLastPatternInStatement =\n-                    containsLastPatternInStatement || (matchClause.matchGuard == null && this.hasLastPatternInClause);\n+            allClausesReturns = allClausesReturns && this.statementReturns;\n+            resetStatementReturns();\n+            this.hasLastPatternInStatement =\n+                    this.hasLastPatternInStatement || (matchClause.matchGuard == null && this.hasLastPatternInClause);", "originalCommit": "8964628cb6502ff5f91493d988fcceab68a48c37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTI0Mg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27343#discussion_r548549242", "bodyText": "Fixed", "author": "KavinduZoysa", "createdAt": "2020-12-24T14:45:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQxNjM3OQ=="}], "type": "inlineReview"}, {"oid": "bcfb0d9e67bbd55339211e02b8859249814f2e4a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/bcfb0d9e67bbd55339211e02b8859249814f2e4a", "message": "Reset last pattern in clause", "committedDate": "2021-01-04T03:42:19Z", "type": "commit"}, {"oid": "3a7ad5956a422c5c5e7ab790ae625aab6cccfa11", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3a7ad5956a422c5c5e7ab790ae625aab6cccfa11", "message": "Fix the review suggestions", "committedDate": "2021-01-04T03:42:19Z", "type": "commit"}, {"oid": "3f51171e34d4d8e96c160ef9dd75f384d08226bc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3f51171e34d4d8e96c160ef9dd75f384d08226bc", "message": "Remove matchedAll field", "committedDate": "2021-01-04T03:42:19Z", "type": "commit"}, {"oid": "928819fae55ff5ae17d95d50ca1073f563d68a3d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/928819fae55ff5ae17d95d50ca1073f563d68a3d", "message": "Remove unwanted fields", "committedDate": "2021-01-04T03:42:19Z", "type": "commit"}, {"oid": "730d1a16a3f7a14d31560a37053f4b9f621b3b48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/730d1a16a3f7a14d31560a37053f4b9f621b3b48", "message": "Remove a global var", "committedDate": "2021-01-04T03:42:19Z", "type": "commit"}, {"oid": "730d1a16a3f7a14d31560a37053f4b9f621b3b48", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/730d1a16a3f7a14d31560a37053f4b9f621b3b48", "message": "Remove a global var", "committedDate": "2021-01-04T03:42:19Z", "type": "forcePushed"}]}