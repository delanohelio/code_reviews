{"pr_number": 27347, "pr_title": "Add missing annotation support for service objects and improve listener", "pr_author": "rdhananjaya", "pr_createdAt": "2020-12-05T09:41:45Z", "pr_url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347", "timeline": [{"oid": "818cfedff9ddc766430526d6f5db376590c4c6de", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/818cfedff9ddc766430526d6f5db376590c4c6de", "message": "Allow listener to decide service path or literal", "committedDate": "2020-12-04T05:45:28Z", "type": "commit"}, {"oid": "0241f43cdead4c25c8be3ebe2028acf29406c15e", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/0241f43cdead4c25c8be3ebe2028acf29406c15e", "message": "Fix missing annotation population for services", "committedDate": "2020-12-05T09:37:11Z", "type": "commit"}, {"oid": "340e3e5082f1aa59a64425fb8da28fb14780c761", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/340e3e5082f1aa59a64425fb8da28fb14780c761", "message": "Fix check-style issue", "committedDate": "2020-12-05T09:46:57Z", "type": "commit"}, {"oid": "3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/3bcf5ee0fcfcc82484fc21cfd1a76eccd444f22d", "message": "Add annotation lambda func for services", "committedDate": "2020-12-06T06:39:32Z", "type": "commit"}, {"oid": "47d928be594fd0c4237fc0bfdd66f6f07983a276", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/47d928be594fd0c4237fc0bfdd66f6f07983a276", "message": "Populate service annotations before attach method\n\nCodegen an populte annotation call just before\ndesugaring service-decl to listener.attach() method", "committedDate": "2020-12-06T10:41:01Z", "type": "commit"}, {"oid": "217817f7468b711f07cddc3b82e2d5d1252904dc", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/217817f7468b711f07cddc3b82e2d5d1252904dc", "message": "Fix javaDoc checkstyle issue", "committedDate": "2020-12-06T10:58:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537249502", "body": "`processServiceAnnotations` used to be codegen-ed separately for services to specifically recompute the annotations in services that are created within a function (via https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625).\r\n\r\nTo continue to support the same, IMO we need to do something similar.\r\n\r\nThe second annotation access in the following sample used to return `{i: 202}`, but now returns `{i: 101}`.\r\n\r\n```ballerina\r\nannotation record {int i;} x on service;\r\n\r\nint globalInt = 101;\r\n\r\npublic function getService() returns service object {} {\r\n    return @x {i: globalInt} service object {\r\n        \r\n    };\r\n}\r\n\r\npublic function main() {\r\n    typedesc<service object {}> t = typeof getService();\r\n    var v = t.@x; // {\"i\":101}\r\n\r\n    globalInt = 202;\r\n    t = typeof getService();\r\n    v = t.@x; // used to be {\"i\":202}, now {\"i\":101}\r\n}\r\n```\r\n\r\nWill we be fixing this anytime soon given that it's a breaking change?", "bodyText": "processServiceAnnotations used to be codegen-ed separately for services to specifically recompute the annotations in services that are created within a function (via https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625).\nTo continue to support the same, IMO we need to do something similar.\nThe second annotation access in the following sample used to return {i: 202}, but now returns {i: 101}.\nannotation record {int i;} x on service;\n\nint globalInt = 101;\n\npublic function getService() returns service object {} {\n    return @x {i: globalInt} service object {\n        \n    };\n}\n\npublic function main() {\n    typedesc<service object {}> t = typeof getService();\n    var v = t.@x; // {\"i\":101}\n\n    globalInt = 202;\n    t = typeof getService();\n    v = t.@x; // used to be {\"i\":202}, now {\"i\":101}\n}\nWill we be fixing this anytime soon given that it's a breaking change?", "bodyHTML": "<p dir=\"auto\"><code>processServiceAnnotations</code> used to be codegen-ed separately for services to specifically recompute the annotations in services that are created within a function (via <a href=\"https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625\">https://github.com/ballerina-platform/ballerina-lang/blob/v2.0.0-Preview7/compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/bir/codegen/JvmInstructionGen.java#L1625</a>).</p>\n<p dir=\"auto\">To continue to support the same, IMO we need to do something similar.</p>\n<p dir=\"auto\">The second annotation access in the following sample used to return <code>{i: 202}</code>, but now returns <code>{i: 101}</code>.</p>\n<div class=\"highlight highlight-source-ballerina position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"annotation record {int i;} x on service;\n\nint globalInt = 101;\n\npublic function getService() returns service object {} {\n    return @x {i: globalInt} service object {\n        \n    };\n}\n\npublic function main() {\n    typedesc&lt;service object {}&gt; t = typeof getService();\n    var v = t.@x; // {&quot;i&quot;:101}\n\n    globalInt = 202;\n    t = typeof getService();\n    v = t.@x; // used to be {&quot;i&quot;:202}, now {&quot;i&quot;:101}\n}\"><pre><span class=\"pl-k\">annotation</span> <span class=\"pl-k\">record</span> {<span class=\"pl-c1\">int</span> i;} <span class=\"pl-smi\">x</span> <span class=\"pl-k\">on</span> <span class=\"pl-k\">service</span>;\n\n<span class=\"pl-c1\">int</span> globalInt <span class=\"pl-k\">=</span> <span class=\"pl-c1\">101</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">function</span> getService() <span class=\"pl-k\">returns</span> <span class=\"pl-k\">service</span> <span class=\"pl-k\">object</span> {} {\n    <span class=\"pl-k\">return</span> @<span class=\"pl-c1\">x</span> {<span class=\"pl-smi\">i</span><span class=\"pl-k\">:</span> <span class=\"pl-smi\">globalInt</span>} <span class=\"pl-k\">service</span> <span class=\"pl-k\">object</span> {\n        \n    };\n}\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">function</span> main() {\n    <span class=\"pl-k\">typedesc</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">service</span> <span class=\"pl-k\">object</span> {}<span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">t</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">typeof</span> <span class=\"pl-en\">getService</span>();\n    <span class=\"pl-c1\">var</span> v <span class=\"pl-k\">=</span> <span class=\"pl-smi\">t</span>.@<span class=\"pl-smi\">x</span>; <span class=\"pl-c\">// {\"i\":101}</span>\n\n    <span class=\"pl-smi\">globalInt</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">202</span>;\n    <span class=\"pl-smi\">t</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">typeof</span> <span class=\"pl-en\">getService</span>();\n    <span class=\"pl-smi\">v</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">t</span>.@<span class=\"pl-c1\">x</span>; <span class=\"pl-c\">// used to be {\"i\":202}, now {\"i\":101}</span>\n}</pre></div>\n<p dir=\"auto\">Will we be fixing this anytime soon given that it's a breaking change?</p>", "author": "MaryamZi", "createdAt": "2020-12-07T05:56:14Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/AnnotationUtils.java", "diffHunk": "@@ -43,12 +43,17 @@\n      * @param globalAnnotMap The global annotation map\n      * @param bType          The type for which annotations need to be set\n      */\n-    public static void processAnnotations(MapValue globalAnnotMap, Type bType) {\n+    public static void processAnnotations(MapValue globalAnnotMap, Type bType, Strand strand) {\n         if (!(bType instanceof BAnnotatableType)) {\n             return;\n         }\n \n         BAnnotatableType type = (BAnnotatableType) bType;\n+        if (type.getTag() == TypeTags.SERVICE_TAG) {\n+            processServiceAnnotations(globalAnnotMap, (BServiceType) bType, strand);", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQxOTcyMA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537419720", "bodyText": "Could this be this issue, I mean this behavior #26838.\nEdit, no this is a different issue.", "author": "rdhananjaya", "createdAt": "2020-12-07T11:07:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyOTc3NA==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537429774", "bodyText": "Issue to re-visit this annot impl: #27348\nI think we will have to consider object constructors for the above issue.", "author": "rdhananjaya", "createdAt": "2020-12-07T11:23:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI0OTUwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDM2Nw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537250367", "body": "Should we call this `hasAnnotations` instead?", "bodyText": "Should we call this hasAnnotations instead?", "bodyHTML": "<p dir=\"auto\">Should we call this <code>hasAnnotations</code> instead?</p>", "author": "MaryamZi", "createdAt": "2020-12-07T05:59:03Z", "path": "bvm/ballerina-runtime/src/main/java/io/ballerina/runtime/internal/types/BServiceType.java", "diffHunk": "@@ -99,4 +93,8 @@ public void setResourceFunctions(ResourceFunctionType[] resourceFunctions) {\n     public int getTag() {\n         return TypeTags.SERVICE_TAG;\n     }\n+\n+    public boolean isAnnotationsAvailable() {", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQyNTA2Mw==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537425063", "bodyText": "will update", "author": "rdhananjaya", "createdAt": "2020-12-07T11:15:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MjQxOQ==", "url": "https://github.com/ballerina-platform/ballerina-lang/pull/27347#discussion_r537252419", "body": "```suggestion\r\n            return types.isServiceObject((BObjectTypeSymbol) type.tsymbol);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n          \n          \n            \n                            return false;\n          \n          \n            \n                        }\n          \n          \n            \n                        return true;\n          \n          \n            \n                        return types.isServiceObject((BObjectTypeSymbol) type.tsymbol);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>types<span class=\"pl-k\">.</span>isServiceObject((<span class=\"pl-smi\">BObjectTypeSymbol</span>) type<span class=\"pl-k\">.</span>tsymbol)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> types<span class=\"pl-k\">.</span>isServiceObject((<span class=\"pl-smi\">BObjectTypeSymbol</span>) type<span class=\"pl-k\">.</span>tsymbol);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "MaryamZi", "createdAt": "2020-12-07T06:05:25Z", "path": "compiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/compiler/semantics/analyzer/Types.java", "diffHunk": "@@ -3798,18 +3796,25 @@ private boolean checkAttachMethod(BAttachedFunction func) {\n \n             // todo: change is unions are allowed as service type.\n             BType firstParamType = func.type.paramTypes.get(0);\n-            if (firstParamType.tag != TypeTags.OBJECT) {\n-                return false;\n-            }\n-\n-            if (!types.isServiceObject((BObjectTypeSymbol) firstParamType.tsymbol)) {\n+            if (!isServiceObject(firstParamType)) {\n                 return false;\n             }\n \n             BType secondParamType = func.type.paramTypes.get(1);\n-            boolean sameType = types.isSameType(this.serviceNameType, secondParamType);\n+            boolean sameType = types.isAssignable(secondParamType, this.serviceNameType);\n             return attachFound = sameType;\n \n         }\n+\n+        private boolean isServiceObject(BType type) {\n+            if (type.tag != TypeTags.OBJECT) {\n+                return false;\n+            }\n+\n+            if (!types.isServiceObject((BObjectTypeSymbol) type.tsymbol)) {\n+                return false;\n+            }\n+            return true;", "originalCommit": "217817f7468b711f07cddc3b82e2d5d1252904dc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a401819e669484416d318c78f79a84da5327b82a", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/a401819e669484416d318c78f79a84da5327b82a", "message": "Apply review suggestions", "committedDate": "2020-12-07T11:27:42Z", "type": "commit"}, {"oid": "fd669bbb594e7e320bbbb7b0817992c91c63dadd", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fd669bbb594e7e320bbbb7b0817992c91c63dadd", "message": "Improve annotation population for object ctors", "committedDate": "2020-12-08T05:02:03Z", "type": "commit"}, {"oid": "897984740a207f4b102986012bc6576acbc41926", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/897984740a207f4b102986012bc6576acbc41926", "message": "Fix annot_map pkg resolution\n\nand remove annot support lang.internal func", "committedDate": "2020-12-08T06:07:07Z", "type": "commit"}, {"oid": "482cbe79cd783483e16e5d206253ed45393a2506", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/482cbe79cd783483e16e5d206253ed45393a2506", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\ttests/jballerina-unit-test/src/test/java/org/ballerinalang/test/functions/TransactionalResourceFunctionTest.java\n\u0001\ttests/jballerina-unit-test/src/test/resources/test-src/functions/transactional_resource_functions.bal", "committedDate": "2020-12-08T06:15:57Z", "type": "commit"}, {"oid": "fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/fcd9af3fb525a0af9e1d9c2feb1ca33566feee2b", "message": "Remove unused imports", "committedDate": "2020-12-08T06:29:17Z", "type": "commit"}, {"oid": "01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/01dfbf85c9b2a3af92b5f7129f56ec017090bdfe", "message": "Re-enable disabled test case", "committedDate": "2020-12-08T07:39:37Z", "type": "commit"}, {"oid": "af68453960e1ebdf050b5a2448a53a1003bea2c1", "url": "https://github.com/ballerina-platform/ballerina-lang/commit/af68453960e1ebdf050b5a2448a53a1003bea2c1", "message": "Merge branch 'master' of github.com:ballerina-platform/ballerina-lang into service-typing-dhananjaya\n\n\u0001 Conflicts:\n\u0001\tcompiler/ballerina-lang/src/main/java/org/ballerinalang/model/elements/Flag.java\n\u0001\tcompiler/ballerina-lang/src/main/java/org/wso2/ballerinalang/util/Flags.java", "committedDate": "2020-12-09T11:49:43Z", "type": "commit"}]}