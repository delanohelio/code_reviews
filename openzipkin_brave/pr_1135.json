{"pr_number": 1135, "pr_title": "Undeprecates StrictCurrentTraceContext", "pr_author": "codefromthecrypt", "pr_createdAt": "2020-04-01T10:45:58Z", "pr_url": "https://github.com/openzipkin/brave/pull/1135", "timeline": [{"oid": "d9a6a6991a53966031426fb40c02dfe710ba00d9", "url": "https://github.com/openzipkin/brave/commit/d9a6a6991a53966031426fb40c02dfe710ba00d9", "message": "Undeprecates StrictCurrentTraceContext\n\n`StrictCurrentTraceContext` can help reduce flakiness in environments\nthat run multiple concurrent tests from different classes at the same\ntime. This unflaking is due to an unshared thread local.\n\nEven if thread local isn't the cause of flakiness, this can help those\ntrying to debug flakey things rule it out!", "committedDate": "2020-04-01T10:43:25Z", "type": "commit"}, {"oid": "55a99b615249b34b47310d30c4ca3ccf1f5e16a1", "url": "https://github.com/openzipkin/brave/commit/55a99b615249b34b47310d30c4ca3ccf1f5e16a1", "message": "typo", "committedDate": "2020-04-01T10:47:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNDI1OQ==", "url": "https://github.com/openzipkin/brave/pull/1135#discussion_r401524259", "body": "```suggestion\r\n        strictScopeDecorator = (StrictScopeDecorator) scopeDecorator;\r\n        return this;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    strictScopeDecorator = (StrictScopeDecorator) scopeDecorator;\n          \n          \n            \n                    strictScopeDecorator = (StrictScopeDecorator) scopeDecorator;\n          \n          \n            \n                    return this;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        strictScopeDecorator <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">StrictScopeDecorator</span>) scopeDecorator;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        strictScopeDecorator <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">StrictScopeDecorator</span>) scopeDecorator;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">this</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "codefromthecrypt", "createdAt": "2020-04-01T10:47:34Z", "path": "brave/src/main/java/brave/propagation/StrictCurrentTraceContext.java", "diffHunk": "@@ -13,23 +13,84 @@\n  */\n package brave.propagation;\n \n+import brave.internal.Nullable;\n+import java.io.Closeable;\n+\n /**\n  * Useful when developing instrumentation as state is enforced more strictly.\n  *\n  * <p>For example, it is instance scoped as opposed to static scoped, not inheritable and throws an\n  * exception if a scope is closed on a different thread that it was opened on.\n  *\n- * @deprecated use {@linkplain StrictScopeDecorator}. This will be removed in Brave v6.\n+ * @see StrictScopeDecorator\n  */\n-@Deprecated\n-public final class StrictCurrentTraceContext extends ThreadLocalCurrentTraceContext {\n-  static Builder strictBuilder() {\n-    return new Builder(new ThreadLocal<>()).addScopeDecorator(new StrictScopeDecorator());\n+public final class StrictCurrentTraceContext extends CurrentTraceContext implements Closeable {\n+  /** @since 5.11 */\n+  public static StrictCurrentTraceContext create() {\n+    return new StrictCurrentTraceContext();\n   }\n \n-  public StrictCurrentTraceContext() { // Preserve historical public ctor\n+  /** @since 5.11 */\n+  public static Builder newBuilder() {\n+    return new Builder();\n+  }\n+\n+  public static final class Builder extends CurrentTraceContext.Builder {\n     // intentionally not inheritable to ensure instrumentation propagation doesn't accidentally work\n     // intentionally not static to make explicit when instrumentation need per thread semantics\n-    super(strictBuilder());\n+    final ThreadLocal<TraceContext> local = new ThreadLocal<>();\n+    CurrentTraceContext delegate = new ThreadLocalCurrentTraceContext.Builder(local).build();\n+    StrictScopeDecorator strictScopeDecorator = new StrictScopeDecorator();\n+\n+    @Override public StrictCurrentTraceContext build() {\n+      delegate = new ThreadLocalCurrentTraceContext.Builder(local)\n+        .addScopeDecorator(strictScopeDecorator)\n+        .build();\n+      return new StrictCurrentTraceContext(this);\n+    }\n+\n+    @Override public Builder addScopeDecorator(ScopeDecorator scopeDecorator) {\n+      if (scopeDecorator instanceof StrictScopeDecorator) {\n+        strictScopeDecorator = (StrictScopeDecorator) scopeDecorator;", "originalCommit": "55a99b615249b34b47310d30c4ca3ccf1f5e16a1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "714e426c3136acf737a14e8fe5991b14acb2b536", "url": "https://github.com/openzipkin/brave/commit/714e426c3136acf737a14e8fe5991b14acb2b536", "message": "goof", "committedDate": "2020-04-01T10:48:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUyNDY5Nw==", "url": "https://github.com/openzipkin/brave/pull/1135#discussion_r401524697", "body": "didn't create scopes", "bodyText": "didn't create scopes", "bodyHTML": "<p dir=\"auto\">didn't create scopes</p>", "author": "codefromthecrypt", "createdAt": "2020-04-01T10:48:27Z", "path": "brave/src/test/java/brave/features/opentracing/OpenTracingAdapterTest.java", "diffHunk": "@@ -39,9 +37,6 @@\n public class OpenTracingAdapterTest {\n   List<zipkin2.Span> spans = new ArrayList<>();\n   Tracing brave = Tracing.newBuilder()\n-    .currentTraceContext(ThreadLocalCurrentTraceContext.newBuilder()", "originalCommit": "714e426c3136acf737a14e8fe5991b14acb2b536", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}