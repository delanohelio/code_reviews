{"pr_number": 1126, "pr_title": "Switches to Docker to run RabbitMQ integration tests", "pr_author": "codefromthecrypt", "pr_createdAt": "2020-03-26T07:53:16Z", "pr_url": "https://github.com/openzipkin/brave/pull/1126", "timeline": [{"oid": "3366071d29a43820e0d711ee9b2999af6d50c8a7", "url": "https://github.com/openzipkin/brave/commit/3366071d29a43820e0d711ee9b2999af6d50c8a7", "message": "Switches to Docker to run RabbitMQ integration tests\n\nI keep forgetting to run rabbitmq-server, sometimes forgetting where it is..\nThis makes it work provided docker works.", "committedDate": "2020-03-26T07:50:23Z", "type": "commit"}, {"oid": "dcc1afd9fed527b68defeeb8a7fed0a1ec9c36ec", "url": "https://github.com/openzipkin/brave/commit/dcc1afd9fed527b68defeeb8a7fed0a1ec9c36ec", "message": "less indirect", "committedDate": "2020-03-26T07:56:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM3NTQzOA==", "url": "https://github.com/openzipkin/brave/pull/1126#discussion_r398375438", "body": "inlining these tests saves 15s each on my laptop as the overall container bootstrap seems to have 15s overhead", "bodyText": "inlining these tests saves 15s each on my laptop as the overall container bootstrap seems to have 15s overhead", "bodyHTML": "<p dir=\"auto\">inlining these tests saves 15s each on my laptop as the overall container bootstrap seems to have 15s overhead</p>", "author": "codefromthecrypt", "createdAt": "2020-03-26T07:56:54Z", "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbitTracing.java", "diffHunk": "@@ -131,4 +135,26 @@\n     assertThat(consumerReporter.takeLocalSpan().name())\n       .isEqualTo(\"on-message\");\n   }\n+\n+  @Test public void producerSampler() {", "originalCommit": "3366071d29a43820e0d711ee9b2999af6d50c8a7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjY2NQ==", "url": "https://github.com/openzipkin/brave/pull/1126#discussion_r398446665", "body": "Presume this code is supposed to be calling `kiww`, not `start`.", "bodyText": "Presume this code is supposed to be calling kiww, not start.", "bodyHTML": "<p dir=\"auto\">Presume this code is supposed to be calling <code>kiww</code>, not <code>start</code>.</p>", "author": "anuraaga", "createdAt": "2020-03-26T09:58:42Z", "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbit.java", "diffHunk": "@@ -37,43 +38,68 @@\n import org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory;\n import org.springframework.amqp.rabbit.connection.CachingConnectionFactory;\n import org.springframework.amqp.rabbit.connection.ConnectionFactory;\n+import org.springframework.amqp.rabbit.core.RabbitAdmin;\n import org.springframework.amqp.rabbit.core.RabbitTemplate;\n-import org.springframework.amqp.rabbit.junit.BrokerRunning;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.testcontainers.containers.RabbitMQContainer;\n+\n+import static org.springframework.amqp.core.BindingBuilder.bind;\n+import static org.springframework.amqp.core.ExchangeBuilder.topicExchange;\n \n public abstract class ITSpringRabbit extends ITRemote {\n   static final String TEST_QUEUE = \"test-queue\";\n+  static final Exchange exchange = topicExchange(\"test-exchange\").durable(true).build();\n+  static final Queue queue = new Queue(TEST_QUEUE);\n+  static final Binding binding = bind(queue).to(exchange).with(\"test.binding\").noargs();\n+\n+  static RabbitMQContainer rabbit = new RabbitMQContainer();\n+\n+  @BeforeClass public static void startRabbit() {\n+    rabbit.start();\n+    CachingConnectionFactory connectionFactory =\n+      new CachingConnectionFactory(rabbit.getContainerIpAddress(), rabbit.getAmqpPort());\n+    try {\n+      RabbitAdmin amqpAdmin = new RabbitAdmin(connectionFactory);\n+      amqpAdmin.declareExchange(exchange);\n+      amqpAdmin.declareQueue(queue);\n+      amqpAdmin.declareBinding(binding);\n+    } finally {\n+      connectionFactory.destroy();\n+    }\n+  }\n \n-  @ClassRule public static BrokerRunning brokerRunning = BrokerRunning.isRunning();\n+  @AfterClass public static void kiwwTheWabbit() {\n+    rabbit.start();", "originalCommit": "dcc1afd9fed527b68defeeb8a7fed0a1ec9c36ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0OTg5OA==", "url": "https://github.com/openzipkin/brave/pull/1126#discussion_r398449898", "bodyText": "typo should have been stop.. would be nice if it was named kill, so someone can get my Elmer Fudd joke", "author": "codefromthecrypt", "createdAt": "2020-03-26T10:03:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjY2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1MTAzNg==", "url": "https://github.com/openzipkin/brave/pull/1126#discussion_r398451036", "bodyText": "The method name still conveys the joke :)", "author": "anuraaga", "createdAt": "2020-03-26T10:05:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjY2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0OTE4NA==", "url": "https://github.com/openzipkin/brave/pull/1126#discussion_r398449184", "body": "```suggestion\r\n    rabbit.stop();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                rabbit.start();\n          \n          \n            \n                rabbit.stop();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    rabbit<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">start</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    rabbit<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">stop</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "codefromthecrypt", "createdAt": "2020-03-26T10:02:41Z", "path": "instrumentation/spring-rabbit/src/test/java/brave/spring/rabbit/ITSpringRabbit.java", "diffHunk": "@@ -37,43 +38,68 @@\n import org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory;\n import org.springframework.amqp.rabbit.connection.CachingConnectionFactory;\n import org.springframework.amqp.rabbit.connection.ConnectionFactory;\n+import org.springframework.amqp.rabbit.core.RabbitAdmin;\n import org.springframework.amqp.rabbit.core.RabbitTemplate;\n-import org.springframework.amqp.rabbit.junit.BrokerRunning;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.testcontainers.containers.RabbitMQContainer;\n+\n+import static org.springframework.amqp.core.BindingBuilder.bind;\n+import static org.springframework.amqp.core.ExchangeBuilder.topicExchange;\n \n public abstract class ITSpringRabbit extends ITRemote {\n   static final String TEST_QUEUE = \"test-queue\";\n+  static final Exchange exchange = topicExchange(\"test-exchange\").durable(true).build();\n+  static final Queue queue = new Queue(TEST_QUEUE);\n+  static final Binding binding = bind(queue).to(exchange).with(\"test.binding\").noargs();\n+\n+  static RabbitMQContainer rabbit = new RabbitMQContainer();\n+\n+  @BeforeClass public static void startRabbit() {\n+    rabbit.start();\n+    CachingConnectionFactory connectionFactory =\n+      new CachingConnectionFactory(rabbit.getContainerIpAddress(), rabbit.getAmqpPort());\n+    try {\n+      RabbitAdmin amqpAdmin = new RabbitAdmin(connectionFactory);\n+      amqpAdmin.declareExchange(exchange);\n+      amqpAdmin.declareQueue(queue);\n+      amqpAdmin.declareBinding(binding);\n+    } finally {\n+      connectionFactory.destroy();\n+    }\n+  }\n \n-  @ClassRule public static BrokerRunning brokerRunning = BrokerRunning.isRunning();\n+  @AfterClass public static void kiwwTheWabbit() {\n+    rabbit.start();", "originalCommit": "dcc1afd9fed527b68defeeb8a7fed0a1ec9c36ec", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6711967254d19e3df9c9240d36ccdfce89be1c0e", "url": "https://github.com/openzipkin/brave/commit/6711967254d19e3df9c9240d36ccdfce89be1c0e", "message": "shut down container", "committedDate": "2020-03-26T10:02:55Z", "type": "commit"}]}