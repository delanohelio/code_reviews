{"pr_number": 154, "pr_title": "Add support for keybindings", "pr_author": "daniel-southwardellis", "pr_createdAt": "2020-07-27T03:48:15Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/154", "timeline": [{"oid": "b6c8adb2d0b22b8564ae6844e83a75c63bef1ab2", "url": "https://github.com/PatchworkMC/patchwork-api/commit/b6c8adb2d0b22b8564ae6844e83a75c63bef1ab2", "message": "Added patchwork-key-bindings", "committedDate": "2020-07-26T06:34:52Z", "type": "commit"}, {"oid": "0a5df0afe9266e535386119bdd68ecb326991d1f", "url": "https://github.com/PatchworkMC/patchwork-api/commit/0a5df0afe9266e535386119bdd68ecb326991d1f", "message": "Added patchwork keybinding for Patcher\n\n\nCleaning up remaining absolute imports", "committedDate": "2020-07-27T02:36:27Z", "type": "commit"}, {"oid": "9b11366367cc7cbc0bc96713d89499c21437d46c", "url": "https://github.com/PatchworkMC/patchwork-api/commit/9b11366367cc7cbc0bc96713d89499c21437d46c", "message": "Add Patchwork-Keybindings", "committedDate": "2020-07-27T02:44:17Z", "type": "commit"}, {"oid": "19f3f4c0e60a981d61e533bdc296972801f8f7ff", "url": "https://github.com/PatchworkMC/patchwork-api/commit/19f3f4c0e60a981d61e533bdc296972801f8f7ff", "message": "Fix missing import", "committedDate": "2020-07-27T04:06:01Z", "type": "commit"}, {"oid": "3a5448e314b4937cfa2998e4f0183988e80fa0a3", "url": "https://github.com/PatchworkMC/patchwork-api/commit/3a5448e314b4937cfa2998e4f0183988e80fa0a3", "message": "Fix archive base name", "committedDate": "2020-07-27T07:30:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1ODU0OA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r460858548", "body": "Is there any reason this doesn't match the casing of KeyBinding?", "bodyText": "Is there any reason this doesn't match the casing of KeyBinding?", "bodyHTML": "<p dir=\"auto\">Is there any reason this doesn't match the casing of KeyBinding?</p>", "author": "famous1622", "createdAt": "2020-07-27T12:37:27Z", "path": "patchwork-key-bindings/src/main/java/net/patchworkmc/mixin/keybindings/MixinKeybinding.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.keybindings;\n+\n+import net.minecraftforge.client.extensions.IForgeKeybinding;\n+import net.minecraftforge.client.settings.IKeyConflictContext;\n+import net.minecraftforge.client.settings.KeyConflictContext;\n+import net.minecraftforge.client.settings.KeyModifier;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+\n+import net.minecraft.client.options.KeyBinding;\n+import net.minecraft.client.util.InputUtil;\n+\n+import net.patchworkmc.impl.keybindings.ForgeKeyBindingConstruct;\n+\n+@Mixin(KeyBinding.class)\n+public abstract class MixinKeybinding implements Comparable<KeyBinding>, IForgeKeybinding, ForgeKeyBindingConstruct {", "originalCommit": "3a5448e314b4937cfa2998e4f0183988e80fa0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2MjUyNw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r460862527", "bodyText": "Also see IForgeKeybinding, can't fix that, so: either pick Keybinding or KeyBinding", "author": "Rongmario", "createdAt": "2020-07-27T12:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1ODU0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5MzAyMA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r460893020", "bodyText": "I'd say MixinKeyBinding here since the general rule for mixins is MixinClassName.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public abstract class MixinKeybinding implements Comparable<KeyBinding>, IForgeKeybinding, ForgeKeyBindingConstruct {\n          \n          \n            \n            public abstract class MixinKeyBinding implements Comparable<KeyBinding>, IForgeKeybinding, ForgeKeyBindingConstruct {", "author": "florensie", "createdAt": "2020-07-27T13:34:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1ODU0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg2MDYwMg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r460860602", "body": "`@Unique` would be good", "bodyText": "@Unique would be good", "bodyHTML": "<p dir=\"auto\"><code>@Unique</code> would be good</p>", "author": "Rongmario", "createdAt": "2020-07-27T12:41:06Z", "path": "patchwork-key-bindings/src/main/java/net/patchworkmc/mixin/keybindings/MixinKeybinding.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.keybindings;\n+\n+import net.minecraftforge.client.extensions.IForgeKeybinding;\n+import net.minecraftforge.client.settings.IKeyConflictContext;\n+import net.minecraftforge.client.settings.KeyConflictContext;\n+import net.minecraftforge.client.settings.KeyModifier;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+\n+import net.minecraft.client.options.KeyBinding;\n+import net.minecraft.client.util.InputUtil;\n+\n+import net.patchworkmc.impl.keybindings.ForgeKeyBindingConstruct;\n+\n+@Mixin(KeyBinding.class)\n+public abstract class MixinKeybinding implements Comparable<KeyBinding>, IForgeKeybinding, ForgeKeyBindingConstruct {\n+\t@Shadow\n+\tprivate InputUtil.KeyCode keyCode;\n+\n+\t//These exist in forge to allow modifiers and conflicting keys to work, this is not implemented\n+\t//but these remain to avoid stubbing the methods or breaking mods that use these directly for some reason\n+\tprivate KeyModifier keyModifierDefault = KeyModifier.NONE;\n+\tprivate KeyModifier keyModifier = KeyModifier.NONE;\n+\tprivate IKeyConflictContext keyConflictContext = KeyConflictContext.UNIVERSAL;", "originalCommit": "3a5448e314b4937cfa2998e4f0183988e80fa0a3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NDY0MA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r461074640", "body": "I would like to suggest that we should add a \"patchwork$\" prefix, if this method is not a part of Forge. But I think this name is okay.", "bodyText": "I would like to suggest that we should add a \"patchwork$\" prefix, if this method is not a part of Forge. But I think this name is okay.", "bodyHTML": "<p dir=\"auto\">I would like to suggest that we should add a \"patchwork$\" prefix, if this method is not a part of Forge. But I think this name is okay.</p>", "author": "rikka0w0", "createdAt": "2020-07-27T18:08:10Z", "path": "patchwork-key-bindings/src/main/java/net/patchworkmc/impl/keybindings/ForgeKeyBindingConstruct.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.keybindings;\n+\n+import net.minecraftforge.client.settings.IKeyConflictContext;\n+import net.minecraftforge.client.settings.KeyModifier;\n+\n+public interface ForgeKeyBindingConstruct {\n+\tvoid constructForgeKeyBindingOptions(IKeyConflictContext keyConflictContext, KeyModifier keyModifier);", "originalCommit": "3a5448e314b4937cfa2998e4f0183988e80fa0a3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NTMxMw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r461075313", "bodyText": "I don't feel like it's necessary here, not too sure what the rules in this are though", "author": "famous1622", "createdAt": "2020-07-27T18:09:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NDY0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MTE1Ng==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r461171156", "bodyText": "prefix if it's not from forge", "author": "TheGlitch76", "createdAt": "2020-07-27T21:08:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3NDY0MA=="}], "type": "inlineReview"}, {"oid": "0a28bc1688cbc6ba1fe6d397396b5f4cb4996091", "url": "https://github.com/PatchworkMC/patchwork-api/commit/0a28bc1688cbc6ba1fe6d397396b5f4cb4996091", "message": "Fix folders, paths and project names", "committedDate": "2020-07-27T21:19:00Z", "type": "commit"}, {"oid": "4232c81bf80125d883b9cc16f86e61e29391c57e", "url": "https://github.com/PatchworkMC/patchwork-api/commit/4232c81bf80125d883b9cc16f86e61e29391c57e", "message": "Fix KeyBinding names and add @Unique", "committedDate": "2020-07-27T21:32:24Z", "type": "commit"}, {"oid": "1f72b7205e97e03209ad1350f37987b908d927f4", "url": "https://github.com/PatchworkMC/patchwork-api/commit/1f72b7205e97e03209ad1350f37987b908d927f4", "message": "Should probably respect keybind context", "committedDate": "2020-07-27T21:45:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY1MDA1Mw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/154#discussion_r462650053", "body": "@Unique breaks reflection, which is fine. We can remove it if a mod reflects here for some reason.\r\n```suggestion\r\n\t// These exist in forge to allow modifiers and conflicting keys to work, this is not implemented\r\n\t// but these remain to avoid stubbing the methods\r\n```", "bodyText": "@unique breaks reflection, which is fine. We can remove it if a mod reflects here for some reason.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t//These exist in forge to allow modifiers and conflicting keys to work, this is not implemented\n          \n          \n            \n            \t//but these remain to avoid stubbing the methods or breaking mods that use these directly for some reason\n          \n          \n            \n            \t// These exist in forge to allow modifiers and conflicting keys to work, this is not implemented\n          \n          \n            \n            \t// but these remain to avoid stubbing the methods", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/unique/hovercard\" href=\"https://github.com/unique\">@unique</a> breaks reflection, which is fine. We can remove it if a mod reflects here for some reason.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span>These exist in forge to allow modifiers and conflicting keys to work, this is not implemented</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span>but these remain to avoid stubbing the methods<span class=\"x x-first x-last\"> or breaking mods that use these directly for some reason</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>These exist in forge to allow modifiers and conflicting keys to work, this is not implemented</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-c\"><span class=\"pl-c\">//</span><span class=\"x x-first x-last\"> </span>but these remain to avoid stubbing the methods</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheGlitch76", "createdAt": "2020-07-29T23:38:51Z", "path": "patchwork-key-bindings/src/main/java/net/patchworkmc/mixin/keybindings/MixinKeyBinding.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.keybindings;\n+\n+import net.minecraftforge.client.extensions.IForgeKeybinding;\n+import net.minecraftforge.client.settings.IKeyConflictContext;\n+import net.minecraftforge.client.settings.KeyConflictContext;\n+import net.minecraftforge.client.settings.KeyModifier;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+\n+import net.minecraft.client.options.KeyBinding;\n+import net.minecraft.client.util.InputUtil;\n+\n+import net.patchworkmc.impl.keybindings.ForgeKeyBindingConstruct;\n+\n+@Mixin(KeyBinding.class)\n+public abstract class MixinKeyBinding implements Comparable<KeyBinding>, IForgeKeybinding, ForgeKeyBindingConstruct {\n+\t@Shadow\n+\tprivate InputUtil.KeyCode keyCode;\n+\n+\t//These exist in forge to allow modifiers and conflicting keys to work, this is not implemented\n+\t//but these remain to avoid stubbing the methods or breaking mods that use these directly for some reason", "originalCommit": "1f72b7205e97e03209ad1350f37987b908d927f4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ee1839b9124487d11be29eed15be281e3d6729e3", "url": "https://github.com/PatchworkMC/patchwork-api/commit/ee1839b9124487d11be29eed15be281e3d6729e3", "message": "Remove now incorrect comment\n\nCo-authored-by: Glitch <glitchieproductionsofficial@gmail.com>", "committedDate": "2020-07-29T23:52:53Z", "type": "commit"}]}