{"pr_number": 107, "pr_title": "Impl Forge's selective resource reloader", "pr_author": "rikka0w0", "pr_createdAt": "2020-07-03T08:05:32Z", "pr_url": "https://github.com/PatchworkMC/patchwork-api/pull/107", "timeline": [{"oid": "f218621092d55f2f38061ee0d2e09befe34ecac9", "url": "https://github.com/PatchworkMC/patchwork-api/commit/f218621092d55f2f38061ee0d2e09befe34ecac9", "message": "Implement ISelectiveResourceReloadListener", "committedDate": "2020-07-03T07:02:47Z", "type": "commit"}, {"oid": "550b31526df698643907a20308e22c20ff679ec3", "url": "https://github.com/PatchworkMC/patchwork-api/commit/550b31526df698643907a20308e22c20ff679ec3", "message": "Add other ResourceTypes, add readme, remove patchwork-fml dependency", "committedDate": "2020-07-03T08:03:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY5NDg2Mw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r449694863", "body": "This should be resolved before merging, ideally.", "bodyText": "This should be resolved before merging, ideally.", "bodyHTML": "<p dir=\"auto\">This should be resolved before merging, ideally.</p>", "author": "TheGlitch76", "createdAt": "2020-07-03T20:07:55Z", "path": "patchwork-resource/src/main/java/net/patchworkmc/mixin/resource/MixinLanguageOptionsScreen.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.resource;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import net.minecraftforge.resource.VanillaResourceType;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.options.LanguageOptionsScreen;\n+\n+import net.patchworkmc.impl.resource.TypedResourceLoader;\n+\n+@Mixin(value = LanguageOptionsScreen.class)\n+public abstract class MixinLanguageOptionsScreen {\n+\t// TODO: Does not work after reobf", "originalCommit": "550b31526df698643907a20308e22c20ff679ec3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcwNjkyMg==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r449706922", "bodyText": "I totally agree, we should discuss this on discord", "author": "rikka0w0", "createdAt": "2020-07-03T21:28:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY5NDg2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3MTMzOQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r449771339", "bodyText": "fixed in the latest commit", "author": "rikka0w0", "createdAt": "2020-07-04T12:59:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTY5NDg2Mw=="}], "type": "inlineReview"}, {"oid": "c14d287a07c19e89d028b91b1e6b1f22334b054a", "url": "https://github.com/PatchworkMC/patchwork-api/commit/c14d287a07c19e89d028b91b1e6b1f22334b054a", "message": "Apply suggestions from code review\n\nCo-authored-by: Glitch <glitchieproductionsofficial@gmail.com>", "committedDate": "2020-07-03T20:50:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyMjUzNQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r449722535", "body": "Is there any reason we don't return a completed null future in case anyone (even though they definitely shouldn't) expects it?", "bodyText": "Is there any reason we don't return a completed null future in case anyone (even though they definitely shouldn't) expects it?", "bodyHTML": "<p dir=\"auto\">Is there any reason we don't return a completed null future in case anyone (even though they definitely shouldn't) expects it?</p>", "author": "famous1622", "createdAt": "2020-07-04T00:13:53Z", "path": "patchwork-resource/src/main/java/net/patchworkmc/mixin/resource/MixinLanguageOptionsScreen.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.resource;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import net.minecraftforge.resource.VanillaResourceType;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.options.LanguageOptionsScreen;\n+\n+import net.patchworkmc.impl.resource.TypedResourceLoader;\n+\n+@Mixin(value = LanguageOptionsScreen.class)\n+public abstract class MixinLanguageOptionsScreen {\n+\t// TODO: Does not work after reobf\n+\t@SuppressWarnings(\"rawtypes\")\n+\t@Redirect(require = 0, method = \"method_19820(Lnet/minecraft/client/gui/widget/ButtonWidget/ButtonWidget;)V\", at = @At(value = \"INVOKE\", target = \"net/minecraft/client/MinecraftClient.reloadResources()Ljava/util/concurrent/CompletableFuture;\"))\n+\tprotected CompletableFuture patchwork_init_reloadResources(MinecraftClient mc) {\n+\t\tTypedResourceLoader.patchwork$refreshResources(mc, VanillaResourceType.LANGUAGES);\n+\t\treturn null;", "originalCommit": "c14d287a07c19e89d028b91b1e6b1f22334b054a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3MTM3OA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r449771378", "bodyText": "fixed", "author": "rikka0w0", "createdAt": "2020-07-04T13:00:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyMjUzNQ=="}], "type": "inlineReview"}, {"oid": "79136375fec413482a4ebf3fad86d53cff73d31e", "url": "https://github.com/PatchworkMC/patchwork-api/commit/79136375fec413482a4ebf3fad86d53cff73d31e", "message": "Made lambda injection working by disabling remap", "committedDate": "2020-07-04T12:56:56Z", "type": "commit"}, {"oid": "a2aa2f27853957af02a0ff59905a98e1c87f3d2a", "url": "https://github.com/PatchworkMC/patchwork-api/commit/a2aa2f27853957af02a0ff59905a98e1c87f3d2a", "message": "Merge branch 'feature/resource' of\ngit@github.com:PatchworkMC/patchwork-api.git into feature/resource\n\nConflicts:\n\tpatchwork-resource/Readme.md", "committedDate": "2020-07-04T12:58:55Z", "type": "commit"}, {"oid": "d98addeb221c2a627f246826a18ca0b2296cb4c8", "url": "https://github.com/PatchworkMC/patchwork-api/commit/d98addeb221c2a627f246826a18ca0b2296cb4c8", "message": "Fix json indentation", "committedDate": "2020-07-06T12:31:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MTI0NQ==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r453091245", "body": "I don't understand why this is commented out. Is it waiting on a different feature, or are we just marking that we've ignored this part?", "bodyText": "I don't understand why this is commented out. Is it waiting on a different feature, or are we just marking that we've ignored this part?", "bodyHTML": "<p dir=\"auto\">I don't understand why this is commented out. Is it waiting on a different feature, or are we just marking that we've ignored this part?</p>", "author": "TheGlitch76", "createdAt": "2020-07-10T21:46:09Z", "path": "patchwork-resource/src/main/java/net/minecraftforge/resource/SelectiveReloadStateHandler.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.resource;\n+\n+import java.util.function.Predicate;\n+\n+import javax.annotation.Nullable;\n+\n+import net.minecraft.resource.SynchronousResourceReloadListener;\n+//import net.minecraftforge.common.ForgeConfig;\n+import net.patchworkmc.impl.resource.TypedResourceLoader;\n+\n+/**\n+ * Handles reload parameters for selective loaders.\n+ */\n+public enum SelectiveReloadStateHandler {\n+\tINSTANCE;\n+\n+\t@Nullable\n+\tprivate Predicate<IResourceType> currentPredicate = null;\n+\n+\t/**\n+\t * Pushes a resource type predicate for the current reload. Should only be\n+\t * called when initiating a resource reload. If a reload is already in progress\n+\t * when this is called, an exception will be thrown.\n+\t *\n+\t * @param resourcePredicate the resource requirement predicate for the current\n+\t *                          reload\n+\t */\n+\tpublic void beginReload(Predicate<IResourceType> resourcePredicate) {\n+\t\tif (this.currentPredicate != null) {\n+\t\t\tthrow new IllegalStateException(\"Recursive resource reloading detected\");\n+\t\t}\n+\n+\t\tthis.currentPredicate = resourcePredicate;\n+\t}\n+\n+\t/**\n+\t * Gets the current reload resource predicate for the initiated reload.\n+\t *\n+\t * @return the active reload resource predicate, or an accepting one if none in\n+\t *         progress\n+\t */\n+\tpublic Predicate<IResourceType> get() {\n+\t\tif (this.currentPredicate == null) { // || !ForgeConfig.CLIENT.selectiveResourceReloadEnabled.get()) {", "originalCommit": "d98addeb221c2a627f246826a18ca0b2296cb4c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3NjcwMA==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r453176700", "bodyText": "We don't have ForgeConfig yet, do we?", "author": "rikka0w0", "createdAt": "2020-07-11T09:30:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MTI0NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MTQ4Mw==", "url": "https://github.com/PatchworkMC/patchwork-api/pull/107#discussion_r453091483", "body": "```suggestion\r\n@Mixin(LanguageOptionsScreen.class)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Mixin(value = LanguageOptionsScreen.class)\n          \n          \n            \n            @Mixin(LanguageOptionsScreen.class)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">@Mixin</span>(<span class=\"pl-c1 x x-first\">value</span><span class=\"x\"> </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">LanguageOptionsScreen</span><span class=\"pl-k\">.</span>class)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">@Mixin</span>(<span class=\"pl-smi\">LanguageOptionsScreen</span><span class=\"pl-k\">.</span>class)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "TheGlitch76", "createdAt": "2020-07-10T21:46:49Z", "path": "patchwork-resource/src/main/java/net/patchworkmc/mixin/resource/MixinLanguageOptionsScreen.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.resource;\n+\n+import java.util.concurrent.CompletableFuture;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import net.minecraftforge.resource.VanillaResourceType;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.options.LanguageOptionsScreen;\n+\n+import net.patchworkmc.impl.resource.TypedResourceLoader;\n+\n+@Mixin(value = LanguageOptionsScreen.class)", "originalCommit": "d98addeb221c2a627f246826a18ca0b2296cb4c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f588f506096d8c0867e159aacda4f2125beb3a4c", "url": "https://github.com/PatchworkMC/patchwork-api/commit/f588f506096d8c0867e159aacda4f2125beb3a4c", "message": "Update patchwork-resource/src/main/java/net/patchworkmc/mixin/resource/MixinLanguageOptionsScreen.java\n\nCo-authored-by: Glitch <glitchieproductionsofficial@gmail.com>", "committedDate": "2020-07-11T09:21:10Z", "type": "commit"}]}