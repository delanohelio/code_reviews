{"pr_number": 10868, "pr_title": "[#1501] Add unit tests for FeedbackRankQuestionDetails and FeedbackTextResponseDetails classes", "pr_author": "daongochieu2810", "pr_createdAt": "2020-12-11T05:00:11Z", "pr_url": "https://github.com/TEAMMATES/teammates/pull/10868", "timeline": [{"oid": "0132c3241ad6221c1ebcff27883737d5e3ed1d97", "url": "https://github.com/TEAMMATES/teammates/commit/0132c3241ad6221c1ebcff27883737d5e3ed1d97", "message": "Add unit tests for Feedback*QuestionDetails classes", "committedDate": "2020-12-11T04:56:02Z", "type": "commit"}, {"oid": "385f85f81958c8f01fee86738f01e8ad2c99589b", "url": "https://github.com/TEAMMATES/teammates/commit/385f85f81958c8f01fee86738f01e8ad2c99589b", "message": "Fix CI errors", "committedDate": "2020-12-11T13:30:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQxNDU5OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542414598", "body": "This test is not really doing anything right? We already test that a valid value is set in the above test. (same for the other one below)", "bodyText": "This test is not really doing anything right? We already test that a valid value is set in the above test. (same for the other one below)", "bodyHTML": "<p dir=\"auto\">This test is not really doing anything right? We already test that a valid value is set in the above test. (same for the other one below)</p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:13:33Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_differentValidValues_shouldReturnTrue() {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyMzA1Ng==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542423056", "body": "add a test for setting/getting duplicates too + you could also test the the default value is `Integer.MIN_VALUE`", "bodyText": "add a test for setting/getting duplicates too + you could also test the the default value is Integer.MIN_VALUE", "bodyHTML": "<p dir=\"auto\">add a test for setting/getting duplicates too + you could also test the the default value is <code>Integer.MIN_VALUE</code></p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:24:55Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNjEwNg==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542426106", "body": "again this isnt doing much", "bodyText": "again this isnt doing much", "bodyHTML": "<p dir=\"auto\">again this isnt doing much</p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:28:25Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNzM0OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542427348", "body": "you can assert is null here instead of forcing an NPE", "bodyText": "you can assert is null here instead of forcing an NPE", "bodyHTML": "<p dir=\"auto\">you can assert is null here instead of forcing an NPE</p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:29:29Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertNotEquals(feedbackTextResponseDetails.getAnswer(), \"World Hello\");\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5MDYwOQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542990609", "bodyText": "I think your naming of the test function should change here as well?", "author": "ChooJeremy", "createdAt": "2020-12-15T02:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyNzM0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQyODI0NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542428245", "body": "I think this can be removed - seems like a duplicate of earlier test", "bodyText": "I think this can be removed - seems like a duplicate of earlier test", "bodyHTML": "<p dir=\"auto\">I think this can be removed - seems like a duplicate of earlier test</p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:30:38Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateResponseAnswer_differentValues_shouldReturnFalse() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertNotEquals(feedbackTextResponseDetails.getAnswer(), \"World Hello\");\n+    }\n+\n+    @Test(expectedExceptions = NullPointerException.class)\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        feedbackTextResponseDetails.getAnswer().length();\n+    }\n+\n+    @Test\n+    public void testValidateAttributesOfAnswer_validValue_shouldThrowException() {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzMDYxOQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542430619", "body": "I think we can test `setAnswer` and also the default constructor (that sets answer to empty string)", "bodyText": "I think we can test setAnswer and also the default constructor (that sets answer to empty string)", "bodyHTML": "<p dir=\"auto\">I think we can test <code>setAnswer</code> and also the default constructor (that sets answer to empty string)</p>", "author": "rrtheonlyone", "createdAt": "2020-12-14T14:33:53Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {", "originalCommit": "385f85f81958c8f01fee86738f01e8ad2c99589b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "url": "https://github.com/TEAMMATES/teammates/commit/8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "message": "Fixed as suggested", "committedDate": "2020-12-14T17:30:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk5MDI1MA==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r542990250", "body": "These checks aren't necessary, they make the code more complex (uncertainty in what you're testing) and are already covered by the above equal tests.", "bodyText": "These checks aren't necessary, they make the code more complex (uncertainty in what you're testing) and are already covered by the above equal tests.", "bodyHTML": "<p dir=\"auto\">These checks aren't necessary, they make the code more complex (uncertainty in what you're testing) and are already covered by the above equal tests.</p>", "author": "ChooJeremy", "createdAt": "2020-12-15T02:09:01Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackRankQuestionDetails}.\n+ */\n+public class FeedbackRankQuestionDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n+        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testValue);\n+    }\n+\n+    @Test\n+    public void testValidateMaxOptionsToBeRanked_differentValidValues_shouldReturnTrue() {\n+        int testValue = 100;\n+        int testDiffValue = 101;\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n+        assertNotEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testDiffValue);\n+    }\n+\n+    @Test\n+    public void testValidateDuplicatesAllowed_validValues_shouldReturnTrue() {\n+        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n+        assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, true);\n+\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(false);\n+        assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, false);\n+\n+        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n+        assertNotEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, false);", "originalCommit": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAwMjQyNg==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543002426", "body": "To be clearer for what you're testing (the function `setAnswer`), you should test that the initial value isn't `testValue` i.e. \r\n```suggestion\r\n        assertNotEquals(feedbackTextResponseDetails.getAnswerString(), SanitizationHelper.sanitizeForRichText(testValue));\r\n```", "bodyText": "To be clearer for what you're testing (the function setAnswer), you should test that the initial value isn't testValue i.e.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(feedbackTextResponseDetails.getAnswerString(),\n          \n          \n            \n                    assertNotEquals(feedbackTextResponseDetails.getAnswerString(), SanitizationHelper.sanitizeForRichText(testValue));", "bodyHTML": "<p dir=\"auto\">To be clearer for what you're testing (the function <code>setAnswer</code>), you should test that the initial value isn't <code>testValue</code> i.e.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">assertEquals</span>(feedbackTextResponseDetails<span class=\"pl-k\">.</span>getAnswerString(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertNotEquals</span>(feedbackTextResponseDetails<span class=\"pl-k\">.</span>getAnswerString(),<span class=\"x x-first\"> </span><span class=\"pl-smi x\">SanitizationHelper</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">sanitizeForRichText(testValue));</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ChooJeremy", "createdAt": "2020-12-15T02:42:26Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package teammates.common.datatransfer.questions;\n+\n+import org.testng.annotations.Test;\n+\n+import teammates.common.util.SanitizationHelper;\n+import teammates.test.BaseTestCase;\n+\n+/**\n+ * SUT: {@link FeedbackTextResponseDetails}.\n+ */\n+public class FeedbackTextResponseDetailsTest extends BaseTestCase {\n+    @Test\n+    public void testValidateResponseAnswer_sameValues_shouldReturnTrue() {\n+        String testAnswer = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testAnswer);\n+        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");\n+    }\n+\n+    @Test\n+    public void testValidateAttributesOfAnswer_nullValue_shouldThrowException() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        assertNull(feedbackTextResponseDetails.getAnswer());\n+    }\n+\n+    @Test\n+    public void testValidateSanitizedAnswerString_nullValues_shouldReturnTrue() {\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(null);\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),\n+                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));\n+    }\n+\n+    @Test\n+    public void testValidateSanitizedAnswerString_validValues_shouldReturnTrue() {\n+        String testValue = \"Hello World\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails(testValue);\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),\n+                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));\n+    }\n+\n+    @Test\n+    public void testValidateSetAnswer_sameValues_shouldReturnTrue() {\n+        String testValue = \"Hello World\";\n+        String emptyString = \"\";\n+        FeedbackTextResponseDetails feedbackTextResponseDetails = new FeedbackTextResponseDetails();\n+        assertEquals(feedbackTextResponseDetails.getAnswerString(),", "originalCommit": "8c50f3cf52e1f4988cd28ffc9429c2dfb0e3c4eb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b5f98c68b839fa9f12cbb5c8e7e9873272b716a7", "url": "https://github.com/TEAMMATES/teammates/commit/b5f98c68b839fa9f12cbb5c8e7e9873272b716a7", "message": "Fixed as suggested", "committedDate": "2020-12-15T13:12:07Z", "type": "commit"}, {"oid": "e86dee969bf7f7886ad8c99ff9688648f6e59385", "url": "https://github.com/TEAMMATES/teammates/commit/e86dee969bf7f7886ad8c99ff9688648f6e59385", "message": "Merge branch 'master' into master", "committedDate": "2020-12-15T13:20:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxMjQ3OA==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543812478", "body": "This change seems unrelated?\r\nLet's try to avoid changes in files that don't impact your PR.", "bodyText": "This change seems unrelated?\nLet's try to avoid changes in files that don't impact your PR.", "bodyHTML": "<p dir=\"auto\">This change seems unrelated?<br>\nLet's try to avoid changes in files that don't impact your PR.</p>", "author": "ChooJeremy", "createdAt": "2020-12-16T01:36:23Z", "path": "src/main/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetails.java", "diffHunk": "@@ -3,7 +3,6 @@\n import teammates.common.util.SanitizationHelper;\n \n public class FeedbackTextResponseDetails extends FeedbackResponseDetails {\n-", "originalCommit": "e86dee969bf7f7886ad8c99ff9688648f6e59385", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgxMzM0NQ==", "url": "https://github.com/TEAMMATES/teammates/pull/10868#discussion_r543813345", "body": "Sorry if I wasn't clear enough. We do want to test that a change has occured, just not test an Equals and a NotEquals of a boolean in the same state.\r\nSomething along the lines of:\r\n\r\n- Create new object\r\n- Test that duplicates are allowed is not true\r\n- Set duplicates allowed to true\r\n- Test that duplicates are allowed is now true.\r\n\r\nWe can do the same for max options as well.", "bodyText": "Sorry if I wasn't clear enough. We do want to test that a change has occured, just not test an Equals and a NotEquals of a boolean in the same state.\nSomething along the lines of:\n\nCreate new object\nTest that duplicates are allowed is not true\nSet duplicates allowed to true\nTest that duplicates are allowed is now true.\n\nWe can do the same for max options as well.", "bodyHTML": "<p dir=\"auto\">Sorry if I wasn't clear enough. We do want to test that a change has occured, just not test an Equals and a NotEquals of a boolean in the same state.<br>\nSomething along the lines of:</p>\n<ul dir=\"auto\">\n<li>Create new object</li>\n<li>Test that duplicates are allowed is not true</li>\n<li>Set duplicates allowed to true</li>\n<li>Test that duplicates are allowed is now true.</li>\n</ul>\n<p dir=\"auto\">We can do the same for max options as well.</p>", "author": "ChooJeremy", "createdAt": "2020-12-16T01:38:48Z", "path": "src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java", "diffHunk": "@@ -25,28 +25,10 @@ public void testValidateMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue()\n     }\n \n     @Test\n-    public void testValidateMaxOptionsToBeRanked_differentValidValues_shouldReturnTrue() {\n-        int testValue = 100;\n-        int testDiffValue = 101;\n-        FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n-        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);\n-        assertNotEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testDiffValue);\n-    }\n-\n-    @Test\n-    public void testValidateDuplicatesAllowed_validValues_shouldReturnTrue() {\n+    public void testValidateDuplicatesAllowed_isAllowed_shouldReturnTrue() {\n         FeedbackRankQuestionDetails feedbackRankQuestionDetails = new FeedbackRankOptionsQuestionDetails();\n         feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);\n         assertEquals(feedbackRankQuestionDetails.areDuplicatesAllowed, true);", "originalCommit": "e86dee969bf7f7886ad8c99ff9688648f6e59385", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bd7ecf54890417f31f461dee4a0ff3b4e4531f48", "url": "https://github.com/TEAMMATES/teammates/commit/bd7ecf54890417f31f461dee4a0ff3b4e4531f48", "message": "Change as requested", "committedDate": "2020-12-16T14:31:51Z", "type": "commit"}, {"oid": "9392b4320ed53f805248891ff47b038feacace3b", "url": "https://github.com/TEAMMATES/teammates/commit/9392b4320ed53f805248891ff47b038feacace3b", "message": "Merge branch 'master' into master", "committedDate": "2020-12-19T19:02:53Z", "type": "commit"}, {"oid": "f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc", "url": "https://github.com/TEAMMATES/teammates/commit/f5b34b56ba5550d0ec717dfaa2719dd4c7c36dfc", "message": "Fix lint errors", "committedDate": "2020-12-20T06:32:33Z", "type": "commit"}]}