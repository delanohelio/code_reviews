{"pr_number": 379, "pr_title": "[JENKINS-59617] Create unit test for IconLabelProvider", "pr_author": "XiongKezhi", "pr_createdAt": "2020-02-16T05:51:55Z", "pr_url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379", "timeline": [{"oid": "a172ae07d3ec143c46e6d0f27d302e283ac05432", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/a172ae07d3ec143c46e6d0f27d302e283ac05432", "message": "[JENKINS-59617] Create unit test for IconLabelProvider", "committedDate": "2020-02-16T05:15:59Z", "type": "commit"}, {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/1f17ce4a23f85900f830606e0467e312869e80d9", "message": "changed constant variable name to meet the style", "committedDate": "2020-02-16T05:59:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDcwMw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934703", "body": "I think it would be more readable if you would inline the variables. \r\n\r\n```suggestion\r\n                .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-id-24x24.png\")\r\n```", "bodyText": "I think it would be more readable if you would inline the variables.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n          \n          \n            \n                            .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-id-24x24.png\")", "bodyHTML": "<p dir=\"auto\">I think it would be more readable if you would inline the variables.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .hasSmallIconUrl(<span class=\"pl-c1 x x-first\">ICONS_URL</span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x\">ICON_ID</span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">SMALL_ICON_URL_SUFFIX</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .hasSmallIconUrl(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">/plugin/warnings-ng/icons/icon-id-24x24.png</span><span class=\"pl-pds x x-last\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-02-16T21:27:41Z", "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)", "originalCommit": "1f17ce4a23f85900f830606e0467e312869e80d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "changed_code": [{"header": "diff --git a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\nindex f75b83210..675efbb03 100644\n--- a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n+++ b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n", "chunk": "@@ -32,8 +32,8 @@ class IconLabelProviderTest {\n         IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n \n         assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n-                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n-                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n+                .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-id-24x24.png\")\n+                .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-id-48x48.png\");\n     }\n \n     /**\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgwMQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934801", "body": "```suggestion\r\n                .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-id-48x48.png\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n          \n          \n            \n                            .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-id-48x48.png\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .hasLargeIconUrl(<span class=\"pl-c1 x x-first\">ICONS_URL</span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x\">ICON_ID</span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">LARGE_ICON_URL_SUFFIX</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .hasLargeIconUrl(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">/plugin/warnings-ng/icons/icon-id-48x48.png</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-02-16T21:28:57Z", "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n+                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);", "originalCommit": "1f17ce4a23f85900f830606e0467e312869e80d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "changed_code": [{"header": "diff --git a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\nindex f75b83210..675efbb03 100644\n--- a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n+++ b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n", "chunk": "@@ -32,8 +32,8 @@ class IconLabelProviderTest {\n         IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n \n         assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n-                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n-                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n+                .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-id-24x24.png\")\n+                .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-id-48x48.png\");\n     }\n \n     /**\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgyMw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934823", "body": "same as above. It is redundant but better readable...", "bodyText": "same as above. It is redundant but better readable...", "bodyHTML": "<p dir=\"auto\">same as above. It is redundant but better readable...</p>", "author": "uhafner", "createdAt": "2020-02-16T21:29:23Z", "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n+                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n+    }\n+\n+    /**\n+     * Verifies the name of the icon in URL is obtained from parameter, if the\n+     * {@code iconName} parameter is provided.\n+     */\n+    @Test\n+    void shouldParameterNameIfNotBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME, ICON_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_NAME + SMALL_ICON_URL_SUFFIX)", "originalCommit": "1f17ce4a23f85900f830606e0467e312869e80d9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "changed_code": [{"header": "diff --git a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\nindex f75b83210..675efbb03 100644\n--- a/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n+++ b/src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java\n", "chunk": "@@ -45,7 +45,7 @@ class IconLabelProviderTest {\n         IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME, ICON_NAME);\n \n         assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n-                .hasSmallIconUrl(ICONS_URL + ICON_NAME + SMALL_ICON_URL_SUFFIX)\n-                .hasLargeIconUrl(ICONS_URL + ICON_NAME + LARGE_ICON_URL_SUFFIX);\n+                .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-name-24x24.png\")\n+                .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-name-48x48.png\");\n     }\n }\n\\ No newline at end of file\n", "next_change": null}]}}, {"oid": "80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "message": "inline variables", "committedDate": "2020-02-17T02:41:01Z", "type": "commit"}, {"oid": "9d5efcd01a68e225544c6aca8ff0a487e9c3a120", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/9d5efcd01a68e225544c6aca8ff0a487e9c3a120", "message": "delete used variables", "committedDate": "2020-02-17T02:44:36Z", "type": "commit"}]}