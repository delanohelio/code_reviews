{"pr_number": 721, "pr_title": "Support withChecks", "pr_author": "mrginglymus", "pr_createdAt": "2020-12-26T17:57:16Z", "pr_url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721", "timeline": [{"oid": "f34574d63bea4896ca0b95ad689af5d9d67816b5", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/f34574d63bea4896ca0b95ad689af5d9d67816b5", "message": "Add test for withChecks support", "committedDate": "2020-12-26T17:51:51Z", "type": "commit"}, {"oid": "c37169cd730d8e5853a4ee04d388ade4f6a506cd", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c37169cd730d8e5853a4ee04d388ade4f6a506cd", "message": "Support withChecks", "committedDate": "2020-12-26T17:56:06Z", "type": "commit"}, {"oid": "4110debe6ab19e76c76ee0fa671a61584b77082a", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/4110debe6ab19e76c76ee0fa671a61584b77082a", "message": "Update readme", "committedDate": "2020-12-26T18:01:07Z", "type": "commit"}, {"oid": "57703098d897573102f94326972028f36e26ae91", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/57703098d897573102f94326972028f36e26ae91", "message": "Satisfy linters", "committedDate": "2020-12-26T19:21:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTAxOA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419018", "body": "I would rather prefer it look like:\r\n```\r\nWarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\r\n```\r\n\r\nThen we can place the logic inside of `WarningChecksPublisher` and reuse it for the `recordIssues` step. (`PublishIssuesStep` is a different step with the name `publishIssues`). ", "bodyText": "I would rather prefer it look like:\nWarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n\nThen we can place the logic inside of WarningChecksPublisher and reuse it for the recordIssues step. (PublishIssuesStep is a different step with the name publishIssues).", "bodyHTML": "<p dir=\"auto\">I would rather prefer it look like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n\"><pre><code>WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n</code></pre></div>\n<p dir=\"auto\">Then we can place the logic inside of <code>WarningChecksPublisher</code> and reuse it for the <code>recordIssues</code> step. (<code>PublishIssuesStep</code> is a different step with the name <code>publishIssues</code>).</p>", "author": "uhafner", "createdAt": "2020-12-28T17:08:25Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java", "diffHunk": "@@ -855,7 +857,8 @@ protected ResultAction run() throws IOException, InterruptedException, IllegalSt\n             ResultAction action = publisher.attachAction(step.getTrendChartType());\n \n             if (!step.isSkipPublishingChecks()) {\n-                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener());\n+                String checksName = Optional.ofNullable(getContext().get(ChecksInfo.class)).map(ChecksInfo::getName).orElse(null);\n+                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), checksName);", "originalCommit": "57703098d897573102f94326972028f36e26ae91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36ee313dbded35e6bc1a3b016d454a3240339929", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java\nindex 42d92a725..90fbee2ae 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java\n", "chunk": "@@ -857,8 +857,7 @@ public class PublishIssuesStep extends Step implements Serializable {\n             ResultAction action = publisher.attachAction(step.getTrendChartType());\n \n             if (!step.isSkipPublishingChecks()) {\n-                String checksName = Optional.ofNullable(getContext().get(ChecksInfo.class)).map(ChecksInfo::getName).orElse(null);\n-                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), checksName);\n+                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n                 checksPublisher.publishChecks();\n             }\n \n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTU0Ng==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419546", "body": "See above: parameter should be of type `ChecksInfo`. \r\nAnd do not add a second constructor since we need the same call for the `IssueRecorder` (which is used by the `recordIssues` step). ", "bodyText": "See above: parameter should be of type ChecksInfo.\nAnd do not add a second constructor since we need the same call for the IssueRecorder (which is used by the recordIssues step).", "bodyHTML": "<p dir=\"auto\">See above: parameter should be of type <code>ChecksInfo</code>.<br>\nAnd do not add a second constructor since we need the same call for the <code>IssueRecorder</code> (which is used by the <code>recordIssues</code> step).</p>", "author": "uhafner", "createdAt": "2020-12-28T17:10:25Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +40,16 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final String checksName;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final String checksName) {", "originalCommit": "57703098d897573102f94326972028f36e26ae91", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "36ee313dbded35e6bc1a3b016d454a3240339929", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\nindex 770f01364..cd9f6e439 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n", "chunk": "@@ -40,16 +42,12 @@ import io.jenkins.plugins.checks.api.ChecksStatus;\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n-    private final String checksName;\n+    private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final String checksName) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n         this.action = action;\n         this.listener = listener;\n-        this.checksName = checksName;\n-    }\n-\n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n-        this(action, listener, null);\n+        this.checksInfo = checksInfo;\n     }\n \n     /**\n", "next_change": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\nindex cd9f6e439..0ccf66658 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n", "chunk": "@@ -42,9 +43,10 @@ import io.jenkins.plugins.checks.steps.ChecksInfo;\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    @CheckForNull\n     private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {\n         this.action = action;\n         this.listener = listener;\n         this.checksInfo = checksInfo;\n", "next_change": null}]}}]}}, {"oid": "36ee313dbded35e6bc1a3b016d454a3240339929", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/36ee313dbded35e6bc1a3b016d454a3240339929", "message": "Pass around checksInfo, not checksName; support recordIssues", "committedDate": "2020-12-28T18:15:04Z", "type": "commit"}, {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/979f79225faeee4b22095cf0f2db79e234cdb130", "message": "Add test for withChecks/recordIssues", "committedDate": "2020-12-28T18:55:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5MzgxMw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493813", "body": "```suggestion\r\n    @CheckForNull\r\n    private ChecksInfo checksInfo;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private ChecksInfo checksInfo;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"117\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">private</span><span class=\"x\"> </span><span class=\"pl-smi x\">ChecksInfo</span><span class=\"x x-last\"> checksInfo;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"117\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">@CheckForNull</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"118\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-12-28T21:35:11Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -112,6 +113,8 @@\n \n     private boolean skipPublishingChecks; // by default, checks will be published\n \n+    private ChecksInfo checksInfo;", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\nindex 8f4327884..e3e08832b 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\n", "chunk": "@@ -113,6 +113,7 @@ public class IssuesRecorder extends Recorder {\n \n     private boolean skipPublishingChecks; // by default, checks will be published\n \n+    @CheckForNull\n     private ChecksInfo checksInfo;\n \n     private String id;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5Mzg4MA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493880", "body": "```suggestion\r\n    public void setChecksInfo(@CheckForNull final ChecksInfo checksInfo) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setChecksInfo(final ChecksInfo checksInfo) {\n          \n          \n            \n                public void setChecksInfo(@CheckForNull final ChecksInfo checksInfo) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setChecksInfo(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setChecksInfo(<span class=\"pl-k x x-first\">@CheckForNull</span><span class=\"x x-last\"> </span><span class=\"pl-k\">final</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-12-28T21:35:32Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -591,6 +594,10 @@ public void setFilters(final List<RegexpFilter> filters) {\n         this.filters = new ArrayList<>(filters);\n     }\n \n+    public void setChecksInfo(final ChecksInfo checksInfo) {", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\nindex 8f4327884..e3e08832b 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java\n", "chunk": "@@ -594,7 +595,7 @@ public class IssuesRecorder extends Recorder {\n         this.filters = new ArrayList<>(filters);\n     }\n \n-    public void setChecksInfo(final ChecksInfo checksInfo) {\n+    public void setChecksInfo(@CheckForNull final ChecksInfo checksInfo) {\n         this.checksInfo = checksInfo;\n     }\n \n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDA5Nw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494097", "body": "```suggestion\r\n    WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n          \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    WarningChecksPublisher(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ResultAction</span> action, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">TaskListener</span> listener, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    WarningChecksPublisher(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ResultAction</span> action, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">TaskListener</span> listener, <span class=\"pl-k x x-first\">@CheckForNull</span><span class=\"x x-last\"> </span><span class=\"pl-k\">final</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-12-28T21:36:15Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\nindex cd9f6e439..0ccf66658 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n", "chunk": "@@ -42,9 +43,10 @@ import io.jenkins.plugins.checks.steps.ChecksInfo;\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    @CheckForNull\n     private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {\n         this.action = action;\n         this.listener = listener;\n         this.checksInfo = checksInfo;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDE0MA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494140", "body": "```suggestion\r\n    @CheckForNull\r\n    private final ChecksInfo checksInfo;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private final ChecksInfo checksInfo;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">private</span><span class=\"x\"> </span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">ChecksInfo</span><span class=\"x x-last\"> checksInfo;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">@CheckForNull</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"48\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ChecksInfo</span> checksInfo;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-12-28T21:36:28Z", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\nindex cd9f6e439..0ccf66658 100644\n--- a/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n+++ b/plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java\n", "chunk": "@@ -42,9 +43,10 @@ import io.jenkins.plugins.checks.steps.ChecksInfo;\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    @CheckForNull\n     private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {\n         this.action = action;\n         this.listener = listener;\n         this.checksInfo = checksInfo;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5OTQxMg==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549499412", "body": "```suggestion\r\n        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\r\n```\r\nThe file name needs to be renamed automatically, otherwise it is not found.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WorkflowJob project = createPipeline();\n          \n          \n            \n                    copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n          \n          \n            \n                    WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n          \n      \n    \n    \n  \n\nThe file name needs to be renamed automatically, otherwise it is not found.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">WorkflowJob</span> project <span class=\"pl-k\">=</span> createPipeline();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        copySingleFileToWorkspace(project, <span class=\"pl-c1\">NEW_CHECKSTYLE_REPORT</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">WorkflowJob</span> project <span class=\"pl-k\">=</span> createPipelineWithWorkspaceFiles(<span class=\"pl-c1\">NEW_CHECKSTYLE_REPORT</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">The file name needs to be renamed automatically, otherwise it is not found.</p>", "author": "uhafner", "createdAt": "2020-12-28T21:57:24Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -209,21 +209,63 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+\n+\n+    /**\n+     * Test that publishIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNamePublishIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNameRecordIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createRecordIssuesStep(new CheckStyle())));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n     /**\n      * Test that publishIssues honors the checks name provided by a withChecks context.\n      */\n     @Test\n     public void shouldHonorWithChecksContextPublishIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n         project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from publishIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     /**\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTI1OA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501258", "body": "```suggestion\r\n        assertThat(publishedChecks).hasSize(2); // add a small comment why there are two results?\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(publishedChecks.size()).isEqualTo(2);\n          \n          \n            \n                    assertThat(publishedChecks).hasSize(2); // add a small comment why there are two results?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(publishedChecks<span class=\"pl-k x x-first\">.</span><span class=\"x\">size())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isEqualTo</span>(<span class=\"pl-c1\">2</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(publishedChecks<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">hasSize</span>(<span class=\"pl-c1\">2</span>);<span class=\"x x-first\"> </span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> add a small comment why there are two results?</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "uhafner", "createdAt": "2020-12-28T22:05:42Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -209,21 +209,63 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+\n+\n+    /**\n+     * Test that publishIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNamePublishIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNameRecordIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createRecordIssuesStep(new CheckStyle())));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n     /**\n      * Test that publishIssues honors the checks name provided by a withChecks context.\n      */\n     @Test\n     public void shouldHonorWithChecksContextPublishIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n         project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from publishIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     /**\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTYyNA==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501624", "body": "An additional check:\r\n```\r\n        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\r\n                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\r\n```", "bodyText": "An additional check:\n        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));", "bodyHTML": "<p dir=\"auto\">An additional check:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n                output -&gt; assertThat(output.getTitle()).isPresent().get().isEqualTo(&quot;No new issues, 6 total.&quot;));\"><pre><code>        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n                output -&gt; assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n</code></pre></div>", "author": "uhafner", "createdAt": "2020-12-28T22:06:54Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -209,21 +209,63 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+\n+\n+    /**\n+     * Test that publishIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNamePublishIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNameRecordIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createRecordIssuesStep(new CheckStyle())));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n     /**\n      * Test that publishIssues honors the checks name provided by a withChecks context.\n      */\n     @Test\n     public void shouldHonorWithChecksContextPublishIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n         project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from publishIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     /**\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjU3OQ==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502579", "body": "This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with `withChecks` and see that the original title is used?", "bodyText": "This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with withChecks and see that the original title is used?", "bodyHTML": "<p dir=\"auto\">This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with <code>withChecks</code> and see that the original title is used?</p>", "author": "uhafner", "createdAt": "2020-12-28T22:11:36Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(String.format(\"\"\n+                + \"withChecks('Custom Checks Name') {\\n\"\n+                + \"  recordIssues(tools: [%s(pattern: '%s')])\\n\"\n+                + \"}\", new CheckStyle().getSymbolName(), NEW_CHECKSTYLE_REPORT)));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -231,19 +273,18 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n      */\n     @Test\n     public void shouldHonorWithChecksContextRecordIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n-        project.setDefinition(asStage(String.format(\"\"\n-                + \"withChecks('Custom Checks Name') {\\n\"\n-                + \"  recordIssues(tools: [%s(pattern: '%s')])\\n\"\n-                + \"}\", new CheckStyle().getSymbolName(), NEW_CHECKSTYLE_REPORT)));\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createRecordIssuesStep(new CheckStyle()), \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from recordIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     private ChecksDetails createExpectedCheckStyleDetails() {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjY3Mw==", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502673", "body": "See comments above here as well", "bodyText": "See comments above here as well", "bodyHTML": "<p dir=\"auto\">See comments above here as well</p>", "author": "uhafner", "createdAt": "2020-12-28T22:12:00Z", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {", "originalCommit": "979f79225faeee4b22095cf0f2db79e234cdb130", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "changed_code": [{"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -209,21 +209,63 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+\n+\n+    /**\n+     * Test that publishIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNamePublishIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues uses correct default name.\n+     */\n+    @Test\n+    public void shouldUseDefaultChecksNameRecordIssues() {\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(createRecordIssuesStep(new CheckStyle())));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks).hasSize(1);\n+\n+        assertThat(publishedChecks.get(0).getName()).isPresent().get().isEqualTo(\"CheckStyle\");\n+\n+        assertThat(publishedChecks.get(0).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n+    }\n+\n     /**\n      * Test that publishIssues honors the checks name provided by a withChecks context.\n      */\n     @Test\n     public void shouldHonorWithChecksContextPublishIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n         project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from publishIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     /**\n", "next_change": null}, {"header": "diff --git a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\nindex 4e0210053..63ada65dd 100644\n--- a/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n+++ b/plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java\n", "chunk": "@@ -231,19 +273,18 @@ public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerSu\n      */\n     @Test\n     public void shouldHonorWithChecksContextRecordIssues() {\n-        WorkflowJob project = createPipeline();\n-        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n-        project.setDefinition(asStage(String.format(\"\"\n-                + \"withChecks('Custom Checks Name') {\\n\"\n-                + \"  recordIssues(tools: [%s(pattern: '%s')])\\n\"\n-                + \"}\", new CheckStyle().getSymbolName(), NEW_CHECKSTYLE_REPORT)));\n+        WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createRecordIssuesStep(new CheckStyle()), \"}\"));\n         buildSuccessfully(project);\n \n         List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n \n-        assertThat(publishedChecks.size()).isEqualTo(2);\n+        assertThat(publishedChecks).hasSize(2);  // First from 'In progress' check provided by withChecks, second from recordIssues\n \n         publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+\n+        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n+                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));\n     }\n \n     private ChecksDetails createExpectedCheckStyleDetails() {\n", "next_change": null}]}}, {"oid": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "message": "Review feedback", "committedDate": "2020-12-29T16:48:21Z", "type": "commit"}]}