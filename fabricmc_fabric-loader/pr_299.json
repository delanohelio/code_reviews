{"pr_number": 299, "pr_title": "Add FabricLoader#getLaunchArguments(sanitize)", "pr_author": "TheBrokenRail", "pr_createdAt": "2020-08-22T17:26:21Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/299", "merge_commit": "8532d2c6bdde9462b56b8a8f82f0c18ea1f218ed", "timeline": [{"oid": "beeef6b41366424a7ab8a17f97a7d111671260a0", "url": "https://github.com/FabricMC/fabric-loader/commit/beeef6b41366424a7ab8a17f97a7d111671260a0", "message": "Add FabricLoader#getLaunchArguments(sanitize)", "committedDate": "2020-08-22T17:24:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjg2NA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r475112864", "body": "```suggestion\r\n\t * Gets the command line arguments used to launch the game.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Get the launch arguments\n          \n          \n            \n            \t * Gets the command line arguments used to launch the game.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Get</span> the <span class=\"x x-first x-last\">launch </span>arguments</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first x-last\">Gets</span> the <span class=\"x x-first x-last\">command line </span>arguments<span class=\"x x-first x-last\"> used to launch the game.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shartte", "createdAt": "2020-08-22T17:35:27Z", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,11 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Get the launch arguments", "originalCommit": "beeef6b41366424a7ab8a17f97a7d111671260a0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjk0NQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r475112945", "bodyText": "Thanks!", "author": "TheBrokenRail", "createdAt": "2020-08-22T17:36:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExMjg2NA=="}], "type": "inlineReview", "revised_code": {"commit": "7d92392258650b35a0e72f4ab5b2de51bded3f9f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex f4effe87..1fb90561 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -185,7 +185,7 @@ public interface FabricLoader {\n \tFile getConfigDirectory();\n \n \t/**\n-\t * Get the launch arguments\n+\t * Gets the command line arguments used to launch the game.\n \t * @param sanitize Whether to remove sensitive information\n \t * @return the launch arguments\n \t */\n", "next_change": {"commit": "1d6aa9f62b4f377ba46b93c727a1b5753072856f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex 1fb90561..ee1ebe1b 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -185,9 +185,17 @@ public interface FabricLoader {\n \tFile getConfigDirectory();\n \n \t/**\n-\t * Gets the command line arguments used to launch the game.\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n \t * @param sanitize Whether to remove sensitive information\n \t * @return the launch arguments\n \t */\n \tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. This overload sets {@code sanitize} to {@code true}.\n+\t * @return the launch arguments\n+\t */\n+\tdefault String[] getLaunchArguments() {\n+\t\treturn getLaunchArguments(true);\n+\t}\n }\n", "next_change": {"commit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex ee1ebe1b..2f924a52 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -192,8 +192,7 @@ public interface FabricLoader {\n \tString[] getLaunchArguments(boolean sanitize);\n \n \t/**\n-\t * Gets the command line arguments used to launch the game. This overload sets {@code sanitize} to {@code true}.\n-\t * @return the launch arguments\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n \t */\n \tdefault String[] getLaunchArguments() {\n \t\treturn getLaunchArguments(true);\n", "next_change": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex 2f924a52..b5f2bcfe 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -193,6 +193,8 @@ public interface FabricLoader {\n \n \t/**\n \t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n \t */\n \tdefault String[] getLaunchArguments() {\n \t\treturn getLaunchArguments(true);\n", "next_change": {"commit": "f3e5e1422e719bb525eba2f7012656615fb1cd5f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex b5f2bcfe..a94e1404 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -190,13 +190,4 @@ public interface FabricLoader {\n \t * @return the launch arguments\n \t */\n \tString[] getLaunchArguments(boolean sanitize);\n-\n-\t/**\n-\t * @see FabricLoader#getLaunchArguments(boolean)\n-\t * <p>\n-\t * Does not contain any sensitive information.\n-\t */\n-\tdefault String[] getLaunchArguments() {\n-\t\treturn getLaunchArguments(true);\n-\t}\n }\n", "next_change": null}]}}]}}]}}]}}]}}, {"oid": "7d92392258650b35a0e72f4ab5b2de51bded3f9f", "url": "https://github.com/FabricMC/fabric-loader/commit/7d92392258650b35a0e72f4ab5b2de51bded3f9f", "message": "Imporve JavaDoc\n\nCo-authored-by: shartte <shartte@users.noreply.github.com>", "committedDate": "2020-08-22T17:36:12Z", "type": "commit"}, {"oid": "1d6aa9f62b4f377ba46b93c727a1b5753072856f", "url": "https://github.com/FabricMC/fabric-loader/commit/1d6aa9f62b4f377ba46b93c727a1b5753072856f", "message": "Add Overload", "committedDate": "2020-08-22T19:52:22Z", "type": "commit"}, {"oid": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "url": "https://github.com/FabricMC/fabric-loader/commit/b5afa6d6831635dd421bada68266423ce3fb6ef8", "message": "Improve JavaDoc", "committedDate": "2020-08-22T20:05:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490455006", "body": "I'd probably mention that this does not return any sensitive information.", "bodyText": "I'd probably mention that this does not return any sensitive information.", "bodyHTML": "<p dir=\"auto\">I'd probably mention that this does not return any sensitive information.</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:02:44Z", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t */\n+\tdefault String[] getLaunchArguments() {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTMyMQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269321", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex 2f924a52..b5f2bcfe 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -193,6 +193,8 @@ public interface FabricLoader {\n \n \t/**\n \t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n \t */\n \tdefault String[] getLaunchArguments() {\n \t\treturn getLaunchArguments(true);\n", "next_change": {"commit": "f3e5e1422e719bb525eba2f7012656615fb1cd5f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex b5f2bcfe..a94e1404 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -190,13 +190,4 @@ public interface FabricLoader {\n \t * @return the launch arguments\n \t */\n \tString[] getLaunchArguments(boolean sanitize);\n-\n-\t/**\n-\t * @see FabricLoader#getLaunchArguments(boolean)\n-\t * <p>\n-\t * Does not contain any sensitive information.\n-\t */\n-\tdefault String[] getLaunchArguments() {\n-\t\treturn getLaunchArguments(true);\n-\t}\n }\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490457451", "body": "Hmm, I'd like to ask is the accessToken the only compromising info we want to sanitize?\r\n\r\nMultimc for example actually omits your username, uuid and user type in logs alongside your accessToken like this:\r\n`--username  --version MultiMC5 --gameDir /home/i509vcb/.local/share/multimc/instances/1.16.2 - FABRIC/.minecraft --assetsDir /home/i509vcb/.local/share/multimc/assets --assetIndex 1.16 --uuid --accessToken  --userType  --versionType release`", "bodyText": "Hmm, I'd like to ask is the accessToken the only compromising info we want to sanitize?\nMultimc for example actually omits your username, uuid and user type in logs alongside your accessToken like this:\n--username  --version MultiMC5 --gameDir /home/i509vcb/.local/share/multimc/instances/1.16.2 - FABRIC/.minecraft --assetsDir /home/i509vcb/.local/share/multimc/assets --assetIndex 1.16 --uuid --accessToken  --userType  --versionType release", "bodyHTML": "<p dir=\"auto\">Hmm, I'd like to ask is the accessToken the only compromising info we want to sanitize?</p>\n<p dir=\"auto\">Multimc for example actually omits your username, uuid and user type in logs alongside your accessToken like this:<br>\n<code>--username  --version MultiMC5 --gameDir /home/i509vcb/.local/share/multimc/instances/1.16.2 - FABRIC/.minecraft --assetsDir /home/i509vcb/.local/share/multimc/assets --assetIndex 1.16 --uuid --accessToken  --userType  --versionType release</code></p>", "author": "i509VCB", "createdAt": "2020-09-17T18:06:54Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2NzEwNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492267104", "bodyText": "I wouldn't consider the username or UUID sensitive information personally. The UUID is given out to anyone you are on a server with, as well as stored in plain text on your hard drive, and the username is already logged on startup and can be changed. What does user type do?", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:35:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0ODAxMQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494248011", "bodyText": "MC logs/dumps the other information quite happily, I think of this sanitizing as a security feature, not a privacy one.", "author": "sfPlayer1", "createdAt": "2020-09-24T11:44:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NzQ1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -161,13 +161,16 @@ public class MinecraftGameProvider implements GameProvider {\n \n \t@Override\n \tpublic String[] getLaunchArguments(boolean sanitize) {\n+\n \t\tif (arguments != null) {\n \t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n+\n \t\t\t\t\tif (\"--accessToken\".equals(next)) {\n \t\t\t\t\t\tremove = 2;\n \t\t\t\t\t}\n", "next_change": {"commit": "021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..ab45e2e1 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -168,6 +168,7 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n+\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490459743", "body": "Obviously anyone could call this with `false` as the parameter and run into the sunset with your access token.\r\n\r\nDo we want to print a stacktrace when someone calls this so we can see who wanted to access the unsanitized arguments?", "bodyText": "Obviously anyone could call this with false as the parameter and run into the sunset with your access token.\nDo we want to print a stacktrace when someone calls this so we can see who wanted to access the unsanitized arguments?", "bodyHTML": "<p dir=\"auto\">Obviously anyone could call this with <code>false</code> as the parameter and run into the sunset with your access token.</p>\n<p dir=\"auto\">Do we want to print a stacktrace when someone calls this so we can see who wanted to access the unsanitized arguments?</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:11:12Z", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,18 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NTk4Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490485986", "bodyText": "is that really needed? I think it's just log spam.\nBesides, it wouldn't be difficult for malicious mods to bypass this entire thing anyway.", "author": "UpcraftLP", "createdAt": "2020-09-17T18:58:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwMDQwNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490500404", "bodyText": "Well I do see your point there, it's probably a bit spammy tbf", "author": "i509VCB", "createdAt": "2020-09-17T19:23:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NDQyOQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494244429", "bodyText": "The arg is really just to remind people of the dangers involved, aiming at accidental leaks. We can't fundamentally avoid illegitimate disclosure, whether this exists or not, so it should be fine without extra logic that'd at most provide a false sense of security.", "author": "sfPlayer1", "createdAt": "2020-09-24T11:40:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1OTc0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex 2f924a52..b5f2bcfe 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -193,6 +193,8 @@ public interface FabricLoader {\n \n \t/**\n \t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n \t */\n \tdefault String[] getLaunchArguments() {\n \t\treturn getLaunchArguments(true);\n", "next_change": {"commit": "f3e5e1422e719bb525eba2f7012656615fb1cd5f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex b5f2bcfe..a94e1404 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -190,13 +190,4 @@ public interface FabricLoader {\n \t * @return the launch arguments\n \t */\n \tString[] getLaunchArguments(boolean sanitize);\n-\n-\t/**\n-\t * @see FabricLoader#getLaunchArguments(boolean)\n-\t * <p>\n-\t * Does not contain any sensitive information.\n-\t */\n-\tdefault String[] getLaunchArguments() {\n-\t\treturn getLaunchArguments(true);\n-\t}\n }\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDkzOA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490460938", "body": "Empty line before opening this `if` statement. Ideally we want to keep this close to fabric api codestyle but we have a lot to do in loader before we pull over checkstyle.", "bodyText": "Empty line before opening this if statement. Ideally we want to keep this close to fabric api codestyle but we have a lot to do in loader before we pull over checkstyle.", "bodyHTML": "<p dir=\"auto\">Empty line before opening this <code>if</code> statement. Ideally we want to keep this close to fabric api codestyle but we have a lot to do in loader before we pull over checkstyle.</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:13:18Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTQ1MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269451", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:40:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDkzOA=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -161,13 +161,16 @@ public class MinecraftGameProvider implements GameProvider {\n \n \t@Override\n \tpublic String[] getLaunchArguments(boolean sanitize) {\n+\n \t\tif (arguments != null) {\n \t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n+\n \t\t\t\t\tif (\"--accessToken\".equals(next)) {\n \t\t\t\t\t\tremove = 2;\n \t\t\t\t\t}\n", "next_change": {"commit": "021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..ab45e2e1 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -168,6 +168,7 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n+\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTAyNg==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461026", "body": "Empty line before while here", "bodyText": "Empty line before while here", "bodyHTML": "<p dir=\"auto\">Empty line before while here</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:13:30Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTUyNA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269524", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTAyNg=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -161,13 +161,16 @@ public class MinecraftGameProvider implements GameProvider {\n \n \t@Override\n \tpublic String[] getLaunchArguments(boolean sanitize) {\n+\n \t\tif (arguments != null) {\n \t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n+\n \t\t\t\t\tif (\"--accessToken\".equals(next)) {\n \t\t\t\t\t\tremove = 2;\n \t\t\t\t\t}\n", "next_change": {"commit": "021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..ab45e2e1 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -168,6 +168,7 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n+\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTA5OA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461098", "body": "Empty line before if", "bodyText": "Empty line before if", "bodyHTML": "<p dir=\"auto\">Empty line before if</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:13:39Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTg3MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269871", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTA5OA=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -161,13 +161,16 @@ public class MinecraftGameProvider implements GameProvider {\n \n \t@Override\n \tpublic String[] getLaunchArguments(boolean sanitize) {\n+\n \t\tif (arguments != null) {\n \t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n+\n \t\t\t\t\tif (\"--accessToken\".equals(next)) {\n \t\t\t\t\t\tremove = 2;\n \t\t\t\t\t}\n", "next_change": {"commit": "021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..ab45e2e1 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -168,6 +168,7 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\tif (sanitize) {\n \t\t\t\tint remove = 0;\n \t\t\t\tIterator<String> iterator = list.iterator();\n+\n \t\t\t\twhile (iterator.hasNext()) {\n \t\t\t\t\tString next = iterator.next();\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461264", "body": "empty line before return", "bodyText": "empty line before return", "bodyHTML": "<p dir=\"auto\">empty line before return</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:13:59Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI3MDMyOA==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492270328", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:41:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -179,9 +182,8 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\t\t}\n \t\t\t}\n \t\t\treturn list.toArray(new String[0]);\n-\t\t} else {\n-\t\t\treturn new String[0];\n \t\t}\n+\t\treturn new String[0];\n \t}\n \n \t@Override\n", "next_change": {"commit": "103ecd28f1687801d653fbb80ca083a78aeab7bd", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..520221db 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -181,8 +182,10 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n+\n \t\t\treturn list.toArray(new String[0]);\n \t\t}\n+\n \t\treturn new String[0];\n \t}\n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTUxMQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r490461511", "body": "you can drop the `else` here and just return the empty string array at the bottom of the method.", "bodyText": "you can drop the else here and just return the empty string array at the bottom of the method.", "bodyHTML": "<p dir=\"auto\">you can drop the <code>else</code> here and just return the empty string array at the bottom of the method.</p>", "author": "i509VCB", "createdAt": "2020-09-17T18:14:23Z", "path": "src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java", "diffHunk": "@@ -158,6 +159,31 @@ public void acceptArguments(String... argStrs) {\n \t\tFabricLauncherBase.processArgumentMap(arguments, envType);\n \t}\n \n+\t@Override\n+\tpublic String[] getLaunchArguments(boolean sanitize) {\n+\t\tif (arguments != null) {\n+\t\t\tList<String> list = new ArrayList<>(Arrays.asList(arguments.toArray()));\n+\t\t\tif (sanitize) {\n+\t\t\t\tint remove = 0;\n+\t\t\t\tIterator<String> iterator = list.iterator();\n+\t\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\t\tString next = iterator.next();\n+\t\t\t\t\tif (\"--accessToken\".equals(next)) {\n+\t\t\t\t\t\tremove = 2;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (remove > 0) {\n+\t\t\t\t\t\titerator.remove();\n+\t\t\t\t\t\tremove--;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn list.toArray(new String[0]);\n+\t\t} else {", "originalCommit": "b5afa6d6831635dd421bada68266423ce3fb6ef8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI2OTk4MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r492269981", "bodyText": "Done!", "author": "TheBrokenRail", "createdAt": "2020-09-21T18:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTUxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex d390d96d..e46d66c5 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -179,9 +182,8 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\t\t}\n \t\t\t}\n \t\t\treturn list.toArray(new String[0]);\n-\t\t} else {\n-\t\t\treturn new String[0];\n \t\t}\n+\t\treturn new String[0];\n \t}\n \n \t@Override\n", "next_change": {"commit": "103ecd28f1687801d653fbb80ca083a78aeab7bd", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\nindex e46d66c5..520221db 100644\n--- a/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n+++ b/src/main/java/net/fabricmc/loader/game/MinecraftGameProvider.java\n", "chunk": "@@ -181,8 +182,10 @@ public class MinecraftGameProvider implements GameProvider {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n+\n \t\t\treturn list.toArray(new String[0]);\n \t\t}\n+\n \t\treturn new String[0];\n \t}\n \n", "next_change": null}]}}]}}, {"oid": "4ef4730523cb864e8109f664c1dc8e551d0f50be", "url": "https://github.com/FabricMC/fabric-loader/commit/4ef4730523cb864e8109f664c1dc8e551d0f50be", "message": "Fix Up JavaDoc And Code Style", "committedDate": "2020-09-21T18:39:54Z", "type": "commit"}, {"oid": "021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "url": "https://github.com/FabricMC/fabric-loader/commit/021d9dcfe6dfc1eeb0058a7d1e5838e244085adb", "message": "Fix While", "committedDate": "2020-09-21T18:41:01Z", "type": "commit"}, {"oid": "103ecd28f1687801d653fbb80ca083a78aeab7bd", "url": "https://github.com/FabricMC/fabric-loader/commit/103ecd28f1687801d653fbb80ca083a78aeab7bd", "message": "Add Empty Line Before Return", "committedDate": "2020-09-21T18:41:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494245731", "body": "I'd remove this override, this is a niche API where allowing the caller to omit an arg doesn't provide any significant convenience benefit. It does however clutter the already large FabricLoader interface quite a bit more.", "bodyText": "I'd remove this override, this is a niche API where allowing the caller to omit an arg doesn't provide any significant convenience benefit. It does however clutter the already large FabricLoader interface quite a bit more.", "bodyHTML": "<p dir=\"auto\">I'd remove this override, this is a niche API where allowing the caller to omit an arg doesn't provide any significant convenience benefit. It does however clutter the already large FabricLoader interface quite a bit more.</p>", "author": "sfPlayer1", "createdAt": "2020-09-24T11:42:41Z", "path": "src/main/java/net/fabricmc/loader/api/FabricLoader.java", "diffHunk": "@@ -183,4 +183,20 @@ static FabricLoader getInstance() {\n \n \t@Deprecated\n \tFile getConfigDirectory();\n+\n+\t/**\n+\t * Gets the command line arguments used to launch the game. If this is printed for debugging, make sure {@code sanitize} is {@code true}.\n+\t * @param sanitize Whether to remove sensitive information\n+\t * @return the launch arguments\n+\t */\n+\tString[] getLaunchArguments(boolean sanitize);\n+\n+\t/**\n+\t * @see FabricLoader#getLaunchArguments(boolean)\n+\t * <p>\n+\t * Does not contain any sensitive information.\n+\t */\n+\tdefault String[] getLaunchArguments() {", "originalCommit": "103ecd28f1687801d653fbb80ca083a78aeab7bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMjQ4Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494302487", "bodyText": "This was suggested here: #299 (comment)", "author": "TheBrokenRail", "createdAt": "2020-09-24T13:09:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMzE4MQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/299#discussion_r494303181", "bodyText": "I know, not happy with the suggestion.", "author": "sfPlayer1", "createdAt": "2020-09-24T13:10:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI0NTczMQ=="}], "type": "inlineReview", "revised_code": {"commit": "f3e5e1422e719bb525eba2f7012656615fb1cd5f", "changed_code": [{"header": "diff --git a/src/main/java/net/fabricmc/loader/api/FabricLoader.java b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\nindex b5f2bcfe..a94e1404 100644\n--- a/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n+++ b/src/main/java/net/fabricmc/loader/api/FabricLoader.java\n", "chunk": "@@ -190,13 +190,4 @@ public interface FabricLoader {\n \t * @return the launch arguments\n \t */\n \tString[] getLaunchArguments(boolean sanitize);\n-\n-\t/**\n-\t * @see FabricLoader#getLaunchArguments(boolean)\n-\t * <p>\n-\t * Does not contain any sensitive information.\n-\t */\n-\tdefault String[] getLaunchArguments() {\n-\t\treturn getLaunchArguments(true);\n-\t}\n }\n", "next_change": null}]}}, {"oid": "f3e5e1422e719bb525eba2f7012656615fb1cd5f", "url": "https://github.com/FabricMC/fabric-loader/commit/f3e5e1422e719bb525eba2f7012656615fb1cd5f", "message": "Remove Unnecessary Overload", "committedDate": "2020-09-24T13:23:15Z", "type": "commit"}]}