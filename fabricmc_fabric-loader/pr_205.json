{"pr_number": 205, "pr_title": "Remove uses of Guava", "pr_author": "sfPlayer1", "pr_createdAt": "2020-02-17T09:29:36Z", "pr_url": "https://github.com/FabricMC/fabric-loader/pull/205", "timeline": [{"oid": "62766aa40c7f7d90539c6e68414c0f4f2127a410", "url": "https://github.com/FabricMC/fabric-loader/commit/62766aa40c7f7d90539c6e68414c0f4f2127a410", "message": "Remove uses of Guava", "committedDate": "2020-02-17T09:22:32Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MjI4OA==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380162288", "body": "Why not use `Collections.singletonList` ?", "bodyText": "Why not use Collections.singletonList ?", "bodyHTML": "<p dir=\"auto\">Why not use <code>Collections.singletonList</code> ?</p>", "author": "Pyrofab", "createdAt": "2020-02-17T12:47:45Z", "path": "src/main/java/net/fabricmc/loader/game/GameProviders.java", "diffHunk": "@@ -16,14 +16,13 @@\n \n package net.fabricmc.loader.game;\n \n-import com.google.common.collect.ImmutableList;\n-\n+import java.util.Arrays;\n import java.util.List;\n \n public final class GameProviders {\n \tprivate GameProviders() { }\n \n \tpublic static List<GameProvider> create() {\n-\t\treturn ImmutableList.of(new MinecraftGameProvider());\n+\t\treturn Arrays.asList(new MinecraftGameProvider());", "originalCommit": "62766aa40c7f7d90539c6e68414c0f4f2127a410", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyNjkwMg==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380226902", "bodyText": "Good point, will fix", "author": "sfPlayer1", "createdAt": "2020-02-17T14:54:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MjI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MzY1Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380163657", "body": "Could maybe use `Collections.unmodifiableList` to keep the same guarantees ?", "bodyText": "Could maybe use Collections.unmodifiableList to keep the same guarantees ?", "bodyHTML": "<p dir=\"auto\">Could maybe use <code>Collections.unmodifiableList</code> to keep the same guarantees ?</p>", "author": "Pyrofab", "createdAt": "2020-02-17T12:50:48Z", "path": "src/main/java/net/fabricmc/loader/entrypoint/EntrypointTransformer.java", "diffHunk": "@@ -39,7 +38,7 @@\n \tprivate boolean entrypointsLocated = false;\n \n \tpublic EntrypointTransformer(Function<EntrypointTransformer, List<EntrypointPatch>> patches) {\n-\t\tthis.patches = ImmutableList.copyOf(patches.apply(this));\n+\t\tthis.patches = patches.apply(this);", "originalCommit": "62766aa40c7f7d90539c6e68414c0f4f2127a410", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIyODI4OQ==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380228289", "bodyText": "I don't see a point behind the copy or immutability, this should be all internal without anything encouraging modification.", "author": "sfPlayer1", "createdAt": "2020-02-17T14:57:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE2MzY1Nw=="}], "type": "inlineReview"}, {"oid": "bfef41d91a71452f0f0f22369b6e3a9792b6c7af", "url": "https://github.com/FabricMC/fabric-loader/commit/bfef41d91a71452f0f0f22369b6e3a9792b6c7af", "message": "Use Collections.singletonList for single element lists", "committedDate": "2020-02-17T15:03:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3ODk4NA==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380278984", "body": "Why not `String.join(\", \", missingMods)`", "bodyText": "Why not String.join(\", \", missingMods)", "bodyHTML": "<p dir=\"auto\">Why not <code>String.join(\", \", missingMods)</code></p>", "author": "liach", "createdAt": "2020-02-17T16:33:03Z", "path": "src/main/java/net/fabricmc/loader/discovery/ModResolver.java", "diffHunk": "@@ -253,7 +252,7 @@ private static IVecInt toVecInt(IntStream stream) {\n \t\tStringBuilder errorsSoft = new StringBuilder();\n \n \t\tif (!missingMods.isEmpty()) {\n-\t\t\terrorsHard.append(\"\\n - Missing mods: \").append(Joiner.on(\", \").join(missingMods));\n+\t\t\terrorsHard.append(\"\\n - Missing mods: \").append(missingMods.stream().collect(Collectors.joining(\", \")));", "originalCommit": "bfef41d91a71452f0f0f22369b6e3a9792b6c7af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MDQ3Ng==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380280476", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\terrorsHard.append(\"\\n - Missing mods: \").append(missingMods.stream().collect(Collectors.joining(\", \")));\n          \n          \n            \n            \t\t\terrorsHard.append(\"\\n - Missing mods: \").append(String.join(\", \", missingMods));", "author": "liach", "createdAt": "2020-02-17T16:36:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3ODk4NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2ODI3Mw==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r381168273", "bodyText": "I replaced one with String.join (didn't know about that one yet..) and two that also had [] with Arrays.toString.", "author": "sfPlayer1", "createdAt": "2020-02-19T09:26:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3ODk4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3OTk1Nw==", "url": "https://github.com/FabricMC/fabric-loader/pull/205#discussion_r380279957", "body": "```suggestion\r\n\t\t\t\t\t\t\t\treturn getModId() + \" @ [\" + String.join(\", \", matchers) + \"]\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\t\treturn getModId() + \" @ [\" + Stream.of(matchers).collect(Collectors.joining(\", \")) + \"]\";\n          \n          \n            \n            \t\t\t\t\t\t\t\treturn getModId() + \" @ [\" + String.join(\", \", matchers) + \"]\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t\t\t\t<span class=\"pl-k\">return</span> getModId() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> @ [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-smi x x-first\">Stream</span><span class=\"pl-k x\">.</span><span class=\"x\">of(matchers)</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">joining(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t\t\t\t<span class=\"pl-k\">return</span> getModId() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> @ [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">join(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, matchers</span>) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "liach", "createdAt": "2020-02-17T16:35:12Z", "path": "src/main/java/net/fabricmc/loader/metadata/ModMetadataV0.java", "diffHunk": "@@ -335,7 +335,7 @@ public String toString() {\n \t\t\t\t\t\t\t} else if (matchers.length == 1) {\n \t\t\t\t\t\t\t\treturn getModId() + \" @ \" + matchers[0];\n \t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treturn getModId() + \" @ [\" + Joiner.on(\", \").join(Arrays.asList(matchers)) + \"]\";\n+\t\t\t\t\t\t\t\treturn getModId() + \" @ [\" + Stream.of(matchers).collect(Collectors.joining(\", \")) + \"]\";", "originalCommit": "bfef41d91a71452f0f0f22369b6e3a9792b6c7af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3cf3d46159f256ffc2a69efaf9aef09b4c3c4655", "url": "https://github.com/FabricMC/fabric-loader/commit/3cf3d46159f256ffc2a69efaf9aef09b4c3c4655", "message": "Simplify some join ops", "committedDate": "2020-02-19T09:25:29Z", "type": "commit"}]}