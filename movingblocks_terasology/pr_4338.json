{"pr_number": 4338, "pr_title": "feat: Add BlockAreaTypeHandler for serilization", "pr_author": "pollend", "pr_createdAt": "2020-12-27T20:36:16Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4338", "timeline": [{"oid": "91b0e9e3b114a54237cbcc2d561b00bc18818db5", "url": "https://github.com/MovingBlocks/Terasology/commit/91b0e9e3b114a54237cbcc2d561b00bc18818db5", "message": "feature -- add BlockArea Type Handler for serilization", "committedDate": "2020-12-27T20:34:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MDU2Nw==", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549360567", "body": "So - was this actually never working? :roll_eyes: ", "bodyText": "So - was this actually never working? \ud83d\ude44", "bodyHTML": "<p dir=\"auto\">So - was this actually never working? <g-emoji class=\"g-emoji\" alias=\"roll_eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f644.png\">\ud83d\ude44</g-emoji></p>", "author": "skaldarnar", "createdAt": "2020-12-28T14:08:42Z", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/RectanglefTypeHandler.java", "diffHunk": "@@ -33,7 +33,7 @@ protected PersistedData serializeNonNull(Rectanglef value, PersistedDataSerializ\n             PersistedDataMap map = data.getAsValueMap();\n \n             PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n-            PersistedDataArray maxDataArr = map.get(MIN_FIELD).getAsArray();", "originalCommit": "91b0e9e3b114a54237cbcc2d561b00bc18818db5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MTUyOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549361529", "body": "As you are using 'setSize(...)` you don't need to do any computation here:\r\n```suggestion\r\n                    new BlockArea(minArr.get(0), minArr.get(1))\r\n                    \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));\r\n```", "bodyText": "As you are using 'setSize(...)` you don't need to do any computation here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new BlockArea(\n          \n          \n            \n                                    minArr.get(0), minArr.get(1)).setSize(\n          \n          \n            \n                                    minArr.get(0) + sizeArr.get(0),\n          \n          \n            \n                                    minArr.get(1) + sizeArr.get(1)));\n          \n          \n            \n                                new BlockArea(minArr.get(0), minArr.get(1))\n          \n          \n            \n                                \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));", "bodyHTML": "<p dir=\"auto\">As you are using 'setSize(...)` you don't need to do any computation here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlockArea</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>))<span class=\"pl-k\">.</span>setSize(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>) <span class=\"pl-k\">+</span> sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>) <span class=\"pl-k\">+</span> sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlockArea</span>(minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    \t\t.setSize(sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "skaldarnar", "createdAt": "2020-12-28T14:12:02Z", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreaTypeHandler.java", "diffHunk": "@@ -0,0 +1,54 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.persistence.typeHandling.mathTypes;\n+\n+import com.google.common.collect.Maps;\n+import gnu.trove.list.TIntList;\n+import org.terasology.persistence.typeHandling.PersistedData;\n+import org.terasology.persistence.typeHandling.PersistedDataArray;\n+import org.terasology.persistence.typeHandling.PersistedDataMap;\n+import org.terasology.persistence.typeHandling.PersistedDataSerializer;\n+import org.terasology.persistence.typeHandling.TypeHandler;\n+import org.terasology.world.block.BlockArea;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class BlockAreaTypeHandler extends TypeHandler<BlockArea> {\n+    private static final String MIN_FIELD = \"min\";\n+    private static final String MAX_FIELD = \"max\";\n+    private static final String SIZE_FIELD = \"size\";\n+\n+    @Override\n+    protected PersistedData serializeNonNull(BlockArea value, PersistedDataSerializer serializer) {\n+        Map<String, PersistedData> map = Maps.newLinkedHashMap();\n+        map.put(MIN_FIELD, serializer.serialize(value.minX(), value.minY()));\n+        map.put(MAX_FIELD, serializer.serialize(value.maxX(), value.maxY()));\n+        return serializer.serialize(map);\n+    }\n+\n+    @Override\n+    public Optional<BlockArea> deserialize(PersistedData data) {\n+        if (!data.isNull() && data.isValueMap()) {\n+            PersistedDataMap map = data.getAsValueMap();\n+\n+            PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n+            TIntList minArr = minDataArr.getAsIntegerArray();\n+            if (map.has(SIZE_FIELD)) {\n+                PersistedDataArray sizedataArray = map.get(SIZE_FIELD).getAsArray();\n+                TIntList sizeArr = sizedataArray.getAsIntegerArray();\n+                return Optional.of(\n+                    new BlockArea(\n+                        minArr.get(0), minArr.get(1)).setSize(\n+                        minArr.get(0) + sizeArr.get(0),\n+                        minArr.get(1) + sizeArr.get(1)));", "originalCommit": "91b0e9e3b114a54237cbcc2d561b00bc18818db5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM2MTY3Mg==", "url": "https://github.com/MovingBlocks/Terasology/pull/4338#discussion_r549361672", "body": "Same here:\r\n```suggestion\r\n                    new BlockArea(minArr.get(0), minArr.get(1))\r\n                    \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));\r\n```", "bodyText": "Same here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                new BlockArea(\n          \n          \n            \n                                    minArr.get(0), minArr.get(1)).setSize(\n          \n          \n            \n                                    minArr.get(0) + sizeArr.get(0),\n          \n          \n            \n                                    minArr.get(1) + sizeArr.get(1)));\n          \n          \n            \n                                new BlockArea(minArr.get(0), minArr.get(1))\n          \n          \n            \n                                \t\t.setSize(sizeArr.get(0), sizeArr.get(1)));", "bodyHTML": "<p dir=\"auto\">Same here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlockArea</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>))<span class=\"pl-k\">.</span>setSize(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>) <span class=\"pl-k\">+</span> sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>) <span class=\"pl-k\">+</span> sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BlockArea</span>(minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), minArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    \t\t.setSize(sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>), sizeArr<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">1</span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "skaldarnar", "createdAt": "2020-12-28T14:12:26Z", "path": "engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreacTypeHandler.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright 2020 The Terasology Foundation\n+// SPDX-License-Identifier: Apache-2.0\n+\n+package org.terasology.persistence.typeHandling.mathTypes;\n+\n+import com.google.common.collect.Maps;\n+import gnu.trove.list.TIntList;\n+import org.terasology.persistence.typeHandling.PersistedData;\n+import org.terasology.persistence.typeHandling.PersistedDataArray;\n+import org.terasology.persistence.typeHandling.PersistedDataMap;\n+import org.terasology.persistence.typeHandling.PersistedDataSerializer;\n+import org.terasology.persistence.typeHandling.TypeHandler;\n+import org.terasology.world.block.BlockArea;\n+import org.terasology.world.block.BlockAreac;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class BlockAreacTypeHandler extends TypeHandler<BlockAreac> {\n+    private static final String MIN_FIELD = \"min\";\n+    private static final String MAX_FIELD = \"max\";\n+    private static final String SIZE_FIELD = \"size\";\n+\n+    @Override\n+    protected PersistedData serializeNonNull(BlockAreac value, PersistedDataSerializer serializer) {\n+        Map<String, PersistedData> map = Maps.newLinkedHashMap();\n+        map.put(MIN_FIELD, serializer.serialize(value.minX(), value.minY()));\n+        map.put(MAX_FIELD, serializer.serialize(value.maxX(), value.maxY()));\n+        return serializer.serialize(map);\n+    }\n+\n+    @Override\n+    public Optional<BlockAreac> deserialize(PersistedData data) {\n+        if (!data.isNull() && data.isValueMap()) {\n+            PersistedDataMap map = data.getAsValueMap();\n+\n+            PersistedDataArray minDataArr = map.get(MIN_FIELD).getAsArray();\n+            TIntList minArr = minDataArr.getAsIntegerArray();\n+            if (map.has(SIZE_FIELD)) {\n+                PersistedDataArray sizedataArray = map.get(SIZE_FIELD).getAsArray();\n+                TIntList sizeArr = sizedataArray.getAsIntegerArray();\n+                return Optional.of(\n+                    new BlockArea(\n+                        minArr.get(0), minArr.get(1)).setSize(\n+                        minArr.get(0) + sizeArr.get(0),\n+                        minArr.get(1) + sizeArr.get(1)));", "originalCommit": "91b0e9e3b114a54237cbcc2d561b00bc18818db5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "42dadcc9b4e0b5f411a634e48826eaa001c79afb", "url": "https://github.com/MovingBlocks/Terasology/commit/42dadcc9b4e0b5f411a634e48826eaa001c79afb", "message": "Update engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreaTypeHandler.java\n\nCo-authored-by: Tobias Nett <skaldarnar@googlemail.com>", "committedDate": "2020-12-28T20:39:00Z", "type": "commit"}, {"oid": "f8f9aa6479656c8b603b1d8c810e829f7d427f9a", "url": "https://github.com/MovingBlocks/Terasology/commit/f8f9aa6479656c8b603b1d8c810e829f7d427f9a", "message": "Update engine/src/main/java/org/terasology/persistence/typeHandling/mathTypes/BlockAreacTypeHandler.java\n\nCo-authored-by: Tobias Nett <skaldarnar@googlemail.com>", "committedDate": "2020-12-28T20:39:05Z", "type": "commit"}, {"oid": "4ddedcffe900dd9a23c4736bd1869737148631db", "url": "https://github.com/MovingBlocks/Terasology/commit/4ddedcffe900dd9a23c4736bd1869737148631db", "message": "Merge branch 'develop' into feature/add-block-area-typehandler", "committedDate": "2020-12-28T20:39:12Z", "type": "commit"}, {"oid": "9bb03d9efcddfbdc24ac73068a4e257fecfc3623", "url": "https://github.com/MovingBlocks/Terasology/commit/9bb03d9efcddfbdc24ac73068a4e257fecfc3623", "message": "Merge branch 'develop' into feature/add-block-area-typehandler", "committedDate": "2020-12-31T03:28:10Z", "type": "commit"}, {"oid": "a016af6470fc5816e0a3d6be7c8a027ab99b0893", "url": "https://github.com/MovingBlocks/Terasology/commit/a016af6470fc5816e0a3d6be7c8a027ab99b0893", "message": "Merge branch 'develop' into feature/add-block-area-typehandler", "committedDate": "2020-12-31T14:29:37Z", "type": "commit"}]}