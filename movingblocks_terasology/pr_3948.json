{"pr_number": 3948, "pr_title": "feat(JOML) replace perspective and ortho with JOML impl", "pr_author": "pollend", "pr_createdAt": "2020-05-10T17:49:15Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/3948", "timeline": [{"oid": "9442678e456d97705ee2d3edc8ac0ea4697ae7f0", "url": "https://github.com/MovingBlocks/Terasology/commit/9442678e456d97705ee2d3edc8ac0ea4697ae7f0", "message": "feat(JOML) replace perspective and ortho with JOML impl", "committedDate": "2020-05-10T17:47:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4Mzc0MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r422683740", "body": "The top and bottom parameters need to be switched.\r\n```suggestion\r\n        projectionMatrix = new Matrix4f().ortho(left,right,bottom,top,zNear,zFar).transpose();\r\n```", "bodyText": "The top and bottom parameters need to be switched.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    projectionMatrix = new Matrix4f().ortho(left,right,top,bottom,zNear,zFar).transpose();\n          \n          \n            \n                    projectionMatrix = new Matrix4f().ortho(left,right,bottom,top,zNear,zFar).transpose();", "bodyHTML": "<p dir=\"auto\">The top and bottom parameters need to be switched.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        projectionMatrix <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Matrix4f</span>()<span class=\"pl-k\">.</span>ortho(left,right,<span class=\"x x-first x-last\">top,</span>bottom,zNear,zFar)<span class=\"pl-k\">.</span>transpose();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        projectionMatrix <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Matrix4f</span>()<span class=\"pl-k\">.</span>ortho(left,right,bottom<span class=\"x x-first x-last\">,top</span>,zNear,zFar)<span class=\"pl-k\">.</span>transpose();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kBlaszczyk", "createdAt": "2020-05-10T18:47:00Z", "path": "engine/src/main/java/org/terasology/rendering/cameras/OrthographicCamera.java", "diffHunk": "@@ -89,7 +89,7 @@ public void updateMatrices(float fov) {\n             return;\n         }\n \n-        projectionMatrix = MatrixUtils.createOrthogonalProjectionMatrix(left, right, top, bottom, zNear, zFar);\n+        projectionMatrix = new Matrix4f().ortho(left,right,top,bottom,zNear,zFar).transpose();", "originalCommit": "9442678e456d97705ee2d3edc8ac0ea4697ae7f0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09d200f9b2da8b3b4faf3793ad6f651c0c8bd529", "url": "https://github.com/MovingBlocks/Terasology/commit/09d200f9b2da8b3b4faf3793ad6f651c0c8bd529", "message": "Update engine/src/main/java/org/terasology/rendering/cameras/OrthographicCamera.java\n\nCo-authored-by: Kevin Blaszczyk <kevin.blaszczyk@gmail.com>", "committedDate": "2020-05-10T18:55:44Z", "type": "commit"}, {"oid": "8c3b89e372f5837a6fae467bad16f13d847fe707", "url": "https://github.com/MovingBlocks/Terasology/commit/8c3b89e372f5837a6fae467bad16f13d847fe707", "message": "correct formatting", "committedDate": "2020-05-10T18:56:34Z", "type": "commit"}, {"oid": "dd36fee7fd33e075074af993cdc791ea2fe59933", "url": "https://github.com/MovingBlocks/Terasology/commit/dd36fee7fd33e075074af993cdc791ea2fe59933", "message": "added test cases for PerspectiveCameraTest and OrthogonalCameraTest", "committedDate": "2020-05-10T23:33:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTk4OA==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426165988", "body": "I haven't worked in this part of the code, so do let me know if there are standard practices to brush up on. But being new to this, my reaction on seeing a test like this is: _wha?_\r\n\r\nThis PR changes a value from 5.0273395 to -5.235E-1. Why? Is it to account  for an implementation change, necessary for the new version to pass? Or is it an adjustment to the test data that makes a better test case?\r\n\r\nWhere do these numbers with with four (or more) significant figures come from? Does it matter what they are, or are they arbitrary values the test is using as a starting place?", "bodyText": "I haven't worked in this part of the code, so do let me know if there are standard practices to brush up on. But being new to this, my reaction on seeing a test like this is: wha?\nThis PR changes a value from 5.0273395 to -5.235E-1. Why? Is it to account  for an implementation change, necessary for the new version to pass? Or is it an adjustment to the test data that makes a better test case?\nWhere do these numbers with with four (or more) significant figures come from? Does it matter what they are, or are they arbitrary values the test is using as a starting place?", "bodyHTML": "<p dir=\"auto\">I haven't worked in this part of the code, so do let me know if there are standard practices to brush up on. But being new to this, my reaction on seeing a test like this is: <em>wha?</em></p>\n<p dir=\"auto\">This PR changes a value from 5.0273395 to -5.235E-1. Why? Is it to account  for an implementation change, necessary for the new version to pass? Or is it an adjustment to the test data that makes a better test case?</p>\n<p dir=\"auto\">Where do these numbers with with four (or more) significant figures come from? Does it matter what they are, or are they arbitrary values the test is using as a starting place?</p>", "author": "keturn", "createdAt": "2020-05-16T15:59:18Z", "path": "engine-tests/src/test/java/org/terasology/rendering/cameras/PerspectiveCameraTest.java", "diffHunk": "@@ -55,24 +56,28 @@ public void testPerspectiveCamera() {\n         camera.setOrientation(new Quat4f(45, .001f, .001f));\n         camera.updateMatrices();\n \n-        Matrix4f viewMatrix = new Matrix4f(5.0273395f, 0.0f, 0.0f, 0.0f\n-                , 0.0f, 8.937492f, 0.0f, 0.0f\n-                , 0.0f, 0.0f, -1.00004f, -0.20000401f\n-                , 0.0f, 0.0f, -1.0f, 0.0f);\n+        Matrix4f viewMatrix = new Matrix4f(-5.253E-1f, 0.000E+0f, 8.509E-1f, 0.000E+0f,\n+            8.509E-4f, 1.000E+0f, 5.253E-4f, 0.000E+0f,\n+            -8.509E-1f, 1.000E-3f, -5.253E-1f, 0.000E+0f,\n+            -0.000E+0f, -0.000E+0f, -0.000E+0f, 1.000E+0f);", "originalCommit": "dd36fee7fd33e075074af993cdc791ea2fe59933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NjE5Ng==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426166196", "bodyText": "(I'm glad you moved those line-starting commas, though. \ud83d\ude42 I don't think start-with-comma is a standard this repository follows.)", "author": "keturn", "createdAt": "2020-05-16T16:01:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2OTUzNw==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426169537", "bodyText": "used some random position and tested it with the old code and then moved it back to this. the test might not be necessary.", "author": "pollend", "createdAt": "2020-05-16T16:42:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTk4OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE3ODI2MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426178260", "bodyText": "we talked about this on discord and I agreed that if these methods are just calling through to joml's orthographic and perspective methods, we don't learn much by testing the arithmetic ourselves.", "author": "keturn", "createdAt": "2020-05-16T18:23:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NTk4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NzQ5Nw==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426167497", "body": "Here we've got what looks to be the same values as in `viewMatrix`, _almost._\r\n\r\nAre those the same numbers, but displayed a little differently due to binary-floating-point vs decimal representations? Or is the change of 0.01% significant? Could this have been a copy of viewMatrix instead?\r\n\r\nI don't believe it's necessary to remove _all_ numbers from tests (in a math library, even!), but I'm failing to tell signal from noise here.", "bodyText": "Here we've got what looks to be the same values as in viewMatrix, almost.\nAre those the same numbers, but displayed a little differently due to binary-floating-point vs decimal representations? Or is the change of 0.01% significant? Could this have been a copy of viewMatrix instead?\nI don't believe it's necessary to remove all numbers from tests (in a math library, even!), but I'm failing to tell signal from noise here.", "bodyHTML": "<p dir=\"auto\">Here we've got what looks to be the same values as in <code>viewMatrix</code>, <em>almost.</em></p>\n<p dir=\"auto\">Are those the same numbers, but displayed a little differently due to binary-floating-point vs decimal representations? Or is the change of 0.01% significant? Could this have been a copy of viewMatrix instead?</p>\n<p dir=\"auto\">I don't believe it's necessary to remove <em>all</em> numbers from tests (in a math library, even!), but I'm failing to tell signal from noise here.</p>", "author": "keturn", "createdAt": "2020-05-16T16:17:23Z", "path": "engine-tests/src/test/java/org/terasology/rendering/cameras/PerspectiveCameraTest.java", "diffHunk": "@@ -55,24 +56,28 @@ public void testPerspectiveCamera() {\n         camera.setOrientation(new Quat4f(45, .001f, .001f));\n         camera.updateMatrices();\n \n-        Matrix4f viewMatrix = new Matrix4f(5.0273395f, 0.0f, 0.0f, 0.0f\n-                , 0.0f, 8.937492f, 0.0f, 0.0f\n-                , 0.0f, 0.0f, -1.00004f, -0.20000401f\n-                , 0.0f, 0.0f, -1.0f, 0.0f);\n+        Matrix4f viewMatrix = new Matrix4f(-5.253E-1f, 0.000E+0f, 8.509E-1f, 0.000E+0f,\n+            8.509E-4f, 1.000E+0f, 5.253E-4f, 0.000E+0f,\n+            -8.509E-1f, 1.000E-3f, -5.253E-1f, 0.000E+0f,\n+            -0.000E+0f, -0.000E+0f, -0.000E+0f, 1.000E+0f);\n         Matrix4f projectionMatrix = new Matrix4f(5.0273395f, 0.0f, 0.0f, 0.0f\n-                , 0.0f, 8.937492f, 0.0f, 0.0f\n-                , 0.0f, 0.0f, -1.00004f, -0.20000401f\n-                , 0.0f, 0.0f, -1.0f, 0.0f);\n-        Matrix4f normViewMatrix = new Matrix4f(0.27303523f,0.0f,-0.962004f,-0.0f\n-                ,-0.96200305f,0.0014514439f,-0.27303496f,-0.0f,\n-                0.0013962948f,0.99999887f,3.962953f,-0.0f,\n-                0.0f,0.0f,0.0f,1.0f);\n+            , 0.0f, 8.937492f, 0.0f, 0.0f\n+            , 0.0f, 0.0f, -1.00004f, -0.20000401f\n+            , 0.0f, 0.0f, -1.0f, 0.0f);\n+        Matrix4f normViewMatrix = new Matrix4f(-.525322f, 0.0f, 0.8509036f, -0.0f\n+            , 8.509035E-4f, 0.9999995f, 5.25322E-4f, -0.0f,\n+            -0.85090315f, 0.001f, -0.5253218f, -0.0f,\n+            0.0f, 0.0f, 0.0f, 1.0f);", "originalCommit": "dd36fee7fd33e075074af993cdc791ea2fe59933", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2ODI3NA==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426168274", "bodyText": "On a second reading, I see this test does have that camera.setOrientation with the 0.001 radian pitch and yaw, so maybe those tiny differences are significant?", "author": "keturn", "createdAt": "2020-05-16T16:26:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2NzQ5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE2Nzk1OQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/3948#discussion_r426167959", "body": "I bet there's a way we can make this assertion method easier to read _and_ give more useful output on fail. I think you're following established precedent here, so I certainly won't hold up a review on that, but maybe a little side project for sometime.", "bodyText": "I bet there's a way we can make this assertion method easier to read and give more useful output on fail. I think you're following established precedent here, so I certainly won't hold up a review on that, but maybe a little side project for sometime.", "bodyHTML": "<p dir=\"auto\">I bet there's a way we can make this assertion method easier to read <em>and</em> give more useful output on fail. I think you're following established precedent here, so I certainly won't hold up a review on that, but maybe a little side project for sometime.</p>", "author": "keturn", "createdAt": "2020-05-16T16:22:39Z", "path": "engine-tests/src/main/java/org/terasology/testUtil/TeraAssert.java", "diffHunk": "@@ -65,6 +66,34 @@ public static void assertEquals(Vector3f expected, Vector3f actual, float error)\n         }\n     }\n \n+    public static void assertEquals(Matrix4fc expected, Matrix4fc actual, float error) {\n+        if (expected == null) {\n+            assertNull(actual);\n+        } else {\n+            assertNotNull(actual);\n+            Supplier<String> errorMessageSupplier = () -> \"Expected \\n\" + expected + \" Actual \\n\" + actual;\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m00(), actual.m00(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m01(), actual.m01(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m02(), actual.m02(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m03(), actual.m03(), error, errorMessageSupplier);\n+\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m10(), actual.m10(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m11(), actual.m11(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m12(), actual.m12(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m13(), actual.m13(), error, errorMessageSupplier);\n+\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m20(), actual.m20(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m21(), actual.m21(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m22(), actual.m22(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m23(), actual.m23(), error, errorMessageSupplier);\n+\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m30(), actual.m30(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m31(), actual.m31(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m32(), actual.m32(), error, errorMessageSupplier);\n+            org.junit.jupiter.api.Assertions.assertEquals(expected.m33(), actual.m33(), error, errorMessageSupplier);", "originalCommit": "dd36fee7fd33e075074af993cdc791ea2fe59933", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "147a0c22c2f16fa162d0829dc4674a26bfaf0f24", "url": "https://github.com/MovingBlocks/Terasology/commit/147a0c22c2f16fa162d0829dc4674a26bfaf0f24", "message": "removed camera tests", "committedDate": "2020-05-16T17:27:05Z", "type": "commit"}]}