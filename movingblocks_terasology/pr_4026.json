{"pr_number": 4026, "pr_title": "feat(JOML): Migrate MeshRenderer", "pr_author": "pollend", "pr_createdAt": "2020-06-03T05:41:15Z", "pr_url": "https://github.com/MovingBlocks/Terasology/pull/4026", "timeline": [{"oid": "0300ce52c4f42e87357e8964757376051c648e7e", "url": "https://github.com/MovingBlocks/Terasology/commit/0300ce52c4f42e87357e8964757376051c648e7e", "message": "feat(JOML): Migrate MeshRenderer\n\nhttps://github.com/MovingBlocks/Terasology/pull/3950 broke compatibility with https://github.com/MovingBlocks/Terasology/pull/3865 this is a simplification of that focuses on just the MeshRenderer.", "committedDate": "2020-06-03T05:40:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMjAyMQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438212021", "body": "Calling `identity()` here is unnecessary, since `translationRotateScale()` sets the matrix's state rather than transforming it.\r\n```suggestion\r\n                    matrixCameraSpace.translationRotateScale(offsetFromCamera, worldRot, worldScale);\r\n```", "bodyText": "Calling identity() here is unnecessary, since translationRotateScale() sets the matrix's state rather than transforming it.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                matrixCameraSpace.identity().translationRotateScale(offsetFromCamera, worldRot, worldScale);\n          \n          \n            \n                                matrixCameraSpace.translationRotateScale(offsetFromCamera, worldRot, worldScale);", "bodyHTML": "<p dir=\"auto\">Calling <code>identity()</code> here is unnecessary, since <code>translationRotateScale()</code> sets the matrix's state rather than transforming it.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    matrixCameraSpace<span class=\"pl-k\">.</span><span class=\"x x-first\">identity()</span><span class=\"pl-k x x-last\">.</span>translationRotateScale(offsetFromCamera, worldRot, worldScale);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    matrixCameraSpace<span class=\"pl-k\">.</span>translationRotateScale(offsetFromCamera, worldRot, worldScale);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kBlaszczyk", "createdAt": "2020-06-10T15:26:21Z", "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -191,23 +195,23 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                     MeshComponent meshComp = entity.getComponent(MeshComponent.class);\n                     LocationComponent location = entity.getComponent(LocationComponent.class);\n \n-                    if (isHidden(entity, meshComp) || location == null || Float.isNaN(location.getWorldPosition().x)|| meshComp.mesh == null || !isRelevant(entity, location.getWorldPosition())) {\n+                    if (isHidden(entity, meshComp) || location == null || Float.isNaN(location.getWorldPosition().x) || meshComp.mesh == null || !isRelevant(entity, JomlUtil.from(location.getWorldPosition()))) {\n                         continue;\n                     }\n                     if (meshComp.mesh.isDisposed()) {\n                         logger.error(\"Attempted to render disposed mesh\");\n                         continue;\n                     }\n \n-                    location.getWorldRotation(worldRot);\n-                    location.getWorldPosition(worldPos);\n+                    worldRot.set(JomlUtil.from(location.getWorldRotation()));\n+                    worldPos.set(JomlUtil.from(location.getWorldPosition()));\n                     float worldScale = location.getWorldScale();\n \n-                    Transform toWorldSpace = new Transform(worldPos, worldRot, worldScale);\n+                    Transform toWorldSpace = new Transform(JomlUtil.from(worldPos), JomlUtil.from(worldRot), worldScale);\n+\n+                    Vector3f offsetFromCamera = worldPos.sub(cameraPosition, new Vector3f());\n+                    matrixCameraSpace.identity().translationRotateScale(offsetFromCamera, worldRot, worldScale);", "originalCommit": "0300ce52c4f42e87357e8964757376051c648e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxMzk0MA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438213940", "body": "`Matrix4f#normal()` should be used instead.\r\n```suggestion\r\n                        modelViewMatrix.normal(normalMatrix).get(tempMatrixBuffer33);\r\n```", "bodyText": "Matrix4f#normal() should be used instead.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);\n          \n          \n            \n                                    modelViewMatrix.normal(normalMatrix).get(tempMatrixBuffer33);", "bodyHTML": "<p dir=\"auto\"><code>Matrix4f#normal()</code> should be used instead.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        modelViewMatrix<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">get3x3</span>(normalMatrix)<span class=\"pl-k\">.</span><span class=\"x x-first\">invert()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getTransposed</span>(tempMatrixBuffer33);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        modelViewMatrix<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">normal</span>(normalMatrix)<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">get</span>(tempMatrixBuffer33);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kBlaszczyk", "createdAt": "2020-06-10T15:28:58Z", "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -219,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);\n+                        modelViewMatrix.get(tempMatrixBuffer44);\n+                        modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);", "originalCommit": "0300ce52c4f42e87357e8964757376051c648e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIxNjYxOA==", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r438216618", "body": "Not your change, but I just want to say, that I find it odd that we are using buffers to set some matrices and `Matrix4f` objects for others. I'd favor consistently passing the matrix.", "bodyText": "Not your change, but I just want to say, that I find it odd that we are using buffers to set some matrices and Matrix4f objects for others. I'd favor consistently passing the matrix.", "bodyHTML": "<p dir=\"auto\">Not your change, but I just want to say, that I find it odd that we are using buffers to set some matrices and <code>Matrix4f</code> objects for others. I'd favor consistently passing the matrix.</p>", "author": "kBlaszczyk", "createdAt": "2020-06-10T15:32:45Z", "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -219,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);\n+                        modelViewMatrix.get(tempMatrixBuffer44);\n+                        modelViewMatrix.get3x3(normalMatrix).invert().getTransposed(tempMatrixBuffer33);\n \n                         material.setMatrix4(\"projectionMatrix\", new org.joml.Matrix4f(worldRenderer.getActiveCamera().getProjectionMatrix()).transpose(), true);", "originalCommit": "0300ce52c4f42e87357e8964757376051c648e7e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "aa0515c03620cfbc1fafdbdbe1bf91def75e3e73", "url": "https://github.com/MovingBlocks/Terasology/commit/aa0515c03620cfbc1fafdbdbe1bf91def75e3e73", "message": "Merge remote-tracking branch 'upstream/develop' into feature/joml_MeshRenderer", "committedDate": "2020-07-14T18:06:52Z", "type": "commit"}, {"oid": "1c818a0e41cfdfcf335cf5eff4b05e58305aa4be", "url": "https://github.com/MovingBlocks/Terasology/commit/1c818a0e41cfdfcf335cf5eff4b05e58305aa4be", "message": "tweak meshRenderer", "committedDate": "2020-07-14T18:19:26Z", "type": "commit"}, {"oid": "e0042399945e689a5fa475ec52a6c64ea48a1099", "url": "https://github.com/MovingBlocks/Terasology/commit/e0042399945e689a5fa475ec52a6c64ea48a1099", "message": "remove discord xml", "committedDate": "2020-07-14T18:21:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyODc5Ng==", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r458728796", "body": "Why is there a `transpose` inserted here? This seems to be actually changing the logic.", "bodyText": "Why is there a transpose inserted here? This seems to be actually changing the logic.", "bodyHTML": "<p dir=\"auto\">Why is there a <code>transpose</code> inserted here? This seems to be actually changing the logic.</p>", "author": "4Denthusiast", "createdAt": "2020-07-22T11:39:22Z", "path": "engine/src/main/java/org/terasology/rendering/logic/MeshRenderer.java", "diffHunk": "@@ -218,17 +223,17 @@ private void renderEntitiesByMaterial(SetMultimap<Material, EntityRef> meshByMat\n                             lastMesh.preRender();\n                         }\n \n-                        Matrix4f modelViewMatrix = MatrixUtils.calcModelViewMatrix(JomlUtil.from(worldRenderer.getActiveCamera().getViewMatrix()), matrixCameraSpace);\n-                        MatrixUtils.matrixToFloatBuffer(modelViewMatrix, tempMatrixBuffer44);\n-                        MatrixUtils.matrixToFloatBuffer(MatrixUtils.calcNormalMatrix(modelViewMatrix), tempMatrixBuffer33);\n+                        modelViewMatrix.set(worldRenderer.getActiveCamera().getViewMatrix()).transpose().mul(matrixCameraSpace);", "originalCommit": "e0042399945e689a5fa475ec52a6c64ea48a1099", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0NDkwOQ==", "url": "https://github.com/MovingBlocks/Terasology/pull/4026#discussion_r458744909", "bodyText": "the transpose is not needed anymore when I pull in the camera from upstream.", "author": "pollend", "createdAt": "2020-07-22T12:11:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODcyODc5Ng=="}], "type": "inlineReview"}, {"oid": "8087e9f08c0ce1604137f9403bf2aadbc3369b51", "url": "https://github.com/MovingBlocks/Terasology/commit/8087e9f08c0ce1604137f9403bf2aadbc3369b51", "message": "Merge remote-tracking branch 'upstream/develop' into feature/joml_MeshRenderer", "committedDate": "2020-08-01T03:53:28Z", "type": "commit"}]}