{"pr_number": 397, "pr_title": "[aws-datastore] AWSDataStorePlugin via Constructor", "pr_author": "jamesonwilliams", "pr_createdAt": "2020-04-24T04:58:45Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/397", "timeline": [{"oid": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "url": "https://github.com/aws-amplify/amplify-android/commit/5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "message": "[aws-datastore] AWSDataStorePlugin via Constructor\n\nDisposition 1. All of the other plugins currently used in Amplify can be\ncreated by constructor. The AWSDataStorePlugin.forModels(...) factory\nbreaks the customer's expectations of how plugins are instantiated.\n\nDisposition 2. It is possible to dynamically locate the code-generated\nmodel provider, internal to the plugin, and use it to instantiate the\nplugin. To simplify the happy path of onboarding with the DataStore, a\nno-arguments constructor is provided.\n\nThe plugin may now be added into the system by the same means as the\nother plugins:\n\n    Amplify.addPlugin(new AWSDataStorePlugin());\n    Amplify.configure(getApplicationContext());", "committedDate": "2020-04-24T05:16:59Z", "type": "commit"}, {"oid": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "url": "https://github.com/aws-amplify/amplify-android/commit/5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "message": "[aws-datastore] AWSDataStorePlugin via Constructor\n\nDisposition 1. All of the other plugins currently used in Amplify can be\ncreated by constructor. The AWSDataStorePlugin.forModels(...) factory\nbreaks the customer's expectations of how plugins are instantiated.\n\nDisposition 2. It is possible to dynamically locate the code-generated\nmodel provider, internal to the plugin, and use it to instantiate the\nplugin. To simplify the happy path of onboarding with the DataStore, a\nno-arguments constructor is provided.\n\nThe plugin may now be added into the system by the same means as the\nother plugins:\n\n    Amplify.addPlugin(new AWSDataStorePlugin());\n    Amplify.configure(getApplicationContext());", "committedDate": "2020-04-24T05:16:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNjEzMA==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414536130", "body": "Minor: \r\n\r\n```suggestion\r\n     * the Amplify Code Generator, then this will break. Likewise, if you need to provide a custom\r\n```", "bodyText": "Minor:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * the Amplify Code Generator, then this will be break. Likewise, if you need to provide a custom\n          \n          \n            \n                 * the Amplify Code Generator, then this will break. Likewise, if you need to provide a custom", "bodyHTML": "<p dir=\"auto\">Minor:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> the <span class=\"pl-smi\">Amplify</span> <span class=\"pl-smi\">Code</span> <span class=\"pl-smi\">Generator</span>, then <span class=\"pl-c1\">this</span> will <span class=\"x x-first x-last\">be </span><span class=\"pl-k\">break</span>. <span class=\"pl-smi\">Likewise</span>, <span class=\"pl-k\">if</span> you need to provide a custom</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> the <span class=\"pl-smi\">Amplify</span> <span class=\"pl-smi\">Code</span> <span class=\"pl-smi\">Generator</span>, then <span class=\"pl-c1\">this</span> will <span class=\"pl-k\">break</span>. <span class=\"pl-smi\">Likewise</span>, <span class=\"pl-k\">if</span> you need to provide a custom</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rjuliano", "createdAt": "2020-04-24T12:26:27Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -86,33 +86,50 @@ private AWSDataStorePlugin(\n     }\n \n     /**\n-     * Creates an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * your application's code-generated model provider. This model provider is expected to have the\n+     * fully qualified class name of com.amplifyframework.datastore.generated.model.AmplifyModelProvider.\n+     *\n+     * This constructor will attempt to find that provide by means of reflection. If you have changed\n+     * the path to your {@link ModelProvider} instance, and do not use the default path generated by\n+     * the Amplify Code Generator, then this will be break. Likewise, if you need to provide a custom", "originalCommit": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0MDExNA==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414540114", "body": "When I started looking at DataStore, this was one of the points of confusion for me. How do I tell if remote sync is enabled? It doesn't appear to be a setting in the category or plugin configuration, so I'm asserting that it's simply by virtue of an API being present. If that's the case, maybe we should say something like:\r\n\r\n> If the API plugin is present and configured, then remote synchronization will be performed.\r\n\r\nOr something along those lines", "bodyText": "When I started looking at DataStore, this was one of the points of confusion for me. How do I tell if remote sync is enabled? It doesn't appear to be a setting in the category or plugin configuration, so I'm asserting that it's simply by virtue of an API being present. If that's the case, maybe we should say something like:\n\nIf the API plugin is present and configured, then remote synchronization will be performed.\n\nOr something along those lines", "bodyHTML": "<p dir=\"auto\">When I started looking at DataStore, this was one of the points of confusion for me. How do I tell if remote sync is enabled? It doesn't appear to be a setting in the category or plugin configuration, so I'm asserting that it's simply by virtue of an API being present. If that's the case, maybe we should say something like:</p>\n<blockquote>\n<p dir=\"auto\">If the API plugin is present and configured, then remote synchronization will be performed.</p>\n</blockquote>\n<p dir=\"auto\">Or something along those lines</p>", "author": "rjuliano", "createdAt": "2020-04-24T12:33:04Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -86,33 +86,50 @@ private AWSDataStorePlugin(\n     }\n \n     /**\n-     * Creates an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * your application's code-generated model provider. This model provider is expected to have the\n+     * fully qualified class name of com.amplifyframework.datastore.generated.model.AmplifyModelProvider.\n+     *\n+     * This constructor will attempt to find that provide by means of reflection. If you have changed\n+     * the path to your {@link ModelProvider} instance, and do not use the default path generated by\n+     * the Amplify Code Generator, then this will be break. Likewise, if you need to provide a custom\n+     * {@link ModelProvider}, this will not work. In both cases, you should prefer one of the other\n+     * overloads such as {@link #AWSDataStorePlugin(ModelProvider)}.\n+     *\n+     * If remote synchronization is enabled, it will be performed via {@link Amplify#API}.", "originalCommit": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwOTI2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414809264", "bodyText": "Good point, done!", "author": "jamesonwilliams", "createdAt": "2020-04-24T19:23:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0MDExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMTM2NA==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414711364", "body": "oh wow, this is fancy! I like it.\n\nI wasn't expecting this to happen anytime soon, you're a ninja @jamesonwilliams ", "bodyText": "oh wow, this is fancy! I like it.\nI wasn't expecting this to happen anytime soon, you're a ninja @jamesonwilliams", "bodyHTML": "<p dir=\"auto\">oh wow, this is fancy! I like it.</p>\n<p dir=\"auto\">I wasn't expecting this to happen anytime soon, you're a ninja <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jamesonwilliams/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesonwilliams\">@jamesonwilliams</a></p>", "author": "drochetti", "createdAt": "2020-04-24T16:37:37Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -86,33 +86,50 @@ private AWSDataStorePlugin(\n     }\n \n     /**\n-     * Creates an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * your application's code-generated model provider. This model provider is expected to have the\n+     * fully qualified class name of com.amplifyframework.datastore.generated.model.AmplifyModelProvider.\n+     *\n+     * This constructor will attempt to find that provide by means of reflection. If you have changed\n+     * the path to your {@link ModelProvider} instance, and do not use the default path generated by\n+     * the Amplify Code Generator, then this will be break. Likewise, if you need to provide a custom\n+     * {@link ModelProvider}, this will not work. In both cases, you should prefer one of the other\n+     * overloads such as {@link #AWSDataStorePlugin(ModelProvider)}.\n+     *\n+     * If remote synchronization is enabled, it will be performed via {@link Amplify#API}.\n+     *\n+     * @throws DataStoreException If it is not possible to access the code-generated model provider\n+     */\n+    @SuppressWarnings({\"unused\", \"WeakerAccess\"})\n+    public AWSDataStorePlugin() throws DataStoreException {\n+        this(ModelProviderLocator.locate(), Amplify.API);", "originalCommit": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjkwNw==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414712907", "body": "on iOS we're treating this constructor as internal, only for dependency injection purposes. Customers cannot pass their own API implementation because of how strict our sync engine is when it comes to how API should behave.", "bodyText": "on iOS we're treating this constructor as internal, only for dependency injection purposes. Customers cannot pass their own API implementation because of how strict our sync engine is when it comes to how API should behave.", "bodyHTML": "<p dir=\"auto\">on iOS we're treating this constructor as internal, only for dependency injection purposes. Customers cannot pass their own API implementation because of how strict our sync engine is when it comes to how API should behave.</p>", "author": "drochetti", "createdAt": "2020-04-24T16:40:04Z", "path": "aws-datastore/src/main/java/com/amplifyframework/datastore/AWSDataStorePlugin.java", "diffHunk": "@@ -86,33 +86,50 @@ private AWSDataStorePlugin(\n     }\n \n     /**\n-     * Creates an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n+     * your application's code-generated model provider. This model provider is expected to have the\n+     * fully qualified class name of com.amplifyframework.datastore.generated.model.AmplifyModelProvider.\n+     *\n+     * This constructor will attempt to find that provide by means of reflection. If you have changed\n+     * the path to your {@link ModelProvider} instance, and do not use the default path generated by\n+     * the Amplify Code Generator, then this will be break. Likewise, if you need to provide a custom\n+     * {@link ModelProvider}, this will not work. In both cases, you should prefer one of the other\n+     * overloads such as {@link #AWSDataStorePlugin(ModelProvider)}.\n+     *\n+     * If remote synchronization is enabled, it will be performed via {@link Amplify#API}.\n+     *\n+     * @throws DataStoreException If it is not possible to access the code-generated model provider\n+     */\n+    @SuppressWarnings({\"unused\", \"WeakerAccess\"})\n+    public AWSDataStorePlugin() throws DataStoreException {\n+        this(ModelProviderLocator.locate(), Amplify.API);\n+    }\n+\n+    /**\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by\n      * the supplied {@link ModelProvider}. If remote synchronization is enabled, it will be\n      * performed through {@link Amplify#API}.\n      * @param modelProvider Provider of models to be usable by plugin\n-     * @return An {@link AWSDataStorePlugin} which warehouses the provided models\n      */\n-    @NonNull\n-    @SuppressWarnings(\"WeakerAccess\")\n-    public static AWSDataStorePlugin forModels(@NonNull ModelProvider modelProvider) {\n-        Objects.requireNonNull(modelProvider);\n-        return create(modelProvider, Amplify.API);\n+    @SuppressWarnings({\"unused\", \"WeakerAccess\"})\n+    public AWSDataStorePlugin(@NonNull ModelProvider modelProvider) {\n+        this(Objects.requireNonNull(modelProvider), Amplify.API);\n     }\n \n     /**\n-     * Creates an {@link AWSDataStorePlugin} which can warehouse the model types provided by the\n+     * Constructs an {@link AWSDataStorePlugin} which can warehouse the model types provided by the\n      * supplied {@link ModelProvider}. If remote synchronization is enabled, it will be performed\n      * through the provided {@link GraphQlBehavior}.\n      * @param modelProvider Provides the set of models to be warehouse-able by this system\n      * @param api Interface to a remote system where models will be synchronized\n-     * @return An {@link AWSDataStorePlugin} which warehouses the provided model types\n      */\n-    @NonNull\n-    public static AWSDataStorePlugin create(@NonNull ModelProvider modelProvider, @NonNull GraphQlBehavior api) {\n-        Objects.requireNonNull(modelProvider);\n-        Objects.requireNonNull(api);\n-        ModelSchemaRegistry modelSchemaRegistry = ModelSchemaRegistry.instance();\n-        return new AWSDataStorePlugin(modelSchemaRegistry, modelProvider, api);\n+    @SuppressWarnings(\"WeakerAccess\")\n+    public AWSDataStorePlugin(@NonNull ModelProvider modelProvider, @NonNull GraphQlBehavior api) {", "originalCommit": "5cc5db761933a4c2f9ac45102c2b2a825ce812a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNzAwOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/397#discussion_r414807009", "bodyText": "This is a good point. I'll look to remove the public access.", "author": "jamesonwilliams", "createdAt": "2020-04-24T19:18:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjkwNw=="}], "type": "inlineReview"}, {"oid": "81c5e04527e8f7db4ced075d6d25c619c937b948", "url": "https://github.com/aws-amplify/amplify-android/commit/81c5e04527e8f7db4ced075d6d25c619c937b948", "message": "Address feedback on PR", "committedDate": "2020-04-24T19:22:20Z", "type": "commit"}]}