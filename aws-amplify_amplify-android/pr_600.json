{"pr_number": 600, "pr_title": "fix(aws-api): Fix path with leading slash breaking REST", "pr_author": "raphkim", "pr_createdAt": "2020-06-25T18:52:45Z", "pr_url": "https://github.com/aws-amplify/amplify-android/pull/600", "timeline": [{"oid": "865ac722a359177017f0bb3138c893321329f767", "url": "https://github.com/aws-amplify/amplify-android/commit/865ac722a359177017f0bb3138c893321329f767", "message": "Re-enable REST API tests", "committedDate": "2020-06-25T07:19:29Z", "type": "commit"}, {"oid": "60d00ec02b871e3a9d212b4c3bfdad9570d0c350", "url": "https://github.com/aws-amplify/amplify-android/commit/60d00ec02b871e3a9d212b4c3bfdad9570d0c350", "message": "Strip leading slashes in path", "committedDate": "2020-06-25T18:02:45Z", "type": "commit"}, {"oid": "59537bcc8ecd0b4c776dee916f6ee5bdaf8b94a1", "url": "https://github.com/aws-amplify/amplify-android/commit/59537bcc8ecd0b4c776dee916f6ee5bdaf8b94a1", "message": "Adjust test for new slash behavior", "committedDate": "2020-06-25T18:40:51Z", "type": "commit"}, {"oid": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1", "url": "https://github.com/aws-amplify/amplify-android/commit/a7b430867aaa0541b9eea75cfeb9391edc41d6c1", "message": "Checkstyle + whitespace", "committedDate": "2020-06-25T18:57:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTgxOQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r445909819", "body": "Suggestion for readability (eschew regular expression):\r\n\r\n```suggestion\r\n        if (path.startsWith(\"/\") || path.startsWith(\"\\\\\")) {\r\n            return path.substring(1);\r\n        }\r\n        \r\n        return path;\r\n```", "bodyText": "Suggestion for readability (eschew regular expression):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return path.replaceAll(\"^[\\\\\\\\/]+\", \"\");\n          \n          \n            \n                    if (path.startsWith(\"/\") || path.startsWith(\"\\\\\")) {\n          \n          \n            \n                        return path.substring(1);\n          \n          \n            \n                    }\n          \n          \n            \n                    \n          \n          \n            \n                    return path;", "bodyHTML": "<p dir=\"auto\">Suggestion for readability (eschew regular expression):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"143\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k x x-first\">return</span><span class=\"x x-last\"> </span>path<span class=\"pl-k\">.</span><span class=\"x x-first\">replaceAll(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">^[</span><span class=\"pl-cce x\">\\\\\\\\</span><span class=\"x\">/]+</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"143\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">if</span><span class=\"x x-last\"> (</span>path<span class=\"pl-k\">.</span><span class=\"x x-first\">startsWith(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">/</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">) </span><span class=\"pl-k x\">||</span><span class=\"x\"> path</span><span class=\"pl-k x\">.</span><span class=\"x\">startsWith(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-cce x\">\\\\</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"144\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> path<span class=\"pl-k\">.</span>substring(<span class=\"pl-c1\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"146\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"147\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> path;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jpignata", "createdAt": "2020-06-26T00:35:58Z", "path": "aws-api/src/main/java/com/amplifyframework/api/aws/utils/RestRequestFactory.java", "diffHunk": "@@ -125,12 +129,20 @@ public static Request createRequest(\n     private static void populateBody(\n             Request.Builder builder,\n             byte[] data,\n-            BodyCreationStrategy strategy) {\n+            BodyCreationStrategy strategy\n+    ) {\n         if (data != null) {\n             strategy.buildRequest(builder, data);\n         }\n     }\n \n+    // Segment separator can be either '/' or '\\'.\n+    // HttpUrl.Builder assumes an empty URL if path segments\n+    // begin with either character. Strip them before appending.\n+    private static String stripLeadingSlashes(final String path) {\n+        return path.replaceAll(\"^[\\\\\\\\/]+\", \"\");", "originalCommit": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEyMjA3Ng==", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r447122076", "bodyText": "I know this is excessive, but it works for any combination of any number of slashes in the beginning. This way I REALLY ensure that the path doesn't begin with \"/\" or \"\" or any combination of those two.\nThis way the method name actually makes sense, since it wants to completely strip the left side of any slashes.", "author": "raphkim", "createdAt": "2020-06-29T17:05:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwOTgxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDk1MA==", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r445910950", "body": "Why is this invalid? No scheme?", "bodyText": "Why is this invalid? No scheme?", "bodyHTML": "<p dir=\"auto\">Why is this invalid? No scheme?</p>", "author": "jpignata", "createdAt": "2020-06-26T00:40:41Z", "path": "aws-api/src/test/java/com/amplifyframework/api/aws/utils/RestRequestFactoryTest.java", "diffHunk": "@@ -83,9 +97,9 @@ public void createValidURLWithQuery() throws MalformedURLException {\n      * @throws MalformedURLException Should throw since the URL is invalid.\n      */\n     @Test(expected = MalformedURLException.class)\n-    public void createInValidURL() throws MalformedURLException {\n+    public void createInvalidURL() throws MalformedURLException {", "originalCommit": "a7b430867aaa0541b9eea75cfeb9391edc41d6c1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEyMzI0OQ==", "url": "https://github.com/aws-amplify/amplify-android/pull/600#discussion_r447123249", "bodyText": "I did not write this test, but I think OkHttp doesn't like it when the endpoint is missing the http", "author": "raphkim", "createdAt": "2020-06-29T17:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkxMDk1MA=="}], "type": "inlineReview"}]}