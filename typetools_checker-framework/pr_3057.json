{"pr_number": 3057, "pr_title": "Correct enclosing class for NewClassTrees. (Fixes #3022 and #2975)", "pr_author": "smillst", "pr_createdAt": "2020-01-22T18:05:43Z", "pr_url": "https://github.com/typetools/checker-framework/pull/3057", "timeline": [{"oid": "94d8b07c52e0b8b7d21bf56a9dceaed45174abbb", "url": "https://github.com/typetools/checker-framework/commit/94d8b07c52e0b8b7d21bf56a9dceaed45174abbb", "message": "Correct enclosing class for NewClassTrees.", "committedDate": "2020-01-22T18:03:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NjM1Mg==", "url": "https://github.com/typetools/checker-framework/pull/3057#discussion_r371976352", "body": "The comment here and below is the same, which was a bit surprising. Would the logic be easier to understand as:\r\n\r\n```java\r\nif (typeElt.getEnclosingElement() == null || ElementUtils.enclosingClass(typeElt.getEnclosingElement() == null) {\r\n    // If the typeElt does not have an enclosing class, then the NewClassTree\r\n    // does not have an implicit receiver.\r\n    return null;\r\n}\r\n```\r\n\r\nThat doesn't perform the re-assignment of `typeElt` when it has an enclosing class, which is tricky to notice.\r\nBut is that re-assignment good, as `typeElt` is used in `getEnclosingType` below?\r\nSo I guess I'm asking for some more documentation what the cases are for.\r\n", "bodyText": "The comment here and below is the same, which was a bit surprising. Would the logic be easier to understand as:\nif (typeElt.getEnclosingElement() == null || ElementUtils.enclosingClass(typeElt.getEnclosingElement() == null) {\n    // If the typeElt does not have an enclosing class, then the NewClassTree\n    // does not have an implicit receiver.\n    return null;\n}\nThat doesn't perform the re-assignment of typeElt when it has an enclosing class, which is tricky to notice.\nBut is that re-assignment good, as typeElt is used in getEnclosingType below?\nSo I guess I'm asking for some more documentation what the cases are for.", "bodyHTML": "<p dir=\"auto\">The comment here and below is the same, which was a bit surprising. Would the logic be easier to understand as:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (typeElt.getEnclosingElement() == null || ElementUtils.enclosingClass(typeElt.getEnclosingElement() == null) {\n    // If the typeElt does not have an enclosing class, then the NewClassTree\n    // does not have an implicit receiver.\n    return null;\n}\"><pre><span class=\"pl-k\">if</span> (typeElt<span class=\"pl-k\">.</span>getEnclosingElement() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-smi\">ElementUtils</span><span class=\"pl-k\">.</span>enclosingClass(typeElt<span class=\"pl-k\">.</span>getEnclosingElement() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> If the typeElt does not have an enclosing class, then the NewClassTree</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> does not have an implicit receiver.</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n}</pre></div>\n<p dir=\"auto\">That doesn't perform the re-assignment of <code>typeElt</code> when it has an enclosing class, which is tricky to notice.<br>\nBut is that re-assignment good, as <code>typeElt</code> is used in <code>getEnclosingType</code> below?<br>\nSo I guess I'm asking for some more documentation what the cases are for.</p>", "author": "wmdietl", "createdAt": "2020-01-28T18:22:48Z", "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "diffHunk": "@@ -1662,6 +1663,20 @@ protected AnnotatedDeclaredType getImplicitReceiverType(ExpressionTree tree) {\n                             \"AnnotatedTypeFactory.getImplicitReceiver: enclosingClass()==null for element: \"\n                                     + element);\n                 }\n+                if (tree.getKind() == Kind.NEW_CLASS) {\n+                    if (typeElt.getEnclosingElement() != null) {\n+                        typeElt = ElementUtils.enclosingClass(typeElt.getEnclosingElement());\n+                        if (typeElt == null) {\n+                            // If the typeElt does not have an enclosing class, then the", "originalCommit": "94d8b07c52e0b8b7d21bf56a9dceaed45174abbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NzYyNA==", "url": "https://github.com/typetools/checker-framework/pull/3057#discussion_r371977624", "body": "Is the package here necessary? It doesn't seem to match the location of the file.", "bodyText": "Is the package here necessary? It doesn't seem to match the location of the file.", "bodyHTML": "<p dir=\"auto\">Is the package here necessary? It doesn't seem to match the location of the file.</p>", "author": "wmdietl", "createdAt": "2020-01-28T18:25:16Z", "path": "framework/tests/all-systems/java8inference/Issue2975.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package sup;", "originalCommit": "94d8b07c52e0b8b7d21bf56a9dceaed45174abbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "880d0eab826d82e9648cb04200806b90e757429e", "url": "https://github.com/typetools/checker-framework/commit/880d0eab826d82e9648cb04200806b90e757429e", "message": "Merge remote-tracking branch 'origin/master' into issue2975", "committedDate": "2020-01-28T20:50:05Z", "type": "commit"}, {"oid": "a540528f4a37d5e5926a99b39b2cd582a8c88bce", "url": "https://github.com/typetools/checker-framework/commit/a540528f4a37d5e5926a99b39b2cd582a8c88bce", "message": "Code review.", "committedDate": "2020-01-28T20:56:38Z", "type": "commit"}]}