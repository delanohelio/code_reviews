{"pr_number": 2514, "pr_title": "More core plugin updates", "pr_author": "i509VCB", "pr_createdAt": "2020-02-24T03:14:35Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/2514", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NTA1NQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r383645055", "body": "```suggestion\r\n                final BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;\n          \n          \n            \n                            final BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">BlockRayTraceResult</span> blockMovingObjectPosition <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">BlockRayTraceResult</span>) movingObjectPosition;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">BlockRayTraceResult</span> blockMovingObjectPosition <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">BlockRayTraceResult</span>) movingObjectPosition;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-02-25T03:49:41Z", "path": "src/main/java/org/spongepowered/common/event/SpongeCommonEventFactory.java", "diffHunk": "@@ -897,19 +900,20 @@ public static boolean handleCollideImpactEvent(final net.minecraft.entity.Entity\n             final Optional<User> owner = PhaseTracker.getInstance().getCurrentContext().getOwner();\n             owner.ifPresent(user -> frame.addContext(EventContextKeys.OWNER, user));\n \n-            final Location<World> impactPoint = new Location<>((World) projectile.world, VecHelper.toVector3d(movingObjectPosition.hitResult));\n+            final Location<World> impactPoint = new Location<>((World) projectile.world, VecHelper.toVector3d(movingObjectPosition.getHitVec()));\n             boolean cancelled = false;\n \n             if (movingObjectType == RayTraceResult.Type.BLOCK) {\n-                final BlockPos blockPos = movingObjectPosition.getBlockPos();\n+                BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;", "originalCommit": "f6386c703bb2c8134cf086648ec03cb5704c01ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faedb98e0ab5649b21f5eee1e68b19b87fde176d", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/event/SpongeCommonEventFactory.java b/src/main/java/org/spongepowered/common/event/SpongeCommonEventFactory.java\nindex f85157db2..bdd4b4ff2 100644\n--- a/src/main/java/org/spongepowered/common/event/SpongeCommonEventFactory.java\n+++ b/src/main/java/org/spongepowered/common/event/SpongeCommonEventFactory.java\n", "chunk": "@@ -900,11 +900,11 @@ public static boolean handleCollideImpactEvent(final net.minecraft.entity.Entity\n             final Optional<User> owner = PhaseTracker.getInstance().getCurrentContext().getOwner();\n             owner.ifPresent(user -> frame.addContext(EventContextKeys.OWNER, user));\n \n-            final Location<World> impactPoint = new Location<>((World) projectile.world, VecHelper.toVector3d(movingObjectPosition.getHitVec()));\n+            final Location impactPoint = Location.of((World) projectile.world, VecHelper.toVector3d(movingObjectPosition.getHitVec()));\n             boolean cancelled = false;\n \n             if (movingObjectType == RayTraceResult.Type.BLOCK) {\n-                BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;\n+                final BlockRayTraceResult blockMovingObjectPosition = (BlockRayTraceResult) movingObjectPosition;\n                 final BlockPos blockPos = blockMovingObjectPosition.getPos();\n                 if (blockPos.getY() <= 0) {\n                     return false;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NTUwNg==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r383645506", "body": "Shouldn't be public at all, at the most `protected` if it's being used in sub mixins.", "bodyText": "Shouldn't be public at all, at the most protected if it's being used in sub mixins.", "bodyHTML": "<p dir=\"auto\">Shouldn't be public at all, at the most <code>protected</code> if it's being used in sub mixins.</p>", "author": "gabizou", "createdAt": "2020-02-25T03:51:36Z", "path": "src/main/java/org/spongepowered/common/mixin/core/entity/projectile/ThrowableEntityMixin.java", "diffHunk": "@@ -47,8 +47,7 @@\n     @Shadow protected LivingEntity owner;\n     @Shadow protected abstract void onImpact(RayTraceResult movingObjectPosition);\n \n-    @Nullable\n-    public ProjectileSource projectileSource;\n+    @Nullable public ProjectileSource impl$projectileSource;", "originalCommit": "f6386c703bb2c8134cf086648ec03cb5704c01ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faedb98e0ab5649b21f5eee1e68b19b87fde176d", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/entity/projectile/ThrowableEntityMixin.java b/src/main/java/org/spongepowered/common/mixin/core/entity/projectile/ThrowableEntityMixin.java\nindex a3f8666a5..d6d268afd 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/entity/projectile/ThrowableEntityMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/entity/projectile/ThrowableEntityMixin.java\n", "chunk": "@@ -47,7 +47,7 @@\n     @Shadow protected LivingEntity owner;\n     @Shadow protected abstract void onImpact(RayTraceResult movingObjectPosition);\n \n-    @Nullable public ProjectileSource impl$projectileSource;\n+    @Nullable protected ProjectileSource impl$projectileSource;\n \n     @Override\n     public void impl$readFromSpongeCompound(final CompoundNBT compound) {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY0NTY1MQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r383645651", "body": "Extra spaces == bad", "bodyText": "Extra spaces == bad", "bodyHTML": "<p dir=\"auto\">Extra spaces == bad</p>", "author": "gabizou", "createdAt": "2020-02-25T03:52:08Z", "path": "src/main/java/org/spongepowered/common/mixin/core/item/EnderEyeItemMixin.java", "diffHunk": "@@ -113,14 +114,14 @@ private void implThrowForPreEvent(final World worldIn, final PlayerEntity player\n      */\n     @SuppressWarnings(\"Duplicates\")\n     @Surrogate\n-    private void implThrowForPreEvent(final World worldIn, final PlayerEntity playerIn, final Hand handIn,\n-        final CallbackInfoReturnable<ActionResult<ItemStack>> cir, final ItemStack used, @Nullable final BlockPos targetPos) {\n+    private void impl$ThrowForPreEvent(final World worldIn, final PlayerEntity playerIn, final Hand handIn,\n+                                       final CallbackInfoReturnable<ActionResult<ItemStack>> cir, final ItemStack used, @Nullable final BlockPos targetPos) {", "originalCommit": "f6386c703bb2c8134cf086648ec03cb5704c01ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "faedb98e0ab5649b21f5eee1e68b19b87fde176d", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/item/EnderEyeItemMixin.java b/src/main/java/org/spongepowered/common/mixin/core/item/EnderEyeItemMixin.java\nindex 849e98bb6..a85a8fc0d 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/item/EnderEyeItemMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/item/EnderEyeItemMixin.java\n", "chunk": "@@ -115,7 +115,7 @@\n     @SuppressWarnings(\"Duplicates\")\n     @Surrogate\n     private void impl$ThrowForPreEvent(final World worldIn, final PlayerEntity playerIn, final Hand handIn,\n-                                       final CallbackInfoReturnable<ActionResult<ItemStack>> cir, final ItemStack used, @Nullable final BlockPos targetPos) {\n+        final CallbackInfoReturnable<ActionResult<ItemStack>> cir, final ItemStack used, @Nullable final BlockPos targetPos) {\n         if (targetPos != null && !((WorldBridge) worldIn).bridge$isFake() && ShouldFire.CONSTRUCT_ENTITY_EVENT_PRE) {\n             final Vector3d targetPosition = new Vector3d(playerIn.posX, playerIn.posY + (double) (playerIn.getSize(playerIn.getPose()).height / 2.0F), playerIn.posZ);\n             final Transform<org.spongepowered.api.world.World> targetTransform = new Transform<>((org.spongepowered.api.world.World) worldIn,\n", "next_change": null}]}}, {"oid": "faedb98e0ab5649b21f5eee1e68b19b87fde176d", "url": "https://github.com/SpongePowered/Sponge/commit/faedb98e0ab5649b21f5eee1e68b19b87fde176d", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-02-27T02:58:14Z", "type": "forcePushed"}, {"oid": "4072dd28f85af913ae64f59a2af44b62a5f10a76", "url": "https://github.com/SpongePowered/Sponge/commit/4072dd28f85af913ae64f59a2af44b62a5f10a76", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-02-27T02:58:47Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNzc2NA==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r384917764", "body": "Yes, this is still necessary. Since the logic is currently looking at the passed in class, we want to be able to ask if the class is either an interface OR an extended class of the base class.", "bodyText": "Yes, this is still necessary. Since the logic is currently looking at the passed in class, we want to be able to ask if the class is either an interface OR an extended class of the base class.", "bodyHTML": "<p dir=\"auto\">Yes, this is still necessary. Since the logic is currently looking at the passed in class, we want to be able to ask if the class is either an interface OR an extended class of the base class.</p>", "author": "gabizou", "createdAt": "2020-02-27T05:18:07Z", "path": "src/main/java/org/spongepowered/common/mixin/core/util/ClassInheritanceMultiMapMixin.java", "diffHunk": "@@ -34,9 +34,13 @@\n \n     /**\n      * @author Minecrell\n+     * @author i509VCB - February 23rd, 2020 - 1.14.4\n+     *\n+     * @todo Is this even necessary anymore?", "originalCommit": "4072dd28f85af913ae64f59a2af44b62a5f10a76", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxODEwOQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r384918109", "bodyText": "Will do once I pack since I have to go to Dallas tomorrow", "author": "i509VCB", "createdAt": "2020-02-27T05:19:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNzc2NA=="}], "type": "inlineReview", "revised_code": {"commit": "48db6ff6114610d70623f03587250a0a6fa96f40", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/util/ClassInheritanceMultiMapMixin.java b/src/main/java/org/spongepowered/common/mixin/core/util/ClassInheritanceMultiMapMixin.java\nindex b6e819d73..9497c5ec8 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/util/ClassInheritanceMultiMapMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/util/ClassInheritanceMultiMapMixin.java\n", "chunk": "@@ -36,8 +36,6 @@\n      * @author Minecrell\n      * @author i509VCB - February 23rd, 2020 - 1.14.4\n      *\n-     * @todo Is this even necessary anymore?\n-     *\n      * @reason Adds support for finding values by searching for one of their interfaces.\n      */\n     @Redirect(method = \"func_219790_a\",\n", "next_change": null}]}}, {"oid": "48db6ff6114610d70623f03587250a0a6fa96f40", "url": "https://github.com/SpongePowered/Sponge/commit/48db6ff6114610d70623f03587250a0a6fa96f40", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-02-27T05:31:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc2NzY3OA==", "url": "https://github.com/SpongePowered/Sponge/pull/2514#discussion_r390767678", "body": "Undo this change, whiteline noise.", "bodyText": "Undo this change, whiteline noise.", "bodyHTML": "<p dir=\"auto\">Undo this change, whiteline noise.</p>", "author": "gabizou", "createdAt": "2020-03-11T06:31:01Z", "path": "src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java", "diffHunk": "@@ -170,7 +170,6 @@\n     @Shadow private boolean checkTotemDeathProtection(final DamageSource p_190628_1_) {\n         return false; // SHADOWED\n     }\n-", "originalCommit": "48db6ff6114610d70623f03587250a0a6fa96f40", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "fae0c588dc96201013b793349ca6fcb541a1741b", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java b/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\nindex 115d54e11..02b403190 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\n", "chunk": "@@ -140,36 +123,31 @@\n     @Shadow public abstract void resetActiveHand();\n     @Shadow public abstract int getItemInUseCount();\n     @Shadow public abstract float getAbsorptionAmount();\n-    @Shadow public abstract float getHealth();\n-    @Shadow public abstract float getMaxHealth();\n-    @Shadow public abstract boolean isPotionActive(Effect potion);\n+    @Shadow public abstract float shadow$getHealth();\n+    @Shadow public abstract float shadow$getMaxHealth();\n+    @Shadow public abstract boolean shadow$isPotionActive(Effect potion);\n     @Shadow public abstract boolean isOnLadder();\n-    @Shadow protected abstract boolean canBlockDamageSource(DamageSource p_184583_1_);\n-    @Shadow public abstract IAttributeInstance getEntityAttribute(IAttribute attribute);\n+    @Shadow protected abstract boolean shadow$canBlockDamageSource(DamageSource p_184583_1_);\n     @Shadow public abstract ItemStack getItemStackFromSlot(EquipmentSlotType slotIn);\n     @Shadow public abstract ItemStack getHeldItem(Hand hand);\n     @Shadow public abstract ItemStack shadow$getHeldItemMainhand();\n     @Shadow public abstract CombatTracker getCombatTracker();\n-    @Shadow @Nullable public abstract LivingEntity getAttackingEntity();\n-    @Shadow public abstract Random getRNG();\n     @Shadow public void onKillCommand() { }\n-    @Shadow public abstract AbstractAttributeMap getAttributeMap();\n     @Shadow public abstract Hand getActiveHand();\n-    @Shadow protected abstract void shadow$onDeathUpdate();\n     @Shadow protected abstract void markVelocityChanged();\n     @Shadow protected abstract void damageShield(float p_184590_1_);\n-    @Shadow protected abstract void playHurtSound(DamageSource p_184581_1_);\n+    @Shadow protected abstract void shadow$playHurtSound(DamageSource p_184581_1_);\n     @Shadow protected abstract void blockUsingShield(LivingEntity p_190629_1_);\n-    @Shadow protected abstract void dropLoot(boolean wasRecentlyHit, int lootingModifier, DamageSource source);\n-    @Shadow protected abstract int getExperiencePoints(PlayerEntity attackingPlayer);\n     @Shadow protected abstract float getSoundVolume();\n     @Shadow protected abstract float getSoundPitch();\n-    @Shadow protected abstract boolean canDropLoot();\n     @Shadow protected abstract SoundEvent getDeathSound();\n     @Shadow public abstract boolean shadow$isSleeping();\n-    @Shadow private boolean checkTotemDeathProtection(final DamageSource p_190628_1_) {\n+    @Shadow private boolean shadow$checkTotemDeathProtection(final DamageSource p_190628_1_) {\n         return false; // SHADOWED\n     }\n+    @Shadow public abstract void shadow$onDeath(DamageSource cause);\n+    @Shadow protected abstract void shadow$addItemParticles(ItemStack stack, int count);\n+    @Shadow public abstract void shadow$wakeUp();\n     @Shadow protected abstract void shadow$spawnDrops(DamageSource damageSourceIn);\n     // @formatter:on\n \n", "next_change": {"commit": "d54e74d7e323bdd8673afe7d2e963fe72976a4d3", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java b/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\nindex 02b403190..2156974a8 100644\n--- a/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\n+++ b/src/main/java/org/spongepowered/common/mixin/core/entity/LivingEntityMixin.java\n", "chunk": "@@ -148,7 +148,6 @@\n     @Shadow public abstract void shadow$onDeath(DamageSource cause);\n     @Shadow protected abstract void shadow$addItemParticles(ItemStack stack, int count);\n     @Shadow public abstract void shadow$wakeUp();\n-    @Shadow protected abstract void shadow$spawnDrops(DamageSource damageSourceIn);\n     // @formatter:on\n \n     private int impl$maxAir = this.shadow$getMaxAir();\n", "next_change": null}]}}]}}, {"oid": "fae0c588dc96201013b793349ca6fcb541a1741b", "url": "https://github.com/SpongePowered/Sponge/commit/fae0c588dc96201013b793349ca6fcb541a1741b", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-03-11T15:46:36Z", "type": "forcePushed"}, {"oid": "d54e74d7e323bdd8673afe7d2e963fe72976a4d3", "url": "https://github.com/SpongePowered/Sponge/commit/d54e74d7e323bdd8673afe7d2e963fe72976a4d3", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-03-11T15:52:48Z", "type": "commit"}, {"oid": "d54e74d7e323bdd8673afe7d2e963fe72976a4d3", "url": "https://github.com/SpongePowered/Sponge/commit/d54e74d7e323bdd8673afe7d2e963fe72976a4d3", "message": "A couple more core plugin fixes and style fixes", "committedDate": "2020-03-11T15:52:48Z", "type": "forcePushed"}]}