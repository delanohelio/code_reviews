{"pr_number": 2609, "pr_title": "API8 fixes", "pr_author": "Faithcaio", "pr_createdAt": "2020-05-12T19:41:48Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/2609", "timeline": [{"oid": "727b1492deb57948118d4fad818f132f35386867", "url": "https://github.com/SpongePowered/Sponge/commit/727b1492deb57948118d4fad818f132f35386867", "message": "fix SqlServiceImpl", "committedDate": "2020-05-12T16:37:11Z", "type": "commit"}, {"oid": "5a275e0d51bc421019fa4106c63edce5d16c1425", "url": "https://github.com/SpongePowered/Sponge/commit/5a275e0d51bc421019fa4106c63edce5d16c1425", "message": "fix incompatible types compile errors", "committedDate": "2020-05-12T16:37:11Z", "type": "commit"}, {"oid": "b72c3a17d66dac42b5a2c7f0890a041a0260e488", "url": "https://github.com/SpongePowered/Sponge/commit/b72c3a17d66dac42b5a2c7f0890a041a0260e488", "message": "fix SpongeTriggerBuilder missing from()", "committedDate": "2020-05-12T16:37:11Z", "type": "commit"}, {"oid": "cd1d9c0706c33e126a132b7a603e9f1c729f81d5", "url": "https://github.com/SpongePowered/Sponge/commit/cd1d9c0706c33e126a132b7a603e9f1c729f81d5", "message": "Block DyeColors", "committedDate": "2020-05-12T16:37:11Z", "type": "commit"}, {"oid": "0ab27d55513581256e15df4da3d5cdaa7a728e9c", "url": "https://github.com/SpongePowered/Sponge/commit/0ab27d55513581256e15df4da3d5cdaa7a728e9c", "message": "fix most EntityUtil compile errors\nTeleport code still needs a thorough check", "committedDate": "2020-05-12T18:34:52Z", "type": "commit"}, {"oid": "b8e281caacd7d10acf93bcdb34ccbdf380162080", "url": "https://github.com/SpongePowered/Sponge/commit/b8e281caacd7d10acf93bcdb34ccbdf380162080", "message": "fix Tracker PhaseStates", "committedDate": "2020-05-12T18:37:35Z", "type": "commit"}, {"oid": "ab5ddcf472505037671b20a83ecb30c30ce78da3", "url": "https://github.com/SpongePowered/Sponge/commit/ab5ddcf472505037671b20a83ecb30c30ce78da3", "message": "fix PacketPhaseUtil main hand slot restoration", "committedDate": "2020-05-12T18:58:53Z", "type": "commit"}, {"oid": "e1605c180062e3d3e3144cbc654c68bfc160ebed", "url": "https://github.com/SpongePowered/Sponge/commit/e1605c180062e3d3e3144cbc654c68bfc160ebed", "message": "fix SpongeEntityDamageSourceBuilder", "committedDate": "2020-05-12T19:15:32Z", "type": "commit"}, {"oid": "114ecf0142e7d251731ee967790e4eb4a42935be", "url": "https://github.com/SpongePowered/Sponge/commit/114ecf0142e7d251731ee967790e4eb4a42935be", "message": "notifier is data", "committedDate": "2020-05-12T19:18:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE0MDM0Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424140346", "body": "this is negotiated based on the mixin  and damage source to type provider.", "bodyText": "this is negotiated based on the mixin  and damage source to type provider.", "bodyHTML": "<p dir=\"auto\">this is negotiated based on the mixin  and damage source to type provider.</p>", "author": "gabizou", "createdAt": "2020-05-13T02:37:22Z", "path": "src/main/java/org/spongepowered/common/event/damage/SpongeEntityDamageSourceBuilder.java", "diffHunk": "@@ -49,8 +49,8 @@ public SpongeEntityDamageSourceBuilder entity(final Entity entity) {\n     public EntityDamageSource build() throws IllegalStateException {\n         checkState(this.damageType != null, \"Damage type cannot be null!\");\n         checkState(this.reference.get() != null);\n-        final net.minecraft.util.EntityDamageSource damageSource =\n-            new net.minecraft.util.EntityDamageSource(this.damageType.getId(), (net.minecraft.entity.Entity) this.reference.get());\n+        final net.minecraft.util.EntityDamageSource damageSource = // TODO damageType String is used for the translation key!", "originalCommit": "114ecf0142e7d251731ee967790e4eb4a42935be", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "87f12af8187c1c0012793f93a53f23f1498a9e21", "url": "https://github.com/SpongePowered/Sponge/commit/87f12af8187c1c0012793f93a53f23f1498a9e21", "message": "fix SmeltingRecipe mixin", "committedDate": "2020-05-13T18:09:54Z", "type": "commit"}, {"oid": "80c816e1aead47c32b5ffd84e03fd99f4a75a8f5", "url": "https://github.com/SpongePowered/Sponge/commit/80c816e1aead47c32b5ffd84e03fd99f4a75a8f5", "message": "remove SpongeUser raw data", "committedDate": "2020-05-13T18:10:18Z", "type": "commit"}, {"oid": "6160b635c9b939b79f879290c1eda656df7f0bbe", "url": "https://github.com/SpongePowered/Sponge/commit/6160b635c9b939b79f879290c1eda656df7f0bbe", "message": "a bunch of easy mixin fixes", "committedDate": "2020-05-13T19:55:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MTYyNA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424881624", "body": "Do we not even have one of these from before?", "bodyText": "Do we not even have one of these from before?", "bodyHTML": "<p dir=\"auto\">Do we not even have one of these from before?</p>", "author": "gabizou", "createdAt": "2020-05-14T05:38:25Z", "path": "src/accessors/java/org/spongepowered/common/accessor/entity/player/ServerPlayerEntityAccessor.java", "diffHunk": "@@ -22,33 +22,15 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package org.spongepowered.common.mixin.api.mcp.item;\n+package org.spongepowered.common.accessor.entity.player;\n \n-import net.minecraft.entity.merchant.IMerchant;\n-import net.minecraft.item.MerchantOffer;\n-import net.minecraft.item.MerchantOffers;\n-import org.spongepowered.api.item.merchant.Merchant;\n-import org.spongepowered.api.item.merchant.TradeOffer;\n-import org.spongepowered.api.item.merchant.TradeOfferListMutator;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.util.math.Vec3d;\n import org.spongepowered.asm.mixin.Mixin;\n-import org.spongepowered.common.item.util.TradeOfferUtil;\n-import java.util.List;\n-import java.util.Random;\n+import org.spongepowered.asm.mixin.gen.Accessor;\n \n-@Mixin(MerchantOffers.class)\n-public interface MerchantOffersMixin_API extends TradeOfferListMutator {\n-\n-    @Override\n-    default void accept(final Merchant owner, final List<TradeOffer> tradeOffers, final Random random) {\n-        final MerchantOffers tempList = new MerchantOffers();\n-        for (final TradeOffer offer : tradeOffers) {\n-            tempList.add(TradeOfferUtil.toNative(offer));\n-        }\n-        addMerchantRecipe((IMerchant) owner, tempList, random);\n-        tradeOffers.clear();\n-        for (final MerchantOffer recipe : tempList) {\n-            tradeOffers.add(TradeOfferUtil.fromNative(recipe));\n-        }\n-    }\n+@Mixin(ServerPlayerEntity.class)\n+public interface ServerPlayerEntityAccessor {", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIxMDI2NQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r425210265", "bodyText": "I dont see another accessor for ServerPlayerEntity", "author": "Faithcaio", "createdAt": "2020-05-14T15:06:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MTYyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MTg2MA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424881860", "body": "I'd rather\r\n```suggestion\r\n    Optional<DyeColor> bridge$getDyeColor();\r\n```\r\n\r\n", "bodyText": "I'd rather\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Nullable DyeColor bridge$getDyeColor();\n          \n          \n            \n                Optional<DyeColor> bridge$getDyeColor();", "bodyHTML": "<p dir=\"auto\">I'd rather</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">@Nullable</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">DyeColor</span> bridge$getDyeColor();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\"><span class=\"x x-first x-last\">Optional&lt;</span><span class=\"pl-smi\">DyeColor</span><span class=\"x x-first x-last\">&gt;</span></span> bridge$getDyeColor();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:39:16Z", "path": "src/main/java/org/spongepowered/common/bridge/block/DyeColorBlockBridge.java", "diffHunk": "@@ -26,7 +26,10 @@\n \n import net.minecraft.item.DyeColor;\n \n-public interface DyeableBlockBridge {\n+import javax.annotation.Nullable;\n+\n+public interface DyeColorBlockBridge {\n \n     void bridge$setDyeColor(DyeColor dyeColor);\n+    @Nullable DyeColor bridge$getDyeColor();", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjA2OQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424882069", "body": "```suggestion\r\n        final Stream<DataProvider> stream = this.dataProviders.keySet().stream()\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Stream<DataProvider> stream = this.dataProviders.keySet().stream()\n          \n          \n            \n                    final Stream<DataProvider> stream = this.dataProviders.keySet().stream()", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">DataProvider</span>&gt;</span> stream <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>dataProviders<span class=\"pl-k\">.</span>keySet()<span class=\"pl-k\">.</span>stream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">DataProvider</span>&gt;</span> stream <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>dataProviders<span class=\"pl-k\">.</span>keySet()<span class=\"pl-k\">.</span>stream()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:40:03Z", "path": "src/main/java/org/spongepowered/common/data/provider/DataProviderRegistry.java", "diffHunk": "@@ -100,10 +101,10 @@ private static boolean filterHolderType(DataProvider<?,?> provider, Class<?> hol\n     }\n \n     private DataProviderLookup loadProviderLookup(Class<?> holderType) {\n-        return new DataProviderLookup(this.dataProviders.keySet().stream()\n-                .map(key -> this.getProvider(key, holderType))\n-                .filter(provider -> !(provider instanceof EmptyDataProvider))\n-                .collect(Collectors.toMap(DataProvider::getKey, Function.identity())));\n+        Stream<DataProvider> stream = this.dataProviders.keySet().stream()", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjQ5Mw==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424882493", "body": "This is really janky to read. Either collect on the stream above or declare a new variable to pass in.", "bodyText": "This is really janky to read. Either collect on the stream above or declare a new variable to pass in.", "bodyHTML": "<p dir=\"auto\">This is really janky to read. Either collect on the stream above or declare a new variable to pass in.</p>", "author": "gabizou", "createdAt": "2020-05-14T05:41:26Z", "path": "src/main/java/org/spongepowered/common/data/provider/DataProviderRegistry.java", "diffHunk": "@@ -100,10 +101,10 @@ private static boolean filterHolderType(DataProvider<?,?> provider, Class<?> hol\n     }\n \n     private DataProviderLookup loadProviderLookup(Class<?> holderType) {\n-        return new DataProviderLookup(this.dataProviders.keySet().stream()\n-                .map(key -> this.getProvider(key, holderType))\n-                .filter(provider -> !(provider instanceof EmptyDataProvider))\n-                .collect(Collectors.toMap(DataProvider::getKey, Function.identity())));\n+        Stream<DataProvider> stream = this.dataProviders.keySet().stream()\n+                .map(key -> this.getProvider((Key) key, holderType))\n+                .filter(provider -> !(provider instanceof EmptyDataProvider));\n+        return new DataProviderLookup(stream.collect(Collectors.toMap(p -> (Key<?>) p.getKey(), p -> (DataProvider<?, ?>) p)));", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwMjY0Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r425202646", "bodyText": "Collection on the stream caused incompatible types compile errors", "author": "Faithcaio", "createdAt": "2020-05-14T14:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjQ5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjUyNw==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424882527", "body": "final", "bodyText": "final", "bodyHTML": "<p dir=\"auto\">final</p>", "author": "gabizou", "createdAt": "2020-05-14T05:41:34Z", "path": "src/main/java/org/spongepowered/common/data/provider/DataProviderRegistry.java", "diffHunk": "@@ -143,10 +144,9 @@ public DataProviderLookup getProviderLookup(Class<?> dataHolderType) {\n      */\n     public DataProviderLookup buildLookup(Predicate<DataProvider<?,?>> predicate) {\n         //noinspection unchecked,rawtypes\n-        final Map<Key<?>, DataProvider<?,?>> dataProviders = this.dataProviders.keySet().stream()\n-                .map(key -> buildDelegateProvider(key, (List) this.dataProviders.get(key).stream().filter(predicate)))\n-                .collect(Collectors.toMap(DataProvider::getKey, Function.identity()));\n-        return new DataProviderLookup(dataProviders);\n+        Stream<DataProvider> stream = this.dataProviders.keySet().stream()", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjU2OA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424882568", "body": "Same as before, janky to read..", "bodyText": "Same as before, janky to read..", "bodyHTML": "<p dir=\"auto\">Same as before, janky to read..</p>", "author": "gabizou", "createdAt": "2020-05-14T05:41:43Z", "path": "src/main/java/org/spongepowered/common/data/provider/DataProviderRegistry.java", "diffHunk": "@@ -143,10 +144,9 @@ public DataProviderLookup getProviderLookup(Class<?> dataHolderType) {\n      */\n     public DataProviderLookup buildLookup(Predicate<DataProvider<?,?>> predicate) {\n         //noinspection unchecked,rawtypes\n-        final Map<Key<?>, DataProvider<?,?>> dataProviders = this.dataProviders.keySet().stream()\n-                .map(key -> buildDelegateProvider(key, (List) this.dataProviders.get(key).stream().filter(predicate)))\n-                .collect(Collectors.toMap(DataProvider::getKey, Function.identity()));\n-        return new DataProviderLookup(dataProviders);\n+        Stream<DataProvider> stream = this.dataProviders.keySet().stream()\n+                .map(key -> buildDelegateProvider((Key) key, (List) this.dataProviders.get(key).stream().filter(predicate)));\n+        return new DataProviderLookup(stream.collect(Collectors.toMap(p -> (Key<?>) p.getKey(), p -> (DataProvider<?, ?>) p)));", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MjkxNA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424882914", "body": "```suggestion\r\n        final Item item = dataHolder.getItem();\r\n        if (item instanceof BlockItem) {\r\n            final Block block = ((BlockItem) item).getBlock();\r\n            return ((DyeColorBlockBridge) block)..bridge$getDyeColor();\r\n```\r\nThis way you have the optional already provided by the bridge implementation", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Item item = dataHolder.getItem();\n          \n          \n            \n                    if (item instanceof BlockItem) {\n          \n          \n            \n                        Block block = ((BlockItem) item).getBlock();\n          \n          \n            \n                        net.minecraft.item.DyeColor color = ((DyeColorBlockBridge) block).bridge$getDyeColor();\n          \n          \n            \n                        return Optional.ofNullable((DyeColor) (Object) color);\n          \n          \n            \n                    final Item item = dataHolder.getItem();\n          \n          \n            \n                    if (item instanceof BlockItem) {\n          \n          \n            \n                        final Block block = ((BlockItem) item).getBlock();\n          \n          \n            \n                        return ((DyeColorBlockBridge) block)..bridge$getDyeColor();\n          \n      \n    \n    \n  \n\nThis way you have the optional already provided by the bridge implementation", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Item</span> item <span class=\"pl-k\">=</span> dataHolder<span class=\"pl-k\">.</span>getItem();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (item <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">BlockItem</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Block</span> block <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">BlockItem</span>) item)<span class=\"pl-k\">.</span>getBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">net.minecraft.item<span class=\"pl-k\">.</span>DyeColor</span> color <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">DyeColorBlockBridge</span>) block)<span class=\"pl-k\">.</span>bridge$getDyeColor();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>ofNullable((<span class=\"pl-smi\">DyeColor</span>) (<span class=\"pl-smi\">Object</span>) color);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Item</span> item <span class=\"pl-k\">=</span> dataHolder<span class=\"pl-k\">.</span>getItem();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (item <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">BlockItem</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Block</span> block <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">BlockItem</span>) item)<span class=\"pl-k\">.</span>getBlock();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> ((<span class=\"pl-smi\">DyeColorBlockBridge</span>) block)<span class=\"pl-c1\">.</span><span class=\"pl-k\">.</span>bridge$getDyeColor();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This way you have the optional already provided by the bridge implementation</p>", "author": "gabizou", "createdAt": "2020-05-14T05:42:49Z", "path": "src/main/java/org/spongepowered/common/data/provider/item/stack/ItemStackDyeColorProvider.java", "diffHunk": "@@ -40,17 +41,19 @@ public ItemStackDyeColorProvider() {\n         super(Keys.DYE_COLOR);\n     }\n \n-    /**\n-     * Maybe try mixin injection in {@link Block.Properties#create(Material, net.minecraft.item.DyeColor)}\n-     * to capture DyeColor.\n-     */\n     @Override\n     protected Optional<DyeColor> getFrom(ItemStack dataHolder) {\n-        return ((DyeColorItemBrige)dataHolder).bridge$getDyeColor();\n+        Item item = dataHolder.getItem();\n+        if (item instanceof BlockItem) {\n+            Block block = ((BlockItem) item).getBlock();\n+            net.minecraft.item.DyeColor color = ((DyeColorBlockBridge) block).bridge$getDyeColor();\n+            return Optional.ofNullable((DyeColor) (Object) color);", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzA3OA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883078", "body": "Gonna need a class level suppress warnings for raw usage", "bodyText": "Gonna need a class level suppress warnings for raw usage", "bodyHTML": "<p dir=\"auto\">Gonna need a class level suppress warnings for raw usage</p>", "author": "gabizou", "createdAt": "2020-05-14T05:43:24Z", "path": "src/main/java/org/spongepowered/common/data/util/StateHelper.java", "diffHunk": "@@ -35,7 +35,7 @@\n     public static <O, S extends StateHolder<O, S>> S copyStatesFrom(S original, StateHolder<?,?> from) {\n         for (final Map.Entry<IProperty<?>, Comparable<?>> entry : from.getValues().entrySet()) {\n             if (original.has(entry.getKey())) {\n-                original = (S) original.with(entry.getKey(), (Comparable) entry.getValue());\n+                original = (S) original.with((IProperty) entry.getKey(), (Comparable) entry.getValue());", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzI3Mw==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883273", "body": "```suggestion\r\n            final DimensionType fromType = fromWorld.getDimension().getType();\r\n            final DimensionType toType = toWorld.getDimension().getType();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DimensionType fromType = fromWorld.getDimension().getType();\n          \n          \n            \n                        DimensionType toType = toWorld.getDimension().getType();\n          \n          \n            \n                        final DimensionType fromType = fromWorld.getDimension().getType();\n          \n          \n            \n                        final DimensionType toType = toWorld.getDimension().getType();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">DimensionType</span> fromType <span class=\"pl-k\">=</span> fromWorld<span class=\"pl-k\">.</span>getDimension()<span class=\"pl-k\">.</span>getType();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">DimensionType</span> toType <span class=\"pl-k\">=</span> toWorld<span class=\"pl-k\">.</span>getDimension()<span class=\"pl-k\">.</span>getType();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">DimensionType</span> fromType <span class=\"pl-k\">=</span> fromWorld<span class=\"pl-k\">.</span>getDimension()<span class=\"pl-k\">.</span>getType();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">DimensionType</span> toType <span class=\"pl-k\">=</span> toWorld<span class=\"pl-k\">.</span>getDimension()<span class=\"pl-k\">.</span>getType();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:44:06Z", "path": "src/main/java/org/spongepowered/common/entity/EntityUtil.java", "diffHunk": "@@ -406,72 +407,69 @@ public static ServerPlayerEntity transferPlayerToWorld(final ServerPlayerEntity\n             toWorld = (ServerWorld) event.getToWorld();\n         }\n \n-        final int dimensionId;\n+        final DimensionType dimensionId;\n \n         if (!((ServerPlayerEntityBridge) player).bridge$usesCustomClient()) {\n \n             // Check if the world we're going to matches our provider type. if so, we need to send a fake respawn packet to clear chunks\n-            final int fromClientDimId = WorldManager.getClientDimensionId(player, fromWorld);\n-            final int toClientDimId = WorldManager.getClientDimensionId(player, toWorld);\n+            DimensionType fromType = fromWorld.getDimension().getType();\n+            DimensionType toType = toWorld.getDimension().getType();", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzQ0Mg==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883442", "body": "@Zidane is this right with dimension handling? I'd imagine the type could be the same but the dimension id assigned by the WorldManager could be different?", "bodyText": "@Zidane is this right with dimension handling? I'd imagine the type could be the same but the dimension id assigned by the WorldManager could be different?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Zidane/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Zidane\">@Zidane</a> is this right with dimension handling? I'd imagine the type could be the same but the dimension id assigned by the WorldManager could be different?</p>", "author": "gabizou", "createdAt": "2020-05-14T05:44:41Z", "path": "src/main/java/org/spongepowered/common/entity/EntityUtil.java", "diffHunk": "@@ -406,72 +407,69 @@ public static ServerPlayerEntity transferPlayerToWorld(final ServerPlayerEntity\n             toWorld = (ServerWorld) event.getToWorld();\n         }\n \n-        final int dimensionId;\n+        final DimensionType dimensionId;\n \n         if (!((ServerPlayerEntityBridge) player).bridge$usesCustomClient()) {\n \n             // Check if the world we're going to matches our provider type. if so, we need to send a fake respawn packet to clear chunks\n-            final int fromClientDimId = WorldManager.getClientDimensionId(player, fromWorld);\n-            final int toClientDimId = WorldManager.getClientDimensionId(player, toWorld);\n+            DimensionType fromType = fromWorld.getDimension().getType();\n+            DimensionType toType = toWorld.getDimension().getType();\n \n-            if (fromClientDimId == toClientDimId) {\n-                final int fakeDimId;\n-                switch (fromClientDimId) {\n+            if (fromType == toType) {", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE5OTM4OQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r425199389", "bodyText": "This is to send a fake respawn packet to vanilla clients in case the dimension type is not changing.\nThis entire teleport things needs extensive testing anyways once we can actually start a server.\nMaybe its not needed anymore?", "author": "Faithcaio", "createdAt": "2020-05-14T14:52:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNDU1Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r425204556", "bodyText": "No you still have to fake sent a dimension change else you must send an unload packet for every chunk.\nThat is not including the other fun things the client sets based on the dimension.", "author": "Zidane", "createdAt": "2020-05-14T14:59:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzQ0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MjkwNw==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r425372907", "bodyText": "I think this is still mentioned in the protocol wiki", "author": "i509VCB", "createdAt": "2020-05-14T19:16:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzQ0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzUyMQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883521", "body": "```suggestion\r\n            final Vec3d enteredNetherPosition = ((ServerPlayerEntityAccessor) player).accessor$getEnteredNetherPosition();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Vec3d enteredNetherPosition = ((ServerPlayerEntityAccessor) player).accessor$getEnteredNetherPosition();\n          \n          \n            \n                        final Vec3d enteredNetherPosition = ((ServerPlayerEntityAccessor) player).accessor$getEnteredNetherPosition();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Vec3d</span> enteredNetherPosition <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">ServerPlayerEntityAccessor</span>) player)<span class=\"pl-k\">.</span>accessor$getEnteredNetherPosition();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">Vec3d</span> enteredNetherPosition <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">ServerPlayerEntityAccessor</span>) player)<span class=\"pl-k\">.</span>accessor$getEnteredNetherPosition();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:44:58Z", "path": "src/main/java/org/spongepowered/common/entity/EntityUtil.java", "diffHunk": "@@ -406,72 +407,69 @@ public static ServerPlayerEntity transferPlayerToWorld(final ServerPlayerEntity\n             toWorld = (ServerWorld) event.getToWorld();\n         }\n \n-        final int dimensionId;\n+        final DimensionType dimensionId;\n \n         if (!((ServerPlayerEntityBridge) player).bridge$usesCustomClient()) {\n \n             // Check if the world we're going to matches our provider type. if so, we need to send a fake respawn packet to clear chunks\n-            final int fromClientDimId = WorldManager.getClientDimensionId(player, fromWorld);\n-            final int toClientDimId = WorldManager.getClientDimensionId(player, toWorld);\n+            DimensionType fromType = fromWorld.getDimension().getType();\n+            DimensionType toType = toWorld.getDimension().getType();\n \n-            if (fromClientDimId == toClientDimId) {\n-                final int fakeDimId;\n-                switch (fromClientDimId) {\n+            if (fromType == toType) {\n+                final DimensionType fakeDim;\n+                switch (fromType.getId()) {\n                     case 1:\n-                        fakeDimId = -1;\n+                        fakeDim = DimensionType.THE_NETHER;\n                         break;\n                     case 0:\n-                        fakeDimId = 1;\n+                        fakeDim = DimensionType.THE_END;\n                         break;\n                     default:\n-                        fakeDimId = 0;\n+                        fakeDim = DimensionType.OVERWORLD;\n                         break;\n                 }\n \n-                player.connection.sendPacket(new SRespawnPacket(fakeDimId, toWorld.getDifficulty(), toWorld.getWorldType(),\n-                        player.interactionManager.getGameType()));\n+                player.connection.sendPacket(new SRespawnPacket(fakeDim, toWorld.getWorldType(), player.interactionManager.getGameType()));\n             }\n \n-            dimensionId = toClientDimId;\n+            dimensionId = toType;\n         } else {\n             // We're a custom client, their problem to handle the client provider\n-            WorldManager.sendDimensionRegistration(player, toWorld.dimension);\n+            NetworkUtil.sendDimensionRegistration(player, toWorld.dimension);\n \n-            dimensionId = ((ServerWorldBridge) toWorld).bridge$getDimensionId();\n+            dimensionId = toWorld.getDimension().getType();\n         }\n \n-        player.connection.sendPacket(new SRespawnPacket(dimensionId, toWorld.getDifficulty(), toWorld.getWorldType(),\n-            player.interactionManager.getGameType()));\n+        player.connection.sendPacket(new SRespawnPacket(dimensionId, toWorld.getWorldType(), player.interactionManager.getGameType()));\n+\n \n-        player.dimension = ((ServerWorldBridge) toWorld).bridge$getDimensionId(); // If a Vanilla client, dimensionId could be a provider id.\n+        player.dimension = toWorld.getDimension().getType(); // If a Vanilla client, dimensionId could be a provider id.\n         player.setWorld(toWorld);\n \n         playerList.updatePermissionLevel(player);\n \n-        fromWorld.removeEntityDangerously(player);\n+        fromWorld.removePlayer(player);\n         player.removed = false;\n \n         final Vector3d position = toTransform.getPosition();\n         player.setLocationAndAngles(position.getX(), position.getY(), position.getZ(), (float) toTransform.getYaw(), (float) toTransform.getPitch());\n \n         try (final PhaseContext<?> ignored = EntityPhase.State.CHANGING_DIMENSION.createPhaseContext(PhaseTracker.SERVER).setTargetWorld(toWorld).buildAndSwitch()) {\n-            toWorld.addEntity0(player);\n-            toWorld.updateEntityWithOptionalForce(player, false);\n+            toWorld.addEntity(player);\n+            toWorld.updateEntity(player);\n         }\n \n-        // preparePlayer\n-        fromWorld.getPlayerChunkMap().removePlayer(player);\n-        toWorld.getPlayerChunkMap().addPlayer(player);\n+        toWorld.chunkCheck(player);\n \n-        final Vector3i toChunkPosition = toTransform.getLocation().getChunkPosition();\n-        toWorld.getChunkProvider().provideChunk(toChunkPosition.getX(), toChunkPosition.getZ());\n+        toWorld.getChunkAt(VecHelper.toBlockPos(toTransform.getPosition()));\n \n         if (event instanceof MoveEntityEvent.Teleport.Portal) {\n             CriteriaTriggers.CHANGED_DIMENSION.trigger(player, fromWorld.dimension.getType(), toWorld.dimension.getType());\n \n-            if (fromWorld.dimension.getType() == DimensionType.NETHER && toWorld.dimension.getType() == DimensionType.OVERWORLD\n-                && player.getEnteredNetherPosition() != null) {\n-                CriteriaTriggers.NETHER_TRAVEL.trigger(player, player.getEnteredNetherPosition());\n+            Vec3d enteredNetherPosition = ((ServerPlayerEntityAccessor) player).accessor$getEnteredNetherPosition();", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzYwMA==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883600", "body": "```suggestion\r\n            final CatalogKey key = ((DimensionTypeBridge) toWorld.dimension.getType()).bridge$getKey();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        CatalogKey key = ((DimensionTypeBridge) toWorld.dimension.getType()).bridge$getKey();\n          \n          \n            \n                        final CatalogKey key = ((DimensionTypeBridge) toWorld.dimension.getType()).bridge$getKey();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">CatalogKey</span> key <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">DimensionTypeBridge</span>) toWorld<span class=\"pl-k\">.</span>dimension<span class=\"pl-k\">.</span>getType())<span class=\"pl-k\">.</span>bridge$getKey();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">CatalogKey</span> key <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">DimensionTypeBridge</span>) toWorld<span class=\"pl-k\">.</span>dimension<span class=\"pl-k\">.</span>getType())<span class=\"pl-k\">.</span>bridge$getKey();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:45:17Z", "path": "src/main/java/org/spongepowered/common/entity/EntityUtil.java", "diffHunk": "@@ -520,30 +516,22 @@ private static InvokingTeleporterContext createInvokingTeleporterPhase(final Ent\n         final Transform fromTransform = sEntity.getTransform();\n         final ServerWorld fromWorld = ((ServerWorld) entity.world);\n \n-        int toDimensionId = ((ServerWorldBridge) toWorld).bridge$getDimensionId();\n-\n-        // Entering End Portal in End goes to Overworld in Vanilla\n-        if (toDimensionId == 1 && fromWorld.dimension instanceof EndDimension) {\n-            toDimensionId = 0;\n-        }\n-\n-        toWorld = mcServer.getWorld(toDimensionId);\n-\n         final Map<String, String> portalAgents =\n             ((WorldInfoBridge) fromWorld.getWorldInfo()).bridge$getConfigAdapter().getConfig().getWorld().getPortalAgents();\n         final String worldName;\n \n         // Check if we're to use a different teleporter for this world\n         if (teleporter.getClass().getName().equals(\"net.minecraft.world.Teleporter\")) {\n-            worldName = portalAgents.get(\"minecraft:default_\" + toWorld.dimension.getType().getName().toLowerCase(Locale.ENGLISH));\n+            CatalogKey key = ((DimensionTypeBridge) toWorld.dimension.getType()).bridge$getKey();", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4MzY3Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883676", "body": "```suggestion\r\n        final World world = ((org.spongepowered.api.entity.Entity) entityIn).getWorld();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    World world = ((org.spongepowered.api.entity.Entity) entityIn).getWorld();\n          \n          \n            \n                    final World world = ((org.spongepowered.api.entity.Entity) entityIn).getWorld();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">World</span> world <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">org.spongepowered.api.entity<span class=\"pl-k\">.</span>Entity</span>) entityIn)<span class=\"pl-k\">.</span>getWorld();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">World</span> world <span class=\"pl-k\">=</span> ((<span class=\"pl-smi\">org.spongepowered.api.entity<span class=\"pl-k\">.</span>Entity</span>) entityIn)<span class=\"pl-k\">.</span>getWorld();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:45:34Z", "path": "src/main/java/org/spongepowered/common/entity/EntityUtil.java", "diffHunk": "@@ -661,18 +649,19 @@ public static boolean isEntityDead(final net.minecraft.entity.Entity entity) {\n \n     public static MoveEntityEvent.Teleport handleDisplaceEntityTeleportEvent(final Entity entityIn, final Location location) {\n         final Transform fromTransform = ((org.spongepowered.api.entity.Entity) entityIn).getTransform();\n-        final Transform toTransform = fromTransform.withPosition(location.getPosition()).withRotation(location.get).setRotation(new Vector3d(entityIn.rotationPitch, entityIn.rotationYaw, 0));\n-        return handleDisplaceEntityTeleportEvent(entityIn, fromTransform, toTransform);\n+        final Transform toTransform = fromTransform.withPosition(location.getPosition()).withRotation(new Vector3d(entityIn.rotationPitch, entityIn.rotationYaw, 0));\n+        return handleDisplaceEntityTeleportEvent(entityIn, fromTransform, toTransform, ((org.spongepowered.api.entity.Entity) entityIn).getWorld(), location.getWorld());\n     }\n \n     public static MoveEntityEvent.Teleport handleDisplaceEntityTeleportEvent(final Entity entityIn, final double posX, final double posY, final double posZ, final float yaw, final float pitch) {\n+        World world = ((org.spongepowered.api.entity.Entity) entityIn).getWorld();", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4Mzg0NQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2609#discussion_r424883845", "body": "```suggestion\r\n    ListenerPhaseContext(final IPhaseState<L> state, final PhaseTracker tracker) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ListenerPhaseContext(final IPhaseState<L> state, PhaseTracker tracker) {\n          \n          \n            \n                ListenerPhaseContext(final IPhaseState<L> state, final PhaseTracker tracker) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    ListenerPhaseContext(<span class=\"pl-k\">final</span> <span class=\"pl-k\">IPhaseState&lt;<span class=\"pl-smi\">L</span>&gt;</span> state, <span class=\"pl-smi\">PhaseTracker</span> tracker) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    ListenerPhaseContext(<span class=\"pl-k\">final</span> <span class=\"pl-k\">IPhaseState&lt;<span class=\"pl-smi\">L</span>&gt;</span> state, <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">PhaseTracker</span> tracker) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-05-14T05:46:12Z", "path": "src/main/java/org/spongepowered/common/event/tracking/phase/plugin/ListenerPhaseContext.java", "diffHunk": "@@ -43,7 +44,7 @@\n     Object object;\n     private CapturePlayer capturePlayer;\n \n-    ListenerPhaseContext(final IPhaseState<L> state) {\n+    ListenerPhaseContext(final IPhaseState<L> state, PhaseTracker tracker) {", "originalCommit": "6160b635c9b939b79f879290c1eda656df7f0bbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22abade9a6ebffdfc2b24cae1d331f938a856e6e", "url": "https://github.com/SpongePowered/Sponge/commit/22abade9a6ebffdfc2b24cae1d331f938a856e6e", "message": "pr comments", "committedDate": "2020-05-14T15:21:00Z", "type": "commit"}, {"oid": "22abade9a6ebffdfc2b24cae1d331f938a856e6e", "url": "https://github.com/SpongePowered/Sponge/commit/22abade9a6ebffdfc2b24cae1d331f938a856e6e", "message": "pr comments", "committedDate": "2020-05-14T15:21:00Z", "type": "forcePushed"}, {"oid": "693c009d60c2010baa4349cf589fb4ec1269b63d", "url": "https://github.com/SpongePowered/Sponge/commit/693c009d60c2010baa4349cf589fb4ec1269b63d", "message": "fix furnace toContainer", "committedDate": "2020-05-14T15:37:12Z", "type": "commit"}, {"oid": "02b58b6e1ab60c010752d1e40e6015d1cd7d9be1", "url": "https://github.com/SpongePowered/Sponge/commit/02b58b6e1ab60c010752d1e40e6015d1cd7d9be1", "message": "fix jukebox mixin", "committedDate": "2020-05-14T15:46:51Z", "type": "commit"}, {"oid": "a54af90024b937b1e027c0d7194ed72ffbae2260", "url": "https://github.com/SpongePowered/Sponge/commit/a54af90024b937b1e027c0d7194ed72ffbae2260", "message": "fix sign TE mixin", "committedDate": "2020-05-14T15:59:18Z", "type": "commit"}, {"oid": "f8236a01a7502a90c7154e5a8e559ca03548e832", "url": "https://github.com/SpongePowered/Sponge/commit/f8236a01a7502a90c7154e5a8e559ca03548e832", "message": "fix SoundEvent Mixin", "committedDate": "2020-05-14T15:59:37Z", "type": "commit"}, {"oid": "020ab7a80eca516a0e3dbc7c266d1f2fce1cf519", "url": "https://github.com/SpongePowered/Sponge/commit/020ab7a80eca516a0e3dbc7c266d1f2fce1cf519", "message": "move invalid Text mixins", "committedDate": "2020-05-14T16:15:00Z", "type": "commit"}, {"oid": "1253924e4907b6c7960f9a61429b15554f043785", "url": "https://github.com/SpongePowered/Sponge/commit/1253924e4907b6c7960f9a61429b15554f043785", "message": "fix dyecolor again", "committedDate": "2020-05-14T16:19:42Z", "type": "commit"}, {"oid": "7203d7d054d91fa47cc94e00b38a05e36f61c3e5", "url": "https://github.com/SpongePowered/Sponge/commit/7203d7d054d91fa47cc94e00b38a05e36f61c3e5", "message": "fix FallingBlock mixin", "committedDate": "2020-05-14T16:44:50Z", "type": "commit"}, {"oid": "97120df10a41979a21b2ca9c8a9b98daec871b7e", "url": "https://github.com/SpongePowered/Sponge/commit/97120df10a41979a21b2ca9c8a9b98daec871b7e", "message": "fix FarmlandBlock mixin", "committedDate": "2020-05-14T16:47:32Z", "type": "commit"}, {"oid": "ef04f9cdf580d283ebfeb06c342b67c82ab2a629", "url": "https://github.com/SpongePowered/Sponge/commit/ef04f9cdf580d283ebfeb06c342b67c82ab2a629", "message": "fix FireBlock mixin targets", "committedDate": "2020-05-14T16:50:25Z", "type": "commit"}, {"oid": "ad4216283b34338c7c86b5ea898c1a865bcb97b2", "url": "https://github.com/SpongePowered/Sponge/commit/ad4216283b34338c7c86b5ea898c1a865bcb97b2", "message": "fix TNTBlock mixin", "committedDate": "2020-05-14T16:53:42Z", "type": "commit"}, {"oid": "e533bd74948068470b1961b9a1cb7c80515a0e90", "url": "https://github.com/SpongePowered/Sponge/commit/e533bd74948068470b1961b9a1cb7c80515a0e90", "message": "fix SpongeUser mixin\nother DataCompoundHolder impls are gone?", "committedDate": "2020-05-14T16:57:57Z", "type": "commit"}, {"oid": "e87fa11d8511652754f8d6ea0e1e615ec66b19e6", "url": "https://github.com/SpongePowered/Sponge/commit/e87fa11d8511652754f8d6ea0e1e615ec66b19e6", "message": "fix ProjectileDispenseBehavior mixin", "committedDate": "2020-05-14T16:59:08Z", "type": "commit"}, {"oid": "44d37326a08a9dd4a47b1a6c930935ab2b9cdfed", "url": "https://github.com/SpongePowered/Sponge/commit/44d37326a08a9dd4a47b1a6c930935ab2b9cdfed", "message": "fix ArmorStandEntity overwrite", "committedDate": "2020-05-14T17:25:18Z", "type": "commit"}, {"oid": "5d87e625bd68b6b9b8b2c2854a8d31eef02e477b", "url": "https://github.com/SpongePowered/Sponge/commit/5d87e625bd68b6b9b8b2c2854a8d31eef02e477b", "message": "not invalid anymore", "committedDate": "2020-05-14T17:31:17Z", "type": "commit"}, {"oid": "34286350a0e48dce562d967a8508ed2de6cf0d84", "url": "https://github.com/SpongePowered/Sponge/commit/34286350a0e48dce562d967a8508ed2de6cf0d84", "message": "partial fix CreeperEntity mixin", "committedDate": "2020-05-14T17:49:03Z", "type": "commit"}, {"oid": "5449564533f935e92943eace33a22620b7be2d33", "url": "https://github.com/SpongePowered/Sponge/commit/5449564533f935e92943eace33a22620b7be2d33", "message": "fix FishingBobberEntity mixin", "committedDate": "2020-05-14T18:21:34Z", "type": "commit"}, {"oid": "809075ce746194f68ad656747a1bb1fb84901364", "url": "https://github.com/SpongePowered/Sponge/commit/809075ce746194f68ad656747a1bb1fb84901364", "message": "fix projectile mixins\ntrying to fix explosion mixins (smoking parameter does not exist)", "committedDate": "2020-05-14T18:28:23Z", "type": "commit"}, {"oid": "dfcddd90acbb87762aadf08de6c80d9d4fa896df", "url": "https://github.com/SpongePowered/Sponge/commit/dfcddd90acbb87762aadf08de6c80d9d4fa896df", "message": "was this a performance fix?", "committedDate": "2020-05-14T18:30:05Z", "type": "commit"}, {"oid": "2ab55fedc8188c92ebd13a7d66672079306f643a", "url": "https://github.com/SpongePowered/Sponge/commit/2ab55fedc8188c92ebd13a7d66672079306f643a", "message": "fix SScoreboardObjectivePacket mixin", "committedDate": "2020-05-14T18:33:33Z", "type": "commit"}, {"oid": "182abdb9d09a10bde33bf0f0fc4866eb38895596", "url": "https://github.com/SpongePowered/Sponge/commit/182abdb9d09a10bde33bf0f0fc4866eb38895596", "message": "mostly fix Scoreboard mixins", "committedDate": "2020-05-14T18:53:04Z", "type": "commit"}, {"oid": "81a3af757159b5491d27f48cc4053a58c55c46e5", "url": "https://github.com/SpongePowered/Sponge/commit/81a3af757159b5491d27f48cc4053a58c55c46e5", "message": "fix BeaconTileEntity mixin", "committedDate": "2020-05-16T15:09:13Z", "type": "commit"}, {"oid": "6a7baa6a6efe8ab0e250c86849ae1ecf063f3500", "url": "https://github.com/SpongePowered/Sponge/commit/6a7baa6a6efe8ab0e250c86849ae1ecf063f3500", "message": "fix id -> key usage", "committedDate": "2020-05-16T16:49:45Z", "type": "forcePushed"}, {"oid": "2a14e5287372e63db7f47e70fb212a5047d92cc1", "url": "https://github.com/SpongePowered/Sponge/commit/2a14e5287372e63db7f47e70fb212a5047d92cc1", "message": "Update/Fix tileentity ticking optimization based on PaperMC patch:\n\nhttps://github.com/PaperMC/Paper/blob/master/Spigot-Server-Patches/0022-Optimize-TileEntity-Ticking.patch\n\nand move it to the optimization module", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "1093821ba7f8d9b8846ba447de1d16c65fdb5812", "url": "https://github.com/SpongePowered/Sponge/commit/1093821ba7f8d9b8846ba447de1d16c65fdb5812", "message": "fix HopperTileEntity mixin", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "1454e4db43d8cda3671b8e9387058cfbacf5d1ee", "url": "https://github.com/SpongePowered/Sponge/commit/1454e4db43d8cda3671b8e9387058cfbacf5d1ee", "message": "removed it", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "80df9d4eba3aa5ee8600218d60e3fd68a06334af", "url": "https://github.com/SpongePowered/Sponge/commit/80df9d4eba3aa5ee8600218d60e3fd68a06334af", "message": "fix some Text mixins", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "0e9ecb252c90c73da628c9322123f208936e252c", "url": "https://github.com/SpongePowered/Sponge/commit/0e9ecb252c90c73da628c9322123f208936e252c", "message": "fix id -> key usage", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "857aaff4b86dc9eb899eaa3841d65765cc513be1", "url": "https://github.com/SpongePowered/Sponge/commit/857aaff4b86dc9eb899eaa3841d65765cc513be1", "message": "fix entity collision mixins", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "eaf1cbe012bfef2988541c90bc86f83509cb2cd8", "url": "https://github.com/SpongePowered/Sponge/commit/eaf1cbe012bfef2988541c90bc86f83509cb2cd8", "message": "fix WorkbenchContainerMixin", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "0a8b9f10f075475e6659e9199aab607166284b06", "url": "https://github.com/SpongePowered/Sponge/commit/0a8b9f10f075475e6659e9199aab607166284b06", "message": "fix ItemFrameEntityMixin_Optimization_Map", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "11d9861c4e4f4aef3bd98b38efd8c3d15c40f326", "url": "https://github.com/SpongePowered/Sponge/commit/11d9861c4e4f4aef3bd98b38efd8c3d15c40f326", "message": "fix FilledMapItem_Optimization_Map", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "bf9e6d3deb63fbd2478f84875595de3ce3e7239f", "url": "https://github.com/SpongePowered/Sponge/commit/bf9e6d3deb63fbd2478f84875595de3ce3e7239f", "message": "fix collision optimization mixinw", "committedDate": "2020-05-16T17:32:40Z", "type": "commit"}, {"oid": "bf9e6d3deb63fbd2478f84875595de3ce3e7239f", "url": "https://github.com/SpongePowered/Sponge/commit/bf9e6d3deb63fbd2478f84875595de3ce3e7239f", "message": "fix collision optimization mixinw", "committedDate": "2020-05-16T17:32:40Z", "type": "forcePushed"}, {"oid": "3cb8f1e36f294a45525617bec3f04cb69eed3d00", "url": "https://github.com/SpongePowered/Sponge/commit/3cb8f1e36f294a45525617bec3f04cb69eed3d00", "message": "fix real time mixins", "committedDate": "2020-05-16T17:53:25Z", "type": "commit"}, {"oid": "5f3a029b61ce3342938278f7d751f32bda76d1d9", "url": "https://github.com/SpongePowered/Sponge/commit/5f3a029b61ce3342938278f7d751f32bda76d1d9", "message": "fix ServerPlayerEntityMixin_Tracker", "committedDate": "2020-05-16T17:57:33Z", "type": "commit"}, {"oid": "f8a4a77f14ccda87b96ad10a1dbb4326fde87057", "url": "https://github.com/SpongePowered/Sponge/commit/f8a4a77f14ccda87b96ad10a1dbb4326fde87057", "message": "fix tracker mixins\n@gabizou unsure about the ChunkManagerMixin_Tracker\nwhere the target is a lambda", "committedDate": "2020-05-16T18:37:05Z", "type": "commit"}, {"oid": "f8a4a77f14ccda87b96ad10a1dbb4326fde87057", "url": "https://github.com/SpongePowered/Sponge/commit/f8a4a77f14ccda87b96ad10a1dbb4326fde87057", "message": "fix tracker mixins\n@gabizou unsure about the ChunkManagerMixin_Tracker\nwhere the target is a lambda", "committedDate": "2020-05-16T18:37:05Z", "type": "forcePushed"}]}