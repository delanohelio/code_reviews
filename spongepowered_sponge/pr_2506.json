{"pr_number": 2506, "pr_title": "Replace craft preview transaction list with a single entry.", "pr_author": "JBYoshi", "pr_createdAt": "2020-02-15T20:58:50Z", "pr_url": "https://github.com/SpongePowered/Sponge/pull/2506", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDAyNg==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884026", "body": "(nitpick) `final` this value please.", "bodyText": "(nitpick) final this value please.", "bodyHTML": "<p dir=\"auto\">(nitpick) <code>final</code> this value please.</p>", "author": "gabizou", "createdAt": "2020-02-22T04:04:43Z", "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/drag/DragInventoryStopState.java", "diffHunk": "@@ -64,13 +65,13 @@ public static void unwindCraftPreview(InventoryPacketContext context) {\n \n         Inventory craftInv = ((Inventory) player.openContainer).query(QueryOperationTypes.INVENTORY_TYPE.of(CraftingInventory.class));\n         if (craftInv instanceof CraftingInventory) {\n-            List<SlotTransaction> previewTransactions = ((ContainerBridge) player.openContainer).bridge$getPreviewTransactions();\n-            if (!previewTransactions.isEmpty()) {\n+            SlotTransaction previewTransaction = ((ContainerBridge) player.openContainer).bridge$getPreviewTransaction();", "originalCommit": "de04873cc8e81a9279cece915a2343c9bbc98a08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDA2NA==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884064", "body": "(nitpick) `final` this variable please", "bodyText": "(nitpick) final this variable please", "bodyHTML": "<p dir=\"auto\">(nitpick) <code>final</code> this variable please</p>", "author": "gabizou", "createdAt": "2020-02-22T04:05:33Z", "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/inventory/PlaceRecipePacketState.java", "diffHunk": "@@ -79,15 +80,14 @@ public void unwind(final InventoryPacketContext context) {\n             return;\n         }\n \n-        final List<SlotTransaction> previewTransactions = ((ContainerBridge) player.openContainer).bridge$getPreviewTransactions();\n-        if (previewTransactions.isEmpty()) {\n+        SlotTransaction previewTransaction = ((ContainerBridge) player.openContainer).bridge$getPreviewTransaction();", "originalCommit": "de04873cc8e81a9279cece915a2343c9bbc98a08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDE0Nw==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884147", "body": "Could this be configurable?", "bodyText": "Could this be configurable?", "bodyHTML": "<p dir=\"auto\">Could this be configurable?</p>", "author": "gabizou", "createdAt": "2020-02-22T04:06:45Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +424,35 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n+            SpongeImpl.getLogger().warn(\"Could not merge craft preview transactions - some events may break (original {}, replace {})\",", "originalCommit": "de04873cc8e81a9279cece915a2343c9bbc98a08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDE3NQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884175", "body": "(nitpick) `final` this variable please", "bodyText": "(nitpick) final this variable please", "bodyHTML": "<p dir=\"auto\">(nitpick) <code>final</code> this variable please</p>", "author": "gabizou", "createdAt": "2020-02-22T04:07:25Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/SlotCraftingMixin.java", "diffHunk": "@@ -174,23 +175,21 @@ private void afterTake(final EntityPlayer thePlayer, final ItemStack stack, fina\n         ((ContainerBridge) container).bridge$setFirePreview(true);\n         this.impl$craftedStack = null;\n \n-        final List<SlotTransaction> previewTransactions = ((ContainerBridge) container).bridge$getPreviewTransactions();\n+        SlotTransaction previewTransaction = ((ContainerBridge) container).bridge$getPreviewTransaction();", "originalCommit": "de04873cc8e81a9279cece915a2343c9bbc98a08", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r383186772", "body": "I know @gabizou said \"could this be configurable?\" and attached it to the log line, but I'm not sure this is what he meant - I think we should _always_ be reporting a failure to the log.\r\n\r\nWas the meaning that this entire behaviour on failure should be configurable - as in, original vs replacement?", "bodyText": "I know @gabizou said \"could this be configurable?\" and attached it to the log line, but I'm not sure this is what he meant - I think we should always be reporting a failure to the log.\nWas the meaning that this entire behaviour on failure should be configurable - as in, original vs replacement?", "bodyHTML": "<p dir=\"auto\">I know <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gabizou/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gabizou\">@gabizou</a> said \"could this be configurable?\" and attached it to the log line, but I'm not sure this is what he meant - I think we should <em>always</em> be reporting a failure to the log.</p>\n<p dir=\"auto\">Was the meaning that this entire behaviour on failure should be configurable - as in, original vs replacement?</p>", "author": "dualspiral", "createdAt": "2020-02-24T10:32:40Z", "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -179,6 +181,10 @@ public void setLogEntitySpeedRemoval(boolean flag) {\n         this.logEntitySpeedRemoval = flag;\n     }\n \n+    public boolean logTransactionMergeFailure() {", "originalCommit": "0526f87d3e8cbf53306d41e4bd550fbb1f3a9d41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5MzIzOA==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r390093238", "bodyText": "Well this and whether silencing after X number of failed/merged transactions happens.", "author": "gabizou", "createdAt": "2020-03-10T04:46:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg0OTc3Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r396849776", "bodyText": "I can understand the configuration to \"silence after X messages\", but why would the behavior of the failure need to be configurable? I can't imagine a server owner changing that.", "author": "JBYoshi", "createdAt": "2020-03-24T01:12:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg=="}], "type": "inlineReview"}, {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463", "url": "https://github.com/SpongePowered/Sponge/commit/0f417cfd86180a51c995021d6a499ae7e57b1463", "message": "Make the number of log messages configurable.", "committedDate": "2020-03-24T01:18:20Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDI2Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860266", "body": "Should this comment be multi-lined to roughly 100 characters?", "bodyText": "Should this comment be multi-lined to roughly 100 characters?", "bodyHTML": "<p dir=\"auto\">Should this comment be multi-lined to roughly 100 characters?</p>", "author": "gabizou", "createdAt": "2020-06-10T04:57:56Z", "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -64,6 +64,9 @@\n     private boolean logEntityCollisionChecks = false;\n     @Setting(value = \"entity-speed-removal\", comment = \"Whether to log entity removals due to speed\")\n     private boolean logEntitySpeedRemoval = false;\n+    @Setting(value = \"transaction-merge-fail\", comment = \"Log when two conflicting changes are merged into one. (This number specifies the maximum \"\n+            + \"number of messages to log. Set to 0 to show all messages.)\")", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDgxNw==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860817", "body": "Are you doing the correct equality check here? Or are you aiming to just allow instance equality checking the `ItemStackSnapshot`?", "bodyText": "Are you doing the correct equality check here? Or are you aiming to just allow instance equality checking the ItemStackSnapshot?", "bodyHTML": "<p dir=\"auto\">Are you doing the correct equality check here? Or are you aiming to just allow instance equality checking the <code>ItemStackSnapshot</code>?</p>", "author": "gabizou", "createdAt": "2020-06-10T05:00:08Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODA4Ng==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r446708086", "bodyText": "It has to be equals() - orig is created fresh each time the method is called.", "author": "JBYoshi", "createdAt": "2020-06-28T22:49:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDgxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDkyNw==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860927", "body": "Off the top of my head, do `SlotAdapter`s implement `equals`?", "bodyText": "Off the top of my head, do SlotAdapters implement equals?", "bodyHTML": "<p dir=\"auto\">Off the top of my head, do <code>SlotAdapter</code>s implement <code>equals</code>?</p>", "author": "gabizou", "createdAt": "2020-06-10T05:00:35Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODI4MA==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r446708280", "bodyText": "Not currently. It seems to be an easy implementation - it just requires checking the underlying inventory and the index - so I'll do that.", "author": "JBYoshi", "createdAt": "2020-06-28T22:51:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTA1Mg==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861052", "body": "```suggestion\r\n            final SlotTransaction replace = new SlotTransaction(slot, orig, repl);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n          \n          \n            \n                        final SlotTransaction replace = new SlotTransaction(slot, orig, repl);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">SlotTransaction</span> replace <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SlotTransaction</span>(slot, orig, repl);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">SlotTransaction</span> replace <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SlotTransaction</span>(slot, orig, repl);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-06-10T05:01:01Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTQwOQ==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861409", "body": "```suggestion\r\n            final int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();\n          \n          \n            \n                        final int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">int</span> maxLogs <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SpongeImpl</span><span class=\"pl-k\">.</span>getGlobalConfigAdapter()<span class=\"pl-k\">.</span>getConfig()<span class=\"pl-k\">.</span>getLogging()<span class=\"pl-k\">.</span>logTransactionMergeFailure();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">int</span> maxLogs <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SpongeImpl</span><span class=\"pl-k\">.</span>getGlobalConfigAdapter()<span class=\"pl-k\">.</span>getConfig()<span class=\"pl-k\">.</span>getLogging()<span class=\"pl-k\">.</span>logTransactionMergeFailure();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gabizou", "createdAt": "2020-06-10T05:02:36Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n+            ContainerMixin.impl$numTransactionErrorsLogged++;\n+            int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTg1Mg==", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861852", "body": "Static fields should be in their own body imo. Make it well aware they are static.", "bodyText": "Static fields should be in their own body imo. Make it well aware they are static.", "bodyHTML": "<p dir=\"auto\">Static fields should be in their own body imo. Make it well aware they are static.</p>", "author": "gabizou", "createdAt": "2020-06-10T05:04:21Z", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -119,7 +120,8 @@\n     //private boolean postPreCraftEvent = true; // used to prevent multiple craft events to fire when setting multiple slots simultaneously\n     private List<SlotTransaction> impl$capturedSlotTransactions = new ArrayList<>();\n     private List<SlotTransaction> impl$capturedCraftShiftTransactions = new ArrayList<>();\n-    private List<SlotTransaction> impl$capturedCraftPreviewTransactions = new ArrayList<>();\n+    @Nullable private SlotTransaction impl$capturedCraftPreviewTransaction;\n+    private static int impl$numTransactionErrorsLogged = 0;", "originalCommit": "0f417cfd86180a51c995021d6a499ae7e57b1463", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bdcae79551695b85118d269dbd3ac38fb1b1932a", "url": "https://github.com/SpongePowered/Sponge/commit/bdcae79551695b85118d269dbd3ac38fb1b1932a", "message": "Replace craft preview transaction list with a single entry.\n\nFixes #2505.", "committedDate": "2020-06-28T22:57:54Z", "type": "commit"}, {"oid": "7914452b0ccad466e34890876820a4723996cd2d", "url": "https://github.com/SpongePowered/Sponge/commit/7914452b0ccad466e34890876820a4723996cd2d", "message": "Logging and final variables", "committedDate": "2020-06-28T22:59:05Z", "type": "commit"}, {"oid": "baa9a08bbd13889630939526105d9405e2ff00bf", "url": "https://github.com/SpongePowered/Sponge/commit/baa9a08bbd13889630939526105d9405e2ff00bf", "message": "Make the number of log messages configurable.", "committedDate": "2020-06-28T22:59:26Z", "type": "commit"}, {"oid": "a334460ade447f3b23b4c1ace7cf3aaa470df591", "url": "https://github.com/SpongePowered/Sponge/commit/a334460ade447f3b23b4c1ace7cf3aaa470df591", "message": "More fixes for @gabizou.", "committedDate": "2020-06-28T22:59:27Z", "type": "commit"}, {"oid": "a334460ade447f3b23b4c1ace7cf3aaa470df591", "url": "https://github.com/SpongePowered/Sponge/commit/a334460ade447f3b23b4c1ace7cf3aaa470df591", "message": "More fixes for @gabizou.", "committedDate": "2020-06-28T22:59:27Z", "type": "forcePushed"}]}