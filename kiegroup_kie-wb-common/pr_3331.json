{"pr_number": 3331, "pr_title": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "pr_author": "akumar074", "pr_createdAt": "2020-06-16T11:37:26Z", "pr_url": "https://github.com/kiegroup/kie-wb-common/pull/3331", "timeline": [{"oid": "ec3be1856a06b818c07e44635504a2f1771c0658", "url": "https://github.com/kiegroup/kie-wb-common/commit/ec3be1856a06b818c07e44635504a2f1771c0658", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package\n\n * Command to be execute on saveFile()\n\n * Updating VersionRecordManager and originalSourceHash after successful save operation", "committedDate": "2020-06-30T18:05:15Z", "type": "forcePushed"}, {"oid": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "url": "https://github.com/kiegroup/kie-wb-common/commit/cd5a27f5e745320e0dc7901d40e48be12bd6772a", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-15T07:33:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTA3MA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455985070", "body": "I would put this `if` block at the beginning of the method because there is no need to execute `getModule` and `getPackage` if `path` does not exist.", "bodyText": "I would put this if block at the beginning of the method because there is no need to execute getModule and getPackage if path does not exist.", "bodyHTML": "<p dir=\"auto\">I would put this <code>if</code> block at the beginning of the method because there is no need to execute <code>getModule</code> and <code>getPackage</code> if <code>path</code> does not exist.</p>", "author": "caponetto", "createdAt": "2020-07-16T18:23:11Z", "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/main/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexer.java", "diffHunk": "@@ -102,6 +102,10 @@ public IndexBuilder fillIndexBuilder(final Path path) throws Exception {\n             return null;\n         }\n \n+        if (!ioService.exists(path)) {", "originalCommit": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyNzk3Nw==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r456527977", "bodyText": "Hi @caponetto , thanks for the suggestion. it's done.", "author": "akumar074", "createdAt": "2020-07-17T15:51:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTczNg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455985736", "body": "Consider adding a log message and creating a unit test that exercises this new condition.", "bodyText": "Consider adding a log message and creating a unit test that exercises this new condition.", "bodyHTML": "<p dir=\"auto\">Consider adding a log message and creating a unit test that exercises this new condition.</p>", "author": "caponetto", "createdAt": "2020-07-16T18:24:16Z", "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/main/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexer.java", "diffHunk": "@@ -102,6 +102,10 @@ public IndexBuilder fillIndexBuilder(final Path path) throws Exception {\n             return null;\n         }\n \n+        if (!ioService.exists(path)) {", "originalCommit": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTk2Mg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r456529962", "bodyText": "Hey @caponetto , I have added the log here. I am looking into the unit tests, but not sure how indexer tests are done right now. I will update it here.", "author": "akumar074", "createdAt": "2020-07-17T15:55:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4NTczNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4ODYwOQ==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r455988609", "body": "```suggestion\r\n                                      getSaveFileCommand(newTypeInfo),\r\n```\r\nIt makes more sense to pass the function itself since it returns a `Command`.\r\nSame for the others below.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                  () -> getSaveFileCommand(newTypeInfo).execute(),\n          \n          \n            \n                                                  getSaveFileCommand(newTypeInfo),\n          \n      \n    \n    \n  \n\nIt makes more sense to pass the function itself since it returns a Command.\nSame for the others below.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      <span class=\"x x-first\">() </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x x-last\"> </span>getSaveFileCommand(newTypeInfo<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">execute(</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                      getSaveFileCommand(newTypeInfo),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">It makes more sense to pass the function itself since it returns a <code>Command</code>.<br>\nSame for the others below.</p>", "author": "caponetto", "createdAt": "2020-07-16T18:29:03Z", "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-client/src/main/java/org/kie/workbench/common/screens/datamodeller/client/DataModelerScreenPresenter.java", "diffHunk": "@@ -545,20 +545,20 @@ private void saveFile(final JavaTypeInfo newTypeInfo) {\n         if (hasPackageNameChanged(newTypeInfo)) {\n             view.showYesNoCancelPopup(CommonConstants.INSTANCE.Information(),\n                                       Constants.INSTANCE.modelEditor_confirm_file_package_refactoring(newTypeInfo.getPackageName()),\n-                                      () -> getSaveFileCommand(newTypeInfo),\n+                                      () -> getSaveFileCommand(newTypeInfo).execute(),", "originalCommit": "cd5a27f5e745320e0dc7901d40e48be12bd6772a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyODMwMg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r456528302", "bodyText": "Done.", "author": "akumar074", "createdAt": "2020-07-17T15:52:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk4ODYwOQ=="}], "type": "inlineReview"}, {"oid": "bffd1e7320c26ada258a87cb06140a05084bdf20", "url": "https://github.com/kiegroup/kie-wb-common/commit/bffd1e7320c26ada258a87cb06140a05084bdf20", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-17T15:48:35Z", "type": "forcePushed"}, {"oid": "afa889d04e5db8410df473345e2d22e711bfaeab", "url": "https://github.com/kiegroup/kie-wb-common/commit/afa889d04e5db8410df473345e2d22e711bfaeab", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-18T12:41:00Z", "type": "forcePushed"}, {"oid": "03ccfb85d76143a354233aeb6463493e91afbf1a", "url": "https://github.com/kiegroup/kie-wb-common/commit/03ccfb85d76143a354233aeb6463493e91afbf1a", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T13:53:58Z", "type": "commit"}, {"oid": "e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "url": "https://github.com/kiegroup/kie-wb-common/commit/e7a7ec4307ed3b9520c841af3737a1d8d2ab3cee", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T13:53:58Z", "type": "forcePushed"}, {"oid": "720ecbba9784069f86086128285423cdcee60838", "url": "https://github.com/kiegroup/kie-wb-common/commit/720ecbba9784069f86086128285423cdcee60838", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T13:59:06Z", "type": "commit"}, {"oid": "720ecbba9784069f86086128285423cdcee60838", "url": "https://github.com/kiegroup/kie-wb-common/commit/720ecbba9784069f86086128285423cdcee60838", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T13:59:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0MjkyNg==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r458142926", "body": "```suggestion\r\n/*\r\n * Copyright 2020 Red Hat, Inc. and/or its affiliates.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\r\n\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.mockito.InjectMocks;\r\nimport org.mockito.Mock;\r\nimport org.mockito.runners.MockitoJUnitRunner;\r\nimport org.uberfire.io.IOService;\r\nimport org.uberfire.java.nio.file.Path;\r\n\r\nimport static org.junit.Assert.assertNull;\r\nimport static org.mockito.Mockito.mock;\r\nimport static org.mockito.Mockito.when;\r\n\r\n@RunWith(MockitoJUnitRunner.class)\r\npublic class JavaFileIndexerTest {\r\n\r\n    @Mock\r\n    private IOService ioService;\r\n\r\n    @InjectMocks\r\n    private JavaFileIndexer indexer;\r\n\r\n    @Test\r\n    public void testFillIndexBuilderWithUnavailablePath() throws Exception {\r\n        final Path mockPath = mock(Path.class);\r\n\r\n        when(ioService.exists(mockPath)).thenReturn(false);\r\n\r\n        assertNull(indexer.fillIndexBuilder(mockPath));\r\n    }\r\n}\r\n```\r\nConsider this code as a suggestion.\r\nI've simplified things a little bit and also added the copyright header.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Assert;\n          \n          \n            \n            import org.kie.workbench.common.services.refactoring.backend.server.indexing.IndexBuilder;\n          \n          \n            \n            import org.uberfire.java.nio.file.Path;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.mockito.Mockito;\n          \n          \n            \n            import org.uberfire.io.IOService;\n          \n          \n            \n            \n          \n          \n            \n            public class JavaFileIndexerTest {\n          \n          \n            \n            \n          \n          \n            \n                @Test\n          \n          \n            \n                public void testFillIndexBuilderWithUnavailablePath () throws Exception {\n          \n          \n            \n                    final IOService ioService = Mockito.mock(IOService.class);\n          \n          \n            \n                    final JavaFileIndexer indexer = Mockito.mock(JavaFileIndexer.class);\n          \n          \n            \n                    final Path mockPath = Mockito.mock(Path.class);\n          \n          \n            \n                    Mockito.when(ioService.exists(mockPath)).thenReturn(false);\n          \n          \n            \n                    final IndexBuilder builder = indexer.fillIndexBuilder(mockPath);\n          \n          \n            \n                    Assert.assertNull(builder);\n          \n          \n            \n                }\n          \n          \n            \n            }\n          \n          \n            \n            /*\n          \n          \n            \n             * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n          \n          \n            \n             *\n          \n          \n            \n             * Licensed under the Apache License, Version 2.0 (the \"License\");\n          \n          \n            \n             * you may not use this file except in compliance with the License.\n          \n          \n            \n             * You may obtain a copy of the License at\n          \n          \n            \n             *\n          \n          \n            \n             *     http://www.apache.org/licenses/LICENSE-2.0\n          \n          \n            \n             *\n          \n          \n            \n             * Unless required by applicable law or agreed to in writing, software\n          \n          \n            \n             * distributed under the License is distributed on an \"AS IS\" BASIS,\n          \n          \n            \n             * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          \n          \n            \n             * See the License for the specific language governing permissions and\n          \n          \n            \n             * limitations under the License.\n          \n          \n            \n             */\n          \n          \n            \n            \n          \n          \n            \n            package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n          \n          \n            \n            \n          \n          \n            \n            import org.junit.Test;\n          \n          \n            \n            import org.junit.runner.RunWith;\n          \n          \n            \n            import org.mockito.InjectMocks;\n          \n          \n            \n            import org.mockito.Mock;\n          \n          \n            \n            import org.mockito.runners.MockitoJUnitRunner;\n          \n          \n            \n            import org.uberfire.io.IOService;\n          \n          \n            \n            import org.uberfire.java.nio.file.Path;\n          \n          \n            \n            \n          \n          \n            \n            import static org.junit.Assert.assertNull;\n          \n          \n            \n            import static org.mockito.Mockito.mock;\n          \n          \n            \n            import static org.mockito.Mockito.when;\n          \n          \n            \n            \n          \n          \n            \n            @RunWith(MockitoJUnitRunner.class)\n          \n          \n            \n            public class JavaFileIndexerTest {\n          \n          \n            \n            \n          \n          \n            \n                @Mock\n          \n          \n            \n                private IOService ioService;\n          \n          \n            \n            \n          \n          \n            \n                @InjectMocks\n          \n          \n            \n                private JavaFileIndexer indexer;\n          \n          \n            \n            \n          \n          \n            \n                @Test\n          \n          \n            \n                public void testFillIndexBuilderWithUnavailablePath() throws Exception {\n          \n          \n            \n                    final Path mockPath = mock(Path.class);\n          \n          \n            \n            \n          \n          \n            \n                    when(ioService.exists(mockPath)).thenReturn(false);\n          \n          \n            \n            \n          \n          \n            \n                    assertNull(indexer.fillIndexBuilder(mockPath));\n          \n          \n            \n                }\n          \n          \n            \n            }\n          \n      \n    \n    \n  \n\nConsider this code as a suggestion.\nI've simplified things a little bit and also added the copyright header.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">package</span> <span class=\"pl-smi\">org.kie.workbench.common.screens.datamodeller.backend.server.indexing</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"48\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Assert</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"49\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.kie.workbench.common.services.refactoring.backend.server.indexing.IndexBuilder</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"50\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.uberfire.java.nio.file.Path</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"51\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"52\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Test</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.mockito.Mockito</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.uberfire.io.IOService</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">JavaFileIndexerTest</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Test</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testFillIndexBuilderWithUnavailablePath () throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">IOService</span> ioService <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Mockito</span><span class=\"pl-k\">.</span>mock(<span class=\"pl-smi\">IOService</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">JavaFileIndexer</span> indexer <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Mockito</span><span class=\"pl-k\">.</span>mock(<span class=\"pl-smi\">JavaFileIndexer</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Path</span> mockPath <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Mockito</span><span class=\"pl-k\">.</span>mock(<span class=\"pl-smi\">Path</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"63\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Mockito</span><span class=\"pl-k\">.</span>when(ioService<span class=\"pl-k\">.</span>exists(mockPath))<span class=\"pl-k\">.</span>thenReturn(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"64\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">IndexBuilder</span> builder <span class=\"pl-k\">=</span> indexer<span class=\"pl-k\">.</span>fillIndexBuilder(mockPath);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"65\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Assert</span><span class=\"pl-k\">.</span>assertNull(builder);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"66\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2020</span> <span class=\"pl-smi\">Red</span> <span class=\"pl-smi\">Hat</span>, <span class=\"pl-smi\">Inc</span>. and<span class=\"pl-k\">/</span>or its affiliates.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"48\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"49\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Licensed</span> under the <span class=\"pl-smi\">Apache</span> <span class=\"pl-smi\">License</span>, <span class=\"pl-smi\">Version</span> <span class=\"pl-c1\">2.0</span> (the <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>License<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"50\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> you may not use <span class=\"pl-c1\">this</span> file except in compliance with the <span class=\"pl-smi\">License</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"51\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">You</span> may obtain a copy of the <span class=\"pl-smi\">License</span> at</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"52\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>     http<span class=\"pl-k\">:</span><span class=\"pl-c\"><span class=\"pl-c\">//</span>www.apache.org/licenses/LICENSE-2.0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Unless</span> required by applicable law or agreed to in writing, software</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> distributed under the <span class=\"pl-smi\">License</span> is distributed on an <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>AS IS<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">BASIS</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">WITHOUT</span> <span class=\"pl-c1\">WARRANTIES</span> <span class=\"pl-c1\">OR</span> <span class=\"pl-c1\">CONDITIONS</span> <span class=\"pl-c1\">OF</span> <span class=\"pl-c1\">ANY</span> <span class=\"pl-c1\">KIND</span>, either express or implied.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">See</span> the <span class=\"pl-smi\">License</span> <span class=\"pl-k\">for</span> the specific language governing permissions and</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> limitations under the <span class=\"pl-smi\">License</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">package</span> <span class=\"pl-smi\">org.kie.workbench.common.screens.datamodeller.backend.server.indexing</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"63\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"64\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.Test</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"65\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.junit.runner.RunWith</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"66\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.mockito.InjectMocks</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.mockito.Mock</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.mockito.runners.MockitoJUnitRunner</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"69\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.uberfire.io.IOService</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.uberfire.java.nio.file.Path</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.junit.Assert.assertNull</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.mockito.Mockito.mock</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">import static</span> <span class=\"pl-smi\">org.mockito.Mockito.when</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">@RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span><span class=\"pl-k\">.</span>class)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">JavaFileIndexerTest</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Mock</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">IOService</span> ioService;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@InjectMocks</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">JavaFileIndexer</span> indexer;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Test</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testFillIndexBuilderWithUnavailablePath() throws <span class=\"pl-smi\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Path</span> mockPath <span class=\"pl-k\">=</span> mock(<span class=\"pl-smi\">Path</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        when(ioService<span class=\"pl-k\">.</span>exists(mockPath))<span class=\"pl-k\">.</span>thenReturn(<span class=\"pl-c1\">false</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertNull(indexer<span class=\"pl-k\">.</span>fillIndexBuilder(mockPath));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Consider this code as a suggestion.<br>\nI've simplified things a little bit and also added the copyright header.</p>", "author": "caponetto", "createdAt": "2020-07-21T14:30:57Z", "path": "kie-wb-common-screens/kie-wb-common-data-modeller/kie-wb-common-data-modeller-backend/src/test/java/org/kie/workbench/common/screens/datamodeller/backend/server/indexing/JavaFileIndexerTest.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.kie.workbench.common.screens.datamodeller.backend.server.indexing;\n+\n+import org.junit.Assert;\n+import org.kie.workbench.common.services.refactoring.backend.server.indexing.IndexBuilder;\n+import org.uberfire.java.nio.file.Path;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+import org.uberfire.io.IOService;\n+\n+public class JavaFileIndexerTest {\n+\n+    @Test\n+    public void testFillIndexBuilderWithUnavailablePath () throws Exception {\n+        final IOService ioService = Mockito.mock(IOService.class);\n+        final JavaFileIndexer indexer = Mockito.mock(JavaFileIndexer.class);\n+        final Path mockPath = Mockito.mock(Path.class);\n+        Mockito.when(ioService.exists(mockPath)).thenReturn(false);\n+        final IndexBuilder builder = indexer.fillIndexBuilder(mockPath);\n+        Assert.assertNull(builder);\n+    }\n+}", "originalCommit": "720ecbba9784069f86086128285423cdcee60838", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NTczOA==", "url": "https://github.com/kiegroup/kie-wb-common/pull/3331#discussion_r458265738", "bodyText": "Thanks @caponetto , I have added the copyright and proposed chnages. :)", "author": "akumar074", "createdAt": "2020-07-21T17:25:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0MjkyNg=="}], "type": "inlineReview"}, {"oid": "ed60b49d9a03ba081ccc2b725e7f979847f9d7e7", "url": "https://github.com/kiegroup/kie-wb-common/commit/ed60b49d9a03ba081ccc2b725e7f979847f9d7e7", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T17:20:40Z", "type": "commit"}, {"oid": "3b5c89c0c9d20dc231420dc94dce7281b35969b8", "url": "https://github.com/kiegroup/kie-wb-common/commit/3b5c89c0c9d20dc231420dc94dce7281b35969b8", "message": "AF-2552 : [Data Modeler] Cannot save file if it was moved from other package", "committedDate": "2020-07-21T18:55:13Z", "type": "commit"}]}