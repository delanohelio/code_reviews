{"pr_number": 236, "pr_title": "Remove reset sticky call from cache invalidation", "pr_author": "vitarb", "pr_createdAt": "2020-10-29T22:25:48Z", "pr_url": "https://github.com/temporalio/sdk-java/pull/236", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY2MzQ4NQ==", "url": "https://github.com/temporalio/sdk-java/pull/236#discussion_r514663485", "body": "Do we need this call if this is the task with the full history?", "bodyText": "Do we need this call if this is the task with the full history?", "bodyHTML": "<p dir=\"auto\">Do we need this call if this is the task with the full history?</p>", "author": "mfateev", "createdAt": "2020-10-30T01:23:31Z", "path": "temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java", "diffHunk": "@@ -216,6 +217,14 @@ private Result handleWorkflowTaskWithEmbeddedQuery(\n \n       if (stickyTaskQueueName != null) {\n         cache.invalidate(execution, metricsScope);\n+        // Execute asynchronously", "originalCommit": "116e89dec67994e094161341ad4263ad8732147e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc5MDA2Mw==", "url": "https://github.com/temporalio/sdk-java/pull/236#discussion_r514790063", "bodyText": "Added a check.", "author": "vitarb", "createdAt": "2020-10-30T03:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY2MzQ4NQ=="}], "type": "inlineReview", "revised_code": {"commit": "bbef9a581aaa5d701682a3f9e5b4e2607dd04273", "changed_code": [{"header": "diff --git a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\nindex 22572b60..0b5b60b7 100644\n--- a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n+++ b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n", "chunk": "@@ -218,13 +218,7 @@ public final class ReplayWorkflowTaskHandler implements WorkflowTaskHandler {\n       if (stickyTaskQueueName != null) {\n         cache.invalidate(execution, metricsScope);\n         // Execute asynchronously\n-        service\n-            .futureStub()\n-            .resetStickyTaskQueue(\n-                ResetStickyTaskQueueRequest.newBuilder()\n-                    .setNamespace(namespace)\n-                    .setExecution(execution)\n-                    .build());\n+        resetStickyTaskList(execution);\n       }\n       throw e;\n     } finally {\n", "next_change": {"commit": "bd7cf1c2883f82227dbf7f02ba67d44b9fe3ccc5", "changed_code": [{"header": "diff --git a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\nindex 0b5b60b7..14f9b184 100644\n--- a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n+++ b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n", "chunk": "@@ -217,8 +218,11 @@ public final class ReplayWorkflowTaskHandler implements WorkflowTaskHandler {\n \n       if (stickyTaskQueueName != null) {\n         cache.invalidate(execution, metricsScope);\n-        // Execute asynchronously\n-        resetStickyTaskList(execution);\n+        // If history if full and exception occurred then sticky session hasn't been established\n+        // yet and we can avoid doing a reset.\n+        if (!isFullHistory(workflowTask)) {\n+          resetStickyTaskList(execution);\n+        }\n       }\n       throw e;\n     } finally {\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc3Njg5Ng==", "url": "https://github.com/temporalio/sdk-java/pull/236#discussion_r514776896", "body": "Add comment to explain why it is async", "bodyText": "Add comment to explain why it is async", "bodyHTML": "<p dir=\"auto\">Add comment to explain why it is async</p>", "author": "mfateev", "createdAt": "2020-10-30T03:27:31Z", "path": "temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java", "diffHunk": "@@ -227,6 +234,16 @@ private Result handleWorkflowTaskWithEmbeddedQuery(\n     }\n   }\n \n+  private void resetStickyTaskList(WorkflowExecution execution) {\n+    service", "originalCommit": "182234106c67f57d32bb775ff6ad177c6e85535f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9f020593b79261a74ce9834a7b012362ca02c3aa", "changed_code": [{"header": "diff --git a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\nindex 14f9b184..22572b60 100644\n--- a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n+++ b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n", "chunk": "@@ -234,16 +236,6 @@ public final class ReplayWorkflowTaskHandler implements WorkflowTaskHandler {\n     }\n   }\n \n-  private void resetStickyTaskList(WorkflowExecution execution) {\n-    service\n-        .futureStub()\n-        .resetStickyTaskQueue(\n-            ResetStickyTaskQueueRequest.newBuilder()\n-                .setNamespace(namespace)\n-                .setExecution(execution)\n-                .build());\n-  }\n-\n   private Result handleQueryOnlyWorkflowTask(\n       PollWorkflowTaskQueueResponse.Builder workflowTask, Scope metricsScope) {\n     RespondQueryTaskCompletedRequest.Builder queryCompletedRequest =\n", "next_change": {"commit": "bbef9a581aaa5d701682a3f9e5b4e2607dd04273", "changed_code": [{"header": "diff --git a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\nindex 22572b60..0b5b60b7 100644\n--- a/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n+++ b/temporal-sdk/src/main/java/io/temporal/internal/replay/ReplayWorkflowTaskHandler.java\n", "chunk": "@@ -236,6 +230,16 @@ public final class ReplayWorkflowTaskHandler implements WorkflowTaskHandler {\n     }\n   }\n \n+  private void resetStickyTaskList(WorkflowExecution execution) {\n+    service\n+        .futureStub()\n+        .resetStickyTaskQueue(\n+            ResetStickyTaskQueueRequest.newBuilder()\n+                .setNamespace(namespace)\n+                .setExecution(execution)\n+                .build());\n+  }\n+\n   private Result handleQueryOnlyWorkflowTask(\n       PollWorkflowTaskQueueResponse.Builder workflowTask, Scope metricsScope) {\n     RespondQueryTaskCompletedRequest.Builder queryCompletedRequest =\n", "next_change": null}]}}]}}, {"oid": "9f020593b79261a74ce9834a7b012362ca02c3aa", "url": "https://github.com/temporalio/sdk-java/commit/9f020593b79261a74ce9834a7b012362ca02c3aa", "message": "Remove reset sticky call from cache invalidation", "committedDate": "2020-10-30T03:48:13Z", "type": "commit"}, {"oid": "bbef9a581aaa5d701682a3f9e5b4e2607dd04273", "url": "https://github.com/temporalio/sdk-java/commit/bbef9a581aaa5d701682a3f9e5b4e2607dd04273", "message": "extract method", "committedDate": "2020-10-30T03:48:13Z", "type": "commit"}, {"oid": "bd7cf1c2883f82227dbf7f02ba67d44b9fe3ccc5", "url": "https://github.com/temporalio/sdk-java/commit/bd7cf1c2883f82227dbf7f02ba67d44b9fe3ccc5", "message": "Avoid doing reset sticky when history if full", "committedDate": "2020-10-30T03:48:13Z", "type": "commit"}, {"oid": "bd7cf1c2883f82227dbf7f02ba67d44b9fe3ccc5", "url": "https://github.com/temporalio/sdk-java/commit/bd7cf1c2883f82227dbf7f02ba67d44b9fe3ccc5", "message": "Avoid doing reset sticky when history if full", "committedDate": "2020-10-30T03:48:13Z", "type": "forcePushed"}]}