{"pr_number": 1381, "pr_title": "Fix get logs patch 2", "pr_author": "matkt", "pr_createdAt": "2020-09-14T12:18:52Z", "pr_url": "https://github.com/hyperledger/besu/pull/1381", "timeline": [{"oid": "04739bb48c7a91a730803011ae12a66c765281d8", "url": "https://github.com/hyperledger/besu/commit/04739bb48c7a91a730803011ae12a66c765281d8", "message": "try use commmon ancestor\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-16T10:05:32Z", "type": "forcePushed"}, {"oid": "50a21b3a7f96e2253362a20cb498e45feec4673f", "url": "https://github.com/hyperledger/besu/commit/50a21b3a7f96e2253362a20cb498e45feec4673f", "message": "fix cache with common ancestor\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-16T16:48:09Z", "type": "commit"}, {"oid": "50a21b3a7f96e2253362a20cb498e45feec4673f", "url": "https://github.com/hyperledger/besu/commit/50a21b3a7f96e2253362a20cb498e45feec4673f", "message": "fix cache with common ancestor\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-16T16:48:09Z", "type": "forcePushed"}, {"oid": "f6573f5af27cb7c608f16063979f8dc6986477a9", "url": "https://github.com/hyperledger/besu/commit/f6573f5af27cb7c608f16063979f8dc6986477a9", "message": "Merge branch 'master' into feature/fix-get-logs-patch-2", "committedDate": "2020-09-17T12:14:18Z", "type": "commit"}, {"oid": "931f3c2a3c56fa489b62a0a872aa54edc412bce4", "url": "https://github.com/hyperledger/besu/commit/931f3c2a3c56fa489b62a0a872aa54edc412bce4", "message": "clean code\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-17T15:31:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNDc1MQ==", "url": "https://github.com/hyperledger/besu/pull/1381#discussion_r490524751", "body": "nit: Feels a bit weird to use `.map` and then `.isPresent` here. Would be worth considering using `.ifPresent`:\r\n```suggestion\r\n          commonAncestorBlockHeader\r\n              .map(ProcessableBlockHeader::getNumber)\r\n              .ifPresent(ancestorBlockNumber -> {\r\n                  // walk through the blocks from the common ancestor to the received block in order to\r\n                 // reload the cache in case of reorg\r\n                 for (long number = ancestorBlockNumber.get() + 1;\r\n                    number < blockHeader.getNumber();\r\n                    number++) {\r\n                    blockchain.getBlockHeader(number).ifPresent(\r\n                        header -> cacheSingleBlock(ancestorBlockHeader.get(), cacheFile));\r\n                  }\r\n            });\r\n```", "bodyText": "nit: Feels a bit weird to use .map and then .isPresent here. Would be worth considering using .ifPresent:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      final Optional<Long> ancestorBlockNumber =\n          \n          \n            \n                          commonAncestorBlockHeader.map(ProcessableBlockHeader::getNumber);\n          \n          \n            \n                      if (ancestorBlockNumber.isPresent()) {\n          \n          \n            \n                        // walk through the blocks from the common ancestor to the received block in order to\n          \n          \n            \n                        // reload the cache in case of reorg\n          \n          \n            \n                        for (long number = ancestorBlockNumber.get() + 1;\n          \n          \n            \n                            number < blockHeader.getNumber();\n          \n          \n            \n                            number++) {\n          \n          \n            \n                          Optional<BlockHeader> ancestorBlockHeader = blockchain.getBlockHeader(number);\n          \n          \n            \n                          if (ancestorBlockHeader.isPresent()) {\n          \n          \n            \n                            cacheSingleBlock(ancestorBlockHeader.get(), cacheFile);\n          \n          \n            \n                          }\n          \n          \n            \n                        }\n          \n          \n            \n                      }\n          \n          \n            \n                      commonAncestorBlockHeader\n          \n          \n            \n                          .map(ProcessableBlockHeader::getNumber)\n          \n          \n            \n                          .ifPresent(ancestorBlockNumber -> {\n          \n          \n            \n                              // walk through the blocks from the common ancestor to the received block in order to\n          \n          \n            \n                             // reload the cache in case of reorg\n          \n          \n            \n                             for (long number = ancestorBlockNumber.get() + 1;\n          \n          \n            \n                                number < blockHeader.getNumber();\n          \n          \n            \n                                number++) {\n          \n          \n            \n                                blockchain.getBlockHeader(number).ifPresent(\n          \n          \n            \n                                    header -> cacheSingleBlock(ancestorBlockHeader.get(), cacheFile));\n          \n          \n            \n                              }\n          \n          \n            \n                        });", "bodyHTML": "<p dir=\"auto\">nit: Feels a bit weird to use <code>.map</code> and then <code>.isPresent</code> here. Would be worth considering using <code>.ifPresent</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">final</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">Long</span>&gt;</span> ancestorBlockNumber <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              commonAncestorBlockHeader<span class=\"pl-k\">.</span>map(<span class=\"pl-smi\">ProcessableBlockHeader</span><span class=\"pl-k\">::</span>getNumber);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">if</span> (ancestorBlockNumber<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> walk through the blocks from the common ancestor to the received block in order to</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> reload the cache in case of reorg</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"164\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">for</span> (<span class=\"pl-k\">long</span> number <span class=\"pl-k\">=</span> ancestorBlockNumber<span class=\"pl-k\">.</span>get() <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                number <span class=\"pl-k\">&lt;</span> blockHeader<span class=\"pl-k\">.</span>getNumber();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                number<span class=\"pl-k\">++</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">BlockHeader</span>&gt;</span> ancestorBlockHeader <span class=\"pl-k\">=</span> blockchain<span class=\"pl-k\">.</span>getBlockHeader(number);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (ancestorBlockHeader<span class=\"pl-k\">.</span>isPresent()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"169\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                cacheSingleBlock(ancestorBlockHeader<span class=\"pl-k\">.</span>get(), cacheFile);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"170\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"171\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"172\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          commonAncestorBlockHeader</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              .map(<span class=\"pl-smi\">ProcessableBlockHeader</span><span class=\"pl-k\">::</span>getNumber)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              .ifPresent(ancestorBlockNumber <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  <span class=\"pl-c\"><span class=\"pl-c\">//</span> walk through the blocks from the common ancestor to the received block in order to</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                 <span class=\"pl-c\"><span class=\"pl-c\">//</span> reload the cache in case of reorg</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"164\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                 <span class=\"pl-k\">for</span> (<span class=\"pl-k\">long</span> number <span class=\"pl-k\">=</span> ancestorBlockNumber<span class=\"pl-k\">.</span>get() <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    number <span class=\"pl-k\">&lt;</span> blockHeader<span class=\"pl-k\">.</span>getNumber();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    number<span class=\"pl-k\">++</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    blockchain<span class=\"pl-k\">.</span>getBlockHeader(number)<span class=\"pl-k\">.</span>ifPresent(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        header <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> cacheSingleBlock(ancestorBlockHeader<span class=\"pl-k\">.</span>get(), cacheFile));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"169\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"170\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ajsutton", "createdAt": "2020-09-17T19:54:52Z", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/cache/TransactionLogBloomCacher.java", "diffHunk": "@@ -151,6 +156,20 @@ void cacheLogsBloomForBlockHeader(\n       final File cacheFile = reusedCacheFile.orElse(calculateCacheFileName(blockNumber, cacheDir));\n       if (cacheFile.exists()) {\n         try {\n+          final Optional<Long> ancestorBlockNumber =\n+              commonAncestorBlockHeader.map(ProcessableBlockHeader::getNumber);\n+          if (ancestorBlockNumber.isPresent()) {\n+            // walk through the blocks from the common ancestor to the received block in order to\n+            // reload the cache in case of reorg\n+            for (long number = ancestorBlockNumber.get() + 1;\n+                number < blockHeader.getNumber();\n+                number++) {\n+              Optional<BlockHeader> ancestorBlockHeader = blockchain.getBlockHeader(number);\n+              if (ancestorBlockHeader.isPresent()) {\n+                cacheSingleBlock(ancestorBlockHeader.get(), cacheFile);\n+              }\n+            }\n+          }", "originalCommit": "931f3c2a3c56fa489b62a0a872aa54edc412bce4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNTcwMQ==", "url": "https://github.com/hyperledger/besu/pull/1381#discussion_r490525701", "bodyText": "Also, this isn't removing logs from the cache correctly when a reorg makes the chain shorter.  It needs to delete all cache entries between the new chain head number and the old one if the new head number is less.", "author": "ajsutton", "createdAt": "2020-09-17T19:56:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUzNjA5MQ==", "url": "https://github.com/hyperledger/besu/pull/1381#discussion_r490536091", "bodyText": "Actually, if this index is only used as the initial filter, you wouldn't need to remove the later blocks when a reorg makes the chain shorter - you'd potentially check the blocks in this range when you didn't need to but it would just be treated as a false positive and sorted out once you're pulling logs out of the actual blocks.\nIn that case I think this should work.  Will deploy it and test it out.", "author": "ajsutton", "createdAt": "2020-09-17T20:16:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczMDA5OA==", "url": "https://github.com/hyperledger/besu/pull/1381#discussion_r490730098", "bodyText": "in fact in case of a shorter reorg the cache will be truncated the first time cacheSingleBlock is used.  this is why I did not add anything else here.\n\n  \n    \n      besu/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/cache/TransactionLogBloomCacher.java\n    \n    \n         Line 184\n      in\n      be89cd9\n    \n    \n    \n    \n\n        \n          \n           final long validCacheSize = offset + BLOOM_BITS_LENGTH;", "author": "matkt", "createdAt": "2020-09-18T06:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNDc1MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDczNDY1Ng==", "url": "https://github.com/hyperledger/besu/pull/1381#discussion_r490734656", "bodyText": "I always use ifpresent but in this case cacheSingleBlock can throw an exception and there is a catch here.  if I use ifPresent I should put 2 catch with the same implementation.  this is the main reason for using isPresent here\nhttps://github.com/matkt/besu/blob/931f3c2a3c56fa489b62a0a872aa54edc412bce4/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/cache/TransactionLogBloomCacher.java#L174", "author": "matkt", "createdAt": "2020-09-18T06:42:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyNDc1MQ=="}], "type": "inlineReview"}, {"oid": "f8be2d2ab0065807cf8f13dbcc47795453b9c6df", "url": "https://github.com/hyperledger/besu/commit/f8be2d2ab0065807cf8f13dbcc47795453b9c6df", "message": "change cache version\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-21T09:40:20Z", "type": "commit"}, {"oid": "9a2da436e6fb6a5b21e7e31d9224d49f3ec10479", "url": "https://github.com/hyperledger/besu/commit/9a2da436e6fb6a5b21e7e31d9224d49f3ec10479", "message": "update CHANGELOG.md\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-09-21T09:43:35Z", "type": "commit"}]}