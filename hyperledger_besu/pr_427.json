{"pr_number": 427, "pr_title": "[BESU-194] Remove max pivot block resets during fast sync", "pr_author": "matkt", "pr_createdAt": "2020-02-24T10:52:05Z", "pr_url": "https://github.com/hyperledger/besu/pull/427", "timeline": [{"oid": "6a964f93d03ba14270db056449a8710712400b91", "url": "https://github.com/hyperledger/besu/commit/6a964f93d03ba14270db056449a8710712400b91", "message": "remove max pivot block resets during fast sync\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-24T10:00:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4MjQ0Ng==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r383382446", "body": "This is the wrong log message now, it should complain about the selected pivot block being negative or at genesis.  Retries won't trigger this.", "bodyText": "This is the wrong log message now, it should complain about the selected pivot block being negative or at genesis.  Retries won't trigger this.", "bodyHTML": "<p dir=\"auto\">This is the wrong log message now, it should complain about the selected pivot block being negative or at genesis.  Retries won't trigger this.</p>", "author": "shemnon", "createdAt": "2020-02-24T16:46:09Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -147,9 +126,10 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n         contestedBlockNumber, contestedBlockNumber - pivotBlockNumberResetDelta)) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n-      final int retryCount = confirmationTasks.size();\n-      if (retryCount > maxPivotBlockResets\n-          || pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n+      if (confirmationTasks.size() > SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");\n+      }\n+      if (pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n         LOG.info(\"Max retries reached, cancel pivot block download.\");", "originalCommit": "6a964f93d03ba14270db056449a8710712400b91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ1MDMxOA==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r383450318", "body": "I'd print a warning periodically (every `SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS` retries?) rather than on every individual retry.  Also, `confirmationTasks` can now grow very large, so we'll probably need to rework how we track tasks so we don't hold onto every confirmation task we created.  \r\n\r\nAlternatively, I wonder if we could alleviate the problem of prematurely switching to full sync by just increasing `DEFAULT_MAX_PIVOT_BLOCK_RESETS` and making sure we retry fast sync here: https://github.com/hyperledger/besu/blob/7fe1d4796e52fa1ce6099f402cc05f1165607335/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/DefaultSynchronizer.java#L166 ...", "bodyText": "I'd print a warning periodically (every SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS retries?) rather than on every individual retry.  Also, confirmationTasks can now grow very large, so we'll probably need to rework how we track tasks so we don't hold onto every confirmation task we created.\nAlternatively, I wonder if we could alleviate the problem of prematurely switching to full sync by just increasing DEFAULT_MAX_PIVOT_BLOCK_RESETS and making sure we retry fast sync here: \n  \n    \n      besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/DefaultSynchronizer.java\n    \n    \n         Line 166\n      in\n      7fe1d47\n    \n    \n    \n    \n\n        \n          \n           LOG.error(\"Fast sync failed, switching to full sync.\", error); \n        \n    \n  \n\n ...", "bodyHTML": "<p dir=\"auto\">I'd print a warning periodically (every <code>SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS</code> retries?) rather than on every individual retry.  Also, <code>confirmationTasks</code> can now grow very large, so we'll probably need to rework how we track tasks so we don't hold onto every confirmation task we created.</p>\n<p dir=\"auto\">Alternatively, I wonder if we could alleviate the problem of prematurely switching to full sync by just increasing <code>DEFAULT_MAX_PIVOT_BLOCK_RESETS</code> and making sure we retry fast sync here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/hyperledger/besu/blob/7fe1d4796e52fa1ce6099f402cc05f1165607335/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/DefaultSynchronizer.java#L166\">besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/DefaultSynchronizer.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 166\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/hyperledger/besu/commit/7fe1d4796e52fa1ce6099f402cc05f1165607335\">7fe1d47</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L166\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"166\"></td>\n          <td id=\"LC166\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fast sync failed, switching to full sync.<span class=\"pl-pds\">\"</span></span>, error); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n ...</p>", "author": "mbaxter", "createdAt": "2020-02-24T18:55:16Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -147,9 +126,10 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n         contestedBlockNumber, contestedBlockNumber - pivotBlockNumberResetDelta)) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n-      final int retryCount = confirmationTasks.size();\n-      if (retryCount > maxPivotBlockResets\n-          || pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n+      if (confirmationTasks.size() > SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");", "originalCommit": "6a964f93d03ba14270db056449a8710712400b91", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1fe85838e4a8c729094b803910087362ba80e109", "url": "https://github.com/hyperledger/besu/commit/1fe85838e4a8c729094b803910087362ba80e109", "message": "increase retry number and add retry for fast sync\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-25T17:28:28Z", "type": "commit"}, {"oid": "b2a4326f5d1614916591ec97ebf949f84595ce74", "url": "https://github.com/hyperledger/besu/commit/b2a4326f5d1614916591ec97ebf949f84595ce74", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T11:22:29Z", "type": "commit"}, {"oid": "66e56b30f17145685632c9ef2beefd57c4219837", "url": "https://github.com/hyperledger/besu/commit/66e56b30f17145685632c9ef2beefd57c4219837", "message": "increase max retry number and fix test\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T11:31:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMzMxMw==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384523313", "body": "The catch-all log needs to be updated.  Probably worth keeping the more specific log message for the `StalledDownload`:\r\n```\r\nelse if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\r\n      LOG.warn(\r\n          \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\r\n      return start(FastSyncState.EMPTY_SYNC_STATE);\r\n} else {\r\n      LOG.error(\r\n          \"Encountered an unexpected error during fast sync.  Restarting fast sync.\", error);\r\n      return start(FastSyncState.EMPTY_SYNC_STATE);\r\n}\r\n```", "bodyText": "The catch-all log needs to be updated.  Probably worth keeping the more specific log message for the StalledDownload:\nelse if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n      LOG.warn(\n          \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n} else {\n      LOG.error(\n          \"Encountered an unexpected error during fast sync.  Restarting fast sync.\", error);\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n}", "bodyHTML": "<p dir=\"auto\">The catch-all log needs to be updated.  Probably worth keeping the more specific log message for the <code>StalledDownload</code>:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n      LOG.warn(\n          &quot;Fast sync was unable to download the world state. Retrying with a new pivot block.&quot;);\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n} else {\n      LOG.error(\n          &quot;Encountered an unexpected error during fast sync.  Restarting fast sync.&quot;, error);\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n}\"><pre><code>else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n      LOG.warn(\n          \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n} else {\n      LOG.error(\n          \"Encountered an unexpected error during fast sync.  Restarting fast sync.\", error);\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n}\n</code></pre></div>", "author": "mbaxter", "createdAt": "2020-02-26T14:24:12Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +79,17 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n-    } else {\n-      return completedExceptionally(error);\n     }", "originalCommit": "66e56b30f17145685632c9ef2beefd57c4219837", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MDI2Mw==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384550263", "bodyText": "Done", "author": "matkt", "createdAt": "2020-02-26T15:04:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMzMxMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyNjI2Ng==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384526266", "body": "(optional) Might be worth adding some more specific details:\r\n```suggestion\r\n        LOG.warn(\"{} attempts have failed to find a fast sync pivot block\", retryCount);\r\n```", "bodyText": "(optional) Might be worth adding some more specific details:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.warn(\"Several attempts have been made without finding a pivot block\");\n          \n          \n            \n                    LOG.warn(\"{} attempts have failed to find a fast sync pivot block\", retryCount);", "bodyHTML": "<p dir=\"auto\">(optional) Might be worth adding some more specific details:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Several</span> attempts have <span class=\"x x-first x-last\">been made without finding a </span>pivot block<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">{}</span> attempts have <span class=\"x x-first x-last\">failed to find a fast sync </span>pivot block<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, retryCount</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-02-26T14:28:51Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -148,6 +149,11 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n       final int retryCount = confirmationTasks.size();\n+\n+      if ((retryCount % SUSPICIOUS_NUMBER_OF_RETRIES) == 0) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");", "originalCommit": "66e56b30f17145685632c9ef2beefd57c4219837", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MjQxMQ==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384552411", "bodyText": "Done", "author": "matkt", "createdAt": "2020-02-26T15:07:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyNjI2Ng=="}], "type": "inlineReview"}, {"oid": "0e6843035dd5cc46d27acffa169305cd898640d1", "url": "https://github.com/hyperledger/besu/commit/0e6843035dd5cc46d27acffa169305cd898640d1", "message": "change logs in the handleFailure method\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T15:03:24Z", "type": "commit"}, {"oid": "1ce4949bcbdd82b94c2278aa8e7e8512f636cc2c", "url": "https://github.com/hyperledger/besu/commit/1ce4949bcbdd82b94c2278aa8e7e8512f636cc2c", "message": "change logs related to suspicious number of retries\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T15:07:00Z", "type": "commit"}, {"oid": "e74d3d4185d4d6857f505d0eb07dc612ae6ada9b", "url": "https://github.com/hyperledger/besu/commit/e74d3d4185d4d6857f505d0eb07dc612ae6ada9b", "message": "add a delay before each fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T19:06:13Z", "type": "commit"}, {"oid": "e29644339f6075d521ae02504e4d60ab8271d5c5", "url": "https://github.com/hyperledger/besu/commit/e29644339f6075d521ae02504e4d60ab8271d5c5", "message": "add a timeout for fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T19:12:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjkyMA==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384712920", "body": "We already have some utilities around executing timeouts.  I suggest hooking into those by adding a helper method to `FastSyncActions` which has access to `EthScheduler` - `FastSyncActions.scheduleTask(Supplier<CompletableFuture<T>> future, Duration duration)` perhaps?  See: https://github.com/hyperledger/besu/blob/28205875c5683cce832450f05898ee5316139176/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/EthScheduler.java#L170", "bodyText": "We already have some utilities around executing timeouts.  I suggest hooking into those by adding a helper method to FastSyncActions which has access to EthScheduler - FastSyncActions.scheduleTask(Supplier<CompletableFuture<T>> future, Duration duration) perhaps?  See: \n  \n    \n      besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/EthScheduler.java\n    \n    \n         Line 170\n      in\n      2820587\n    \n    \n    \n    \n\n        \n          \n           public <T> CompletableFuture<T> scheduleFutureTask(", "bodyHTML": "<p dir=\"auto\">We already have some utilities around executing timeouts.  I suggest hooking into those by adding a helper method to <code>FastSyncActions</code> which has access to <code>EthScheduler</code> - <code>FastSyncActions.scheduleTask(Supplier&lt;CompletableFuture&lt;T&gt;&gt; future, Duration duration)</code> perhaps?  See: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/hyperledger/besu/blob/28205875c5683cce832450f05898ee5316139176/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/EthScheduler.java#L170\">besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/EthScheduler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 170\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/hyperledger/besu/commit/28205875c5683cce832450f05898ee5316139176\">2820587</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L170\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"170\"></td>\n          <td id=\"LC170\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-k\">&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">T</span>&gt;</span> <span class=\"pl-en\">scheduleFutureTask</span>( </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "mbaxter", "createdAt": "2020-02-26T19:27:53Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +87,31 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n     } else {\n-      return completedExceptionally(error);\n+      LOG.error(\"Encountered an unexpected error during fast sync.  Trying to restart fast sync.\");\n+      final ScheduledFuture<CompletableFuture<FastSyncState>> fastSyncCountdown =\n+          Executors.newSingleThreadScheduledExecutor()", "originalCommit": "e29644339f6075d521ae02504e4d60ab8271d5c5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMjEzMQ==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384732131", "bodyText": "good idea. done", "author": "matkt", "createdAt": "2020-02-26T20:00:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjkyMA=="}], "type": "inlineReview"}, {"oid": "8438dacd566879450baa6cd6b7f7cfeed2ef0140", "url": "https://github.com/hyperledger/besu/commit/8438dacd566879450baa6cd6b7f7cfeed2ef0140", "message": "change timeout for fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T19:56:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NjMwMQ==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384756301", "body": "We should log the error since we don't really want generic errors bubbling all the way up here.  Also, probably worth mentioning the delay here:\r\n```suggestion\r\n      LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync in \" + FAST_SYNC_RETRY_DELAY + \" seconds.\", error);\r\n```\r\n\r\n**Note**: To get stack traces printed in the logs, you can only supply a single error parameter to the `error` method.", "bodyText": "We should log the error since we don't really want generic errors bubbling all the way up here.  Also, probably worth mentioning the delay here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync.\");\n          \n          \n            \n                  LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync in \" + FAST_SYNC_RETRY_DELAY + \" seconds.\", error);\n          \n      \n    \n    \n  \n\nNote: To get stack traces printed in the logs, you can only supply a single error parameter to the error method.", "bodyHTML": "<p dir=\"auto\">We should log the error since we don't really want generic errors bubbling all the way up here.  Also, probably worth mentioning the delay here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Encountered an unexpected error during fast sync. Restarting fast sync<span class=\"x x-first\">.</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Encountered an unexpected error during fast sync. Restarting fast sync<span class=\"x x-first\"> in </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-c1 x\">FAST_SYNC_RETRY_DELAY</span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\"> seconds.</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, error</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\"><strong>Note</strong>: To get stack traces printed in the logs, you can only supply a single error parameter to the <code>error</code> method.</p>", "author": "mbaxter", "createdAt": "2020-02-26T20:48:49Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +84,21 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n     } else {\n-      return completedExceptionally(error);\n+      LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync.\");", "originalCommit": "8438dacd566879450baa6cd6b7f7cfeed2ef0140", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1Njc2Mg==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384756762", "body": "(nit / optional) - I'd probably keep this constant as a `Duration` for readability (so its easy to see the time unit).", "bodyText": "(nit / optional) - I'd probably keep this constant as a Duration for readability (so its easy to see the time unit).", "bodyHTML": "<p dir=\"auto\">(nit / optional) - I'd probably keep this constant as a <code>Duration</code> for readability (so its easy to see the time unit).</p>", "author": "mbaxter", "createdAt": "2020-02-26T20:49:45Z", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -38,6 +39,9 @@\n import org.apache.logging.log4j.Logger;\n \n public class FastSyncDownloader<C> {\n+\n+  private static final long FAST_SYNC_RETRY_DELAY = 5;", "originalCommit": "8438dacd566879450baa6cd6b7f7cfeed2ef0140", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "url": "https://github.com/hyperledger/besu/commit/ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "message": "fix log add error\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T21:17:14Z", "type": "commit"}, {"oid": "ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "url": "https://github.com/hyperledger/besu/commit/ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "message": "fix log add error\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T21:17:14Z", "type": "forcePushed"}, {"oid": "7f0d07c9e9e9bbf42e0e6084b2b88810a4741d07", "url": "https://github.com/hyperledger/besu/commit/7f0d07c9e9e9bbf42e0e6084b2b88810a4741d07", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T21:29:02Z", "type": "commit"}, {"oid": "cbd012ac32ea938d287a363200089294a3da99e4", "url": "https://github.com/hyperledger/besu/commit/cbd012ac32ea938d287a363200089294a3da99e4", "message": "resolve pipeline\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-26T21:51:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgwNg==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384812806", "body": "I think you should be able to validate the second run if you use `thenAnswer` to go ahead and run the future supplier with something like: \r\n```\r\nwhen(fastSyncActions).scheduleFutureTask(any(), any())\r\n    .thenAnswer(invocation -> invocation.getArgument(0).get());\r\n```", "bodyText": "I think you should be able to validate the second run if you use thenAnswer to go ahead and run the future supplier with something like:\nwhen(fastSyncActions).scheduleFutureTask(any(), any())\n    .thenAnswer(invocation -> invocation.getArgument(0).get());", "bodyHTML": "<p dir=\"auto\">I think you should be able to validate the second run if you use <code>thenAnswer</code> to go ahead and run the future supplier with something like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"when(fastSyncActions).scheduleFutureTask(any(), any())\n    .thenAnswer(invocation -&gt; invocation.getArgument(0).get());\"><pre><code>when(fastSyncActions).scheduleFutureTask(any(), any())\n    .thenAnswer(invocation -&gt; invocation.getArgument(0).get());\n</code></pre></div>", "author": "mbaxter", "createdAt": "2020-02-26T22:43:13Z", "path": "ethereum/eth/src/test/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloaderTest.java", "diffHunk": "@@ -413,17 +401,7 @@ public void shouldResetFastSyncStateAndRestartProcessIfANonFastSyncExceptionOccu\n     // A real chain downloader would cause the chainFuture to complete when cancel is called.\n     chainFuture.completeExceptionally(new CancellationException());\n \n-    verify(fastSyncActions, times(2)).waitForSuitablePeers(FastSyncState.EMPTY_SYNC_STATE);\n-    verify(fastSyncActions, times(2)).selectPivotBlock(FastSyncState.EMPTY_SYNC_STATE);\n-    verify(fastSyncActions).downloadPivotBlockHeader(secondSelectPivotBlockState);\n-    verify(storage).storeState(secondDownloadPivotBlockHeaderState);\n-    verify(fastSyncActions).createChainDownloader(secondDownloadPivotBlockHeaderState);\n-    verify(worldStateDownloader).run(secondPivotBlockHeader);\n-    verifyNoMoreInteractions(fastSyncActions, worldStateDownloader, storage);\n-\n-    secondWorldStateFuture.complete(null);\n-\n-    assertThat(result).isCompletedWithValue(secondDownloadPivotBlockHeaderState);\n+    verify(fastSyncActions).scheduleFutureTask(any(Supplier.class), any(Duration.class));", "originalCommit": "cbd012ac32ea938d287a363200089294a3da99e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA4MjUyOQ==", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r385082529", "bodyText": "Done", "author": "matkt", "createdAt": "2020-02-27T11:59:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgwNg=="}], "type": "inlineReview"}, {"oid": "e07dc4020a2fb0326870208927e8c03c45e74847", "url": "https://github.com/hyperledger/besu/commit/e07dc4020a2fb0326870208927e8c03c45e74847", "message": "update test for restart fastsync mechanism\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>", "committedDate": "2020-02-27T09:32:19Z", "type": "commit"}, {"oid": "cf8960618d6a5c7601cc7a93aceddde75d5b2f1c", "url": "https://github.com/hyperledger/besu/commit/cf8960618d6a5c7601cc7a93aceddde75d5b2f1c", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into feature/BP-117-remove-fast-synf-fallback", "committedDate": "2020-02-27T12:10:50Z", "type": "commit"}]}