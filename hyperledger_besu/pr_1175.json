{"pr_number": 1175, "pr_title": "Use Cache for bonding peers", "pr_author": "davemec", "pr_createdAt": "2020-06-30T13:41:33Z", "pr_url": "https://github.com/hyperledger/besu/pull/1175", "timeline": [{"oid": "dad8dae8bd6601bfe0d3f620036ffdc2f657b702", "url": "https://github.com/hyperledger/besu/commit/dad8dae8bd6601bfe0d3f620036ffdc2f657b702", "message": "#1066 Switched to use unprefixed hex strings for memory and stack values\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-26T13:37:13Z", "type": "commit"}, {"oid": "01430e770da93ea19171e1a9683daec7c10677f4", "url": "https://github.com/hyperledger/besu/commit/01430e770da93ea19171e1a9683daec7c10677f4", "message": "Merge branch 'master' of github.com:hyperledger/besu", "committedDate": "2020-06-26T16:53:26Z", "type": "commit"}, {"oid": "fae57d49ecef387852d5589bd93c5959a6f3e465", "url": "https://github.com/hyperledger/besu/commit/fae57d49ecef387852d5589bd93c5959a6f3e465", "message": "Update to use Cache for bonding peers collection; PR updates\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-30T13:38:32Z", "type": "commit"}, {"oid": "58d1404ebb21294aa726f095e0b4435c83b7d34f", "url": "https://github.com/hyperledger/besu/commit/58d1404ebb21294aa726f095e0b4435c83b7d34f", "message": "Merge branch 'master' into TKT-792", "committedDate": "2020-06-30T13:42:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczMzEzNg==", "url": "https://github.com/hyperledger/besu/pull/1175#discussion_r447733136", "body": "Shouldn't we also check against the `bondingPeers` collection?  \r\n\r\nMaybe we need a helper method `resolvePeer` that takes a peer and replaces it with representations from the `peerTable` or `bondingPeers` collection as needed.  Then we could dedupe the same logic in `onMessage`.", "bodyText": "Shouldn't we also check against the bondingPeers collection?\nMaybe we need a helper method resolvePeer that takes a peer and replaces it with representations from the peerTable or bondingPeers collection as needed.  Then we could dedupe the same logic in onMessage.", "bodyHTML": "<p dir=\"auto\">Shouldn't we also check against the <code>bondingPeers</code> collection?</p>\n<p dir=\"auto\">Maybe we need a helper method <code>resolvePeer</code> that takes a peer and replaces it with representations from the <code>peerTable</code> or <code>bondingPeers</code> collection as needed.  Then we could dedupe the same logic in <code>onMessage</code>.</p>", "author": "mbaxter", "createdAt": "2020-06-30T14:35:29Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -586,6 +590,17 @@ public void setRetryDelayFunction(final RetryDelayFunction retryDelayFunction) {\n     this.retryDelayFunction = retryDelayFunction;\n   }\n \n+  public void handleBondingRequest(final DiscoveryPeer peer) {\n+    final DiscoveryPeer peerToBond =\n+        peerTable.get(peer).filter(known -> known.discoveryEndpointMatches(peer)).orElse(peer);", "originalCommit": "58d1404ebb21294aa726f095e0b4435c83b7d34f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNDA3NQ==", "url": "https://github.com/hyperledger/besu/pull/1175#discussion_r447734075", "body": "(nit) I think we could simplify:\r\n```suggestion\r\n    if (peerPermissions.allowOutboundBonding(peerToBond)\r\n        && peerToBond.getStatus().equals(PeerDiscoveryStatus.KNOWN)) {\r\n```", "bodyText": "(nit) I think we could simplify:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (peerPermissions.allowOutboundBonding(peerToBond)\n          \n          \n            \n                    && !PeerDiscoveryStatus.BONDED.equals(peerToBond.getStatus())\n          \n          \n            \n                    && !PeerDiscoveryStatus.BONDING.equals(peerToBond.getStatus())) {\n          \n          \n            \n                if (peerPermissions.allowOutboundBonding(peerToBond)\n          \n          \n            \n                    && peerToBond.getStatus().equals(PeerDiscoveryStatus.KNOWN)) {", "bodyHTML": "<p dir=\"auto\">(nit) I think we could simplify:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (peerPermissions<span class=\"pl-k\">.</span>allowOutboundBonding(peerToBond)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span><span class=\"pl-smi\">PeerDiscoveryStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>BONDED</span><span class=\"pl-k\">.</span>equals(peerToBond<span class=\"pl-k\">.</span>getStatus())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span><span class=\"pl-smi\">PeerDiscoveryStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>BONDING</span><span class=\"pl-k\">.</span>equals(peerToBond<span class=\"pl-k\">.</span>getStatus())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (peerPermissions<span class=\"pl-k\">.</span>allowOutboundBonding(peerToBond)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">&amp;&amp;</span> peerToBond<span class=\"pl-k\">.</span>getStatus()<span class=\"pl-k\">.</span>equals(<span class=\"pl-smi\">PeerDiscoveryStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>KNOWN</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mbaxter", "createdAt": "2020-06-30T14:36:44Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -586,6 +590,17 @@ public void setRetryDelayFunction(final RetryDelayFunction retryDelayFunction) {\n     this.retryDelayFunction = retryDelayFunction;\n   }\n \n+  public void handleBondingRequest(final DiscoveryPeer peer) {\n+    final DiscoveryPeer peerToBond =\n+        peerTable.get(peer).filter(known -> known.discoveryEndpointMatches(peer)).orElse(peer);\n+\n+    if (peerPermissions.allowOutboundBonding(peerToBond)\n+        && !PeerDiscoveryStatus.BONDED.equals(peerToBond.getStatus())\n+        && !PeerDiscoveryStatus.BONDING.equals(peerToBond.getStatus())) {", "originalCommit": "58d1404ebb21294aa726f095e0b4435c83b7d34f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNjQ1OA==", "url": "https://github.com/hyperledger/besu/pull/1175#discussion_r447736458", "body": "good catch!", "bodyText": "good catch!", "bodyHTML": "<p dir=\"auto\">good catch!</p>", "author": "mbaxter", "createdAt": "2020-06-30T14:39:43Z", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -107,7 +108,8 @@\n   private static final int PEER_REFRESH_ROUND_TIMEOUT_IN_SECONDS = 5;\n   protected final TimerUtil timerUtil;\n   private final PeerTable peerTable;\n-  private final Map<Bytes, DiscoveryPeer> bondingPeers;\n+  private final Cache<Bytes, DiscoveryPeer> bondingPeers =\n+      CacheBuilder.newBuilder().maximumSize(50).expireAfterWrite(10, TimeUnit.MINUTES).build();", "originalCommit": "58d1404ebb21294aa726f095e0b4435c83b7d34f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc2NDA4Mw==", "url": "https://github.com/hyperledger/besu/pull/1175#discussion_r447764083", "bodyText": "Thanks to @shemnon", "author": "davemec", "createdAt": "2020-06-30T15:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNjQ1OA=="}], "type": "inlineReview"}, {"oid": "b1ec54f1080cb731b3a476730001d3630f538ebb", "url": "https://github.com/hyperledger/besu/commit/b1ec54f1080cb731b3a476730001d3630f538ebb", "message": "PR updates\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>", "committedDate": "2020-06-30T16:21:49Z", "type": "commit"}]}