{"pr_number": 1345, "pr_title": "Ignore accept header in requests to metrics service", "pr_author": "ajsutton", "pr_createdAt": "2020-08-27T20:59:41Z", "pr_url": "https://github.com/hyperledger/besu/pull/1345", "timeline": [{"oid": "5d8f959665404aba9a6a384780af745c8cce5e0e", "url": "https://github.com/hyperledger/besu/commit/5d8f959665404aba9a6a384780af745c8cce5e0e", "message": "Ignore accept header in requests to metrics service.\n\nSigned-off-by: Adrian Sutton <adrian.sutton@consensys.net>", "committedDate": "2020-08-27T20:54:33Z", "type": "commit"}, {"oid": "d69d709cc6e78f1b06c8e4d13bf63a43c84880f0", "url": "https://github.com/hyperledger/besu/commit/d69d709cc6e78f1b06c8e4d13bf63a43c84880f0", "message": "Add changelog.\n\nSigned-off-by: Adrian Sutton <adrian.sutton@consensys.net>", "committedDate": "2020-08-27T20:59:59Z", "type": "commit"}, {"oid": "1d2dc7e91fb81353f7d693e2758f2f979749026f", "url": "https://github.com/hyperledger/besu/commit/1d2dc7e91fb81353f7d693e2758f2f979749026f", "message": "Spotless.\n\nSigned-off-by: Adrian Sutton <adrian.sutton@consensys.net>", "committedDate": "2020-08-27T21:06:27Z", "type": "commit"}, {"oid": "1d2dc7e91fb81353f7d693e2758f2f979749026f", "url": "https://github.com/hyperledger/besu/commit/1d2dc7e91fb81353f7d693e2758f2f979749026f", "message": "Spotless.\n\nSigned-off-by: Adrian Sutton <adrian.sutton@consensys.net>", "committedDate": "2020-08-27T21:06:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwOTg4MQ==", "url": "https://github.com/hyperledger/besu/pull/1345#discussion_r478709881", "body": "```suggestion\r\n\r\n      // Assert we still get the Content-Type Prometheus likes\r\n      assertThat(resp.header(\"Content-Type\")).isEqualTo(TextFormat.CONTENT_TYPE_004);\r\n    }\r\n```\r\n\r\nYou will also need `import io.prometheus.client.exporter.common.TextFormat;` but GitHub won't let me suggest that far our of the code diff.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                  // Assert we still get the Content-Type Prometheus likes\n          \n          \n            \n                  assertThat(resp.header(\"Content-Type\")).isEqualTo(TextFormat.CONTENT_TYPE_004);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nYou will also need import io.prometheus.client.exporter.common.TextFormat; but GitHub won't let me suggest that far our of the code diff.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"192\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">    }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"192\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"193\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c\"><span class=\"pl-c\">//</span> Assert we still get the Content-Type Prometheus likes</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"194\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      assertThat(resp<span class=\"pl-k\">.</span>header(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Content-Type<span class=\"pl-pds\">\"</span></span>))<span class=\"pl-k\">.</span>isEqualTo(<span class=\"pl-smi\">TextFormat</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONTENT_TYPE_004</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"195\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">You will also need <code>import io.prometheus.client.exporter.common.TextFormat;</code> but GitHub won't let me suggest that far our of the code diff.</p>", "author": "shemnon", "createdAt": "2020-08-27T21:37:21Z", "path": "metrics/core/src/test/java/org/hyperledger/besu/metrics/prometheus/MetricsHttpServiceTest.java", "diffHunk": "@@ -174,6 +174,22 @@ public void metricsAreAbsentWhenFiltered() throws Exception {\n     }\n   }\n \n+  @Test\n+  // There is only one available representation so content negotiation should not be used\n+  public void acceptHeaderIgnored() throws Exception {\n+    final Request metricsRequest =\n+        new Request.Builder().addHeader(\"Accept\", \"text/xml\").url(baseUrl + \"/metrics\").build();\n+    try (final Response resp = client.newCall(metricsRequest).execute()) {\n+      assertThat(resp.code()).isEqualTo(200);\n+      // Check general format of result, it maps to java.util.Properties\n+      final Properties props = new Properties();\n+      props.load(resp.body().byteStream());\n+\n+      // We should have JVM metrics already loaded, verify a simple key.\n+      assertThat(props).containsKey(\"jvm_threads_deadlocked\");\n+    }", "originalCommit": "1d2dc7e91fb81353f7d693e2758f2f979749026f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxNzk3Nw==", "url": "https://github.com/hyperledger/besu/pull/1345#discussion_r478717977", "bodyText": "Added.", "author": "ajsutton", "createdAt": "2020-08-27T21:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwOTg4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxMDk4Nw==", "url": "https://github.com/hyperledger/besu/pull/1345#discussion_r478710987", "body": "Maybe just check for `\"text/plain\"` instead of completely dropping Prometheus' very specific version?", "bodyText": "Maybe just check for \"text/plain\" instead of completely dropping Prometheus' very specific version?", "bodyHTML": "<p dir=\"auto\">Maybe just check for <code>\"text/plain\"</code> instead of completely dropping Prometheus' very specific version?</p>", "author": "shemnon", "createdAt": "2020-08-27T21:39:47Z", "path": "metrics/core/src/main/java/org/hyperledger/besu/metrics/prometheus/MetricsHttpService.java", "diffHunk": "@@ -91,11 +91,7 @@ private void validateConfig(final MetricsConfiguration config) {\n     router.route(\"/\").method(HttpMethod.GET).handler(this::handleEmptyRequest);\n \n     // Endpoint for Prometheus metrics monitoring.\n-    router\n-        .route(\"/metrics\")\n-        .method(HttpMethod.GET)\n-        .produces(TextFormat.CONTENT_TYPE_004)\n-        .handler(this::metricsRequest);\n+    router.route(\"/metrics\").method(HttpMethod.GET).handler(this::metricsRequest);", "originalCommit": "1d2dc7e91fb81353f7d693e2758f2f979749026f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxNzkyNQ==", "url": "https://github.com/hyperledger/besu/pull/1345#discussion_r478717925", "bodyText": "Given we only have one representation to offer we shouldn't be doing any content negotiation (which is what the Accept header is for).  If we had multiple representations, then yes filtering to a particular Accept makes sense but if there's a default version, it should just be returned even if it doesn't match Accept.\nFor example this works fine:\ncurl --fail -v -H 'Accept: foo/foo' https://www.google.com/\n\nThe caller can then decide if they want to process the response based on the Content-Type header.", "author": "ajsutton", "createdAt": "2020-08-27T21:55:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxMDk4Nw=="}], "type": "inlineReview"}, {"oid": "fe13408df3c9b00909d5dcbcb4a9ef86aaf643ff", "url": "https://github.com/hyperledger/besu/commit/fe13408df3c9b00909d5dcbcb4a9ef86aaf643ff", "message": "Add assertion that Content-Type is still set.\n\nSigned-off-by: Adrian Sutton <adrian.sutton@consensys.net>", "committedDate": "2020-08-27T21:55:56Z", "type": "commit"}]}