{"pr_number": 1684, "pr_title": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "pr_author": "elguardian", "pr_createdAt": "2020-06-18T12:43:15Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1684", "timeline": [{"oid": "6b5cc652854c041ed24d86c20f21d8905d678394", "url": "https://github.com/kiegroup/jbpm/commit/6b5cc652854c041ed24d86c20f21d8905d678394", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-06-23T06:34:12Z", "type": "forcePushed"}, {"oid": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "url": "https://github.com/kiegroup/jbpm/commit/5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-06-25T09:32:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEyNTQ1MA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446125450", "body": "Shouldn't be `protected` instead?", "bodyText": "Shouldn't be protected instead?", "bodyHTML": "<p dir=\"auto\">Shouldn't be <code>protected</code> instead?</p>", "author": "afalhambra", "createdAt": "2020-06-26T11:23:54Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/commands/UserGroupCallbackTaskCommand.java", "diffHunk": "@@ -98,6 +100,14 @@ protected boolean doCallbackUserOperation(String userId, TaskContext context) {\n \n     }\n     \n+    private boolean doCallbackEmailOperation(String emailId, TaskContext context) {", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ0OTkyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447449924", "bodyText": "ok", "author": "elguardian", "createdAt": "2020-06-30T06:51:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEyNTQ1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNTcwMw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446135703", "body": "Not really needed\r\n\r\n```suggestion\r\n            list = new ArrayList<>();\r\n```", "bodyText": "Not really needed\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        list = new ArrayList<OrganizationalEntity>();\n          \n          \n            \n                        list = new ArrayList<>();", "bodyHTML": "<p dir=\"auto\">Not really needed</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            list <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;<span class=\"pl-smi x x-first x-last\">OrganizationalEntity</span>&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            list <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-06-26T11:49:04Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/deadlines/notifications/impl/email/EmailNotificationListener.java", "diffHunk": "@@ -218,28 +221,33 @@ protected URL getAttachemntURL(String attachment) throws MalformedURLException {\n         }\n     }\n     \n-    protected void buildMapByLanguage(Map<String, List<User>> map, Group group, UserInfo userInfo) {\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, Group group, UserInfo userInfo) {\n     \tIterator<OrganizationalEntity> it = userInfo.getMembersForGroup(group);\n     \tif (it != null) {\n \t    \twhile (it.hasNext()) {\n \t            OrganizationalEntity entity = it.next();\n \t            if (entity instanceof Group) {\n \t                buildMapByLanguage(map, (Group) entity, userInfo);\n \t            } else {\n-\t                buildMapByLanguage(map, (User) entity, userInfo);\n+                    buildMapByLanguage(map, entity, userInfo);\n \t            }\n \t        }\n     \t}\n     }\n \n-    protected void buildMapByLanguage(Map<String, List<User>> map, User user, UserInfo userInfo) {\n-        String language = userInfo.getLanguageForEntity(user);\n-        List<User> list = map.get(language);\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, OrganizationalEntity user, UserInfo userInfo) {\n+        String language = Optional.ofNullable(userInfo.getLanguageForEntity(user)).orElse(\"en-UK\");\n+        List<OrganizationalEntity> list = map.get(language);\n         if (list == null) {\n-            list = new ArrayList<User>();\n+            list = new ArrayList<OrganizationalEntity>();", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNjQ0Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446136447", "body": "`mailSession` doesn't implement `toString()` so this output will not really display anything useful.", "bodyText": "mailSession doesn't implement toString() so this output will not really display anything useful.", "bodyHTML": "<p dir=\"auto\"><code>mailSession</code> doesn't implement <code>toString()</code> so this output will not really display anything useful.</p>", "author": "afalhambra", "createdAt": "2020-06-26T11:50:49Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/deadlines/notifications/impl/email/EmailNotificationListener.java", "diffHunk": "@@ -218,28 +221,33 @@ protected URL getAttachemntURL(String attachment) throws MalformedURLException {\n         }\n     }\n     \n-    protected void buildMapByLanguage(Map<String, List<User>> map, Group group, UserInfo userInfo) {\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, Group group, UserInfo userInfo) {\n     \tIterator<OrganizationalEntity> it = userInfo.getMembersForGroup(group);\n     \tif (it != null) {\n \t    \twhile (it.hasNext()) {\n \t            OrganizationalEntity entity = it.next();\n \t            if (entity instanceof Group) {\n \t                buildMapByLanguage(map, (Group) entity, userInfo);\n \t            } else {\n-\t                buildMapByLanguage(map, (User) entity, userInfo);\n+                    buildMapByLanguage(map, entity, userInfo);\n \t            }\n \t        }\n     \t}\n     }\n \n-    protected void buildMapByLanguage(Map<String, List<User>> map, User user, UserInfo userInfo) {\n-        String language = userInfo.getLanguageForEntity(user);\n-        List<User> list = map.get(language);\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, OrganizationalEntity user, UserInfo userInfo) {\n+        String language = Optional.ofNullable(userInfo.getLanguageForEntity(user)).orElse(\"en-UK\");\n+        List<OrganizationalEntity> list = map.get(language);\n         if (list == null) {\n-            list = new ArrayList<User>();\n+            list = new ArrayList<OrganizationalEntity>();\n             map.put(language, list);\n         }\n         list.add(user);\n     }\n \n+    @Override\n+    public String toString() {\n+        return \"EmailNotificationListener (\" + mailSession + \")\";", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NDQzMw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446144433", "body": "lines from 240 to 244 could be replaced with `computeIfAbsent`\r\n```suggestion\r\n        List<OrganizationalEntity> list = map.computeIfAbsent(language, k -> new ArrayList<>());\r\n```", "bodyText": "lines from 240 to 244 could be replaced with computeIfAbsent\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<OrganizationalEntity> list = map.get(language);\n          \n          \n            \n                    List<OrganizationalEntity> list = map.computeIfAbsent(language, k -> new ArrayList<>());", "bodyHTML": "<p dir=\"auto\">lines from 240 to 244 could be replaced with <code>computeIfAbsent</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">OrganizationalEntity</span>&gt;</span> list <span class=\"pl-k\">=</span> map<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">get</span>(language);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">OrganizationalEntity</span>&gt;</span> list <span class=\"pl-k\">=</span> map<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">computeIfAbsent</span>(language<span class=\"x x-first\">, k </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">ArrayList&lt;&gt;</span><span class=\"x x-last\">()</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-06-26T12:09:24Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/deadlines/notifications/impl/email/EmailNotificationListener.java", "diffHunk": "@@ -218,28 +221,33 @@ protected URL getAttachemntURL(String attachment) throws MalformedURLException {\n         }\n     }\n     \n-    protected void buildMapByLanguage(Map<String, List<User>> map, Group group, UserInfo userInfo) {\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, Group group, UserInfo userInfo) {\n     \tIterator<OrganizationalEntity> it = userInfo.getMembersForGroup(group);\n     \tif (it != null) {\n \t    \twhile (it.hasNext()) {\n \t            OrganizationalEntity entity = it.next();\n \t            if (entity instanceof Group) {\n \t                buildMapByLanguage(map, (Group) entity, userInfo);\n \t            } else {\n-\t                buildMapByLanguage(map, (User) entity, userInfo);\n+                    buildMapByLanguage(map, entity, userInfo);\n \t            }\n \t        }\n     \t}\n     }\n \n-    protected void buildMapByLanguage(Map<String, List<User>> map, User user, UserInfo userInfo) {\n-        String language = userInfo.getLanguageForEntity(user);\n-        List<User> list = map.get(language);\n+    protected void buildMapByLanguage(Map<String, List<OrganizationalEntity>> map, OrganizationalEntity user, UserInfo userInfo) {\n+        String language = Optional.ofNullable(userInfo.getLanguageForEntity(user)).orElse(\"en-UK\");\n+        List<OrganizationalEntity> list = map.get(language);", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MzU4OQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447453589", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-30T06:59:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NDQzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTQyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446151424", "body": "Why do we need this class member?", "bodyText": "Why do we need this class member?", "bodyHTML": "<p dir=\"auto\">Why do we need this class member?</p>", "author": "afalhambra", "createdAt": "2020-06-26T12:24:50Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/identity/MvelUserGroupCallbackImpl.java", "diffHunk": "@@ -20,21 +20,27 @@\n import java.io.Reader;\n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n \n import org.jbpm.services.task.utils.MVELUtils;\n+import org.kie.api.task.model.Email;\n import org.kie.api.task.model.Group;\n import org.kie.api.task.model.User;\n import org.kie.internal.task.api.UserGroupCallback;\n \n public class MvelUserGroupCallbackImpl implements UserGroupCallback {\n \n+    private Set<Email> emails;", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1ODY2MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447458661", "bodyText": "removed", "author": "elguardian", "createdAt": "2020-06-30T07:09:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1MTQyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE4OTEyMA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446189120", "body": "Message is a little misleading.\r\n```suggestion\r\n            throw new RuntimeException(\"Email already exists with \" + email + \" id, please check that there is email with same id\");\r\n```", "bodyText": "Message is a little misleading.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(\"Email already exists with \" + email + \" id, please check that there is no group and user with same id\");\n          \n          \n            \n                        throw new RuntimeException(\"Email already exists with \" + email + \" id, please check that there is email with same id\");", "bodyHTML": "<p dir=\"auto\">Message is a little misleading.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Email already exists with <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> email <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> id, please check that there is <span class=\"x x-first x-last\">no group and user</span> with same id<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Email already exists with <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> email <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> id, please check that there is <span class=\"x x-first x-last\">email</span> with same id<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-06-26T13:37:56Z", "path": "jbpm-human-task/jbpm-human-task-jpa/src/main/java/org/jbpm/services/task/persistence/JPATaskPersistenceContext.java", "diffHunk": "@@ -225,12 +227,49 @@ public User updateUser(User user) {\n \t}\n \n \t@Override\n-\tpublic User removeUser(User user) {\n+    public User removeUser(User user) {\n \t\tcheck();\n-\t\tem.remove( user );\n-\t\treturn user;\n+        em.remove(user);\n+        return user;\n \t}\n \n+    @Override\n+    public Email findEmail(String emailId) {\n+        check();\n+        if (this.pessimisticLocking) {\n+            return this.em.find(EmailImpl.class, emailId, LockModeType.PESSIMISTIC_WRITE);\n+        }\n+        return this.em.find(EmailImpl.class, emailId);\n+    }\n+\n+    @Override\n+    public Email persistEmail(Email email) {\n+        check();\n+        try {\n+            this.em.persist(email);\n+            if (this.pessimisticLocking) {\n+                this.em.flush();\n+                return this.em.find(EmailImpl.class, email.getId(), LockModeType.PESSIMISTIC_WRITE);\n+            }\n+        } catch (EntityExistsException e) {\n+            throw new RuntimeException(\"Email already exists with \" + email + \" id, please check that there is no group and user with same id\");", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDQ4NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447460485", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-30T07:13:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE4OTEyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkwMDI1MA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446900250", "body": "if the returned email is not used, then, return void in the method.\r\nAs current implemented, when the persistIfNotExists is invoked, returns an email object that it's not being used for returning it.", "bodyText": "if the returned email is not used, then, return void in the method.\nAs current implemented, when the persistIfNotExists is invoked, returns an email object that it's not being used for returning it.", "bodyHTML": "<p dir=\"auto\">if the returned email is not used, then, return void in the method.<br>\nAs current implemented, when the persistIfNotExists is invoked, returns an email object that it's not being used for returning it.</p>", "author": "gmunozfe", "createdAt": "2020-06-29T11:32:34Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/commands/UserGroupCallbackTaskCommand.java", "diffHunk": "@@ -144,12 +154,22 @@ protected User addUserFromCallbackOperation(String userId, TaskContext context)\n         return user;\n     }\n     \n+    protected Email addEmailFromCallbackOperation(String emailId, TaskContext context) {\n+        Email email = context.getPersistenceContext().findEmail(emailId);\n+        boolean emailExists = email != null;\n+        if (!StringUtils.isEmpty(emailId) && !emailExists) {\n+            persistIfNotExists(TaskModelProvider.getFactory().newEmail(emailId), context);\n+        }\n+\n+        return email;", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MDQ1Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447450457", "bodyText": "ok", "author": "elguardian", "createdAt": "2020-06-30T06:52:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkwMDI1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyMTM2NA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446921364", "body": "Check also that it's not empty\r\n```suggestion\r\n                        if (emailAddress != null && !emailAddress.isEmpty()) {\r\n```", "bodyText": "Check also that it's not empty\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    if (emailAddress != null) {\n          \n          \n            \n                                    if (emailAddress != null && !emailAddress.isEmpty()) {", "bodyHTML": "<p dir=\"auto\">Check also that it's not empty</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">if</span> (emailAddress <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">if</span> (emailAddress <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> </span><span class=\"pl-k x\">!</span><span class=\"x\">emailAddress</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isEmpty()</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gmunozfe", "createdAt": "2020-06-29T12:10:36Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/deadlines/notifications/impl/email/EmailNotificationListener.java", "diffHunk": "@@ -78,43 +79,37 @@ public void onNotification(NotificationEvent event, UserInfo userInfo) {\n             Task task = event.getTask();\n \n             // group users into languages\n-            Map<String, List<User>> users = new HashMap<String, List<User>>();\n-            for (OrganizationalEntity entity : notification.getBusinessAdministrators()) {\n-                if (entity instanceof Group) {\n-                    buildMapByLanguage(users, (Group) entity, userInfo);\n-                } else {\n-                    buildMapByLanguage(users, (User) entity, userInfo);\n-                }\n-            }\n+            List<OrganizationalEntity> entities = new ArrayList<>();\n+            entities.addAll(notification.getBusinessAdministrators());\n+            entities.addAll(notification.getRecipients());\n \n-            for (OrganizationalEntity entity : notification.getRecipients()) {\n+            Map<String, List<OrganizationalEntity>> users = new HashMap<>();\n+            for (OrganizationalEntity entity : entities) {\n                 if (entity instanceof Group) {\n                     buildMapByLanguage(users, (Group) entity, userInfo);\n                 } else {\n-                    buildMapByLanguage(users, (User) entity, userInfo);\n+                    buildMapByLanguage(users, entity, userInfo);\n                 }\n             }\n \n             Map<String, Object> variables = event.getContent();\n-\n-\n             Map<? extends Language, ? extends EmailNotificationHeader> headers = notification.getEmailHeaders();\n \n-            for (Iterator<Map.Entry<String, List<User>>> it = users.entrySet()\n+            for (Iterator<Map.Entry<String, List<OrganizationalEntity>>> it = users.entrySet()\n                     .iterator(); it.hasNext();) {\n                \n                 try { \n-                    Map.Entry<String, List<User>> entry = it.next();\n+                    Map.Entry<String, List<OrganizationalEntity>> entry = it.next();\n                     Language lang = TaskModelProvider.getFactory().newLanguage();\n                     lang.setMapkey(entry.getKey());\n                     EmailNotificationHeader header = headers.get(lang);\n     \n                     Message msg = new MimeMessage(mailSession);\n                     Set<String> toAddresses = new HashSet<String>();\n-                    for (User user : entry.getValue()) {\n+                    for (OrganizationalEntity user : entry.getValue()) {\n     \n-                        String emailAddress = userInfo.getEmailForEntity(user);\n-                        if (emailAddress != null) {                        \t\n+                        String emailAddress = getEmailFromOrganizationEntity(userInfo, user);\n+                        if (emailAddress != null) {", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MjYxNw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447452617", "bodyText": "done.", "author": "elguardian", "createdAt": "2020-06-30T06:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkyMTM2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzNDA4MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446934081", "body": "Question marks (0..1 repetitions) after asterisks (0..n repetitions) are useless in regex\r\n```suggestion\r\n            Pattern pattern = Pattern.compile(\"\\\\[(.*)\\\\]@\\\\[(.*)\\\\]\");\r\n```", "bodyText": "Question marks (0..1 repetitions) after asterisks (0..n repetitions) are useless in regex\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Pattern pattern = Pattern.compile(\"\\\\[(.*?)\\\\]@\\\\[(.*?)\\\\]\");\n          \n          \n            \n                        Pattern pattern = Pattern.compile(\"\\\\[(.*)\\\\]@\\\\[(.*)\\\\]\");", "bodyHTML": "<p dir=\"auto\">Question marks (0..1 repetitions) after asterisks (0..n repetitions) are useless in regex</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Pattern</span> pattern <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>[(.*<span class=\"x x-first x-last\">?</span>)<span class=\"pl-cce\">\\\\</span>]@<span class=\"pl-cce\">\\\\</span>[(.*<span class=\"x x-first x-last\">?</span>)<span class=\"pl-cce\">\\\\</span>]<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Pattern</span> pattern <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\\</span>[(.*)<span class=\"pl-cce\">\\\\</span>]@<span class=\"pl-cce\">\\\\</span>[(.*)<span class=\"pl-cce\">\\\\</span>]<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gmunozfe", "createdAt": "2020-06-29T12:32:15Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/impl/util/HumanTaskHandlerHelper.java", "diffHunk": "@@ -98,13 +100,17 @@ public static Deadlines setDeadlines(Map<String, Object> parameters, List<Organi\n         }\n         \n         for (String component : allComponents) {\n-\t        String[] mainComponents = component.split(ELEMENT_SEPARATOR);\n-\t        \n-\t        if (mainComponents!= null && mainComponents.length == 2) {\n-\t            String actionComponent = mainComponents[0].substring(1, mainComponents[0].length()-1);\n-\t            String expireComponents = mainComponents[1].substring(1, mainComponents[1].length()-1);\n-\t \n-\t            String[] expireElements = expireComponents.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n+            Pattern pattern = Pattern.compile(\"\\\\[(.*?)\\\\]@\\\\[(.*?)\\\\]\");", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1OTUzMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447459531", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-30T07:11:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzNDA4MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1NDE2Mw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r446954163", "body": "Better trim() before split for making it more robust.\r\nIn fact, ATTRIBUTES_ELEMENTS_SEPARATOR should be \r\n`ATTRIBUTES_ELEMENTS_SEPARATOR = \"\\\\s*,\\\\s*\";`\r\n\r\n```suggestion\r\n                String[] emailRecipientsIds = emailRecipients.trim().split(ATTRIBUTES_ELEMENTS_SEPARATOR);\r\n```\r\n\r\nThis will avoid that this considers 3 elements in the actionComponent instead of 2:\r\n`[toemails: salaboy@unkown.com ,  krisv@unknown.com,  ]@[R3/PT4H]`\r\n", "bodyText": "Better trim() before split for making it more robust.\nIn fact, ATTRIBUTES_ELEMENTS_SEPARATOR should be\nATTRIBUTES_ELEMENTS_SEPARATOR = \"\\\\s*,\\\\s*\";\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String[] emailRecipientsIds = emailRecipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n          \n          \n            \n                            String[] emailRecipientsIds = emailRecipients.trim().split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n          \n      \n    \n    \n  \n\nThis will avoid that this considers 3 elements in the actionComponent instead of 2:\n[toemails: salaboy@unkown.com ,  krisv@unknown.com,  ]@[R3/PT4H]", "bodyHTML": "<p dir=\"auto\">Better trim() before split for making it more robust.<br>\nIn fact, ATTRIBUTES_ELEMENTS_SEPARATOR should be<br>\n<code>ATTRIBUTES_ELEMENTS_SEPARATOR = \"\\\\s*,\\\\s*\";</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">String</span>[] emailRecipientsIds <span class=\"pl-k\">=</span> emailRecipients<span class=\"pl-k\">.</span>split(<span class=\"pl-c1\">ATTRIBUTES_ELEMENTS_SEPARATOR</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">String</span>[] emailRecipientsIds <span class=\"pl-k\">=</span> emailRecipients<span class=\"pl-k\">.</span><span class=\"x x-first\">trim()</span><span class=\"pl-k x x-last\">.</span>split(<span class=\"pl-c1\">ATTRIBUTES_ELEMENTS_SEPARATOR</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This will avoid that this considers 3 elements in the actionComponent instead of 2:<br>\n<code>[toemails: salaboy@unkown.com ,  krisv@unknown.com,  ]@[R3/PT4H]</code></p>", "author": "gmunozfe", "createdAt": "2020-06-29T13:04:01Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/impl/util/HumanTaskHandlerHelper.java", "diffHunk": "@@ -193,27 +199,30 @@ protected static Deadline getNewDeadline(String expiresAt, Date deadlineDate, St\n \t\t\tsubjects.add(subject);\n \t\t\tnames.add(subject);\n \n-\t\t\tString recipients = parameters.get(\"tousers\");\n-\t\t\tif (recipients != null && recipients.trim().length() > 0) {\n-\t\t\t\tString[] recipientsIds = recipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n+            String recipients = parameters.get(\"tousers\");\n+            if (recipients != null && recipients.trim().length() > 0) {\n+                String[] recipientsIds = recipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n+                for (String id : recipientsIds) {\n+                    notificationRecipients.add(TaskModelProvider.getFactory().newUser(id.trim()));\n+                }\n+            }\n \n-\t\t\t\tfor (String id : recipientsIds) {\n-\t\t\t\t\tUser user = TaskModelProvider.getFactory().newUser();\n-                \t((InternalOrganizationalEntity) user).setId(id.trim());\n-\t\t\t\t\tnotificationRecipients.add(user);\n-\t\t\t\t}\n+            String groupRecipients = parameters.get(\"togroups\");\n+            if (groupRecipients != null && groupRecipients.trim().length() > 0) {\n+                String[] groupRecipientsIds = groupRecipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n \n-\t\t\t}\n-\t\t\tString groupRecipients = parameters.get(\"togroups\");\n-\t\t\tif (groupRecipients != null && groupRecipients.trim().length() > 0) {\n-\t\t\t\tString[] groupRecipientsIds = groupRecipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);\n+                for (String id : groupRecipientsIds) {\n+                    notificationRecipients.add(TaskModelProvider.getFactory().newGroup(id.trim()));\n+                }\n+            }\n \n-\t\t\t\tfor (String id : groupRecipientsIds) {\n-\t\t\t\t\tGroup group = TaskModelProvider.getFactory().newGroup();\n-                \t((InternalOrganizationalEntity) group).setId(id.trim());\n-\t\t\t\t\tnotificationRecipients.add(group);\n-\t\t\t\t}\n-\t\t\t}\n+            String emailRecipients = parameters.get(\"toemails\");\n+            if (emailRecipients != null && emailRecipients.trim().length() > 0) {\n+                String[] emailRecipientsIds = emailRecipients.split(ATTRIBUTES_ELEMENTS_SEPARATOR);", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1OTkxNw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447459917", "bodyText": "for consistency I let this.", "author": "elguardian", "createdAt": "2020-06-30T07:12:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1NDE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAxNDc2Nw==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447014767", "body": "I cannot see where these methods are invoked and if they are really needed.\r\nFor persist, at the end, _persistIfNotExist_ calls to _tpc.persistOrgEntity(entity);_\r\nCould you clarify if they are needed for persistence? \r\nI cannot see an analogous scenario to _add-group-command_ for email.", "bodyText": "I cannot see where these methods are invoked and if they are really needed.\nFor persist, at the end, persistIfNotExist calls to tpc.persistOrgEntity(entity);\nCould you clarify if they are needed for persistence?\nI cannot see an analogous scenario to add-group-command for email.", "bodyHTML": "<p dir=\"auto\">I cannot see where these methods are invoked and if they are really needed.<br>\nFor persist, at the end, <em>persistIfNotExist</em> calls to <em>tpc.persistOrgEntity(entity);</em><br>\nCould you clarify if they are needed for persistence?<br>\nI cannot see an analogous scenario to <em>add-group-command</em> for email.</p>", "author": "gmunozfe", "createdAt": "2020-06-29T14:29:00Z", "path": "jbpm-human-task/jbpm-human-task-jpa/src/main/java/org/jbpm/services/task/persistence/JPATaskPersistenceContext.java", "diffHunk": "@@ -225,12 +227,49 @@ public User updateUser(User user) {\n \t}\n \n \t@Override\n-\tpublic User removeUser(User user) {\n+    public User removeUser(User user) {\n \t\tcheck();\n-\t\tem.remove( user );\n-\t\treturn user;\n+        em.remove(user);\n+        return user;\n \t}\n \n+    @Override\n+    public Email findEmail(String emailId) {\n+        check();\n+        if (this.pessimisticLocking) {\n+            return this.em.find(EmailImpl.class, emailId, LockModeType.PESSIMISTIC_WRITE);\n+        }\n+        return this.em.find(EmailImpl.class, emailId);\n+    }\n+\n+    @Override\n+    public Email persistEmail(Email email) {\n+        check();\n+        try {\n+            this.em.persist(email);\n+            if (this.pessimisticLocking) {\n+                this.em.flush();\n+                return this.em.find(EmailImpl.class, email.getId(), LockModeType.PESSIMISTIC_WRITE);\n+            }\n+        } catch (EntityExistsException e) {\n+            throw new RuntimeException(\"Email already exists with \" + email + \" id, please check that there is no group and user with same id\");\n+        }\n+        return email;\n+    }\n+\n+    @Override\n+    public Email updateEmail(Email email) {\n+        check();\n+        return this.em.merge(email);\n+    }\n+\n+    @Override\n+    public Email removeEmail(Email email) {\n+        check();\n+        em.remove(email);\n+        return email;\n+    }", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ2MDY0MQ==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447460641", "bodyText": "for consistency leting this here.", "author": "elguardian", "createdAt": "2020-06-30T07:13:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAxNDc2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNTkzMg==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447025932", "body": "This block (L407-420) is repeated also for End Deadlines. Perhaps, now it's a good opportunity to refactor it and extract it into a private method for enhancing maintainability.", "bodyText": "This block (L407-420) is repeated also for End Deadlines. Perhaps, now it's a good opportunity to refactor it and extract it into a private method for enhancing maintainability.", "bodyHTML": "<p dir=\"auto\">This block (L407-420) is repeated also for End Deadlines. Perhaps, now it's a good opportunity to refactor it and extract it into a private method for enhancing maintainability.</p>", "author": "gmunozfe", "createdAt": "2020-06-29T14:43:45Z", "path": "jbpm-human-task/jbpm-human-task-core/src/main/java/org/jbpm/services/task/commands/UserGroupCallbackTaskCommand.java", "diffHunk": "@@ -391,9 +411,10 @@ protected void doCallbackOperationForTaskDeadlines(Deadlines deadlines, TaskCont\n                                         for(OrganizationalEntity recipient : recipients) {\n                                             if(recipient instanceof User) {\n                                                 doCallbackUserOperation(recipient.getId(), context);\n-                                            }\n-                                            if(recipient instanceof Group) {\n+                                            } else if (recipient instanceof Group) {\n                                                 doCallbackGroupOperation(recipient.getId(), context);\n+                                            } else if (recipient instanceof Email) {\n+                                                doCallbackEmailOperation(recipient.getId(), context);\n                                             }\n                                         }\n                                     }", "originalCommit": "5f7eb7fe3141b9865279fbb81d4c68adb6dc9d73", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1MjIyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447452224", "bodyText": "done", "author": "elguardian", "createdAt": "2020-06-30T06:56:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNTkzMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ1NzcyNA==", "url": "https://github.com/kiegroup/jbpm/pull/1684#discussion_r447457724", "bodyText": "ok", "author": "elguardian", "createdAt": "2020-06-30T07:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAyNTkzMg=="}], "type": "inlineReview"}, {"oid": "6bab2491564197fdf56d339a5513ed011bbc5b1a", "url": "https://github.com/kiegroup/jbpm/commit/6bab2491564197fdf56d339a5513ed011bbc5b1a", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-06-30T07:14:14Z", "type": "forcePushed"}, {"oid": "a703489a8c2328c905cc4ff85bef373a23723482", "url": "https://github.com/kiegroup/jbpm/commit/a703489a8c2328c905cc4ff85bef373a23723482", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-07-27T07:08:22Z", "type": "forcePushed"}, {"oid": "646e821fd42c8881da2291d34ebc21b21f191e2f", "url": "https://github.com/kiegroup/jbpm/commit/646e821fd42c8881da2291d34ebc21b21f191e2f", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-07-31T06:58:42Z", "type": "commit"}, {"oid": "646e821fd42c8881da2291d34ebc21b21f191e2f", "url": "https://github.com/kiegroup/jbpm/commit/646e821fd42c8881da2291d34ebc21b21f191e2f", "message": "[JBPM-9197] Allow the introduction of emails in Tasks notifications", "committedDate": "2020-07-31T06:58:42Z", "type": "forcePushed"}]}