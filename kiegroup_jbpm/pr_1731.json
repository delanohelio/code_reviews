{"pr_number": 1731, "pr_title": "[JBPM-9296] Self contained Audit/History module", "pr_author": "elguardian", "pr_createdAt": "2020-08-18T17:38:38Z", "pr_url": "https://github.com/kiegroup/jbpm/pull/1731", "timeline": [{"oid": "c84efb5d91a99d1732ef1901d2ddedd491fc9553", "url": "https://github.com/kiegroup/jbpm/commit/c84efb5d91a99d1732ef1901d2ddedd491fc9553", "message": "[JBPM-9296] Self contained Audit/History module", "committedDate": "2020-08-19T06:44:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzcxMTE2NA==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r473711164", "body": "This might be simplified as follows:\r\n\r\n```suggestion\r\n        attributes.removeIf(param -> param.getOperator().equals(\"MODE\"));\r\n```", "bodyText": "This might be simplified as follows:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Iterator<QueryParam> iterator = attributes.iterator();\n          \n          \n            \n                    while(iterator.hasNext()) {\n          \n          \n            \n                        QueryParam param = iterator.next();\n          \n          \n            \n                        if(param.getOperator().equals(\"MODE\")) {\n          \n          \n            \n                            iterator.remove();\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    attributes.removeIf(param -> param.getOperator().equals(\"MODE\"));", "bodyHTML": "<p dir=\"auto\">This might be simplified as follows:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Iterator&lt;<span class=\"pl-smi\">QueryParam</span>&gt;</span> iterator <span class=\"pl-k\">=</span> attributes<span class=\"pl-k\">.</span>iterator();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">while</span>(iterator<span class=\"pl-k\">.</span>hasNext()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">QueryParam</span> param <span class=\"pl-k\">=</span> iterator<span class=\"pl-k\">.</span>next();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span>(param<span class=\"pl-k\">.</span>getOperator()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MODE<span class=\"pl-pds\">\"</span></span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                iterator<span class=\"pl-k\">.</span>remove();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        attributes<span class=\"pl-k\">.</span>removeIf(param <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> param<span class=\"pl-k\">.</span>getOperator()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MODE<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-08-20T07:44:06Z", "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/AbstractAdvanceRuntimeDataServiceImpl.java", "diffHunk": "@@ -120,6 +149,13 @@ public void setEmf(EntityManagerFactory emf) {\n                                                            BiFunction<List<Number>, String, List<R>> dataCollector) {\n \n         List<QueryParam> attributes = attributesArg != null ? attributesArg : emptyList();\n+        Iterator<QueryParam> iterator = attributes.iterator();\n+        while(iterator.hasNext()) {\n+            QueryParam param = iterator.next();\n+            if(param.getOperator().equals(\"MODE\")) {\n+                iterator.remove();\n+            }\n+        }", "originalCommit": "c84efb5d91a99d1732ef1901d2ddedd491fc9553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2NjMxMA==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r475466310", "bodyText": "done", "author": "elguardian", "createdAt": "2020-08-24T09:31:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzcxMTE2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc1NjQwNg==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r473756406", "body": "Maybe, we could also use `singletonList` here\r\n\r\n```suggestion\r\n        return new QueryParam(null, \"MODE\", Collections.singletonList(\"HISTORY\"));\r\n```", "bodyText": "Maybe, we could also use singletonList here\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new QueryParam(null, \"MODE\", Arrays.asList(\"HISTORY\"));\n          \n          \n            \n                    return new QueryParam(null, \"MODE\", Collections.singletonList(\"HISTORY\"));", "bodyHTML": "<p dir=\"auto\">Maybe, we could also use <code>singletonList</code> here</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">QueryParam</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MODE<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi x x-first\">Arrays</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">asList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HISTORY<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">QueryParam</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MODE<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi x x-first\">Collections</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">singletonList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>HISTORY<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "afalhambra", "createdAt": "2020-08-20T08:25:36Z", "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/query/model/QueryParam.java", "diffHunk": "@@ -268,6 +268,10 @@ public static QueryParam max(String column) {\n     public static QueryParam type(String column, Comparable<?> type) {\n         return new QueryParam(column, \"TYPE\", Arrays.asList(type));\n     }\n+\n+    public static QueryParam history() {\n+        return new QueryParam(null, \"MODE\", Arrays.asList(\"HISTORY\"));", "originalCommit": "c84efb5d91a99d1732ef1901d2ddedd491fc9553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2NjcwNA==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r475466704", "bodyText": "done", "author": "elguardian", "createdAt": "2020-08-24T09:31:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc1NjQwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3MDgxNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r473770815", "body": "I would add some validations/checks on the data returned by the API to make sure the data match with the search criteria specified above.", "bodyText": "I would add some validations/checks on the data returned by the API to make sure the data match with the search criteria specified above.", "bodyHTML": "<p dir=\"auto\">I would add some validations/checks on the data returned by the API to make sure the data match with the search criteria specified above.</p>", "author": "afalhambra", "createdAt": "2020-08-20T08:41:33Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -459,5 +460,56 @@ public void testQueryTaskByVariablesWithInputOutput() {\n             assertThat(userTask.getProcessVariables().get(\"var_b\"), is(\"3\"));\n         }\n     }\n+    \n+    @Test\n+    public void testQueryHistoryAllNull() {\n+        List<QueryParam> attributes = list(history());\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, null, null, null, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        } else {\n+            assertThat(data.size(), is(20));\n+        }\n+    }\n+    \n+    @Test\n+    public void testQueryHistoryIsNotNullOperator() {\n+\n+        List<QueryParam> attributes = list(history(), isNull(TASK_ATTR_OWNER));\n+\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, emptyList(), emptyList(), emptyList(), queryContext);\n+        assertThat(data.size(), is(0));\n+\n+    }\n+\n+    @Test\n+    public void testQueryHistoryProcessByAttributes() {\n+        List<QueryParam> attributes = list(history(), equalsTo(PROCESS_ATTR_DEFINITION_ID, \"test.test_A\"), equalsTo(PROCESS_ATTR_CORRELATION_KEY, \"1\"));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, emptyList(), queryContext);\n+        assertThat(data.size(), is(1));\n+    }", "originalCommit": "c84efb5d91a99d1732ef1901d2ddedd491fc9553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2OTEzNQ==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r475469135", "bodyText": "I don't see the point at this point as the funcionality is already working. Just chaning the way to get the ids. This test are to check whether this that table fails or not, but audit table and runtime table has the same data.", "author": "elguardian", "createdAt": "2020-08-24T09:33:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3MDgxNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3NjY5NQ==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r473776695", "body": "I would add some filters to the search criteria and check the data returned by the API call afterwards.", "bodyText": "I would add some filters to the search criteria and check the data returned by the API call afterwards.", "bodyHTML": "<p dir=\"auto\">I would add some filters to the search criteria and check the data returned by the API call afterwards.</p>", "author": "afalhambra", "createdAt": "2020-08-20T08:47:40Z", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -459,5 +460,56 @@ public void testQueryTaskByVariablesWithInputOutput() {\n             assertThat(userTask.getProcessVariables().get(\"var_b\"), is(\"3\"));\n         }\n     }\n+    \n+    @Test\n+    public void testQueryHistoryAllNull() {\n+        List<QueryParam> attributes = list(history());\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, null, null, null, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        } else {\n+            assertThat(data.size(), is(20));\n+        }\n+    }\n+    \n+    @Test\n+    public void testQueryHistoryIsNotNullOperator() {\n+\n+        List<QueryParam> attributes = list(history(), isNull(TASK_ATTR_OWNER));\n+\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, emptyList(), emptyList(), emptyList(), queryContext);\n+        assertThat(data.size(), is(0));\n+\n+    }\n+\n+    @Test\n+    public void testQueryHistoryProcessByAttributes() {\n+        List<QueryParam> attributes = list(history(), equalsTo(PROCESS_ATTR_DEFINITION_ID, \"test.test_A\"), equalsTo(PROCESS_ATTR_CORRELATION_KEY, \"1\"));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, emptyList(), queryContext);\n+        assertThat(data.size(), is(1));\n+    }\n+\n+    @Test\n+    public void testQueryHistoryProcessByVariablesAndTask() {\n+        List<QueryParam> attributes = list(history());\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariablesAndTask(attributes, emptyList(), emptyList(), emptyList(), queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        } else {\n+            assertThat(data.size(), is(20));\n+        }\n+    }\n+\n+    @Test\n+    public void testQueryProcessByVariablesAndTask() {\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariablesAndTask(emptyList(), emptyList(), emptyList(), emptyList(), queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        } else {\n+            assertThat(data.size(), is(20));\n+        }\n+    }", "originalCommit": "c84efb5d91a99d1732ef1901d2ddedd491fc9553", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ2OTIyMQ==", "url": "https://github.com/kiegroup/jbpm/pull/1731#discussion_r475469221", "bodyText": "I don't see the point at this point as the funcionality is already working. Just chaning the way to get the ids. This test are to check whether this that table fails or not, but audit table and runtime table has the same data.", "author": "elguardian", "createdAt": "2020-08-24T09:34:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc3NjY5NQ=="}], "type": "inlineReview"}, {"oid": "80d4c9a219f76910ca406233e7902d8b151d6fb3", "url": "https://github.com/kiegroup/jbpm/commit/80d4c9a219f76910ca406233e7902d8b151d6fb3", "message": "[JBPM-9296] Self contained Audit/History module", "committedDate": "2020-08-24T09:34:21Z", "type": "commit"}, {"oid": "80d4c9a219f76910ca406233e7902d8b151d6fb3", "url": "https://github.com/kiegroup/jbpm/commit/80d4c9a219f76910ca406233e7902d8b151d6fb3", "message": "[JBPM-9296] Self contained Audit/History module", "committedDate": "2020-08-24T09:34:21Z", "type": "forcePushed"}]}