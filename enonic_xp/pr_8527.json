{"pr_number": 8527, "pr_title": "Return all projects layers in /list API #8413", "pr_author": "vbradnitski", "pr_createdAt": "2020-12-04T10:06:35Z", "pr_url": "https://github.com/enonic/xp/pull/8527", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMDk4MQ==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r536000981", "body": "Change to findFirst() so when we support multi-inheritance first project will be returned", "bodyText": "Change to findFirst() so when we support multi-inheritance first project will be returned", "bodyHTML": "<p dir=\"auto\">Change to findFirst() so when we support multi-inheritance first project will be returned</p>", "author": "rymsha", "createdAt": "2020-12-04T10:35:42Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "diffHunk": "@@ -39,6 +39,14 @@ public static Projects from( Repositories repositories )\n             build();\n     }\n \n+    public Project get( final ProjectName name )\n+    {\n+        return this.stream().\n+            filter( project -> project.getName().equals( name ) ).\n+            findAny().", "originalCommit": "f0d8553e79f24ef373eaec0b86cf01360457686d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "804a741c21595ec0b1ce246c34cadb95b5a29a76", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\nindex 936e8230e8..084ba9979d 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n", "chunk": "@@ -43,7 +43,7 @@ public final class Projects\n     {\n         return this.stream().\n             filter( project -> project.getName().equals( name ) ).\n-            findAny().\n+            findFirst().\n             orElse( null );\n     }\n \n", "next_change": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\nindex 084ba9979d..a58162f846 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n", "chunk": "@@ -39,14 +39,6 @@ public final class Projects\n             build();\n     }\n \n-    public Project get( final ProjectName name )\n-    {\n-        return this.stream().\n-            filter( project -> project.getName().equals( name ) ).\n-            findFirst().\n-            orElse( null );\n-    }\n-\n     public static Builder create()\n     {\n         return new Builder();\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxNTI2Mw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r536015263", "body": "I think we need graph method in projectService. This one does not follow spec https://github.com/enonic/xp/issues/8413#issuecomment-737136515", "bodyText": "I think we need graph method in projectService. This one does not follow spec #8413 (comment)", "bodyHTML": "<p dir=\"auto\">I think we need graph method in projectService. This one does not follow spec <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"715418017\" data-permission-text=\"Title is private\" data-url=\"https://github.com/enonic/xp/issues/8413\" data-hovercard-type=\"issue\" data-hovercard-url=\"/enonic/xp/issues/8413/hovercard?comment_id=737136515&amp;comment_type=issue_comment\" href=\"https://github.com/enonic/xp/issues/8413#issuecomment-737136515\">#8413 (comment)</a></p>", "author": "rymsha", "createdAt": "2020-12-04T10:58:28Z", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "diffHunk": "@@ -184,6 +192,47 @@ public ProjectJson get( final @QueryParam(\"name\") String projectNameValue )\n         return doCreateJson( this.projectService.get( projectName ) );\n     }\n \n+    @GET\n+    @Path(\"getTree\")\n+    public List<ProjectParentJson> getTree( final @QueryParam(\"name\") String projectNameValue )\n+    {\n+        final List<Project> result = new ArrayList<>();\n+        final Projects projects = adminContext().callWith( () -> this.projectService.list() );", "originalCommit": "f0d8553e79f24ef373eaec0b86cf01360457686d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "804a741c21595ec0b1ce246c34cadb95b5a29a76", "changed_code": [{"header": "diff --git a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java\nindex bb53b53f8b..b4154965c5 100644\n--- a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java\n+++ b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java\n", "chunk": "@@ -194,43 +188,10 @@ public final class ProjectResource\n \n     @GET\n     @Path(\"getTree\")\n-    public List<ProjectParentJson> getTree( final @QueryParam(\"name\") String projectNameValue )\n+    public ProjectGraphJson getTree( final @QueryParam(\"name\") String projectNameValue )\n     {\n-        final List<Project> result = new ArrayList<>();\n-        final Projects projects = adminContext().callWith( () -> this.projectService.list() );\n-\n-        final Project targetProject = projects.get( ProjectName.from( projectNameValue ) );\n-\n-        Project project = targetProject;\n-\n-        while ( project.getParent() != null )\n-        {\n-            project = projects.get( project.getParent() );\n-            result.add( project );\n-\n-        }\n-\n-        Collections.reverse( result );\n-\n-        result.add( targetProject );\n-\n-        final Queue<Project> children = new LinkedList<>();\n-        children.add( targetProject );\n-\n-        while ( !children.isEmpty() )\n-        {\n-            final Project current = children.poll();\n-            projects.stream().\n-                filter( p -> current.getName().equals( p.getParent() ) ).\n-                forEach( child -> {\n-                    children.offer( child );\n-                    result.add( child );\n-                } );\n-        }\n-\n-        return result.stream().\n-            map( ProjectParentJson::new ).\n-            collect( Collectors.toList() );\n+        final ProjectGraph graph = this.projectService.graph( ProjectName.from( projectNameValue ) );\n+        return new ProjectGraphJson( graph );\n     }\n \n     private CreateProjectParams createParams( final CreateProjectParamsJson json )\n", "next_change": null}]}}, {"oid": "804a741c21595ec0b1ce246c34cadb95b5a29a76", "url": "https://github.com/enonic/xp/commit/804a741c21595ec0b1ce246c34cadb95b5a29a76", "message": "Return all projects layers in /list API #8413", "committedDate": "2020-12-07T10:16:58Z", "type": "forcePushed"}, {"oid": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "url": "https://github.com/enonic/xp/commit/f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "message": "Return all projects layers in /list API #8413", "committedDate": "2020-12-07T10:40:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwMjk1MA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537402950", "body": "Is it OK to extend lmmutavleList here?", "bodyText": "Is it OK to extend lmmutavleList here?", "bodyHTML": "<p dir=\"auto\">Is it OK to extend lmmutavleList here?</p>", "author": "rymsha", "createdAt": "2020-12-07T10:41:15Z", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.json;\n+\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.project.ProjectGraph;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+public final class ProjectGraphJson\n+    extends AbstractImmutableEntityList<ProjectGraphEntryJson>", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ0MjA0Mw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537442043", "bodyText": "we do the same with AccessControlEntriesJson", "author": "vbradnitski", "createdAt": "2020-12-07T11:44:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwMjk1MA=="}], "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\nindex c6e2e2d10e..cd28260874 100644\n--- a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n+++ b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n", "chunk": "@@ -1,19 +1,25 @@\n package com.enonic.xp.admin.impl.rest.resource.project.json;\n \n+import java.util.List;\n import java.util.stream.Collectors;\n \n import com.google.common.collect.ImmutableList;\n \n import com.enonic.xp.project.ProjectGraph;\n-import com.enonic.xp.support.AbstractImmutableEntityList;\n \n public final class ProjectGraphJson\n-    extends AbstractImmutableEntityList<ProjectGraphEntryJson>\n {\n+    private final List<ProjectGraphEntryJson> entries;\n+\n     public ProjectGraphJson( final ProjectGraph projectGraph )\n     {\n-        super( projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().\n+        this.entries = projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().\n             map( ProjectGraphEntryJson::new ).\n-            collect( Collectors.toList() ) ) : ImmutableList.of() );\n+            collect( Collectors.toList() ) ) : ImmutableList.of();\n+    }\n+\n+    public List<ProjectGraphEntryJson> getEntries()\n+    {\n+        return entries;\n     }\n }\n", "next_change": {"commit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "changed_code": [{"header": "diff --git a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\nindex cd28260874..69bc843441 100644\n--- a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n+++ b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n", "chunk": "@@ -13,9 +11,9 @@ public final class ProjectGraphJson\n \n     public ProjectGraphJson( final ProjectGraph projectGraph )\n     {\n-        this.entries = projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().\n+        this.entries = projectGraph != null ? List.copyOf( projectGraph.stream().\n             map( ProjectGraphEntryJson::new ).\n-            collect( Collectors.toList() ) ) : ImmutableList.of();\n+            collect( Collectors.toList() ) ) : List.of();\n     }\n \n     public List<ProjectGraphEntryJson> getEntries()\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNDUxMA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537404510", "body": "Utility methods don't belong to here. ", "bodyText": "Utility methods don't belong to here.", "bodyHTML": "<p dir=\"auto\">Utility methods don't belong to here.</p>", "author": "rymsha", "createdAt": "2020-12-07T10:43:33Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java", "diffHunk": "@@ -39,6 +39,14 @@ public static Projects from( Repositories repositories )\n             build();\n     }\n \n+    public Project get( final ProjectName name )", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\nindex 084ba9979d..a58162f846 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/Projects.java\n", "chunk": "@@ -39,14 +39,6 @@ public final class Projects\n             build();\n     }\n \n-    public Project get( final ProjectName name )\n-    {\n-        return this.stream().\n-            filter( project -> project.getName().equals( name ) ).\n-            findFirst().\n-            orElse( null );\n-    }\n-\n     public static Builder create()\n     {\n         return new Builder();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNjAzMA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537406030", "body": "It has multiple parents in graph", "bodyText": "It has multiple parents in graph", "bodyHTML": "<p dir=\"auto\">It has multiple parents in graph</p>", "author": "rymsha", "createdAt": "2020-12-07T10:45:40Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNjM5Nw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537406397", "body": "This is service responsibility to convert", "bodyText": "This is service responsibility to convert", "bodyHTML": "<p dir=\"auto\">This is service responsibility to convert</p>", "author": "rymsha", "createdAt": "2020-12-07T10:46:13Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;\n+\n+    private ProjectGraphEntry( Builder builder )\n+    {\n+        this.name = builder.name;\n+        this.parent = builder.parent;\n+    }\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static ProjectGraphEntry from( final Project project )", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\nindex bed8be3c7a..41a4c3e375 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\n", "chunk": "@@ -24,19 +22,6 @@ public final class ProjectGraphEntry\n         return new Builder();\n     }\n \n-    public static ProjectGraphEntry from( final Project project )\n-    {\n-        if ( project == null )\n-        {\n-            return null;\n-        }\n-\n-        return ProjectGraphEntry.create().\n-            name( project.getName() ).\n-            parent( project.getParent() ).\n-            build();\n-    }\n-\n     public ProjectName getName()\n     {\n         return name;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNzAwOQ==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537407009", "body": "I'm not sure we need equality methods in this class", "bodyText": "I'm not sure we need equality methods in this class", "bodyHTML": "<p dir=\"auto\">I'm not sure we need equality methods in this class</p>", "author": "rymsha", "createdAt": "2020-12-07T10:47:09Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Objects;\n+\n+import com.google.common.base.Preconditions;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+\n+@PublicApi\n+public final class ProjectGraphEntry\n+{\n+    private final ProjectName name;\n+\n+    private final ProjectName parent;\n+\n+    private ProjectGraphEntry( Builder builder )\n+    {\n+        this.name = builder.name;\n+        this.parent = builder.parent;\n+    }\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    public static ProjectGraphEntry from( final Project project )\n+    {\n+        if ( project == null )\n+        {\n+            return null;\n+        }\n+\n+        return ProjectGraphEntry.create().\n+            name( project.getName() ).\n+            parent( project.getParent() ).\n+            build();\n+    }\n+\n+    public ProjectName getName()\n+    {\n+        return name;\n+    }\n+\n+    public ProjectName getParent()\n+    {\n+        return parent;\n+    }\n+\n+    @Override\n+    public boolean equals( final Object o )", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\nindex bed8be3c7a..41a4c3e375 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraphEntry.java\n", "chunk": "@@ -48,24 +33,9 @@ public final class ProjectGraphEntry\n     }\n \n     @Override\n-    public boolean equals( final Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        final ProjectGraphEntry that = (ProjectGraphEntry) o;\n-        return Objects.equals( name, that.name ) && Objects.equals( parent, that.parent );\n-    }\n-\n-    @Override\n-    public int hashCode()\n+    public String toString()\n     {\n-        return Objects.hash( name, parent );\n+        return \"ProjectGraphEntry{\" + \"name=\" + name + \", parent=\" + parent + '}';\n     }\n \n     public static final class Builder\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3OTY3Nw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537479677", "body": "delete", "bodyText": "delete", "bodyHTML": "<p dir=\"auto\">delete</p>", "author": "rymsha", "createdAt": "2020-12-07T12:47:27Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.enonic.xp.project;\n+\n+import java.util.Collection;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+@PublicApi\n+public final class ProjectGraph\n+    extends AbstractImmutableEntityList<ProjectGraphEntry>\n+{\n+    private ProjectGraph( final Builder builder )\n+    {\n+        super( builder.projects.build() );\n+    }\n+\n+    public static ProjectGraph empty()\n+    {\n+        return create().build();\n+    }\n+\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    @Override\n+    public String toString()", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\nindex 23f14a2bfd..49f2461516 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\n", "chunk": "@@ -22,34 +19,15 @@ public final class ProjectGraph\n         return create().build();\n     }\n \n-\n     public static Builder create()\n     {\n         return new Builder();\n     }\n \n-    @Override\n-    public String toString()\n-    {\n-        final MoreObjects.ToStringHelper s = MoreObjects.toStringHelper( this );\n-        for ( final ProjectGraphEntry project : this )\n-        {\n-            s.add( \"project\", project.toString() );\n-        }\n-\n-        return s.toString();\n-    }\n-\n     public static class Builder\n     {\n         private ImmutableList.Builder<ProjectGraphEntry> projects = ImmutableList.builder();\n \n-        public Builder addAll( Collection<ProjectGraphEntry> projects )\n-        {\n-            this.projects.addAll( projects );\n-            return this;\n-        }\n-\n         public Builder add( ProjectGraphEntry project )\n         {\n             this.projects.add( project );\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4Mjc3Ng==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537482776", "body": "no need", "bodyText": "no need", "bodyHTML": "<p dir=\"auto\">no need</p>", "author": "rymsha", "createdAt": "2020-12-07T12:52:21Z", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -252,6 +260,53 @@ public Projects list()\n         } );\n     }\n \n+    @Override\n+    public ProjectGraph graph( final ProjectName projectName )\n+    {\n+        final List<Project> result = new ArrayList<>();\n+\n+        final Project targetProject = this.get( projectName );\n+\n+        if ( targetProject == null )", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\nindex a8834cddc4..5702cd4a4b 100644\n--- a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n+++ b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n", "chunk": "@@ -263,30 +263,45 @@ public class ProjectServiceImpl\n     @Override\n     public ProjectGraph graph( final ProjectName projectName )\n     {\n-        final List<Project> result = new ArrayList<>();\n+        final ProjectGraph.Builder graph = ProjectGraph.create();\n+        final Project targetProject;\n \n-        final Project targetProject = this.get( projectName );\n+        try\n+        {\n+            targetProject = this.get( projectName );\n \n-        if ( targetProject == null )\n+            if ( targetProject == null )\n+            {\n+                throw new ProjectNotFoundException( projectName );\n+            }\n+        }\n+        catch ( ProjectAccessException e )\n         {\n-            return null;\n+            throw new ProjectNotFoundException( e.getProjectName() );\n         }\n \n         final Projects projects = adminContext().callWith( this::doList );\n \n         Project project = targetProject;\n \n+        final List<Project> parents = new ArrayList<>();\n+\n         while ( project.getParent() != null )\n         {\n-            project = projects.get( project.getParent() );\n-            result.add( project );\n+            project = getProject( projects, project.getParent() );\n+            parents.add( project );\n         }\n \n-        Collections.reverse( result );\n+        Collections.reverse( parents );\n+\n+        parents.add( targetProject );\n \n-        result.add( targetProject );\n+        parents.forEach( p -> graph.add( ProjectGraphEntry.create().\n+            name( p.getName() ).\n+            parent( p.getParent() ).\n+            build() ) );\n \n-        final Queue<Project> children = new LinkedList<>();\n+        final Queue<Project> children = new ArrayDeque<>();\n         children.add( targetProject );\n \n         while ( !children.isEmpty() )\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4ODEzMA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537488130", "body": "do it in `graph`", "bodyText": "do it in graph", "bodyHTML": "<p dir=\"auto\">do it in <code>graph</code></p>", "author": "rymsha", "createdAt": "2020-12-07T13:00:48Z", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -260,12 +315,25 @@ private Projects doList()\n     @Override\n     public Project get( final ProjectName projectName )\n     {\n-        return callWithGetContext( () -> doGet( projectName ), projectName );\n+        try", "originalCommit": "f4c8a6db2166fdcaa56183edfa78fb3d0e87c608", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "changed_code": [{"header": "diff --git a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\nindex a8834cddc4..5702cd4a4b 100644\n--- a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n+++ b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n", "chunk": "@@ -315,25 +329,12 @@ public class ProjectServiceImpl\n     @Override\n     public Project get( final ProjectName projectName )\n     {\n-        try\n-        {\n-            return callWithGetContext( () -> doGet( projectName ), projectName );\n-        }\n-        catch ( ProjectAccessException e )\n-        {\n-            throw new ProjectNotFoundException( e.getProjectName() );\n-        }\n+        return callWithGetContext( () -> doGet( projectName ), projectName );\n     }\n \n     private Project doGet( final ProjectName projectName )\n     {\n-        final Project project = Project.from( this.repositoryService.get( projectName.getRepoId() ) );\n-        if ( project == null )\n-        {\n-            throw new ProjectNotFoundException( projectName );\n-        }\n-\n-        return project;\n+        return Project.from( this.repositoryService.get( projectName.getRepoId() ) );\n     }\n \n     @Override\n", "next_change": null}]}}, {"oid": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "url": "https://github.com/enonic/xp/commit/a8a0d12be89efd792bb1c9613ed340265e1463e6", "message": "Return all projects layers in /list API #8413", "committedDate": "2020-12-07T18:51:54Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzOTE2NQ==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537839165", "body": "Static import helps", "bodyText": "Static import helps", "bodyHTML": "<p dir=\"auto\">Static import helps</p>", "author": "rymsha", "createdAt": "2020-12-07T21:17:18Z", "path": "modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java", "diffHunk": "@@ -807,6 +810,37 @@ void modify_default_project_permissions()\n         } );\n     }\n \n+    @Test\n+    void graph()\n+    {\n+        final Project project1 = ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project1\" ), null, true, null ) );\n+        final Project project2 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project2\" ), null, true, project1.getName() ) );\n+        final Project project3 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project3\" ), null, true, project2.getName() ) );\n+        final Project project4 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project4\" ), null, true, project2.getName() ) );\n+        final Project project5 =\n+            ADMIN_CONTEXT.callWith( () -> doCreateProject( ProjectName.from( \"project5\" ), null, true, project4.getName() ) );\n+\n+        final ProjectGraph graph1 = ADMIN_CONTEXT.callWith( () -> projectService.graph( project1.getName() ) );\n+\n+        assertEquals( 5, graph1.getSize() );\n+        assertThat( graph1.getList() ).\n+            extracting( \"name\", \"parent\" ).\n+            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),\n+                             Tuple.tuple( project4.getName(), project2.getName() ), Tuple.tuple( project3.getName(), project2.getName() ),\n+                             Tuple.tuple( project5.getName(), project4.getName() ) );\n+\n+        final ProjectGraph graph2 = ADMIN_CONTEXT.callWith( () -> projectService.graph( project4.getName() ) );\n+\n+        assertEquals( 4, graph2.getSize() );\n+        assertThat( graph2.getList() ).\n+            extracting( \"name\", \"parent\" ).\n+            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),", "originalCommit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "changed_code": [{"header": "diff --git a/modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java b/modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java\nindex 053f5aaf52..f6770f3736 100644\n--- a/modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java\n+++ b/modules/itest/itest-core/src/test/java/com/enonic/xp/core/project/ProjectServiceImplTest.java\n", "chunk": "@@ -828,17 +828,17 @@ class ProjectServiceImplTest\n         assertEquals( 5, graph1.getSize() );\n         assertThat( graph1.getList() ).\n             extracting( \"name\", \"parent\" ).\n-            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),\n-                             Tuple.tuple( project4.getName(), project2.getName() ), Tuple.tuple( project3.getName(), project2.getName() ),\n-                             Tuple.tuple( project5.getName(), project4.getName() ) );\n+            containsExactly( tuple( project1.getName(), null ), tuple( project2.getName(), project1.getName() ),\n+                             tuple( project4.getName(), project2.getName() ), tuple( project3.getName(), project2.getName() ),\n+                             tuple( project5.getName(), project4.getName() ) );\n \n         final ProjectGraph graph2 = ADMIN_CONTEXT.callWith( () -> projectService.graph( project4.getName() ) );\n \n         assertEquals( 4, graph2.getSize() );\n         assertThat( graph2.getList() ).\n             extracting( \"name\", \"parent\" ).\n-            containsExactly( Tuple.tuple( project1.getName(), null ), Tuple.tuple( project2.getName(), project1.getName() ),\n-                             Tuple.tuple( project4.getName(), project2.getName() ), Tuple.tuple( project5.getName(), project4.getName() ) );\n+            containsExactly( tuple( project1.getName(), null ), tuple( project2.getName(), project1.getName() ),\n+                             tuple( project4.getName(), project2.getName() ), tuple( project5.getName(), project4.getName() ) );\n     }\n \n     private Project doCreateProjectAsAdmin( final ProjectName name )\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MDU3Nw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537840577", "body": "Don't we want exception here?", "bodyText": "Don't we want exception here?", "bodyHTML": "<p dir=\"auto\">Don't we want exception here?</p>", "author": "rymsha", "createdAt": "2020-12-07T21:19:52Z", "path": "modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java", "diffHunk": "@@ -435,6 +504,14 @@ private BufferedImage scaleWidth( final BufferedImage source, final int sizeInt\n         return ImageHelper.getScaledInstance( source, newWidth.intValue(), newHeight.intValue() );\n     }\n \n+    private Project getProject( final Projects projects, final ProjectName name )\n+    {\n+        return projects.stream().\n+            filter( project -> project.getName().equals( name ) ).\n+            findFirst().\n+            orElse( null );", "originalCommit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "changed_code": [{"header": "diff --git a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\nindex 5702cd4a4b..63c8d1bc4b 100644\n--- a/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n+++ b/modules/core/core-project/src/main/java/com/enonic/xp/core/impl/project/ProjectServiceImpl.java\n", "chunk": "@@ -509,7 +509,7 @@ public class ProjectServiceImpl\n         return projects.stream().\n             filter( project -> project.getName().equals( name ) ).\n             findFirst().\n-            orElse( null );\n+            orElseThrow( () -> new ProjectNotFoundException( name ) );\n     }\n \n     private <T> T callWithCreateContext( final Callable<T> runnable )\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0Mjc3Nw==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537842777", "body": "Don't use guava when not necessarily, please. Unmodifiable list works here just fine", "bodyText": "Don't use guava when not necessarily, please. Unmodifiable list works here just fine", "bodyHTML": "<p dir=\"auto\">Don't use guava when not necessarily, please. Unmodifiable list works here just fine</p>", "author": "rymsha", "createdAt": "2020-12-07T21:23:28Z", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.enonic.xp.admin.impl.rest.resource.project.json;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.project.ProjectGraph;\n+\n+public final class ProjectGraphJson\n+{\n+    private final List<ProjectGraphEntryJson> entries;\n+\n+    public ProjectGraphJson( final ProjectGraph projectGraph )\n+    {\n+        this.entries = projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().", "originalCommit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "changed_code": [{"header": "diff --git a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\nindex cd28260874..69bc843441 100644\n--- a/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n+++ b/modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/json/ProjectGraphJson.java\n", "chunk": "@@ -13,9 +11,9 @@ public final class ProjectGraphJson\n \n     public ProjectGraphJson( final ProjectGraph projectGraph )\n     {\n-        this.entries = projectGraph != null ? ImmutableList.copyOf( projectGraph.stream().\n+        this.entries = projectGraph != null ? List.copyOf( projectGraph.stream().\n             map( ProjectGraphEntryJson::new ).\n-            collect( Collectors.toList() ) ) : ImmutableList.of();\n+            collect( Collectors.toList() ) ) : List.of();\n     }\n \n     public List<ProjectGraphEntryJson> getEntries()\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MzQyOA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r537843428", "body": "Never used? Not needed.", "bodyText": "Never used? Not needed.", "bodyHTML": "<p dir=\"auto\">Never used? Not needed.</p>", "author": "rymsha", "createdAt": "2020-12-07T21:24:32Z", "path": "modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.enonic.xp.project;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import com.enonic.xp.annotation.PublicApi;\n+import com.enonic.xp.support.AbstractImmutableEntityList;\n+\n+@PublicApi\n+public final class ProjectGraph\n+    extends AbstractImmutableEntityList<ProjectGraphEntry>\n+{\n+    private ProjectGraph( final Builder builder )\n+    {\n+        super( builder.projects.build() );\n+    }\n+\n+    public static ProjectGraph empty()", "originalCommit": "a8a0d12be89efd792bb1c9613ed340265e1463e6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "changed_code": [{"header": "diff --git a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\nindex 49f2461516..08853aa24d 100644\n--- a/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\n+++ b/modules/core/core-api/src/main/java/com/enonic/xp/project/ProjectGraph.java\n", "chunk": "@@ -14,11 +14,6 @@ public final class ProjectGraph\n         super( builder.projects.build() );\n     }\n \n-    public static ProjectGraph empty()\n-    {\n-        return create().build();\n-    }\n-\n     public static Builder create()\n     {\n         return new Builder();\n", "next_change": null}]}}, {"oid": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "url": "https://github.com/enonic/xp/commit/166362b4d47aa64c5b9312be1b0cfd80bd517082", "message": "Return all projects layers in /list API #8413", "committedDate": "2020-12-08T09:21:03Z", "type": "commit"}, {"oid": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "url": "https://github.com/enonic/xp/commit/166362b4d47aa64c5b9312be1b0cfd80bd517082", "message": "Return all projects layers in /list API #8413", "committedDate": "2020-12-08T09:21:03Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwODM0Mg==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r538308342", "body": "I suggest to use `tree` instead off `getTree`, because `get` presents in the HTTP method", "bodyText": "I suggest to use tree instead off getTree, because get presents in the HTTP method", "bodyHTML": "<p dir=\"auto\">I suggest to use <code>tree</code> instead off <code>getTree</code>, because <code>get</code> presents in the HTTP method</p>", "author": "anatol-sialitski", "createdAt": "2020-12-08T12:25:20Z", "path": "modules/admin/admin-impl/src/main/java/com/enonic/xp/admin/impl/rest/resource/project/ProjectResource.java", "diffHunk": "@@ -184,6 +186,14 @@ public ProjectJson get( final @QueryParam(\"name\") String projectNameValue )\n         return doCreateJson( this.projectService.get( projectName ) );\n     }\n \n+    @GET\n+    @Path(\"getTree\")", "originalCommit": "166362b4d47aa64c5b9312be1b0cfd80bd517082", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMxNDM2MA==", "url": "https://github.com/enonic/xp/pull/8527#discussion_r538314360", "bodyText": "If we have list this one should be called tree, I agree", "author": "rymsha", "createdAt": "2020-12-08T12:32:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwODM0Mg=="}], "type": "inlineReview", "revised_code": null}]}