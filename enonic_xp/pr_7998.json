{"pr_number": 7998, "pr_title": "Allow creation of issues for project roles #7986", "pr_author": "vbradnitski", "pr_createdAt": "2020-04-02T15:43:52Z", "pr_url": "https://github.com/enonic/xp/pull/7998", "timeline": [{"oid": "a476cd572065b5596dd17fab318ba92b6dee67c2", "url": "https://github.com/enonic/xp/commit/a476cd572065b5596dd17fab318ba92b6dee67c2", "message": "Allow creation of issues for project roles #7986", "committedDate": "2020-04-02T15:41:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4MzMxMw==", "url": "https://github.com/enonic/xp/pull/7998#discussion_r402883313", "body": "https://github.com/enonic/xp/issues/7986#issuecomment-608337641 I need to have this clarified before accepting PR.", "bodyText": "#7986 (comment) I need to have this clarified before accepting PR.", "bodyHTML": "<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"590904142\" data-permission-text=\"Title is private\" data-url=\"https://github.com/enonic/xp/issues/7986\" data-hovercard-type=\"issue\" data-hovercard-url=\"/enonic/xp/issues/7986/hovercard?comment_id=608337641&amp;comment_type=issue_comment\" href=\"https://github.com/enonic/xp/issues/7986#issuecomment-608337641\">#7986 (comment)</a> I need to have this clarified before accepting PR.</p>", "author": "rymsha", "createdAt": "2020-04-03T09:38:48Z", "path": "modules/core/core-content/src/main/java/com/enonic/xp/core/impl/project/CreateProjectIssuesAccessListCommand.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package com.enonic.xp.core.impl.project;\n+\n+import com.enonic.xp.project.ProjectConstants;\n+import com.enonic.xp.project.ProjectRole;\n+import com.enonic.xp.security.RoleKeys;\n+import com.enonic.xp.security.acl.AccessControlEntry;\n+import com.enonic.xp.security.acl.AccessControlList;\n+import com.enonic.xp.security.acl.Permission;\n+\n+public final class CreateProjectIssuesAccessListCommand\n+    extends AbstractProjectCommand\n+{\n+    private CreateProjectIssuesAccessListCommand( final Builder builder )\n+    {\n+        super( builder );\n+    }\n+\n+    public static Builder create()\n+    {\n+        return new Builder();\n+    }\n+\n+    public AccessControlList execute()\n+    {\n+        return createContentRootPermissions();\n+    }\n+\n+    private AccessControlList createContentRootPermissions()\n+    {\n+        if ( projectName == null || ProjectConstants.DEFAULT_PROJECT_NAME.equals( projectName ) )\n+        {\n+            return null;\n+        }\n+\n+        return AccessControlList.create().\n+            add( AccessControlEntry.create().\n+                allowAll().\n+                principal( RoleKeys.ADMIN ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allowAll().\n+                principal( RoleKeys.CONTENT_MANAGER_ADMIN ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allow( Permission.READ, Permission.CREATE, Permission.MODIFY, Permission.DELETE ).\n+                principal( createRoleKey( ProjectRole.OWNER ) ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allow( Permission.READ, Permission.CREATE, Permission.MODIFY, Permission.DELETE ).\n+                principal( createRoleKey( ProjectRole.EDITOR ) ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allow( Permission.READ, Permission.CREATE, Permission.MODIFY, Permission.DELETE ).\n+                principal( createRoleKey( ProjectRole.AUTHOR ) ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allow( Permission.READ, Permission.CREATE, Permission.MODIFY, Permission.DELETE ).\n+                principal( createRoleKey( ProjectRole.CONTRIBUTOR ) ).\n+                build() ).\n+            add( AccessControlEntry.create().\n+                allow( Permission.READ ).", "originalCommit": "a476cd572065b5596dd17fab318ba92b6dee67c2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}