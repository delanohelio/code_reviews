{"pr_number": 8873, "pr_title": "Added REST API to update scope mapping.", "pr_author": "Meruja", "pr_createdAt": "2020-06-28T14:58:07Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8873", "timeline": [{"oid": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "url": "https://github.com/wso2/carbon-apimgt/commit/9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "message": "Added REST API to update scope mapping.", "committedDate": "2020-06-28T14:54:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMTQ5NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447431494", "body": "Remove additional line", "bodyText": "Remove additional line", "bodyHTML": "<p dir=\"auto\">Remove additional line</p>", "author": "HiranyaKavishani", "createdAt": "2020-06-30T06:08:18Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODk1NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238954", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMTQ5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjQwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447432407", "body": "Why return null here?", "bodyText": "Why return null here?", "bodyHTML": "<p dir=\"auto\">Why return null here?</p>", "author": "HiranyaKavishani", "createdAt": "2020-06-30T06:10:57Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }\n+        return null;", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODkyNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238926", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMjQwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzI5OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447433298", "body": "Use a For-each loop", "bodyText": "Use a For-each loop", "bodyHTML": "<p dir=\"auto\">Use a For-each loop</p>", "author": "HiranyaKavishani", "createdAt": "2020-06-30T06:13:16Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODg4MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238881", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzI5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447437066", "body": "Can't we do this without using gson library?", "bodyText": "Can't we do this without using gson library?", "bodyHTML": "<p dir=\"auto\">Can't we do this without using gson library?</p>", "author": "HiranyaKavishani", "createdAt": "2020-06-30T06:22:34Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MjU3Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447572577", "bodyText": "@Meruja have a look at \n  \n    \n      carbon-apimgt/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n    \n    \n        Lines 7386 to 7391\n      in\n      0f32011\n    \n    \n    \n    \n\n        \n          \n           } \n        \n\n        \n          \n           String content = new String((byte[]) resource.getContent(), Charset.defaultCharset()); \n        \n\n        \n          \n           JSONParser parser = new JSONParser(); \n        \n\n        \n          \n           JSONObject tenantConfig = (JSONObject) parser.parse(content); \n        \n\n        \n          \n           tenantConfigCache.put(cacheName, tenantConfig); \n        \n\n        \n          \n           return tenantConfig;", "author": "malinthaprasan", "createdAt": "2020-06-30T10:14:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODgzMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238832", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzNzA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTUxMg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447565512", "body": "We don't need to catch APIManagementException from the REST API layer. Throw it from the method", "bodyText": "We don't need to catch APIManagementException from the REST API layer. Throw it from the method", "bodyHTML": "<p dir=\"auto\">We don't need to catch APIManagementException from the REST API layer. Throw it from the method</p>", "author": "malinthaprasan", "createdAt": "2020-06-30T10:01:58Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);\n+            Map<String, String> scopeRoleMapping = APIUtil.getRESTAPIScopesForTenant(MultitenantUtils\n+                    .getTenantDomain(RestApiUtil.getLoggedInUsername()));\n+            ScopeListDTO scopeListDTO = SystemScopesMappingUtil.fromScopeListToScopeListDTO(scopeRoleMapping);\n+            return Response.ok().entity(scopeListDTO).build();\n+        } catch (APIManagementException e) {\n+            String errorMessage = \"Error when updating the list of scopes-role mapping.\";\n+            RestApiUtil.handleInternalServerError(errorMessage, e, log);\n+        }", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODc3NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238775", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTUxMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTk2MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447565961", "body": "Formatting issue", "bodyText": "Formatting issue", "bodyHTML": "<p dir=\"auto\">Formatting issue</p>", "author": "malinthaprasan", "createdAt": "2020-06-30T10:02:46Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODcyNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238725", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU2NTk2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MDU1Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447570553", "body": "Can you create a new class SystemScopeMappingUtils and move this logic there and use it from the REST API Layer. This is the typical flow we follow. We should not merge REST API and business logics and include in the same method", "bodyText": "Can you create a new class SystemScopeMappingUtils and move this logic there and use it from the REST API Layer. This is the typical flow we follow. We should not merge REST API and business logics and include in the same method", "bodyHTML": "<p dir=\"auto\">Can you create a new class SystemScopeMappingUtils and move this logic there and use it from the REST API Layer. This is the typical flow we follow. We should not merge REST API and business logics and include in the same method</p>", "author": "malinthaprasan", "createdAt": "2020-06-30T10:10:53Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODY5Nw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238697", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:31:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MDU1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447573016", "body": "When updating the tenant conf in the registry, make sure to update with a formatted version.", "bodyText": "When updating the tenant conf in the registry, make sure to update with a formatted version.", "bodyHTML": "<p dir=\"auto\">When updating the tenant conf in the registry, make sure to update with a formatted version.</p>", "author": "malinthaprasan", "createdAt": "2020-06-30T10:15:14Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +80,47 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext) throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+             existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        try {\n+\n+            JSONObject responseJson = new JSONObject();\n+            JSONArray scopeJson = new JSONArray();\n+\n+            for(int i = 0; i < body.getList().size(); i++) {\n+                JSONObject scopeRoleJson = new JSONObject();\n+                scopeRoleJson.put(\"Name\", body.getList().get(i).getName());\n+                scopeRoleJson.put(\"Roles\", body.getList().get(i).getRoles());\n+                scopeJson.put(scopeRoleJson);\n+            }\n+\n+            responseJson.put(\"Scope\", scopeJson);\n+            //Here we are removing RESTAPIScopes from the existing tenant-conf\n+            // Adding new RESTAPIScopes to the existing tenant-conf.\n+            existingTenantConfObject.remove(\"RESTAPIScopes\");\n+            Gson gson = new Gson();\n+            existingTenantConfObject.add(\"RESTAPIScopes\",\n+                    gson.fromJson(responseJson.toString(), JsonElement.class));\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(),tenantDomain);", "originalCommit": "9eb7e14d00b0df0fd63756b3a0300c4b3470a5de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3Mzk0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r447573940", "bodyText": "carbon-apimgt/components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n    \n    \n        Lines 4319 to 4325\n      in\n      0f32011\n    \n    \n    \n    \n\n        \n          \n           } \n        \n\n        \n          \n           try { \n        \n\n        \n          \n               ObjectMapper mapper = new ObjectMapper(); \n        \n\n        \n          \n               String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter().writeValueAsString(tenantConf); \n        \n\n        \n          \n               if (log.isDebugEnabled()) { \n        \n\n        \n          \n                   log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf); \n        \n\n        \n          \n               }", "author": "malinthaprasan", "createdAt": "2020-06-30T10:16:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzODYxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r448238616", "bodyText": "Fixed with bb70f77", "author": "Meruja", "createdAt": "2020-07-01T09:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU3MzAxNg=="}], "type": "inlineReview"}, {"oid": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed", "url": "https://github.com/wso2/carbon-apimgt/commit/bb70f77436644437fd4b9c5bc9bb61b39453e8ed", "message": "Fixed review comments.", "committedDate": "2020-07-01T09:28:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMTg1NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r451801854", "body": "Let's not omit 'e' please. Shall we include it in the thrown APIManagementException?\r\n```suggestion\r\n            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);\r\n```", "bodyText": "Let's not omit 'e' please. Shall we include it in the thrown APIManagementException?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant \");\n          \n          \n            \n                        throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant\", e);", "bodyHTML": "<p dir=\"auto\">Let's not omit 'e' please. Shall we include it in the thrown APIManagementException?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error while formatting tenant-conf.json of tenant<span class=\"x x-first\"> </span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error while formatting tenant-conf.json of tenant<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x x-last\">, e</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "malinthaprasan", "createdAt": "2020-07-08T20:19:09Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +85,44 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext)\n+            throws APIManagementException {\n+        String tenantDomain = MultitenantUtils.getTenantDomain(RestApiUtil.getLoggedInUsername());\n+        //read from tenant-conf.json\n+        JsonObject existingTenantConfObject = new JsonObject();\n+        try {\n+            APIMRegistryService apimRegistryService = new APIMRegistryServiceImpl();\n+            String existingTenantConf = apimRegistryService.getConfigRegistryResourceContent(tenantDomain,\n+                    APIConstants.API_TENANT_CONF_LOCATION);\n+            existingTenantConfObject = new JsonParser().parse(existingTenantConf).getAsJsonObject();\n+        } catch (RegistryException | UserStoreException e) {\n+            APIUtil.handleException(\"Couldn't read tenant configuration from tenant registry\", e);\n+        }\n+        JSONObject responseJson = SystemScopesMappingUtil.createJsonObjectOfScopeMapping(body);\n+        //Here we are removing RESTAPIScopes from the existing tenant-conf\n+        // Adding new RESTAPIScopes to the existing tenant-conf.\n+        existingTenantConfObject.remove(APIConstants.REST_API_SCOPES_CONFIG);\n+        JsonElement jsonElement = new JsonParser().parse(responseJson.toJSONString());\n+        existingTenantConfObject.add(APIConstants.REST_API_SCOPES_CONFIG, jsonElement);\n+        try {\n+            ObjectMapper mapper = new ObjectMapper();\n+            String formattedTenantConf = mapper.writerWithDefaultPrettyPrinter()\n+                    .writeValueAsString(existingTenantConfObject.toString());\n+            APIUtil.updateTenantConf(existingTenantConfObject.toString(), tenantDomain);\n+            if (log.isDebugEnabled()) {\n+                log.debug(\"Finalized tenant-conf.json: \" + formattedTenantConf);\n+            }\n+        } catch (JsonProcessingException e) {\n+            throw new APIManagementException(\"Error while formatting tenant-conf.json of tenant \");", "originalCommit": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMjgwNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r451802806", "body": "This is too much business logic into the REST API layer. Shall we think of splitting this into core methods and calling them from here and reduce the number of lines in here?", "bodyText": "This is too much business logic into the REST API layer. Shall we think of splitting this into core methods and calling them from here and reduce the number of lines in here?", "bodyHTML": "<p dir=\"auto\">This is too much business logic into the REST API layer. Shall we think of splitting this into core methods and calling them from here and reduce the number of lines in here?</p>", "author": "malinthaprasan", "createdAt": "2020-07-08T20:21:05Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -71,4 +85,44 @@ public Response systemScopesGet(MessageContext messageContext) throws APIManagem\n         }\n         return null;\n     }\n+\n+    public Response updateRolesForScope(ScopeListDTO body, MessageContext messageContext)", "originalCommit": "bb70f77436644437fd4b9c5bc9bb61b39453e8ed", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODIzOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453418239", "bodyText": "Fixed with b7898df", "author": "Meruja", "createdAt": "2020-07-13T03:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgwMjgwNg=="}], "type": "inlineReview"}, {"oid": "a7a380e28a58e5361d16cff9129b80e4a51fae2b", "url": "https://github.com/wso2/carbon-apimgt/commit/a7a380e28a58e5361d16cff9129b80e4a51fae2b", "message": "Fixed review comments.", "committedDate": "2020-07-10T08:32:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453413099", "body": "```suggestion\r\n    public void updateTenantConfScopeRoleMapping(JSONObject newScopeRoleJson, String username)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)\n          \n          \n            \n                public void updateTenantConfScopeRoleMapping(JSONObject newScopeRoleJson, String username)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">editTenantConfOfRoleScopeMapping</span>(<span class=\"pl-smi\">JSONObject</span> <span class=\"x x-first x-last\">responseJson</span>, <span class=\"pl-smi\">String</span> username)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">updateTenantConfScopeRoleMapping</span>(<span class=\"pl-smi\">JSONObject</span> <span class=\"x x-first x-last\">newScopeRoleJson</span>, <span class=\"pl-smi\">String</span> username)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "malinthaprasan", "createdAt": "2020-07-13T03:14:43Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -8890,4 +8893,42 @@ private JSONObject getSecurityAuditConfigurationProperties(String tenantDomain)\n         }\n         return removedReusedResources;\n     }\n+\n+    @Override\n+    public void editTenantConfOfRoleScopeMapping(JSONObject responseJson, String username)", "originalCommit": "a7a380e28a58e5361d16cff9129b80e4a51fae2b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzIxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453413216", "bodyText": "Let's move this method to APIUtil.java as a static method", "author": "malinthaprasan", "createdAt": "2020-07-13T03:15:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxODE3OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453418178", "bodyText": "Fixed with b7898df", "author": "Meruja", "createdAt": "2020-07-13T03:39:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQxMzA5OQ=="}], "type": "inlineReview"}, {"oid": "b7898dfbfc4b5b82408bcd356b2b6a4716ea663b", "url": "https://github.com/wso2/carbon-apimgt/commit/b7898dfbfc4b5b82408bcd356b2b6a4716ea663b", "message": "Moved the method to util class.", "committedDate": "2020-07-13T03:37:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDMyNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453420324", "body": "Remove imports", "bodyText": "Remove imports", "bodyHTML": "<p dir=\"auto\">Remove imports</p>", "author": "malinthaprasan", "createdAt": "2020-07-13T03:49:39Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIProviderImpl.java", "diffHunk": "@@ -21,6 +21,9 @@\n import com.fasterxml.jackson.core.JsonProcessingException;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.google.gson.Gson;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;", "originalCommit": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzkxOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453423919", "bodyText": "Done with 5d65d65", "author": "Meruja", "createdAt": "2020-07-13T04:06:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDM5MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453420390", "body": "Remove import", "bodyText": "Remove import", "bodyHTML": "<p dir=\"auto\">Remove import</p>", "author": "malinthaprasan", "createdAt": "2020-07-13T03:50:01Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/impl/SystemScopesApiServiceImpl.java", "diffHunk": "@@ -17,14 +32,14 @@\n import org.wso2.carbon.apimgt.rest.api.admin.v1.dto.ScopeSettingsDTO;\n import org.wso2.carbon.apimgt.rest.api.admin.v1.utils.mappings.SystemScopesMappingUtil;\n import org.wso2.carbon.apimgt.rest.api.util.utils.RestApiUtil;\n+import org.wso2.carbon.registry.core.exceptions.RegistryException;\n+import org.wso2.carbon.user.api.UserStoreException;\n import org.wso2.carbon.utils.multitenancy.MultitenantUtils;\n \n import java.util.Base64;\n-import java.util.List;\n-\n-import java.io.InputStream;\n import java.util.Map;\n \n+import javax.cache.Caching;", "originalCommit": "29b3575f99639d4cd2ad8e9d5f10336a2dade6c3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMzg5NQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8873#discussion_r453423895", "bodyText": "Done with 5d65d65", "author": "Meruja", "createdAt": "2020-07-13T04:06:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyMDM5MA=="}], "type": "inlineReview"}, {"oid": "5d65d6584f817c1441320ef2a21757e2dc56eaf4", "url": "https://github.com/wso2/carbon-apimgt/commit/5d65d6584f817c1441320ef2a21757e2dc56eaf4", "message": "Removed unnecessary imports.", "committedDate": "2020-07-13T04:03:12Z", "type": "commit"}, {"oid": "5d65d6584f817c1441320ef2a21757e2dc56eaf4", "url": "https://github.com/wso2/carbon-apimgt/commit/5d65d6584f817c1441320ef2a21757e2dc56eaf4", "message": "Removed unnecessary imports.", "committedDate": "2020-07-13T04:03:12Z", "type": "forcePushed"}, {"oid": "699394c4a6264e87239272c4d63d4109995b6174", "url": "https://github.com/wso2/carbon-apimgt/commit/699394c4a6264e87239272c4d63d4109995b6174", "message": "Merge branch 'master' into admin-rest-api", "committedDate": "2020-07-13T04:05:26Z", "type": "commit"}]}