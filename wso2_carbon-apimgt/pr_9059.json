{"pr_number": 9059, "pr_title": "Fix for https://github.com/wso2/product-apim-tooling/issues/418", "pr_author": "Chamindu36", "pr_createdAt": "2020-07-25T12:38:17Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/9059", "timeline": [{"oid": "c32ceb3bb3784005d0e20d2fd7ffc5e36122d7ec", "url": "https://github.com/wso2/carbon-apimgt/commit/c32ceb3bb3784005d0e20d2fd7ffc5e36122d7ec", "message": "Provide support for application import with API product subscriptions", "committedDate": "2020-07-25T03:30:29Z", "type": "commit"}, {"oid": "b416ba16311b4c6a7d5f717b02de5693c32a48b9", "url": "https://github.com/wso2/carbon-apimgt/commit/b416ba16311b4c6a7d5f717b02de5693c32a48b9", "message": "Adding doc comments and formatting", "committedDate": "2020-07-25T08:02:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzMxNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460407317", "body": "I think we can remove the duplicated code segments from 145 to 163 and 165 to 186 as below. Just check and do the required changes.\r\n\r\n```suggestion\r\n                    ApiTypeWrapper apiTypeWrapper = null;\r\n                    if (isApiProduct(type)) {\r\n                        APIProduct apiProduct = (APIProduct) apiSet.iterator().next();\r\n                        apiTypeWrapper = new ApiTypeWrapper(apiProduct);\r\n                    } else {\r\n                        API api = (API) apiSet.iterator().next();\r\n                        apiTypeWrapper = new ApiTypeWrapper(api);\r\n                    }\r\n                    //tier of the imported subscription\r\n                    Tier tier = subscribedAPI.getTier();\r\n                    //checking whether the target tier is available\r\n                    if (isTierAvailable(tier, apiTypeWrapper) && apiTypeWrapper.getStatus() != null &&\r\n                            APIConstants.PUBLISHED.equals(apiTypeWrapper.getStatus())) {\r\n                            apiTypeWrapper.setTier(tier.getName());\r\n                            // add subscription if update flag is not specified\r\n                            // it will throw an error if subscriber already exists\r\n                            if (update == null || !update) {\r\n                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\r\n                            } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\r\n                                // on update skip subscriptions that already exists\r\n                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\r\n                            }\r\n                    } else {\r\n                            log.error(\"Failed to import Subscription as API/API Product \" + name + \"-\" + version +\r\n                            \" as one or more tiers may be unavailable or the API/API Product may not have been published \");\r\n                            skippedAPIList.add(subscribedAPI.getApiId());\r\n                    }\r\n```", "bodyText": "I think we can remove the duplicated code segments from 145 to 163 and 165 to 186 as below. Just check and do the required changes.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                //Check whether the object is an ApiProduct\n          \n          \n            \n                                if (isApiProduct(type)) {\n          \n          \n            \n                                    //Handle Api Product subscriptions\n          \n          \n            \n                                    APIProduct apiProduct = (APIProduct) apiSet.iterator().next();\n          \n          \n            \n                                    //tier of the imported subscription\n          \n          \n            \n                                    Tier tier = subscribedAPI.getTier();\n          \n          \n            \n                                    //checking whether the target tier is available\n          \n          \n            \n                                    if (isTierAvailableForProduct(tier, apiProduct) && apiProduct.getState() != null &&\n          \n          \n            \n                                            APIConstants.PUBLISHED.equals(apiProduct.getState())) {\n          \n          \n            \n                                        ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(apiProduct);\n          \n          \n            \n                                        apiTypeWrapper.setTier(tier.getName());\n          \n          \n            \n                                        // add subscription if update flag is not specified\n          \n          \n            \n                                        // it will throw an error if subscriber already exists\n          \n          \n            \n                                        if (update == null || !update) {\n          \n          \n            \n                                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n          \n          \n            \n                                        } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n          \n          \n            \n                                            // on update skip subscriptions that already exists\n          \n          \n            \n                                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n          \n          \n            \n                                        }\n          \n          \n            \n                                    } else {\n          \n          \n            \n                                        log.error(\"Failed to import Subscription as API \" + name + \"-\" + version +\n          \n          \n            \n                                                \" as one or more tiers may be unavailable or the API may not have been published \");\n          \n          \n            \n                                        skippedAPIList.add(subscribedAPI.getApiId());\n          \n          \n            \n                                ApiTypeWrapper apiTypeWrapper = null;\n          \n          \n            \n                                if (isApiProduct(type)) {\n          \n          \n            \n                                    APIProduct apiProduct = (APIProduct) apiSet.iterator().next();\n          \n          \n            \n                                    apiTypeWrapper = new ApiTypeWrapper(apiProduct);\n          \n          \n            \n                                } else {\n          \n          \n            \n                                    API api = (API) apiSet.iterator().next();\n          \n          \n            \n                                    apiTypeWrapper = new ApiTypeWrapper(api);\n          \n          \n            \n                                }\n          \n          \n            \n                                //tier of the imported subscription\n          \n          \n            \n                                Tier tier = subscribedAPI.getTier();\n          \n          \n            \n                                //checking whether the target tier is available\n          \n          \n            \n                                if (isTierAvailable(tier, apiTypeWrapper) && apiTypeWrapper.getStatus() != null &&\n          \n          \n            \n                                        APIConstants.PUBLISHED.equals(apiTypeWrapper.getStatus())) {\n          \n          \n            \n                                        apiTypeWrapper.setTier(tier.getName());\n          \n          \n            \n                                        // add subscription if update flag is not specified\n          \n          \n            \n                                        // it will throw an error if subscriber already exists\n          \n          \n            \n                                        if (update == null || !update) {\n          \n          \n            \n                                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n          \n          \n            \n                                        } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n          \n          \n            \n                                            // on update skip subscriptions that already exists\n          \n          \n            \n                                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n          \n          \n            \n                                        }\n          \n          \n            \n                                } else {\n          \n          \n            \n                                        log.error(\"Failed to import Subscription as API/API Product \" + name + \"-\" + version +\n          \n          \n            \n                                        \" as one or more tiers may be unavailable or the API/API Product may not have been published \");\n          \n          \n            \n                                        skippedAPIList.add(subscribedAPI.getApiId());\n          \n          \n            \n                                }", "bodyHTML": "<p dir=\"auto\">I think we can remove the duplicated code segments from 145 to 163 and 165 to 186 as below. Just check and do the required changes.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span>Check whether the object is an ApiProduct</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (isApiProduct(type)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-c\"><span class=\"pl-c\">//</span>Handle Api Product subscriptions</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-smi\">APIProduct</span> apiProduct <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">APIProduct</span>) apiSet<span class=\"pl-k\">.</span>iterator()<span class=\"pl-k\">.</span>next();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-c\"><span class=\"pl-c\">//</span>tier of the imported subscription</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-smi\">Tier</span> tier <span class=\"pl-k\">=</span> subscribedAPI<span class=\"pl-k\">.</span>getTier();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-c\"><span class=\"pl-c\">//</span>checking whether the target tier is available</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">if</span> (isTierAvailableForProduct(tier, apiProduct) <span class=\"pl-k\">&amp;&amp;</span> apiProduct<span class=\"pl-k\">.</span>getState() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                <span class=\"pl-smi\">APIConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PUBLISHED</span><span class=\"pl-k\">.</span>equals(apiProduct<span class=\"pl-k\">.</span>getState())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-smi\">ApiTypeWrapper</span> apiTypeWrapper <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ApiTypeWrapper</span>(apiProduct);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            apiTypeWrapper<span class=\"pl-k\">.</span>setTier(tier<span class=\"pl-k\">.</span>getName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> add subscription if update flag is not specified</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> it will throw an error if subscriber already exists</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">if</span> (update <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>update) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                apiConsumer<span class=\"pl-k\">.</span>addSubscription(apiTypeWrapper, userId, appId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>apiConsumer<span class=\"pl-k\">.</span>isSubscribedToApp(subscribedAPI<span class=\"pl-k\">.</span>getApiId(), userId, appId)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                <span class=\"pl-c\"><span class=\"pl-c\">//</span> on update skip subscriptions that already exists</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                apiConsumer<span class=\"pl-k\">.</span>addSubscription(apiTypeWrapper, userId, appId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to import Subscription as API <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> name <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> version <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> as one or more tiers may be unavailable or the API may not have been published <span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            skippedAPIList<span class=\"pl-k\">.</span>add(subscribedAPI<span class=\"pl-k\">.</span>getApiId());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">ApiTypeWrapper</span> apiTypeWrapper <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (isApiProduct(type)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-smi\">APIProduct</span> apiProduct <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">APIProduct</span>) apiSet<span class=\"pl-k\">.</span>iterator()<span class=\"pl-k\">.</span>next();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        apiTypeWrapper <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ApiTypeWrapper</span>(apiProduct);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-smi\">API</span> api <span class=\"pl-k\">=</span> (<span class=\"pl-c1\">API</span>) apiSet<span class=\"pl-k\">.</span>iterator()<span class=\"pl-k\">.</span>next();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        apiTypeWrapper <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ApiTypeWrapper</span>(api);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span>tier of the imported subscription</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">Tier</span> tier <span class=\"pl-k\">=</span> subscribedAPI<span class=\"pl-k\">.</span>getTier();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span>checking whether the target tier is available</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (isTierAvailable(tier, apiTypeWrapper) <span class=\"pl-k\">&amp;&amp;</span> apiTypeWrapper<span class=\"pl-k\">.</span>getStatus() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-smi\">APIConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PUBLISHED</span><span class=\"pl-k\">.</span>equals(apiTypeWrapper<span class=\"pl-k\">.</span>getStatus())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            apiTypeWrapper<span class=\"pl-k\">.</span>setTier(tier<span class=\"pl-k\">.</span>getName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> add subscription if update flag is not specified</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> it will throw an error if subscriber already exists</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">if</span> (update <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>update) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                apiConsumer<span class=\"pl-k\">.</span>addSubscription(apiTypeWrapper, userId, appId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>apiConsumer<span class=\"pl-k\">.</span>isSubscribedToApp(subscribedAPI<span class=\"pl-k\">.</span>getApiId(), userId, appId)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                <span class=\"pl-c\"><span class=\"pl-c\">//</span> on update skip subscriptions that already exists</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                apiConsumer<span class=\"pl-k\">.</span>addSubscription(apiTypeWrapper, userId, appId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to import Subscription as API/API Product <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> name <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> version <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> as one or more tiers may be unavailable or the API/API Product may not have been published <span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            skippedAPIList<span class=\"pl-k\">.</span>add(subscribedAPI<span class=\"pl-k\">.</span>getApiId());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wasuradananjith", "createdAt": "2020-07-25T13:55:30Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/ApplicationImportExportManager.java", "diffHunk": "@@ -134,28 +134,56 @@ public boolean isOwnerAvailable(String userId) throws APIManagementException {\n                 matchedAPIs = apiConsumer.searchPaginatedAPIs(searchQuery.toString(), tenantDomain, 0,\n                         Integer.MAX_VALUE,\n                         false);\n-                Set<API> apiSet = (Set<API>) matchedAPIs.get(\"apis\");\n+                Set<Object> apiSet = (Set<Object>) matchedAPIs.get(\"apis\");\n                 if (apiSet != null && !apiSet.isEmpty()) {\n-                    API api = apiSet.iterator().next();\n-                    //tier of the imported subscription\n-                    Tier tier = subscribedAPI.getTier();\n-                    //checking whether the target tier is available\n-                    if (isTierAvailable(tier, api) && api.getStatus() != null &&\n-                            APIConstants.PUBLISHED.equals(api.getStatus())) {\n-                        ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(api);\n-                        apiTypeWrapper.setTier(tier.getName());\n-                        // add subscription if update flag is not specified\n-                        // it will throw an error if subscriber already exists\n-                        if (update == null || !update) {\n-                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n-                        } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n-                            // on update skip subscriptions that already exists\n-                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                    Object type = apiSet.iterator().next();\n+                    //Check whether the object is an ApiProduct\n+                    if (isApiProduct(type)) {\n+                        //Handle Api Product subscriptions\n+                        APIProduct apiProduct = (APIProduct) apiSet.iterator().next();\n+                        //tier of the imported subscription\n+                        Tier tier = subscribedAPI.getTier();\n+                        //checking whether the target tier is available\n+                        if (isTierAvailableForProduct(tier, apiProduct) && apiProduct.getState() != null &&\n+                                APIConstants.PUBLISHED.equals(apiProduct.getState())) {\n+                            ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(apiProduct);\n+                            apiTypeWrapper.setTier(tier.getName());\n+                            // add subscription if update flag is not specified\n+                            // it will throw an error if subscriber already exists\n+                            if (update == null || !update) {\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n+                                // on update skip subscriptions that already exists\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            }\n+                        } else {\n+                            log.error(\"Failed to import Subscription as API \" + name + \"-\" + version +\n+                                    \" as one or more tiers may be unavailable or the API may not have been published \");\n+                            skippedAPIList.add(subscribedAPI.getApiId());", "originalCommit": "b416ba16311b4c6a7d5f717b02de5693c32a48b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMTAwNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460421006", "bodyText": "Fixed. Thanks for the input with ApiTypeWrapper.", "author": "Chamindu36", "createdAt": "2020-07-25T16:31:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzMxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzQ0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460407440", "body": "I think we can remove this whole else part.", "bodyText": "I think we can remove this whole else part.", "bodyHTML": "<p dir=\"auto\">I think we can remove this whole else part.</p>", "author": "wasuradananjith", "createdAt": "2020-07-25T13:56:55Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/ApplicationImportExportManager.java", "diffHunk": "@@ -134,28 +134,56 @@ public boolean isOwnerAvailable(String userId) throws APIManagementException {\n                 matchedAPIs = apiConsumer.searchPaginatedAPIs(searchQuery.toString(), tenantDomain, 0,\n                         Integer.MAX_VALUE,\n                         false);\n-                Set<API> apiSet = (Set<API>) matchedAPIs.get(\"apis\");\n+                Set<Object> apiSet = (Set<Object>) matchedAPIs.get(\"apis\");\n                 if (apiSet != null && !apiSet.isEmpty()) {\n-                    API api = apiSet.iterator().next();\n-                    //tier of the imported subscription\n-                    Tier tier = subscribedAPI.getTier();\n-                    //checking whether the target tier is available\n-                    if (isTierAvailable(tier, api) && api.getStatus() != null &&\n-                            APIConstants.PUBLISHED.equals(api.getStatus())) {\n-                        ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(api);\n-                        apiTypeWrapper.setTier(tier.getName());\n-                        // add subscription if update flag is not specified\n-                        // it will throw an error if subscriber already exists\n-                        if (update == null || !update) {\n-                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n-                        } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n-                            // on update skip subscriptions that already exists\n-                            apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                    Object type = apiSet.iterator().next();\n+                    //Check whether the object is an ApiProduct\n+                    if (isApiProduct(type)) {\n+                        //Handle Api Product subscriptions\n+                        APIProduct apiProduct = (APIProduct) apiSet.iterator().next();\n+                        //tier of the imported subscription\n+                        Tier tier = subscribedAPI.getTier();\n+                        //checking whether the target tier is available\n+                        if (isTierAvailableForProduct(tier, apiProduct) && apiProduct.getState() != null &&\n+                                APIConstants.PUBLISHED.equals(apiProduct.getState())) {\n+                            ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(apiProduct);\n+                            apiTypeWrapper.setTier(tier.getName());\n+                            // add subscription if update flag is not specified\n+                            // it will throw an error if subscriber already exists\n+                            if (update == null || !update) {\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n+                                // on update skip subscriptions that already exists\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            }\n+                        } else {\n+                            log.error(\"Failed to import Subscription as API \" + name + \"-\" + version +\n+                                    \" as one or more tiers may be unavailable or the API may not have been published \");\n+                            skippedAPIList.add(subscribedAPI.getApiId());\n                         }\n                     } else {\n-                        log.error(\"Failed to import Subscription as API \" + name + \"-\" + version +\n-                                \" as one or more tiers may be unavailable or the API may not have been published \");\n-                        skippedAPIList.add(subscribedAPI.getApiId());\n+                        //Handle API subscriptions\n+                        API api = (API) apiSet.iterator().next();\n+                        //tier of the imported subscription\n+                        Tier tier = subscribedAPI.getTier();\n+                        //checking whether the target tier is available\n+                        if (isTierAvailable(tier, api) && api.getStatus() != null &&\n+                                APIConstants.PUBLISHED.equals(api.getStatus())) {\n+                            ApiTypeWrapper apiTypeWrapper = new ApiTypeWrapper(api);\n+                            apiTypeWrapper.setTier(tier.getName());\n+                            // add subscription if update flag is not specified\n+                            // it will throw an error if subscriber already exists\n+                            if (update == null || !update) {\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            } else if (!apiConsumer.isSubscribedToApp(subscribedAPI.getApiId(), userId, appId)) {\n+                                // on update skip subscriptions that already exists\n+                                apiConsumer.addSubscription(apiTypeWrapper, userId, appId);\n+                            }\n+                        } else {\n+                            log.error(\"Failed to import Subscription as API \" + name + \"-\" + version +\n+                                    \" as one or more tiers may be unavailable or the API may not have been published \");\n+                            skippedAPIList.add(subscribedAPI.getApiId());\n+                        }", "originalCommit": "b416ba16311b4c6a7d5f717b02de5693c32a48b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMTAyNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460421024", "bodyText": "Fixed", "author": "Chamindu36", "createdAt": "2020-07-25T16:31:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzQ0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzYyMw==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460407623", "body": "I think we don't need another function like this. We can modify the existing isTierAvailable function as below. Just check the feasibility whether we can do like this.\r\n```\r\nprivate boolean isTierAvailable(Tier targetTier, ApiTypeWrapper apiTypeWrapper) {\r\n\tSet<Tier> availableTiers = null;\r\n\tif (!apiTypeWrapper.isAPIProduct()) {\r\n\t\tAPIIdentifier apiId = apiTypeWrapper.getApi().getId();\r\n\t\tavailableTiers = api.getAvailableTiers();\r\n\t} else {\r\n\t\tAPIProductIdentifier apiProductId = apiTypeWrapper.getApiProduct().getId();\r\n\t\tavailableTiers = apiProductId.getAvailableTiers();\r\n\t}\r\n        if (availableTiers.contains(targetTier)) {\r\n            return true;\r\n        } else {\r\n            log.error(\"Tier:\" + targetTier.getName() + \" is not available for API \" + apiId.getApiName() + \"-\" +\r\n                    apiId.getVersion());\r\n            return false;\r\n        }\r\n}\r\n```", "bodyText": "I think we don't need another function like this. We can modify the existing isTierAvailable function as below. Just check the feasibility whether we can do like this.\nprivate boolean isTierAvailable(Tier targetTier, ApiTypeWrapper apiTypeWrapper) {\n\tSet<Tier> availableTiers = null;\n\tif (!apiTypeWrapper.isAPIProduct()) {\n\t\tAPIIdentifier apiId = apiTypeWrapper.getApi().getId();\n\t\tavailableTiers = api.getAvailableTiers();\n\t} else {\n\t\tAPIProductIdentifier apiProductId = apiTypeWrapper.getApiProduct().getId();\n\t\tavailableTiers = apiProductId.getAvailableTiers();\n\t}\n        if (availableTiers.contains(targetTier)) {\n            return true;\n        } else {\n            log.error(\"Tier:\" + targetTier.getName() + \" is not available for API \" + apiId.getApiName() + \"-\" +\n                    apiId.getVersion());\n            return false;\n        }\n}", "bodyHTML": "<p dir=\"auto\">I think we don't need another function like this. We can modify the existing isTierAvailable function as below. Just check the feasibility whether we can do like this.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private boolean isTierAvailable(Tier targetTier, ApiTypeWrapper apiTypeWrapper) {\n\tSet&lt;Tier&gt; availableTiers = null;\n\tif (!apiTypeWrapper.isAPIProduct()) {\n\t\tAPIIdentifier apiId = apiTypeWrapper.getApi().getId();\n\t\tavailableTiers = api.getAvailableTiers();\n\t} else {\n\t\tAPIProductIdentifier apiProductId = apiTypeWrapper.getApiProduct().getId();\n\t\tavailableTiers = apiProductId.getAvailableTiers();\n\t}\n        if (availableTiers.contains(targetTier)) {\n            return true;\n        } else {\n            log.error(&quot;Tier:&quot; + targetTier.getName() + &quot; is not available for API &quot; + apiId.getApiName() + &quot;-&quot; +\n                    apiId.getVersion());\n            return false;\n        }\n}\"><pre><code>private boolean isTierAvailable(Tier targetTier, ApiTypeWrapper apiTypeWrapper) {\n\tSet&lt;Tier&gt; availableTiers = null;\n\tif (!apiTypeWrapper.isAPIProduct()) {\n\t\tAPIIdentifier apiId = apiTypeWrapper.getApi().getId();\n\t\tavailableTiers = api.getAvailableTiers();\n\t} else {\n\t\tAPIProductIdentifier apiProductId = apiTypeWrapper.getApiProduct().getId();\n\t\tavailableTiers = apiProductId.getAvailableTiers();\n\t}\n        if (availableTiers.contains(targetTier)) {\n            return true;\n        } else {\n            log.error(\"Tier:\" + targetTier.getName() + \" is not available for API \" + apiId.getApiName() + \"-\" +\n                    apiId.getVersion());\n            return false;\n        }\n}\n</code></pre></div>", "author": "wasuradananjith", "createdAt": "2020-07-25T13:59:29Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/ApplicationImportExportManager.java", "diffHunk": "@@ -188,6 +216,41 @@ private boolean isTierAvailable(Tier targetTier, API api) {\n         }\n     }\n \n+    /**\n+     * Check whether the object is a type of ApiProduct\n+     *\n+     * @param object        - {@link Object}\n+     * @return true, if the object is an ApiProduct, otherwise false\n+     */\n+    private boolean isApiProduct(Object object) {\n+        try {\n+            //Cast object to ApiProduct\n+            APIProduct apiProduct = (APIProduct) object;\n+            return (apiProduct != null) ? true : false;\n+        } catch (Exception e) {\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Check whether a target Tier is available to subscribe\n+     *\n+     * @param targetTier Target Tier\n+     * @param apiProduct - {@link APIProduct}\n+     * @return true, if the target tier is available\n+     */\n+    private boolean isTierAvailableForProduct(Tier targetTier, APIProduct apiProduct) {\n+        APIProductIdentifier apiProductId = apiProduct.getId();\n+        Set<Tier> availableTiers = apiProduct.getAvailableTiers();\n+        if (availableTiers.contains(targetTier)) {\n+            return true;\n+        } else {\n+            log.error(\"Tier:\" + targetTier.getName() + \" is not available for API Product \" + apiProductId.getName() + \"-\" +\n+                    apiProductId.getVersion());\n+            return false;\n+        }\n+    }\n+", "originalCommit": "b416ba16311b4c6a7d5f717b02de5693c32a48b9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMTA0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460421040", "bodyText": "Fixed", "author": "Chamindu36", "createdAt": "2020-07-25T16:31:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQwNzYyMw=="}], "type": "inlineReview"}, {"oid": "5dc9adee472b9d8583783358639137d2206b5b86", "url": "https://github.com/wso2/carbon-apimgt/commit/5dc9adee472b9d8583783358639137d2206b5b86", "message": "Fixing reviews and adding suggestions", "committedDate": "2020-07-25T16:29:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMTU3MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460621570", "body": "can't we use instanceOf?\r\n\r\nAlso, don't catch generic \"Exception\"s unless there is a really specific need.", "bodyText": "can't we use instanceOf?\nAlso, don't catch generic \"Exception\"s unless there is a really specific need.", "bodyHTML": "<p dir=\"auto\">can't we use instanceOf?</p>\n<p dir=\"auto\">Also, don't catch generic \"Exception\"s unless there is a really specific need.</p>", "author": "malinthaprasan", "createdAt": "2020-07-27T02:56:54Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/java/org/wso2/carbon/apimgt/rest/api/admin/v1/utils/ApplicationImportExportManager.java", "diffHunk": "@@ -172,18 +180,47 @@ public boolean isOwnerAvailable(String userId) throws APIManagementException {\n     /**\n      * Check whether a target Tier is available to subscribe\n      *\n-     * @param targetTier Target Tier\n-     * @param api        - {@link API}\n+     * @param targetTier     Target Tier\n+     * @param apiTypeWrapper - {@link ApiTypeWrapper}\n      * @return true, if the target tier is available\n      */\n-    private boolean isTierAvailable(Tier targetTier, API api) {\n-        APIIdentifier apiId = api.getId();\n-        Set<Tier> availableTiers = api.getAvailableTiers();\n+    private boolean isTierAvailable(Tier targetTier, ApiTypeWrapper apiTypeWrapper) {\n+        Set<Tier> availableTiers = null;\n+        API api = null;\n+        APIProduct apiProduct = null;\n+        if (!apiTypeWrapper.isAPIProduct()) {\n+            api = apiTypeWrapper.getApi();\n+            availableTiers = api.getAvailableTiers();\n+        } else {\n+            apiProduct = apiTypeWrapper.getApiProduct();\n+            availableTiers = apiProduct.getAvailableTiers();\n+        }\n         if (availableTiers.contains(targetTier)) {\n             return true;\n         } else {\n-            log.error(\"Tier:\" + targetTier.getName() + \" is not available for API \" + apiId.getApiName() + \"-\" +\n-                    apiId.getVersion());\n+            if (!apiTypeWrapper.isAPIProduct()) {\n+                log.error(\"Tier:\" + targetTier.getName() + \" is not available for API \" + api.getId().getApiName() + \"-\" +\n+                        api.getId().getVersion());\n+            } else {\n+                log.error(\"Tier:\" + targetTier.getName() + \" is not available for API Product \" + apiProduct.getId().getName() + \"-\" +\n+                        apiProduct.getId().getVersion());\n+            }\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Check whether the object is a type of ApiProduct\n+     *\n+     * @param object        - {@link Object}\n+     * @return true, if the object is an ApiProduct, otherwise false\n+     */\n+    private boolean isApiProduct(Object object) {\n+        try {\n+            //Cast object to ApiProduct\n+            APIProduct apiProduct = (APIProduct) object;\n+            return (apiProduct != null) ? true : false;\n+        } catch (Exception e) {\n             return false;", "originalCommit": "5dc9adee472b9d8583783358639137d2206b5b86", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDM2OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/9059#discussion_r460650368", "bodyText": "Thanks for the input. Fixed the requested changed", "author": "Chamindu36", "createdAt": "2020-07-27T05:12:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYyMTU3MA=="}], "type": "inlineReview"}, {"oid": "06a96a827b1ad7cb32f57fbbb5323ff8b6307884", "url": "https://github.com/wso2/carbon-apimgt/commit/06a96a827b1ad7cb32f57fbbb5323ff8b6307884", "message": "Changing isApiProduct Function", "committedDate": "2020-07-27T05:11:54Z", "type": "commit"}]}