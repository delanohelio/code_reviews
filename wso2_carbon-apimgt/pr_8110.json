{"pr_number": 8110, "pr_title": "fix custom url issues", "pr_author": "tharindu1st", "pr_createdAt": "2020-01-27T17:07:58Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8110", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODA2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371548066", "body": "what is the tenant domain it returns when username is an email and tenant domain is carbon.super(enableEmailUsername set to false)", "bodyText": "what is the tenant domain it returns when username is an email and tenant domain is carbon.super(enableEmailUsername set to false)", "bodyHTML": "<p dir=\"auto\">what is the tenant domain it returns when username is an email and tenant domain is carbon.super(enableEmailUsername set to false)</p>", "author": "isharac", "createdAt": "2020-01-27T23:55:46Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConsumerImpl.java", "diffHunk": "@@ -5463,7 +5463,8 @@ public String getOpenAPIDefinitionForEnvironment(Identifier apiId, String enviro\n             //todo: use get api by id, so no need to set scopes or uri templates\n             api.setScopes(oasParser.getScopes(definition));\n             api.setUriTemplates(oasParser.getURITemplates(definition));\n-            apiTenantDomain = MultitenantUtils.getTenantDomain(api.getId().getProviderName());\n+            apiTenantDomain = MultitenantUtils.getTenantDomain(", "originalCommit": "afe94c8cdc127c3521d97a0d0009cf6edfeb60ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY2NDc1MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371664751", "bodyText": "As offline checked this is fine as provider name contains the @carbon.super", "author": "isharac", "createdAt": "2020-01-28T08:37:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODIzNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371548235", "body": "space required.", "bodyText": "space required.", "bodyHTML": "<p dir=\"auto\">space required.</p>", "author": "isharac", "createdAt": "2020-01-27T23:56:24Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/SystemApplicationDAO.java", "diffHunk": "@@ -176,25 +174,24 @@ public SystemApplicationDTO getClientCredentialsForApplication(String appName) t\n      * @return boolean\n      * @throws APIMgtDAOException\n      */\n-    public boolean removeConsumerKeyForApplication(String appName) throws APIMgtDAOException {\n+    public boolean removeConsumerKeyForApplication(String appName,String tenantDomain) throws APIMgtDAOException {", "originalCommit": "afe94c8cdc127c3521d97a0d0009cf6edfeb60ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODMyNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371548327", "body": "space", "bodyText": "space", "bodyHTML": "<p dir=\"auto\">space</p>", "author": "isharac", "createdAt": "2020-01-27T23:56:36Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/SystemApplicationDAO.java", "diffHunk": "@@ -176,25 +174,24 @@ public SystemApplicationDTO getClientCredentialsForApplication(String appName) t\n      * @return boolean\n      * @throws APIMgtDAOException\n      */\n-    public boolean removeConsumerKeyForApplication(String appName) throws APIMgtDAOException {\n+    public boolean removeConsumerKeyForApplication(String appName,String tenantDomain) throws APIMgtDAOException {\n         Connection connection = null;\n         PreparedStatement preparedStatement = null;\n         boolean result = false;\n         String deleteApplicationKeyQuery = SQLConstants.SystemApplicationConstants.DELETE_SYSTEM_APPLICATION;\n \n         try {\n             connection = APIMgtDBUtil.getConnection();\n-            initialAutoCommit = connection.getAutoCommit();\n             connection.setAutoCommit(false);\n             preparedStatement = connection.prepareStatement(deleteApplicationKeyQuery);\n             preparedStatement.setString(1, appName);\n+            preparedStatement.setString(2,tenantDomain);", "originalCommit": "afe94c8cdc127c3521d97a0d0009cf6edfeb60ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0ODQwNA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371548404", "body": "space", "bodyText": "space", "bodyHTML": "<p dir=\"auto\">space</p>", "author": "isharac", "createdAt": "2020-01-27T23:56:52Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/dao/SystemApplicationDAO.java", "diffHunk": "@@ -208,25 +205,24 @@ public boolean removeConsumerKeyForApplication(String appName) throws APIMgtDAOE\n      * @return boolean\n      * @throws APIMgtDAOException\n      */\n-    public boolean isClientCredentialsExistForApplication(String appName) throws APIMgtDAOException {\n+    public boolean isClientCredentialsExistForApplication(String appName,String tenantDomain) throws APIMgtDAOException {", "originalCommit": "afe94c8cdc127c3521d97a0d0009cf6edfeb60ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "39973c351cefb596778eeab73ff6bf51d3d364d1", "url": "https://github.com/wso2/carbon-apimgt/commit/39973c351cefb596778eeab73ff6bf51d3d364d1", "message": "fix tenant level service provider creation", "committedDate": "2020-01-28T13:52:39Z", "type": "forcePushed"}, {"oid": "4fd999bd83e965211860c84912a1318aa7548b45", "url": "https://github.com/wso2/carbon-apimgt/commit/4fd999bd83e965211860c84912a1318aa7548b45", "message": "fix tenant level service provider creation", "committedDate": "2020-01-28T13:55:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0Mzc2OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371843768", "body": "```suggestion\r\n                } else {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            }else{\n          \n          \n            \n                            } else {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                }<span class=\"pl-k\">else</span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                }<span class=\"x x-first x-last\"> </span><span class=\"pl-k\">else</span><span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "malinthaprasan", "createdAt": "2020-01-28T14:43:31Z", "path": "components/apimgt/org.wso2.carbon.apimgt.rest.api.dcr/src/main/java/org/wso2/carbon/apimgt/rest/api/dcr/web/impl/RegistrationServiceImpl.java", "diffHunk": "@@ -137,8 +140,11 @@ public Response register(RegistrationProfile profile) {\n                 oauthApplicationInfo.setIsSaasApplication(profile.isSaasApp());\n                 oauthApplicationInfo.setTokenType(tokenType);\n                 appRequest.setOAuthApplicationInfo(oauthApplicationInfo);\n-\n-                loggedInUserTenantDomain = RestApiUtil.getLoggedInUserTenantDomain();\n+                if (!authUserName.equals(owner)){\n+                    loggedInUserTenantDomain = MultitenantUtils.getTenantDomain(owner);\n+                }else{", "originalCommit": "4fd999bd83e965211860c84912a1318aa7548b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0NDQ1OA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371844458", "body": "```suggestion\r\n                    if (StringUtils.equals(subscriptionPolicy.getBillingPlan(), APIConstants.COMMERCIAL_TIER_PLAN)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(StringUtils.equals(subscriptionPolicy.getBillingPlan(), APIConstants.COMMERCIAL_TIER_PLAN)){\n          \n          \n            \n                                if (StringUtils.equals(subscriptionPolicy.getBillingPlan(), APIConstants.COMMERCIAL_TIER_PLAN)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span>(<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>equals(subscriptionPolicy<span class=\"pl-k\">.</span>getBillingPlan(), <span class=\"pl-smi\">APIConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>COMMERCIAL_TIER_PLAN</span>)){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(<span class=\"pl-smi\">StringUtils</span><span class=\"pl-k\">.</span>equals(subscriptionPolicy<span class=\"pl-k\">.</span>getBillingPlan(), <span class=\"pl-smi\">APIConstants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>COMMERCIAL_TIER_PLAN</span>))<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "malinthaprasan", "createdAt": "2020-01-28T14:44:31Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -7919,7 +7960,7 @@ public static boolean isEnabledSubscriptionSpikeArrest() {\n                 if (policy instanceof SubscriptionPolicy) {\n                     SubscriptionPolicy subscriptionPolicy = (SubscriptionPolicy) policy;\n                     setBillingPlanAndCustomAttributesToTier(subscriptionPolicy, tier);\n-                    if(StringUtils.equals(subscriptionPolicy.getBillingPlan(),APIConstants.COMMERCIAL_TIER_PLAN)){\n+                    if(StringUtils.equals(subscriptionPolicy.getBillingPlan(), APIConstants.COMMERCIAL_TIER_PLAN)){", "originalCommit": "4fd999bd83e965211860c84912a1318aa7548b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0NTkyOQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371845929", "body": "Shall we remove logging the errors? Throwing the error only sufficient.", "bodyText": "Shall we remove logging the errors? Throwing the error only sufficient.", "bodyHTML": "<p dir=\"auto\">Shall we remove logging the errors? Throwing the error only sufficient.</p>", "author": "malinthaprasan", "createdAt": "2020-01-28T14:46:51Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -9936,5 +9981,103 @@ public static boolean validateAPICategories(List<APICategory> categories, String\n         }\n         return true;\n     }\n+\n+    public static String getTenantBasedDevPortalContext(String tenantDomain) throws APIManagementException {\n+\n+        String context = null;\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(\"<tenant-id>\", tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_STORE)) {\n+                    JSONObject storeMapping = (JSONObject) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_STORE);\n+                    if (storeMapping.containsKey(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT)) {\n+                        context = (String) storeMapping.get(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT);\n+                    } else {\n+                        context = \"\";\n+                    }\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving gateway domain mappings from registry\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {\n+            String msg = \"Invalid JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ParseException e) {\n+            String msg = \"Malformed JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        }", "originalCommit": "4fd999bd83e965211860c84912a1318aa7548b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0NjA5OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371846099", "body": "Same as above.", "bodyText": "Same as above.", "bodyHTML": "<p dir=\"auto\">Same as above.</p>", "author": "malinthaprasan", "createdAt": "2020-01-28T14:47:07Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -9936,5 +9981,103 @@ public static boolean validateAPICategories(List<APICategory> categories, String\n         }\n         return true;\n     }\n+\n+    public static String getTenantBasedDevPortalContext(String tenantDomain) throws APIManagementException {\n+\n+        String context = null;\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(\"<tenant-id>\", tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_STORE)) {\n+                    JSONObject storeMapping = (JSONObject) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_STORE);\n+                    if (storeMapping.containsKey(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT)) {\n+                        context = (String) storeMapping.get(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT);\n+                    } else {\n+                        context = \"\";\n+                    }\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving gateway domain mappings from registry\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {\n+            String msg = \"Invalid JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ParseException e) {\n+            String msg = \"Malformed JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        }\n+        return context;\n+    }\n+\n+\n+    public static Map getTenantBasedStoreDomainMapping(String tenantDomain) throws APIManagementException {\n+\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(\"<tenant-id>\", tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_STORE)) {\n+                    return (Map) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_STORE);\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving gateway domain mappings from registry\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {\n+            String msg = \"Invalid JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ParseException e) {\n+            String msg = \"Malformed JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        }", "originalCommit": "4fd999bd83e965211860c84912a1318aa7548b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg0NjI2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8110#discussion_r371846266", "body": "```suggestion\r\n\r\n    public static String getTenantAdminUserName(String tenantDomain) throws APIManagementException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static String getTenantAdminUserName(String tenantDomain) throws APIManagementException {\n          \n          \n            \n            \n          \n          \n            \n                public static String getTenantAdminUserName(String tenantDomain) throws APIManagementException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"10058\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">    </span><span class=\"pl-k x\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">static</span><span class=\"x\"> </span><span class=\"pl-smi x\">String</span><span class=\"x\"> getTenantAdminUserName(</span><span class=\"pl-smi x\">String</span><span class=\"x\"> tenantDomain) throws </span><span class=\"pl-smi x\">APIManagementException</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"10058\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"10059\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> getTenantAdminUserName(<span class=\"pl-smi\">String</span> tenantDomain) throws <span class=\"pl-smi\">APIManagementException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "malinthaprasan", "createdAt": "2020-01-28T14:47:24Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -9936,5 +9981,103 @@ public static boolean validateAPICategories(List<APICategory> categories, String\n         }\n         return true;\n     }\n+\n+    public static String getTenantBasedDevPortalContext(String tenantDomain) throws APIManagementException {\n+\n+        String context = null;\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(\"<tenant-id>\", tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_STORE)) {\n+                    JSONObject storeMapping = (JSONObject) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_STORE);\n+                    if (storeMapping.containsKey(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT)) {\n+                        context = (String) storeMapping.get(APIConstants.API_DOMAIN_MAPPINGS_CONTEXT);\n+                    } else {\n+                        context = \"\";\n+                    }\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving gateway domain mappings from registry\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {\n+            String msg = \"Invalid JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ParseException e) {\n+            String msg = \"Malformed JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        }\n+        return context;\n+    }\n+\n+\n+    public static Map getTenantBasedStoreDomainMapping(String tenantDomain) throws APIManagementException {\n+\n+        try {\n+            Registry registry = ServiceReferenceHolder.getInstance().getRegistryService().\n+                    getGovernanceSystemRegistry();\n+            String resourcePath = APIConstants.API_DOMAIN_MAPPINGS.replace(\"<tenant-id>\", tenantDomain);\n+            if (registry.resourceExists(resourcePath)) {\n+                Resource resource = registry.get(resourcePath);\n+                String content = new String((byte[]) resource.getContent(), Charset.defaultCharset());\n+                JSONParser parser = new JSONParser();\n+                JSONObject mappings = (JSONObject) parser.parse(content);\n+                if (mappings.containsKey(APIConstants.API_DOMAIN_MAPPINGS_STORE)) {\n+                    return (Map) mappings.get(APIConstants.API_DOMAIN_MAPPINGS_STORE);\n+                }\n+            }\n+        } catch (RegistryException e) {\n+            String msg = \"Error while retrieving gateway domain mappings from registry\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ClassCastException e) {\n+            String msg = \"Invalid JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        } catch (ParseException e) {\n+            String msg = \"Malformed JSON found in the gateway tenant domain mappings\";\n+            log.error(msg, e);\n+            throw new APIManagementException(msg, e);\n+        }\n+        return null;\n+    }\n+\n+    public static boolean isPerTenantServiceProviderEnabled(String tenantDomain) throws APIManagementException {\n+\n+        int tenantId = getTenantIdFromTenantDomain(tenantDomain);\n+        JSONObject tenantConfig = getTenantConfig(tenantId);\n+        if (tenantConfig.containsKey(APIConstants.PER_TENANT_SERVICE_PROVIDER)) {\n+            return (boolean) tenantConfig.get(APIConstants.PER_TENANT_SERVICE_PROVIDER);\n+        }\n+        return false;\n+    }\n+    public static String getTenantAdminUserName(String tenantDomain) throws APIManagementException {", "originalCommit": "4fd999bd83e965211860c84912a1318aa7548b45", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b326079a07b0d2cf5d85e127c5239462505299ee", "url": "https://github.com/wso2/carbon-apimgt/commit/b326079a07b0d2cf5d85e127c5239462505299ee", "message": "fix tenant level service provider creation", "committedDate": "2020-01-29T04:34:58Z", "type": "forcePushed"}, {"oid": "f7fab1fdb2ddb6d645ce9567150cac6fbaaf9186", "url": "https://github.com/wso2/carbon-apimgt/commit/f7fab1fdb2ddb6d645ce9567150cac6fbaaf9186", "message": "fix custom url issues", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "40bcd2dbb3efe787f01d317c4f052984c8e733e8", "url": "https://github.com/wso2/carbon-apimgt/commit/40bcd2dbb3efe787f01d317c4f052984c8e733e8", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "228bd2555a21c77208288127bc30507d6b74e796", "url": "https://github.com/wso2/carbon-apimgt/commit/228bd2555a21c77208288127bc30507d6b74e796", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "cf8cf36d0be9976cf9885d12f6354a5608750660", "url": "https://github.com/wso2/carbon-apimgt/commit/cf8cf36d0be9976cf9885d12f6354a5608750660", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/settings/settings.jag\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "c8b480e5e2ee0deab8d4cb82f3b5b3bdca87f975", "url": "https://github.com/wso2/carbon-apimgt/commit/c8b480e5e2ee0deab8d4cb82f3b5b3bdca87f975", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "f36b9dd89a73bd403a6fdc83362f4cb5b66176b1", "url": "https://github.com/wso2/carbon-apimgt/commit/f36b9dd89a73bd403a6fdc83362f4cb5b66176b1", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "4a7550f7ffb99fec935a4637f18d66aa89bc0d8e", "url": "https://github.com/wso2/carbon-apimgt/commit/4a7550f7ffb99fec935a4637f18d66aa89bc0d8e", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "b10fc02a024c5fb7bae7f2ca8fdfad2af4954a79", "url": "https://github.com/wso2/carbon-apimgt/commit/b10fc02a024c5fb7bae7f2ca8fdfad2af4954a79", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "5a1710e189926787387ee6208e7c4ae57fd233cd", "url": "https://github.com/wso2/carbon-apimgt/commit/5a1710e189926787387ee6208e7c4ae57fd233cd", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "b2896c3832ecfdc0e68f9eb33cfe39336df21b08", "url": "https://github.com/wso2/carbon-apimgt/commit/b2896c3832ecfdc0e68f9eb33cfe39336df21b08", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "cd9ffb1f22adbbffb0b40cca17f8ef31cafc91c3", "url": "https://github.com/wso2/carbon-apimgt/commit/cd9ffb1f22adbbffb0b40cca17f8ef31cafc91c3", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/refresh/refresh.jag\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "ec899832ca5556cca7fb9d07d270f0ed4b3a3b21", "url": "https://github.com/wso2/carbon-apimgt/commit/ec899832ca5556cca7fb9d07d270f0ed4b3a3b21", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "a0924293db1071f9ef35211bbc82019eb97900a5", "url": "https://github.com/wso2/carbon-apimgt/commit/a0924293db1071f9ef35211bbc82019eb97900a5", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "74dee6533d0e35ef07368c433942a8088da8dc2a", "url": "https://github.com/wso2/carbon-apimgt/commit/74dee6533d0e35ef07368c433942a8088da8dc2a", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Rajith Roshan <rajithroshan90@gmail.com>", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "dbdef4d32a081a8795dc92b02d8b105523e49bef", "url": "https://github.com/wso2/carbon-apimgt/commit/dbdef4d32a081a8795dc92b02d8b105523e49bef", "message": "fix custom url issues", "committedDate": "2020-01-29T04:43:19Z", "type": "commit"}, {"oid": "824d96dc63603325dab791622a8a3f17503c045d", "url": "https://github.com/wso2/carbon-apimgt/commit/824d96dc63603325dab791622a8a3f17503c045d", "message": "fix tenant level service provider creation", "committedDate": "2020-01-29T04:43:20Z", "type": "commit"}, {"oid": "e1a98bf5c170408aacd8d69ac140697228fbd641", "url": "https://github.com/wso2/carbon-apimgt/commit/e1a98bf5c170408aacd8d69ac140697228fbd641", "message": "Update components/apimgt/org.wso2.carbon.apimgt.rest.api.dcr/src/main/java/org/wso2/carbon/apimgt/rest/api/dcr/web/impl/RegistrationServiceImpl.java\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:20Z", "type": "commit"}, {"oid": "ad092b80d269722f9dc7da16164722256edeb355", "url": "https://github.com/wso2/carbon-apimgt/commit/ad092b80d269722f9dc7da16164722256edeb355", "message": "Update components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:20Z", "type": "commit"}, {"oid": "5c93b0b0ee7cb46abf87e26a39b17b62334adc6c", "url": "https://github.com/wso2/carbon-apimgt/commit/5c93b0b0ee7cb46abf87e26a39b17b62334adc6c", "message": "Update components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:20Z", "type": "commit"}, {"oid": "73029abefcddbfb036ff173bca79cec25c0c79e2", "url": "https://github.com/wso2/carbon-apimgt/commit/73029abefcddbfb036ff173bca79cec25c0c79e2", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/logout/logout.jag\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:20Z", "type": "commit"}, {"oid": "145d9caac2e2b7aaf55a20386a0ed7108485b8ab", "url": "https://github.com/wso2/carbon-apimgt/commit/145d9caac2e2b7aaf55a20386a0ed7108485b8ab", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/refresh/refresh.jag\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:21Z", "type": "commit"}, {"oid": "87c89e6f91e3c2a87669001c012698bc4ab6cda1", "url": "https://github.com/wso2/carbon-apimgt/commit/87c89e6f91e3c2a87669001c012698bc4ab6cda1", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/utils.js\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:21Z", "type": "commit"}, {"oid": "80f7a2d4b6a1908676aff02cefb90bc57ce01fc1", "url": "https://github.com/wso2/carbon-apimgt/commit/80f7a2d4b6a1908676aff02cefb90bc57ce01fc1", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/logout/logout.jag\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:21Z", "type": "commit"}, {"oid": "d222c190431de7600135ac8b623c27b7cc835bdb", "url": "https://github.com/wso2/carbon-apimgt/commit/d222c190431de7600135ac8b623c27b7cc835bdb", "message": "Update features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/services/refresh/refresh.jag\n\nCo-Authored-By: Malintha Amarasinghe <malintha.prasan@gmail.com>", "committedDate": "2020-01-29T04:43:21Z", "type": "commit"}, {"oid": "acc9f3c1075014ce10eb718f120d380de161c66e", "url": "https://github.com/wso2/carbon-apimgt/commit/acc9f3c1075014ce10eb718f120d380de161c66e", "message": "fix tenant level service provider creation", "committedDate": "2020-01-29T04:43:21Z", "type": "commit"}, {"oid": "acc9f3c1075014ce10eb718f120d380de161c66e", "url": "https://github.com/wso2/carbon-apimgt/commit/acc9f3c1075014ce10eb718f120d380de161c66e", "message": "fix tenant level service provider creation", "committedDate": "2020-01-29T04:43:21Z", "type": "forcePushed"}]}