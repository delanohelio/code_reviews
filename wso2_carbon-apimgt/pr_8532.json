{"pr_number": 8532, "pr_title": "Multiple keymanager support", "pr_author": "tharindu1st", "pr_createdAt": "2020-05-19T07:52:55Z", "pr_url": "https://github.com/wso2/carbon-apimgt/pull/8532", "timeline": [{"oid": "c19cd5dc7ad9a944bff77c297cc323f7bb3b042a", "url": "https://github.com/wso2/carbon-apimgt/commit/c19cd5dc7ad9a944bff77c297cc323f7bb3b042a", "message": "bring configuration as osgi service", "committedDate": "2020-05-25T08:51:08Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MzU3NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r431063574", "body": "Make all messages present tense", "bodyText": "Make all messages present tense", "bodyHTML": "<p dir=\"auto\">Make all messages present tense</p>", "author": "bhathiya", "createdAt": "2020-05-27T12:02:00Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,", "originalCommit": "c0e54e39243ca1ba808cecc4ba7ad6ee436ac069", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2Mzg4OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r431063889", "bodyText": "@shaniR can you please review all the messages?", "author": "bhathiya", "createdAt": "2020-05-27T12:02:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MzU3NA=="}], "type": "inlineReview"}, {"oid": "20bc159fc747f85ab86c7ebbb17bcb9d7674c268", "url": "https://github.com/wso2/carbon-apimgt/commit/20bc159fc747f85ab86c7ebbb17bcb9d7674c268", "message": "add code review changes", "committedDate": "2020-05-27T17:34:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxMjc0MQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433212741", "body": "please add java docs for all new methods. ", "bodyText": "please add java docs for all new methods.", "bodyHTML": "<p dir=\"auto\">please add java docs for all new methods.</p>", "author": "bhathiya", "createdAt": "2020-06-01T12:46:25Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/APIAdmin.java", "diffHunk": "@@ -209,4 +211,15 @@ void updateMonetizationUsagePublishInfo(MonetizationUsagePublishInfo monetizatio\n      * @return Timestamp in long format\n      */\n     long getTimestamp(String date);\n+\n+    List<KeyManagerConfigurationDTO> getKeyManagerConfigurationsByTenant(String tenantDomain) throws APIManagementException;\n+    Map<String, List<KeyManagerConfigurationDTO>> getAllKeyManagerConfigurations() throws APIManagementException;\n+\n+    KeyManagerConfigurationDTO getKeyManagerConfigurationById(String tenantDomain, String id) throws APIManagementException;\n+    boolean isKeyManagerConfigurationExistById(String tenantDomain, String id) throws APIManagementException;\n+    KeyManagerConfigurationDTO addKeyManagerConfiguration(KeyManagerConfigurationDTO keyManagerConfigurationDTO) throws APIManagementException;\n+    KeyManagerConfigurationDTO updateKeyManagerConfiguration(KeyManagerConfigurationDTO keyManagerConfigurationDTO) throws APIManagementException;\n+    void deleteKeyManagerConfigurationById(String tenantDomain,String id) throws APIManagementException;\n+\n+    KeyManagerConfigurationDTO getKeyManagerConfigurationByName(String tenantDomain, String name) throws APIManagementException;", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxNzQxNQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433217415", "body": "```suggestion\r\n     boolean printStackTrace();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 boolean isStackTrace();\n          \n          \n            \n                 boolean printStackTrace();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isStackTrace</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">printStackTrace</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T12:56:44Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ErrorHandler.java", "diffHunk": "@@ -49,4 +49,10 @@\n      * @return  error code.\n      */\n      int getHttpStatusCode();\n+\n+    /**\n+     *  Return true if stack trace to print;\n+     * @return\n+     */\n+     boolean isStackTrace();", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxODQ4Mg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433218482", "body": "```suggestion\r\n    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exists\", 409, \"Key Manager Already Exists\"),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n          \n          \n            \n                KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exists\", 409, \"Key Manager Already Exists\"),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_ALREADY_EXIST</span>(<span class=\"pl-c1\">901402</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager Already <span class=\"x x-first x-last\">Exist</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">409</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager Already <span class=\"x x-first x-last\">Exist</span><span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_ALREADY_EXIST</span>(<span class=\"pl-c1\">901402</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager Already <span class=\"x x-first x-last\">Exists</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">409</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager Already <span class=\"x x-first x-last\">Exists</span><span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T12:58:56Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxODU2NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433218564", "body": "```suggestion\r\n    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n          \n          \n            \n                KEY_MANAGER_NOT_FOUND(901403, \"Key Manager not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_FOUND</span>(<span class=\"pl-c1\">901403</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager <span class=\"x x-first x-last\">Not</span> found<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager not found<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">KEY_MANAGER_NAME_EMPTY</span>(<span class=\"pl-c1\">901404</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_FOUND</span>(<span class=\"pl-c1\">901403</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager <span class=\"x x-first x-last\">not</span> found<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager not found<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">KEY_MANAGER_NAME_EMPTY</span>(<span class=\"pl-c1\">901404</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T12:59:07Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTEyNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219126", "body": "```suggestion\r\n    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager doesn't support OAuth application generation\", 400,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n          \n          \n            \n                KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager doesn't support OAuth application generation\", 400,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION</span>(<span class=\"pl-c1\">901404</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager <span class=\"x x-first x-last\">Didn</span>'t support <span class=\"x x-first x-last\">to Generate Client Application</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION</span>(<span class=\"pl-c1\">901404</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager <span class=\"x x-first x-last\">doesn</span>'t support <span class=\"x x-first x-last\">OAuth application generation</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:00:12Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTIzOA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219238", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:00:27Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTUxNg==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219516", "body": "```suggestion\r\n    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key manager doesn't support token generation\", 400,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n          \n          \n            \n                KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key manager doesn't support token generation\", 400,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION</span>(<span class=\"pl-c1\">901405</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key <span class=\"x x-first x-last\">Manager didn</span>'t support <span class=\"x x-first x-last\">to generate Token </span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION</span>(<span class=\"pl-c1\">901405</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key <span class=\"x x-first x-last\">manager doesn</span>'t support <span class=\"x x-first x-last\">token generation</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:01:02Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTYwMA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219600", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:01:14Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n+            \"Key Manager didn't support to generate Token \"),", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTcwNw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219707", "body": "```suggestion\r\n    KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager is not enabled in the system\", 400,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager not enabled in the system\", 400,\n          \n          \n            \n                KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager is not enabled in the system\", 400,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_ENABLED</span>(<span class=\"pl-c1\">901406</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager not enabled in the system<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_NOT_ENABLED</span>(<span class=\"pl-c1\">901406</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Key Manager <span class=\"x x-first x-last\">is </span>not enabled in the system<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:01:29Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n+            \"Key Manager didn't support to generate Token \"),\n+    KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager not enabled in the system\", 400,", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIxOTc4NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433219784", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:01:38Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n+            \"Key Manager didn't support to generate Token \"),\n+    KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager not enabled in the system\", 400,\n+            \"Key Manager not enabled in the system\"),", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyMDA4MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433220080", "body": "```suggestion\r\n    KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION(901407, \"Required application properties are missing\", 400,\r\n            \"Required application properties are missing\"),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION(901407, \"Required Application Properties missing\", 400,\n          \n          \n            \n                        \"Required Application Properties missing\"),\n          \n          \n            \n                KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION(901407, \"Required application properties are missing\", 400,\n          \n          \n            \n                        \"Required application properties are missing\"),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION</span>(<span class=\"pl-c1\">901407</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Required <span class=\"x x-first x-last\">Application Properties</span> missing<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Required <span class=\"x x-first x-last\">Application Properties</span> missing<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION</span>(<span class=\"pl-c1\">901407</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Required <span class=\"x x-first x-last\">application properties are</span> missing<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">400</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Required <span class=\"x x-first x-last\">application properties are</span> missing<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:02:13Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n+            \"Key Manager didn't support to generate Token \"),\n+    KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager not enabled in the system\", 400,\n+            \"Key Manager not enabled in the system\"),\n+    KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION(901407, \"Required Application Properties missing\", 400,\n+            \"Required Application Properties missing\"),", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyMDU0MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433220540", "body": "```suggestion\r\n    KEY_MAPPING_ALREADY_EXIST(901408, \"Oauth application is already created\", 409, \"Oauth application is already created\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                KEY_MAPPING_ALREADY_EXIST(901408, \"Application Already Registered\", 409, \"Application Already Registered\");\n          \n          \n            \n                KEY_MAPPING_ALREADY_EXIST(901408, \"Oauth application is already created\", 409, \"Oauth application is already created\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">KEY_MAPPING_ALREADY_EXIST</span>(<span class=\"pl-c1\">901408</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Application Already Registered</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">409</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Application Already Registered</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c1\">KEY_MAPPING_ALREADY_EXIST</span>(<span class=\"pl-c1\">901408</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Oauth application is already created</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">409</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Oauth application is already created</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:03:10Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/ExceptionCodes.java", "diffHunk": "@@ -307,13 +308,31 @@\n \n \n     // Tenant related\n-    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\");\n+    INVALID_TENANT(901300,\"Tenant Not Found\", 400, \"Tenant Not Found\"),\n+    // Key Manager Related\n+    INVALID_KEY_MANAGER_TYPE(901400, \"Key Manager Type not configured\", 400, \"Key Manager Type not configured\"),\n+    REQUIRED_KEY_MANAGER_CONFIGURATION_MISSING(901401,\"Required Key Manager configuration missing\",400,\"Missing \" +\n+            \"required configuration\"),\n+    KEY_MANAGER_ALREADY_EXIST(901402, \"Key Manager Already Exist\", 409, \"Key Manager Already Exist\"),\n+    KEY_MANAGER_NOT_FOUND(901403, \"Key Manager Not found\", 400, \"Key Manager not found\"), KEY_MANAGER_NAME_EMPTY(901404,\n+            \"Key Manager name cannot be empty\", 400,\n+            \"Key Manager name cannot be empty\"),\n+    KEY_MANAGER_NOT_SUPPORT_OAUTH_APP_CREATION(901404, \"Key Manager Didn't support to Generate Client Application\", 400,\n+            \"Key Manager Didn't support to Generate Client Application\"),\n+    KEY_MANAGER_NOT_SUPPORTED_TOKEN_GENERATION(901405, \"Key Manager didn't support to generate Token \", 400,\n+            \"Key Manager didn't support to generate Token \"),\n+    KEY_MANAGER_NOT_ENABLED(901406, \"Key Manager not enabled in the system\", 400,\n+            \"Key Manager not enabled in the system\"),\n+    KEY_MANAGER_MISSING_REQUIRED_PROPERTIES_IN_APPLICATION(901407, \"Required Application Properties missing\", 400,\n+            \"Required Application Properties missing\"),\n+    KEY_MAPPING_ALREADY_EXIST(901408, \"Application Already Registered\", 409, \"Application Already Registered\");", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzODQ2MA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433238460", "body": "```suggestion\r\n                log.error(\"Public key is not RSA\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.error(\"Public key is not a RSA\");\n          \n          \n            \n                            log.error(\"Public key is not RSA\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Public key is not <span class=\"x x-first x-last\">a </span>RSA<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Public key is not RSA<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:38:02Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/JWTUtil.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.wso2.carbon.apimgt.impl.utils;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.JWSAlgorithm;\n+import com.nimbusds.jose.JWSVerifier;\n+import com.nimbusds.jose.crypto.RSASSAVerifier;\n+import com.nimbusds.jwt.SignedJWT;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.security.cert.Certificate;\n+import java.security.interfaces.RSAPublicKey;\n+\n+public class JWTUtil {\n+\n+    private static final Log log = LogFactory.getLog(JWTUtil.class);\n+\n+    public static String retrieveJWKSConfiguration(String jwksEndpoint) throws IOException {\n+\n+        URL url = new URL(jwksEndpoint);\n+        try (CloseableHttpClient httpClient = (CloseableHttpClient) APIUtil\n+                .getHttpClient(url.getPort(), url.getProtocol())) {\n+            HttpGet httpGet = new HttpGet(jwksEndpoint);\n+            try (CloseableHttpResponse response = httpClient.execute(httpGet)) {\n+                if (response.getStatusLine().getStatusCode() == 200) {\n+                    HttpEntity entity = response.getEntity();\n+                    try (InputStream content = entity.getContent()) {\n+                        return IOUtils.toString(content);\n+                    }\n+                } else {\n+                    return null;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param publicKey      public certificate\n+     * @return whether the signature is verified or or not\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, RSAPublicKey publicKey) {\n+\n+        JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+        if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                JWSAlgorithm.RS384.equals(algorithm))) {\n+            try {\n+                JWSVerifier jwsVerifier = new RSASSAVerifier(publicKey);\n+                return jwt.verify(jwsVerifier);\n+            } catch (JOSEException e) {\n+                log.error(\"Error while verifying JWT signature\", e);\n+                return false;\n+            }\n+        } else {\n+            log.error(\"Public key is not a RSA\");\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param alias      public certificate keystore alias\n+     * @return whether the signature is verified or or not\n+     * @throws APIManagementException in case of signature verification failure\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, String alias) throws APIManagementException {\n+\n+        Certificate publicCert = null;\n+        //Read the client-truststore.jks into a KeyStore\n+        try {\n+            publicCert = APIUtil.getCertificateFromTrustStore(alias);\n+        } catch (APIManagementException e) {\n+            throw new APIManagementException(\"Error retrieving certificate from truststore \",e);\n+        }\n+\n+        if (publicCert != null) {\n+            JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+            if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                    JWSAlgorithm.RS384.equals(algorithm))) {\n+                return verifyTokenSignature(jwt, (RSAPublicKey) publicCert.getPublicKey());\n+            } else {\n+                log.error(\"Public key is not a RSA\");", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzODU0NA==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433238544", "body": "```suggestion\r\n                throw new APIManagementException(\"Public key is not RSA\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new APIManagementException(\"Public key is not a RSA\");\n          \n          \n            \n                            throw new APIManagementException(\"Public key is not RSA\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Public key is not <span class=\"x x-first x-last\">a </span>RSA<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Public key is not RSA<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:38:13Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/JWTUtil.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.wso2.carbon.apimgt.impl.utils;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.JWSAlgorithm;\n+import com.nimbusds.jose.JWSVerifier;\n+import com.nimbusds.jose.crypto.RSASSAVerifier;\n+import com.nimbusds.jwt.SignedJWT;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.security.cert.Certificate;\n+import java.security.interfaces.RSAPublicKey;\n+\n+public class JWTUtil {\n+\n+    private static final Log log = LogFactory.getLog(JWTUtil.class);\n+\n+    public static String retrieveJWKSConfiguration(String jwksEndpoint) throws IOException {\n+\n+        URL url = new URL(jwksEndpoint);\n+        try (CloseableHttpClient httpClient = (CloseableHttpClient) APIUtil\n+                .getHttpClient(url.getPort(), url.getProtocol())) {\n+            HttpGet httpGet = new HttpGet(jwksEndpoint);\n+            try (CloseableHttpResponse response = httpClient.execute(httpGet)) {\n+                if (response.getStatusLine().getStatusCode() == 200) {\n+                    HttpEntity entity = response.getEntity();\n+                    try (InputStream content = entity.getContent()) {\n+                        return IOUtils.toString(content);\n+                    }\n+                } else {\n+                    return null;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param publicKey      public certificate\n+     * @return whether the signature is verified or or not\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, RSAPublicKey publicKey) {\n+\n+        JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+        if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                JWSAlgorithm.RS384.equals(algorithm))) {\n+            try {\n+                JWSVerifier jwsVerifier = new RSASSAVerifier(publicKey);\n+                return jwt.verify(jwsVerifier);\n+            } catch (JOSEException e) {\n+                log.error(\"Error while verifying JWT signature\", e);\n+                return false;\n+            }\n+        } else {\n+            log.error(\"Public key is not a RSA\");\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param alias      public certificate keystore alias\n+     * @return whether the signature is verified or or not\n+     * @throws APIManagementException in case of signature verification failure\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, String alias) throws APIManagementException {\n+\n+        Certificate publicCert = null;\n+        //Read the client-truststore.jks into a KeyStore\n+        try {\n+            publicCert = APIUtil.getCertificateFromTrustStore(alias);\n+        } catch (APIManagementException e) {\n+            throw new APIManagementException(\"Error retrieving certificate from truststore \",e);\n+        }\n+\n+        if (publicCert != null) {\n+            JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+            if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                    JWSAlgorithm.RS384.equals(algorithm))) {\n+                return verifyTokenSignature(jwt, (RSAPublicKey) publicCert.getPublicKey());\n+            } else {\n+                log.error(\"Public key is not a RSA\");\n+                throw new APIManagementException(\"Public key is not a RSA\");", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIzOTE5Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433239193", "body": "```suggestion\r\n            log.error(\"Couldn't find a public certificate with alias \" + alias + \" to verify the signature\");\r\n            throw new APIManagementException(\"Couldn't find a public certificate with alias \" + alias + \" to verify the signature\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\"Couldn't find a public certificate to verify signature with alias \" + alias);\n          \n          \n            \n                        throw new APIManagementException(\"Couldn't find a public certificate to verify signature with alias \");\n          \n          \n            \n                        log.error(\"Couldn't find a public certificate with alias \" + alias + \" to verify the signature\");\n          \n          \n            \n                        throw new APIManagementException(\"Couldn't find a public certificate with alias \" + alias + \" to verify the signature\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Couldn't find a public certificate <span class=\"x x-first x-last\">to verify signature </span>with alias <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> alias);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Couldn't find a public certificate <span class=\"x x-first x-last\">to verify signature with</span> alias <span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Couldn't find a public certificate with alias <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> alias<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\"> to verify the signature</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">APIManagementException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Couldn't find a public certificate <span class=\"x x-first\">with alias </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span> alias <span class=\"pl-k x x-first\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\"> to verify the signature</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:39:26Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/JWTUtil.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package org.wso2.carbon.apimgt.impl.utils;\n+\n+import com.nimbusds.jose.JOSEException;\n+import com.nimbusds.jose.JWSAlgorithm;\n+import com.nimbusds.jose.JWSVerifier;\n+import com.nimbusds.jose.crypto.RSASSAVerifier;\n+import com.nimbusds.jwt.SignedJWT;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.wso2.carbon.apimgt.api.APIManagementException;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.security.cert.Certificate;\n+import java.security.interfaces.RSAPublicKey;\n+\n+public class JWTUtil {\n+\n+    private static final Log log = LogFactory.getLog(JWTUtil.class);\n+\n+    public static String retrieveJWKSConfiguration(String jwksEndpoint) throws IOException {\n+\n+        URL url = new URL(jwksEndpoint);\n+        try (CloseableHttpClient httpClient = (CloseableHttpClient) APIUtil\n+                .getHttpClient(url.getPort(), url.getProtocol())) {\n+            HttpGet httpGet = new HttpGet(jwksEndpoint);\n+            try (CloseableHttpResponse response = httpClient.execute(httpGet)) {\n+                if (response.getStatusLine().getStatusCode() == 200) {\n+                    HttpEntity entity = response.getEntity();\n+                    try (InputStream content = entity.getContent()) {\n+                        return IOUtils.toString(content);\n+                    }\n+                } else {\n+                    return null;\n+                }\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param publicKey      public certificate\n+     * @return whether the signature is verified or or not\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, RSAPublicKey publicKey) {\n+\n+        JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+        if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                JWSAlgorithm.RS384.equals(algorithm))) {\n+            try {\n+                JWSVerifier jwsVerifier = new RSASSAVerifier(publicKey);\n+                return jwt.verify(jwsVerifier);\n+            } catch (JOSEException e) {\n+                log.error(\"Error while verifying JWT signature\", e);\n+                return false;\n+            }\n+        } else {\n+            log.error(\"Public key is not a RSA\");\n+            return false;\n+        }\n+    }\n+\n+    /**\n+     * Verify the JWT token signature.\n+     *\n+     * @param jwt SignedJwt Token\n+     * @param alias      public certificate keystore alias\n+     * @return whether the signature is verified or or not\n+     * @throws APIManagementException in case of signature verification failure\n+     */\n+    public static boolean verifyTokenSignature(SignedJWT jwt, String alias) throws APIManagementException {\n+\n+        Certificate publicCert = null;\n+        //Read the client-truststore.jks into a KeyStore\n+        try {\n+            publicCert = APIUtil.getCertificateFromTrustStore(alias);\n+        } catch (APIManagementException e) {\n+            throw new APIManagementException(\"Error retrieving certificate from truststore \",e);\n+        }\n+\n+        if (publicCert != null) {\n+            JWSAlgorithm algorithm = jwt.getHeader().getAlgorithm();\n+            if ((JWSAlgorithm.RS256.equals(algorithm) || JWSAlgorithm.RS512.equals(algorithm) ||\n+                    JWSAlgorithm.RS384.equals(algorithm))) {\n+                return verifyTokenSignature(jwt, (RSAPublicKey) publicCert.getPublicKey());\n+            } else {\n+                log.error(\"Public key is not a RSA\");\n+                throw new APIManagementException(\"Public key is not a RSA\");\n+            }\n+        } else {\n+            log.error(\"Couldn't find a public certificate to verify signature with alias \" + alias);\n+            throw new APIManagementException(\"Couldn't find a public certificate to verify signature with alias \");", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0MTQ2Ng==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433241466", "body": "format the entire code", "bodyText": "format the entire code", "bodyHTML": "<p dir=\"auto\">format the entire code</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:43:26Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/utils/APIUtil.java", "diffHunk": "@@ -742,6 +737,12 @@ public static API getAPIForPublishing(GovernanceArtifact artifact, Registry regi\n             api.setApiCategories(getAPICategoriesFromAPIGovernanceArtifact(artifact, tenantId));\n             //get endpoint config string from artifact, parse it as a json and set the environment list configured with\n             //non empty URLs to API object\n+            String keyManagers = artifact.getAttribute(APIConstants.API_OVERVIEW_KEY_MANAGERS);\n+            if (StringUtils.isNotEmpty(keyManagers)){\n+                api.setKeyManagers(new Gson().fromJson(keyManagers,List.class));\n+            }else{", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NDY2OQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433244669", "body": "add java docs", "bodyText": "add java docs", "bodyHTML": "<p dir=\"auto\">add java docs</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:49:14Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/KeyManager.java", "diffHunk": "@@ -318,42 +314,41 @@ default void detachResourceScopes(API api, Set<URITemplate> uriTemplates, String\n      * This method will be used to delete a Scope in the authorization server.\n      *\n      * @param scopeName    Scope name\n-     * @param tenantDomain tenant domain to delete the scope from\n      * @throws APIManagementException if an error occurs while deleting the scope\n      */\n-    void deleteScope(String scopeName, String tenantDomain) throws APIManagementException;\n+    void deleteScope(String scopeName) throws APIManagementException;\n \n     /**\n      * This method will be used to update a Scope in the authorization server.\n      *\n      * @param scope        Scope object\n-     * @param tenantDomain tenant domain to update the scope\n      * @throws APIManagementException if an error occurs while updating the scope\n      */\n-    void updateScope(Scope scope, String tenantDomain) throws APIManagementException;\n+    void updateScope(Scope scope) throws APIManagementException;\n \n     /**\n      * This method will be used to check whether the a Scope exists for the given scope name in the authorization\n      * server.\n      *\n      * @param scopeName    Scope Name\n-     * @param tenantDomain tenant Domain to check scope existence\n      * @return whether scope exists or not\n      * @throws APIManagementException if an error occurs while checking the existence of the scope\n      */\n-    boolean isScopeExists(String scopeName, String tenantDomain) throws APIManagementException;\n+    boolean isScopeExists(String scopeName) throws APIManagementException;\n \n     /**\n      * This method will be used to validate the scope set provided and populate the additional parameters for each\n      * Scope object. Default implementation will return the received scope set as it is.\n      *\n      * @param scopes       Scope List to validate\n-     * @param tenantDomain tenant domain\n      * @throws APIManagementException if an error occurs while validating and populating\n      */\n-    default void validateScopes(Set<Scope> scopes, String tenantDomain) throws APIManagementException {\n+    default void validateScopes(Set<Scope> scopes) throws APIManagementException {\n         // Doing nothing in default implementation. If KM supports validate scopes operation, override the\n         // implementation.\n     }\n \n+    public String getType();\n+\n+    public void setTenantDomain(String tenantDomain);", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NDg2Mw==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433244863", "body": "java docs.", "bodyText": "java docs.", "bodyHTML": "<p dir=\"auto\">java docs.</p>", "author": "bhathiya", "createdAt": "2020-06-01T13:49:36Z", "path": "components/apimgt/org.wso2.carbon.apimgt.api/src/main/java/org/wso2/carbon/apimgt/api/model/KeyManagerConnectorConfiguration.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.wso2.carbon.apimgt.api.model;\n+\n+import java.util.List;\n+\n+public interface KeyManagerConnectorConfiguration {\n+    public String getImplementation();\n+    public String getJWTValidator();\n+    public List<ConfigurationDto> getConnectionConfigurations();\n+    public List<ConfigurationDto> getApplicationConfigurations();", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI0NjExMQ==", "url": "https://github.com/wso2/carbon-apimgt/pull/8532#discussion_r433246111", "body": "```suggestion\r\n        public static final String KEY_MAPPING_ID = \"keyMappingId\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String KEY_MAPPING_UD = \"keyMappingId\";\n          \n          \n            \n                    public static final String KEY_MAPPING_ID = \"keyMappingId\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">KEY_MAPPING_UD</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keyMappingId<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">KEY_MAPPING_ID</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keyMappingId<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "bhathiya", "createdAt": "2020-06-01T13:51:54Z", "path": "components/apimgt/org.wso2.carbon.apimgt.impl/src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java", "diffHunk": "@@ -1084,6 +1082,7 @@ private CORSHeaders() {\n         public static final String CLIENT_DETAILS = \"appDetails\";\n         public static final String CALLBACK_URL = \"callbackUrl\";\n         public static final String KEY_STATE = \"keyState\";\n+        public static final String KEY_MAPPING_UD = \"keyMappingId\";", "originalCommit": "57e13445f78fca4634ec1eb6c2ff1276ec7ab111", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9614b57a9e39a13e2b28758b1c5155a2be1e1bd4", "url": "https://github.com/wso2/carbon-apimgt/commit/9614b57a9e39a13e2b28758b1c5155a2be1e1bd4", "message": "add consumer key and scope as a seperate claims", "committedDate": "2020-06-01T18:54:05Z", "type": "forcePushed"}, {"oid": "437957ad055e928dd6cd284a0e3c8f452040e025", "url": "https://github.com/wso2/carbon-apimgt/commit/437957ad055e928dd6cd284a0e3c8f452040e025", "message": "add code review changes", "committedDate": "2020-06-02T05:50:55Z", "type": "forcePushed"}, {"oid": "f1c6a6bc3db9ae5a41bd2d2a8a9507d1dda1c3ad", "url": "https://github.com/wso2/carbon-apimgt/commit/f1c6a6bc3db9ae5a41bd2d2a8a9507d1dda1c3ad", "message": "add code review changes", "committedDate": "2020-06-02T06:13:39Z", "type": "forcePushed"}, {"oid": "41620201c23ce345f60dd414d903c3751b7b9a47", "url": "https://github.com/wso2/carbon-apimgt/commit/41620201c23ce345f60dd414d903c3751b7b9a47", "message": "add other database related scripts", "committedDate": "2020-06-02T07:15:21Z", "type": "forcePushed"}, {"oid": "2b47502a480aecc7a4addd12906ef67fbad00ca8", "url": "https://github.com/wso2/carbon-apimgt/commit/2b47502a480aecc7a4addd12906ef67fbad00ca8", "message": "add other database related scripts", "committedDate": "2020-06-02T07:16:59Z", "type": "forcePushed"}, {"oid": "0da4c7dbb2641fc2f0be3ca32e4ecfe31e2d5a75", "url": "https://github.com/wso2/carbon-apimgt/commit/0da4c7dbb2641fc2f0be3ca32e4ecfe31e2d5a75", "message": "add tenant wise key manager support", "committedDate": "2020-06-02T07:19:25Z", "type": "commit"}, {"oid": "201acb9870a3895ca5f1051ed9c69288c8b40416", "url": "https://github.com/wso2/carbon-apimgt/commit/201acb9870a3895ca5f1051ed9c69288c8b40416", "message": "add jndi.properties.j2", "committedDate": "2020-06-02T07:19:25Z", "type": "commit"}, {"oid": "cee82d313326347be89e07a52a4050c26347ec34", "url": "https://github.com/wso2/carbon-apimgt/commit/cee82d313326347be89e07a52a4050c26347ec34", "message": "add validation on key manager configuration", "committedDate": "2020-06-02T07:19:25Z", "type": "commit"}, {"oid": "6f7c6d7661948f283d71b8278ccb4a4cfe2aa794", "url": "https://github.com/wso2/carbon-apimgt/commit/6f7c6d7661948f283d71b8278ccb4a4cfe2aa794", "message": "add multiple keymanager token validation support", "committedDate": "2020-06-02T07:19:26Z", "type": "commit"}, {"oid": "5a2e52a97e5291d052c7fe5dbfdf52a53d058e02", "url": "https://github.com/wso2/carbon-apimgt/commit/5a2e52a97e5291d052c7fe5dbfdf52a53d058e02", "message": "add api level key manager support", "committedDate": "2020-06-02T07:19:26Z", "type": "commit"}, {"oid": "0372bf741ae724ac4eaaaef2e7767b1d18285946", "url": "https://github.com/wso2/carbon-apimgt/commit/0372bf741ae724ac4eaaaef2e7767b1d18285946", "message": "add tenantwise keyvalidation handler support", "committedDate": "2020-06-02T07:19:26Z", "type": "commit"}, {"oid": "06ffa0801c21d0d3d4cd5d8c3895bd07c070ec9c", "url": "https://github.com/wso2/carbon-apimgt/commit/06ffa0801c21d0d3d4cd5d8c3895bd07c070ec9c", "message": "add application level support to multiple key managers", "committedDate": "2020-06-02T07:19:26Z", "type": "commit"}, {"oid": "3d8c9160c6901d1c63609f29b8223ce7f0778d86", "url": "https://github.com/wso2/carbon-apimgt/commit/3d8c9160c6901d1c63609f29b8223ce7f0778d86", "message": "add jwt validator to support with multiple key manager", "committedDate": "2020-06-02T07:19:26Z", "type": "commit"}, {"oid": "2bf7ed76daff601ac540468e23596749c166a7db", "url": "https://github.com/wso2/carbon-apimgt/commit/2bf7ed76daff601ac540468e23596749c166a7db", "message": "add changes to admin v1 and internal api", "committedDate": "2020-06-02T07:20:07Z", "type": "commit"}, {"oid": "5834a7e005a29c7883b846c1d6a624864685b6c6", "url": "https://github.com/wso2/carbon-apimgt/commit/5834a7e005a29c7883b846c1d6a624864685b6c6", "message": "add key manager configuration settings", "committedDate": "2020-06-02T07:20:32Z", "type": "commit"}, {"oid": "bb8a33e7487405fa54703572a48c90d454118f6d", "url": "https://github.com/wso2/carbon-apimgt/commit/bb8a33e7487405fa54703572a48c90d454118f6d", "message": "add Key Manager Configuration retrival in store", "committedDate": "2020-06-02T07:20:32Z", "type": "commit"}, {"oid": "dd9f36580341fc3978745d7be22f2d995695b9d4", "url": "https://github.com/wso2/carbon-apimgt/commit/dd9f36580341fc3978745d7be22f2d995695b9d4", "message": "add changes according to select api level key manager", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "659ffcc2c19ee06e5ca90497bc0664e0698e508a", "url": "https://github.com/wso2/carbon-apimgt/commit/659ffcc2c19ee06e5ca90497bc0664e0698e508a", "message": "change scope related table according to keymanager", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "c7e602d68d6d1e2f3f8100327e85ac37fbd5c7e5", "url": "https://github.com/wso2/carbon-apimgt/commit/c7e602d68d6d1e2f3f8100327e85ac37fbd5c7e5", "message": "bring configuration as osgi service", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "c5883e2cec30115e10da6d025c5b65cbf1845e16", "url": "https://github.com/wso2/carbon-apimgt/commit/c5883e2cec30115e10da6d025c5b65cbf1845e16", "message": "Add Connector Configuration Abstraction to read json", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "b0374e4f6fb575b123af066e5d2fcc35c684aa3b", "url": "https://github.com/wso2/carbon-apimgt/commit/b0374e4f6fb575b123af066e5d2fcc35c684aa3b", "message": "add code review changes", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "47cbc9fbb1b658ea70f42e5fc7862f4b9b4441a8", "url": "https://github.com/wso2/carbon-apimgt/commit/47cbc9fbb1b658ea70f42e5fc7862f4b9b4441a8", "message": "add code review changes", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "bf7eeed93b9a424c1a0e73d4c4fe2c989b7b7798", "url": "https://github.com/wso2/carbon-apimgt/commit/bf7eeed93b9a424c1a0e73d4c4fe2c989b7b7798", "message": "add consumer key and scope as a seperate claims", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "56536865ec80607cf5d84eefa3d8c85c53315647", "url": "https://github.com/wso2/carbon-apimgt/commit/56536865ec80607cf5d84eefa3d8c85c53315647", "message": "add code review changes", "committedDate": "2020-06-02T07:20:33Z", "type": "commit"}, {"oid": "72335dc682dc1e6185a998725004c62d6eb39c43", "url": "https://github.com/wso2/carbon-apimgt/commit/72335dc682dc1e6185a998725004c62d6eb39c43", "message": "add other database related scripts", "committedDate": "2020-06-02T07:45:47Z", "type": "commit"}, {"oid": "72335dc682dc1e6185a998725004c62d6eb39c43", "url": "https://github.com/wso2/carbon-apimgt/commit/72335dc682dc1e6185a998725004c62d6eb39c43", "message": "add other database related scripts", "committedDate": "2020-06-02T07:45:47Z", "type": "forcePushed"}]}