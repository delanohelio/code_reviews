{"pr_number": 10944, "pr_title": "chatfilter: add filtering by username", "pr_author": "ThatGamerBlue", "pr_createdAt": "2020-03-04T02:10:11Z", "pr_url": "https://github.com/runelite/runelite/pull/10944", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjYzMQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388046631", "body": "Any reason these can't be the same config?", "bodyText": "Any reason these can't be the same config?", "bodyHTML": "<p dir=\"auto\">Any reason these can't be the same config?</p>", "author": "raiyni", "createdAt": "2020-03-05T02:26:12Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterConfig.java", "diffHunk": "@@ -65,11 +65,33 @@ default String filteredRegex()\n \t\treturn \"\";\n \t}\n \n+\t@ConfigItem(\n+\t\tkeyName = \"filteredNames\",\n+\t\tname = \"Filtered Names\",\n+\t\tdescription = \"List of filtered names, seperated by commas\",\n+\t\tposition = 4\n+\t)\n+\tdefault String filteredNames()\n+\t{\n+\t\treturn \"\";\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"filteredNamesRegex\",\n+\t\tname = \"Filtered Names Regex\",\n+\t\tdescription = \"List of filtered regular expressions for usernames, one per line\",\n+\t\tposition = 5\n+\t)\n+\tdefault String filteredNamesRegex()", "originalCommit": "5c78038bb78f8a4b94242def6ea75c66d07a2041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NzQwMQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388047401", "bodyText": "i dont think so, will change", "author": "ThatGamerBlue", "createdAt": "2020-03-05T02:29:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA0NjYzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDM4Mg==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074382", "body": "Move the `CENSOR_WORDS` code to a separate method and use it here and in the `filteredPatterns` loop.", "bodyText": "Move the CENSOR_WORDS code to a separate method and use it here and in the filteredPatterns loop.", "bodyHTML": "<p dir=\"auto\">Move the <code>CENSOR_WORDS</code> code to a separate method and use it here and in the <code>filteredPatterns</code> loop.</p>", "author": "Nightfirecat", "createdAt": "2020-03-05T04:37:04Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java", "diffHunk": "@@ -183,10 +185,22 @@ boolean shouldFilterPlayerMessage(String playerName)\n \t\t\t(config.filterClan() || !clanManager.isClanMember(playerName));\n \t}\n \n-\tString censorMessage(final String message)\n+\tString censorMessage(final String username, final String message)\n \t{\n \t\tString strippedMessage = jagexPrintableCharMatcher.retainFrom(message)\n \t\t\t.replace('\\u00A0', ' ');\n+\t\tif (shouldFilterByName(username))\n+\t\t{\n+\t\t\tswitch (config.filterType())\n+\t\t\t{\n+\t\t\t\tcase CENSOR_WORDS:\n+\t\t\t\t\treturn StringUtils.repeat('*', strippedMessage.length());", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1MDE0NQ==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388350145", "bodyText": "I think this is fine as-is", "author": "Adam-", "createdAt": "2020-03-05T15:02:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDM4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDUxMw==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074513", "body": "This can be `static`\r\n```suggestion\r\n\tprivate static Pattern compilePattern(String pattern)\r\n```", "bodyText": "This can be static\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate Pattern compilePattern(String pattern)\n          \n          \n            \n            \tprivate static Pattern compilePattern(String pattern)", "bodyHTML": "<p dir=\"auto\">This can be <code>static</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">Pattern</span> compilePattern(<span class=\"pl-smi\">String</span> pattern)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">static</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">Pattern</span> compilePattern(<span class=\"pl-smi\">String</span> pattern)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Nightfirecat", "createdAt": "2020-03-05T04:37:48Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/chatfilter/ChatFilterPlugin.java", "diffHunk": "@@ -219,25 +233,33 @@ String censorMessage(final String message)\n \tvoid updateFilteredPatterns()\n \t{\n \t\tfilteredPatterns.clear();\n+\t\tfilteredNamePatterns.clear();\n \n \t\tText.fromCSV(config.filteredWords()).stream()\n \t\t\t.map(s -> Pattern.compile(Pattern.quote(s), Pattern.CASE_INSENSITIVE))\n \t\t\t.forEach(filteredPatterns::add);\n \n \t\tNEWLINE_SPLITTER.splitToList(config.filteredRegex()).stream()\n-\t\t\t.map(s ->\n-\t\t\t{\n-\t\t\t\ttry\n-\t\t\t\t{\n-\t\t\t\t\treturn Pattern.compile(s, Pattern.CASE_INSENSITIVE);\n-\t\t\t\t}\n-\t\t\t\tcatch (PatternSyntaxException ex)\n-\t\t\t\t{\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t})\n+\t\t\t.map(this::compilePattern)\n \t\t\t.filter(Objects::nonNull)\n \t\t\t.forEach(filteredPatterns::add);\n+\n+\t\tNEWLINE_SPLITTER.splitToList(config.filteredNames()).stream()\n+\t\t\t.map(this::compilePattern)\n+\t\t\t.filter(Objects::nonNull)\n+\t\t\t.forEach(filteredNamePatterns::add);\n+\t}\n+\n+\tprivate Pattern compilePattern(String pattern)", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA3NDc4Ng==", "url": "https://github.com/runelite/runelite/pull/10944#discussion_r388074786", "body": "Re-use the censor message from plugin. (make it package-private and `@VisibleForTesting`)", "bodyText": "Re-use the censor message from plugin. (make it package-private and @VisibleForTesting)", "bodyHTML": "<p dir=\"auto\">Re-use the censor message from plugin. (make it package-private and <code>@VisibleForTesting</code>)</p>", "author": "Nightfirecat", "createdAt": "2020-03-05T04:39:25Z", "path": "runelite-client/src/test/java/net/runelite/client/plugins/chatfilter/ChatFilterPluginTest.java", "diffHunk": "@@ -64,6 +69,8 @@\n \t@Inject\n \tprivate ChatFilterPlugin chatFilterPlugin;\n \n+\tprivate static final String CENSOR_MESSAGE_STRING = \"Hey, everyone, I just tried to say something very silly!\";", "originalCommit": "b43fdd5209f4a45370598eac8db96b43a2d3f7ee", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "url": "https://github.com/runelite/runelite/commit/c4ae4e639fdc02e5e9bf59f35005cf8c3c70cd39", "message": "rlapi: MessageNode extends CacheableNode (but Node is close enough)", "committedDate": "2020-03-05T15:28:50Z", "type": "commit"}, {"oid": "6cc010af1ffff604759bf1d9385a63baf45f095e", "url": "https://github.com/runelite/runelite/commit/6cc010af1ffff604759bf1d9385a63baf45f095e", "message": "chatfilter: add filtering by username", "committedDate": "2020-03-05T16:58:52Z", "type": "commit"}]}