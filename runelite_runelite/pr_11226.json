{"pr_number": 11226, "pr_title": "Agility: Course laps per hour display", "pr_author": "petter", "pr_createdAt": "2020-04-08T13:46:32Z", "pr_url": "https://github.com/runelite/runelite/pull/11226", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw==", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406507737", "body": "You can simplify this to something like:\r\n```java\r\n\t\tInstant now = Instant.now();\r\n\r\n\t\tif (lastLapCompleted != null)\r\n\t\t{\r\n\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\r\n\r\n\t\t\tif (!timeSinceLastLap.isNegative())\r\n\t\t\t{\r\n\t\t\t\tlastLapTimes.add(timeSinceLastLap);\r\n\r\n\t\t\t\tDuration sum = Duration.ofSeconds(0);\r\n\t\t\t\tfor (Duration lapTime : lastLapTimes)\r\n\t\t\t\t{\r\n\t\t\t\t\tsum = sum.plus(lapTime);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\r\n\t\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlastLapCompleted = now;\r\n```", "bodyText": "You can simplify this to something like:\n\t\tInstant now = Instant.now();\n\n\t\tif (lastLapCompleted != null)\n\t\t{\n\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n\n\t\t\tif (!timeSinceLastLap.isNegative())\n\t\t\t{\n\t\t\t\tlastLapTimes.add(timeSinceLastLap);\n\n\t\t\t\tDuration sum = Duration.ofSeconds(0);\n\t\t\t\tfor (Duration lapTime : lastLapTimes)\n\t\t\t\t{\n\t\t\t\t\tsum = sum.plus(lapTime);\n\t\t\t\t}\n\n\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n\t\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\n\t\t\t}\n\t\t}\n\n\t\tlastLapCompleted = now;", "bodyHTML": "<p dir=\"auto\">You can simplify this to something like:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\tInstant now = Instant.now();\n\n\t\tif (lastLapCompleted != null)\n\t\t{\n\t\t\tDuration timeSinceLastLap = Duration.between(lastLapCompleted, now);\n\n\t\t\tif (!timeSinceLastLap.isNegative())\n\t\t\t{\n\t\t\t\tlastLapTimes.add(timeSinceLastLap);\n\n\t\t\t\tDuration sum = Duration.ofSeconds(0);\n\t\t\t\tfor (Duration lapTime : lastLapTimes)\n\t\t\t\t{\n\t\t\t\t\tsum = sum.plus(lapTime);\n\t\t\t\t}\n\n\t\t\t\tDuration averageLapTime = sum.dividedBy(lastLapTimes.size());\n\t\t\t\tlapsPerHour = Duration.ofHours(1).toMillis() / averageLapTime.toMillis();\n\t\t\t}\n\t\t}\n\n\t\tlastLapCompleted = now;\"><pre>\t\t<span class=\"pl-smi\">Instant</span> now <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Instant</span><span class=\"pl-k\">.</span>now();\n\n\t\t<span class=\"pl-k\">if</span> (lastLapCompleted <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>)\n\t\t{\n\t\t\t<span class=\"pl-smi\">Duration</span> timeSinceLastLap <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Duration</span><span class=\"pl-k\">.</span>between(lastLapCompleted, now);\n\n\t\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>timeSinceLastLap<span class=\"pl-k\">.</span>isNegative())\n\t\t\t{\n\t\t\t\tlastLapTimes<span class=\"pl-k\">.</span>add(timeSinceLastLap);\n\n\t\t\t\t<span class=\"pl-smi\">Duration</span> sum <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Duration</span><span class=\"pl-k\">.</span>ofSeconds(<span class=\"pl-c1\">0</span>);\n\t\t\t\t<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Duration</span> lapTime <span class=\"pl-k\">:</span> lastLapTimes)\n\t\t\t\t{\n\t\t\t\t\tsum <span class=\"pl-k\">=</span> sum<span class=\"pl-k\">.</span>plus(lapTime);\n\t\t\t\t}\n\n\t\t\t\t<span class=\"pl-smi\">Duration</span> averageLapTime <span class=\"pl-k\">=</span> sum<span class=\"pl-k\">.</span>dividedBy(lastLapTimes<span class=\"pl-k\">.</span>size());\n\t\t\t\tlapsPerHour <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Duration</span><span class=\"pl-k\">.</span>ofHours(<span class=\"pl-c1\">1</span>)<span class=\"pl-k\">.</span>toMillis() <span class=\"pl-k\">/</span> averageLapTime<span class=\"pl-k\">.</span>toMillis();\n\t\t\t}\n\t\t}\n\n\t\tlastLapCompleted <span class=\"pl-k\">=</span> now;</pre></div>", "author": "Adam-", "createdAt": "2020-04-09T22:15:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/agility/AgilitySession.java", "diffHunk": "@@ -64,6 +70,37 @@ void incrementLapCount(Client client, XpTrackerService xpTrackerService)\n \t\tlapsTillGoal = goalRemainingXp > 0 ? (int) Math.ceil(goalRemainingXp / courseTotalExp) : 0;\n \t}\n \n+\tvoid calculateLapsPerHour()\n+\t{\n+\t\tInstant now = Instant.now();", "originalCommit": "7fe6bd20189873283cdf6710f7069a6b3af7c1a6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUyNTYzOQ==", "url": "https://github.com/runelite/runelite/pull/11226#discussion_r406525639", "bodyText": "That is better, I have fixed this", "author": "petter", "createdAt": "2020-04-09T23:11:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwNzczNw=="}], "type": "inlineReview"}, {"oid": "5f6b34003ca6dc5f3eaa37a50823b162f00a591e", "url": "https://github.com/runelite/runelite/commit/5f6b34003ca6dc5f3eaa37a50823b162f00a591e", "message": "agility plugin: add laps per hour to lap counter overlay\n\nCo-authored-by: Adam <Adam@sigterm.info>", "committedDate": "2020-04-22T17:03:06Z", "type": "commit"}]}