{"pr_number": 10699, "pr_title": "loottracker - Add ignore events config option", "pr_author": "TheStonedTurtle", "pr_createdAt": "2020-01-31T02:04:36Z", "pr_url": "https://github.com/runelite/runelite/pull/10699", "timeline": [{"oid": "294797bc921d2211a59a0a5472ae32a80aa768c0", "url": "https://github.com/runelite/runelite/commit/294797bc921d2211a59a0a5472ae32a80aa768c0", "message": "loottracker - Reword syncPanel config description", "committedDate": "2020-01-31T11:13:17Z", "type": "forcePushed"}, {"oid": "9850e595c7722d254c01795f8b1924c37fb3f046", "url": "https://github.com/runelite/runelite/commit/9850e595c7722d254c01795f8b1924c37fb3f046", "message": "loottracker - add ability to ignore loot events\n\nfixes #7482", "committedDate": "2020-03-31T16:13:37Z", "type": "forcePushed"}, {"oid": "880a3c8ae68d82b43f4f0e9a56568ea2dcbe0803", "url": "https://github.com/runelite/runelite/commit/880a3c8ae68d82b43f4f0e9a56568ea2dcbe0803", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-03-31T16:32:14Z", "type": "forcePushed"}, {"oid": "0a016db7812ae04ad7de4d57d5bb3a892693e586", "url": "https://github.com/runelite/runelite/commit/0a016db7812ae04ad7de4d57d5bb3a892693e586", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-03-31T17:19:26Z", "type": "forcePushed"}, {"oid": "e5d1910f67681adbd28d96084d066a394ca94d09", "url": "https://github.com/runelite/runelite/commit/e5d1910f67681adbd28d96084d066a394ca94d09", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-03-31T17:22:54Z", "type": "forcePushed"}, {"oid": "e5d1910f67681adbd28d96084d066a394ca94d09", "url": "https://github.com/runelite/runelite/commit/e5d1910f67681adbd28d96084d066a394ca94d09", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-03-31T17:22:54Z", "type": "forcePushed"}, {"oid": "78ca018f24745978478afbbd42b2e8ea8e946db6", "url": "https://github.com/runelite/runelite/commit/78ca018f24745978478afbbd42b2e8ea8e946db6", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-03-31T18:17:08Z", "type": "forcePushed"}, {"oid": "20ca4933c66ff56a25bf07e3688ba2c05197aa6b", "url": "https://github.com/runelite/runelite/commit/20ca4933c66ff56a25bf07e3688ba2c05197aa6b", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-04-05T06:05:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1NjcwNw==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r406356707", "body": "shouldn't this be hidden?", "bodyText": "shouldn't this be hidden?", "bodyHTML": "<p dir=\"auto\">shouldn't this be hidden?</p>", "author": "Adam-", "createdAt": "2020-04-09T17:19:19Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java", "diffHunk": "@@ -90,4 +90,21 @@ default boolean syncPanel()\n \t{\n \t\treturn true;\n \t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"ignoredEvents\",\n+\t\tname = \"Ignored groups\",\n+\t\tdescription = \"Configures which loot groups should be excluded from the panel UI\"\n+\t)\n+\tdefault String getIgnoredEvents()", "originalCommit": "20ca4933c66ff56a25bf07e3688ba2c05197aa6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwMTAzOQ==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r406501039", "bodyText": "I didn't hide this as the config option for hiding items is also not hidden.\nI'm pretty sure having it hidden could cause issues with the limiting that would prevent someone from re-including an event.", "author": "TheStonedTurtle", "createdAt": "2020-04-09T21:58:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1NjcwNw=="}], "type": "inlineReview", "revised_code": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\nindex a8917ebfe..5ab78b159 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\n", "chunk": "@@ -90,21 +90,4 @@ public interface LootTrackerConfig extends Config\n \t{\n \t\treturn true;\n \t}\n-\n-\t@ConfigItem(\n-\t\tkeyName = \"ignoredEvents\",\n-\t\tname = \"Ignored groups\",\n-\t\tdescription = \"Configures which loot groups should be excluded from the panel UI\"\n-\t)\n-\tdefault String getIgnoredEvents()\n-\t{\n-\t\treturn \"\";\n-\t}\n-\n-\t@ConfigItem(\n-\t\tkeyName = \"ignoredEvents\",\n-\t\tname = \"\",\n-\t\tdescription = \"\"\n-\t)\n-\tvoid setIgnoredEvents(String key);\n }\n\\ No newline at end of file\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\nindex 5ab78b159..a8917ebfe 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerConfig.java\n", "chunk": "@@ -90,4 +90,21 @@ public interface LootTrackerConfig extends Config\n \t{\n \t\treturn true;\n \t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"ignoredEvents\",\n+\t\tname = \"Ignored groups\",\n+\t\tdescription = \"Configures which loot groups should be excluded from the panel UI\"\n+\t)\n+\tdefault String getIgnoredEvents()\n+\t{\n+\t\treturn \"\";\n+\t}\n+\n+\t@ConfigItem(\n+\t\tkeyName = \"ignoredEvents\",\n+\t\tname = \"\",\n+\t\tdescription = \"\"\n+\t)\n+\tvoid setIgnoredEvents(String key);\n }\n\\ No newline at end of file\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1NzcwNw==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r406357707", "body": "If the config item for this is not actually going to be hidden, this will cause it to reorder itself randomly which seems not great", "bodyText": "If the config item for this is not actually going to be hidden, this will cause it to reorder itself randomly which seems not great", "bodyHTML": "<p dir=\"auto\">If the config item for this is not actually going to be hidden, this will cause it to reorder itself randomly which seems not great</p>", "author": "Adam-", "createdAt": "2020-04-09T17:21:10Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java", "diffHunk": "@@ -734,6 +737,28 @@ boolean isIgnored(String name)\n \t\treturn ignoredItems.contains(name);\n \t}\n \n+\tvoid toggleEvent(String name, boolean ignore)\n+\t{\n+\t\tfinal Set<String> ignoredSet = new HashSet<>(ignoredEvents);\n+\n+\t\tif (ignore)\n+\t\t{\n+\t\t\tignoredSet.add(name);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tignoredSet.remove(name);\n+\t\t}\n+\n+\t\tconfig.setIgnoredEvents(Text.toCSV(ignoredSet));", "originalCommit": "20ca4933c66ff56a25bf07e3688ba2c05197aa6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUwMTc3NA==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r406501774", "bodyText": "How would I prevent this re-ordering itself?\nThis method is a copy/paste of the existing toggleItem method which is also not hidden in the config panel, so it must have the same issue.", "author": "TheStonedTurtle", "createdAt": "2020-04-09T21:59:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1NzcwNw=="}], "type": "inlineReview", "revised_code": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\nindex e3389cb09..e10427eec 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n", "chunk": "@@ -737,28 +750,6 @@ public class LootTrackerPlugin extends Plugin\n \t\treturn ignoredItems.contains(name);\n \t}\n \n-\tvoid toggleEvent(String name, boolean ignore)\n-\t{\n-\t\tfinal Set<String> ignoredSet = new HashSet<>(ignoredEvents);\n-\n-\t\tif (ignore)\n-\t\t{\n-\t\t\tignoredSet.add(name);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tignoredSet.remove(name);\n-\t\t}\n-\n-\t\tconfig.setIgnoredEvents(Text.toCSV(ignoredSet));\n-\t\t// the config changed will update the panel\n-\t}\n-\n-\tboolean isEventIgnored(String name)\n-\t{\n-\t\treturn ignoredEvents.contains(name);\n-\t}\n-\n \tprivate LootTrackerItem buildLootTrackerItem(int itemId, int quantity)\n \t{\n \t\tfinal ItemComposition itemComposition = itemManager.getItemComposition(itemId);\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\nindex e10427eec..f6f473e09 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n", "chunk": "@@ -750,6 +754,28 @@ public class LootTrackerPlugin extends Plugin\n \t\treturn ignoredItems.contains(name);\n \t}\n \n+\tvoid toggleEvent(String name, boolean ignore)\n+\t{\n+\t\tfinal Set<String> ignoredSet = new LinkedHashSet<>(ignoredEvents);\n+\n+\t\tif (ignore)\n+\t\t{\n+\t\t\tignoredSet.add(name);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tignoredSet.remove(name);\n+\t\t}\n+\n+\t\tconfig.setIgnoredEvents(Text.toCSV(ignoredSet));\n+\t\t// the config changed will update the panel\n+\t}\n+\n+\tboolean isEventIgnored(String name)\n+\t{\n+\t\treturn ignoredEvents.contains(name);\n+\t}\n+\n \tprivate LootTrackerItem buildLootTrackerItem(int itemId, int quantity)\n \t{\n \t\tfinal ItemComposition itemComposition = itemManager.getItemComposition(itemId);\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE1MQ==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r406359151", "body": "You could probably just make this reverse() + limit + forEach(buildBox)", "bodyText": "You could probably just make this reverse() + limit + forEach(buildBox)", "bodyHTML": "<p dir=\"auto\">You could probably just make this reverse() + limit + forEach(buildBox)</p>", "author": "Adam-", "createdAt": "2020-04-09T17:23:38Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java", "diffHunk": "@@ -450,14 +456,19 @@ private void rebuild()\n \t\t}\n \t\telse\n \t\t{\n+\t\t\t// Filter here instead of when building box for more accurate limiting\n+\t\t\tfinal List<LootTrackerRecord> session = sessionRecords.stream()\n+\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n+\t\t\t\t.collect(Collectors.toList());", "originalCommit": "20ca4933c66ff56a25bf07e3688ba2c05197aa6b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "179bcfaffb5c59131d868a1e56d34fbaa75d223e", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 0acf27c19..4d8b0a1a7 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -456,20 +456,11 @@ class LootTrackerPanel extends PluginPanel\n \t\t}\n \t\telse\n \t\t{\n-\t\t\t// Filter here instead of when building box for more accurate limiting\n-\t\t\tfinal List<LootTrackerRecord> session = sessionRecords.stream()\n+\t\t\tsessionRecords.stream()\n+\t\t\t\t.sorted(Collections.reverseOrder())\n \t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n-\t\t\t\t.collect(Collectors.toList());\n-\n-\t\t\tint start = 0;\n-\t\t\tif (session.size() > MAX_LOOT_BOXES)\n-\t\t\t{\n-\t\t\t\tstart = session.size() - MAX_LOOT_BOXES;\n-\t\t\t}\n-\t\t\tfor (int i = start; i < session.size(); i++)\n-\t\t\t{\n-\t\t\t\tbuildBox(session.get(i));\n-\t\t\t}\n+\t\t\t\t.limit(MAX_LOOT_BOXES)\n+\t\t\t\t.forEach(this::buildBox);\n \t\t}\n \n \t\tboxes.forEach(LootTrackerBox::rebuild);\n", "next_change": {"commit": "9546339ea176e82e1e808ceffac92720e2f14c59", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 4d8b0a1a7..7fb29230f 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -458,6 +458,8 @@ class LootTrackerPanel extends PluginPanel\n \t\t{\n \t\t\tsessionRecords.stream()\n \t\t\t\t.sorted(Collections.reverseOrder())\n+\t\t\t\t// Visibility of hidden events uses the same flag as hidden items\n+\t\t\t\t// If they are not hiding ignored items we should include ignored events\n \t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n \t\t\t\t.limit(MAX_LOOT_BOXES)\n \t\t\t\t.forEach(this::buildBox);\n", "next_change": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 7fb29230f..69bd47032 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -456,13 +450,15 @@ class LootTrackerPanel extends PluginPanel\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tsessionRecords.stream()\n-\t\t\t\t.sorted(Collections.reverseOrder())\n-\t\t\t\t// Visibility of hidden events uses the same flag as hidden items\n-\t\t\t\t// If they are not hiding ignored items we should include ignored events\n-\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n-\t\t\t\t.limit(MAX_LOOT_BOXES)\n-\t\t\t\t.forEach(this::buildBox);\n+\t\t\tint start = 0;\n+\t\t\tif (sessionRecords.size() > MAX_LOOT_BOXES)\n+\t\t\t{\n+\t\t\t\tstart = sessionRecords.size() - MAX_LOOT_BOXES;\n+\t\t\t}\n+\t\t\tfor (int i = start; i < sessionRecords.size(); i++)\n+\t\t\t{\n+\t\t\t\tbuildBox(sessionRecords.get(i));\n+\t\t\t}\n \t\t}\n \n \t\tboxes.forEach(LootTrackerBox::rebuild);\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 69bd47032..955023042 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -450,15 +456,12 @@ class LootTrackerPanel extends PluginPanel\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tint start = 0;\n-\t\t\tif (sessionRecords.size() > MAX_LOOT_BOXES)\n-\t\t\t{\n-\t\t\t\tstart = sessionRecords.size() - MAX_LOOT_BOXES;\n-\t\t\t}\n-\t\t\tfor (int i = start; i < sessionRecords.size(); i++)\n-\t\t\t{\n-\t\t\t\tbuildBox(sessionRecords.get(i));\n-\t\t\t}\n+\t\t\tsessionRecords.stream()\n+\t\t\t\t.sorted(Collections.reverseOrder())\n+\t\t\t\t// filter records prior to limiting so that it is limited to the correct amount\n+\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n+\t\t\t\t.limit(MAX_LOOT_BOXES)\n+\t\t\t\t.forEach(this::buildBox);\n \t\t}\n \n \t\tboxes.forEach(LootTrackerBox::rebuild);\n", "next_change": null}]}}]}}]}}]}}, {"oid": "179bcfaffb5c59131d868a1e56d34fbaa75d223e", "url": "https://github.com/runelite/runelite/commit/179bcfaffb5c59131d868a1e56d34fbaa75d223e", "message": "loottracker - add ability to ignore loot events", "committedDate": "2020-04-09T22:09:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5NDA5MA==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r413094090", "body": "I would maybe add a comment indicating why this is checking ignored (since buildBox also checks which looks unnecessary) as it is subtle.", "bodyText": "I would maybe add a comment indicating why this is checking ignored (since buildBox also checks which looks unnecessary) as it is subtle.", "bodyHTML": "<p dir=\"auto\">I would maybe add a comment indicating why this is checking ignored (since buildBox also checks which looks unnecessary) as it is subtle.</p>", "author": "Adam-", "createdAt": "2020-04-22T15:41:11Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java", "diffHunk": "@@ -450,15 +456,11 @@ private void rebuild()\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tint start = 0;\n-\t\t\tif (sessionRecords.size() > MAX_LOOT_BOXES)\n-\t\t\t{\n-\t\t\t\tstart = sessionRecords.size() - MAX_LOOT_BOXES;\n-\t\t\t}\n-\t\t\tfor (int i = start; i < sessionRecords.size(); i++)\n-\t\t\t{\n-\t\t\t\tbuildBox(sessionRecords.get(i));\n-\t\t\t}\n+\t\t\tsessionRecords.stream()\n+\t\t\t\t.sorted(Collections.reverseOrder())\n+\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))", "originalCommit": "179bcfaffb5c59131d868a1e56d34fbaa75d223e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9546339ea176e82e1e808ceffac92720e2f14c59", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 4d8b0a1a7..7fb29230f 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -458,6 +458,8 @@ class LootTrackerPanel extends PluginPanel\n \t\t{\n \t\t\tsessionRecords.stream()\n \t\t\t\t.sorted(Collections.reverseOrder())\n+\t\t\t\t// Visibility of hidden events uses the same flag as hidden items\n+\t\t\t\t// If they are not hiding ignored items we should include ignored events\n \t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n \t\t\t\t.limit(MAX_LOOT_BOXES)\n \t\t\t\t.forEach(this::buildBox);\n", "next_change": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 7fb29230f..69bd47032 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -456,13 +450,15 @@ class LootTrackerPanel extends PluginPanel\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tsessionRecords.stream()\n-\t\t\t\t.sorted(Collections.reverseOrder())\n-\t\t\t\t// Visibility of hidden events uses the same flag as hidden items\n-\t\t\t\t// If they are not hiding ignored items we should include ignored events\n-\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n-\t\t\t\t.limit(MAX_LOOT_BOXES)\n-\t\t\t\t.forEach(this::buildBox);\n+\t\t\tint start = 0;\n+\t\t\tif (sessionRecords.size() > MAX_LOOT_BOXES)\n+\t\t\t{\n+\t\t\t\tstart = sessionRecords.size() - MAX_LOOT_BOXES;\n+\t\t\t}\n+\t\t\tfor (int i = start; i < sessionRecords.size(); i++)\n+\t\t\t{\n+\t\t\t\tbuildBox(sessionRecords.get(i));\n+\t\t\t}\n \t\t}\n \n \t\tboxes.forEach(LootTrackerBox::rebuild);\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 69bd47032..955023042 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -450,15 +456,12 @@ class LootTrackerPanel extends PluginPanel\n \t\t}\n \t\telse\n \t\t{\n-\t\t\tint start = 0;\n-\t\t\tif (sessionRecords.size() > MAX_LOOT_BOXES)\n-\t\t\t{\n-\t\t\t\tstart = sessionRecords.size() - MAX_LOOT_BOXES;\n-\t\t\t}\n-\t\t\tfor (int i = start; i < sessionRecords.size(); i++)\n-\t\t\t{\n-\t\t\t\tbuildBox(sessionRecords.get(i));\n-\t\t\t}\n+\t\t\tsessionRecords.stream()\n+\t\t\t\t.sorted(Collections.reverseOrder())\n+\t\t\t\t// filter records prior to limiting so that it is limited to the correct amount\n+\t\t\t\t.filter(r -> !hideIgnoredItems || !plugin.isEventIgnored(r.getTitle()))\n+\t\t\t\t.limit(MAX_LOOT_BOXES)\n+\t\t\t\t.forEach(this::buildBox);\n \t\t}\n \n \t\tboxes.forEach(LootTrackerBox::rebuild);\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5NzE1Mw==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r413097153", "body": "Just call `isEventIgnored` once and store the result", "bodyText": "Just call isEventIgnored once and store the result", "bodyHTML": "<p dir=\"auto\">Just call <code>isEventIgnored</code> once and store the result</p>", "author": "Adam-", "createdAt": "2020-04-22T15:44:54Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java", "diffHunk": "@@ -500,13 +507,17 @@ private LootTrackerBox buildBox(LootTrackerRecord record)\n \n \t\t// Create box\n \t\tfinal LootTrackerBox box = new LootTrackerBox(itemManager, record.getTitle(), record.getType(), record.getSubTitle(),\n-\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem);\n+\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem, plugin::toggleEvent, plugin.isEventIgnored(record.getTitle()));", "originalCommit": "179bcfaffb5c59131d868a1e56d34fbaa75d223e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE4OTMxNg==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r413189316", "bodyText": "I don't understand what you are asking for me to change exactly.\nI did notice LootTrackerBox could just use the ignoredEvent flag locally instead of storing the result, did you mean this?", "author": "TheStonedTurtle", "createdAt": "2020-04-22T17:46:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5NzE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE5MTM0Mw==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r413191343", "bodyText": "isEventIgnored is called on L485 and again here on L510. You can just call it once and store the result in a variable.", "author": "Adam-", "createdAt": "2020-04-22T17:49:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5NzE1Mw=="}], "type": "inlineReview", "revised_code": {"commit": "9546339ea176e82e1e808ceffac92720e2f14c59", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 4d8b0a1a7..7fb29230f 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -507,7 +510,7 @@ class LootTrackerPanel extends PluginPanel\n \n \t\t// Create box\n \t\tfinal LootTrackerBox box = new LootTrackerBox(itemManager, record.getTitle(), record.getType(), record.getSubTitle(),\n-\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem, plugin::toggleEvent, plugin.isEventIgnored(record.getTitle()));\n+\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem, plugin::toggleEvent, isIgnored);\n \t\tbox.addKill(record);\n \n \t\t// Use the existing popup menu or create a new one\n", "next_change": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 7fb29230f..69bd47032 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -510,17 +500,13 @@ class LootTrackerPanel extends PluginPanel\n \n \t\t// Create box\n \t\tfinal LootTrackerBox box = new LootTrackerBox(itemManager, record.getTitle(), record.getType(), record.getSubTitle(),\n-\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem, plugin::toggleEvent, isIgnored);\n+\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem);\n \t\tbox.addKill(record);\n \n-\t\t// Use the existing popup menu or create a new one\n-\t\tJPopupMenu popupMenu = box.getComponentPopupMenu();\n-\t\tif (popupMenu == null)\n-\t\t{\n-\t\t\tpopupMenu = new JPopupMenu();\n-\t\t\tpopupMenu.setBorder(new EmptyBorder(5, 5, 5, 5));\n-\t\t\tbox.setComponentPopupMenu(popupMenu);\n-\t\t}\n+\t\t// Create popup menu\n+\t\tfinal JPopupMenu popupMenu = new JPopupMenu();\n+\t\tpopupMenu.setBorder(new EmptyBorder(5, 5, 5, 5));\n+\t\tbox.setComponentPopupMenu(popupMenu);\n \n \t\t// Create collapse event\n \t\tbox.addMouseListener(new MouseAdapter()\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\nindex 69bd47032..955023042 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPanel.java\n", "chunk": "@@ -500,13 +509,17 @@ class LootTrackerPanel extends PluginPanel\n \n \t\t// Create box\n \t\tfinal LootTrackerBox box = new LootTrackerBox(itemManager, record.getTitle(), record.getType(), record.getSubTitle(),\n-\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem);\n+\t\t\thideIgnoredItems, config.priceType(), config.showPriceType(), plugin::toggleItem, plugin::toggleEvent, isIgnored);\n \t\tbox.addKill(record);\n \n-\t\t// Create popup menu\n-\t\tfinal JPopupMenu popupMenu = new JPopupMenu();\n-\t\tpopupMenu.setBorder(new EmptyBorder(5, 5, 5, 5));\n-\t\tbox.setComponentPopupMenu(popupMenu);\n+\t\t// Use the existing popup menu or create a new one\n+\t\tJPopupMenu popupMenu = box.getComponentPopupMenu();\n+\t\tif (popupMenu == null)\n+\t\t{\n+\t\t\tpopupMenu = new JPopupMenu();\n+\t\t\tpopupMenu.setBorder(new EmptyBorder(5, 5, 5, 5));\n+\t\t\tbox.setComponentPopupMenu(popupMenu);\n+\t\t}\n \n \t\t// Create collapse event\n \t\tbox.addMouseListener(new MouseAdapter()\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA5ODAwNA==", "url": "https://github.com/runelite/runelite/pull/10699#discussion_r413098004", "body": "additionally fix `toggleItem` to not randomly reorder things too", "bodyText": "additionally fix toggleItem to not randomly reorder things too", "bodyHTML": "<p dir=\"auto\">additionally fix <code>toggleItem</code> to not randomly reorder things too</p>", "author": "Adam-", "createdAt": "2020-04-22T15:45:56Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java", "diffHunk": "@@ -734,6 +738,28 @@ boolean isIgnored(String name)\n \t\treturn ignoredItems.contains(name);\n \t}\n \n+\tvoid toggleEvent(String name, boolean ignore)\n+\t{\n+\t\tfinal Set<String> ignoredSet = new LinkedHashSet<>(ignoredEvents);", "originalCommit": "179bcfaffb5c59131d868a1e56d34fbaa75d223e", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\nindex 00408f32b..e10427eec 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n", "chunk": "@@ -738,28 +750,6 @@ public class LootTrackerPlugin extends Plugin\n \t\treturn ignoredItems.contains(name);\n \t}\n \n-\tvoid toggleEvent(String name, boolean ignore)\n-\t{\n-\t\tfinal Set<String> ignoredSet = new LinkedHashSet<>(ignoredEvents);\n-\n-\t\tif (ignore)\n-\t\t{\n-\t\t\tignoredSet.add(name);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tignoredSet.remove(name);\n-\t\t}\n-\n-\t\tconfig.setIgnoredEvents(Text.toCSV(ignoredSet));\n-\t\t// the config changed will update the panel\n-\t}\n-\n-\tboolean isEventIgnored(String name)\n-\t{\n-\t\treturn ignoredEvents.contains(name);\n-\t}\n-\n \tprivate LootTrackerItem buildLootTrackerItem(int itemId, int quantity)\n \t{\n \t\tfinal ItemComposition itemComposition = itemManager.getItemComposition(itemId);\n", "next_change": {"commit": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "changed_code": [{"header": "diff --git a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\nindex e10427eec..f6f473e09 100644\n--- a/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n+++ b/runelite-client/src/main/java/net/runelite/client/plugins/loottracker/LootTrackerPlugin.java\n", "chunk": "@@ -750,6 +754,28 @@ public class LootTrackerPlugin extends Plugin\n \t\treturn ignoredItems.contains(name);\n \t}\n \n+\tvoid toggleEvent(String name, boolean ignore)\n+\t{\n+\t\tfinal Set<String> ignoredSet = new LinkedHashSet<>(ignoredEvents);\n+\n+\t\tif (ignore)\n+\t\t{\n+\t\t\tignoredSet.add(name);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tignoredSet.remove(name);\n+\t\t}\n+\n+\t\tconfig.setIgnoredEvents(Text.toCSV(ignoredSet));\n+\t\t// the config changed will update the panel\n+\t}\n+\n+\tboolean isEventIgnored(String name)\n+\t{\n+\t\treturn ignoredEvents.contains(name);\n+\t}\n+\n \tprivate LootTrackerItem buildLootTrackerItem(int itemId, int quantity)\n \t{\n \t\tfinal ItemComposition itemComposition = itemManager.getItemComposition(itemId);\n", "next_change": null}]}}]}}, {"oid": "9546339ea176e82e1e808ceffac92720e2f14c59", "url": "https://github.com/runelite/runelite/commit/9546339ea176e82e1e808ceffac92720e2f14c59", "message": "loot tracker - Fix ignoredItems config value ordering", "committedDate": "2020-04-22T17:54:32Z", "type": "forcePushed"}, {"oid": "950fcc07dd6efe3f735fed0be7a8afd9d4c6c867", "url": "https://github.com/runelite/runelite/commit/950fcc07dd6efe3f735fed0be7a8afd9d4c6c867", "message": "loot tracker - Fix ignoredItems config value ordering", "committedDate": "2020-04-22T17:57:02Z", "type": "forcePushed"}, {"oid": "9d978153b9b7f6ebf7e2bb0d48333f001ab4f967", "url": "https://github.com/runelite/runelite/commit/9d978153b9b7f6ebf7e2bb0d48333f001ab4f967", "message": "loot tracker - Fix ignoredItems config value ordering", "committedDate": "2020-04-22T18:01:42Z", "type": "forcePushed"}, {"oid": "3bef5109a7e562aa4ce47aa498e1918d3bf61836", "url": "https://github.com/runelite/runelite/commit/3bef5109a7e562aa4ce47aa498e1918d3bf61836", "message": "loottracker - Reword syncPanel config description", "committedDate": "2020-05-02T15:38:16Z", "type": "commit"}, {"oid": "a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "url": "https://github.com/runelite/runelite/commit/a8cb8dea30c1135de0414e0bf5aae2d30bf20c7d", "message": "loot tracker - add ability to ignore loot events", "committedDate": "2020-05-02T15:53:40Z", "type": "commit"}, {"oid": "f59d5b7cd2918104e5be64e6bd12da8f2a006f87", "url": "https://github.com/runelite/runelite/commit/f59d5b7cd2918104e5be64e6bd12da8f2a006f87", "message": "loot tracker - Fix ignoredItems config value ordering", "committedDate": "2020-05-02T15:53:41Z", "type": "commit"}, {"oid": "f59d5b7cd2918104e5be64e6bd12da8f2a006f87", "url": "https://github.com/runelite/runelite/commit/f59d5b7cd2918104e5be64e6bd12da8f2a006f87", "message": "loot tracker - Fix ignoredItems config value ordering", "committedDate": "2020-05-02T15:53:41Z", "type": "forcePushed"}]}