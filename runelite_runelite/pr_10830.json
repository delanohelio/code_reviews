{"pr_number": 10830, "pr_title": "config: fix entering values directly into options with units not working", "pr_author": "Hydrox6", "pr_createdAt": "2020-02-18T22:53:52Z", "pr_url": "https://github.com/runelite/runelite/pull/10830", "timeline": [{"oid": "416db3695cbbfaf953e01915b1e90dde95f103af", "url": "https://github.com/runelite/runelite/commit/416db3695cbbfaf953e01915b1e90dde95f103af", "message": "config: fix entering values directly into options with units not working", "committedDate": "2020-02-18T23:10:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MDkzNQ==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382970935", "body": "This doesn't throw any exceptions.\r\n```suggestion\r\n\tpublic String valueToString(final Object value)\r\n```", "bodyText": "This doesn't throw any exceptions.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic String valueToString(final Object value) throws ParseException\n          \n          \n            \n            \tpublic String valueToString(final Object value)", "bodyHTML": "<p dir=\"auto\">This doesn't throw any exceptions.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> valueToString(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Object</span> value)<span class=\"x x-first\"> throws </span><span class=\"pl-smi x x-last\">ParseException</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> valueToString(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Object</span> value)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Nightfirecat", "createdAt": "2020-02-23T07:11:07Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value) throws ParseException", "originalCommit": "416db3695cbbfaf953e01915b1e90dde95f103af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTEwMQ==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971101", "body": "Newline below this\r\n```suggestion\r\n\t\tfinal String trimmedText;\r\n\r\n```", "bodyText": "Newline below this\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal String trimmedText;\n          \n          \n            \n            \t\tfinal String trimmedText;", "bodyHTML": "<p dir=\"auto\">Newline below this</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> trimmedText;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"46\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> trimmedText;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"47\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Nightfirecat", "createdAt": "2020-02-23T07:14:16Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;", "originalCommit": "416db3695cbbfaf953e01915b1e90dde95f103af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQxNw==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971417", "body": "This will throw a `StringIndexOutOfBoundsException` if you enter a string which is just a number for a field which expects to have units added. Why doesn't this simply check `text.endsWith(units)`?", "bodyText": "This will throw a StringIndexOutOfBoundsException if you enter a string which is just a number for a field which expects to have units added. Why doesn't this simply check text.endsWith(units)?", "bodyHTML": "<p dir=\"auto\">This will throw a <code>StringIndexOutOfBoundsException</code> if you enter a string which is just a number for a field which expects to have units added. Why doesn't this simply check <code>text.endsWith(units)</code>?</p>", "author": "Nightfirecat", "createdAt": "2020-02-23T07:19:46Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))", "originalCommit": "416db3695cbbfaf953e01915b1e90dde95f103af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5NzQyMw==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382997423", "bodyText": "Honestly didn't know that existed. Wow that makes it a lot cleaner", "author": "Hydrox6", "createdAt": "2020-02-23T11:56:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk3MTQ0Nw==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r382971447", "body": "Why pass `units.value()` rather than `units` itself? I'd rather this factory handle as little as possible and pass most of its logic to the formatter class.", "bodyText": "Why pass units.value() rather than units itself? I'd rather this factory handle as little as possible and pass most of its logic to the formatter class.", "bodyHTML": "<p dir=\"auto\">Why pass <code>units.value()</code> rather than <code>units</code> itself? I'd rather this factory handle as little as possible and pass most of its logic to the formatter class.</p>", "author": "Nightfirecat", "createdAt": "2020-02-23T07:20:28Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(String units)\n+\t{\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.substring(text.length() - units.length()).equals(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value) throws ParseException\n+\t{\n+\t\treturn value + units;\n+\t}\n+}\n+\n+final class UnitFormatterFactory extends JFormattedTextField.AbstractFormatterFactory\n+{\n+\tprivate final HashMap<JFormattedTextField, JFormattedTextField.AbstractFormatter> formatters;\n+\tprivate final Units units;\n+\n+\tUnitFormatterFactory(Units units)\n+\t{\n+\t\tformatters = new HashMap<>();\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic JFormattedTextField.AbstractFormatter getFormatter(final JFormattedTextField tf)\n+\t{\n+\t\tif (!formatters.containsKey(tf))\n+\t\t{\n+\t\t\tformatters.put(tf, new UnitFormatter(units.value()));", "originalCommit": "416db3695cbbfaf953e01915b1e90dde95f103af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3cdd67eb9f539b82eb283d6c73ff684be23f30df", "url": "https://github.com/runelite/runelite/commit/3cdd67eb9f539b82eb283d6c73ff684be23f30df", "message": "config: fix entering values directly into options with units not working", "committedDate": "2020-02-23T11:57:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAyMjI4Mg==", "url": "https://github.com/runelite/runelite/pull/10830#discussion_r383022282", "body": "Whats with all this logic if there is only ever one formatter factory per text field?", "bodyText": "Whats with all this logic if there is only ever one formatter factory per text field?", "bodyHTML": "<p dir=\"auto\">Whats with all this logic if there is only ever one formatter factory per text field?</p>", "author": "Adam-", "createdAt": "2020-02-23T17:17:10Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/config/UnitFormatter.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright (c) 2020, Hydrox6 <ikada@protonmail.ch>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.config;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import net.runelite.client.config.Units;\n+import javax.swing.JFormattedTextField;\n+import java.text.ParseException;\n+import java.util.HashMap;\n+\n+@Slf4j\n+final class UnitFormatter extends JFormattedTextField.AbstractFormatter\n+{\n+\tprivate final String units;\n+\n+\tUnitFormatter(Units units)\n+\t{\n+\t\tthis.units = units.value();\n+\t}\n+\n+\t@Override\n+\tpublic Object stringToValue(final String text) throws ParseException\n+\t{\n+\t\tfinal String trimmedText;\n+\n+\t\t// Using the spinner controls causes the value to have the unit on the end, so remove it\n+\t\tif (text.endsWith(units))\n+\t\t{\n+\t\t\ttrimmedText = text.substring(0, text.length() - units.length());\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\ttrimmedText = text;\n+\t\t}\n+\n+\t\ttry\n+\t\t{\n+\t\t\treturn Integer.valueOf(trimmedText);\n+\t\t}\n+\t\tcatch (NumberFormatException e)\n+\t\t{\n+\t\t\tthrow new ParseException(trimmedText + \" is not an integer.\", 0);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String valueToString(final Object value)\n+\t{\n+\t\treturn value + units;\n+\t}\n+}\n+\n+final class UnitFormatterFactory extends JFormattedTextField.AbstractFormatterFactory\n+{\n+\tprivate final HashMap<JFormattedTextField, JFormattedTextField.AbstractFormatter> formatters;\n+\tprivate final Units units;\n+\n+\tUnitFormatterFactory(Units units)\n+\t{\n+\t\tformatters = new HashMap<>();\n+\t\tthis.units = units;\n+\t}\n+\n+\t@Override\n+\tpublic JFormattedTextField.AbstractFormatter getFormatter(final JFormattedTextField tf)\n+\t{\n+\t\tif (!formatters.containsKey(tf))\n+\t\t{\n+\t\t\tformatters.put(tf, new UnitFormatter(units));", "originalCommit": "3cdd67eb9f539b82eb283d6c73ff684be23f30df", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "77ed679134c14911b8b5a3e6b79bde915fea8d15", "url": "https://github.com/runelite/runelite/commit/77ed679134c14911b8b5a3e6b79bde915fea8d15", "message": "config: fix entering values directly into options with units not working", "committedDate": "2020-03-01T16:32:11Z", "type": "forcePushed"}, {"oid": "960e3181c724a3421763b31de3bdc2ace456399b", "url": "https://github.com/runelite/runelite/commit/960e3181c724a3421763b31de3bdc2ace456399b", "message": "config: fix entering values directly into options with units not working", "committedDate": "2020-03-01T16:44:28Z", "type": "commit"}, {"oid": "960e3181c724a3421763b31de3bdc2ace456399b", "url": "https://github.com/runelite/runelite/commit/960e3181c724a3421763b31de3bdc2ace456399b", "message": "config: fix entering values directly into options with units not working", "committedDate": "2020-03-01T16:44:28Z", "type": "forcePushed"}]}