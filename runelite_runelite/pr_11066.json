{"pr_number": 11066, "pr_title": "runenergy: update graceful recovery rate logic to reflect 9 Jan game update", "pr_author": "seandewar", "pr_createdAt": "2020-03-25T01:58:44Z", "pr_url": "https://github.com/runelite/runelite/pull/11066", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTQ4OQ==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r397589489", "body": "Instead of having hardcoded values here and below for the full set effect check, an enum with the slot index, set of graceful item IDs, and slot bonus could be defined which would give better definition to this data. This also would allow creation of some static `FULL_SET_BONUS` value that can be referenced below.", "bodyText": "Instead of having hardcoded values here and below for the full set effect check, an enum with the slot index, set of graceful item IDs, and slot bonus could be defined which would give better definition to this data. This also would allow creation of some static FULL_SET_BONUS value that can be referenced below.", "bodyHTML": "<p dir=\"auto\">Instead of having hardcoded values here and below for the full set effect check, an enum with the slot index, set of graceful item IDs, and slot bonus could be defined which would give better definition to this data. This also would allow creation of some static <code>FULL_SET_BONUS</code> value that can be referenced below.</p>", "author": "Nightfirecat", "createdAt": "2020-03-25T03:26:17Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +210,42 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (int i = 0; i < items.length; ++i)\n+\t\t{\n+\t\t\tfinal ImmutableSet<Integer> gracefulForSlot = GRACEFUL_EQUIPMENT_SLOT_MAP.get(i);\n+\n+\t\t\tif (gracefulForSlot != null && gracefulForSlot.contains(items[i].getId()))\n+\t\t\t{\n+\t\t\t\t// 4% boost for the top and legs; 3% for the others\n+\t\t\t\tboost += i == EquipmentInventorySlot.BODY.getSlotIdx() || i == EquipmentInventorySlot.LEGS.getSlotIdx() ? 4 : 3;", "originalCommit": "4f734d4e76775a24abd9870e0b0af1f43084877e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5369bd47dca764ebfda8442a3d428b693592a6f0", "url": "https://github.com/runelite/runelite/commit/5369bd47dca764ebfda8442a3d428b693592a6f0", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T00:16:40Z", "type": "forcePushed"}, {"oid": "cb817f4068bcc09bbc4718a46e6c281072c2a546", "url": "https://github.com/runelite/runelite/commit/cb817f4068bcc09bbc4718a46e6c281072c2a546", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T00:29:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI3MjgyOA==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398272828", "body": "This can cause `ArrayIndexOutOfBoundsException` as `equipment.getItems()` is not guaranteed to have a length out to the highest equipment slot type's ID. Moving the `items.length > slot.getIndex()` check which is currently part of the if statement below this to the start of the block should correct that.\r\n\r\n```\r\nif (items.length <= slot.getIndex())\r\n{\r\n\tcontinue;\r\n}\r\n\r\n// rest of method\r\n```", "bodyText": "This can cause ArrayIndexOutOfBoundsException as equipment.getItems() is not guaranteed to have a length out to the highest equipment slot type's ID. Moving the items.length > slot.getIndex() check which is currently part of the if statement below this to the start of the block should correct that.\nif (items.length <= slot.getIndex())\n{\n\tcontinue;\n}\n\n// rest of method", "bodyHTML": "<p dir=\"auto\">This can cause <code>ArrayIndexOutOfBoundsException</code> as <code>equipment.getItems()</code> is not guaranteed to have a length out to the highest equipment slot type's ID. Moving the <code>items.length &gt; slot.getIndex()</code> check which is currently part of the if statement below this to the start of the block should correct that.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (items.length &lt;= slot.getIndex())\n{\n\tcontinue;\n}\n\n// rest of method\"><pre><code>if (items.length &lt;= slot.getIndex())\n{\n\tcontinue;\n}\n\n// rest of method\n</code></pre></div>", "author": "Nightfirecat", "createdAt": "2020-03-26T01:53:51Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,40 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n-\t\treturn (ALL_GRACEFUL_HOODS.contains(items[EquipmentInventorySlot.HEAD.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_TOPS.contains(items[EquipmentInventorySlot.BODY.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_LEGS.contains(items[EquipmentInventorySlot.LEGS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_GLOVES.contains(items[EquipmentInventorySlot.GLOVES.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_BOOTS.contains(items[EquipmentInventorySlot.BOOTS.getSlotIdx()].getId()) &&\n-\t\t\tALL_GRACEFUL_CAPES.contains(items[EquipmentInventorySlot.CAPE.getSlotIdx()].getId()));\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n+\t\t{\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "originalCommit": "cb817f4068bcc09bbc4718a46e6c281072c2a546", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "url": "https://github.com/runelite/runelite/commit/3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T02:10:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI5MTE5OA==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r398291198", "body": "Entries are not guaranteed to be nonnull. Change this to `final Item wornItem` and null-check it along with checking `slot.getItems().contains(wornItem.getId())` below.", "bodyText": "Entries are not guaranteed to be nonnull. Change this to final Item wornItem and null-check it along with checking slot.getItems().contains(wornItem.getId()) below.", "bodyHTML": "<p dir=\"auto\">Entries are not guaranteed to be nonnull. Change this to <code>final Item wornItem</code> and null-check it along with checking <code>slot.getItems().contains(wornItem.getId())</code> below.</p>", "author": "Nightfirecat", "createdAt": "2020-03-26T03:02:16Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -199,30 +223,45 @@ String getEstimatedRunTimeRemaining(boolean inSeconds)\n \t\t}\n \t}\n \n-\tprivate boolean isLocalPlayerWearingFullGraceful()\n+\tprivate int getGracefulRecoveryBoost()\n \t{\n \t\tfinal ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);\n \n \t\tif (equipment == null)\n \t\t{\n-\t\t\treturn false;\n+\t\t\treturn 0;\n \t\t}\n \n \t\tfinal Item[] items = equipment.getItems();\n \n-\t\t// Check that the local player is wearing enough items to be using full Graceful\n-\t\t// (the Graceful boots will have the highest slot index in the worn set).\n-\t\tif (items == null || items.length <= EquipmentInventorySlot.BOOTS.getSlotIdx())\n+\t\tif (items == null)\n+\t\t{\n+\t\t\treturn 0;\n+\t\t}\n+\n+\t\tint boost = 0;\n+\n+\t\tfor (final GracefulEquipmentSlot slot : GracefulEquipmentSlot.values())\n \t\t{\n-\t\t\treturn false;\n+\t\t\tif (items.length <= slot.getIndex())\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tfinal int wornItemId = items[slot.getIndex()].getId();", "originalCommit": "3ccbb977fcae2ed4cc5f4ef3a4e45fcbb27e53af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c6c517f4553772f8d06239298eb277756bbe8d7a", "url": "https://github.com/runelite/runelite/commit/c6c517f4553772f8d06239298eb277756bbe8d7a", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-03-26T03:18:38Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzOTM1NQ==", "url": "https://github.com/runelite/runelite/pull/11066#discussion_r401939355", "body": "```suggestion\r\n\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(GracefulEquipmentSlot::getBoost).sum();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();\n          \n          \n            \n            \t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(GracefulEquipmentSlot::getBoost).sum();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">int</span> <span class=\"pl-c1\">TOTAL_BOOSTS</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>stream(values())<span class=\"pl-k\">.</span>mapToInt(<span class=\"x x-first\">x </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> x</span><span class=\"pl-k x x-last\">.</span>getBoost<span class=\"x x-first x-last\">()</span>)<span class=\"pl-k\">.</span>sum();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">int</span> <span class=\"pl-c1\">TOTAL_BOOSTS</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>stream(values())<span class=\"pl-k\">.</span>mapToInt(<span class=\"pl-smi x x-first\">GracefulEquipmentSlot</span><span class=\"pl-k x x-last\">::</span>getBoost)<span class=\"pl-k\">.</span>sum();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Adam-", "createdAt": "2020-04-01T22:09:37Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/runenergy/RunEnergyPlugin.java", "diffHunk": "@@ -94,6 +97,27 @@\n \t\tAGILITY_CAPE, AGILITY_CAPET, MAX_CAPE\n \t);\n \n+\t@RequiredArgsConstructor\n+\t@Getter\n+\tprivate enum GracefulEquipmentSlot\n+\t{\n+\t\tHEAD(EquipmentInventorySlot.HEAD.getSlotIdx(), ALL_GRACEFUL_HOODS, 3),\n+\t\tBODY(EquipmentInventorySlot.BODY.getSlotIdx(), ALL_GRACEFUL_TOPS, 4),\n+\t\tLEGS(EquipmentInventorySlot.LEGS.getSlotIdx(), ALL_GRACEFUL_LEGS, 4),\n+\t\tGLOVES(EquipmentInventorySlot.GLOVES.getSlotIdx(), ALL_GRACEFUL_GLOVES, 3),\n+\t\tBOOTS(EquipmentInventorySlot.BOOTS.getSlotIdx(), ALL_GRACEFUL_BOOTS, 3),\n+\t\tCAPE(EquipmentInventorySlot.CAPE.getSlotIdx(), ALL_GRACEFUL_CAPES, 3);\n+\n+\t\tprivate final int index;\n+\t\tprivate final ImmutableSet<Integer> items;\n+\t\tprivate final int boost;\n+\n+\t\tprivate static final int TOTAL_BOOSTS = Arrays.stream(values()).mapToInt(x -> x.getBoost()).sum();", "originalCommit": "c6c517f4553772f8d06239298eb277756bbe8d7a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c3af8a65be1cd833eafb994e717a49a76971e8f9", "url": "https://github.com/runelite/runelite/commit/c3af8a65be1cd833eafb994e717a49a76971e8f9", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:28:48Z", "type": "forcePushed"}, {"oid": "535c5f0b476fac10f655d4f7c57a900ea472eb23", "url": "https://github.com/runelite/runelite/commit/535c5f0b476fac10f655d4f7c57a900ea472eb23", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:38:47Z", "type": "commit"}, {"oid": "535c5f0b476fac10f655d4f7c57a900ea472eb23", "url": "https://github.com/runelite/runelite/commit/535c5f0b476fac10f655d4f7c57a900ea472eb23", "message": "runenergy: update graceful recovery rate logic\n\nUpdates the energy recovery rate calculation to reflect the changes made\nin the 9th January 2020 game update.\n\nEach individual piece of graceful now boosts your recovery rate by 3%,\nwith an extra 1% for the top and legs. With the full set, an extra boost\nof 10% is added, totalling 30%. Previously, there was no boost for\nindividual pieces, instead the full set was required for a flat boost of\n30%.", "committedDate": "2020-04-01T22:38:47Z", "type": "forcePushed"}]}