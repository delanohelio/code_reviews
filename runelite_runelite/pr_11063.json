{"pr_number": 11063, "pr_title": "music, camera: volume & zoom slider tooltips", "pr_author": "seandewar", "pr_createdAt": "2020-03-24T19:34:13Z", "pr_url": "https://github.com/runelite/runelite/pull/11063", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3NzIyMA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397577220", "body": "In what case is the slider handle nonnull and visible with x <= 0?", "bodyText": "In what case is the slider handle nonnull and visible with x <= 0?", "bodyHTML": "<p dir=\"auto\">In what case is the slider handle nonnull and visible with x &lt;= 0?</p>", "author": "Nightfirecat", "createdAt": "2020-03-25T02:39:20Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/music/MusicOverlay.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.music;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Point;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class MusicOverlay extends Overlay\n+{\n+\tprivate final MusicConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate MusicOverlay(final MusicConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfor (MusicPlugin.MusicSlider slider : MusicPlugin.MusicSlider.values())\n+\t\t{\n+\t\t\tif (slider.getHandle() == null || slider.getHandle().isHidden())\n+\t\t\t{\n+\t\t\t\treturn null;\n+\t\t\t}\n+\n+\t\t\tfinal Rectangle bounds = slider.getHandle().getBounds();\n+\n+\t\t\tif (bounds.getX() <= 0)", "originalCommit": "2375ec23fddd93dd2755335fcb6ad4d26826eee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTUwNw==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397579507", "body": "What are these? Why is only one of them used? What are the expected values?", "bodyText": "What are these? Why is only one of them used? What are the expected values?", "bodyHTML": "<p dir=\"auto\">What are these? Why is only one of them used? What are the expected values?</p>", "author": "Nightfirecat", "createdAt": "2020-03-25T02:48:10Z", "path": "runelite-api/src/main/java/net/runelite/api/VarClientInt.java", "diffHunk": "@@ -52,6 +52,9 @@\n \t */\n \tINPUT_TYPE(5),\n \n+\tCAMERA_ZOOM_1(73),\n+\tCAMERA_ZOOM_2(74),", "originalCommit": "c5a870f16fdf64246f4e27cc5910dbd0a1870778", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NjI5OA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397586298", "bodyText": "They seem to be the internal camera zoom level. I'm unsure what the difference between both vars are, though - both always seem to be equal, even with the vanilla behaviour.\nScriptID.java:163 also just refers to both of these vars as being the zoom level.\nCameraPlugin.keyReleased() doesn't give much idea either, as it simply calls the script with the same value for its two arguments (which presumably map to vars 73 & 74).", "author": "seandewar", "createdAt": "2020-03-25T03:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTUwNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTcyNA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397579724", "body": "`OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE` would be more in line with how we describe slider handles in, say, the music plugin.", "bodyText": "OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE would be more in line with how we describe slider handles in, say, the music plugin.", "bodyHTML": "<p dir=\"auto\"><code>OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE</code> would be more in line with how we describe slider handles in, say, the music plugin.</p>", "author": "Nightfirecat", "createdAt": "2020-03-25T02:48:55Z", "path": "runelite-api/src/main/java/net/runelite/api/widgets/WidgetInfo.java", "diffHunk": "@@ -523,6 +523,7 @@\n \tSEED_VAULT_ITEM_TEXT(WidgetID.SEED_VAULT_GROUP_ID, WidgetID.SeedVault.ITEM_TEXT),\n \tSEED_VAULT_INVENTORY_ITEMS_CONTAINER(WidgetID.SEED_VAULT_INVENTORY_GROUP_ID, WidgetID.SeedVault.INVENTORY_ITEM_CONTAINER),\n \n+\tOPTIONS_CAMERA_ZOOM_SLIDER_BUTTON(WidgetID.OPTIONS_GROUP_ID, WidgetID.Options.CAMERA_ZOOM_SLIDER_BUTTON),", "originalCommit": "c5a870f16fdf64246f4e27cc5910dbd0a1870778", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTkxMQ==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397579911", "body": "Same question here: when is this condition ever true?", "bodyText": "Same question here: when is this condition ever true?", "bodyHTML": "<p dir=\"auto\">Same question here: when is this condition ever true?</p>", "author": "Nightfirecat", "createdAt": "2020-03-25T02:49:35Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/camera/CameraOverlay.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.camera;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Constants;\n+import net.runelite.api.Point;\n+import net.runelite.api.VarClientInt;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class CameraOverlay extends Overlay\n+{\n+\tprivate final CameraConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate CameraOverlay(final CameraConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfinal Widget slider = client.getWidget(WidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_BUTTON);\n+\n+\t\tif (slider == null || slider.isHidden())\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal Rectangle bounds = slider.getBounds();\n+\n+\t\tif (bounds.getX() <= 0)", "originalCommit": "c5a870f16fdf64246f4e27cc5910dbd0a1870778", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4ODkyNA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397588924", "body": "revert this", "bodyText": "revert this", "bodyHTML": "<p dir=\"auto\">revert this</p>", "author": "abextm", "createdAt": "2020-03-25T03:23:58Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/music/MusicPlugin.java", "diffHunk": "@@ -439,7 +465,7 @@ private void teardownMusicOptions()\n \t\t\t\tObject[] init = icon.getOnLoadListener();\n \t\t\t\tinit[1] = slider.getWidgetID().getId();\n \n-\t\t\t\t// Readd the var transmit triggers and rerun options_allsounds\n+\t\t\t\t// Read the var transmit triggers and rerun options_allsounds", "originalCommit": "2375ec23fddd93dd2755335fcb6ad4d26826eee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTUyNQ==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397589525", "body": "this is the wrong event and should be in a separate commit&pr", "bodyText": "this is the wrong event and should be in a separate commit&pr", "bodyHTML": "<p dir=\"auto\">this is the wrong event and should be in a separate commit&amp;pr</p>", "author": "abextm", "createdAt": "2020-03-25T03:26:25Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/music/MusicPlugin.java", "diffHunk": "@@ -511,46 +537,44 @@ private void updateMusicOptions()\n \t\t\t\thandle.setOriginalHeight(16);\n \t\t\t\thandle.setClickMask(WidgetConfig.DRAG);\n \n-\t\t\t\tJavaScriptCallback move = ev ->\n-\t\t\t\t{\n-\t\t\t\t\tint newVal = ((ev.getMouseX() - MusicSlider.PADDING - (slider.getHandle().getWidth() / 2)) * slider.getMax())\n-\t\t\t\t\t\t/ slider.getWidth();\n-\t\t\t\t\tif (newVal < 0)\n-\t\t\t\t\t{\n-\t\t\t\t\t\tnewVal = 0;\n-\t\t\t\t\t}\n-\t\t\t\t\tif (newVal > slider.getMax())\n-\t\t\t\t\t{\n-\t\t\t\t\t\tnewVal = slider.getMax();\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// We store +1 so we can tell the difference between 0 and muted\n-\t\t\t\t\tslider.getSetter().accept(musicConfig, newVal + 1);\n-\t\t\t\t\tapplyMusicVolumeConfig();\n-\t\t\t\t};\n-\n-\t\t\t\ttrack.setOnClickListener(move);\n-\t\t\t\ttrack.setOnHoldListener(move);\n-\t\t\t\ttrack.setOnReleaseListener(move);\n+\t\t\t\ttrack.setOnClickListener((JavaScriptCallback) ev -> onSliderMouseMove(ev, slider, false));", "originalCommit": "2375ec23fddd93dd2755335fcb6ad4d26826eee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTc0Mw==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397589743", "body": "This should probably be moved into it's own class", "bodyText": "This should probably be moved into it's own class", "bodyHTML": "<p dir=\"auto\">This should probably be moved into it's own class</p>", "author": "abextm", "createdAt": "2020-03-25T03:27:13Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/music/MusicPlugin.java", "diffHunk": "@@ -374,12 +387,13 @@ private void updateList(Widget musicList, String filter)\n \n \t@RequiredArgsConstructor\n \t@Getter\n-\tprivate enum MusicSlider\n+\tpublic enum MusicSlider", "originalCommit": "2375ec23fddd93dd2755335fcb6ad4d26826eee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4OTc3MA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397589770", "body": "wrong thread", "bodyText": "wrong thread", "bodyHTML": "<p dir=\"auto\">wrong thread</p>", "author": "abextm", "createdAt": "2020-03-25T03:27:24Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/music/MusicPlugin.java", "diffHunk": "@@ -111,6 +122,7 @@ protected void startUp()\n \t\t\taddMusicButtons();\n \t\t\tapplyMusicVolumeConfig();\n \t\t\tupdateMusicOptions();\n+\t\t\toverlayManager.add(musicOverlay);", "originalCommit": "2375ec23fddd93dd2755335fcb6ad4d26826eee3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5Nzc1Nw==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r397597757", "body": "You can just use string concatenation here. it will generate the same code in this case", "bodyText": "You can just use string concatenation here. it will generate the same code in this case", "bodyHTML": "<p dir=\"auto\">You can just use string concatenation here. it will generate the same code in this case</p>", "author": "abextm", "createdAt": "2020-03-25T04:02:25Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/camera/CameraOverlay.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.camera;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.Rectangle;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Constants;\n+import net.runelite.api.Point;\n+import net.runelite.api.VarClientInt;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class CameraOverlay extends Overlay\n+{\n+\tprivate final CameraConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate CameraOverlay(final CameraConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfinal Widget slider = client.getWidget(WidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_BUTTON);\n+\n+\t\tif (slider == null || slider.isHidden())\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal Rectangle bounds = slider.getBounds();\n+\n+\t\tif (bounds.getX() <= 0)\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal Point mousePosition = client.getMouseCanvasPosition();\n+\n+\t\tif (bounds.contains(mousePosition.getX(), mousePosition.getY()))\n+\t\t{\n+\t\t\tfinal int value = client.getVar(VarClientInt.CAMERA_ZOOM_1);\n+\t\t\tfinal int max = config.innerLimit() ? config.INNER_ZOOM_LIMIT : Constants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT;\n+\n+\t\t\tfinal StringBuilder sb = new StringBuilder(\"Camera Zoom: \");", "originalCommit": "c5a870f16fdf64246f4e27cc5910dbd0a1870778", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b6dc6163db3c2293f6dac32cb01d769f916c8b3c", "url": "https://github.com/runelite/runelite/commit/b6dc6163db3c2293f6dac32cb01d769f916c8b3c", "message": "[WIP] camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T17:25:47Z", "type": "forcePushed"}, {"oid": "3b046fa4a5c2281d78ed4c35ed072406c1ffb229", "url": "https://github.com/runelite/runelite/commit/3b046fa4a5c2281d78ed4c35ed072406c1ffb229", "message": "[WIP] camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T18:12:33Z", "type": "forcePushed"}, {"oid": "af2e0f6a66e60cef343f1eda1692c224269d9fdd", "url": "https://github.com/runelite/runelite/commit/af2e0f6a66e60cef343f1eda1692c224269d9fdd", "message": "[WIP] camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T18:15:55Z", "type": "forcePushed"}, {"oid": "890a39e6b611aa2df85540d0cbe5de173e1324a8", "url": "https://github.com/runelite/runelite/commit/890a39e6b611aa2df85540d0cbe5de173e1324a8", "message": "[WIP] camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T20:32:08Z", "type": "forcePushed"}, {"oid": "83b588c9ea9536d113631ea445dbbc3f2d9d8649", "url": "https://github.com/runelite/runelite/commit/83b588c9ea9536d113631ea445dbbc3f2d9d8649", "message": "[WIP] camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T21:11:11Z", "type": "forcePushed"}, {"oid": "768db4ad92c3e575b4ebdd01e18964dd7fdf8cde", "url": "https://github.com/runelite/runelite/commit/768db4ad92c3e575b4ebdd01e18964dd7fdf8cde", "message": "camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-25T22:28:25Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2OTMyOQ==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r400569329", "body": "Extend this guard clause to include the bounds check.\r\n\r\n```suggestion\r\n\t\tif (slider == null || slider.isHidden()\r\n\t\t\t|| !slider.getBounds().contains(client.getMouseCanvasPosition()))\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n```\r\n\r\nThen the rest of this tooltip generation can happen without being contained in any further nested blocks.", "bodyText": "Extend this guard clause to include the bounds check.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (slider == null || slider.isHidden())\n          \n          \n            \n            \t\t{\n          \n          \n            \n            \t\t\treturn null;\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\tfinal Point mousePosition = client.getMouseCanvasPosition();\n          \n          \n            \n            \n          \n          \n            \n            \t\tif (slider.getBounds().contains(mousePosition.getX(), mousePosition.getY()))\n          \n          \n            \n            \t\t{\n          \n          \n            \n            \t\tif (slider == null || slider.isHidden()\n          \n          \n            \n            \t\t\t|| !slider.getBounds().contains(client.getMouseCanvasPosition()))\n          \n          \n            \n            \t\t{\n          \n          \n            \n            \t\t\treturn null;\n          \n          \n            \n            \t\t}\n          \n      \n    \n    \n  \n\nThen the rest of this tooltip generation can happen without being contained in any further nested blocks.", "bodyHTML": "<p dir=\"auto\">Extend this guard clause to include the bounds check.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">if</span> (slider <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> slider<span class=\"pl-k\">.</span>isHidden())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Point</span> mousePosition <span class=\"pl-k\">=</span> client<span class=\"pl-k\">.</span>getMouseCanvasPosition();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">if</span> (slider<span class=\"pl-k\">.</span>getBounds()<span class=\"pl-k\">.</span>contains(mousePosition<span class=\"pl-k\">.</span>getX(), mousePosition<span class=\"pl-k\">.</span>getY()))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">if</span> (slider <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> slider<span class=\"pl-k\">.</span>isHidden()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>slider<span class=\"pl-k\">.</span>getBounds()<span class=\"pl-k\">.</span>contains(client<span class=\"pl-k\">.</span>getMouseCanvasPosition()))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Then the rest of this tooltip generation can happen without being contained in any further nested blocks.</p>", "author": "Nightfirecat", "createdAt": "2020-03-31T00:15:14Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/camera/CameraOverlay.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.camera;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Constants;\n+import net.runelite.api.Point;\n+import net.runelite.api.VarClientInt;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class CameraOverlay extends Overlay\n+{\n+\tprivate final CameraConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate CameraOverlay(final CameraConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfinal Widget slider = client.getWidget(WidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE);\n+\n+\t\tif (slider == null || slider.isHidden())\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal Point mousePosition = client.getMouseCanvasPosition();\n+\n+\t\tif (slider.getBounds().contains(mousePosition.getX(), mousePosition.getY()))\n+\t\t{", "originalCommit": "768db4ad92c3e575b4ebdd01e18964dd7fdf8cde", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MjEzMg==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r400572132", "body": "this should either just chose one value and stick with it, or use the same logic the game uses <https://github.com/RuneStar/cs2-scripts/blob/master/scripts/%5Bproc,zoom_position_slider%5D.cs2#L8-L10>", "bodyText": "this should either just chose one value and stick with it, or use the same logic the game uses https://github.com/RuneStar/cs2-scripts/blob/master/scripts/%5Bproc,zoom_position_slider%5D.cs2#L8-L10", "bodyHTML": "<p dir=\"auto\">this should either just chose one value and stick with it, or use the same logic the game uses <a href=\"https://github.com/RuneStar/cs2-scripts/blob/master/scripts/%5Bproc,zoom_position_slider%5D.cs2#L8-L10\">https://github.com/RuneStar/cs2-scripts/blob/master/scripts/%5Bproc,zoom_position_slider%5D.cs2#L8-L10</a></p>", "author": "abextm", "createdAt": "2020-03-31T00:25:00Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/camera/CameraOverlay.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.camera;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Constants;\n+import net.runelite.api.Point;\n+import net.runelite.api.VarClientInt;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class CameraOverlay extends Overlay\n+{\n+\tprivate final CameraConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate CameraOverlay(final CameraConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfinal Widget slider = client.getWidget(WidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE);\n+\n+\t\tif (slider == null || slider.isHidden())\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tfinal Point mousePosition = client.getMouseCanvasPosition();\n+\n+\t\tif (slider.getBounds().contains(mousePosition.getX(), mousePosition.getY()))\n+\t\t{\n+\t\t\tfinal Widget fixedViewport = client.getWidget(WidgetInfo.FIXED_VIEWPORT);\n+\t\t\tfinal boolean isFixedMode = fixedViewport != null && !fixedViewport.isHidden();\n+\n+\t\t\tfinal int value = client.getVar(isFixedMode ? VarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT : VarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT);", "originalCommit": "768db4ad92c3e575b4ebdd01e18964dd7fdf8cde", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8d2f362c1f9a049d30bda7d76d950ea66ac26a4a", "url": "https://github.com/runelite/runelite/commit/8d2f362c1f9a049d30bda7d76d950ea66ac26a4a", "message": "camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nConstants.GAME_FIXED_VIEWPORT_WIDTH = 512\nConstants.GAME_FIXED_VIEWPORT_HEIGHT = 334\nConstants.CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896\nConstants.CLIENT_DEFAULT_OUTER_ZOOM_LIMIT = 128\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-31T02:36:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYxMDI0NA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r400610244", "body": "I've prefixed these constants with `GAME_` to be consistent with the stuff already here for `GAME_FIXED_WIDTH` and such, but is the `CLIENT_` prefix better for these instead? (such as in `CLIENT_DEFAULT_ZOOM`)", "bodyText": "I've prefixed these constants with GAME_ to be consistent with the stuff already here for GAME_FIXED_WIDTH and such, but is the CLIENT_ prefix better for these instead? (such as in CLIENT_DEFAULT_ZOOM)", "bodyHTML": "<p dir=\"auto\">I've prefixed these constants with <code>GAME_</code> to be consistent with the stuff already here for <code>GAME_FIXED_WIDTH</code> and such, but is the <code>CLIENT_</code> prefix better for these instead? (such as in <code>CLIENT_DEFAULT_ZOOM</code>)</p>", "author": "seandewar", "createdAt": "2020-03-31T02:45:59Z", "path": "runelite-api/src/main/java/net/runelite/api/Constants.java", "diffHunk": "@@ -52,11 +52,31 @@\n \t */\n \tpublic static final double GAME_FIXED_ASPECT_RATIO = (double) GAME_FIXED_WIDTH / (double) GAME_FIXED_HEIGHT;\n \n+\t/**\n+\t * The width of the game viewport when running in fixed mode.\n+\t */\n+\tpublic static final int GAME_FIXED_VIEWPORT_WIDTH = 512;\n+\n+\t/**\n+\t * The height of the game viewport when running in fixed mode.\n+\t */\n+\tpublic static final int GAME_FIXED_VIEWPORT_HEIGHT = 334;", "originalCommit": "8d2f362c1f9a049d30bda7d76d950ea66ac26a4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzMjYyMw==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r400632623", "body": "you transcribed this wrong, its should be width > height, but that makes this dead code anyway (the cs2 has a bug apparently, as its different from what the engine uses). Just make it always use resizable always because it makes no difference to the calculated value as these vars are always in sync, and I don't want to copy a bug here and have it change later.", "bodyText": "you transcribed this wrong, its should be width > height, but that makes this dead code anyway (the cs2 has a bug apparently, as its different from what the engine uses). Just make it always use resizable always because it makes no difference to the calculated value as these vars are always in sync, and I don't want to copy a bug here and have it change later.", "bodyHTML": "<p dir=\"auto\">you transcribed this wrong, its should be width &gt; height, but that makes this dead code anyway (the cs2 has a bug apparently, as its different from what the engine uses). Just make it always use resizable always because it makes no difference to the calculated value as these vars are always in sync, and I don't want to copy a bug here and have it change later.</p>", "author": "abextm", "createdAt": "2020-03-31T04:13:35Z", "path": "runelite-client/src/main/java/net/runelite/client/plugins/camera/CameraOverlay.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Copyright (c) 2020, Sean Dewar <https://github.com/seandewar>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.client.plugins.camera;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import javax.inject.Inject;\n+import net.runelite.api.Client;\n+import net.runelite.api.Constants;\n+import net.runelite.api.Point;\n+import net.runelite.api.VarClientInt;\n+import net.runelite.api.widgets.Widget;\n+import net.runelite.api.widgets.WidgetInfo;\n+import net.runelite.client.ui.overlay.Overlay;\n+import net.runelite.client.ui.overlay.OverlayLayer;\n+import net.runelite.client.ui.overlay.OverlayPosition;\n+import net.runelite.client.ui.overlay.tooltip.Tooltip;\n+import net.runelite.client.ui.overlay.tooltip.TooltipManager;\n+\n+class CameraOverlay extends Overlay\n+{\n+\tprivate final CameraConfig config;\n+\tprivate final Client client;\n+\tprivate final TooltipManager tooltipManager;\n+\n+\t@Inject\n+\tprivate CameraOverlay(final CameraConfig config, final Client client, final TooltipManager tooltipManager)\n+\t{\n+\t\tthis.config = config;\n+\t\tthis.client = client;\n+\t\tthis.tooltipManager = tooltipManager;\n+\t\tsetPosition(OverlayPosition.DYNAMIC);\n+\t\tsetLayer(OverlayLayer.ABOVE_WIDGETS);\n+\t}\n+\n+\t@Override\n+\tpublic Dimension render(final Graphics2D graphics)\n+\t{\n+\t\tfinal Widget slider = client.getWidget(WidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE);\n+\t\tfinal Point mousePos = client.getMouseCanvasPosition();\n+\n+\t\tif (slider == null || slider.isHidden() || !slider.getBounds().contains(mousePos.getX(), mousePos.getY()))\n+\t\t{\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\t// Same logic used in scripts to determine if the game is in resizable mode or not\n+\t\tfinal boolean resizableMode = client.getViewportHeight() > Constants.GAME_FIXED_VIEWPORT_WIDTH;", "originalCommit": "8d2f362c1f9a049d30bda7d76d950ea66ac26a4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYzMjc3NA==", "url": "https://github.com/runelite/runelite/pull/11063#discussion_r400632774", "body": "these should be in the plugin because no other plugin needs this info", "bodyText": "these should be in the plugin because no other plugin needs this info", "bodyHTML": "<p dir=\"auto\">these should be in the plugin because no other plugin needs this info</p>", "author": "abextm", "createdAt": "2020-03-31T04:14:06Z", "path": "runelite-api/src/main/java/net/runelite/api/Constants.java", "diffHunk": "@@ -52,11 +52,31 @@\n \t */\n \tpublic static final double GAME_FIXED_ASPECT_RATIO = (double) GAME_FIXED_WIDTH / (double) GAME_FIXED_HEIGHT;\n \n+\t/**\n+\t * The width of the game viewport when running in fixed mode.\n+\t */\n+\tpublic static final int GAME_FIXED_VIEWPORT_WIDTH = 512;\n+\n+\t/**\n+\t * The height of the game viewport when running in fixed mode.\n+\t */\n+\tpublic static final int GAME_FIXED_VIEWPORT_HEIGHT = 334;\n+\n \t/**\n \t * The default camera zoom value.\n \t */\n \tpublic static final int CLIENT_DEFAULT_ZOOM = 512;\n \n+\t/**\n+\t * The default camera inner zoom limit.\n+\t */\n+\tpublic static final int CLIENT_DEFAULT_INNER_ZOOM_LIMIT = 896;", "originalCommit": "8d2f362c1f9a049d30bda7d76d950ea66ac26a4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7d8867b92de1aed52eb3948691f84f651ef1b195", "url": "https://github.com/runelite/runelite/commit/7d8867b92de1aed52eb3948691f84f651ef1b195", "message": "camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-03-31T10:56:37Z", "type": "forcePushed"}, {"oid": "4a1dbf4e2d59e6a82f29d73c97f42410aa6c74f2", "url": "https://github.com/runelite/runelite/commit/4a1dbf4e2d59e6a82f29d73c97f42410aa6c74f2", "message": "music: slider volume percentage tooltips", "committedDate": "2020-04-05T02:42:41Z", "type": "commit"}, {"oid": "07d414d41d9acf98a1d1f6dba12ec894a93312bc", "url": "https://github.com/runelite/runelite/commit/07d414d41d9acf98a1d1f6dba12ec894a93312bc", "message": "camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-04-05T02:42:48Z", "type": "commit"}, {"oid": "07d414d41d9acf98a1d1f6dba12ec894a93312bc", "url": "https://github.com/runelite/runelite/commit/07d414d41d9acf98a1d1f6dba12ec894a93312bc", "message": "camera: zoom slider tooltip & zoom constants\n\nThis commit also adds constants for:\n\nVarClientInt.CAMERA_ZOOM_FIXED_VIEWPORT = 73\nVarClientInt.CAMERA_ZOOM_RESIZABLE_VIEWPORT = 74\n\nWidgetID.Options.CAMERA_ZOOM_SLIDER_HANDLE = 15\nWidgetInfo.OPTIONS_CAMERA_ZOOM_SLIDER_HANDLE", "committedDate": "2020-04-05T02:42:48Z", "type": "forcePushed"}]}