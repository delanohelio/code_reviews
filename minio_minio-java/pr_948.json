{"pr_number": 948, "pr_title": "Add arg builder to presigned object url", "pr_author": "sinhaashish", "pr_createdAt": "2020-05-19T08:55:14Z", "pr_url": "https://github.com/minio/minio-java/pull/948", "timeline": [{"oid": "0a5975f0ddf8cdf3374888b746983689ad5cc9aa", "url": "https://github.com/minio/minio-java/commit/0a5975f0ddf8cdf3374888b746983689ad5cc9aa", "message": "Add arg builder to getObjectUrl, getPresignedObjectUrl, presignedGetObject, presignedPutObject", "committedDate": "2020-05-19T18:42:47Z", "type": "forcePushed"}, {"oid": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "url": "https://github.com/minio/minio-java/commit/a11cbf5bfae5b1deee7d3db066281b888fdb1913", "message": "Add arg builder to getObjectUrl, getPresignedObjectUrl, presignedGetObject, presignedPutObject", "committedDate": "2020-05-20T06:08:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTEwMg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427881102", "body": "Guess this should be \"Supported params\"  ?", "bodyText": "Guess this should be \"Supported params\"  ?", "bodyHTML": "<p dir=\"auto\">Guess this should be \"Supported params\"  ?</p>", "author": "anjalshireesh", "createdAt": "2020-05-20T09:46:51Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {\n+      operations.add(args -> args.expires = expires);\n+      return this;\n+    }\n+\n+    /*Request parameters to override. Supported headers are response-expires,", "originalCommit": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MTk3NA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r429741974", "bodyText": "Replaced to     /* Supported params are response-expires, response-content-type, * response-cache-control and response-content-disposition. */", "author": "sinhaashish", "createdAt": "2020-05-25T05:51:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTEwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4NzMwOA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427887308", "body": "```suggestion\r\n   *             .object(\"my-objectname\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *             .object(my - objectname)\n          \n          \n            \n               *             .object(\"my-objectname\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span>             .object(<span class=\"x x-first\">my </span><span class=\"pl-k x\">-</span><span class=\"x x-last\"> </span>objectname)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span>             .object(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x x-last\">my-</span>objectname<span class=\"pl-pds x x-first x-last\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-20T09:57:04Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2415,32 +2454,148 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           XmlParserException {\n+\n+    return this.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .params(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(my - objectname)", "originalCommit": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5MDUwMw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427890503", "body": "This validation (on `expires`) can be done inside the builder", "bodyText": "This validation (on expires) can be done inside the builder", "bodyHTML": "<p dir=\"auto\">This validation (on <code>expires</code>) can be done inside the builder</p>", "author": "anjalshireesh", "createdAt": "2020-05-20T10:02:03Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2415,32 +2454,148 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           XmlParserException {\n+\n+    return this.getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .params(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(my - objectname)\n+   *             .expires(24 * 60 * 60)\n+   *             .params(reqParams)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException {\n+    if (args == null) {\n+      throw new IllegalArgumentException(\"null arguments\");\n+    }\n+\n     // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+    if (args.expires() < 1 || args.expires() > DEFAULT_EXPIRY_TIME) {\n       throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+          args.expires(), \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "originalCommit": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Njg1MA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427896850", "body": "Guess this should be `Supported params` ?", "bodyText": "Guess this should be Supported params ?", "bodyHTML": "<p dir=\"auto\">Guess this should be <code>Supported params</code> ?</p>", "author": "anjalshireesh", "createdAt": "2020-05-20T10:13:18Z", "path": "api/src/main/java/io/minio/PresignedGetObjectArgs.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.presignedGetObject(). */\n+public class PresignedGetObjectArgs extends ObjectArgs {\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link PresignedGetObjectArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, PresignedGetObjectArgs> {\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {\n+      operations.add(args -> args.expires = expires);\n+      return this;\n+    }\n+\n+    /*Request parameters to override. Supported headers are response-expires,", "originalCommit": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjgxOA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r427902818", "body": "`presignedPutObject` and `presignedGetObject` seem to be just wrappers over a single method/API `getPresignedObjectUrl`\r\n\r\nIf this understanding is correct, I don't think we need three different Args classes. A single args class `GetPresignedObjectUrlArgs` should suffice.", "bodyText": "presignedPutObject and presignedGetObject seem to be just wrappers over a single method/API getPresignedObjectUrl\nIf this understanding is correct, I don't think we need three different Args classes. A single args class GetPresignedObjectUrlArgs should suffice.", "bodyHTML": "<p dir=\"auto\"><code>presignedPutObject</code> and <code>presignedGetObject</code> seem to be just wrappers over a single method/API <code>getPresignedObjectUrl</code></p>\n<p dir=\"auto\">If this understanding is correct, I don't think we need three different Args classes. A single args class <code>GetPresignedObjectUrlArgs</code> should suffice.</p>", "author": "anjalshireesh", "createdAt": "2020-05-20T10:24:32Z", "path": "api/src/main/java/io/minio/PresignedPutObjectArgs.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+/** Argument class of MinioClient.presignedPutObject(). */\n+public class PresignedPutObjectArgs extends ObjectArgs {", "originalCommit": "a11cbf5bfae5b1deee7d3db066281b888fdb1913", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0MTY5Ng==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r429741696", "bodyText": "@anjalshireesh  You point is valid but Argument class is always in sync with method name so i have used different argument class. @balamurugana  need your input on this", "author": "sinhaashish", "createdAt": "2020-05-25T05:50:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMjgxOA=="}], "type": "inlineReview"}, {"oid": "9120b60b6573aeecee9164fc4dce43ffa36300af", "url": "https://github.com/minio/minio-java/commit/9120b60b6573aeecee9164fc4dce43ffa36300af", "message": "Add arg builder to getObjectUrl, getPresignedObjectUrl, presignedGetObject, presignedPutObject", "committedDate": "2020-05-25T05:14:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NjIzMQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r430046231", "body": "I believe we're standardizing on throwing `IllegalArgumentException` in case of argument validation failures.", "bodyText": "I believe we're standardizing on throwing IllegalArgumentException in case of argument validation failures.", "bodyHTML": "<p dir=\"auto\">I believe we're standardizing on throwing <code>IllegalArgumentException</code> in case of argument validation failures.</p>", "author": "anjalshireesh", "createdAt": "2020-05-25T18:49:01Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.errors.InvalidExpiresRangeException;\n+import io.minio.http.Method;\n+import java.util.Map;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+  private Integer expires;\n+  private Map<String, String> reqParams;\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public Map<String, String> params() {\n+    return reqParams;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) throws InvalidExpiresRangeException {\n+      if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+        throw new InvalidExpiresRangeException(\n+            expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }", "originalCommit": "9120b60b6573aeecee9164fc4dce43ffa36300af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "943b07c53472573f53db3a400e102190a82c328a", "url": "https://github.com/minio/minio-java/commit/943b07c53472573f53db3a400e102190a82c328a", "message": "address review comments", "committedDate": "2020-05-27T11:09:18Z", "type": "forcePushed"}, {"oid": "fd60a2e2094d0fd435fe1cc0b24f7178083d84ec", "url": "https://github.com/minio/minio-java/commit/fd60a2e2094d0fd435fe1cc0b24f7178083d84ec", "message": "address review comments", "committedDate": "2020-05-27T11:28:04Z", "type": "forcePushed"}, {"oid": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "url": "https://github.com/minio/minio-java/commit/b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "message": "address review comments", "committedDate": "2020-05-27T11:56:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE2Mzk5Mw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431163993", "body": "```suggestion\r\n  private Integer expires = DEFAULT_EXPIRY_TIME;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private Integer expires = 7 * 24 * 3600;\n          \n          \n            \n              private Integer expires = DEFAULT_EXPIRY_TIME;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Integer</span> expires <span class=\"pl-k\">=</span> <span class=\"pl-c1 x x-first\">7</span><span class=\"x\"> </span><span class=\"pl-k x\">*</span><span class=\"x\"> </span><span class=\"pl-c1 x\">24</span><span class=\"x\"> </span><span class=\"pl-k x\">*</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">3600</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Integer</span> expires <span class=\"pl-k\">=</span> <span class=\"pl-c1 x x-first x-last\">DEFAULT_EXPIRY_TIME</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T14:13:12Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n \n package io.minio;\n \n-import io.minio.errors.InvalidExpiresRangeException;\n import io.minio.http.Method;\n-import java.util.Map;\n \n /** Argument class of MinioClient.getPresignedObjectUrl(). */\n public class GetPresignedObjectUrlArgs extends ObjectArgs {\n   private Method method;\n-  private Integer expires;\n-  private Map<String, String> reqParams;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = 7 * 24 * 3600;", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5MjkyOQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431192929", "body": "We can potentially add a method like this in `BaseArgs.Builder` and use it for all the null arg checks\r\n\r\n```\r\n    protected void validateArgNotNull(Object arg, String name, String context) {\r\n      if (arg == null) {\r\n        throw new IllegalArgumentException(\"null \" + name + \" for \" + context);\r\n      }\r\n    }\r\n```\r\n\r\nAnother option in this particular case is to add a single validation method that checks if either of them is null and raises a generic error message like \"Arguments 'method' and 'expires' are mandatory for presigned url\"", "bodyText": "We can potentially add a method like this in BaseArgs.Builder and use it for all the null arg checks\n    protected void validateArgNotNull(Object arg, String name, String context) {\n      if (arg == null) {\n        throw new IllegalArgumentException(\"null \" + name + \" for \" + context);\n      }\n    }\n\nAnother option in this particular case is to add a single validation method that checks if either of them is null and raises a generic error message like \"Arguments 'method' and 'expires' are mandatory for presigned url\"", "bodyHTML": "<p dir=\"auto\">We can potentially add a method like this in <code>BaseArgs.Builder</code> and use it for all the null arg checks</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    protected void validateArgNotNull(Object arg, String name, String context) {\n      if (arg == null) {\n        throw new IllegalArgumentException(&quot;null &quot; + name + &quot; for &quot; + context);\n      }\n    }\n\"><pre><code>    protected void validateArgNotNull(Object arg, String name, String context) {\n      if (arg == null) {\n        throw new IllegalArgumentException(\"null \" + name + \" for \" + context);\n      }\n    }\n</code></pre></div>\n<p dir=\"auto\">Another option in this particular case is to add a single validation method that checks if either of them is null and raises a generic error message like \"Arguments 'method' and 'expires' are mandatory for presigned url\"</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T14:44:34Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -36,37 +34,45 @@ public Integer expires() {\n     return expires;\n   }\n \n-  public Map<String, String> params() {\n-    return reqParams;\n-  }\n-\n   public static Builder builder() {\n     return new Builder();\n   }\n \n   /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n   public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateConfig(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateConfig(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+    }", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5NjY5Mg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431196692", "body": "This won't create the error message correctly. e.g. if `expires` is passed as `0`, the message will be:\r\n\r\n\"0expires must be in range of 1 to 604800\"\r\n", "bodyText": "This won't create the error message correctly. e.g. if expires is passed as 0, the message will be:\n\"0expires must be in range of 1 to 604800\"", "bodyHTML": "<p dir=\"auto\">This won't create the error message correctly. e.g. if <code>expires</code> is passed as <code>0</code>, the message will be:</p>\n<p dir=\"auto\">\"0expires must be in range of 1 to 604800\"</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T14:49:32Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -36,37 +34,45 @@ public Integer expires() {\n     return expires;\n   }\n \n-  public Map<String, String> params() {\n-    return reqParams;\n-  }\n-\n   public static Builder builder() {\n     return new Builder();\n   }\n \n   /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n   public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateConfig(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateConfig(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+    }\n+\n+    protected void validate(GetPresignedObjectUrlArgs args) {\n+      super.validate(args);\n+      validateConfig(args.method);\n+      validateConfig(args.expires);\n+    }\n+\n     /* method HTTP {@link Method} to generate presigned URL. */\n     public Builder method(Method method) {\n+      validateConfig(method);\n       operations.add(args -> args.method = method);\n       return this;\n     }\n \n     /*expires Expiry in seconds; defaults to 7 days. */\n-    public Builder expires(Integer expires) throws InvalidExpiresRangeException {\n+    public Builder expires(Integer expires) {\n       if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-        throw new InvalidExpiresRangeException(\n-            expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+        throw new IllegalArgumentException(\n+            expires + \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxMzY2Mg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431213662", "body": "Shall the two files `PresignedGetObject.java` and `PresignedPutObject.java` be merged into a single example file called `GetPresignedObjectUrl.java` ?", "bodyText": "Shall the two files PresignedGetObject.java and PresignedPutObject.java be merged into a single example file called GetPresignedObjectUrl.java ?", "bodyHTML": "<p dir=\"auto\">Shall the two files <code>PresignedGetObject.java</code> and <code>PresignedPutObject.java</code> be merged into a single example file called <code>GetPresignedObjectUrl.java</code> ?</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T15:05:59Z", "path": "examples/PresignedGetObject.java", "diffHunk": "@@ -40,8 +41,9 @@ public static void main(String[] args)\n       // Get presigned URL string to download 'my-objectname' in 'my-bucketname' and its life time\n       // is one day.\n       String url =\n-          minioClient.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          minioClient.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNjgwNQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431216805", "body": "```suggestion\r\n      System.out.println(\"Test: \" + methodName);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"Test: presigned get object: \" + methodName);\n          \n          \n            \n                  System.out.println(\"Test: \" + methodName);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test: <span class=\"x x-first x-last\">presigned get object: </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> methodName);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> methodName);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T15:10:16Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2174,10 +2174,11 @@ public static void removeIncompleteUploads_test() throws Exception {\n     }\n   }\n \n-  /** public String presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test1() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedGetObject(PresignedGetObjectArgs args)\");\n+      System.out.println(\"Test: presigned get object: \" + methodName);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxODkwNg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431218906", "body": "The second argument is supposed to be the arguments passed to the method. So either pass `null` or actual values from the args.", "bodyText": "The second argument is supposed to be the arguments passed to the method. So either pass null or actual values from the args.", "bodyHTML": "<p dir=\"auto\">The second argument is supposed to be the arguments passed to the method. So either pass <code>null</code> or actual values from the args.</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T15:13:08Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMDM2Ng==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431220366", "body": "```suggestion\r\n    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\r\n    String args = \"expiry: 3600 sec\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n          \n          \n            \n                String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n          \n          \n            \n                String args = \"expiry: 3600 sec\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"2200\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">String</span> methodName <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>getPresignedObjectUrl(GetPresignedObjectUrlArgs args)<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"2200\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">String</span> methodName <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>getPresignedObjectUrl(GetPresignedObjectUrlArgs args)<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"2201\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">String</span> args <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>expiry: 3600 sec<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T15:14:55Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test2() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTA3Mw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221073", "body": "```suggestion\r\n      System.out.println(\"Test: \" + methodName + \" with \" + args);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"Test: presigned get object with expiry: \" + methodName);\n          \n          \n            \n                  System.out.println(\"Test: \" + methodName + \" with \" + args);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test: <span class=\"x x-first x-last\">presigned get object with expiry: </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"x x-first x-last\">methodName</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test: <span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> methodName </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\"> with </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"x x-first x-last\">args</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T15:15:52Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2193,31 +2194,30 @@ public static void presignedGetObject_test1() throws Exception {\n       }\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n \n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n \n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedGetObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned get object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test2() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: with expiry: presignedGetObject(PresignedGetObjectArgs args)\");\n+      System.out.println(\"Test: presigned get object with expiry: \" + methodName);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTM4OQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221389", "body": "```suggestion\r\n      mintSuccessLog(methodName, args, startTime);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n          \n          \n            \n                  mintSuccessLog(methodName, args, startTime);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      mintSuccessLog(methodName, <span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">presigned get object expiry :3600 sec </span><span class=\"pl-pds x x-last\">\"</span></span>, startTime);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      mintSuccessLog(methodName, <span class=\"x x-first x-last\">args</span>, startTime);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T15:16:19Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMTU4MQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431221581", "body": "```suggestion\r\n      handleException(methodName, args, startTime, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);\n          \n          \n            \n                  handleException(methodName, args, startTime, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      handleException(methodName, <span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">presigned get object expiry :3600 sec </span><span class=\"pl-pds x x-last\">\"</span></span>, startTime, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      handleException(methodName, <span class=\"x x-first x-last\">args</span>, startTime, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anjalshireesh", "createdAt": "2020-05-27T15:16:35Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec\",\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMjU5NQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431222595", "body": "Please add an `args` variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "bodyText": "Please add an args variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "bodyHTML": "<p dir=\"auto\">Please add an <code>args</code> variable similar to the previous suggestions and use it in the logging / exception-handling method calls.</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T15:17:55Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2244,24 +2245,17 @@ public static void presignedGetObject_test2() throws Exception {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\", \"expiry :3600 sec \", startTime);\n+      mintSuccessLog(methodName, \"presigned get object expiry :3600 sec \", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec\",\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned get object expiry :3600 sec \", startTime, e);\n     }\n   }\n \n-  /** public String presignedGetObject(PresignedGetObjectArgs args). */\n-  public static void presignedGetObject_test3() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test3() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMzMyNg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431223326", "body": "The second argument value doesn't make sense for `args`", "bodyText": "The second argument value doesn't make sense for args", "bodyHTML": "<p dir=\"auto\">The second argument value doesn't make sense for <code>args</code></p>", "author": "anjalshireesh", "createdAt": "2020-05-27T15:18:59Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2280,89 +2274,84 @@ public static void presignedGetObject_test3() throws Exception {\n       reqParams.put(\"response-content-type\", \"application/json\");\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n                   .bucket(bucketName)\n                   .object(objectName)\n                   .expires(3600)\n-                  .params(reqParams)\n+                  .extraQueryParams(reqParams)\n                   .build());\n+\n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n       mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+      handleException(\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+          e);\n     }\n   }\n \n-  /** public String presignedPutObject(PresignedPutObjectArgs). */\n-  public static void presignedPutObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test4() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedPutObject(PresignedPutObjectArgs args)\");\n+      System.out.println(\"Test: presigned put object: \" + methodName);\n     }\n \n     long startTime = System.currentTimeMillis();\n     try {\n       String objectName = getRandomName();\n       String urlString =\n-          client.presignedPutObject(\n-              PresignedPutObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.PUT)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n       byte[] data = \"hello, world\".getBytes(StandardCharsets.UTF_8);\n       writeObject(urlString, data);\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedPutObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned put object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedPutObject(PresignedPutObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned put object\", startTime, e);", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIyMzcwMg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r431223702", "body": "Please add an `args` variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "bodyText": "Please add an args variable similar to the previous suggestions and use it in the logging / exception-handling method calls.", "bodyHTML": "<p dir=\"auto\">Please add an <code>args</code> variable similar to the previous suggestions and use it in the logging / exception-handling method calls.</p>", "author": "anjalshireesh", "createdAt": "2020-05-27T15:19:33Z", "path": "functional/FunctionalTest.java", "diffHunk": "@@ -2280,89 +2274,84 @@ public static void presignedGetObject_test3() throws Exception {\n       reqParams.put(\"response-content-type\", \"application/json\");\n \n       String urlString =\n-          client.presignedGetObject(\n-              PresignedGetObjectArgs.builder()\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.GET)\n                   .bucket(bucketName)\n                   .object(objectName)\n                   .expires(3600)\n-                  .params(reqParams)\n+                  .extraQueryParams(reqParams)\n                   .build());\n+\n       byte[] outBytes = readObject(urlString);\n       if (!Arrays.equals(inBytes, outBytes)) {\n         throw new Exception(\"object content differs\");\n       }\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n       mintSuccessLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedGetObject(PresignedGetObjectArgs args)\",\n-          \"expiry : 3600 sec, reqParams : response-content-type as application/json\",\n+      handleException(\n+          methodName,\n+          \"presigned get object expiry : 3600 sec, reqParams : response-content-type as application/json\",\n           startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+          e);\n     }\n   }\n \n-  /** public String presignedPutObject(PresignedPutObjectArgs). */\n-  public static void presignedPutObject_test1() throws Exception {\n+  /** public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test4() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";\n     if (!mintEnv) {\n-      System.out.println(\"Test: presignedPutObject(PresignedPutObjectArgs args)\");\n+      System.out.println(\"Test: presigned put object: \" + methodName);\n     }\n \n     long startTime = System.currentTimeMillis();\n     try {\n       String objectName = getRandomName();\n       String urlString =\n-          client.presignedPutObject(\n-              PresignedPutObjectArgs.builder().bucket(bucketName).object(objectName).build());\n+          client.getPresignedObjectUrl(\n+              GetPresignedObjectUrlArgs.builder()\n+                  .method(Method.PUT)\n+                  .bucket(bucketName)\n+                  .object(objectName)\n+                  .build());\n       byte[] data = \"hello, world\".getBytes(StandardCharsets.UTF_8);\n       writeObject(urlString, data);\n       client.removeObject(RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build());\n-      mintSuccessLog(\"presignedPutObject(String bucketName, String objectName)\", null, startTime);\n+      mintSuccessLog(methodName, \"presigned put object\", startTime);\n     } catch (Exception e) {\n-      mintFailedLog(\n-          \"presignedPutObject(PresignedPutObjectArgs args)\",\n-          null,\n-          startTime,\n-          null,\n-          e.toString() + \" >>> \" + Arrays.toString(e.getStackTrace()));\n-      throw e;\n+      handleException(methodName, \"presigned put object\", startTime, e);\n     }\n   }\n \n-  /** Test: presignedPutObject(PresignedPutObjectArgs args)). */\n-  public static void presignedPutObject_test2() throws Exception {\n+  /** Test: getPresignedObjectUrl(GetPresignedObjectUrlArgs args). */\n+  public static void getPresignedObjectUrl_test5() throws Exception {\n+    String methodName = \"getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\";", "originalCommit": "b551739f071b61e3f6aa7e5b2ab16b2ef627e9fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abade60a5121b92a37805a238d8badbf63c83623", "url": "https://github.com/minio/minio-java/commit/abade60a5121b92a37805a238d8badbf63c83623", "message": "Address shireesh's review comment", "committedDate": "2020-06-03T12:57:31Z", "type": "forcePushed"}, {"oid": "b453ddae1ec0e4ba0a7a1290a0b50f077c52532c", "url": "https://github.com/minio/minio-java/commit/b453ddae1ec0e4ba0a7a1290a0b50f077c52532c", "message": "Address shireesh's review comment", "committedDate": "2020-06-03T13:18:48Z", "type": "forcePushed"}, {"oid": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "url": "https://github.com/minio/minio-java/commit/01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "message": "Address shireesh's review comment", "committedDate": "2020-06-03T13:25:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMDcyNA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434600724", "body": "1. Please change `expires` to `expiry` everywhere\r\n2. You could use `int` itself.", "bodyText": "Please change expires to expiry everywhere\nYou could use int itself.", "bodyHTML": "<ol dir=\"auto\">\n<li>Please change <code>expires</code> to <code>expiry</code> everywhere</li>\n<li>You could use <code>int</code> itself.</li>\n</ol>", "author": "balamurugana", "createdAt": "2020-06-03T14:15:22Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzE1NQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434603155", "body": "Use `BaseArgs.validateNotNull()`", "bodyText": "Use BaseArgs.validateNotNull()", "bodyHTML": "<p dir=\"auto\">Use <code>BaseArgs.validateNotNull()</code></p>", "author": "balamurugana", "createdAt": "2020-06-03T14:18:30Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwMzY4OA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434603688", "body": "`null` is a valid value which means use default expiry time.", "bodyText": "null is a valid value which means use default expiry time.", "bodyHTML": "<p dir=\"auto\"><code>null</code> is a valid value which means use default expiry time.</p>", "author": "balamurugana", "createdAt": "2020-06-03T14:19:14Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateExpiry(Integer expires) {\n+      if (expires == null) {", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNTk2NQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434605965", "body": "You could use `int` and error if out of range.", "bodyText": "You could use int and error if out of range.", "bodyHTML": "<p dir=\"auto\">You could use <code>int</code> and error if out of range.</p>", "author": "balamurugana", "createdAt": "2020-06-03T14:22:14Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  // set default expiry as 7 days if not specified.\n+  private Integer expires = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public Integer expires() {\n+    return expires;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      if (method == null) {\n+        throw new IllegalArgumentException(\"mull method for presigned url\");\n+      }\n+    }\n+\n+    private void validateExpiry(Integer expires) {\n+      if (expires == null) {\n+        throw new IllegalArgumentException(\"null expiry for presigned url\");\n+      }\n+      if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }\n+    }\n+\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      validateMethod(method);\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expires(Integer expires) {", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwNzA1Nw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434607057", "body": "Make this constant public so that it is accessible to everyone and keep it as first definition.", "bodyText": "Make this constant public so that it is accessible to everyone and keep it as first definition.", "bodyHTML": "<p dir=\"auto\">Make this constant public so that it is accessible to everyone and keep it as first definition.</p>", "author": "balamurugana", "createdAt": "2020-06-03T14:23:35Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+  private Method method;\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  private static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYwODMxNA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434608314", "body": "Use `EMPTY_BODY`", "bodyText": "Use EMPTY_BODY", "bodyHTML": "<p dir=\"auto\">Use <code>EMPTY_BODY</code></p>", "author": "balamurugana", "createdAt": "2020-06-03T14:25:15Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2651,29 +2653,73 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           ServerException, XmlParserException {\n-    // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-      throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n-    }\n+\n+    return getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .extraQueryParams(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(\"my-objectname\")\n+   *             .expires(24 * 60 * 60)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   * @throws ServerException\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException, ServerException {\n+    checkArgs(args);\n \n     byte[] body = null;\n-    if (method == Method.PUT || method == Method.POST) {\n+    if (args.method() == Method.PUT || args.method() == Method.POST) {\n       body = new byte[0];", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYxMDEzMg==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r434610132", "body": "You could use `extraQueryParams` directly than taking a copy.", "bodyText": "You could use extraQueryParams directly than taking a copy.", "bodyHTML": "<p dir=\"auto\">You could use <code>extraQueryParams</code> directly than taking a copy.</p>", "author": "balamurugana", "createdAt": "2020-06-03T14:27:36Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -2651,29 +2653,73 @@ public String getPresignedObjectUrl(\n           InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n           InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n           ServerException, XmlParserException {\n-    // Validate input.\n-    if (expires < 1 || expires > DEFAULT_EXPIRY_TIME) {\n-      throw new InvalidExpiresRangeException(\n-          expires, \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n-    }\n+\n+    return getPresignedObjectUrl(\n+        GetPresignedObjectUrlArgs.builder()\n+            .bucket(bucketName)\n+            .object(objectName)\n+            .method(method)\n+            .expires(expires)\n+            .extraQueryParams(reqParams)\n+            .build());\n+  }\n+\n+  /**\n+   * Gets presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   *\n+   * <pre>Example:{@code\n+   * // Get presigned URL of an object for HTTP method, expiry time and custom request parameters.\n+   * String url =\n+   *     minioClient.getPresignedObjectUrl(\n+   *         GetPresignedObjectUrlArgs.builder()\n+   *             .method(Method.DELETE)\n+   *             .bucket(\"my-bucketname\")\n+   *             .object(\"my-objectname\")\n+   *             .expires(24 * 60 * 60)\n+   *             .build());\n+   * System.out.println(url);\n+   * }</pre>\n+   *\n+   * @param args {@link GetPresignedObjectUrlArgs} object.\n+   * @return String - URL string.\n+   * @throws ErrorResponseException thrown to indicate S3 service returned an error response.\n+   * @throws IllegalArgumentException throws to indicate invalid argument passed.\n+   * @throws InsufficientDataException thrown to indicate not enough data available in InputStream.\n+   * @throws InternalException thrown to indicate internal library error.\n+   * @throws InvalidBucketNameException thrown to indicate invalid bucket name passed.\n+   * @throws InvalidExpiresRangeException thrown to indicate invalid expiry duration passed.\n+   * @throws InvalidKeyException thrown to indicate missing of HMAC SHA-256 library.\n+   * @throws InvalidResponseException thrown to indicate S3 service returned invalid or no error\n+   *     response.\n+   * @throws IOException thrown to indicate I/O error on S3 operation.\n+   * @throws NoSuchAlgorithmException thrown to indicate missing of MD5 or SHA-256 digest library.\n+   * @throws XmlParserException thrown to indicate XML parsing error.\n+   * @throws ServerException\n+   */\n+  public String getPresignedObjectUrl(GetPresignedObjectUrlArgs args)\n+      throws ErrorResponseException, IllegalArgumentException, InsufficientDataException,\n+          InternalException, InvalidBucketNameException, InvalidExpiresRangeException,\n+          InvalidKeyException, InvalidResponseException, IOException, NoSuchAlgorithmException,\n+          XmlParserException, ServerException {\n+    checkArgs(args);\n \n     byte[] body = null;\n-    if (method == Method.PUT || method == Method.POST) {\n+    if (args.method() == Method.PUT || args.method() == Method.POST) {\n       body = new byte[0];\n     }\n \n     Multimap<String, String> queryParamMap = null;\n-    if (reqParams != null) {\n+    if (args.extraQueryParams() != null) {", "originalCommit": "01a3ac63d729ae6b94d713af41c1d0c3b4f7113c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "67114eda42b073bf2bd197d6aac6f5f318885082", "url": "https://github.com/minio/minio-java/commit/67114eda42b073bf2bd197d6aac6f5f318885082", "message": "Add arg builder to getObjectUrl, getPresignedObjectUrl, presignedGetObject, presignedPutObject", "committedDate": "2020-06-04T15:31:28Z", "type": "commit"}, {"oid": "aacebba443ddda1717009a10bbe0f1d806d040d6", "url": "https://github.com/minio/minio-java/commit/aacebba443ddda1717009a10bbe0f1d806d040d6", "message": "address review comments", "committedDate": "2020-06-04T15:31:28Z", "type": "commit"}, {"oid": "fc81e7224b376f346000797b3d4654f35cad03e1", "url": "https://github.com/minio/minio-java/commit/fc81e7224b376f346000797b3d4654f35cad03e1", "message": "Address shireesh's review comment", "committedDate": "2020-06-04T15:33:41Z", "type": "commit"}, {"oid": "b80a5953cb384caaa1490d4640642a34774aae24", "url": "https://github.com/minio/minio-java/commit/b80a5953cb384caaa1490d4640642a34774aae24", "message": "Address Bala's comment", "committedDate": "2020-06-04T21:31:26Z", "type": "forcePushed"}, {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "url": "https://github.com/minio/minio-java/commit/53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "message": "Address Bala's comment", "committedDate": "2020-06-04T21:35:29Z", "type": "commit"}, {"oid": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "url": "https://github.com/minio/minio-java/commit/53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "message": "Address Bala's comment", "committedDate": "2020-06-04T21:35:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzA1Nw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667057", "body": "1. Remove above new line and add new line here to differentiate the constant.\r\n2. Please use `TimeUnit.DAYS.toSeconds(7)` for readability.", "bodyText": "Remove above new line and add new line here to differentiate the constant.\nPlease use TimeUnit.DAYS.toSeconds(7) for readability.", "bodyHTML": "<ol dir=\"auto\">\n<li>Remove above new line and add new line here to differentiate the constant.</li>\n<li>Please use <code>TimeUnit.DAYS.toSeconds(7)</code> for readability.</li>\n</ol>", "author": "balamurugana", "createdAt": "2020-06-05T03:11:28Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;", "originalCommit": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzQ5MA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667490", "body": "Please add `validate(GetPresignedObjectUrl args)`, otherwise `GetPresignedObjectUrl.builder().build()` would succeed with `null` method.", "bodyText": "Please add validate(GetPresignedObjectUrl args), otherwise GetPresignedObjectUrl.builder().build() would succeed with null method.", "bodyHTML": "<p dir=\"auto\">Please add <code>validate(GetPresignedObjectUrl args)</code>, otherwise <code>GetPresignedObjectUrl.builder().build()</code> would succeed with <code>null</code> method.</p>", "author": "balamurugana", "createdAt": "2020-06-05T03:13:20Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {", "originalCommit": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzYzNA==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435667634", "body": "1. Replace `expires` to `expiry`\r\n2. We could have more meaningful message like `\"expiry must be minimum 1 second to maximum \" + TimeUnit.SECONDS.toDays(DEFAULT_EXPIRY_TIME) + \" days\"`", "bodyText": "Replace expires to expiry\nWe could have more meaningful message like \"expiry must be minimum 1 second to maximum \" + TimeUnit.SECONDS.toDays(DEFAULT_EXPIRY_TIME) + \" days\"", "bodyHTML": "<ol dir=\"auto\">\n<li>Replace <code>expires</code> to <code>expiry</code></li>\n<li>We could have more meaningful message like <code>\"expiry must be minimum 1 second to maximum \" + TimeUnit.SECONDS.toDays(DEFAULT_EXPIRY_TIME) + \" days\"</code></li>\n</ol>", "author": "balamurugana", "createdAt": "2020-06-05T03:13:51Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      validateNotNull(method, \"method\");\n+    }\n+\n+    private void validateExpiry(int expiry) {\n+      if (expiry < 1 || expiry > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);", "originalCommit": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2ODIyNw==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435668227", "body": "You could do `return expiry((int) unit.toSeconds(duration));`", "bodyText": "You could do return expiry((int) unit.toSeconds(duration));", "bodyHTML": "<p dir=\"auto\">You could do <code>return expiry((int) unit.toSeconds(duration));</code></p>", "author": "balamurugana", "createdAt": "2020-06-05T03:16:18Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * MinIO Java SDK for Amazon S3 Compatible Cloud Storage, (C) 2020 MinIO, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.minio;\n+\n+import io.minio.http.Method;\n+import java.util.concurrent.TimeUnit;\n+\n+/** Argument class of MinioClient.getPresignedObjectUrl(). */\n+public class GetPresignedObjectUrlArgs extends ObjectArgs {\n+\n+  // default expiration for a presigned URL is 7 days in seconds\n+  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  private Method method;\n+  // set default expiry as 7 days if not specified.\n+  private int expiry = DEFAULT_EXPIRY_TIME;\n+\n+  public Method method() {\n+    return method;\n+  }\n+\n+  public int expiry() {\n+    return expiry;\n+  }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n+\n+  /** Argument builder of {@link GetPresignedObjectUrlArgs}. */\n+  public static final class Builder extends ObjectArgs.Builder<Builder, GetPresignedObjectUrlArgs> {\n+    private void validateMethod(Method method) {\n+      validateNotNull(method, \"method\");\n+    }\n+\n+    private void validateExpiry(int expiry) {\n+      if (expiry < 1 || expiry > DEFAULT_EXPIRY_TIME) {\n+        throw new IllegalArgumentException(\n+            \"expires must be in range of 1 to \" + DEFAULT_EXPIRY_TIME);\n+      }\n+    }\n+\n+    /* method HTTP {@link Method} to generate presigned URL. */\n+    public Builder method(Method method) {\n+      validateMethod(method);\n+      operations.add(args -> args.method = method);\n+      return this;\n+    }\n+\n+    /*expires Expiry in seconds; defaults to 7 days. */\n+    public Builder expiry(int expiry) {\n+      validateExpiry(expiry);\n+      operations.add(args -> args.expiry = expiry);\n+      return this;\n+    }\n+\n+    public Builder expiry(int duration, TimeUnit unit) {\n+      int expiry = (int) TimeUnit.SECONDS.convert(duration, unit);", "originalCommit": "53e43be7c628b34155f8c7aaff05bda91b2cd0bf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1OTI2NQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435759265", "body": "`validateExpiry()` is not needed here because `args.expiry` has default value and no way to set invalid value to this.", "bodyText": "validateExpiry() is not needed here because args.expiry has default value and no way to set invalid value to this.", "bodyHTML": "<p dir=\"auto\"><code>validateExpiry()</code> is not needed here because <code>args.expiry</code> has default value and no way to set invalid value to this.</p>", "author": "balamurugana", "createdAt": "2020-06-05T08:10:43Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -68,10 +70,14 @@ public Builder expiry(int expiry) {\n     }\n \n     public Builder expiry(int duration, TimeUnit unit) {\n-      int expiry = (int) TimeUnit.SECONDS.convert(duration, unit);\n-      validateExpiry(expiry);\n-      operations.add(args -> args.expiry = expiry);\n-      return this;\n+      return expiry((int) unit.toSeconds(duration));\n+    }\n+\n+    @Override\n+    protected void validate(GetPresignedObjectUrlArgs args) {\n+      super.validate(args);\n+      validateMethod(args.method);\n+      validateExpiry(args.expiry);", "originalCommit": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1OTUzOQ==", "url": "https://github.com/minio/minio-java/pull/948#discussion_r435759539", "body": "Now this comment can be removed.", "bodyText": "Now this comment can be removed.", "bodyHTML": "<p dir=\"auto\">Now this comment can be removed.</p>", "author": "balamurugana", "createdAt": "2020-06-05T08:11:16Z", "path": "api/src/main/java/io/minio/GetPresignedObjectUrlArgs.java", "diffHunk": "@@ -21,9 +21,9 @@\n \n /** Argument class of MinioClient.getPresignedObjectUrl(). */\n public class GetPresignedObjectUrlArgs extends ObjectArgs {\n-\n   // default expiration for a presigned URL is 7 days in seconds\n-  public static final int DEFAULT_EXPIRY_TIME = 7 * 24 * 3600;\n+  public static final int DEFAULT_EXPIRY_TIME = (int) TimeUnit.DAYS.toSeconds(7);\n+\n   private Method method;\n   // set default expiry as 7 days if not specified.", "originalCommit": "507c1d56a102f5edc8bb5081d6cfbde8d8033bc0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "881eb2fbe866a9762c924a41be96326d53676355", "url": "https://github.com/minio/minio-java/commit/881eb2fbe866a9762c924a41be96326d53676355", "message": "Address more comments", "committedDate": "2020-06-05T08:39:41Z", "type": "forcePushed"}, {"oid": "10dbc544795cd60e85d136163c3cb0bb50396ba1", "url": "https://github.com/minio/minio-java/commit/10dbc544795cd60e85d136163c3cb0bb50396ba1", "message": "Address more comments", "committedDate": "2020-06-05T08:42:40Z", "type": "forcePushed"}, {"oid": "eb39cf1d8a3f6581f4c02158231e33e937680fba", "url": "https://github.com/minio/minio-java/commit/eb39cf1d8a3f6581f4c02158231e33e937680fba", "message": "Address more comments", "committedDate": "2020-06-05T08:51:41Z", "type": "commit"}, {"oid": "eb39cf1d8a3f6581f4c02158231e33e937680fba", "url": "https://github.com/minio/minio-java/commit/eb39cf1d8a3f6581f4c02158231e33e937680fba", "message": "Address more comments", "committedDate": "2020-06-05T08:51:41Z", "type": "forcePushed"}]}