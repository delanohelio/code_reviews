{"pr_number": 1136, "pr_title": "Add S3 API execution trace to MinioException", "pr_author": "balamurugana", "pr_createdAt": "2020-12-12T14:14:56Z", "pr_url": "https://github.com/minio/minio-java/pull/1136", "timeline": [{"oid": "f9223765214c7f6cda2234530348ee8433761719", "url": "https://github.com/minio/minio-java/commit/f9223765214c7f6cda2234530348ee8433761719", "message": "Add S3 API execution trace to MinioException.\n\nThis is useful to debug issues further and find root cause.", "committedDate": "2020-12-17T01:54:37Z", "type": "forcePushed"}, {"oid": "404a91871c198ac5f844b297ec776b98c868955c", "url": "https://github.com/minio/minio-java/commit/404a91871c198ac5f844b297ec776b98c868955c", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2020-12-17T02:01:55Z", "type": "forcePushed"}, {"oid": "ca36f63810e07d6ba0cd98a63817cb1e43812e6c", "url": "https://github.com/minio/minio-java/commit/ca36f63810e07d6ba0cd98a63817cb1e43812e6c", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2020-12-17T02:38:51Z", "type": "forcePushed"}, {"oid": "f167ac459a236e529bf11b470c4be390e7661c86", "url": "https://github.com/minio/minio-java/commit/f167ac459a236e529bf11b470c4be390e7661c86", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2020-12-18T03:07:55Z", "type": "forcePushed"}, {"oid": "e33cf40ed8efa0ad7c05928c4575c5497b857aca", "url": "https://github.com/minio/minio-java/commit/e33cf40ed8efa0ad7c05928c4575c5497b857aca", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2020-12-23T02:08:00Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNTc1Ng==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r547725756", "body": "https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html\r\n\r\naccording to AWS S3 and MinIO the max size is 20 KiB", "bodyText": "https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html\naccording to AWS S3 and MinIO the max size is 20 KiB", "bodyHTML": "<p dir=\"auto\"><a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html\" rel=\"nofollow\">https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html</a></p>\n<p dir=\"auto\">according to AWS S3 and MinIO the max size is 20 KiB</p>", "author": "kannappanr", "createdAt": "2020-12-23T06:54:54Z", "path": "api/src/main/java/io/minio/errors/BucketPolicyTooLargeException.java", "diffHunk": "@@ -16,23 +16,10 @@\n \n package io.minio.errors;\n \n-/** Thrown to indicate that given bucket name is not valid. */\n+/** Thrown to indicate that received bucket policy is larger than 12KiB size. */", "originalCommit": "e33cf40ed8efa0ad7c05928c4575c5497b857aca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc1MzI4Mw==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r547753283", "bodyText": "Looks like it is increased from 12KB to 20KB", "author": "balamurugana", "createdAt": "2020-12-23T07:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNTc1Ng=="}], "type": "inlineReview"}, {"oid": "92d9cb241f8af0ce8032addd6c8bb97350b300c6", "url": "https://github.com/minio/minio-java/commit/92d9cb241f8af0ce8032addd6c8bb97350b300c6", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2020-12-23T07:31:15Z", "type": "forcePushed"}, {"oid": "656f94d90b8ad03861ae9c70552bf5e393193572", "url": "https://github.com/minio/minio-java/commit/656f94d90b8ad03861ae9c70552bf5e393193572", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2021-01-03T11:46:41Z", "type": "commit"}, {"oid": "656f94d90b8ad03861ae9c70552bf5e393193572", "url": "https://github.com/minio/minio-java/commit/656f94d90b8ad03861ae9c70552bf5e393193572", "message": "Add S3 API execution trace to MinioException\n\nThis is useful to debug issues further and to find root cause.", "committedDate": "2021-01-03T11:46:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4Njg4OQ==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551786889", "body": "```suggestion\r\n  private static final Set<String> TRACE_QUERY_PARAMS =\r\n    ImmutableSet.of(\"retention\", \"legal-hold\", \"tagging\", UPLOAD_ID);\r\n```\r\n\r\nwe can use `ImmutableSet` from `guava` library for a simpler initialization of the set.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final Set<String> TRACE_QUERY_PARAMS = new HashSet<>();\n          \n          \n            \n            \n          \n          \n            \n              static {\n          \n          \n            \n                TRACE_QUERY_PARAMS.add(\"retention\");\n          \n          \n            \n                TRACE_QUERY_PARAMS.add(\"legal-hold\");\n          \n          \n            \n                TRACE_QUERY_PARAMS.add(\"tagging\");\n          \n          \n            \n                TRACE_QUERY_PARAMS.add(UPLOAD_ID);\n          \n          \n            \n              }\n          \n          \n            \n              private static final Set<String> TRACE_QUERY_PARAMS =\n          \n          \n            \n                ImmutableSet.of(\"retention\", \"legal-hold\", \"tagging\", UPLOAD_ID);\n          \n      \n    \n    \n  \n\nwe can use ImmutableSet from guava library for a simpler initialization of the set.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"233\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">Set&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashSet&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"234\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"235\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">static</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"236\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span><span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>retention<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"237\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span><span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>legal-hold<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"238\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span><span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tagging<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"239\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span><span class=\"pl-k\">.</span>add(<span class=\"pl-c1\">UPLOAD_ID</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"240\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"233\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">Set&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">TRACE_QUERY_PARAMS</span> <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"234\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">ImmutableSet</span><span class=\"pl-k\">.</span>of(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>retention<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>legal-hold<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tagging<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">UPLOAD_ID</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">we can use <code>ImmutableSet</code> from <code>guava</code> library for a simpler initialization of the set.</p>", "author": "anjalshireesh", "createdAt": "2021-01-05T08:38:01Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -229,6 +230,15 @@\n     standardHeaders.add(\"range\");\n   }\n \n+  private static final Set<String> TRACE_QUERY_PARAMS = new HashSet<>();\n+\n+  static {\n+    TRACE_QUERY_PARAMS.add(\"retention\");\n+    TRACE_QUERY_PARAMS.add(\"legal-hold\");\n+    TRACE_QUERY_PARAMS.add(\"tagging\");\n+    TRACE_QUERY_PARAMS.add(UPLOAD_ID);\n+  }", "originalCommit": "656f94d90b8ad03861ae9c70552bf5e393193572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkyNjk2NA==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551926964", "bodyText": "This pattern needs to be fixed across code base in a different PR", "author": "balamurugana", "createdAt": "2021-01-05T13:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4Njg4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1NzI2Nw==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r552057267", "bodyText": "May not be a bad idea to change only in this place as it's a new code being added in this PR and later fix the other instances.", "author": "anjalshireesh", "createdAt": "2021-01-05T16:50:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4Njg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNjMyNQ==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551916325", "body": "Can be extracted into a method, something like `initTraceForRequest(request)` or `traceRequestInfo(request)`", "bodyText": "Can be extracted into a method, something like initTraceForRequest(request) or traceRequestInfo(request)", "bodyHTML": "<p dir=\"auto\">Can be extracted into a method, something like <code>initTraceForRequest(request)</code> or <code>traceRequestInfo(request)</code></p>", "author": "anjalshireesh", "createdAt": "2021-01-05T12:58:50Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -618,25 +628,28 @@ protected Response execute(\n               request.header(\"x-amz-content-sha256\"));\n     }\n \n-    if (this.traceStream != null) {\n-      this.traceStream.println(\"---------START-HTTP---------\");\n-      String encodedPath = request.url().encodedPath();\n-      String encodedQuery = request.url().encodedQuery();\n-      if (encodedQuery != null) {\n-        encodedPath += \"?\" + encodedQuery;\n-      }\n-      this.traceStream.println(request.method() + \" \" + encodedPath + \" HTTP/1.1\");\n-      this.traceStream.println(\n-          request\n-              .headers()\n-              .toString()\n-              .replaceAll(\"Signature=([0-9a-f]+)\", \"Signature=*REDACTED*\")\n-              .replaceAll(\"Credential=([^/]+)\", \"Credential=*REDACTED*\"));\n-      if (traceRequestBody) {\n-        this.traceStream.println(new String((byte[]) body, StandardCharsets.UTF_8));\n-      }\n+    StringBuilder traceBuilder = new StringBuilder();\n+    traceBuilder.append(\"---------START-HTTP---------\\n\");\n+    String encodedPath = request.url().encodedPath();\n+    String encodedQuery = request.url().encodedQuery();\n+    if (encodedQuery != null) {\n+      encodedPath += \"?\" + encodedQuery;\n+    }\n+    traceBuilder.append(request.method()).append(\" \").append(encodedPath).append(\" HTTP/1.1\\n\");\n+    traceBuilder.append(\n+        request\n+            .headers()\n+            .toString()\n+            .replaceAll(\"Signature=([0-9a-f]+)\", \"Signature=*REDACTED*\")\n+            .replaceAll(\"Credential=([^/]+)\", \"Credential=*REDACTED*\"));\n+    if (traceRequestBody) {\n+      traceBuilder.append(\"\\n\").append(new String((byte[]) body, StandardCharsets.UTF_8));\n     }\n \n+    PrintWriter traceStream = this.traceStream;\n+    if (traceStream != null) traceStream.println(traceBuilder.toString());\n+    traceBuilder.append(\"\\n\");", "originalCommit": "656f94d90b8ad03861ae9c70552bf5e393193572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk1NzE5NQ==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551957195", "bodyText": "Done", "author": "balamurugana", "createdAt": "2021-01-05T14:15:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNjMyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNjg1MA==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551916850", "body": "Can be extracted into a method, say `addResponseInfoToTrace(response)` or `traceResponseInfo(response)`", "bodyText": "Can be extracted into a method, say addResponseInfoToTrace(response) or traceResponseInfo(response)", "bodyHTML": "<p dir=\"auto\">Can be extracted into a method, say <code>addResponseInfoToTrace(response)</code> or <code>traceResponseInfo(response)</code></p>", "author": "anjalshireesh", "createdAt": "2021-01-05T12:59:51Z", "path": "api/src/main/java/io/minio/MinioClient.java", "diffHunk": "@@ -645,15 +658,27 @@ protected Response execute(\n     }\n \n     Response response = httpClient.newCall(request).execute();\n-    if (this.traceStream != null) {\n-      this.traceStream.println(\n-          response.protocol().toString().toUpperCase(Locale.US) + \" \" + response.code());\n-      this.traceStream.println(response.headers());\n-    }\n+    String trace =\n+        response.protocol().toString().toUpperCase(Locale.US)\n+            + \" \"\n+            + response.code()\n+            + \"\\n\"\n+            + response.headers();\n+    traceBuilder.append(trace).append(\"\\n\");\n+    if (traceStream != null) traceStream.println(trace);", "originalCommit": "656f94d90b8ad03861ae9c70552bf5e393193572", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk1Nzg1MA==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r551957850", "bodyText": "I think it is not useful for the one liner.", "author": "balamurugana", "createdAt": "2021-01-05T14:16:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNjg1MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1ODY1Mw==", "url": "https://github.com/minio/minio-java/pull/1136#discussion_r552058653", "bodyText": "Sometimes it makes sense to have even single-statement methods if it improves readability. In this instance, there are three statements and not one.", "author": "anjalshireesh", "createdAt": "2021-01-05T16:52:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxNjg1MA=="}], "type": "inlineReview"}, {"oid": "919eda90d9ff1c4b526bd6b615cfd17f33465e2e", "url": "https://github.com/minio/minio-java/commit/919eda90d9ff1c4b526bd6b615cfd17f33465e2e", "message": "address review comments", "committedDate": "2021-01-05T14:16:36Z", "type": "commit"}]}