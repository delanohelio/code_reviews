{"pr_number": 4098, "pr_title": "Prevents plastanium conveyor unload exploit", "pr_author": "Quezler", "pr_createdAt": "2020-12-24T09:08:19Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/4098", "timeline": [{"oid": "65fddb2972137b0706c208a3c4fca779329ebdd6", "url": "https://github.com/Anuken/Mindustry/commit/65fddb2972137b0706c208a3c4fca779329ebdd6", "message": "Prevent unloaders from unloading plast loading dock", "committedDate": "2020-12-24T09:01:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTM1OA==", "url": "https://github.com/Anuken/Mindustry/pull/4098#discussion_r548549358", "body": "This should be an overridable `boolean` method instead of an instance variable, to be in line with how everything else is implemented.", "bodyText": "This should be an overridable boolean method instead of an instance variable, to be in line with how everything else is implemented.", "bodyHTML": "<p dir=\"auto\">This should be an overridable <code>boolean</code> method instead of an instance variable, to be in line with how everything else is implemented.</p>", "author": "Anuken", "createdAt": "2020-12-24T14:46:19Z", "path": "core/src/mindustry/entities/comp/BuildingComp.java", "diffHunk": "@@ -63,6 +63,7 @@\n     transient boolean enabled = true;\n     transient float enabledControlTime;\n     transient String lastAccessed;\n+    transient boolean unloadable = true;", "originalCommit": "65fddb2972137b0706c208a3c4fca779329ebdd6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MDQyNA==", "url": "https://github.com/Anuken/Mindustry/pull/4098#discussion_r548550424", "bodyText": "ok, though this was better for performance given how often its called and only for this single purpose atm, I'll get it changed \ud83d\udc4d", "author": "Quezler", "createdAt": "2020-12-24T14:51:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU0OTM1OA=="}], "type": "inlineReview"}, {"oid": "c89edfaf03abb1058210f600f4040054623fa2be", "url": "https://github.com/Anuken/Mindustry/commit/c89edfaf03abb1058210f600f4040054623fa2be", "message": "Use overridable boolean method unloadable instead", "committedDate": "2020-12-24T14:58:57Z", "type": "commit"}, {"oid": "8336ab07e9e2ee3bf0c6c1924da93358562d365b", "url": "https://github.com/Anuken/Mindustry/commit/8336ab07e9e2ee3bf0c6c1924da93358562d365b", "message": "Merge branch 'master' into loading-dock-loads\n\n# Conflicts:\n#\tcore/src/mindustry/world/blocks/distribution/StackConveyor.java", "committedDate": "2020-12-24T15:00:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1Mjk1Mg==", "url": "https://github.com/Anuken/Mindustry/pull/4098#discussion_r548552952", "body": "redundant check inside `Unloader.java` though, should this just be hardcoded to `true` or simply remove the block level check in unloader and route it all through this function?", "bodyText": "redundant check inside Unloader.java though, should this just be hardcoded to true or simply remove the block level check in unloader and route it all through this function?", "bodyHTML": "<p dir=\"auto\">redundant check inside <code>Unloader.java</code> though, should this just be hardcoded to <code>true</code> or simply remove the block level check in unloader and route it all through this function?</p>", "author": "Quezler", "createdAt": "2020-12-24T15:01:50Z", "path": "core/src/mindustry/entities/comp/BuildingComp.java", "diffHunk": "@@ -384,6 +384,10 @@ public byte version(){\n     //endregion\n     //region handler methods\n \n+    public boolean unloadable(){\n+        return block.unloadable;", "originalCommit": "8336ab07e9e2ee3bf0c6c1924da93358562d365b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODU1MzI0Mw==", "url": "https://github.com/Anuken/Mindustry/pull/4098#discussion_r548553243", "body": "press to implement the above comment, not sure if this will break on blocks with no building entity or something?\r\n\r\n```suggestion\r\n                    if(other.interactable(team) && other.unloadable() && other.block.hasItems\r\n```", "bodyText": "press to implement the above comment, not sure if this will break on blocks with no building entity or something?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if(other.interactable(team) && other.block.unloadable && other.unloadable() && other.block.hasItems\n          \n          \n            \n                                if(other.interactable(team) && other.unloadable() && other.block.hasItems", "bodyHTML": "<p dir=\"auto\">press to implement the above comment, not sure if this will break on blocks with no building entity or something?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span>(other<span class=\"pl-k\">.</span>interactable(team) <span class=\"pl-k\">&amp;&amp;</span> other<span class=\"pl-k\">.</span><span class=\"x x-first\">block</span><span class=\"pl-k x\">.</span><span class=\"x\">unloadable </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> other</span><span class=\"pl-k x x-last\">.</span>unloadable() <span class=\"pl-k\">&amp;&amp;</span> other<span class=\"pl-k\">.</span>block<span class=\"pl-k\">.</span>hasItems</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span>(other<span class=\"pl-k\">.</span>interactable(team) <span class=\"pl-k\">&amp;&amp;</span> other<span class=\"pl-k\">.</span>unloadable() <span class=\"pl-k\">&amp;&amp;</span> other<span class=\"pl-k\">.</span>block<span class=\"pl-k\">.</span>hasItems</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Quezler", "createdAt": "2020-12-24T15:03:21Z", "path": "core/src/mindustry/world/blocks/storage/Unloader.java", "diffHunk": "@@ -61,7 +61,7 @@ public void updateTile(){\n                     int pos = (offset + i) % proximity.size;\n                     var other = proximity.get(pos);\n \n-                    if(other.interactable(team) && other.block.unloadable && other.block.hasItems\n+                    if(other.interactable(team) && other.block.unloadable && other.unloadable() && other.block.hasItems", "originalCommit": "8336ab07e9e2ee3bf0c6c1924da93358562d365b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "39136a32676646603f73a24e4beece6d19edfd8a", "url": "https://github.com/Anuken/Mindustry/commit/39136a32676646603f73a24e4beece6d19edfd8a", "message": "unloadable -> canUnload", "committedDate": "2020-12-24T15:32:32Z", "type": "commit"}]}