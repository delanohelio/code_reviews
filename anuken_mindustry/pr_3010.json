{"pr_number": 3010, "pr_title": "Units payload.", "pr_author": "summetdev", "pr_createdAt": "2020-10-18T17:00:06Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/3010", "timeline": [{"oid": "8625ef09ccad287758bac212c5b4de67fd263378", "url": "https://github.com/Anuken/Mindustry/commit/8625ef09ccad287758bac212c5b4de67fd263378", "message": "Units payload", "committedDate": "2020-10-18T16:54:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NzM3NQ==", "url": "https://github.com/Anuken/Mindustry/pull/3010#discussion_r507187375", "body": "```suggestion\r\n                if(u instanceof Payloadc p){\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (u instanceof Payloadc p){\n          \n          \n            \n                            if(u instanceof Payloadc p){", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>(u <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Payloadc</span> p){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span>(u <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Payloadc</span> p){</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Anuken", "createdAt": "2020-10-18T17:06:11Z", "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -241,6 +241,11 @@ public static void payloadDropped(Unit unit, float x, float y){\n             pay.set(x, y);\n             pay.dropLastPayload();\n             pay.set(prevx, prevy);\n+            pay.controlling().each(u -> {\n+                if (u instanceof Payloadc p){", "originalCommit": "8625ef09ccad287758bac212c5b4de67fd263378", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NzQzNw==", "url": "https://github.com/Anuken/Mindustry/pull/3010#discussion_r507187437", "body": "This won't sync properly. You must use `Call.payloadDropped(...)` so positions are correct clientside.", "bodyText": "This won't sync properly. You must use Call.payloadDropped(...) so positions are correct clientside.", "bodyHTML": "<p dir=\"auto\">This won't sync properly. You must use <code>Call.payloadDropped(...)</code> so positions are correct clientside.</p>", "author": "Anuken", "createdAt": "2020-10-18T17:06:43Z", "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -241,6 +241,11 @@ public static void payloadDropped(Unit unit, float x, float y){\n             pay.set(x, y);\n             pay.dropLastPayload();\n             pay.set(prevx, prevy);\n+            pay.controlling().each(u -> {\n+                if (u instanceof Payloadc p){\n+                    p.dropLastPayload();", "originalCommit": "8625ef09ccad287758bac212c5b4de67fd263378", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MDA3OA==", "url": "https://github.com/Anuken/Mindustry/pull/3010#discussion_r507190078", "bodyText": "Fixed. 12e35b6", "author": "summetdev", "createdAt": "2020-10-18T17:30:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NzQzNw=="}], "type": "inlineReview"}, {"oid": "2e0c1cd613ae8d2629e55e10d9771c815b12df05", "url": "https://github.com/Anuken/Mindustry/commit/2e0c1cd613ae8d2629e55e10d9771c815b12df05", "message": "code style\n\nCo-authored-by: Anuken <arnukren@gmail.com>", "committedDate": "2020-10-18T17:07:46Z", "type": "commit"}, {"oid": "12e35b643caeb1d19ffd306a884921da93fcc08a", "url": "https://github.com/Anuken/Mindustry/commit/12e35b643caeb1d19ffd306a884921da93fcc08a", "message": "sync fix", "committedDate": "2020-10-18T17:24:09Z", "type": "commit"}, {"oid": "96996f8079547b143079d79c5b41e0974a0395de", "url": "https://github.com/Anuken/Mindustry/commit/96996f8079547b143079d79c5b41e0974a0395de", "message": "merge", "committedDate": "2020-10-18T17:28:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTE3NQ==", "url": "https://github.com/Anuken/Mindustry/pull/3010#discussion_r507195175", "body": "I know the `instanceof` check technically isn't necessary, but by omitting it you'll be sending extra payload drop packets to clients that won't do anything with it. It's best to keep the check there.", "bodyText": "I know the instanceof check technically isn't necessary, but by omitting it you'll be sending extra payload drop packets to clients that won't do anything with it. It's best to keep the check there.", "bodyHTML": "<p dir=\"auto\">I know the <code>instanceof</code> check technically isn't necessary, but by omitting it you'll be sending extra payload drop packets to clients that won't do anything with it. It's best to keep the check there.</p>", "author": "Anuken", "createdAt": "2020-10-18T18:16:46Z", "path": "core/src/mindustry/input/InputHandler.java", "diffHunk": "@@ -241,11 +241,7 @@ public static void payloadDropped(Unit unit, float x, float y){\n             pay.set(x, y);\n             pay.dropLastPayload();\n             pay.set(prevx, prevy);\n-            pay.controlling().each(u -> {\n-                if(u instanceof Payloadc p){\n-                    p.dropLastPayload();\n-                }\n-            });\n+            pay.controlling().each(u -> Call.payloadDropped(u, u.x, u.y));", "originalCommit": "96996f8079547b143079d79c5b41e0974a0395de", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NjMwMA==", "url": "https://github.com/Anuken/Mindustry/pull/3010#discussion_r507196300", "bodyText": "Fixed. 801eca5", "author": "summetdev", "createdAt": "2020-10-18T18:27:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5NTE3NQ=="}], "type": "inlineReview"}, {"oid": "801eca5ca3b2ada72884880636c9344d6ea999ea", "url": "https://github.com/Anuken/Mindustry/commit/801eca5ca3b2ada72884880636c9344d6ea999ea", "message": "prevent sending extra packets", "committedDate": "2020-10-18T18:26:32Z", "type": "commit"}]}