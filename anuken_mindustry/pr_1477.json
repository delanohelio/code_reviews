{"pr_number": 1477, "pr_title": "controlled script loading", "pr_author": "DeltaNedas", "pr_createdAt": "2020-01-30T07:38:08Z", "pr_url": "https://github.com/Anuken/Mindustry/pull/1477", "timeline": [{"oid": "187e1f5848fbdd77df06ca9d18eda471edbfea92", "url": "https://github.com/Anuken/Mindustry/commit/187e1f5848fbdd77df06ca9d18eda471edbfea92", "message": "create new branch", "committedDate": "2020-01-29T23:52:58Z", "type": "commit"}, {"oid": "9ed7719464642960af913f4466dcb900ee67ca43", "url": "https://github.com/Anuken/Mindustry/commit/9ed7719464642960af913f4466dcb900ee67ca43", "message": "compile dammit", "committedDate": "2020-01-30T00:04:42Z", "type": "commit"}, {"oid": "864c73f7919e65b980d6f6bd6be8aefcd311635d", "url": "https://github.com/Anuken/Mindustry/commit/864c73f7919e65b980d6f6bd6be8aefcd311635d", "message": "make it semi work maybe\n\nstill completely insecure", "committedDate": "2020-01-30T00:21:50Z", "type": "commit"}, {"oid": "677debd475a77b1bb33ae214f4f3e886aee3fa1b", "url": "https://github.com/Anuken/Mindustry/commit/677debd475a77b1bb33ae214f4f3e886aee3fa1b", "message": "testing script loading stuff\n\nis not allowed in console, only from `LoadedMod`s.", "committedDate": "2020-01-30T00:38:51Z", "type": "commit"}, {"oid": "9da505119b2fad0456019a04f501e76ab0101a79", "url": "https://github.com/Anuken/Mindustry/commit/9da505119b2fad0456019a04f501e76ab0101a79", "message": "it compiles but cant find module\n\nhelp", "committedDate": "2020-01-30T00:53:05Z", "type": "commit"}, {"oid": "d872656bc5e68dc2fa6651ffaedcdcde41382e78", "url": "https://github.com/Anuken/Mindustry/commit/d872656bc5e68dc2fa6651ffaedcdcde41382e78", "message": "it works sorta!", "committedDate": "2020-01-31T23:51:33Z", "type": "commit"}, {"oid": "e1a215ae0b6ccdf48c88ef25096291e462e70086", "url": "https://github.com/Anuken/Mindustry/commit/e1a215ae0b6ccdf48c88ef25096291e462e70086", "message": "wrapper works now", "committedDate": "2020-02-01T01:18:18Z", "type": "commit"}, {"oid": "a45a14025d785dc8a796747c4d2fee8d425cfedf", "url": "https://github.com/Anuken/Mindustry/commit/a45a14025d785dc8a796747c4d2fee8d425cfedf", "message": "oops", "committedDate": "2020-02-01T18:26:38Z", "type": "commit"}, {"oid": "51bc5c3b74a11bfd1ae41d263f3e124ec3c4b0d6", "url": "https://github.com/Anuken/Mindustry/commit/51bc5c3b74a11bfd1ae41d263f3e124ec3c4b0d6", "message": "local changes", "committedDate": "2020-02-01T18:28:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgxMzIyNA==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373813224", "body": "This could be more powerful if it allowed for cross-mod script loading. `A` could depend on `B`, and `A` could include `B`'s `utilities.js` by calling `require(\"B/utilities\")`.", "bodyText": "This could be more powerful if it allowed for cross-mod script loading. A could depend on B, and A could include B's utilities.js by calling require(\"B/utilities\").", "bodyHTML": "<p dir=\"auto\">This could be more powerful if it allowed for cross-mod script loading. <code>A</code> could depend on <code>B</code>, and <code>A</code> could include <code>B</code>'s <code>utilities.js</code> by calling <code>require(\"B/utilities\")</code>.</p>", "author": "Anuken", "createdAt": "2020-02-02T01:51:48Z", "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +94,30 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        public ScriptModuleProvider(){\n+            super(null, null);\n+        }\n+\n+        @Override\n+        public ModuleSource loadSource(String moduleId, Scriptable paths, Object validator) throws IOException, URISyntaxException{\n+            if(loadedMod == null) return null;\n+            Fi module = loadedMod.root.child(\"scripts\").child(moduleId + \".js\");", "originalCommit": "51bc5c3b74a11bfd1ae41d263f3e124ec3c4b0d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4c45716149327846debb077a83b83e417aa71a2f", "url": "https://github.com/Anuken/Mindustry/commit/4c45716149327846debb077a83b83e417aa71a2f", "message": "first part of what cat wants", "committedDate": "2020-02-02T02:49:47Z", "type": "commit"}, {"oid": "49ab7ceb77cab154218f5950eee61fe8e3a86c5c", "url": "https://github.com/Anuken/Mindustry/commit/49ab7ceb77cab154218f5950eee61fe8e3a86c5c", "message": "main.js required now", "committedDate": "2020-02-02T12:44:37Z", "type": "commit"}, {"oid": "d84217300cafd63ad5dd6dd674b8dbaf8fd2379f", "url": "https://github.com/Anuken/Mindustry/commit/d84217300cafd63ad5dd6dd674b8dbaf8fd2379f", "message": "fixed error message", "committedDate": "2020-02-02T12:58:00Z", "type": "commit"}, {"oid": "b93692ad41db8d3be1b9a482b1b89d885bcdf397", "url": "https://github.com/Anuken/Mindustry/commit/b93692ad41db8d3be1b9a482b1b89d885bcdf397", "message": "yes", "committedDate": "2020-02-02T13:40:38Z", "type": "commit"}, {"oid": "c458c77322a4b2a73cd4a43a70ad4401a8d8cdf9", "url": "https://github.com/Anuken/Mindustry/commit/c458c77322a4b2a73cd4a43a70ad4401a8d8cdf9", "message": "cleanup", "committedDate": "2020-02-02T13:40:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg1NTE5OA==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373855198", "body": "```suggestion\r\n\t\t\t\t\t\t\tLog.err(\"No main.js found for mod {0}.\", mod.meta.name);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);\n          \n          \n            \n            \t\t\t\t\t\t\tLog.err(\"No main.js found for mod {0}.\", mod.meta.name);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t\t\t<span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>err(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No main.js found for mod {<span class=\"x x-first x-last\">1</span>}.<span class=\"pl-pds\">\"</span></span>, mod<span class=\"pl-k\">.</span>meta<span class=\"pl-k\">.</span>name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t\t\t<span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>err(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No main.js found for mod {<span class=\"x x-first x-last\">0</span>}.<span class=\"pl-pds\">\"</span></span>, mod<span class=\"pl-k\">.</span>meta<span class=\"pl-k\">.</span>name);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Anuken", "createdAt": "2020-02-02T15:41:50Z", "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -460,38 +460,24 @@ public void loadScripts(){\n             eachEnabled(mod -> {\n                 if(mod.root.child(\"scripts\").exists()){\n                     content.setCurrentMod(mod);\n-                    if(mod.meta.mainScript == null){\n-                        mod.scripts = mod.root.child(\"scripts\").findAll(f -> f.extension().equals(\"js\"));\n-                        Log.debug(\"[{0}] Found {1} scripts.\", mod.meta.name, mod.scripts.size);\n-\n-                        for(Fi file : mod.scripts){\n-                            try{\n-                                if(scripts == null){\n-                                    scripts = platform.createScripts();\n-                                }\n-                                scripts.run(mod, file);\n-                            }catch(Throwable e){\n-                                Core.app.post(() -> {\n-                                    Log.err(\"Error loading script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                    e.printStackTrace();\n-                                });\n-                                break;\n-                            }\n-                        }\n-                    }else{\n-                        Fi file = mod.root.child(\"scripts\").child(mod.meta.mainScript + \".js\");\n-                        try{\n-                            if(scripts == null){\n-                                scripts = platform.createScripts();\n-                            }\n-                            scripts.run(mod, file);\n-                        }catch(Throwable e){\n-                            Core.app.post(() -> {\n-                                Log.err(\"Error loading main script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                e.printStackTrace();\n-                            });\n-                        }\n-                    }\n+\t\t\t\t\tFi main = mod.root.child(\"scripts\").child(\"main.js\");\n+\t\t\t\t\tif(main.exists() && !main.isDirectory()){\n+\t\t\t\t\t\ttry{\n+\t\t\t\t\t\t\tif(scripts == null){\n+\t\t\t\t\t\t\t\tscripts = platform.createScripts();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tscripts.run(mod, main);\n+\t\t\t\t\t\t}catch(Throwable e){\n+\t\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\t\tLog.err(\"Error loading main script {0} for mod {1}.\", main.name(), mod.meta.name);\n+\t\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}else{\n+\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);", "originalCommit": "49ab7ceb77cab154218f5950eee61fe8e3a86c5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg1NTIzMA==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r373855230", "body": "What have you done with the formatting?", "bodyText": "What have you done with the formatting?", "bodyHTML": "<p dir=\"auto\">What have you done with the formatting?</p>", "author": "Anuken", "createdAt": "2020-02-02T15:42:31Z", "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -460,38 +460,24 @@ public void loadScripts(){\n             eachEnabled(mod -> {\n                 if(mod.root.child(\"scripts\").exists()){\n                     content.setCurrentMod(mod);\n-                    if(mod.meta.mainScript == null){\n-                        mod.scripts = mod.root.child(\"scripts\").findAll(f -> f.extension().equals(\"js\"));\n-                        Log.debug(\"[{0}] Found {1} scripts.\", mod.meta.name, mod.scripts.size);\n-\n-                        for(Fi file : mod.scripts){\n-                            try{\n-                                if(scripts == null){\n-                                    scripts = platform.createScripts();\n-                                }\n-                                scripts.run(mod, file);\n-                            }catch(Throwable e){\n-                                Core.app.post(() -> {\n-                                    Log.err(\"Error loading script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                    e.printStackTrace();\n-                                });\n-                                break;\n-                            }\n-                        }\n-                    }else{\n-                        Fi file = mod.root.child(\"scripts\").child(mod.meta.mainScript + \".js\");\n-                        try{\n-                            if(scripts == null){\n-                                scripts = platform.createScripts();\n-                            }\n-                            scripts.run(mod, file);\n-                        }catch(Throwable e){\n-                            Core.app.post(() -> {\n-                                Log.err(\"Error loading main script {0} for mod {1}.\", file.name(), mod.meta.name);\n-                                e.printStackTrace();\n-                            });\n-                        }\n-                    }\n+\t\t\t\t\tFi main = mod.root.child(\"scripts\").child(\"main.js\");\n+\t\t\t\t\tif(main.exists() && !main.isDirectory()){\n+\t\t\t\t\t\ttry{\n+\t\t\t\t\t\t\tif(scripts == null){\n+\t\t\t\t\t\t\t\tscripts = platform.createScripts();\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tscripts.run(mod, main);\n+\t\t\t\t\t\t}catch(Throwable e){\n+\t\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\t\tLog.err(\"Error loading main script {0} for mod {1}.\", main.name(), mod.meta.name);\n+\t\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t\t});\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}else{\n+\t\t\t\t\t\tCore.app.post(() -> {\n+\t\t\t\t\t\t\tLog.err(\"No main.js found for mod {1}.\", mod.meta.name);\n+\t\t\t\t\t\t});\n+\t\t\t\t\t}", "originalCommit": "49ab7ceb77cab154218f5950eee61fe8e3a86c5c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a9f07f360329c23e52111bf18b3300f6f28512b6", "url": "https://github.com/Anuken/Mindustry/commit/a9f07f360329c23e52111bf18b3300f6f28512b6", "message": "formatting", "committedDate": "2020-02-02T15:49:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTE3Ng==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374249176", "body": "mainScript isn't needed anymore.", "bodyText": "mainScript isn't needed anymore.", "bodyHTML": "<p dir=\"auto\">mainScript isn't needed anymore.</p>", "author": "Anuken", "createdAt": "2020-02-03T17:54:45Z", "path": "core/src/mindustry/mod/Mods.java", "diffHunk": "@@ -794,7 +795,7 @@ public String toString(){\n \n     /** Plugin metadata information.*/\n     public static class ModMeta{\n-        public String name, displayName, author, description, version, main, minGameVersion;\n+        public String name, displayName, author, description, version, main, minGameVersion, mainScript;", "originalCommit": "a9f07f360329c23e52111bf18b3300f6f28512b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2ODIzMw==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374268233", "bodyText": "o yea ill fix", "author": "DeltaNedas", "createdAt": "2020-02-03T18:33:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTE3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI0OTQ2Ng==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374249466", "body": "Needs indent after `;`", "bodyText": "Needs indent after ;", "bodyHTML": "<p dir=\"auto\">Needs indent after <code>;</code></p>", "author": "Anuken", "createdAt": "2020-02-03T17:55:18Z", "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +95,47 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        private Pattern directory = Pattern.compile(\"^(.+?)/(.+)\");", "originalCommit": "a9f07f360329c23e52111bf18b3300f6f28512b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI1MDMzOQ==", "url": "https://github.com/Anuken/Mindustry/pull/1477#discussion_r374250339", "body": "Check if `dir.exists()` instead, I don't believe it can ever be null.", "bodyText": "Check if dir.exists() instead, I don't believe it can ever be null.", "bodyHTML": "<p dir=\"auto\">Check if <code>dir.exists()</code> instead, I don't believe it can ever be null.</p>", "author": "Anuken", "createdAt": "2020-02-03T17:57:06Z", "path": "core/src/mindustry/mod/Scripts.java", "diffHunk": "@@ -81,8 +95,47 @@ private boolean run(String script, String file){\n         }\n     }\n \n+    private String fillWrapper(Fi file){\n+        return wrapper.replace(\"$SCRIPT_NAME$\", loadedMod.name + \"/\" + file.nameWithoutExtension())\n+            .replace(\"$CODE$\", file.readString())\n+            .replace(\"$MOD_NAME$\", loadedMod.name);\n+    }\n+\n     @Override\n     public void dispose(){\n         Context.exit();\n     }\n+\n+    private class ScriptModuleProvider extends UrlModuleSourceProvider{\n+        private Pattern directory = Pattern.compile(\"^(.+?)/(.+)\");\n+        public ScriptModuleProvider(){\n+            super(null, null);\n+        }\n+\n+        @Override\n+        public ModuleSource loadSource(String moduleId, Scriptable paths, Object validator) throws IOException, URISyntaxException{\n+            if(loadedMod == null) return null;\n+            return loadSource(loadedMod, moduleId, loadedMod.root.child(\"scripts\"), validator);\n+        }\n+\n+        private ModuleSource loadSource(LoadedMod mod, String moduleId, Fi root, Object validator) throws IOException, URISyntaxException{\n+            Matcher matched = directory.matcher(moduleId);\n+            if(matched.find()){\n+                LoadedMod required = Vars.mods.locateMod(matched.group(1));\n+                String script = matched.group(2);\n+                if(required == null || root == required.root.child(\"scripts\")){ // Mod not found, or already using a mod\n+                    Fi dir = root.child(matched.group(1));\n+                    if(dir == null) return null; // Mod and folder not found", "originalCommit": "a9f07f360329c23e52111bf18b3300f6f28512b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4709b5dddc6ed65a9ded313ec1277b3e5bbda32d", "url": "https://github.com/Anuken/Mindustry/commit/4709b5dddc6ed65a9ded313ec1277b3e5bbda32d", "message": "remove old mainScript, it is always main.js", "committedDate": "2020-02-03T18:35:24Z", "type": "commit"}, {"oid": "fea9f51513fa99c4d5c43395af2ce3d4d23acb7b", "url": "https://github.com/Anuken/Mindustry/commit/fea9f51513fa99c4d5c43395af2ce3d4d23acb7b", "message": "!dir.exists() and new line", "committedDate": "2020-02-03T18:36:17Z", "type": "commit"}]}