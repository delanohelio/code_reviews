{"pr_number": 2789, "pr_title": "[systemtest] Improve logging of CR deployment", "pr_author": "im-konge", "pr_createdAt": "2020-04-06T09:39:16Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789", "timeline": [{"oid": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/8cb789d6252ba0de9a0a39c853b3a53b609c9648", "message": "add method for logging current status of CR\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-06T14:15:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NTA3Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404345076", "body": "Are you sure it's set everytime?", "bodyText": "Are you sure it's set everytime?", "bodyHTML": "<p dir=\"auto\">Are you sure it's set everytime?</p>", "author": "Frawless", "createdAt": "2020-04-06T19:47:00Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "diffHunk": "@@ -89,9 +91,14 @@ private static KafkaBridge getKafkaBridgeFromYaml(String yamlPath) {\n     }\n \n     private static KafkaBridge waitFor(KafkaBridge kafkaBridge) {\n-        LOGGER.info(\"Waiting for Kafka Bridge {}\", kafkaBridge.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(kafkaBridge.getMetadata().getName() + \"-bridge\", kafkaBridge.getSpec().getReplicas());\n-        LOGGER.info(\"Kafka Bridge {} is ready\", kafkaBridge.getMetadata().getName());\n+        String namespace = ResourceManager.kubeClient().getNamespace();", "originalCommit": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0NzcxOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404347719", "body": "Why you don't get there CR via client like you do for other cases?", "bodyText": "Why you don't get there CR via client like you do for other cases?", "bodyHTML": "<p dir=\"auto\">Why you don't get there CR via client like you do for other cases?</p>", "author": "Frawless", "createdAt": "2020-04-06T19:51:53Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaTopicResource.java", "diffHunk": "@@ -78,9 +78,13 @@ private static KafkaTopic getKafkaTopicFromYaml(String yamlPath) {\n     }\n \n     private static KafkaTopic waitFor(KafkaTopic kafkaTopic) {\n-        LOGGER.info(\"Waiting for Kafka Topic {}\", kafkaTopic.getMetadata().getName());\n-        KafkaTopicUtils.waitForKafkaTopicCreation(kafkaTopic.getMetadata().getName());\n-        LOGGER.info(\"Kafka Topic {} is ready\", kafkaTopic.getMetadata().getName());\n+        String name = kafkaTopic.getMetadata().getName();\n+\n+        LOGGER.info(\"Waiting for Kafka Topic {}\", name);\n+        KafkaTopicUtils.waitForKafkaTopicCreation(name,\n+            () -> LOGGER.info(kafkaTopic));", "originalCommit": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM0Nzc5OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404347799", "body": "Same as above", "bodyText": "Same as above", "bodyHTML": "<p dir=\"auto\">Same as above</p>", "author": "Frawless", "createdAt": "2020-04-06T19:52:04Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaUserResource.java", "diffHunk": "@@ -77,10 +76,13 @@ private static KafkaUser getKafkaUserFromYaml(String yamlPath) {\n     }\n \n     private static KafkaUser waitFor(KafkaUser kafkaUser) {\n-        LOGGER.info(\"Waiting for Kafka User {}\", kafkaUser.getMetadata().getName());\n-        SecretUtils.waitForSecretReady(kafkaUser.getMetadata().getName());\n-        KafkaUserUtils.waitForKafkaUserCreation(kafkaUser.getMetadata().getName());\n-        LOGGER.info(\"Kafka User {} is ready\", kafkaUser.getMetadata().getName());\n+        String name = kafkaUser.getMetadata().getName();\n+\n+        LOGGER.info(\"Waiting for Kafka User {}\", name);\n+        KafkaUserUtils.waitForKafkaUserCreation(name,\n+            () -> LOGGER.info(kafkaUser));", "originalCommit": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQwODc0Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404408742", "body": "You don't need to have this generic I think. Or maybe update it to accept resources which has status? In that case you should change the naming.", "bodyText": "You don't need to have this generic I think. Or maybe update it to accept resources which has status? In that case you should change the naming.", "bodyHTML": "<p dir=\"auto\">You don't need to have this generic I think. Or maybe update it to accept resources which has status? In that case you should change the naming.</p>", "author": "Frawless", "createdAt": "2020-04-06T21:47:40Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "diffHunk": "@@ -240,4 +253,20 @@ public static void waitForNoRollingUpdate(String deploymentName, Map<String, Str\n \n         return depConfigSnapshot(name);\n     }\n+\n+    public static <T extends Deployment, L extends DeploymentStatus> void logCurrentDeploymentStatus(T deployment, L status) {", "originalCommit": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4NjM1NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404586355", "body": "For this and all the other `waitFor*()` methods, when and why _don't_ you want to have the debug logging on timeout? In other words, what are the callers of `waitForConnectorStatus(String name, String state)` doing that means they're not needing the debug logging?", "bodyText": "For this and all the other waitFor*() methods, when and why don't you want to have the debug logging on timeout? In other words, what are the callers of waitForConnectorStatus(String name, String state) doing that means they're not needing the debug logging?", "bodyHTML": "<p dir=\"auto\">For this and all the other <code>waitFor*()</code> methods, when and why <em>don't</em> you want to have the debug logging on timeout? In other words, what are the callers of <code>waitForConnectorStatus(String name, String state)</code> doing that means they're not needing the debug logging?</p>", "author": "tombentley", "createdAt": "2020-04-07T07:15:44Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kafkaUtils/KafkaConnectorUtils.java", "diffHunk": "@@ -44,9 +44,14 @@ public static void waitForConnectorStability(String connectorName, String connec\n     }\n \n     public static void waitForConnectorStatus(String name, String state) {\n+        waitForConnectorStatus(name, state, () -> { });\n+    }\n+\n+    public static void waitForConnectorStatus(String name, String state, Runnable onTimeout) {", "originalCommit": "8cb789d6252ba0de9a0a39c853b3a53b609c9648", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0NDk1OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404644959", "bodyText": "That's really interesting idea, thanks :)", "author": "im-konge", "createdAt": "2020-04-07T08:52:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU4NjM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMzc0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404733746", "body": "```suggestion\r\n        String deploymentName = deployment.getMetadata().getName();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String name = deployment.getMetadata().getName();\n          \n          \n            \n                    String deploymentName = deployment.getMetadata().getName();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">name</span> <span class=\"pl-k\">=</span> deployment<span class=\"pl-k\">.</span>getMetadata()<span class=\"pl-k\">.</span>getName();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">deploymentName</span> <span class=\"pl-k\">=</span> deployment<span class=\"pl-k\">.</span>getMetadata()<span class=\"pl-k\">.</span>getName();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "see-quick", "createdAt": "2020-04-07T11:23:38Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/KubernetesResource.java", "diffHunk": "@@ -417,9 +417,11 @@ private static ClusterRoleBinding getClusterRoleBindingFromYaml(String yamlPath)\n     }\n \n     private static Deployment waitFor(Deployment deployment) {\n-        LOGGER.info(\"Waiting for deployment {}\", deployment.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(deployment.getMetadata().getName(), deployment.getSpec().getReplicas());\n-        LOGGER.info(\"Deployment {} is ready\", deployment.getMetadata().getName());\n+        String name = deployment.getMetadata().getName();", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNDYyMg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404734622", "body": "```suggestion\r\n        String kafkaBridgeCrName = kafkaBridge.getMetadata().getName();\r\n```\r\nand same applied with the others...", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String name = kafkaBridge.getMetadata().getName();\n          \n          \n            \n                    String kafkaBridgeCrName = kafkaBridge.getMetadata().getName();\n          \n      \n    \n    \n  \n\nand same applied with the others...", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">name</span> <span class=\"pl-k\">=</span> kafkaBridge<span class=\"pl-k\">.</span>getMetadata()<span class=\"pl-k\">.</span>getName();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">kafkaBridgeCrName</span> <span class=\"pl-k\">=</span> kafkaBridge<span class=\"pl-k\">.</span>getMetadata()<span class=\"pl-k\">.</span>getName();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">and same applied with the others...</p>", "author": "see-quick", "createdAt": "2020-04-07T11:25:19Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/KafkaBridgeResource.java", "diffHunk": "@@ -89,9 +90,12 @@ private static KafkaBridge getKafkaBridgeFromYaml(String yamlPath) {\n     }\n \n     private static KafkaBridge waitFor(KafkaBridge kafkaBridge) {\n-        LOGGER.info(\"Waiting for Kafka Bridge {}\", kafkaBridge.getMetadata().getName());\n-        DeploymentUtils.waitForDeploymentReady(kafkaBridge.getMetadata().getName() + \"-bridge\", kafkaBridge.getSpec().getReplicas());\n-        LOGGER.info(\"Kafka Bridge {} is ready\", kafkaBridge.getMetadata().getName());\n+        String name = kafkaBridge.getMetadata().getName();", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNjI1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404736256", "body": "nice use of generics :) but please make sure when you  defining it, create some doc, where you explain, which set of types can be contains T type.", "bodyText": "nice use of generics :) but please make sure when you  defining it, create some doc, where you explain, which set of types can be contains T type.", "bodyHTML": "<p dir=\"auto\">nice use of generics :) but please make sure when you  defining it, create some doc, where you explain, which set of types can be contains T type.</p>", "author": "see-quick", "createdAt": "2020-04-07T11:28:12Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -229,4 +234,20 @@ public static boolean checkLogForJSONFormat(Map<String, String> pods, String con\n         }\n         return isJSON;\n     }\n+\n+    public static <T extends CustomResource & HasStatus> void logCurrentStatus(T customResource) {", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczNzU0Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404737543", "body": "What else here can be here like Deployment?  Please write some documentation explaining what can be T, it will make more sense for the person who will use it after you :).", "bodyText": "What else here can be here like Deployment?  Please write some documentation explaining what can be T, it will make more sense for the person who will use it after you :).", "bodyHTML": "<p dir=\"auto\">What else here can be here like Deployment?  Please write some documentation explaining what can be T, it will make more sense for the person who will use it after you :).</p>", "author": "see-quick", "createdAt": "2020-04-07T11:30:32Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/controllers/DeploymentUtils.java", "diffHunk": "@@ -240,4 +247,20 @@ public static void waitForNoRollingUpdate(String deploymentName, Map<String, Str\n \n         return depConfigSnapshot(name);\n     }\n+\n+    public static <T extends Deployment> void logCurrentDeploymentStatus(T deployment) {", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTA4Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404739083", "body": "What does it mean `() -> { }` ? ", "bodyText": "What does it mean () -> { } ?", "bodyHTML": "<p dir=\"auto\">What does it mean <code>() -&gt; { }</code> ?</p>", "author": "see-quick", "createdAt": "2020-04-07T11:33:28Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "diffHunk": "@@ -56,6 +57,10 @@ public static String getInitContainerImageName(String podName) {\n     }\n \n     public static void waitForPodsReady(LabelSelector selector, int expectPods, boolean containers) {\n+        waitForPodsReady(selector, expectPods, containers, () -> { });", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0Mzc4Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404743786", "bodyText": "This is used in case you don't want to onTimeout code execution - nothing will happen, just empty lambda - empty runnable - if you have any idea how to do it better - I'm open for any ideas. I think this is good if we don't want to display anything in tests after timeout exception is thrown.", "author": "im-konge", "createdAt": "2020-04-07T11:42:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTA4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczOTU1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2789#discussion_r404739553", "body": "Again some documentation will be supportive.. )", "bodyText": "Again some documentation will be supportive.. )", "bodyHTML": "<p dir=\"auto\">Again some documentation will be supportive.. )</p>", "author": "see-quick", "createdAt": "2020-04-07T11:34:21Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/kubeUtils/objects/PodUtils.java", "diffHunk": "@@ -248,4 +253,20 @@ public static void waitUntilPodsStability(List<Pod> pods) {\n                 return false;\n             });\n     }\n+\n+    public static void logCurrentPodStatus(String kind, String name, List<String> log) {", "originalCommit": "45e80e0a9ba10c67b5d89ada7cd805a480b08d6b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9f5de924bb98734419616d1893b66a26a0197491", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9f5de924bb98734419616d1893b66a26a0197491", "message": "add doc and remake utils methods for avoiding NPE\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-07T13:06:11Z", "type": "forcePushed"}, {"oid": "b5d42ae4732f1d923b7425827b5726f33e392f55", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b5d42ae4732f1d923b7425827b5726f33e392f55", "message": "add doc and remake utils methods for avoiding NPE\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-07T14:49:58Z", "type": "forcePushed"}, {"oid": "6ea0156f11dc9de7891e5f9e3bd22c3db4bc62dc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6ea0156f11dc9de7891e5f9e3bd22c3db4bc62dc", "message": "add to resources waits logging methods\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T11:56:42Z", "type": "commit"}, {"oid": "80cbe04f814e0b215db43e67d0b98a52f25b2d31", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/80cbe04f814e0b215db43e67d0b98a52f25b2d31", "message": "add runnable variable for timeout execution\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T11:56:42Z", "type": "commit"}, {"oid": "6d860146947da9efea42f4d5314b7285c80c07a3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/6d860146947da9efea42f4d5314b7285c80c07a3", "message": "add method for logging current status of CR\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T11:56:42Z", "type": "commit"}, {"oid": "b14ca37d6bac78eb1c1a1f9ac88a7f3e7bafb2ed", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b14ca37d6bac78eb1c1a1f9ac88a7f3e7bafb2ed", "message": "fixup! add method for logging current status of CR\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T11:56:42Z", "type": "commit"}, {"oid": "720b4c84c0b6b1e46ce8928b5cfb6a643543ef39", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/720b4c84c0b6b1e46ce8928b5cfb6a643543ef39", "message": "add doc and remake utils methods for avoiding NPE\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T11:56:42Z", "type": "commit"}, {"oid": "ed06d4e69d635a1f783f9c3eb004190a520c7c2c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ed06d4e69d635a1f783f9c3eb004190a520c7c2c", "message": "fixup! add doc and remake utils methods for avoiding NPE\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T12:04:03Z", "type": "commit"}, {"oid": "ed06d4e69d635a1f783f9c3eb004190a520c7c2c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/ed06d4e69d635a1f783f9c3eb004190a520c7c2c", "message": "fixup! add doc and remake utils methods for avoiding NPE\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-04-08T12:04:03Z", "type": "forcePushed"}]}