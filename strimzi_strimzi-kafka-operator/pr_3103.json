{"pr_number": 3103, "pr_title": "[systemtest][fix] Update testJSONFormatLogging", "pr_author": "im-konge", "pr_createdAt": "2020-05-27T10:53:22Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NTk4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431055987", "body": "Can this be compiled as a static variable instead of doing it at every run?", "bodyText": "Can this be compiled as a static variable instead of doing it at every run?", "bodyHTML": "<p dir=\"auto\">Can this be compiled as a static variable instead of doing it at every run?</p>", "author": "scholzj", "createdAt": "2020-05-27T11:47:25Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -201,13 +202,17 @@ public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tl\n     public static boolean checkLogForJSONFormat(Map<String, String> pods, String containerName) {\n         boolean isJSON = false;\n \n+        String regex = \"(\\\\{.*})\\\\{\";\n+        Pattern pattern = Pattern.compile(regex);", "originalCommit": "c57ba77df124532138d3effdee55b3337b823fa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2NDAzOQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431064039", "bodyText": "Fixed, thanks for the comment.", "author": "im-konge", "createdAt": "2020-05-27T12:02:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NTk4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NjA2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431056066", "body": "Same as above", "bodyText": "Same as above", "bodyHTML": "<p dir=\"auto\">Same as above</p>", "author": "scholzj", "createdAt": "2020-05-27T11:47:34Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -201,13 +202,17 @@ public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tl\n     public static boolean checkLogForJSONFormat(Map<String, String> pods, String containerName) {\n         boolean isJSON = false;\n \n+        String regex = \"(\\\\{.*})\\\\{\";\n+        Pattern pattern = Pattern.compile(regex);\n+\n         for (String podName : pods.keySet()) {\n-            String logs = kubeClient().logs(podName, containerName).replaceFirst(\"([^{]+)\", \"\");\n-            try {\n-                new JsonObject(logs);\n+            String log = cmdKubeClient().exec(true, false, \"logs\", podName, \"-c\", containerName, \"--tail=100\").out();\n+            log = log.replaceAll(\"[\\n|\\r]\", \"\");\n+            Matcher matcher = pattern.matcher(log);", "originalCommit": "c57ba77df124532138d3effdee55b3337b823fa9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2NDE0Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431064146", "bodyText": "Fixed as well, thanks for the comment", "author": "im-konge", "createdAt": "2020-05-27T12:03:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA1NjA2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NTA1Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431095056", "body": "Do you really mean that character class containing `\\n`, `\\r` and `|`, or did you just mean to include only `\\n` and `\\r`? If the latter that would be `[\\n\\r]`. If the former it might be better to use `[\\n\\r|]` to make it clearer that you really meant to include `|`.", "bodyText": "Do you really mean that character class containing \\n, \\r and |, or did you just mean to include only \\n and \\r? If the latter that would be [\\n\\r]. If the former it might be better to use [\\n\\r|] to make it clearer that you really meant to include |.", "bodyHTML": "<p dir=\"auto\">Do you really mean that character class containing <code>\\n</code>, <code>\\r</code> and <code>|</code>, or did you just mean to include only <code>\\n</code> and <code>\\r</code>? If the latter that would be <code>[\\n\\r]</code>. If the former it might be better to use <code>[\\n\\r|]</code> to make it clearer that you really meant to include <code>|</code>.</p>", "author": "tombentley", "createdAt": "2020-05-27T12:55:55Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,12 +206,13 @@ public static boolean checkLogForJSONFormat(Map<String, String> pods, String con\n         boolean isJSON = false;\n \n         for (String podName : pods.keySet()) {\n-            String logs = kubeClient().logs(podName, containerName).replaceFirst(\"([^{]+)\", \"\");\n-            try {\n-                new JsonObject(logs);\n+            String log = cmdKubeClient().exec(true, false, \"logs\", podName, \"-c\", containerName, \"--tail=100\").out();\n+            log = log.replaceAll(\"[\\n|\\r]\", \"\");", "originalCommit": "f282774481246d0f30349277d2cb3ed7dbaa86cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEwMzM3NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431103374", "bodyText": "I meant to include \\n and \\r, I saw that's working regex for this. Because in the log we can find both of these and I wanted to change it to \"\"", "author": "im-konge", "createdAt": "2020-05-27T13:03:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NTA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTExMjA3OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431112079", "bodyText": "Regex has different syntax for if you're trying a match one of a set of characters (the \"character class\", where, among other possibilities, you spell out the chars within [ and ] with no separator, e.g. [abc]) or one of a set of other regexes (the \"group\", where you spell out the subexpressions within ( and ) each separated with |, e.g. (foo|bar)).\nThe regex you used will also match a |, which isn't what you meant. It probably doesm't make much difference in this particular case, but it's worth getting regexes right as in other cases it might make a big difference.", "author": "tombentley", "createdAt": "2020-05-27T13:11:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NTA1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyODEwMw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431128103", "bodyText": "Okay, thanks for the explanation, I'm gonna fix it :).", "author": "im-konge", "createdAt": "2020-05-27T13:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NTA1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NjMyNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431096324", "body": "Again, just to clarify, I assume it's fine that `JSON_PATTERN` doesn't understand nested `{}`, and that you're not expecting that in the `log`?", "bodyText": "Again, just to clarify, I assume it's fine that JSON_PATTERN doesn't understand nested {}, and that you're not expecting that in the log?", "bodyHTML": "<p dir=\"auto\">Again, just to clarify, I assume it's fine that <code>JSON_PATTERN</code> doesn't understand nested <code>{}</code>, and that you're not expecting that in the <code>log</code>?</p>", "author": "tombentley", "createdAt": "2020-05-27T12:57:59Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -202,12 +206,13 @@ public static boolean checkLogForJSONFormat(Map<String, String> pods, String con\n         boolean isJSON = false;\n \n         for (String podName : pods.keySet()) {\n-            String logs = kubeClient().logs(podName, containerName).replaceFirst(\"([^{]+)\", \"\");\n-            try {\n-                new JsonObject(logs);\n+            String log = cmdKubeClient().exec(true, false, \"logs\", podName, \"-c\", containerName, \"--tail=100\").out();\n+            log = log.replaceAll(\"[\\n|\\r]\", \"\");\n+            jsonMatcher = JSON_PATTERN.matcher(log);", "originalCommit": "f282774481246d0f30349277d2cb3ed7dbaa86cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4NzI4MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431387280", "bodyText": "If I remember correctly, at least one of the loggers has some nested JSON objects. So it should not rely on the log messages being always flat.", "author": "scholzj", "createdAt": "2020-05-27T19:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA5NjMyNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4NTU4Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r431385587", "body": "Does this need to be static? I guess it might make sense only for the pattern?", "bodyText": "Does this need to be static? I guess it might make sense only for the pattern?", "bodyHTML": "<p dir=\"auto\">Does this need to be static? I guess it might make sense only for the pattern?</p>", "author": "scholzj", "createdAt": "2020-05-27T19:17:39Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -37,6 +38,9 @@\n \n     private static final Pattern VERSION_IMAGE_PATTERN = Pattern.compile(\"(?<version>[0-9.]+)=(?<image>[^\\\\s]*)\");\n \n+    private static final Pattern JSON_PATTERN = Pattern.compile(\"}[\\\\n]+\\\\{\");\n+    private static Matcher jsonMatcher;", "originalCommit": "5465962c9039899fe65bacb7079fde0b8a4c6cfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "db47787d6ae6f5d6df8ed37f2d18d6f5241ce07c", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/db47787d6ae6f5d6df8ed37f2d18d6f5241ce07c", "message": "fixup! fixup! fix container name for CO\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-28T07:25:01Z", "type": "forcePushed"}, {"oid": "1278889c3532bbc335be3ce1add6721f9b7efea1", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/1278889c3532bbc335be3ce1add6721f9b7efea1", "message": "fixup! fixup! fix container name for CO\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-28T07:25:25Z", "type": "forcePushed"}, {"oid": "c7fa32110fc6b8cd43cd9c001118e056c0b97a9e", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c7fa32110fc6b8cd43cd9c001118e056c0b97a9e", "message": "fixup! change the assertion -> looks like JSON\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-28T10:52:05Z", "type": "forcePushed"}, {"oid": "d0686d373de27480e3841f04e064aa9e73491e00", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/d0686d373de27480e3841f04e064aa9e73491e00", "message": "maybe now will the JsonArray work :)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-28T18:41:59Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5OTE2Ng==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r432499166", "body": "What you have should be fine, but I see no harm in allowing for \\\\r in line terminators.\r\n\r\n```suggestion\r\n    private static final Pattern JSON_PATTERN = Pattern.compile(\"}[\\\\n\\\\r]+\\\\{\");\r\n```", "bodyText": "What you have should be fine, but I see no harm in allowing for \\r in line terminators.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Pattern JSON_PATTERN = Pattern.compile(\"}[\\\\n]+\\\\{\");\n          \n          \n            \n                private static final Pattern JSON_PATTERN = Pattern.compile(\"}[\\\\n\\\\r]+\\\\{\");", "bodyHTML": "<p dir=\"auto\">What you have should be fine, but I see no harm in allowing for \\r in line terminators.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Pattern</span> <span class=\"pl-c1\">JSON_PATTERN</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>}[<span class=\"pl-cce\">\\\\</span>n]+<span class=\"pl-cce\">\\\\</span>{<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Pattern</span> <span class=\"pl-c1\">JSON_PATTERN</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">.</span>compile(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>}[<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-cce x x-first\">\\\\</span><span class=\"x x-last\">r</span>]+<span class=\"pl-cce\">\\\\</span>{<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tombentley", "createdAt": "2020-05-29T13:56:00Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -37,6 +38,8 @@\n \n     private static final Pattern VERSION_IMAGE_PATTERN = Pattern.compile(\"(?<version>[0-9.]+)=(?<image>[^\\\\s]*)\");\n \n+    private static final Pattern JSON_PATTERN = Pattern.compile(\"}[\\\\n]+\\\\{\");", "originalCommit": "d0686d373de27480e3841f04e064aa9e73491e00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwMzE4Mg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3103#discussion_r432503182", "body": "This is not as efficient as it could be because the first `replaceAll()` returns a String, so subsequent `replaceAll/First()` will have to compile the regex on each invocation. Since you have this in a loop that potentially a lot of time wasted compiling the two patterns `N` times. You could use an explicit `Pattern.compile`, factored out into constants to avoid this overhead.\r\n\r\nAlso the `.replaceAll(\"\\n\", \" \")` is probably unnecessary if you used `DOTALL` in the `replaceFirst()`.\r\n\r\nFinally it's worth adding comments about what each replacement is doing to the output in order to make it valid JSON you can parse with `JsonArray()`.", "bodyText": "This is not as efficient as it could be because the first replaceAll() returns a String, so subsequent replaceAll/First() will have to compile the regex on each invocation. Since you have this in a loop that potentially a lot of time wasted compiling the two patterns N times. You could use an explicit Pattern.compile, factored out into constants to avoid this overhead.\nAlso the .replaceAll(\"\\n\", \" \") is probably unnecessary if you used DOTALL in the replaceFirst().\nFinally it's worth adding comments about what each replacement is doing to the output in order to make it valid JSON you can parse with JsonArray().", "bodyHTML": "<p dir=\"auto\">This is not as efficient as it could be because the first <code>replaceAll()</code> returns a String, so subsequent <code>replaceAll/First()</code> will have to compile the regex on each invocation. Since you have this in a loop that potentially a lot of time wasted compiling the two patterns <code>N</code> times. You could use an explicit <code>Pattern.compile</code>, factored out into constants to avoid this overhead.</p>\n<p dir=\"auto\">Also the <code>.replaceAll(\"\\n\", \" \")</code> is probably unnecessary if you used <code>DOTALL</code> in the <code>replaceFirst()</code>.</p>\n<p dir=\"auto\">Finally it's worth adding comments about what each replacement is doing to the output in order to make it valid JSON you can parse with <code>JsonArray()</code>.</p>", "author": "tombentley", "createdAt": "2020-05-29T14:02:39Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/StUtils.java", "diffHunk": "@@ -200,14 +203,19 @@ public static JsonArray expectedServiceDiscoveryInfo(String plainAuth, String tl\n \n     public static boolean checkLogForJSONFormat(Map<String, String> pods, String containerName) {\n         boolean isJSON = false;\n+        //this is only for decrease the number of records - kafka have record/line, operators record/11lines\n+        String tail = \"--tail=\" + (containerName.contains(\"operator\") ? \"50\" : \"10\");\n \n         for (String podName : pods.keySet()) {\n-            String logs = kubeClient().logs(podName, containerName).replaceFirst(\"([^{]+)\", \"\");\n+            String log = cmdKubeClient().execInCurrentNamespace(false, \"logs\", podName, \"-c\", containerName, tail).out();\n+            Matcher matcher = JSON_PATTERN.matcher(log);\n+            log = \"[\" + matcher.replaceAll(\"}, \\\\{\").replaceAll(\"\\n\", \" \").replaceFirst(\"(.*\\\\s)}, \\\\{\", \"{\") + \"]\";", "originalCommit": "d0686d373de27480e3841f04e064aa9e73491e00", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "56ad307fd852b2737b08f7f777ae9fec8d909b33", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/56ad307fd852b2737b08f7f777ae9fec8d909b33", "message": "fix testJSONFormatLogging and add option to disable logging of output\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "000b9ef0804bf49b02b5d47e4423f088ecddebcf", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/000b9ef0804bf49b02b5d47e4423f088ecddebcf", "message": "fixup! fix testJSONFormatLogging and add option to disable logging of output\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "0a28fd27553af2e2dfe3274565a2eacd0f69f0a3", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/0a28fd27553af2e2dfe3274565a2eacd0f69f0a3", "message": "fix container name for CO\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "182093fe5cbf3eb48024106bae341663290f7906", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/182093fe5cbf3eb48024106bae341663290f7906", "message": "fixup! fix container name for CO\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "f6b0e2b018682d1f73818003ff2d30fbed2f8daa", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f6b0e2b018682d1f73818003ff2d30fbed2f8daa", "message": "fixup! fixup! fix container name for CO\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "b51eade116527c8d3dcbe4bb35fe1e224649c076", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/b51eade116527c8d3dcbe4bb35fe1e224649c076", "message": "maybe now will the JsonArray work :)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T16:16:40Z", "type": "commit"}, {"oid": "c197d790b19670dd665c363090a081fe2d86742a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/c197d790b19670dd665c363090a081fe2d86742a", "message": "fixup! maybe now will the JsonArray work :)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T17:21:27Z", "type": "forcePushed"}, {"oid": "7e151a7483bdb3360b34e7d75ca67b70433b66ef", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7e151a7483bdb3360b34e7d75ca67b70433b66ef", "message": "fixup! maybe now will the JsonArray work :)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T18:14:11Z", "type": "commit"}, {"oid": "7e151a7483bdb3360b34e7d75ca67b70433b66ef", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7e151a7483bdb3360b34e7d75ca67b70433b66ef", "message": "fixup! maybe now will the JsonArray work :)\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-29T18:14:11Z", "type": "forcePushed"}]}