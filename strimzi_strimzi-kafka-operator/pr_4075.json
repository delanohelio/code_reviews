{"pr_number": 4075, "pr_title": "CO should be more verbose when resource name is missing", "pr_author": "sknot-rh", "pr_createdAt": "2020-12-09T12:41:10Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075", "timeline": [{"oid": "9a09a781e24c2dabc61cc5900332d69f0bcc7ddc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9a09a781e24c2dabc61cc5900332d69f0bcc7ddc", "message": "CO should be more verbose when resource name is missing\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-09T12:35:42Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwMzcwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r539303708", "body": "What about in the synchronous `get` above? And in the `AbstractNonNamespacedResourceOperator`?", "bodyText": "What about in the synchronous get above? And in the AbstractNonNamespacedResourceOperator?", "bodyHTML": "<p dir=\"auto\">What about in the synchronous <code>get</code> above? And in the <code>AbstractNonNamespacedResourceOperator</code>?</p>", "author": "tombentley", "createdAt": "2020-12-09T13:26:15Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -240,6 +240,9 @@ public T get(String namespace, String name) {\n      * @return A Future for the result.\n      */\n     public Future<T> getAsync(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "originalCommit": "9a09a781e24c2dabc61cc5900332d69f0bcc7ddc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f02bc28a08f87d70943c3ad43ad0a67a9068f3dc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f02bc28a08f87d70943c3ad43ad0a67a9068f3dc", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-09T13:32:11Z", "type": "commit"}, {"oid": "3872c7143ef2ad96274dcf53d87dc5ba93785495", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/3872c7143ef2ad96274dcf53d87dc5ba93785495", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-10T11:30:50Z", "type": "commit"}, {"oid": "42e2a1abedbfa132588a15ea479e2087e505ff6a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/42e2a1abedbfa132588a15ea479e2087e505ff6a", "message": "priority\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-10T12:22:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyMDIzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r540220231", "body": "Looks good. just one quick idea ... it might read better if you move it into separate method like the other validation. Plus ... would it make sense to validate the other fields as well if we already access the object?", "bodyText": "Looks good. just one quick idea ... it might read better if you move it into separate method like the other validation. Plus ... would it make sense to validate the other fields as well if we already access the object?", "bodyHTML": "<p dir=\"auto\">Looks good. just one quick idea ... it might read better if you move it into separate method like the other validation. Plus ... would it make sense to validate the other fields as well if we already access the object?</p>", "author": "scholzj", "createdAt": "2020-12-10T14:38:53Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -92,6 +92,12 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n                         validateBrokerDnsAnnotations(errors, listener, broker);\n                     }\n                 }\n+\n+                if (listener.getConfiguration().getBrokerCertChainAndKey() != null\n+                    && (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                    || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty())) {\n+                    errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+                }", "originalCommit": "42e2a1abedbfa132588a15ea479e2087e505ff6a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "76d4dc93ab2fc17405897afa521fcb3747f9c324", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/76d4dc93ab2fc17405897afa521fcb3747f9c324", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-10T14:49:13Z", "type": "commit"}, {"oid": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/22f2e15e9fad85c947ed89df5bc60f132af44cc9", "message": "test\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-10T17:44:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTA4MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199081", "body": "```suggestion\r\n            errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty secret name in the brokerCertChainAndKey\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty secret name in the brokerCertChainAndKey\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have empty secret name in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have <span class=\"x x-first x-last\">an </span>empty secret name in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tombentley", "createdAt": "2020-12-14T08:35:29Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");", "originalCommit": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTE5Nw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199197", "body": "```suggestion\r\n            errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty key in the brokerCertChainAndKey\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty key in the brokerCertChainAndKey\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have empty key in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have <span class=\"x x-first x-last\">an </span>empty key in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tombentley", "createdAt": "2020-12-14T08:35:42Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getKey() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getKey().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");", "originalCommit": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTI5NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199294", "body": "```suggestion\r\n            errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty certificate in the brokerCertChainAndKey\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have empty certificate in the brokerCertChainAndKey\");\n          \n          \n            \n                        errors.add(\"listener '\" + listener.getName() + \"' cannot have an empty certificate in the brokerCertChainAndKey\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have empty certificate in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            errors<span class=\"pl-k\">.</span>add(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>listener '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> listener<span class=\"pl-k\">.</span>getName() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>' cannot have <span class=\"x x-first x-last\">an </span>empty certificate in the brokerCertChainAndKey<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tombentley", "createdAt": "2020-12-14T08:35:54Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/ListenersValidator.java", "diffHunk": "@@ -101,6 +105,29 @@ public static void validate(int replicas, List<GenericKafkaListener> listeners)\n \n         return errors;\n     }\n+    /**\n+     * Validates that the listener has a BrokerCertChainAndKey with non-empty values\n+     *\n+     * @param errors    List where any found errors will be added\n+     * @param listener  Listener which needs to be validated\n+     */\n+    private static void validateBrokerCertChainAndKey(Set<String> errors, GenericKafkaListener listener) {\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getSecretName() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getSecretName().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty secret name in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getKey() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getKey().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty key in the brokerCertChainAndKey\");\n+        }\n+\n+        if (listener.getConfiguration().getBrokerCertChainAndKey().getCertificate() == null\n+                || listener.getConfiguration().getBrokerCertChainAndKey().getCertificate().isEmpty()) {\n+            errors.add(\"listener '\" + listener.getName() + \"' cannot have empty certificate in the brokerCertChainAndKey\");", "originalCommit": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE5OTgzMQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542199831", "body": "We should include the namespace in the message. ", "bodyText": "We should include the namespace in the message.", "bodyHTML": "<p dir=\"auto\">We should include the namespace in the message.</p>", "author": "tombentley", "createdAt": "2020-12-14T08:36:46Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -230,6 +230,9 @@ protected boolean wasChanged(T oldVersion, T newVersion) {\n      * @return The resource, or null if it doesn't exist.\n      */\n     public T get(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "originalCommit": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwMDA1Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/4075#discussion_r542200053", "body": "Again, can we include the namespace in the message?", "bodyText": "Again, can we include the namespace in the message?", "bodyHTML": "<p dir=\"auto\">Again, can we include the namespace in the message?</p>", "author": "tombentley", "createdAt": "2020-12-14T08:37:07Z", "path": "operator-common/src/main/java/io/strimzi/operator/common/operator/resource/AbstractResourceOperator.java", "diffHunk": "@@ -240,6 +243,9 @@ public T get(String namespace, String name) {\n      * @return A Future for the result.\n      */\n     public Future<T> getAsync(String namespace, String name) {\n+        if (name == null || name.isEmpty()) {\n+            throw new IllegalArgumentException(resourceKind + \" with an empty name cannot be configured. Please provide a name.\");", "originalCommit": "22f2e15e9fad85c947ed89df5bc60f132af44cc9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "673b6597d27f60985b62776b0416666a8fb83aa8", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/673b6597d27f60985b62776b0416666a8fb83aa8", "message": "comments\n\nSigned-off-by: Stanislav Knot <sknot@redhat.com>", "committedDate": "2020-12-14T10:05:33Z", "type": "commit"}]}