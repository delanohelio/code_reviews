{"pr_number": 2975, "pr_title": "[systemtest] Edit ClientUtils receive method", "pr_author": "im-konge", "pr_createdAt": "2020-05-07T10:16:40Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975", "timeline": [{"oid": "090941a0e69663396e81a6b6f3fb08865df87fcc", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/090941a0e69663396e81a6b6f3fb08865df87fcc", "message": "rewrite method with counter\n\nSigned-off-by: Lukas Kral <lkral@redhat.com>", "committedDate": "2020-05-07T09:13:53Z", "type": "commit"}, {"oid": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "message": "add exception to method signature\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-07T10:09:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5ODE2Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421398163", "body": "Use `RuntimeException` instead of this", "bodyText": "Use RuntimeException instead of this", "bodyHTML": "<p dir=\"auto\">Use <code>RuntimeException</code> instead of this</p>", "author": "Frawless", "createdAt": "2020-05-07T10:20:18Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {\n+            receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n+\n+            if (receivedMessages == exceptedMessages) {\n+                LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);\n+                break;\n+            }\n+        }\n+        if (tries == 0) {\n+            throw new Throwable(String.format(\"Consumer wasn't able to consume %s messages for 3 times\", exceptedMessages));", "originalCommit": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxMDIyOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421410228", "body": "why do you reverse the counting? Shouldn't be better iterate from 1 to 3 inclusive and use that value in the logging?", "bodyText": "why do you reverse the counting? Shouldn't be better iterate from 1 to 3 inclusive and use that value in the logging?", "bodyHTML": "<p dir=\"auto\">why do you reverse the counting? Shouldn't be better iterate from 1 to 3 inclusive and use that value in the logging?</p>", "author": "see-quick", "createdAt": "2020-05-07T10:43:19Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {", "originalCommit": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQxMDU2MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/2975#discussion_r421410560", "body": "here you can use it \r\n```suggestion\r\n                LOGGER.info(\"Consumer successfully consumed {} messages for the {} time\", exceptedMessages, tries);\r\n```", "bodyText": "here you can use it\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);\n          \n          \n            \n                            LOGGER.info(\"Consumer successfully consumed {} messages for the {} time\", exceptedMessages, tries);", "bodyHTML": "<p dir=\"auto\">here you can use it</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Consumer successfully consumed {} messages<span class=\"pl-pds\">\"</span></span>, exceptedMessages);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>info(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Consumer successfully consumed {} messages<span class=\"x x-first x-last\"> for the {} time</span><span class=\"pl-pds\">\"</span></span>, exceptedMessages<span class=\"x x-first x-last\">, tries</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "see-quick", "createdAt": "2020-05-07T10:43:52Z", "path": "systemtest/src/main/java/io/strimzi/systemtest/utils/ClientUtils.java", "diffHunk": "@@ -24,18 +23,21 @@\n     // ensuring that object can not be created outside of class\n     private ClientUtils() {}\n \n-    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) {\n-        TestUtils.waitFor(\"Kafka \" + kafkaClient.toString() + \" client received messages\", Constants.GLOBAL_CLIENTS_POLL, Constants.GLOBAL_TIMEOUT,\n-            () -> {\n-                int receivedMessages = 0;\n-                try {\n-                    receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n-                    return receivedMessages == exceptedMessages;\n-                } catch (Exception e) {\n-                    LOGGER.warn(\"Client not received excepted messages {}, instead received only {}!\", exceptedMessages, receivedMessages);\n-                    return false;\n-                }\n-            });\n+    public static void waitUntilClientReceivedMessagesTls(KafkaClientOperations kafkaClient, int exceptedMessages) throws Throwable {\n+        int receivedMessages;\n+        int tries = 3;\n+\n+        for (; tries > 0; tries--) {\n+            receivedMessages = kafkaClient.receiveMessagesTls(Constants.GLOBAL_CLIENTS_TIMEOUT);\n+\n+            if (receivedMessages == exceptedMessages) {\n+                LOGGER.info(\"Consumer successfully consumed {} messages\", exceptedMessages);", "originalCommit": "7f3cac0db5ff0de9e470c3e7c43f54b40bd2d459", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "91efa8a7992e07f9ceb151ff9cde71f929a66f98", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/91efa8a7992e07f9ceb151ff9cde71f929a66f98", "message": "comments\n\nSigned-off-by: Lukas Kral <lukywill16@gmail.com>", "committedDate": "2020-05-07T13:50:42Z", "type": "commit"}]}