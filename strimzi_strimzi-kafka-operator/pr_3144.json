{"pr_number": 3144, "pr_title": "feat: Cleanup AbstractModel", "pr_author": "samuel-hawker", "pr_createdAt": "2020-06-03T09:21:44Z", "pr_url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144", "timeline": [{"oid": "9d46147739744b0df62feb551d486ff7075109bd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/9d46147739744b0df62feb551d486ff7075109bd", "message": "feat: Cleanup AbstractModel\n\nCleanup includes, argument renaming, documenting some methods\norganizing fields into more logical groupings\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-06-03T09:19:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NDUzNg==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434464536", "body": "Do you think this is really needed? I originally had it. But it seemed wasteful to have 3 static Strings which are used only in the static initilizer below. So I decided to remove them and use the env var names directly.", "bodyText": "Do you think this is really needed? I originally had it. But it seemed wasteful to have 3 static Strings which are used only in the static initilizer below. So I decided to remove them and use the env var names directly.", "bodyHTML": "<p dir=\"auto\">Do you think this is really needed? I originally had it. But it seemed wasteful to have 3 static Strings which are used only in the static initilizer below. So I decided to remove them and use the env var names directly.</p>", "author": "scholzj", "createdAt": "2020-06-03T10:22:31Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -88,40 +88,50 @@\n \n     public static final String ANCILLARY_CM_KEY_METRICS = \"metrics-config.yml\";\n     public static final String ANCILLARY_CM_KEY_LOG_CONFIG = \"log4j.properties\";\n+\n+    public static final String NETWORK_POLICY_KEY_SUFFIX = \"-network-policy\";\n+\n     public static final String ENV_VAR_DYNAMIC_HEAP_FRACTION = \"DYNAMIC_HEAP_FRACTION\";\n     public static final String ENV_VAR_KAFKA_HEAP_OPTS = \"KAFKA_HEAP_OPTS\";\n     public static final String ENV_VAR_KAFKA_JVM_PERFORMANCE_OPTS = \"KAFKA_JVM_PERFORMANCE_OPTS\";\n     public static final String ENV_VAR_DYNAMIC_HEAP_MAX = \"DYNAMIC_HEAP_MAX\";\n-    public static final String NETWORK_POLICY_KEY_SUFFIX = \"-network-policy\";\n     public static final String ENV_VAR_STRIMZI_KAFKA_GC_LOG_ENABLED = \"STRIMZI_KAFKA_GC_LOG_ENABLED\";\n     public static final String ENV_VAR_STRIMZI_JAVA_SYSTEM_PROPERTIES = \"STRIMZI_JAVA_SYSTEM_PROPERTIES\";\n     public static final String ENV_VAR_STRIMZI_JAVA_OPTS = \"STRIMZI_JAVA_OPTS\";\n     public static final String ENV_VAR_STRIMZI_GC_LOG_ENABLED = \"STRIMZI_GC_LOG_ENABLED\";\n \n-    public static final String ANNO_STRIMZI_IO_DELETE_CLAIM = Annotations.STRIMZI_DOMAIN + \"delete-claim\";\n-    /** Annotation on PVCs storing the original configuration (so we can revert changes). */\n+    /**\n+     * Annotation on PVCs storing the original configuration\n+     * Used to revert changes\n+     */\n     public static final String ANNO_STRIMZI_IO_STORAGE = Annotations.STRIMZI_DOMAIN + \"storage\";\n+    public static final String ANNO_STRIMZI_IO_DELETE_CLAIM = Annotations.STRIMZI_DOMAIN + \"delete-claim\";\n+    public static final String ANNO_STRIMZI_LOGGING_HASH = Annotations.STRIMZI_DOMAIN + \"logging-hash\";\n+\n     @Deprecated\n     public static final String ANNO_CO_STRIMZI_IO_DELETE_CLAIM = ClusterOperator.STRIMZI_CLUSTER_OPERATOR_DOMAIN + \"/delete-claim\";\n \n-    public static final String ANNO_STRIMZI_CM_GENERATION = Annotations.STRIMZI_DOMAIN + \"cm-generation\";\n-    public static final String ANNO_STRIMZI_LOGGING_HASH = Annotations.STRIMZI_DOMAIN + \"logging-hash\";\n-\n+    private static final String ENV_VAR_HTTP_PROXY = \"HTTP_PROXY\";", "originalCommit": "9d46147739744b0df62feb551d486ff7075109bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NTg5Mw==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434475893", "bodyText": "I know what you mean, I think the fact we use the same strings more than once means really we should use static strings.\nUltimately it all gets compiled down the same (correct me if I am wrong) and the consistency of always defining envars as static strings can only increase consistency and less bugs in the long run..\nNot a hill I will die on for this particular envar, but still...", "author": "samuel-hawker", "createdAt": "2020-06-03T10:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NDUzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NTc5NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434465795", "body": "Should we put empty line between the sentence and the @param? TBH I do not really mind, but it seems you did that in other Javadoc comments around.", "bodyText": "Should we put empty line between the sentence and the @param? TBH I do not really mind, but it seems you did that in other Javadoc comments around.", "bodyHTML": "<p dir=\"auto\">Should we put empty line between the sentence and the <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a>? TBH I do not really mind, but it seems you did that in other Javadoc comments around.</p>", "author": "scholzj", "createdAt": "2020-06-03T10:24:56Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -518,57 +556,59 @@ protected void setConfiguration(AbstractConfiguration configuration) {\n      * @return The image name.\n      */\n     public String getImage() {\n-        return this.image;\n+        return image;\n     }\n \n     /**\n-     * @return the service account used by the deployed cluster for Kubernetes/OpenShift API operations\n+     * @return the name of the service account used by the deployed cluster for Kubernetes/OpenShift API operations.\n      */\n     protected String getServiceAccountName() {\n         return null;\n     }\n \n     /**\n-     * @return the cluster name\n+     * @return the cluster name.\n      */\n     public String getCluster() {\n         return cluster;\n     }\n \n     /**\n      * Gets the name of a given pod in a StatefulSet.\n-     * @param podId The Id of the pod.\n+     *\n+     * @param podId The Id (ordinal) of the pod.\n      * @return The name of the pod with the given name.\n      */\n     public String getPodName(int podId) {\n         return name + \"-\" + podId;\n     }\n \n     /**\n-     * Sets the affinity as configured by the user in the cluster CR\n+     * Sets the affinity as configured by the user in the cluster CR.", "originalCommit": "9d46147739744b0df62feb551d486ff7075109bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NzAwOA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434467008", "body": "I do not think there is a real rule for this or anything like that, so feel free to leave it like this ... But I usually prefer to have the `&&` at the next line - it seems to me more readable.\r\n\r\n```suggestion\r\n                    .filter(broker -> broker != null \r\n                            && broker.getBroker() != null \r\n                            && broker.getBroker() == ordinalId \r\n                            && broker.getStorageClass() != null)\r\n```", "bodyText": "I do not think there is a real rule for this or anything like that, so feel free to leave it like this ... But I usually prefer to have the && at the next line - it seems to me more readable.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .filter(broker -> broker != null &&\n          \n          \n            \n                                        broker.getBroker() != null &&\n          \n          \n            \n                                        broker.getBroker() == ordinalId &&\n          \n          \n            \n                                        broker.getStorageClass() != null)\n          \n          \n            \n                                .filter(broker -> broker != null \n          \n          \n            \n                                        && broker.getBroker() != null \n          \n          \n            \n                                        && broker.getBroker() == ordinalId \n          \n          \n            \n                                        && broker.getStorageClass() != null)", "bodyHTML": "<p dir=\"auto\">I do not think there is a real rule for this or anything like that, so feel free to leave it like this ... But I usually prefer to have the <code>&amp;&amp;</code> at the next line - it seems to me more readable.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .filter(broker <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> broker <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k x x-first x-last\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            broker<span class=\"pl-k\">.</span>getBroker() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k x x-first x-last\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            broker<span class=\"pl-k\">.</span>getBroker() <span class=\"pl-k\">==</span> ordinalId <span class=\"pl-k x x-first x-last\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            broker<span class=\"pl-k\">.</span>getStorageClass() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .filter(broker <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> broker <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k x x-first\">&amp;&amp;</span><span class=\"x x-last\"> </span>broker<span class=\"pl-k\">.</span>getBroker() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k x x-first\">&amp;&amp;</span><span class=\"x x-last\"> </span>broker<span class=\"pl-k\">.</span>getBroker() <span class=\"pl-k\">==</span> ordinalId </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k x x-first\">&amp;&amp;</span><span class=\"x x-last\"> </span>broker<span class=\"pl-k\">.</span>getStorageClass() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "scholzj", "createdAt": "2020-06-03T10:27:15Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -638,17 +693,22 @@ protected PersistentVolumeClaim createPersistentVolumeClaim(int podNumber, Strin\n \n         String storageClass = storage.getStorageClass();\n         if (storage.getOverrides() != null) {\n-            storageClass = storage.getOverrides().stream().filter(broker -> broker != null && broker.getBroker() != null && broker.getBroker() == podNumber && broker.getStorageClass() != null)\n+            storageClass = storage.getOverrides().stream()\n+                    .filter(broker -> broker != null &&\n+                            broker.getBroker() != null &&\n+                            broker.getBroker() == ordinalId &&\n+                            broker.getStorageClass() != null)", "originalCommit": "9d46147739744b0df62feb551d486ff7075109bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NjI0MA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434476240", "bodyText": "Great suggestion!", "author": "samuel-hawker", "createdAt": "2020-06-03T10:45:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2NzAwOA=="}], "type": "inlineReview"}, {"oid": "a284975e1a59b52e1c62a0851e0d16571e401a9a", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/a284975e1a59b52e1c62a0851e0d16571e401a9a", "message": "fix: Review comments\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-06-03T10:46:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NzIxNA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434477214", "body": "I would leave just Kubernetes.", "bodyText": "I would leave just Kubernetes.", "bodyHTML": "<p dir=\"auto\">I would leave just Kubernetes.</p>", "author": "ppatierno", "createdAt": "2020-06-03T10:47:14Z", "path": "cluster-operator/src/main/java/io/strimzi/operator/cluster/model/AbstractModel.java", "diffHunk": "@@ -349,12 +373,13 @@ public static OrderedProperties getOrderedProperties(String configFileName) {\n     }\n \n     /**\n-     * Transforms map to log4j properties file format\n-     * @param properties map with properties\n-     * @return\n+     * Transforms map to log4j properties file format.\n+     *\n+     * @param properties map of log4j properties.\n+     * @return log4j properties as a String.\n      */\n     protected static String createPropertiesString(OrderedProperties properties) {\n-        return properties.asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding kubernetes/openshift resource.\");\n+        return properties.asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding Kubernetes/OpenShift resource.\");", "originalCommit": "9d46147739744b0df62feb551d486ff7075109bd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4NTI0NQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434485245", "bodyText": "As in remove the reference to OpenShift all together?", "author": "samuel-hawker", "createdAt": "2020-06-03T11:03:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NzIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4OTY4OQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434489689", "bodyText": "I would say that where the code is not related to OpenShift specific stuff, we should just mention Kubernetes.", "author": "ppatierno", "createdAt": "2020-06-03T11:12:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NzIxNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUxMDM2NA==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434510364", "bodyText": "Addressed :)", "author": "samuel-hawker", "createdAt": "2020-06-03T11:54:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3NzIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ4MDk5MQ==", "url": "https://github.com/strimzi/strimzi-kafka-operator/pull/3144#discussion_r434480991", "body": "As before I would say just Kubernetes. The same for the others following this one.", "bodyText": "As before I would say just Kubernetes. The same for the others following this one.", "bodyHTML": "<p dir=\"auto\">As before I would say just Kubernetes. The same for the others following this one.</p>", "author": "ppatierno", "createdAt": "2020-06-03T10:54:56Z", "path": "cluster-operator/src/test/java/io/strimzi/operator/cluster/operator/assembly/KafkaBridgeAssemblyOperatorTest.java", "diffHunk": "@@ -80,7 +80,7 @@\n     protected static Vertx vertx;\n     private static final String METRICS_CONFIG = \"{\\\"foo\\\":\\\"bar\\\"}\";\n     private static final String LOGGING_CONFIG = AbstractModel.getOrderedProperties(\"kafkaBridgeDefaultLoggingProperties\")\n-            .asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding kubernetes/openshift resource.\");\n+            .asPairsWithComment(\"Do not change this generated file. Logging can be configured in the corresponding Kubernetes/OpenShift resource.\");", "originalCommit": "9d46147739744b0df62feb551d486ff7075109bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f11c788a100ac616f140aab1d89f3a79f387dadd", "url": "https://github.com/strimzi/strimzi-kafka-operator/commit/f11c788a100ac616f140aab1d89f3a79f387dadd", "message": "fix: Remove unneeded OpenShift references\n\nSigned-off-by: Samuel Hawker <samuel.hawker@ibm.com>", "committedDate": "2020-06-03T11:53:49Z", "type": "commit"}]}