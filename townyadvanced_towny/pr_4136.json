{"pr_number": 4136, "pr_title": "Add Asynchronous Backup To Speed up Load Times", "pr_author": null, "pr_createdAt": "2020-07-05T22:28:48Z", "pr_url": "https://github.com/TownyAdvanced/Towny/pull/4136", "merge_commit": "eb1b615e48badf8ce168b981e9fbc04276c53300", "timeline": [{"oid": "c897929c1157c01f6f888985387b0d105ea57999", "url": "https://github.com/TownyAdvanced/Towny/commit/c897929c1157c01f6f888985387b0d105ea57999", "message": "Add async clean backups and backups", "committedDate": "2020-07-05T22:15:48Z", "type": "commit"}, {"oid": "7993eb332b9a77fefb2f405d7bbb78227688c6b6", "url": "https://github.com/TownyAdvanced/Towny/commit/7993eb332b9a77fefb2f405d7bbb78227688c6b6", "message": "Merge branch 'master' into feature/async-backup", "committedDate": "2020-07-05T22:22:27Z", "type": "commit"}, {"oid": "053afe10710bc55ed47957c3c1deb1f3dfda52a8", "url": "https://github.com/TownyAdvanced/Towny/commit/053afe10710bc55ed47957c3c1deb1f3dfda52a8", "message": "thenRunAsync not thenRun", "committedDate": "2020-07-06T00:55:07Z", "type": "commit"}, {"oid": "a647c02c21023c37ed3ef4a4edad2d44581b1577", "url": "https://github.com/TownyAdvanced/Towny/commit/a647c02c21023c37ed3ef4a4edad2d44581b1577", "message": "make backup command run async.", "committedDate": "2020-07-06T01:05:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNTk4Nw==", "url": "https://github.com/TownyAdvanced/Towny/pull/4136#discussion_r450425987", "body": "this should be .cleanBackups() no?", "bodyText": "this should be .cleanBackups() no?", "bodyHTML": "<p dir=\"auto\">this should be .cleanBackups() no?</p>", "author": "LlmDl", "createdAt": "2020-07-06T19:10:14Z", "path": "src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.palmergames.bukkit.towny.tasks;\n+\n+import com.palmergames.bukkit.towny.Towny;\n+import com.palmergames.bukkit.towny.TownyMessaging;\n+import com.palmergames.bukkit.towny.TownyUniverse;\n+\n+import java.io.IOException;\n+\n+public class CleanupBackupTask implements Runnable {\n+\n+\t@Override\n+\tpublic void run() {\n+\t\ttry {\n+\t\t\tTownyUniverse.getInstance().getDataSource().backup();", "originalCommit": "a647c02c21023c37ed3ef4a4edad2d44581b1577", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ab51055aa41e251e6c4891892f1b7b64886dc06", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\nindex 41d08c7c9..90ee6e37a 100644\n--- a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n+++ b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n", "chunk": "@@ -1,23 +1,13 @@\n package com.palmergames.bukkit.towny.tasks;\n \n import com.palmergames.bukkit.towny.Towny;\n-import com.palmergames.bukkit.towny.TownyMessaging;\n import com.palmergames.bukkit.towny.TownyUniverse;\n \n-import java.io.IOException;\n-\n public class CleanupBackupTask implements Runnable {\n \n \t@Override\n \tpublic void run() {\n-\t\ttry {\n-\t\t\tTownyUniverse.getInstance().getDataSource().backup();\n-\t\t} catch (IOException e) {\n-\t\t\tTownyMessaging.sendErrorMsg(\"Could not clean backup.\");\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n-\t\t}\n-\t\t\n+\t\tTownyUniverse.getInstance().getDataSource().cleanupBackups();\n \t\tTowny.getPlugin().getLogger().info(\"Successfully cleaned backups.\");\n \t}\n }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "eb1b615e48badf8ce168b981e9fbc04276c53300", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\nindex 41d08c7c9..90ee6e37a 100644\n--- a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n+++ b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n", "chunk": "@@ -1,23 +1,13 @@\n package com.palmergames.bukkit.towny.tasks;\n \n import com.palmergames.bukkit.towny.Towny;\n-import com.palmergames.bukkit.towny.TownyMessaging;\n import com.palmergames.bukkit.towny.TownyUniverse;\n \n-import java.io.IOException;\n-\n public class CleanupBackupTask implements Runnable {\n \n \t@Override\n \tpublic void run() {\n-\t\ttry {\n-\t\t\tTownyUniverse.getInstance().getDataSource().backup();\n-\t\t} catch (IOException e) {\n-\t\t\tTownyMessaging.sendErrorMsg(\"Could not clean backup.\");\n-\t\t\te.printStackTrace();\n-\t\t\treturn;\n-\t\t}\n-\t\t\n+\t\tTownyUniverse.getInstance().getDataSource().cleanupBackups();\n \t\tTowny.getPlugin().getLogger().info(\"Successfully cleaned backups.\");\n \t}\n }\n", "next_change": {"commit": "b172fa4673f1e303e02ab9119279897049940263", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\nindex 90ee6e37a..10d5545ed 100644\n--- a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n+++ b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n", "chunk": "@@ -7,6 +7,7 @@ public class CleanupBackupTask implements Runnable {\n \n \t@Override\n \tpublic void run() {\n+\t\tTowny.getPlugin().getLogger().info(\"Cleaning up old backups...\");\n \t\tTownyUniverse.getInstance().getDataSource().cleanupBackups();\n \t\tTowny.getPlugin().getLogger().info(\"Successfully cleaned backups.\");\n \t}\n", "next_change": {"commit": "53595c728d4ebab5e00bdea21c017039229467a5", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java b/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\ndeleted file mode 100644\nindex 10d5545ed..000000000\n--- a/src/com/palmergames/bukkit/towny/tasks/CleanupBackupTask.java\n+++ /dev/null\n", "chunk": "@@ -1,14 +0,0 @@\n-package com.palmergames.bukkit.towny.tasks;\n-\n-import com.palmergames.bukkit.towny.Towny;\n-import com.palmergames.bukkit.towny.TownyUniverse;\n-\n-public class CleanupBackupTask implements Runnable {\n-\n-\t@Override\n-\tpublic void run() {\n-\t\tTowny.getPlugin().getLogger().info(\"Cleaning up old backups...\");\n-\t\tTownyUniverse.getInstance().getDataSource().cleanupBackups();\n-\t\tTowny.getPlugin().getLogger().info(\"Successfully cleaned backups.\");\n-\t}\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "eb1b615e48badf8ce168b981e9fbc04276c53300", "message": "Merge commit", "committedDate": null}, {"oid": "b172fa4673f1e303e02ab9119279897049940263", "committedDate": "2020-10-06 06:25:46 -0500", "message": "- Fix newday showing the wrong message when towns are bankrupted under some circumstances.   - Removed no-longer-needed deleteUnusedFiles.   - NewDayEvent now has removedTowns and bankruptTowns separated.   - Language files bumped to 0.87."}, {"oid": "53595c728d4ebab5e00bdea21c017039229467a5", "committedDate": "2020-10-21 17:23:28 -0500", "message": "Archive plot-block-data to save HDD space. (#4381)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjQ4Mg==", "url": "https://github.com/TownyAdvanced/Towny/pull/4136#discussion_r450426482", "body": "spacing is a bit off here.", "bodyText": "spacing is a bit off here.", "bodyHTML": "<p dir=\"auto\">spacing is a bit off here.</p>", "author": "LlmDl", "createdAt": "2020-07-06T19:11:10Z", "path": "src/com/palmergames/bukkit/towny/TownyUniverse.java", "diffHunk": "@@ -62,8 +67,10 @@\n     private TownyDataSource dataSource;\n     private TownyPermissionSource permissionSource;\n     private War warEvent;\n-    \n-    private TownyUniverse() {\n+\tprivate String saveDbType;\n+\tprivate String loadDbType;\n+\n+\tprivate TownyUniverse() {", "originalCommit": "a647c02c21023c37ed3ef4a4edad2d44581b1577", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ab51055aa41e251e6c4891892f1b7b64886dc06", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 5668e815b..eaa6206d7 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -67,10 +65,10 @@ public class TownyUniverse {\n     private TownyDataSource dataSource;\n     private TownyPermissionSource permissionSource;\n     private War warEvent;\n-\tprivate String saveDbType;\n-\tprivate String loadDbType;\n-\n-\tprivate TownyUniverse() {\n+    private String saveDbType;\n+    private String loadDbType;\n+    \n+    private TownyUniverse() {\n         towny = Towny.getPlugin();\n         rootFolder = towny.getDataFolder().getPath();\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "eb1b615e48badf8ce168b981e9fbc04276c53300", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 5668e815b..eaa6206d7 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -67,10 +65,10 @@ public class TownyUniverse {\n     private TownyDataSource dataSource;\n     private TownyPermissionSource permissionSource;\n     private War warEvent;\n-\tprivate String saveDbType;\n-\tprivate String loadDbType;\n-\n-\tprivate TownyUniverse() {\n+    private String saveDbType;\n+    private String loadDbType;\n+    \n+    private TownyUniverse() {\n         towny = Towny.getPlugin();\n         rootFolder = towny.getDataFolder().getPath();\n     }\n", "next_change": {"commit": "f824535167f2dfaf8fde1ea51c6b3bdde4c0d213", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex eaa6206d7..9fd512d55 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -58,54 +61,163 @@ public class TownyUniverse {\n     private final Trie nationsTrie = new Trie();\n     private final Map<String, TownyWorld> worlds = new ConcurrentHashMap<>();\n     private final Map<String, CustomDataField> registeredMetadata = new HashMap<>();\n-\tprivate Map<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n+\tprivate final Map<WorldCoord, TownBlock> townBlocks = new ConcurrentHashMap<>();\n+\tprivate CompletableFuture<Void> backupFuture;\n     \n     private final List<Resident> jailedResidents = new ArrayList<>();\n     private final String rootFolder;\n     private TownyDataSource dataSource;\n     private TownyPermissionSource permissionSource;\n     private War warEvent;\n-    private String saveDbType;\n-    private String loadDbType;\n-    \n+\n     private TownyUniverse() {\n         towny = Towny.getPlugin();\n         rootFolder = towny.getDataFolder().getPath();\n     }\n     \n-    // TODO: Put loadSettings into the constructor, since it is 1-time-run code.\n+    /**\n+     * Loads Towny's files/database en masse. Will end up in safemode if things do not go well. \n+     * \n+     * Loads config/language/townyperms files.\n+     * Initiates the logger.\n+     * Flushes object maps.\n+     * Saves and loads the database.\n+     * Will migrate the config if needed.\n+     * Loads the town and nation levels.\n+     * Legacy outpost test.\n+     * Schedule cleanup and backup.\n+     * \n+     * @return true if things go well.\n+     */\n     boolean loadSettings() {\n         \n+    \t// Load config, language and townyperms files.\n+    \tif (!loadFiles())\n+    \t\treturn false;\n+\n+    \t// Init logger\n+\t\tTownyLogger.getInstance();\n+\n+        // Clears the object maps from memory.\n+        clearAllObjects();\n+                \n+        // Try to load and save the database.\n+        if (!loadAndSaveDatabase(TownySettings.getSaveDatabase(), TownySettings.getLoadDatabase()))\n+        \treturn false;\n+\n+        // Try migrating the config and world files if the version has changed.\n+        if (!Version.fromString(TownySettings.getLastRunVersion()).equals(towny.getVersion())) {\n+\t\t\tConfigMigrator migrator = new ConfigMigrator(TownySettings.getConfig(), \"config-migration.json\");\n+\t\t\tmigrator.migrate();\n+\t\t}\n+        \n+        // Loads Town and Nation Levels.\n+        try {\n+\t\t\tTownySettings.loadTownAndNationLevels();\n+\t\t} catch (IOException e) {\n+\t\t\te.printStackTrace();\n+\t\t\treturn false;\n+\t\t}\n+\n+        File f = new File(rootFolder, \"outpostschecked.txt\");                                        // Old towny didn't keep as good track of outpost spawn points,\n+        if (!f.exists()) {                                                                           // some of them ending up outside of claimed plots. If the file \n+            for (Town town : dataSource.getTowns()) TownyDatabaseHandler.validateTownOutposts(town); // does not exist we will test all outpostspawns and create the\n+            towny.saveResource(\"outpostschecked.txt\", false);                                        // file. Sometimes still useful on servers who've manually\n+        }                                                                                            // altered data manually and want to re-check.\n+\n+\t\t// Run both the cleanup and backup async.\n+\t\tperformCleanupAndBackup();\n+\n+\t\t// Things would appear to have gone well.\n+        return true;\n+    }\n+    \n+    public void performCleanupAndBackup() {\n+\t\tbackupFuture = CompletableFuture\n+\t\t\t.runAsync(new CleanupTask())\n+\t\t\t.thenRunAsync(new BackupTask());\n+\t}\n+    \n+    /**\n+     * Load config, language and townyperms files.\n+     * \n+     * @return true if no exceptions are found.\n+     */\n+    private boolean loadFiles() {\n         try {\n             TownySettings.loadConfig(rootFolder + File.separator + \"settings\" + File.separator + \"config.yml\", towny.getVersion());\n-            TownySettings.loadLanguage(rootFolder + File.separator + \"settings\", \"english.yml\");\n+            Translation.loadLanguage(rootFolder + File.separator + \"settings\", \"english.yml\");\n             TownyPerms.loadPerms(rootFolder + File.separator + \"settings\", \"townyperms.yml\");\n-            \n         } catch (IOException | TownyException e) {\n             e.printStackTrace();\n             return false;\n         }\n-\t\t// Init logger\n-\t\tTownyLogger.getInstance();\n-\n-        saveDbType = TownySettings.getSaveDatabase();\n-        loadDbType = TownySettings.getLoadDatabase();\n-        \n-        // Setup any defaults before we load the dataSource.\n-        Coord.setCellSize(TownySettings.getTownBlockSize());\n-        \n-        System.out.println(\"[Towny] Database: [Load] \" + loadDbType + \" [Save] \" + saveDbType);\n-        \n-        clearAll();\n-                \n+        return true;\n+    }\n+    \n+    /**\n+     * Test loading and saving the database.\n+     * \n+     * @param loadDbType - load setting from the config.\n+     * @param saveDbType - save setting from the config.\n+     * @return true when the databse will load and save.\n+     */\n+    private boolean loadAndSaveDatabase(String loadDbType, String saveDbType) {\n+    \tSystem.out.println(\"[Towny] Database: [Load] \" + loadDbType + \" [Save] \" + saveDbType);\n+        // Try loading the database.\n         long startTime = System.currentTimeMillis();\n         if (!loadDatabase(loadDbType)) {\n             System.out.println(\"[Towny] Error: Failed to load!\");\n             return false;\n         }\n+        \n         long time = System.currentTimeMillis() - startTime;\n-        System.out.println(\"[Towny] Database loaded in \" + time + \"ms.\");\n+        System.out.println(\"[Towny] Database: Loaded in \" + time + \"ms.\");\n+        System.out.println(\"[Towny] Database: \" + TownySettings.getUUIDPercent() + \" of residents have stored UUIDs.\"); // TODO: remove this when we're using UUIDs directly in the database.\n+\n+        // Try saving the database.\n+        if (!saveDatabase(saveDbType)) {\n+        \tSystem.out.println(\"[Towny] Error: Unsupported save format!\");\n+        \treturn false;\n+        }\n+\t\treturn true;\n+    }\n+    \n+    /**\n+     * Loads the database into memory.\n+     *  \n+     * @param loadDbType - load setting from the config.\n+     * @return true when the database will load.\n+     */\n+    private boolean loadDatabase(String loadDbType) {\n+        \n+        switch (loadDbType.toLowerCase()) {\n+            case \"ff\":\n+            case \"flatfile\": {\n+                this.dataSource = new TownyFlatFileSource(towny, this);\n+                break;\n+            }\n+            case \"h2\":\n+            case \"sqlite\":\n+            case \"mysql\": {\n+                this.dataSource = new TownySQLSource(towny, this, loadDbType.toLowerCase());\n+                break;\n+            }\n+            default: {\n+                return false;\n+            }\n+        }\n         \n+        return dataSource.loadAll();\n+    }\n+    \n+    /**\n+     * Saves the database into memory.\n+     * \n+     * @param saveDbType - save setting from the config.\n+     * @return true when the database will save.\n+     */\n+    private boolean saveDatabase(String saveDbType) {\n         try {\n             // Set the new class for saving.\n             switch (saveDbType.toLowerCase()) {\n", "next_change": {"commit": "03da162b48b8546ad7032ff27048d8ffbdaa30cc", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 9fd512d55..774f2d504 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -226,10 +256,8 @@ public class TownyUniverse {\n                     this.dataSource = new TownyFlatFileSource(towny, this);\n                     break;\n                 }\n-                case \"h2\":\n-                case \"sqlite\":\n                 case \"mysql\": {\n-                    this.dataSource = new TownySQLSource(towny, this, saveDbType.toLowerCase());\n+                    this.dataSource = new TownySQLSource(towny, this);\n                     break;\n                 }\n                 default: {}\n", "next_change": {"commit": "72f018991a6449be5bfb4a6aec8a19645db9cd72", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 774f2d504..e7a6c23a8 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -260,7 +217,9 @@ public class TownyUniverse {\n                     this.dataSource = new TownySQLSource(towny, this);\n                     break;\n                 }\n-                default: {}\n+                default: {\n+                \tthrow new TownyInitException(\"Database.yml contains unsupported save format: \" + saveDbType, TownyInitException.TownyError.DATABASE);\n+                }\n             }\n \n             if (TownySettings.getLoadDatabase().equalsIgnoreCase(saveDbType)) {\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "eb1b615e48badf8ce168b981e9fbc04276c53300", "message": "Merge commit", "committedDate": null}, {"oid": "6d3fede3f7fb9e8ad9bffee31128a3a2c169027e", "committedDate": "2020-07-16 07:36:36 -0500", "message": "Make fields/objects that don't change Immutable (#4171)"}, {"oid": "5e70b6098c89e7bf1f27ecaa98ac3ac27d343345", "committedDate": "2020-07-17 17:17:44 -0500", "message": "Unify Town and Nation code, and introduce new Eco Account Mechanics (#3988)"}, {"oid": "ad97784ad1939af7d35e274913f727dacb0c61a7", "committedDate": "2020-07-17 18:28:16 -0500", "message": "Move translation code to separate object and introduce new method: Translation.of() (#4177)"}, {"oid": "318a721dbc51c035ffab87924a20966e838e27af", "committedDate": "2020-07-25 20:46:32 -0500", "message": "Remove Manual Config Changes and Migrate them automatically instead. (#4209)"}, {"oid": "3670531bfccdc303af10574fc434a52c94aa9eb9", "committedDate": "2020-08-12 09:24:56 -0500", "message": "Concurrency QOL (#4256)"}, {"oid": "a5b067724d1119afca7b4b0dfc1ed1e6ac3f7b36", "committedDate": "2020-08-21 17:29:56 -0500", "message": "Hotfix/Delay backup until after initialization. (#4281)"}, {"oid": "2e5a8161a74dea444ebe95a153da0c8bf847f24a", "committedDate": "2020-09-10 06:51:36 -0500", "message": "Hotfix: Fix version strings pickup up unneeded input. (#4282)"}, {"oid": "1cafc551f7656675ce83f987f203146d56664e85", "committedDate": "2020-09-18 09:52:58 -0500", "message": "- Clean up and beautify the Towny startup logging."}, {"oid": "d7af446ebf5b91ce1f8e3b9f36247680800fd73e", "committedDate": "2020-10-06 09:17:11 -0500", "message": "Datasource Cleanup"}, {"oid": "53595c728d4ebab5e00bdea21c017039229467a5", "committedDate": "2020-10-21 17:23:28 -0500", "message": "Archive plot-block-data to save HDD space. (#4381)"}, {"oid": "610870ea5eab5a63507bd564dcf747c1feed89aa", "committedDate": "2020-10-22 18:30:34 -0500", "message": "Fix Config Migrator & Add debtCapModifier (#4383)"}, {"oid": "f824535167f2dfaf8fde1ea51c6b3bdde4c0d213", "committedDate": "2020-10-22 21:58:12 -0500", "message": "- Make loadSettings() cleaner, fix up flatfile creation missing in TownyDataBaseHandler."}, {"oid": "74e9ba32761dc0afd1294b1150240b4be75a6c53", "committedDate": "2020-10-22 22:49:52 -0500", "message": "Refactor TownyUniverse to be more orderly."}, {"oid": "588308510dcb02f98b328a7af8de2756fac84cd5", "committedDate": "2020-10-24 17:36:37 -0500", "message": "- Fix flipped save/load types."}, {"oid": "ab4a23fbdecdf58094db5fc16e3bdaa188d0317b", "committedDate": "2020-11-22 17:28:49 -0600", "message": "Cleanup Warning (#4463)"}, {"oid": "76c3bb83194a3fc97216ae10271aeea922bd6055", "committedDate": "2020-11-23 06:26:18 -0600", "message": "Backend Town UUID Implementation (#4421)"}, {"oid": "699cb13ad8c2f351b435e0d8755a11dbb07a1d99", "committedDate": "2020-11-27 19:09:18 -0600", "message": "Add missing @deprecated Javadoc tags and @Deprecated annotations (#4488)"}, {"oid": "d9ede6d122ca170f65122c77fce19fd7bfaccb24", "committedDate": "2020-11-30 06:27:33 -0600", "message": "Ensure Objects are properly assigned, closed, and compared to improve safety and accuracy. (#4496)"}, {"oid": "6467e5d3389f5c4252b4107eab8ba8d89217e2b0", "committedDate": "2020-11-30 06:52:09 -0600", "message": "Internal player name change handling. (#4474)"}, {"oid": "03da162b48b8546ad7032ff27048d8ffbdaa30cc", "committedDate": "2020-12-03 17:38:17 -0600", "message": "Implemented MySQL Connection Pooling (#4499)"}, {"oid": "e986b4ca638491e35293f47701a6cd190658eb61", "committedDate": "2020-12-12 07:00:18 -0600", "message": "Resident UUID Maps (#4510)"}, {"oid": "56ec4dc36e809222e0be4d57f92dcd4a8e4eed9b", "committedDate": "2020-12-12 14:02:51 -0600", "message": "fix javadoc"}, {"oid": "ec059e066885f9a7e1596e51e3f08e5bcbf9aa5a", "committedDate": "2020-12-22 06:00:06 -0600", "message": "- API: Added TownyLoadedDatabaseEvent.     - Called when has successfully loaded the database on startup as well as /ta database load and /ta reload db"}, {"oid": "03850742753828cf3952e3a4803a982f132f20df", "committedDate": "2020-12-29 13:47:01 -0600", "message": "Internal debt accounts (#4643)"}, {"oid": "bdd1c6d825fcef98dadbaba641ca1351978224b6", "committedDate": "2020-12-30 08:41:07 -0600", "message": "- Towny prices now fully translatable.     - Closes #4639.   - Bump language files to 0.95."}, {"oid": "8954896449dd7a6e087fbbf53241d2ac2aae9d7c", "committedDate": "2020-12-30 15:11:43 -0600", "message": "Nation UUID Map Refactor (#4608)"}, {"oid": "5f7eae92afeb501a18e70925a8289eeb25065692", "committedDate": "2021-01-15 06:25:19 -0600", "message": "Clean out or resolve a bunch of un-needed TODOs."}, {"oid": "33e7d887b2af4c54e9d7083145c2c44e37de1b00", "committedDate": "2021-01-24 07:45:54 -0600", "message": "- Removal of any methods deprecated earlier than 0.96.0.0.     - Marked many deprecated methods with the version in which they were deprecated for easier future removal."}, {"oid": "5fdf60cc64c5abc582991d05c058ca215319bf2a", "committedDate": "2021-01-29 09:56:29 -0600", "message": "Custom Metadata Types (#4700)"}, {"oid": "f83e1e58109dff9dc238a178964f3a62449d21be", "committedDate": "2021-03-10 15:42:24 -0600", "message": "Creation of SpawnPoint object, and DrawSpawnPointsTask. (#4792)"}, {"oid": "2949c272b5b183e7969aa11cec910e97323ab632", "committedDate": "2021-03-26 07:48:46 -0500", "message": "- Fix Spawn Point particles not disappearing when spawn points are moved.     - Closes #4830."}, {"oid": "f9d43d50fad7bd08ce5b1a65ccdae20357ddcfb7", "committedDate": "2021-04-14 15:47:04 -0500", "message": "- Make plotgroups which load and throw an AlreadyRegisteredException actually print out which one is no good."}, {"oid": "879a4741d5d1915b9d48d7588797b7020bae2075", "committedDate": "2021-05-12 08:39:46 -0500", "message": "- API: Add TownyAPI.getResidentOrNull(TownBlock).     - Gets the resident who owns the townblock or null if unowned.     - Best used after TownBlock.hasResident();   - API: Add TownyAPI.getTownOrNull(TownBlock).     - Gets the town who owns the townblock or null if wilderness.     - Best used after TownBlock.hasTown();"}, {"oid": "134679993683b26caa02f5aacfbcac556a736076", "committedDate": "2021-05-12 10:59:51 -0500", "message": "Add TownBlock.getTownOrNull() and TownBlock.getResidentOrNull() and replace most uses of TownBlock.getResident(), as well as begin replacing uses of TownBlock.getTown()."}, {"oid": "c6ceaeeee22bd75a5adf5949cec8f6503a421682", "committedDate": "2021-05-12 12:18:42 -0500", "message": "Replace more TownBlock.getTown() with .getTownOrNull() where safe."}, {"oid": "5825f24e07a3679a186f8cf538d1ffd0949a61f7", "committedDate": "2021-06-02 11:08:25 -0500", "message": "Jail Overhaul (#4703)"}, {"oid": "ab72310bab6c902e69c928dee26b781225dbbcc2", "committedDate": "2021-07-06 14:31:28 -0500", "message": "Creates a cache of sorts for the wilderness coords on the Towny ASCII map. (#5045)"}, {"oid": "99badadb9b967a368c39512b856a4428180de004", "committedDate": "2021-07-09 15:02:44 -0500", "message": "Feature/wilderness event for map hud (#5055)"}, {"oid": "57da3444d6f3e0adec8054fc1dbf70ae14feea1b", "committedDate": "2021-07-14 17:03:21 -0500", "message": "Overhaul/plotgroup overhaul (#5063)"}, {"oid": "6b22d493265f1c89d5bf479384608b28265fec05", "committedDate": "2021-07-14 17:12:57 -0500", "message": "Fix Javadoc"}, {"oid": "67e36e588e20529188e03e4491c5ce26a2d18b11", "committedDate": "2021-07-30 05:44:29 -0500", "message": "Replace all sysouts (#5126)"}, {"oid": "51bae5b369d53ad94b4ffc2ee4dfcde29953be97", "committedDate": "2021-07-31 19:11:36 -0500", "message": "Feature/hibernatedresidents (#5136)"}, {"oid": "032ed2782d48d2f5558141c3752ecbbc6778513a", "committedDate": "2021-08-02 11:35:21 -0500", "message": "Renames all of our language files to use standard locale names."}, {"oid": "e19db82f16c3e291996b7728c866fa6f352a87f2", "committedDate": "2021-08-18 09:14:34 -0500", "message": "Feature: Automatic name replacing"}, {"oid": "f8e164c15fab431c447ef9d57b5e09caf620d305", "committedDate": "2021-08-18 10:22:15 -0500", "message": "Creates database.yml (#5184)"}, {"oid": "b69dde0e552d4fe8db8ddf54233908e0a4b679ff", "committedDate": "2021-08-18 16:58:24 -0500", "message": "- Fix database.yml not being converted to the correct loading setting."}, {"oid": "c8c51ce425c5b1fef1154a32b9ceaf5acd8bdd3a", "committedDate": "2021-08-18 16:59:37 -0500", "message": "Actually fix that."}, {"oid": "781e3101d44a598f55a7482ecda783b7d54c4b2b", "committedDate": "2021-08-21 08:14:20 -0500", "message": "- Actually fix database.yml not being converted to correctly for servers using mysql."}, {"oid": "215e0d6f753fcfae657759b0c97696789db35cab", "committedDate": "2021-08-25 13:29:35 -0500", "message": "Concept/translation registry (#5167)"}, {"oid": "72f018991a6449be5bfb4a6aec8a19645db9cd72", "committedDate": "2021-09-29 14:52:33 -0500", "message": "Improve logging (#5299)"}, {"oid": "97f1b2cd1d5916b90a6dd8af24bd48afbe819fec", "committedDate": "2021-10-01 12:33:13 -0500", "message": "Remove old Outpost code and fix my names. (#5324)"}, {"oid": "699b3f28bba082ea19839b9a03a771e37ddd4bcf", "committedDate": "2021-10-26 15:34:37 -0500", "message": "Comment some methods still used via FlagWar"}, {"oid": "bfe1e61713b080dc13ce5ba7fdfa9c226192bf8b", "committedDate": "2021-10-28 08:46:19 -0500", "message": "- Remove TownBlock, TownyWorld and TownyUniverse warzone methods.     - No longer used by FlagWar."}, {"oid": "f1000ff1c92e1f61d522ab5a0abd0a3ad56e88ca", "committedDate": "2021-11-07 08:20:46 -0600", "message": "Purge EventWar from Towny's code base. (#5422)"}, {"oid": "b29816ecc25e92ef7118b89fa8b9edb87facd08a", "committedDate": "2022-02-13 13:25:09 -0600", "message": "Pre 0 98 0 0 deprecations (#5739)"}, {"oid": "7063efafe13ee610f447efdbe5fc9488857b39c1", "committedDate": "2022-02-15 12:48:39 -0600", "message": "Remove all of the pre-0.97.0.0 deprecations. (#5584)"}, {"oid": "0603c0f44624df95d9c45938f603d4d092f9a448", "committedDate": "2022-04-02 13:08:29 -0500", "message": "Improve hibernated residents loading (#5840)"}, {"oid": "6a70a095461763ac776101d7c54f6838454ffd78", "committedDate": "2022-07-21 17:15:28 -0500", "message": "Exclude transitive bukkit api dependency (#6051)"}, {"oid": "4474311f269d7b8a01e5d02ada79aed61191336b", "committedDate": "2022-08-29 11:42:04 -0500", "message": "A selection of changes to bring in from the UUID branch. (#6137)"}, {"oid": "f74d0bc704a475264227f0a0398f6f8eb4bf794e", "committedDate": "2022-08-29 11:45:32 -0500", "message": "Swap out Validate import."}, {"oid": "64b1bd54cc3621bf9b583851354110cf14b38063", "committedDate": "2022-08-29 16:30:20 -0500", "message": "Adopt plot group .id to .uuid changes. (#6139)"}, {"oid": "456d8df13d8755db32765f9d5a3b4575be359cb7", "committedDate": "2022-10-19 09:44:16 -0500", "message": "Event firing overhaul (#6250)"}, {"oid": "1cdfe8f891fc90574ded74776aa75acf92c4ee61", "committedDate": "2022-11-08 22:37:13 +0100", "message": "Replace our unmodifiable annotation with jetbrains equiv"}, {"oid": "710fd1277d1e8a0e0c70275fa9830aae56b553aa", "committedDate": "2023-01-12 20:10:41 +0100", "message": "Add a 30 second timeout for backup future"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjg3Mg==", "url": "https://github.com/TownyAdvanced/Towny/pull/4136#discussion_r450426872", "body": "spacing is also out here too I think.", "bodyText": "spacing is also out here too I think.", "bodyHTML": "<p dir=\"auto\">spacing is also out here too I think.</p>", "author": "LlmDl", "createdAt": "2020-07-06T19:11:55Z", "path": "src/com/palmergames/bukkit/towny/TownyUniverse.java", "diffHunk": "@@ -121,19 +127,12 @@ boolean loadSettings() {\n                 }\n             }\n             FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n-            try {\n-                dataSource.backup();\n-                \n-                if (loadDbType.equalsIgnoreCase(\"flatfile\") || saveDbType.equalsIgnoreCase(\"flatfile\")) {\n-                    dataSource.deleteUnusedResidents();\n-                }\n-                \n-            } catch (IOException e) {\n-                System.out.println(\"[Towny] Error: Could not create backup.\");\n-                e.printStackTrace();\n-                return false;\n-            }\n-            \n+\t\t\t\n+\t\t\t// Run both the backup cleanup and backup async.\n+\t\t\tCompletableFuture\n+\t\t\t\t.runAsync(new CleanupBackupTask())\n+\t\t\t\t.thenRunAsync(new BackupTask());\n+", "originalCommit": "a647c02c21023c37ed3ef4a4edad2d44581b1577", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8ab51055aa41e251e6c4891892f1b7b64886dc06", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 5668e815b..eaa6206d7 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -127,11 +125,11 @@ public class TownyUniverse {\n                 }\n             }\n             FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n-\t\t\t\n-\t\t\t// Run both the backup cleanup and backup async.\n-\t\t\tCompletableFuture\n-\t\t\t\t.runAsync(new CleanupBackupTask())\n-\t\t\t\t.thenRunAsync(new BackupTask());\n+            \n+            // Run both the backup cleanup and backup async.\n+            CompletableFuture\n+                .runAsync(new CleanupBackupTask())\n+                .thenRunAsync(new BackupTask());\n \n             if (loadDbType.equalsIgnoreCase(saveDbType)) {\n                 // Update all Worlds data files\n", "next_change": null}]}, "revised_code_in_main": {"commit": "eb1b615e48badf8ce168b981e9fbc04276c53300", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 5668e815b..eaa6206d7 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -127,11 +125,11 @@ public class TownyUniverse {\n                 }\n             }\n             FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n-\t\t\t\n-\t\t\t// Run both the backup cleanup and backup async.\n-\t\t\tCompletableFuture\n-\t\t\t\t.runAsync(new CleanupBackupTask())\n-\t\t\t\t.thenRunAsync(new BackupTask());\n+            \n+            // Run both the backup cleanup and backup async.\n+            CompletableFuture\n+                .runAsync(new CleanupBackupTask())\n+                .thenRunAsync(new BackupTask());\n \n             if (loadDbType.equalsIgnoreCase(saveDbType)) {\n                 // Update all Worlds data files\n", "next_change": {"commit": "3670531bfccdc303af10574fc434a52c94aa9eb9", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex eaa6206d7..3ec1752c2 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -127,10 +128,8 @@ public class TownyUniverse {\n             FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n             \n             // Run both the backup cleanup and backup async.\n-            CompletableFuture\n-                .runAsync(new CleanupBackupTask())\n-                .thenRunAsync(new BackupTask());\n-\n+\t\t\tperformBackup();\n+           \n             if (loadDbType.equalsIgnoreCase(saveDbType)) {\n                 // Update all Worlds data files\n                 dataSource.saveAllWorlds();\n", "next_change": {"commit": "a5b067724d1119afca7b4b0dfc1ed1e6ac3f7b36", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 3ec1752c2..0bac5ddb6 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -126,9 +126,6 @@ public class TownyUniverse {\n                 }\n             }\n             FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n-            \n-            // Run both the backup cleanup and backup async.\n-\t\t\tperformBackup();\n            \n             if (loadDbType.equalsIgnoreCase(saveDbType)) {\n                 // Update all Worlds data files\n", "next_change": {"commit": "f824535167f2dfaf8fde1ea51c6b3bdde4c0d213", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 0bac5ddb6..9fd512d55 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -121,75 +232,20 @@ public class TownyUniverse {\n                     this.dataSource = new TownySQLSource(towny, this, saveDbType.toLowerCase());\n                     break;\n                 }\n-                default: {\n-                \n-                }\n+                default: {}\n             }\n-            FileMgmt.checkOrCreateFolder(rootFolder + File.separator + \"logs\"); // Setup the logs folder here as the logger will not yet be enabled.\n-           \n-            if (loadDbType.equalsIgnoreCase(saveDbType)) {\n+\n+            if (TownySettings.getLoadDatabase().equalsIgnoreCase(saveDbType)) {\n                 // Update all Worlds data files\n-                dataSource.saveAllWorlds();\n+                dataSource.saveAllWorlds();                \n             } else {\n                 //Formats are different so save ALL data.\n                 dataSource.saveAll();\n             }\n-            \n+            return true;\n         } catch (UnsupportedOperationException e) {\n-            System.out.println(\"[Towny] Error: Unsupported save format!\");\n             return false;\n         }\n-        \n-        Version lastRunVersion = new Version(TownySettings.getLastRunVersion(Towny.getPlugin().getVersion()));\n-        Version curVersion = new Version(Towny.getPlugin().getVersion());\n-        \n-        // Only migrate if the user just updated.\n-        if (!lastRunVersion.equals(curVersion)) {\n-\t\t\tSystem.out.println(\"[Towny] Performing Config Migrations...\");\n-\t\t\tConfigMigrator migrator = new ConfigMigrator(TownySettings.getConfig(), \"config-migration.json\");\n-\t\t\tmigrator.migrate();\n-\t\t}\n-        \n-        File f = new File(rootFolder, \"outpostschecked.txt\");\n-        if (!(f.exists())) {\n-            for (Town town : dataSource.getTowns()) {\n-                TownySQLSource.validateTownOutposts(town);\n-            }\n-            towny.saveResource(\"outpostschecked.txt\", false);\n-        }\n-\n-\t\t// Run both the backup cleanup and backup async.\n-\t\tperformBackup();\n-        \n-        return true;\n-    }\n-    \n-    public void performBackup() {\n-\t\tbackupFuture = CompletableFuture\n-\t\t\t.runAsync(new CleanupBackupTask())\n-\t\t\t.thenRunAsync(new BackupTask());\n-\t}\n-    \n-    private boolean loadDatabase(String loadDbType) {\n-        \n-        switch (loadDbType.toLowerCase()) {\n-            case \"ff\":\n-            case \"flatfile\": {\n-                this.dataSource = new TownyFlatFileSource(towny, this);\n-                break;\n-            }\n-            case \"h2\":\n-            case \"sqlite\":\n-            case \"mysql\": {\n-                this.dataSource = new TownySQLSource(towny, this, loadDbType.toLowerCase());\n-                break;\n-            }\n-            default: {\n-                return false;\n-            }\n-        }\n-        \n-        return dataSource.loadAll();\n     }\n     \n     public void startWarEvent() {\n", "next_change": {"commit": "74e9ba32761dc0afd1294b1150240b4be75a6c53", "changed_code": [{"header": "diff --git a/src/com/palmergames/bukkit/towny/TownyUniverse.java b/src/com/palmergames/bukkit/towny/TownyUniverse.java\nindex 9fd512d55..6afd662a9 100644\n--- a/src/com/palmergames/bukkit/towny/TownyUniverse.java\n+++ b/src/com/palmergames/bukkit/towny/TownyUniverse.java\n", "chunk": "@@ -247,43 +266,39 @@ public class TownyUniverse {\n             return false;\n         }\n     }\n-    \n-    public void startWarEvent() {\n-        warEvent = new War(towny, TownySettings.getWarTimeWarningDelay());\n-    }\n-    \n-    //TODO: This actually breaks the design pattern, so I might just redo warEvent to never be null.\n-    //TODO for: Articdive\n-    public void endWarEvent() {\n-        if (warEvent != null && warEvent.isWarTime()) {\n-            warEvent.toggleEnd();\n-        }\n+\n+    /**\n+     * Loads the Town and Nation Levels from the config.yml\n+     * \n+     * @return true if they have the required elements.\n+     */\n+    private boolean loadTownAndNationLevels() {\n+\t\t// Load Nation & Town level data into maps.\n+\t\ttry {\n+\t\t\tTownySettings.loadTownLevelConfig();\n+\t\t\tTownySettings.loadNationLevelConfig();\n+\t\t\treturn true;\n+\t\t} catch (IOException e) {\n+\t\t\treturn false;\n+\t\t}\n     }\n-    \n+\n+    /**\n+     * Run during onDisable() to finish cleanup and backup.\n+     */\n     public void finishTasks() {\n     \tif (backupFuture != null) {\n \t\t\t// Join into main thread for proper termination.\n \t\t\tbackupFuture.join();\n \t\t}\n \t}\n-    \n-    public void addWarZone(WorldCoord worldCoord) {\n-        try {\n-        \tif (worldCoord.getTownyWorld().isWarAllowed())\n-            \tworldCoord.getTownyWorld().addWarZone(worldCoord);\n-        } catch (NotRegisteredException e) {\n-            // Not a registered world\n-        }\n-        towny.updateCache(worldCoord);\n-    }\n-    \n-    public void removeWarZone(WorldCoord worldCoord) {\n-        try {\n-            worldCoord.getTownyWorld().removeWarZone(worldCoord);\n-        } catch (NotRegisteredException e) {\n-            // Not a registered world\n-        }\n-        towny.updateCache(worldCoord);\n+\n+    /*\n+     * DataSource, PermissionSource and RootFolder.\n+     */\n+\n+    public TownyDataSource getDataSource() {\n+        return dataSource;\n     }\n     \n     public TownyPermissionSource getPermissionSource() {\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "eb1b615e48badf8ce168b981e9fbc04276c53300", "message": "Merge commit", "committedDate": null}, {"oid": "6d3fede3f7fb9e8ad9bffee31128a3a2c169027e", "committedDate": "2020-07-16 07:36:36 -0500", "message": "Make fields/objects that don't change Immutable (#4171)"}, {"oid": "5e70b6098c89e7bf1f27ecaa98ac3ac27d343345", "committedDate": "2020-07-17 17:17:44 -0500", "message": "Unify Town and Nation code, and introduce new Eco Account Mechanics (#3988)"}, {"oid": "ad97784ad1939af7d35e274913f727dacb0c61a7", "committedDate": "2020-07-17 18:28:16 -0500", "message": "Move translation code to separate object and introduce new method: Translation.of() (#4177)"}, {"oid": "318a721dbc51c035ffab87924a20966e838e27af", "committedDate": "2020-07-25 20:46:32 -0500", "message": "Remove Manual Config Changes and Migrate them automatically instead. (#4209)"}, {"oid": "3670531bfccdc303af10574fc434a52c94aa9eb9", "committedDate": "2020-08-12 09:24:56 -0500", "message": "Concurrency QOL (#4256)"}, {"oid": "a5b067724d1119afca7b4b0dfc1ed1e6ac3f7b36", "committedDate": "2020-08-21 17:29:56 -0500", "message": "Hotfix/Delay backup until after initialization. (#4281)"}, {"oid": "2e5a8161a74dea444ebe95a153da0c8bf847f24a", "committedDate": "2020-09-10 06:51:36 -0500", "message": "Hotfix: Fix version strings pickup up unneeded input. (#4282)"}, {"oid": "1cafc551f7656675ce83f987f203146d56664e85", "committedDate": "2020-09-18 09:52:58 -0500", "message": "- Clean up and beautify the Towny startup logging."}, {"oid": "d7af446ebf5b91ce1f8e3b9f36247680800fd73e", "committedDate": "2020-10-06 09:17:11 -0500", "message": "Datasource Cleanup"}, {"oid": "53595c728d4ebab5e00bdea21c017039229467a5", "committedDate": "2020-10-21 17:23:28 -0500", "message": "Archive plot-block-data to save HDD space. (#4381)"}, {"oid": "610870ea5eab5a63507bd564dcf747c1feed89aa", "committedDate": "2020-10-22 18:30:34 -0500", "message": "Fix Config Migrator & Add debtCapModifier (#4383)"}, {"oid": "f824535167f2dfaf8fde1ea51c6b3bdde4c0d213", "committedDate": "2020-10-22 21:58:12 -0500", "message": "- Make loadSettings() cleaner, fix up flatfile creation missing in TownyDataBaseHandler."}, {"oid": "74e9ba32761dc0afd1294b1150240b4be75a6c53", "committedDate": "2020-10-22 22:49:52 -0500", "message": "Refactor TownyUniverse to be more orderly."}, {"oid": "588308510dcb02f98b328a7af8de2756fac84cd5", "committedDate": "2020-10-24 17:36:37 -0500", "message": "- Fix flipped save/load types."}, {"oid": "ab4a23fbdecdf58094db5fc16e3bdaa188d0317b", "committedDate": "2020-11-22 17:28:49 -0600", "message": "Cleanup Warning (#4463)"}, {"oid": "76c3bb83194a3fc97216ae10271aeea922bd6055", "committedDate": "2020-11-23 06:26:18 -0600", "message": "Backend Town UUID Implementation (#4421)"}, {"oid": "699cb13ad8c2f351b435e0d8755a11dbb07a1d99", "committedDate": "2020-11-27 19:09:18 -0600", "message": "Add missing @deprecated Javadoc tags and @Deprecated annotations (#4488)"}, {"oid": "d9ede6d122ca170f65122c77fce19fd7bfaccb24", "committedDate": "2020-11-30 06:27:33 -0600", "message": "Ensure Objects are properly assigned, closed, and compared to improve safety and accuracy. (#4496)"}, {"oid": "6467e5d3389f5c4252b4107eab8ba8d89217e2b0", "committedDate": "2020-11-30 06:52:09 -0600", "message": "Internal player name change handling. (#4474)"}, {"oid": "03da162b48b8546ad7032ff27048d8ffbdaa30cc", "committedDate": "2020-12-03 17:38:17 -0600", "message": "Implemented MySQL Connection Pooling (#4499)"}, {"oid": "e986b4ca638491e35293f47701a6cd190658eb61", "committedDate": "2020-12-12 07:00:18 -0600", "message": "Resident UUID Maps (#4510)"}, {"oid": "56ec4dc36e809222e0be4d57f92dcd4a8e4eed9b", "committedDate": "2020-12-12 14:02:51 -0600", "message": "fix javadoc"}, {"oid": "ec059e066885f9a7e1596e51e3f08e5bcbf9aa5a", "committedDate": "2020-12-22 06:00:06 -0600", "message": "- API: Added TownyLoadedDatabaseEvent.     - Called when has successfully loaded the database on startup as well as /ta database load and /ta reload db"}, {"oid": "03850742753828cf3952e3a4803a982f132f20df", "committedDate": "2020-12-29 13:47:01 -0600", "message": "Internal debt accounts (#4643)"}, {"oid": "bdd1c6d825fcef98dadbaba641ca1351978224b6", "committedDate": "2020-12-30 08:41:07 -0600", "message": "- Towny prices now fully translatable.     - Closes #4639.   - Bump language files to 0.95."}, {"oid": "8954896449dd7a6e087fbbf53241d2ac2aae9d7c", "committedDate": "2020-12-30 15:11:43 -0600", "message": "Nation UUID Map Refactor (#4608)"}, {"oid": "5f7eae92afeb501a18e70925a8289eeb25065692", "committedDate": "2021-01-15 06:25:19 -0600", "message": "Clean out or resolve a bunch of un-needed TODOs."}, {"oid": "33e7d887b2af4c54e9d7083145c2c44e37de1b00", "committedDate": "2021-01-24 07:45:54 -0600", "message": "- Removal of any methods deprecated earlier than 0.96.0.0.     - Marked many deprecated methods with the version in which they were deprecated for easier future removal."}, {"oid": "5fdf60cc64c5abc582991d05c058ca215319bf2a", "committedDate": "2021-01-29 09:56:29 -0600", "message": "Custom Metadata Types (#4700)"}, {"oid": "f83e1e58109dff9dc238a178964f3a62449d21be", "committedDate": "2021-03-10 15:42:24 -0600", "message": "Creation of SpawnPoint object, and DrawSpawnPointsTask. (#4792)"}, {"oid": "2949c272b5b183e7969aa11cec910e97323ab632", "committedDate": "2021-03-26 07:48:46 -0500", "message": "- Fix Spawn Point particles not disappearing when spawn points are moved.     - Closes #4830."}, {"oid": "f9d43d50fad7bd08ce5b1a65ccdae20357ddcfb7", "committedDate": "2021-04-14 15:47:04 -0500", "message": "- Make plotgroups which load and throw an AlreadyRegisteredException actually print out which one is no good."}, {"oid": "879a4741d5d1915b9d48d7588797b7020bae2075", "committedDate": "2021-05-12 08:39:46 -0500", "message": "- API: Add TownyAPI.getResidentOrNull(TownBlock).     - Gets the resident who owns the townblock or null if unowned.     - Best used after TownBlock.hasResident();   - API: Add TownyAPI.getTownOrNull(TownBlock).     - Gets the town who owns the townblock or null if wilderness.     - Best used after TownBlock.hasTown();"}, {"oid": "134679993683b26caa02f5aacfbcac556a736076", "committedDate": "2021-05-12 10:59:51 -0500", "message": "Add TownBlock.getTownOrNull() and TownBlock.getResidentOrNull() and replace most uses of TownBlock.getResident(), as well as begin replacing uses of TownBlock.getTown()."}, {"oid": "c6ceaeeee22bd75a5adf5949cec8f6503a421682", "committedDate": "2021-05-12 12:18:42 -0500", "message": "Replace more TownBlock.getTown() with .getTownOrNull() where safe."}, {"oid": "5825f24e07a3679a186f8cf538d1ffd0949a61f7", "committedDate": "2021-06-02 11:08:25 -0500", "message": "Jail Overhaul (#4703)"}, {"oid": "ab72310bab6c902e69c928dee26b781225dbbcc2", "committedDate": "2021-07-06 14:31:28 -0500", "message": "Creates a cache of sorts for the wilderness coords on the Towny ASCII map. (#5045)"}, {"oid": "99badadb9b967a368c39512b856a4428180de004", "committedDate": "2021-07-09 15:02:44 -0500", "message": "Feature/wilderness event for map hud (#5055)"}, {"oid": "57da3444d6f3e0adec8054fc1dbf70ae14feea1b", "committedDate": "2021-07-14 17:03:21 -0500", "message": "Overhaul/plotgroup overhaul (#5063)"}, {"oid": "6b22d493265f1c89d5bf479384608b28265fec05", "committedDate": "2021-07-14 17:12:57 -0500", "message": "Fix Javadoc"}, {"oid": "67e36e588e20529188e03e4491c5ce26a2d18b11", "committedDate": "2021-07-30 05:44:29 -0500", "message": "Replace all sysouts (#5126)"}, {"oid": "51bae5b369d53ad94b4ffc2ee4dfcde29953be97", "committedDate": "2021-07-31 19:11:36 -0500", "message": "Feature/hibernatedresidents (#5136)"}, {"oid": "032ed2782d48d2f5558141c3752ecbbc6778513a", "committedDate": "2021-08-02 11:35:21 -0500", "message": "Renames all of our language files to use standard locale names."}, {"oid": "e19db82f16c3e291996b7728c866fa6f352a87f2", "committedDate": "2021-08-18 09:14:34 -0500", "message": "Feature: Automatic name replacing"}, {"oid": "f8e164c15fab431c447ef9d57b5e09caf620d305", "committedDate": "2021-08-18 10:22:15 -0500", "message": "Creates database.yml (#5184)"}, {"oid": "b69dde0e552d4fe8db8ddf54233908e0a4b679ff", "committedDate": "2021-08-18 16:58:24 -0500", "message": "- Fix database.yml not being converted to the correct loading setting."}, {"oid": "c8c51ce425c5b1fef1154a32b9ceaf5acd8bdd3a", "committedDate": "2021-08-18 16:59:37 -0500", "message": "Actually fix that."}, {"oid": "781e3101d44a598f55a7482ecda783b7d54c4b2b", "committedDate": "2021-08-21 08:14:20 -0500", "message": "- Actually fix database.yml not being converted to correctly for servers using mysql."}, {"oid": "215e0d6f753fcfae657759b0c97696789db35cab", "committedDate": "2021-08-25 13:29:35 -0500", "message": "Concept/translation registry (#5167)"}, {"oid": "72f018991a6449be5bfb4a6aec8a19645db9cd72", "committedDate": "2021-09-29 14:52:33 -0500", "message": "Improve logging (#5299)"}, {"oid": "97f1b2cd1d5916b90a6dd8af24bd48afbe819fec", "committedDate": "2021-10-01 12:33:13 -0500", "message": "Remove old Outpost code and fix my names. (#5324)"}, {"oid": "699b3f28bba082ea19839b9a03a771e37ddd4bcf", "committedDate": "2021-10-26 15:34:37 -0500", "message": "Comment some methods still used via FlagWar"}, {"oid": "bfe1e61713b080dc13ce5ba7fdfa9c226192bf8b", "committedDate": "2021-10-28 08:46:19 -0500", "message": "- Remove TownBlock, TownyWorld and TownyUniverse warzone methods.     - No longer used by FlagWar."}, {"oid": "f1000ff1c92e1f61d522ab5a0abd0a3ad56e88ca", "committedDate": "2021-11-07 08:20:46 -0600", "message": "Purge EventWar from Towny's code base. (#5422)"}, {"oid": "b29816ecc25e92ef7118b89fa8b9edb87facd08a", "committedDate": "2022-02-13 13:25:09 -0600", "message": "Pre 0 98 0 0 deprecations (#5739)"}, {"oid": "7063efafe13ee610f447efdbe5fc9488857b39c1", "committedDate": "2022-02-15 12:48:39 -0600", "message": "Remove all of the pre-0.97.0.0 deprecations. (#5584)"}, {"oid": "0603c0f44624df95d9c45938f603d4d092f9a448", "committedDate": "2022-04-02 13:08:29 -0500", "message": "Improve hibernated residents loading (#5840)"}, {"oid": "6a70a095461763ac776101d7c54f6838454ffd78", "committedDate": "2022-07-21 17:15:28 -0500", "message": "Exclude transitive bukkit api dependency (#6051)"}, {"oid": "4474311f269d7b8a01e5d02ada79aed61191336b", "committedDate": "2022-08-29 11:42:04 -0500", "message": "A selection of changes to bring in from the UUID branch. (#6137)"}, {"oid": "f74d0bc704a475264227f0a0398f6f8eb4bf794e", "committedDate": "2022-08-29 11:45:32 -0500", "message": "Swap out Validate import."}, {"oid": "64b1bd54cc3621bf9b583851354110cf14b38063", "committedDate": "2022-08-29 16:30:20 -0500", "message": "Adopt plot group .id to .uuid changes. (#6139)"}, {"oid": "456d8df13d8755db32765f9d5a3b4575be359cb7", "committedDate": "2022-10-19 09:44:16 -0500", "message": "Event firing overhaul (#6250)"}, {"oid": "1cdfe8f891fc90574ded74776aa75acf92c4ee61", "committedDate": "2022-11-08 22:37:13 +0100", "message": "Replace our unmodifiable annotation with jetbrains equiv"}, {"oid": "710fd1277d1e8a0e0c70275fa9830aae56b553aa", "committedDate": "2023-01-12 20:10:41 +0100", "message": "Add a 30 second timeout for backup future"}]}, {"oid": "8ab51055aa41e251e6c4891892f1b7b64886dc06", "url": "https://github.com/TownyAdvanced/Towny/commit/8ab51055aa41e251e6c4891892f1b7b64886dc06", "message": "fix formatting", "committedDate": "2020-07-06T20:42:17Z", "type": "commit"}]}