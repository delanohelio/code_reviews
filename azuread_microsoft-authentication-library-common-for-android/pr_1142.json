{"pr_number": 1142, "pr_title": "Adding DevicePinSetupRule", "pr_author": "kkrishnareddy", "pr_createdAt": "2020-12-02T07:38:43Z", "pr_url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142", "timeline": [{"oid": "5201c8387621a0f44d57fbdbe02953b693549e1a", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5201c8387621a0f44d57fbdbe02953b693549e1a", "message": "Adding DevicePinSetupRule", "committedDate": "2020-12-02T07:37:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTAyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534649025", "body": "add license", "bodyText": "add license", "bodyHTML": "<p dir=\"auto\">add license</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:55:21Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MjE4MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534652181", "bodyText": "added license.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTAyNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTA3NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534649075", "body": "add javadoc", "bodyText": "add javadoc", "bodyHTML": "<p dir=\"auto\">add javadoc</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:55:29Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MjI3NA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534652274", "bodyText": "added javadoc.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:05:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTA3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTM1OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534649359", "body": "what does this comment about api 16+ mean here?", "bodyText": "what does this comment about api 16+ mean here?", "bodyHTML": "<p dir=\"auto\">what does this comment about api 16+ mean here?</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:56:24Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();\n+        KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE); //api 16+", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1NTYxNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534655617", "bodyText": "it supports for api version greater than 16.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:16:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTM1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTgzNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534649834", "body": "variable names should start with lower case as `pinButton`", "bodyText": "variable names should start with lower case as pinButton", "bodyHTML": "<p dir=\"auto\">variable names should start with lower case as <code>pinButton</code></p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:57:48Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();\n+        KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE); //api 16+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            return keyguardManager.isDeviceSecure();\n+        }\n+        return keyguardManager.isKeyguardSecure();\n+    }\n+\n+    private void setLock() throws UiObjectNotFoundException {\n+\n+        UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        launchIntent(Settings.ACTION_SECURITY_SETTINGS);\n+\n+        UiObject screenLock = UiAutomatorUtils.obtainUiObjectWithText(\"Screen lock\");\n+        Assert.assertTrue(screenLock.exists());\n+        screenLock.click();\n+        //click on PIN.\n+        UiObject PinButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"PIN\");", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MjQzOA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534652438", "bodyText": "changed to pinButton", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:06:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY0OTgzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDE2Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534650163", "body": "Let's put the pin code `1234` in a global constant and just reference the constant here", "bodyText": "Let's put the pin code 1234 in a global constant and just reference the constant here", "bodyHTML": "<p dir=\"auto\">Let's put the pin code <code>1234</code> in a global constant and just reference the constant here</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:58:54Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();\n+        KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE); //api 16+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            return keyguardManager.isDeviceSecure();\n+        }\n+        return keyguardManager.isKeyguardSecure();\n+    }\n+\n+    private void setLock() throws UiObjectNotFoundException {\n+\n+        UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        launchIntent(Settings.ACTION_SECURITY_SETTINGS);\n+\n+        UiObject screenLock = UiAutomatorUtils.obtainUiObjectWithText(\"Screen lock\");\n+        Assert.assertTrue(screenLock.exists());\n+        screenLock.click();\n+        //click on PIN.\n+        UiObject PinButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"PIN\");\n+        Assert.assertTrue(PinButton.exists());\n+        PinButton.click();\n+\n+        //click on NO\n+        UiObject noButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"NO\");\n+        Assert.assertTrue(noButton.exists());\n+        noButton.click();\n+\n+        //press 1234\n+        UiObject passwordField = UiAutomatorUtils.obtainUiObjectWithResourceId(\"com.android.settings:id/password_entry\");\n+        Assert.assertTrue(passwordField.exists());\n+        passwordField.setText(\"1234\");", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1NTY2Mg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534655662", "bodyText": "done.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:16:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDE2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDMwOQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534650309", "body": "If this line is not needed then let's remove it", "bodyText": "If this line is not needed then let's remove it", "bodyHTML": "<p dir=\"auto\">If this line is not needed then let's remove it</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:59:22Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();\n+        KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE); //api 16+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            return keyguardManager.isDeviceSecure();\n+        }\n+        return keyguardManager.isKeyguardSecure();\n+    }\n+\n+    private void setLock() throws UiObjectNotFoundException {\n+\n+        UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        launchIntent(Settings.ACTION_SECURITY_SETTINGS);\n+\n+        UiObject screenLock = UiAutomatorUtils.obtainUiObjectWithText(\"Screen lock\");\n+        Assert.assertTrue(screenLock.exists());\n+        screenLock.click();\n+        //click on PIN.\n+        UiObject PinButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"PIN\");\n+        Assert.assertTrue(PinButton.exists());\n+        PinButton.click();\n+\n+        //click on NO\n+        UiObject noButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"NO\");\n+        Assert.assertTrue(noButton.exists());\n+        noButton.click();\n+\n+        //press 1234\n+        UiObject passwordField = UiAutomatorUtils.obtainUiObjectWithResourceId(\"com.android.settings:id/password_entry\");\n+        Assert.assertTrue(passwordField.exists());\n+        passwordField.setText(\"1234\");\n+        //press Enter.\n+        //UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1NTc0NQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534655745", "bodyText": "removed the line.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDMwOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDQwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534650400", "body": "nit: add `final` to all variables where applicable", "bodyText": "nit: add final to all variables where applicable", "bodyHTML": "<p dir=\"auto\">nit: add <code>final</code> to all variables where applicable</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:59:39Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();\n+        KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE); //api 16+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            return keyguardManager.isDeviceSecure();\n+        }\n+        return keyguardManager.isKeyguardSecure();\n+    }\n+\n+    private void setLock() throws UiObjectNotFoundException {\n+\n+        UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1NTgyNA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534655824", "bodyText": "made all variables to final", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDQwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDQ4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534650487", "body": "Since this is public, let's add some javadoc for it", "bodyText": "Since this is public, let's add some javadoc for it", "bodyHTML": "<p dir=\"auto\">Since this is public, let's add some javadoc for it</p>", "author": "shahzaibj", "createdAt": "2020-12-03T03:59:55Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/CommonUtils.java", "diffHunk": "@@ -159,4 +159,11 @@ public static void copyFileToFolderInSdCard(final File file, @Nullable final Str\n         AdbShellUtils.executeShellCommand(\"mkdir -p \" + destinationPath);\n         AdbShellUtils.executeShellCommandAsCurrentPackage(\"cp \" + filePath + \" \" + destFilePath);\n     }\n+\n+    public static void launchIntent(@NonNull final String action) {", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1ODA3Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534658077", "bodyText": "added the javadoc.", "author": "kkrishnareddy", "createdAt": "2020-12-03T04:24:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDQ4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MDg5MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534650891", "body": "nit: add `final` to variables when possible", "bodyText": "nit: add final to variables when possible", "bodyHTML": "<p dir=\"auto\">nit: add <code>final</code> to variables when possible</p>", "author": "shahzaibj", "createdAt": "2020-12-03T04:01:05Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {\n+        Context context = ApplicationProvider.getApplicationContext();", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MTA5OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534651099", "body": "do we need this member variable? Can we just not call the `isDeviceSecured` method whenever needed?", "bodyText": "do we need this member variable? Can we just not call the isDeviceSecured method whenever needed?", "bodyHTML": "<p dir=\"auto\">do we need this member variable? Can we just not call the <code>isDeviceSecured</code> method whenever needed?</p>", "author": "shahzaibj", "createdAt": "2020-12-03T04:01:38Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1MTIwMA==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r534651200", "body": "Method names should start with lower case\r\n\r\n```suggestion\r\n    private boolean isDeviceSecured() {\r\n```", "bodyText": "Method names should start with lower case\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private boolean IsDeviceSecured() {\n          \n          \n            \n                private boolean isDeviceSecured() {", "bodyHTML": "<p dir=\"auto\">Method names should start with lower case</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">IsDeviceSecured</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isDeviceSecured</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-03T04:01:59Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final Boolean isLocked = IsDeviceSecured();\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isLocked) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean IsDeviceSecured() {", "originalCommit": "5201c8387621a0f44d57fbdbe02953b693549e1a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "537f242d568920b8ff220b03c63172b190c518dd", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/537f242d568920b8ff220b03c63172b190c518dd", "message": "Resolving PR comments", "committedDate": "2020-12-03T04:04:33Z", "type": "commit"}, {"oid": "4bfcecddf8323e1fc8f37447b6879fd9a430c336", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4bfcecddf8323e1fc8f37447b6879fd9a430c336", "message": "added javadoc to launchintent function", "committedDate": "2020-12-03T04:15:16Z", "type": "commit"}, {"oid": "9ac97ed6853786df555fdff1170e4309ed12eb7e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9ac97ed6853786df555fdff1170e4309ed12eb7e", "message": "resolving PR comments", "committedDate": "2020-12-03T04:19:06Z", "type": "commit"}, {"oid": "195bc0ee6318063caca70f76d9ccaeaeef5dd9b4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/195bc0ee6318063caca70f76d9ccaeaeef5dd9b4", "message": "Resolving pr comments", "committedDate": "2020-12-03T04:20:50Z", "type": "commit"}, {"oid": "9b7e2be3e89bb2855af48c943fd11e36006f94a5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9b7e2be3e89bb2855af48c943fd11e36006f94a5", "message": "Resolving PR comments", "committedDate": "2020-12-03T04:22:28Z", "type": "commit"}, {"oid": "a04e9a27369e4591ddaac3a7ac1e52e1dccdaaa8", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a04e9a27369e4591ddaac3a7ac1e52e1dccdaaa8", "message": "Update DevicePinSetupRule.java", "committedDate": "2020-12-03T04:29:16Z", "type": "commit"}, {"oid": "752812798ef06a77375495c94e0cb8ec02944c72", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/752812798ef06a77375495c94e0cb8ec02944c72", "message": "Adding Device Pin Setup rule in getPrimary Rules", "committedDate": "2020-12-04T09:25:58Z", "type": "commit"}, {"oid": "1673c06eb2f359c4151a1062f4399daed43a00bb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1673c06eb2f359c4151a1062f4399daed43a00bb", "message": "Merge branch 'kkoppart-device_lock_rule' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kkoppart-device_lock_rule", "committedDate": "2020-12-04T09:26:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk0OTczMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r539949733", "body": "```suggestion\r\n    static final String PASSWORD = \"1234\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final String password = \"1234\";\n          \n          \n            \n                static final String PASSWORD = \"1234\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">password</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1234<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first\">static</span><span class=\"x x-last\"> </span><span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">PASSWORD</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1234<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-10T07:55:27Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,103 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+/**\n+ * A test rule that allows you to setup PIN for the device if the pin is not setup and\n+ * if it is already setup then it will keep the same PIN.\n+ */\n+public class DevicePinSetupRule implements TestRule {\n+\n+    final String password = \"1234\";", "originalCommit": "1673c06eb2f359c4151a1062f4399daed43a00bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk1MDMyNg==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r539950326", "body": "```suggestion\r\n     * Launches an activity specified by the action.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * it will launch activity specified in the action.\n          \n          \n            \n                 * Launches an activity specified by the action.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\">it will launch </span>activity specified <span class=\"x x-first x-last\">in</span> the action.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">Launches</span><span class=\"x x-last\"> an </span>activity specified <span class=\"x x-first x-last\">by</span> the action.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-10T07:56:31Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/CommonUtils.java", "diffHunk": "@@ -159,4 +159,15 @@ public static void copyFileToFolderInSdCard(final File file, @Nullable final Str\n         AdbShellUtils.executeShellCommand(\"mkdir -p \" + destinationPath);\n         AdbShellUtils.executeShellCommandAsCurrentPackage(\"cp \" + filePath + \" \" + destFilePath);\n     }\n+\n+    /**\n+     * it will launch activity specified in the action.", "originalCommit": "1673c06eb2f359c4151a1062f4399daed43a00bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0c759c9b5d856ff84dbf372730725745f8f2e703", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0c759c9b5d856ff84dbf372730725745f8f2e703", "message": "Update uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/utils/CommonUtils.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-12-10T07:57:04Z", "type": "commit"}, {"oid": "92e7fc41959ce374966a442f822821bf86cdfb4b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/92e7fc41959ce374966a442f822821bf86cdfb4b", "message": "Update DevicePinSetupRule.java", "committedDate": "2020-12-10T07:58:49Z", "type": "commit"}, {"oid": "9350b0150d2ed3987b759340c727af6fdb31cd7e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9350b0150d2ed3987b759340c727af6fdb31cd7e", "message": "Merge branch 'dev' into kkoppart-device_lock_rule", "committedDate": "2020-12-12T17:56:45Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541707489", "body": "I did not get NO button on my device and therefore test is failing....for me it goes straight to entering the PIN.\r\n\r\nBy the way, I think this entire method needs to move to the `ISettings` class and change logic based on device", "bodyText": "I did not get NO button on my device and therefore test is failing....for me it goes straight to entering the PIN.\nBy the way, I think this entire method needs to move to the ISettings class and change logic based on device", "bodyHTML": "<p dir=\"auto\">I did not get NO button on my device and therefore test is failing....for me it goes straight to entering the PIN.</p>\n<p dir=\"auto\">By the way, I think this entire method needs to move to the <code>ISettings</code> class and change logic based on device</p>", "author": "shahzaibj", "createdAt": "2020-12-12T18:21:06Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,103 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+/**\n+ * A test rule that allows you to setup PIN for the device if the pin is not setup and\n+ * if it is already setup then it will keep the same PIN.\n+ */\n+public class DevicePinSetupRule implements TestRule {\n+\n+    static final String PASSWORD = \"1234\";\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isDeviceSecured()) {\n+                    setLock();\n+                }\n+                base.evaluate();\n+            }\n+        };\n+    }\n+\n+    private boolean isDeviceSecured() {\n+        final Context context = ApplicationProvider.getApplicationContext();\n+        final KeyguardManager keyguardManager =\n+                (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+            return keyguardManager.isDeviceSecure();\n+        }\n+        return keyguardManager.isKeyguardSecure();\n+    }\n+\n+    private void setLock() throws UiObjectNotFoundException {\n+\n+        final UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        launchIntent(Settings.ACTION_SECURITY_SETTINGS);\n+\n+        final UiObject screenLock = UiAutomatorUtils.obtainUiObjectWithText(\"Screen lock\");\n+        Assert.assertTrue(screenLock.exists());\n+        screenLock.click();\n+        final UiObject pinButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"PIN\");\n+        Assert.assertTrue(pinButton.exists());\n+        pinButton.click();\n+        final UiObject noButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"NO\");\n+        Assert.assertTrue(noButton.exists());", "originalCommit": "9350b0150d2ed3987b759340c727af6fdb31cd7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwOTE0OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541709149", "bodyText": "Why are we clicking on the NO button here? (I don't see such a button)", "author": "shahzaibj", "createdAt": "2020-12-12T18:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgyMTExNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541821115", "bodyText": "In India, I think we are getting it no Button.", "author": "kkrishnareddy", "createdAt": "2020-12-13T01:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgyMjY1OQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541822659", "bodyText": "Okay let's remove the no button click....and also let's move this entire logic to ISettings so we can change resource ids etc...based on API level and device", "author": "shahzaibj", "createdAt": "2020-12-13T02:04:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMDc2Mw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541830763", "bodyText": "For API 28 I am getting no Button, but for API 29 I am not getting any NO Button.", "author": "kkrishnareddy", "createdAt": "2020-12-13T03:07:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMTY2MQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541831661", "bodyText": "Moved the entire logic to ISettings. and it supports API 28 and API 29. and I didn't written logic for the Samsung device.", "author": "kkrishnareddy", "createdAt": "2020-12-13T03:13:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjMxNw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541832317", "bodyText": "Interesting....I did not get NO button for either API 28 or 29...so yeah probably a difference in behavior based on location....\nFor samsung device, you can skip it for now....I will add that logic in later", "author": "shahzaibj", "createdAt": "2020-12-13T03:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcwNzQ4OQ=="}], "type": "inlineReview"}, {"oid": "c198e314723b927c50bd332ba31835a98bbb986c", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c198e314723b927c50bd332ba31835a98bbb986c", "message": "Merge branch 'dev' into kkoppart-device_lock_rule", "committedDate": "2020-12-12T22:46:38Z", "type": "commit"}, {"oid": "9949cffee548d9f70550bfed031d97c60501e5d5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9949cffee548d9f70550bfed031d97c60501e5d5", "message": "moved pinsetup function to ISettings", "committedDate": "2020-12-13T03:03:22Z", "type": "commit"}, {"oid": "5017cbbd8bd661d2b934a9ddc44b6562f6712341", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5017cbbd8bd661d2b934a9ddc44b6562f6712341", "message": "Merge branch 'kkoppart-device_lock_rule' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kkoppart-device_lock_rule", "committedDate": "2020-12-13T03:05:23Z", "type": "commit"}, {"oid": "f7dced4db0fc418eb2c5721c59170ed849b956a0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f7dced4db0fc418eb2c5721c59170ed849b956a0", "message": "Resolving Merge Conflicts", "committedDate": "2020-12-13T03:09:41Z", "type": "commit"}, {"oid": "6f584f76e802948e8225d17dcf9afe467a7306d6", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6f584f76e802948e8225d17dcf9afe467a7306d6", "message": "Resolving Merge conflicts", "committedDate": "2020-12-13T03:11:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjU0Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541832546", "body": "Can we rename this to something like `setPinOnDevice`? ", "bodyText": "Can we rename this to something like setPinOnDevice?", "bodyHTML": "<p dir=\"auto\">Can we rename this to something like <code>setPinOnDevice</code>?</p>", "author": "shahzaibj", "createdAt": "2020-12-13T03:19:51Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/ISettings.java", "diffHunk": "@@ -87,4 +88,14 @@ void addWorkAccount(final ITestBroker expectedBroker,\n      * UI appears on the device. It will activate the admin for whichever admin requested the activation.\n      */\n     void activateAdmin();\n+\n+    /**\n+     * Adds screen lock to the device.\n+     */\n+    void addPinSetup() throws UiObjectNotFoundException;", "originalCommit": "6f584f76e802948e8225d17dcf9afe467a7306d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjY4Nw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541832687", "bodyText": "Also can we accept the PIN as a parameter to this method? Inside the method then we can just set whatever PIN was supplied as the argument", "author": "shahzaibj", "createdAt": "2020-12-13T03:20:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjcwMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541832703", "bodyText": "I will rename it to setPinOnDevice.", "author": "kkrishnareddy", "createdAt": "2020-12-13T03:21:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjgxMQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541832811", "bodyText": "So basically when you call this method in the rule, then you will pass in the pin value", "author": "shahzaibj", "createdAt": "2020-12-13T03:21:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMjU0Ng=="}], "type": "inlineReview"}, {"oid": "c7962950872248f65f7d0570d43ad11840411dd5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c7962950872248f65f7d0570d43ad11840411dd5", "message": "Renaming function name", "committedDate": "2020-12-13T03:27:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMzc1Ng==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541833756", "body": "```suggestion\r\n    static final String PIN = \"1234\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static final String PASSWORD = \"1234\";\n          \n          \n            \n                static final String PIN = \"1234\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">PASSWORD</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1234<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">PIN</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1234<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-13T03:29:29Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.device.settings.BaseSettings;\n+import com.microsoft.identity.client.ui.automation.device.settings.ISettings;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+/**\n+ * A test rule that allows you to setup PIN for the device if the pin is not setup and\n+ * if it is already setup then it will keep the same PIN.\n+ */\n+public class DevicePinSetupRule implements TestRule {\n+\n+    static final String PASSWORD = \"1234\";", "originalCommit": "c7962950872248f65f7d0570d43ad11840411dd5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c8c816fe602e2071b53c4a80f3b6e97ecb8cba75", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c8c816fe602e2071b53c4a80f3b6e97ecb8cba75", "message": "Update uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-12-13T03:29:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMzkyNQ==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541833925", "body": "```suggestion\r\n                    TestContext.getTestContext().getTestDevice().getSettings().setPinOnDevice(PIN);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                TestContext.getTestContext().getTestDevice().getSettings().setPinOnDevice(PASSWORD);\n          \n          \n            \n                                TestContext.getTestContext().getTestDevice().getSettings().setPinOnDevice(PIN);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">TestContext</span><span class=\"pl-k\">.</span>getTestContext()<span class=\"pl-k\">.</span>getTestDevice()<span class=\"pl-k\">.</span>getSettings()<span class=\"pl-k\">.</span>setPinOnDevice(<span class=\"pl-c1 x x-first x-last\">PASSWORD</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">TestContext</span><span class=\"pl-k\">.</span>getTestContext()<span class=\"pl-k\">.</span>getTestDevice()<span class=\"pl-k\">.</span>getSettings()<span class=\"pl-k\">.</span>setPinOnDevice(<span class=\"pl-c1 x x-first x-last\">PIN</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-13T03:30:28Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.rules;\n+\n+import android.app.KeyguardManager;\n+import android.content.Context;\n+import android.os.Build;\n+import android.provider.Settings;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.device.settings.BaseSettings;\n+import com.microsoft.identity.client.ui.automation.device.settings.ISettings;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+import org.junit.rules.TestRule;\n+import org.junit.runner.Description;\n+import org.junit.runners.model.Statement;\n+\n+import static com.microsoft.identity.client.ui.automation.utils.CommonUtils.launchIntent;\n+\n+/**\n+ * A test rule that allows you to setup PIN for the device if the pin is not setup and\n+ * if it is already setup then it will keep the same PIN.\n+ */\n+public class DevicePinSetupRule implements TestRule {\n+\n+    static final String PIN = \"1234\";\n+\n+    @Override\n+    public Statement apply(final Statement base, final Description description) {\n+        return new Statement() {\n+            @Override\n+            public void evaluate() throws Throwable {\n+                if (!isDeviceSecured()) {\n+                    TestContext.getTestContext().getTestDevice().getSettings().setPinOnDevice(PASSWORD);", "originalCommit": "c8c816fe602e2071b53c4a80f3b6e97ecb8cba75", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "37ff6983fd55651ff8a1911140e570921195239f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/37ff6983fd55651ff8a1911140e570921195239f", "message": "Update uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/rules/DevicePinSetupRule.java", "committedDate": "2020-12-13T03:30:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzNDcxMw==", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1142#discussion_r541834713", "body": "That's how it seems to come up on my Pixel 3 (there may be difference in API 29 on Pixel 2 vs 3)....let's change it to this to get it to work on Pixel 3\r\n\r\n```suggestion\r\n            final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"Done\");\r\n```", "bodyText": "That's how it seems to come up on my Pixel 3 (there may be difference in API 29 on Pixel 2 vs 3)....let's change it to this to get it to work on Pixel 3\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"DONE\");\n          \n          \n            \n                        final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"Done\");", "bodyHTML": "<p dir=\"auto\">That's how it seems to come up on my Pixel 3 (there may be difference in API 29 on Pixel 2 vs 3)....let's change it to this to get it to work on Pixel 3</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">UiObject</span> doneButton <span class=\"pl-k\">=</span> <span class=\"pl-smi\">UiAutomatorUtils</span><span class=\"pl-k\">.</span>obtainUiObjectWithExactText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">DONE</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">UiObject</span> doneButton <span class=\"pl-k\">=</span> <span class=\"pl-smi\">UiAutomatorUtils</span><span class=\"pl-k\">.</span>obtainUiObjectWithExactText(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Done</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "shahzaibj", "createdAt": "2020-12-13T03:36:45Z", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java", "diffHunk": "@@ -240,6 +240,32 @@ private UiObject obtainDisableAdminButton(final DeviceAdmin deviceAdmin) {\n         );\n     }\n \n+    @Override\n+    public void setPinOnDevice(final String password) throws UiObjectNotFoundException {\n+        UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        launchScreenLockPage();\n+        final UiObject screenLock = UiAutomatorUtils.obtainUiObjectWithText(\"Screen lock\");\n+        Assert.assertTrue(screenLock.exists());\n+        screenLock.click();\n+        final UiObject pinButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"PIN\");\n+        Assert.assertTrue(pinButton.exists());\n+        pinButton.click();\n+        UiAutomatorUtils.handleInput(\"com.android.settings:id/password_entry\", password);\n+        device.pressEnter();\n+        UiAutomatorUtils.handleInput(\"com.android.settings:id/password_entry\", password);\n+        device.pressEnter();\n+        handleDoneButton();\n+    }\n+\n+    private void handleDoneButton() throws UiObjectNotFoundException {\n+        if (android.os.Build.VERSION.SDK_INT == 28) {\n+            UiAutomatorUtils.handleButtonClick(\"com.android.settings:id/redaction_done_button\");\n+        } else {\n+            final UiObject doneButton = UiAutomatorUtils.obtainUiObjectWithExactText(\"DONE\");", "originalCommit": "37ff6983fd55651ff8a1911140e570921195239f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a5f24414ee3d0145a98cff4e25ce97ddd397e8eb", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a5f24414ee3d0145a98cff4e25ce97ddd397e8eb", "message": "Update uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/device/settings/GoogleSettings.java\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>", "committedDate": "2020-12-13T03:38:07Z", "type": "commit"}, {"oid": "9d9fcb36dfeae603813fcde9f1c250f6478cf76d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9d9fcb36dfeae603813fcde9f1c250f6478cf76d", "message": "Merge branch 'dev' into kkoppart-device_lock_rule", "committedDate": "2020-12-17T07:27:52Z", "type": "commit"}]}