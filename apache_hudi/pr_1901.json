{"pr_number": 1901, "pr_title": "[HUDI-532] Add java doc for the test classes of hudi test suite", "pr_author": "wangxianghu", "pr_createdAt": "2020-08-02T03:59:07Z", "pr_url": "https://github.com/apache/hudi/pull/1901", "timeline": [{"oid": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "url": "https://github.com/apache/hudi/commit/7af8725af13b11e2fe71351a3a5cf51af37f9717", "message": "[HUDI-532]Add java doc for hudi test suite test classes", "committedDate": "2020-08-11T14:10:12Z", "type": "commit"}, {"oid": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "url": "https://github.com/apache/hudi/commit/7af8725af13b11e2fe71351a3a5cf51af37f9717", "message": "[HUDI-532]Add java doc for hudi test suite test classes", "committedDate": "2020-08-11T14:10:12Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MTI1MA==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475291250", "body": "`Base test class for IT Test helps to run command and generate data.`?", "bodyText": "Base test class for IT Test helps to run command and generate data.?", "bodyHTML": "<p dir=\"auto\"><code>Base test class for IT Test helps to run command and generate data.</code>?</p>", "author": "yanghua", "createdAt": "2020-08-24T00:49:02Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/ITTestBase.java", "diffHunk": "@@ -50,6 +50,9 @@\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertNotEquals;\n \n+/**\n+ * Base test class for IT Test. helps to run cmd and generate data.", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MTUyOQ==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475291529", "body": "`Helps`? This usage may not be correct?", "bodyText": "Helps? This usage may not be correct?", "bodyHTML": "<p dir=\"auto\"><code>Helps</code>? This usage may not be correct?</p>", "author": "yanghua", "createdAt": "2020-08-24T00:50:45Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/TestDFSHoodieTestSuiteWriterAdapter.java", "diffHunk": "@@ -52,6 +52,9 @@\n import org.junit.jupiter.api.Test;\n import org.mockito.Mockito;\n \n+/**\n+ * {@link HoodieTestSuiteWriter}. Helps to test writing a DFS file.", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MTg2Nw==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475291867", "body": "please remove all the comments of this method", "bodyText": "please remove all the comments of this method", "bodyHTML": "<p dir=\"auto\">please remove all the comments of this method</p>", "author": "yanghua", "createdAt": "2020-08-24T00:53:16Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/configuration/TestWorkflowBuilder.java", "diffHunk": "@@ -30,41 +30,58 @@\n import org.apache.hudi.integ.testsuite.dag.WorkflowDag;\n import org.junit.jupiter.api.Test;\n \n+/**\n+ * Unit test for the build process of {@link DagNode} and {@link WorkflowDag}.\n+ */\n public class TestWorkflowBuilder {\n \n   @Test\n   public void testWorkloadOperationSequenceBuilder() {", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MjI1Nw==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475292257", "body": "`record` -> `records`", "bodyText": "record -> records", "bodyHTML": "<p dir=\"auto\"><code>record</code> -&gt; <code>records</code></p>", "author": "yanghua", "createdAt": "2020-08-24T00:55:41Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/converter/TestUpdateConverter.java", "diffHunk": "@@ -49,11 +53,16 @@ public void teardown() {\n     jsc.stop();\n   }\n \n+  /**\n+   * Test {@link UpdateConverter} by generates random updates from existing records.\n+   */\n   @Test\n   public void testGenerateUpdateRecordsFromInputRecords() throws Exception {\n+    // 1. prepare input record", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI5MjM2MQ==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475292361", "body": "with what?", "bodyText": "with what?", "bodyHTML": "<p dir=\"auto\">with what?</p>", "author": "yanghua", "createdAt": "2020-08-24T00:56:12Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/ComplexDagGenerator.java", "diffHunk": "@@ -46,6 +51,7 @@ public WorkflowDag build() {\n         .withNumInsertPartitions(1)\n         .withRecordSize(10000).build());\n \n+    // function to build ValidateNode with", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNTAzOQ==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475305039", "body": "`Unit test`?", "bodyText": "Unit test?", "bodyHTML": "<p dir=\"auto\"><code>Unit test</code>?</p>", "author": "yanghua", "createdAt": "2020-08-24T02:03:13Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/job/TestHoodieTestSuiteJob.java", "diffHunk": "@@ -49,6 +49,9 @@\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n \n+/**\n+ * Unit tests against {@link HoodieTestSuiteJob}.", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNTE1MQ==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475305151", "body": "`Methods`?", "bodyText": "Methods?", "bodyHTML": "<p dir=\"auto\"><code>Methods</code>?</p>", "author": "yanghua", "createdAt": "2020-08-24T02:03:45Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/utils/TestUtils.java", "diffHunk": "@@ -45,6 +48,15 @@\n     return dataGenerator.generateGenericRecords(numRecords);\n   }\n \n+  /**\n+   * Method help to create avro files and save it to file.", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwNTI2NA==", "url": "https://github.com/apache/hudi/pull/1901#discussion_r475305264", "body": "We should not only use `{@link }` in the comment, add more description.", "bodyText": "We should not only use {@link } in the comment, add more description.", "bodyHTML": "<p dir=\"auto\">We should not only use <code>{@link }</code> in the comment, add more description.</p>", "author": "yanghua", "createdAt": "2020-08-24T02:04:25Z", "path": "hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/utils/TestUtils.java", "diffHunk": "@@ -45,6 +48,15 @@\n     return dataGenerator.generateGenericRecords(numRecords);\n   }\n \n+  /**\n+   * Method help to create avro files and save it to file.\n+   *\n+   * @param jsc               {@link JavaSparkContext}.", "originalCommit": "7af8725af13b11e2fe71351a3a5cf51af37f9717", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ca0a57596095dcf19cb37c82394e279080a3b1e", "url": "https://github.com/apache/hudi/commit/5ca0a57596095dcf19cb37c82394e279080a3b1e", "message": "minor adjust about Unit test doc", "committedDate": "2020-08-24T11:28:21Z", "type": "commit"}]}