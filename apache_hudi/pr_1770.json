{"pr_number": 1770, "pr_title": "[HUDI-708]Add temps show and unit test for TempViewCommand", "pr_author": "hddong", "pr_createdAt": "2020-06-27T14:24:19Z", "pr_url": "https://github.com/apache/hudi/pull/1770", "timeline": [{"oid": "934ccad3617e92724b7ef38535a8281e0bda47af", "url": "https://github.com/apache/hudi/commit/934ccad3617e92724b7ef38535a8281e0bda47af", "message": "[HUDI-708]Add unit test for TempViewCommand", "committedDate": "2020-07-20T09:38:27Z", "type": "commit"}, {"oid": "934ccad3617e92724b7ef38535a8281e0bda47af", "url": "https://github.com/apache/hudi/commit/934ccad3617e92724b7ef38535a8281e0bda47af", "message": "[HUDI-708]Add unit test for TempViewCommand", "committedDate": "2020-07-20T09:38:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NTg3NQ==", "url": "https://github.com/apache/hudi/pull/1770#discussion_r458465875", "body": "Can we log the detailed exception information before returning the result?", "bodyText": "Can we log the detailed exception information before returning the result?", "bodyHTML": "<p dir=\"auto\">Can we log the detailed exception information before returning the result?</p>", "author": "yanghua", "createdAt": "2020-07-22T00:34:30Z", "path": "hudi-cli/src/main/java/org/apache/hudi/cli/commands/TempViewCommand.java", "diffHunk": "@@ -20,36 +20,55 @@\n \n import org.apache.hudi.cli.HoodieCLI;\n \n+import org.apache.hudi.exception.HoodieException;\n import org.springframework.shell.core.CommandMarker;\n import org.springframework.shell.core.annotation.CliCommand;\n import org.springframework.shell.core.annotation.CliOption;\n import org.springframework.stereotype.Component;\n \n-import java.io.IOException;\n-\n /**\n  * CLI command to query/delete temp views.\n  */\n @Component\n public class TempViewCommand implements CommandMarker {\n \n-  private static final String EMPTY_STRING = \"\";\n+  public static final String QUERY_SUCCESS = \"Query ran successfully!\";\n+  public static final String QUERY_FAIL = \"Query ran failed!\";\n+  public static final String SHOW_SUCCESS = \"Show all views name successfully!\";\n \n-  @CliCommand(value = \"temp_query\", help = \"query against created temp view\")\n+  @CliCommand(value = {\"temp_query\", \"temp query\"}, help = \"query against created temp view\")\n   public String query(\n-          @CliOption(key = {\"sql\"}, mandatory = true, help = \"select query to run against view\") final String sql)\n-          throws IOException {\n+          @CliOption(key = {\"sql\"}, mandatory = true, help = \"select query to run against view\") final String sql) {\n+\n+    try {\n+      HoodieCLI.getTempViewProvider().runQuery(sql);\n+      return QUERY_SUCCESS;\n+    } catch (HoodieException ex) {\n+      return QUERY_FAIL;", "originalCommit": "934ccad3617e92724b7ef38535a8281e0bda47af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgxNzc1Mw==", "url": "https://github.com/apache/hudi/pull/1770#discussion_r458817753", "bodyText": "runQuery showAllViews  and deleteTable  had log the detailed exception.", "author": "hddong", "createdAt": "2020-07-22T14:05:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE1OTc3NQ==", "url": "https://github.com/apache/hudi/pull/1770#discussion_r459159775", "bodyText": "OK~", "author": "yanghua", "createdAt": "2020-07-23T00:41:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NTg3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NzA2Mg==", "url": "https://github.com/apache/hudi/pull/1770#discussion_r458467062", "body": "IMO, this error description is not correct, right? The throwable not only covers the initialization of the spark context", "bodyText": "IMO, this error description is not correct, right? The throwable not only covers the initialization of the spark context", "bodyHTML": "<p dir=\"auto\">IMO, this error description is not correct, right? The throwable not only covers the initialization of the spark context</p>", "author": "yanghua", "createdAt": "2020-07-22T00:38:45Z", "path": "hudi-cli/src/main/java/org/apache/hudi/cli/utils/SparkTempViewProvider.java", "diffHunk": "@@ -101,6 +101,17 @@ public void runQuery(String sqlText) {\n     }\n   }\n \n+  @Override\n+  public void showAllViews() {\n+    try {\n+      sqlContext.sql(\"SHOW TABLES\").show(Integer.MAX_VALUE, false);\n+    } catch (Throwable ex) {\n+      // log full stack trace and rethrow. Without this its difficult to debug failures, if any\n+      LOG.error(\"unable to initialize spark context \", ex);", "originalCommit": "934ccad3617e92724b7ef38535a8281e0bda47af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgyMTA0Ng==", "url": "https://github.com/apache/hudi/pull/1770#discussion_r458821046", "bodyText": "IMO, this error description is not correct, right? The throwable not only covers the initialization of the spark context\n\nYes, change it to unable to get all views.", "author": "hddong", "createdAt": "2020-07-22T14:09:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ2NzA2Mg=="}], "type": "inlineReview"}, {"oid": "fe7974739ee5d1f37c1b86b305086840b04e599d", "url": "https://github.com/apache/hudi/commit/fe7974739ee5d1f37c1b86b305086840b04e599d", "message": "fix", "committedDate": "2020-07-22T14:08:30Z", "type": "commit"}]}