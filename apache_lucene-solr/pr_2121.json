{"pr_number": 2121, "pr_title": "SOLR-10860: Return proper error code for bad input incase of inplace updates", "pr_author": "munendrasn", "pr_createdAt": "2020-12-05T06:27:11Z", "pr_url": "https://github.com/apache/lucene-solr/pull/2121", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwNDM5OA==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r538804398", "body": "can we default to `(unknown id)` otherwise the error message will look weird I think.", "bodyText": "can we default to (unknown id) otherwise the error message will look weird I think.", "bodyHTML": "<p dir=\"auto\">can we default to <code>(unknown id)</code> otherwise the error message will look weird I think.</p>", "author": "madrob", "createdAt": "2020-12-08T21:01:11Z", "path": "solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java", "diffHunk": "@@ -143,6 +147,15 @@ public SolrInputDocument merge(final SolrInputDocument fromDoc, SolrInputDocumen\n     return toDoc;\n   }\n \n+  private static String getID(SolrInputDocument doc, IndexSchema schema) {\n+    String id = \"\";", "originalCommit": "e2925ab079ead8d16ad312f777858478a2e0b651", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAyOTEyNw==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r539029127", "bodyText": "I'm thinking to rephrase the above error message to something like so that it is better than the previous msg. If the id is not known then, I think maybe it is better not to send anything related id, wdyt?\n\"Error:\" + getID(toDoc, schema) + \"Unknown operation for the an atomic update : \" + key;", "author": "munendrasn", "createdAt": "2020-12-09T05:52:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwNDM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwODg3Mw==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r538808873", "body": "I don't think we want `msg` copied since it will be in the cause anyway.", "bodyText": "I don't think we want msg copied since it will be in the cause anyway.", "bodyHTML": "<p dir=\"auto\">I don't think we want <code>msg</code> copied since it will be in the cause anyway.</p>", "author": "madrob", "createdAt": "2020-12-08T21:08:52Z", "path": "solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java", "diffHunk": "@@ -553,7 +574,15 @@ private Object getNativeFieldValue(String fieldName, Object val) {\n       return val;\n     }\n     SchemaField sf = schema.getField(fieldName);\n-    return sf.getType().toNativeType(val);\n+    try {\n+      return sf.getType().toNativeType(val);\n+    } catch (SolrException ex) {\n+      throw new SolrException(SolrException.ErrorCode.getErrorCode(ex.code()),\n+          \"Error converting field '\" + sf.getName() + \"'='\" +val+\"' to native type, msg=\" + ex.getMessage(), ex);", "originalCommit": "e2925ab079ead8d16ad312f777858478a2e0b651", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAyOTcyMw==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r539029723", "bodyText": "cause gets lost in the metadata section of the response so, thought this would give simpler insight into error. Also, trying to follow the same convention as other error messages in DocumentBuilder", "author": "munendrasn", "createdAt": "2020-12-09T05:54:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwODg3Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwOTc5Mw==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r538809793", "body": "This surprises me a little bit that we can't increment a float by an integer amount?", "bodyText": "This surprises me a little bit that we can't increment a float by an integer amount?", "bodyHTML": "<p dir=\"auto\">This surprises me a little bit that we can't increment a float by an integer amount?</p>", "author": "madrob", "createdAt": "2020-12-08T21:10:30Z", "path": "solr/core/src/test/org/apache/solr/update/TestInPlaceUpdatesStandalone.java", "diffHunk": "@@ -121,6 +123,36 @@ public void deleteAllAndCommit() throws Exception {\n     assertU(commit(\"softCommit\", \"false\"));\n   }\n \n+  @Test\n+  public void testUpdateBadRequest() throws Exception {\n+    final long version1 = addAndGetVersion(sdoc(\"id\", \"1\", \"title_s\", \"first\", \"inplace_updatable_float\", 41), null);\n+    assertU(commit());\n+\n+    // invalid value with set operation\n+    SolrException e = expectThrows(SolrException.class,\n+        () -> addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"set\", \"NOT_NUMBER\")));\n+    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n+    MatcherAssert.assertThat(e.getMessage(), containsString(\"For input string: \\\"NOT_NUMBER\\\"\"));\n+\n+    // invalid value with inc operation\n+    e = expectThrows(SolrException.class,\n+        () -> addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", \"NOT_NUMBER\")));\n+    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n+    MatcherAssert.assertThat(e.getMessage(), containsString(\"For input string: \\\"NOT_NUMBER\\\"\"));\n+\n+    // inc op with null value\n+    e = expectThrows(SolrException.class,\n+        () -> addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\", map(\"inc\", null)));\n+    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());\n+    MatcherAssert.assertThat(e.getMessage(), containsString(\"Invalid input 'null' for field inplace_updatable_float\"));\n+\n+    e = expectThrows(SolrException.class,\n+        () -> addAndAssertVersion(version1, \"id\", \"1\", \"inplace_updatable_float\",", "originalCommit": "e2925ab079ead8d16ad312f777858478a2e0b651", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAyNDEwOQ==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r539024109", "bodyText": "We can increment float by an integer. In this particular test input, verifying the case when instead of passing the number, a list of numbers is passed. Previously, Solr used to return 500 with the current changes Bad request would be returned\n\"Invalid input '[123]' for field inplace_updatable_float\"", "author": "munendrasn", "createdAt": "2020-12-09T05:45:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwOTc5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwMzcxOA==", "url": "https://github.com/apache/lucene-solr/pull/2121#discussion_r543503718", "body": "```suggestion\r\n    if ( sf != null ) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if( sf != null ) {\n          \n          \n            \n                if ( sf != null ) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span>( sf <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> ) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span><span class=\"x x-first x-last\"> </span>( sf <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> ) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jbampton", "createdAt": "2020-12-15T16:40:20Z", "path": "solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java", "diffHunk": "@@ -143,6 +147,15 @@ public SolrInputDocument merge(final SolrInputDocument fromDoc, SolrInputDocumen\n     return toDoc;\n   }\n \n+  private static String getID(SolrInputDocument doc, IndexSchema schema) {\n+    String id = \"\";\n+    SchemaField sf = schema.getUniqueKeyField();\n+    if( sf != null ) {", "originalCommit": "e2925ab079ead8d16ad312f777858478a2e0b651", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8f61a64a1cc77792e0e8fbd888a3cc9cdbeca96", "url": "https://github.com/apache/lucene-solr/commit/d8f61a64a1cc77792e0e8fbd888a3cc9cdbeca96", "message": "SOLR-10860: return proper error code on invalid val with inplace update", "committedDate": "2021-01-07T14:45:39Z", "type": "commit"}, {"oid": "8d43777d601074c65df12190d87c1f4fa04f2e4a", "url": "https://github.com/apache/lucene-solr/commit/8d43777d601074c65df12190d87c1f4fa04f2e4a", "message": "SOLR-10860: handle invalid value for inc op with inplace update\n\nUses toNativeType to convert increment value instead of direct parsing.\nAlso, throw error when inc operation is specified for non-numeric field", "committedDate": "2021-01-07T14:45:39Z", "type": "commit"}, {"oid": "e1a017827d0f9e4aea37857e2eacb476a7840bc3", "url": "https://github.com/apache/lucene-solr/commit/e1a017827d0f9e4aea37857e2eacb476a7840bc3", "message": "SOLR-10860: add tests", "committedDate": "2021-01-07T14:45:39Z", "type": "commit"}, {"oid": "7cc90d81878b0a90483db596e3a5b45b9f4d9113", "url": "https://github.com/apache/lucene-solr/commit/7cc90d81878b0a90483db596e3a5b45b9f4d9113", "message": "add changes entry", "committedDate": "2021-01-07T14:47:35Z", "type": "commit"}, {"oid": "e329e309d4a0b76224edc10c9a1cae7b00dd3f38", "url": "https://github.com/apache/lucene-solr/commit/e329e309d4a0b76224edc10c9a1cae7b00dd3f38", "message": "feat: address review comments", "committedDate": "2021-01-07T14:51:17Z", "type": "commit"}, {"oid": "e329e309d4a0b76224edc10c9a1cae7b00dd3f38", "url": "https://github.com/apache/lucene-solr/commit/e329e309d4a0b76224edc10c9a1cae7b00dd3f38", "message": "feat: address review comments", "committedDate": "2021-01-07T14:51:17Z", "type": "forcePushed"}]}