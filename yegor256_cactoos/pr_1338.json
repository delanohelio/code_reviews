{"pr_number": 1338, "pr_title": "#1331 - Replacing usage of MatcherAssert.assertThat", "pr_author": "marceloamadeu", "pr_createdAt": "2020-04-05T15:00:54Z", "pr_url": "https://github.com/yegor256/cactoos/pull/1338", "merge_commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "timeline": [{"oid": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "url": "https://github.com/yegor256/cactoos/commit/e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "message": "Replacing usage of MatcherAssert.assertThat", "committedDate": "2020-04-05T14:56:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNDg5OA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403714898", "body": "@marceloamadeu usually in the cactoos project, we always use the form: \"Must ...\" followed by what the object under test must do. Here it would be: \"Must copy bytes to file path\". Can you fix it here and in the other that you added?", "bodyText": "@marceloamadeu usually in the cactoos project, we always use the form: \"Must ...\" followed by what the object under test must do. Here it would be: \"Must copy bytes to file path\". Can you fix it here and in the other that you added?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> usually in the cactoos project, we always use the form: \"Must ...\" followed by what the object under test must do. Here it would be: \"Must copy bytes to file path\". Can you fix it here and in the other that you added?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:10:35Z", "path": "src/test/java/org/cactoos/io/TeeInputFromBytesTest.java", "diffHunk": "@@ -51,40 +51,43 @@ public void copiesFromBytesToPath() throws IOException {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n+            \"Bytes to path test - Message content is required\",", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1MzY1Mg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404953652", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:39:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNDg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex f6640263..99e68532 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -52,7 +52,7 @@ public final class TeeInputFromBytesTest {\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new Assertion<>(\n-            \"Bytes to path test - Message content is required\",\n+            \"Must copy bytes to file path\",\n             new TeeInput(\n                 new BytesOf(message),\n                 output.toPath()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex f6640263..a8f342a7 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -52,7 +56,7 @@ public final class TeeInputFromBytesTest {\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new Assertion<>(\n-            \"Bytes to path test - Message content is required\",\n+            \"Must copy bytes to file path\",\n             new TeeInput(\n                 new BytesOf(message),\n                 output.toPath()\n", "next_change": {"commit": "c97508386b9c6d590177d710ee2a8b71889a704b", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a8f342a7..65ea14d9 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -57,11 +58,15 @@ public final class TeeInputFromBytesTest {\n         final File output = this.folder.newFile();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TeeInput(\n-                new BytesOf(message),\n-                output.toPath()\n+            new TextOf(\n+                new TeeInput(\n+                    new BytesOf(message),\n+                    output.toPath()\n+                )\n             ),\n-            new InputHasContent(message)\n+            new TextIs(\n+                new TextOf(output.toPath())\n+            )\n         ).affirm();\n     }\n \n", "next_change": {"commit": "9a0b62881e9dbf3805abe8ad51b5e0138f705a3d", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 65ea14d9..182d4976 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -56,17 +57,13 @@ public final class TeeInputFromBytesTest {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n+        new LengthOf(\n+            new TeeInput(new BytesOf(message), output.toPath())\n+        ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TextOf(\n-                new TeeInput(\n-                    new BytesOf(message),\n-                    output.toPath()\n-                )\n-            ),\n-            new TextIs(\n-                new TextOf(output.toPath())\n-            )\n+            new TextOf(output).asString(),\n+            new IsEqual<>(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "f72270cd828a5c61dfccac1757e09514781bbb12", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 182d4976..a3b5631d 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -62,8 +61,8 @@ public final class TeeInputFromBytesTest {\n         ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TextOf(output).asString(),\n-            new IsEqual<>(message)\n+            new InputOf(output),\n+            new InputHasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a3b5631d..214a7970 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -62,7 +59,7 @@ public final class TeeInputFromBytesTest {\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n             new InputOf(output),\n-            new InputHasContent(message)\n+            new HasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -49,13 +48,13 @@ public final class TeeInputFromBytesTest {\n     public final TemporaryFolder folder = new TemporaryFolder();\n \n     @Test\n-    public void copiesFromBytesToPath() throws IOException {\n+    public void copiesFromBytesToPath() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output.toPath())\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n             new InputOf(output),\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -64,13 +63,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToFile() throws IOException {\n+    public void copiesFromBytesToFile() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output)\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 65ea14d9..182d4976 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -75,17 +72,13 @@ public final class TeeInputFromBytesTest {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n+        new LengthOf(\n+            new TeeInput(new BytesOf(message), output)\n+        ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n-            new TextOf(\n-                new TeeInput(\n-                    new BytesOf(message),\n-                    output\n-                )\n-            ),\n-            new TextIs(\n-                new TextOf(output.toPath())\n-            )\n+            new TextOf(output).asString(),\n+            new IsEqual<>(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "f72270cd828a5c61dfccac1757e09514781bbb12", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 182d4976..a3b5631d 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -77,8 +76,8 @@ public final class TeeInputFromBytesTest {\n         ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n-            new TextOf(output).asString(),\n-            new IsEqual<>(message)\n+            new InputOf(output),\n+            new InputHasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a3b5631d..214a7970 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -77,7 +74,7 @@ public final class TeeInputFromBytesTest {\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n-            new InputHasContent(message)\n+            new HasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -64,13 +63,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToFile() throws IOException {\n+    public void copiesFromBytesToFile() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output)\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -79,13 +78,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToOutput() throws IOException {\n+    public void copiesFromBytesToOutput() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 output \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), new OutputTo(output))\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must bytes to output\",\n             new InputOf(output),\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "c97508386b9c6d590177d710ee2a8b71889a704b", "committedDate": "2020-04-26 02:33:09 -0300", "message": "TeeInput - Correction of tests"}, {"oid": "9a0b62881e9dbf3805abe8ad51b5e0138f705a3d", "committedDate": "2020-04-27 23:16:39 -0300", "message": "Corrections"}, {"oid": "f72270cd828a5c61dfccac1757e09514781bbb12", "committedDate": "2020-04-28 12:19:36 -0300", "message": "Correction for use of InputHasContent"}, {"oid": "4c45c3eff872e622fb28307114cb8464a1344afc", "committedDate": "2020-05-02 16:33:11 +0200", "message": "Test content of file, not the content of TeeInput"}, {"oid": "a210b96d42d243825c3e8146fe87334d0e785187", "committedDate": "2021-01-16 03:16:53 +0000", "message": "Move some Bytes classes from io to bytes package #1199"}, {"oid": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "committedDate": "2021-01-30 13:28:51 +0000", "message": "Update cactoos-matchers to latest version #1531"}, {"oid": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "committedDate": "2021-02-22 15:37:07 +0100", "message": "(#1335) LengthOf is now just a Scalar of Long"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTA2MA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715060", "body": "@marceloamadeu reading, I realise this test is incorrect: it does not test that the path actually has the content, just that `TeeInput`, as an `Input` has the content: can you add a `todo` for fixing this problem for all `TeeInput` tests (this file and others test files) where it makes sense?", "bodyText": "@marceloamadeu reading, I realise this test is incorrect: it does not test that the path actually has the content, just that TeeInput, as an Input has the content: can you add a todo for fixing this problem for all TeeInput tests (this file and others test files) where it makes sense?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> reading, I realise this test is incorrect: it does not test that the path actually has the content, just that <code>TeeInput</code>, as an <code>Input</code> has the content: can you add a <code>todo</code> for fixing this problem for all <code>TeeInput</code> tests (this file and others test files) where it makes sense?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:11:58Z", "path": "src/test/java/org/cactoos/io/TeeInputFromBytesTest.java", "diffHunk": "@@ -51,40 +51,43 @@ public void copiesFromBytesToPath() throws IOException {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n+            \"Bytes to path test - Message content is required\",\n             new TeeInput(\n                 new BytesOf(message),\n                 output.toPath()\n             ),\n             new InputHasContent(message)\n-        );\n+        ).affirm();", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDI3MQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954271", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:40:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTA2MA=="}], "type": "inlineReview", "revised_code": {"commit": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex f6640263..99e68532 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -52,7 +52,7 @@ public final class TeeInputFromBytesTest {\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new Assertion<>(\n-            \"Bytes to path test - Message content is required\",\n+            \"Must copy bytes to file path\",\n             new TeeInput(\n                 new BytesOf(message),\n                 output.toPath()\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex f6640263..a8f342a7 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -52,7 +56,7 @@ public final class TeeInputFromBytesTest {\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new Assertion<>(\n-            \"Bytes to path test - Message content is required\",\n+            \"Must copy bytes to file path\",\n             new TeeInput(\n                 new BytesOf(message),\n                 output.toPath()\n", "next_change": {"commit": "c97508386b9c6d590177d710ee2a8b71889a704b", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a8f342a7..65ea14d9 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -57,11 +58,15 @@ public final class TeeInputFromBytesTest {\n         final File output = this.folder.newFile();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TeeInput(\n-                new BytesOf(message),\n-                output.toPath()\n+            new TextOf(\n+                new TeeInput(\n+                    new BytesOf(message),\n+                    output.toPath()\n+                )\n             ),\n-            new InputHasContent(message)\n+            new TextIs(\n+                new TextOf(output.toPath())\n+            )\n         ).affirm();\n     }\n \n", "next_change": {"commit": "9a0b62881e9dbf3805abe8ad51b5e0138f705a3d", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 65ea14d9..182d4976 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -56,17 +57,13 @@ public final class TeeInputFromBytesTest {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n+        new LengthOf(\n+            new TeeInput(new BytesOf(message), output.toPath())\n+        ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TextOf(\n-                new TeeInput(\n-                    new BytesOf(message),\n-                    output.toPath()\n-                )\n-            ),\n-            new TextIs(\n-                new TextOf(output.toPath())\n-            )\n+            new TextOf(output).asString(),\n+            new IsEqual<>(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "f72270cd828a5c61dfccac1757e09514781bbb12", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 182d4976..a3b5631d 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -62,8 +61,8 @@ public final class TeeInputFromBytesTest {\n         ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n-            new TextOf(output).asString(),\n-            new IsEqual<>(message)\n+            new InputOf(output),\n+            new InputHasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a3b5631d..214a7970 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -62,7 +59,7 @@ public final class TeeInputFromBytesTest {\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n             new InputOf(output),\n-            new InputHasContent(message)\n+            new HasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -49,13 +48,13 @@ public final class TeeInputFromBytesTest {\n     public final TemporaryFolder folder = new TemporaryFolder();\n \n     @Test\n-    public void copiesFromBytesToPath() throws IOException {\n+    public void copiesFromBytesToPath() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 path \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output.toPath())\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file path\",\n             new InputOf(output),\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -64,13 +63,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToFile() throws IOException {\n+    public void copiesFromBytesToFile() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output)\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 65ea14d9..182d4976 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -75,17 +72,13 @@ public final class TeeInputFromBytesTest {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n+        new LengthOf(\n+            new TeeInput(new BytesOf(message), output)\n+        ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n-            new TextOf(\n-                new TeeInput(\n-                    new BytesOf(message),\n-                    output\n-                )\n-            ),\n-            new TextIs(\n-                new TextOf(output.toPath())\n-            )\n+            new TextOf(output).asString(),\n+            new IsEqual<>(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "f72270cd828a5c61dfccac1757e09514781bbb12", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 182d4976..a3b5631d 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -77,8 +76,8 @@ public final class TeeInputFromBytesTest {\n         ).intValue();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n-            new TextOf(output).asString(),\n-            new IsEqual<>(message)\n+            new InputOf(output),\n+            new InputHasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex a3b5631d..214a7970 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -77,7 +74,7 @@ public final class TeeInputFromBytesTest {\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n-            new InputHasContent(message)\n+            new HasContent(message)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -64,13 +63,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToFile() throws IOException {\n+    public void copiesFromBytesToFile() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 file \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), output)\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must copy bytes to file\",\n             new InputOf(output),\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\nindex 214a7970..f412c09c 100644\n--- a/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputFromBytesTest.java\n", "chunk": "@@ -79,13 +78,13 @@ public final class TeeInputFromBytesTest {\n     }\n \n     @Test\n-    public void copiesFromBytesToOutput() throws IOException {\n+    public void copiesFromBytesToOutput() throws Exception {\n         final String message =\n             \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449 output \u00e4\u00c4 \u00fc\u00dc \u00f6\u00d6 and \u00df\";\n         final File output = this.folder.newFile();\n         new LengthOf(\n             new TeeInput(new BytesOf(message), new OutputTo(output))\n-        ).intValue();\n+        ).value();\n         new Assertion<>(\n             \"Must bytes to output\",\n             new InputOf(output),\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "c97508386b9c6d590177d710ee2a8b71889a704b", "committedDate": "2020-04-26 02:33:09 -0300", "message": "TeeInput - Correction of tests"}, {"oid": "9a0b62881e9dbf3805abe8ad51b5e0138f705a3d", "committedDate": "2020-04-27 23:16:39 -0300", "message": "Corrections"}, {"oid": "f72270cd828a5c61dfccac1757e09514781bbb12", "committedDate": "2020-04-28 12:19:36 -0300", "message": "Correction for use of InputHasContent"}, {"oid": "4c45c3eff872e622fb28307114cb8464a1344afc", "committedDate": "2020-05-02 16:33:11 +0200", "message": "Test content of file, not the content of TeeInput"}, {"oid": "a210b96d42d243825c3e8146fe87334d0e785187", "committedDate": "2021-01-16 03:16:53 +0000", "message": "Move some Bytes classes from io to bytes package #1199"}, {"oid": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "committedDate": "2021-01-30 13:28:51 +0000", "message": "Update cactoos-matchers to latest version #1531"}, {"oid": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "committedDate": "2021-02-22 15:37:07 +0100", "message": "(#1335) LengthOf is now just a Scalar of Long"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTE3MA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715170", "body": "@marceloamadeu can you update the message of the test you modified to follow the same form as explained before?", "bodyText": "@marceloamadeu can you update the message of the test you modified to follow the same form as explained before?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you update the message of the test you modified to follow the same form as explained before?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:12:50Z", "path": "src/test/java/org/cactoos/io/TeeInputStreamTest.java", "diffHunk": "@@ -47,7 +47,7 @@\n     public void copiesContentByteByByte() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Can't copy InputStream to OutputStream byte by byte\",", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "702cedafae18b64ef46baf2a30b6689076065b39", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex c547bb4a..a89006cb 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -48,7 +48,7 @@ public final class TeeInputStreamTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n         new Assertion<>(\n-            \"Can't copy InputStream to OutputStream byte by byte\",\n+            \"Must copy InputStream to OutputStream byte by byte\",\n             new TextOf(\n                 new ReaderOf(\n                     new TeeInputStream(\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex c547bb4a..027ef1a2 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -48,7 +48,7 @@ public final class TeeInputStreamTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n         new Assertion<>(\n-            \"Can't copy InputStream to OutputStream byte by byte\",\n+            \"Must copy InputStream to OutputStream byte by byte\",\n             new TextOf(\n                 new ReaderOf(\n                     new TeeInputStream(\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex 027ef1a2..d3107e48 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -41,10 +41,10 @@ import org.llorllale.cactoos.matchers.Assertion;\n  * @checkstyle JavadocMethodCheck (500 lines)\n  * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n-public final class TeeInputStreamTest {\n+final class TeeInputStreamTest {\n \n     @Test\n-    public void copiesContentByteByByte() throws Exception {\n+    void copiesContentByteByByte() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n         new Assertion<>(\n", "next_change": {"commit": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex d3107e48..b508aaad 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -44,6 +44,7 @@ import org.llorllale.cactoos.matchers.Assertion;\n final class TeeInputStreamTest {\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     void copiesContentByteByByte() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "committedDate": "2021-02-22 15:37:07 +0100", "message": "(#1335) LengthOf is now just a Scalar of Long"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "1a3841bcbec498e84ef31aa502940b60d13b3e47", "committedDate": "2022-07-15 20:12:39 +0300", "message": "#1644 IoCheckedBytes"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTQ4NA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715484", "body": "@marceloamadeu can you change that to `new IsTrue()`?", "bodyText": "@marceloamadeu can you change that to new IsTrue()?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you change that to <code>new IsTrue()</code>?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:15:15Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -43,19 +43,19 @@\n     @Test\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Cannot create a temp file\",\n                 Files.exists(file.value()),\n                 Matchers.is(true)", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDQxMg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954412", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:40:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTQ4NA=="}], "type": "inlineReview", "revised_code": {"commit": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..d41c5ffd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -45,8 +47,8 @@ public final class TempFileTest {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n                 \"Cannot create a temp file\",\n-                Files.exists(file.value()),\n-                Matchers.is(true)\n+                Files.exists(file.value()),                \n+                new IsTrue()\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "d79b0da22178dff5d3ee25effc63d2ebcd2109c4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex d41c5ffd..7bf87470 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -47,7 +47,7 @@ public final class TempFileTest {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n                 \"Cannot create a temp file\",\n-                Files.exists(file.value()),                \n+                Files.exists(file.value()),\n                 new IsTrue()\n             ).affirm();\n         }\n", "next_change": {"commit": "702cedafae18b64ef46baf2a30b6689076065b39", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 7bf87470..96d9fb43 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -48,7 +49,7 @@ public final class TempFileTest {\n             new Assertion<>(\n                 \"Cannot create a temp file\",\n                 Files.exists(file.value()),\n-                new IsTrue()\n+                new IsEqual<>(true)\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -47,7 +47,7 @@ public final class TempFileTest {\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n-                \"Cannot create a temp file\",\n+                \"Must create a temp file\",\n                 Files.exists(file.value()),\n                 new IsEqual<>(true)\n             ).affirm();\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -44,9 +49,9 @@ public final class TempFileTest {\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n-                \"Cannot create a temp file\",\n+                \"Must create a temp file\",\n                 Files.exists(file.value()),\n-                Matchers.is(true)\n+                new IsEqual<>(true)\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -57,7 +57,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileInCustomPath() throws Exception {\n+    void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n", "next_change": {"commit": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa2b829 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -64,15 +63,11 @@ final class TempFileTest {\n                 \"Must create a temp file at a custom path\",\n                 file,\n                 Matchers.allOf(\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return Files.exists(tmp.value());\n-                        }\n+                    new Verifies<>(\n+                        tmp -> Files.exists(tmp.value())\n                     ),\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return tmp.value().getParent().equals(custom);\n-                        }\n+                    new Verifies<>(\n+                        tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n             ).affirm();\n", "next_change": {"commit": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex dfa2b829..397b7279 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,17 +56,18 @@ final class TempFileTest {\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                Matchers.allOf(\n-                    new Verifies<>(\n+                new AllOf<>(\n+                    new Verifies<TempFile>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<>(\n+                    new Verifies<TempFile>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": {"commit": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 397b7279..21d9f3f1 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,18 +56,17 @@ final class TempFileTest {\n     }\n \n     @Test\n-    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                new AllOf<>(\n-                    new Verifies<TempFile>(\n+                new AllOf<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTU3Nw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715577", "body": "@marceloamadeu can you change that to `new IsNot<>(IsTrue())` or `new IsEqual<>(false)` ?", "bodyText": "@marceloamadeu can you change that to new IsNot<>(IsTrue()) or new IsEqual<>(false) ?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you change that to <code>new IsNot&lt;&gt;(IsTrue())</code> or <code>new IsEqual&lt;&gt;(false)</code> ?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:15:59Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -70,19 +70,19 @@ public void createFileInCustomPath() throws Exception {\n                         }\n                     )\n                 )\n-            );\n+            ).affirm();\n         }\n     }\n \n     @Test\n     public void deleteFile() throws Exception {\n         final TempFile file = new TempFile();\n         file.close();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Cannot delete file on close\",\n             Files.exists(file.value()),\n             Matchers.is(false)", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDUzNA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954534", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:40:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTU3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..d41c5ffd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -80,8 +82,8 @@ public final class TempFileTest {\n         file.close();\n         new Assertion<>(\n             \"Cannot delete file on close\",\n-            Files.exists(file.value()),\n-            Matchers.is(false)\n+            Files.exists(file.value()),            \n+            new IsEqual<>(false)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "d79b0da22178dff5d3ee25effc63d2ebcd2109c4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex d41c5ffd..7bf87470 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -82,7 +82,7 @@ public final class TempFileTest {\n         file.close();\n         new Assertion<>(\n             \"Cannot delete file on close\",\n-            Files.exists(file.value()),            \n+            Files.exists(file.value()),\n             new IsEqual<>(false)\n         ).affirm();\n     }\n", "next_change": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 7bf87470..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -81,7 +82,7 @@ public final class TempFileTest {\n         final TempFile file = new TempFile();\n         file.close();\n         new Assertion<>(\n-            \"Cannot delete file on close\",\n+            \"Must delete file on close\",\n             Files.exists(file.value()),\n             new IsEqual<>(false)\n         ).affirm();\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -79,9 +84,9 @@ public final class TempFileTest {\n         final TempFile file = new TempFile();\n         file.close();\n         new Assertion<>(\n-            \"Cannot delete file on close\",\n+            \"Must delete file on close\",\n             Files.exists(file.value()),\n-            Matchers.is(false)\n+            new IsEqual<>(false)\n         ).affirm();\n     }\n \n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -91,7 +91,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileWithPrefix() throws Exception {\n+    void createFileWithPrefix() throws Exception {\n         final String prefix = new FormattedText(\n             \"randomPrefix%s\",\n             System.currentTimeMillis()\n", "next_change": {"commit": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa21d46 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -92,11 +88,11 @@ final class TempFileTest {\n \n     @Test\n     void createFileWithPrefix() throws Exception {\n-        final String prefix = new FormattedText(\n+        final Text prefix = new FormattedText(\n             \"randomPrefix%s\",\n             System.currentTimeMillis()\n-        ).asString();\n-        try (TempFile file = new TempFile(prefix, \"\")) {\n+        );\n+        try (TempFile file = new TempFile(prefix, new TextOf(\"\"))) {\n             new Assertion<>(\n                 \"File must be created with the given prefix\",\n                 new TextOf(file.value().getFileName().toString()),\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTYyMw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715623", "body": "@marceloamadeu can you change that to the object oriented version coming from cactoos-matchers?", "bodyText": "@marceloamadeu can you change that to the object oriented version coming from cactoos-matchers?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you change that to the object oriented version coming from cactoos-matchers?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:16:28Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -92,11 +92,11 @@ public void createFileWithPrefix() throws Exception {\n             System.currentTimeMillis()\n         ).asString();\n         try (TempFile file = new TempFile(prefix, \"\")) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"File not created with the given prefix\",\n                 file.value().getFileName().toString(),\n                 Matchers.startsWith(prefix)", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDU5NA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954594", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:40:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTYyMw=="}], "type": "inlineReview", "revised_code": {"commit": "702cedafae18b64ef46baf2a30b6689076065b39", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..96d9fb43 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -94,8 +97,8 @@ public final class TempFileTest {\n         try (TempFile file = new TempFile(prefix, \"\")) {\n             new Assertion<>(\n                 \"File not created with the given prefix\",\n-                file.value().getFileName().toString(),\n-                Matchers.startsWith(prefix)\n+                new TextOf(file.value().getFileName().toString()),\n+                new StartsWith(prefix)\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -96,7 +96,7 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(prefix, \"\")) {\n             new Assertion<>(\n-                \"File not created with the given prefix\",\n+                \"File must be created with the given prefix\",\n                 new TextOf(file.value().getFileName().toString()),\n                 new StartsWith(prefix)\n             ).affirm();\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -93,9 +98,9 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(prefix, \"\")) {\n             new Assertion<>(\n-                \"File not created with the given prefix\",\n-                file.value().getFileName().toString(),\n-                Matchers.startsWith(prefix)\n+                \"File must be created with the given prefix\",\n+                new TextOf(file.value().getFileName().toString()),\n+                new StartsWith(prefix)\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -106,7 +106,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileWithSuffix() throws Exception {\n+    void createFileWithSuffix() throws Exception {\n         final String suffix = new FormattedText(\n             \"randomSuffix%s\", System.currentTimeMillis()\n         ).asString();\n", "next_change": {"commit": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa21d46 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -107,10 +103,10 @@ final class TempFileTest {\n \n     @Test\n     void createFileWithSuffix() throws Exception {\n-        final String suffix = new FormattedText(\n+        final Text suffix = new FormattedText(\n             \"randomSuffix%s\", System.currentTimeMillis()\n-        ).asString();\n-        try (TempFile file = new TempFile(\"\", suffix)) {\n+        );\n+        try (TempFile file = new TempFile(new TextOf(\"\"), suffix)) {\n             new Assertion<>(\n                 \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTYzOQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715639", "body": "@marceloamadeu can you change that to the object oriented version coming from cactoos-matchers?", "bodyText": "@marceloamadeu can you change that to the object oriented version coming from cactoos-matchers?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you change that to the object oriented version coming from cactoos-matchers?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:16:37Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -106,7 +106,7 @@ public void createFileWithSuffix() throws Exception {\n             \"randomSuffix%s\", System.currentTimeMillis()\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"File not created with the given suffix\",\n                 file.value().getFileName().toString(),\n                 Matchers.endsWith(suffix)", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDY1NA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954654", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:40:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTYzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "702cedafae18b64ef46baf2a30b6689076065b39", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..96d9fb43 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -108,8 +111,8 @@ public final class TempFileTest {\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n                 \"File not created with the given suffix\",\n-                file.value().getFileName().toString(),\n-                Matchers.endsWith(suffix)\n+                new TextOf(file.value().getFileName().toString()),\n+                new StartsWith(suffix)\n             );\n         }\n     }\n", "next_change": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -110,7 +110,7 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n+                \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n                 new StartsWith(suffix)\n             );\n", "next_change": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 815e4d67..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -112,8 +114,8 @@ public final class TempFileTest {\n             new Assertion<>(\n                 \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n-                new StartsWith(suffix)\n-            );\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 69d2f8d0..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -107,10 +112,10 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n-                file.value().getFileName().toString(),\n-                Matchers.endsWith(suffix)\n-            );\n+                \"File must be created with the given suffix\",\n+                new TextOf(file.value().getFileName().toString()),\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTY5Ng==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r403715696", "body": "@marceloamadeu can you change that to `new IsEqual<>(4)`?", "bodyText": "@marceloamadeu can you change that to new IsEqual<>(4)?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> can you change that to <code>new IsEqual&lt;&gt;(4)</code>?</p>", "author": "victornoel", "createdAt": "2020-04-05T15:17:00Z", "path": "src/test/java/org/cactoos/io/ZipTest.java", "diffHunk": "@@ -63,12 +63,12 @@ public void zip() throws Exception {\n                 ++cnt;\n                 entry = input.getNextEntry();\n             }\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Can't list files in a directory represented by a path\",\n                 cnt,\n                 // @checkstyle MagicNumber (1 line)\n                 Matchers.equalTo(4)", "originalCommit": "e56ad5cc3abc84b2a7f2c19432c2d0463467ea49", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1NDc3Mg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404954772", "bodyText": "@victornoel Done ... please check.", "author": "marceloamadeu", "createdAt": "2020-04-07T16:41:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTY5Ng=="}], "type": "inlineReview", "revised_code": {"commit": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 28b72a57..d9599f2e 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -67,7 +67,7 @@ public final class ZipTest {\n                 \"Can't list files in a directory represented by a path\",\n                 cnt,\n                 // @checkstyle MagicNumber (1 line)\n-                Matchers.equalTo(4)\n+                new IsEqual<>(4)\n             ).affirm();\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 28b72a57..d9599f2e 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -67,7 +67,7 @@ public final class ZipTest {\n                 \"Can't list files in a directory represented by a path\",\n                 cnt,\n                 // @checkstyle MagicNumber (1 line)\n-                Matchers.equalTo(4)\n+                new IsEqual<>(4)\n             ).affirm();\n         }\n     }\n", "next_change": {"commit": "9f5f6c158ee3d054380432649984b13f7ec022c2", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex d9599f2e..436159e4 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -71,4 +75,32 @@ public final class ZipTest {\n             ).affirm();\n         }\n     }\n+\n+    @Test\n+    public void zipsArbitraryFileList() throws Exception {\n+        this.folder.newFolder(\"dir1\");\n+        this.folder.newFolder(\"dir2\");\n+        this.folder.newFile(\"file0\");\n+        final Path file1 = this.folder.newFile(\"dir1/file1.txt\").toPath();\n+        final Path file2 = this.folder.newFile(\"dir1/file2.txt\").toPath();\n+        try (ZipInputStream input = new ZipInputStream(\n+            new Zip(\n+                new IterableOf<>(file1, file2)\n+            ).stream()\n+        )) {\n+            ZipEntry entry = input.getNextEntry();\n+            List<String> zipEntries = new ArrayList<>();\n+            while (entry != null) {\n+                zipEntries.add(entry.getName());\n+                entry = input.getNextEntry();\n+            }\n+            new Assertion<>(\n+                \"Can't zip files in different directories\",\n+                zipEntries,\n+                IsIterableContainingInAnyOrder.containsInAnyOrder(\n+                    file1.toString(), file2.toString()\n+                )\n+            ).affirm();\n+        }\n+    }\n }\n", "next_change": {"commit": "530ac03009a6daa1b3b9a224a961010272fe6a34", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 436159e4..f2405611 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -81,24 +81,23 @@ public final class ZipTest {\n         this.folder.newFolder(\"dir1\");\n         this.folder.newFolder(\"dir2\");\n         this.folder.newFile(\"file0\");\n-        final Path file1 = this.folder.newFile(\"dir1/file1.txt\").toPath();\n-        final Path file2 = this.folder.newFile(\"dir1/file2.txt\").toPath();\n-        try (ZipInputStream input = new ZipInputStream(\n-            new Zip(\n-                new IterableOf<>(file1, file2)\n-            ).stream()\n-        )) {\n+        final ListOf<Path> targets = new ListOf<>(\n+            this.folder.newFile(\"dir1/file1.txt\").toPath(),\n+            this.folder.newFile(\"dir2/file2.txt\").toPath()\n+        );\n+        try (ZipInputStream input = new ZipInputStream(new Zip(targets).stream())) {\n             ZipEntry entry = input.getNextEntry();\n-            List<String> zipEntries = new ArrayList<>();\n+            final List<String> entries = new ArrayList<>(2);\n             while (entry != null) {\n-                zipEntries.add(entry.getName());\n+                entries.add(entry.getName());\n                 entry = input.getNextEntry();\n             }\n             new Assertion<>(\n                 \"Can't zip files in different directories\",\n-                zipEntries,\n+                entries,\n                 IsIterableContainingInAnyOrder.containsInAnyOrder(\n-                    file1.toString(), file2.toString()\n+                    targets.get(0).toString(),\n+                    targets.get(1).toString()\n                 )\n             ).affirm();\n         }\n", "next_change": {"commit": "cfdf56edc6733288f1ac649d014aea9813aa0c46", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex f2405611..8d24d65f 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -93,7 +93,7 @@ public final class ZipTest {\n                 entry = input.getNextEntry();\n             }\n             new Assertion<>(\n-                \"Can't zip files in different directories\",\n+                \"Must zip files in different directories\",\n                 entries,\n                 IsIterableContainingInAnyOrder.containsInAnyOrder(\n                     targets.get(0).toString(),\n", "next_change": {"commit": "82a30a32b7927378ca035737b1b328ca7c9185e3", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 8d24d65f..8fa6405b 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -70,36 +66,8 @@ public final class ZipTest {\n             new Assertion<>(\n                 \"Can't list files in a directory represented by a path\",\n                 cnt,\n-                // @checkstyle MagicNumber (1 line)\n                 new IsEqual<>(4)\n             ).affirm();\n         }\n     }\n-\n-    @Test\n-    public void zipsArbitraryFileList() throws Exception {\n-        this.folder.newFolder(\"dir1\");\n-        this.folder.newFolder(\"dir2\");\n-        this.folder.newFile(\"file0\");\n-        final ListOf<Path> targets = new ListOf<>(\n-            this.folder.newFile(\"dir1/file1.txt\").toPath(),\n-            this.folder.newFile(\"dir2/file2.txt\").toPath()\n-        );\n-        try (ZipInputStream input = new ZipInputStream(new Zip(targets).stream())) {\n-            ZipEntry entry = input.getNextEntry();\n-            final List<String> entries = new ArrayList<>(2);\n-            while (entry != null) {\n-                entries.add(entry.getName());\n-                entry = input.getNextEntry();\n-            }\n-            new Assertion<>(\n-                \"Must zip files in different directories\",\n-                entries,\n-                IsIterableContainingInAnyOrder.containsInAnyOrder(\n-                    targets.get(0).toString(),\n-                    targets.get(1).toString()\n-                )\n-            ).affirm();\n-        }\n-    }\n }\n", "next_change": {"commit": "0559752bd3f0859b46da3ac4d776b9010de65f7d", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 8fa6405b..63085f0c 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -70,4 +74,31 @@ public final class ZipTest {\n             ).affirm();\n         }\n     }\n+\n+    @Test\n+    public void zipsArbitraryFileList() throws Exception {\n+        this.folder.newFolder(\"dir1\");\n+        this.folder.newFolder(\"dir2\");\n+        this.folder.newFile(\"file0\");\n+        final ListOf<Path> targets = new ListOf<>(\n+            this.folder.newFile(\"dir1/file1.txt\").toPath(),\n+            this.folder.newFile(\"dir2/file2.txt\").toPath()\n+        );\n+        try (ZipInputStream input = new ZipInputStream(new Zip(targets).stream())) {\n+            ZipEntry entry = input.getNextEntry();\n+            final List<String> entries = new ArrayList<>(2);\n+            while (entry != null) {\n+                entries.add(entry.getName());\n+                entry = input.getNextEntry();\n+            }\n+            new Assertion<>(\n+                \"Must zip files in different directories\",\n+                entries,\n+                IsIterableContainingInAnyOrder.containsInAnyOrder(\n+                    targets.get(0).toString(),\n+                    targets.get(1).toString()\n+                )\n+            ).affirm();\n+        }\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "9f5f6c158ee3d054380432649984b13f7ec022c2", "committedDate": "2022-08-05 15:27:50 +0200", "message": "(#1564) Add test for ZipInputStream"}, {"oid": "530ac03009a6daa1b3b9a224a961010272fe6a34", "committedDate": "2022-08-05 15:57:12 +0200", "message": "(#1564) Address codestyle issues"}, {"oid": "cfdf56edc6733288f1ac649d014aea9813aa0c46", "committedDate": "2022-08-06 18:53:29 +0200", "message": "(#1564) Change assertion message"}, {"oid": "82a30a32b7927378ca035737b1b328ca7c9185e3", "committedDate": "2022-08-12 07:45:54 +0300", "message": "#1649 MagicNumberCheck removed"}, {"oid": "0559752bd3f0859b46da3ac4d776b9010de65f7d", "committedDate": "2022-11-19 16:07:33 +0100", "message": "Merge branch '__rultor'"}]}, {"oid": "ef64170255d90cbaf90039a1a3605cc7e15b58a1", "url": "https://github.com/yegor256/cactoos/commit/ef64170255d90cbaf90039a1a3605cc7e15b58a1", "message": "Corrections", "committedDate": "2020-04-06T00:22:58Z", "type": "commit"}, {"oid": "d79b0da22178dff5d3ee25effc63d2ebcd2109c4", "url": "https://github.com/yegor256/cactoos/commit/d79b0da22178dff5d3ee25effc63d2ebcd2109c4", "message": "Corrections", "committedDate": "2020-04-06T01:10:34Z", "type": "commit"}, {"oid": "702cedafae18b64ef46baf2a30b6689076065b39", "url": "https://github.com/yegor256/cactoos/commit/702cedafae18b64ef46baf2a30b6689076065b39", "message": "Corrections - TempoFileTest and TeeInputStreamTest", "committedDate": "2020-04-07T02:06:44Z", "type": "commit"}, {"oid": "f97d54c84f1c3e1e3cf78c73e438d65bd9d11bc3", "url": "https://github.com/yegor256/cactoos/commit/f97d54c84f1c3e1e3cf78c73e438d65bd9d11bc3", "message": "TODO for corrections in TeeInput tests", "committedDate": "2020-04-07T15:16:17Z", "type": "commit"}, {"oid": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "url": "https://github.com/yegor256/cactoos/commit/3eab77fd264dda2c39b1f00330e741fbc16c64e1", "message": "correction TODO", "committedDate": "2020-04-07T16:33:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4OTU2Mw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404989563", "body": "@marceloamadeu this test shouldn't pass, you changed from endsWith to StartsWith... if it passes it means the test is broken. It is because you forgot to add `affirm()` on the `Assertion` :)", "bodyText": "@marceloamadeu this test shouldn't pass, you changed from endsWith to StartsWith... if it passes it means the test is broken. It is because you forgot to add affirm() on the Assertion :)", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> this test shouldn't pass, you changed from endsWith to StartsWith... if it passes it means the test is broken. It is because you forgot to add <code>affirm()</code> on the <code>Assertion</code> :)</p>", "author": "victornoel", "createdAt": "2020-04-07T17:33:42Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -106,10 +109,10 @@ public void createFileWithSuffix() throws Exception {\n             \"randomSuffix%s\", System.currentTimeMillis()\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"File not created with the given suffix\",\n-                file.value().getFileName().toString(),\n-                Matchers.endsWith(suffix)\n+                new TextOf(file.value().getFileName().toString()),\n+                new StartsWith(suffix)", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -110,7 +110,7 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n+                \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n                 new StartsWith(suffix)\n             );\n", "next_change": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 815e4d67..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -112,8 +114,8 @@ public final class TempFileTest {\n             new Assertion<>(\n                 \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n-                new StartsWith(suffix)\n-            );\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -110,10 +112,10 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n+                \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n-                new StartsWith(suffix)\n-            );\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4OTc4Mw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404989783", "body": "@marceloamadeu you forgot to add `affirm()`", "bodyText": "@marceloamadeu you forgot to add affirm()", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> you forgot to add <code>affirm()</code></p>", "author": "victornoel", "createdAt": "2020-04-07T17:34:02Z", "path": "src/test/java/org/cactoos/io/UncheckedBytesTest.java", "diffHunk": "@@ -50,7 +50,7 @@ public void rethrowsCheckedToUncheckedException() {\n     @Test\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n-        MatcherAssert.assertThat(\n+        new Assertion<>(", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTgwMQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405185801", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:12:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk4OTc4Mw=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex d719505c..f61e7da1 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -51,7 +51,7 @@ public final class UncheckedBytesTest {\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n         new Assertion<>(\n-            \"Cannot works normally when no exception is thrown\",\n+            \"Must works normally when no exception is thrown\",\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n", "next_change": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex f61e7da1..3321b9cc 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -58,6 +58,6 @@ public final class UncheckedBytesTest {\n             Matchers.equalTo(\n                 new BytesOf(source).asBytes()\n             )\n-        );\n+        ).affirm();\n     }\n }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex d719505c..3321b9cc 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -51,13 +51,13 @@ public final class UncheckedBytesTest {\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n         new Assertion<>(\n-            \"Cannot works normally when no exception is thrown\",\n+            \"Must works normally when no exception is thrown\",\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n             Matchers.equalTo(\n                 new BytesOf(source).asBytes()\n             )\n-        );\n+        ).affirm();\n     }\n }\n", "next_change": {"commit": "a210b96d42d243825c3e8146fe87334d0e785187", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\nsimilarity index 93%\nrename from src/test/java/org/cactoos/io/UncheckedBytesTest.java\nrename to src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\nindex 3321b9cc..263f3aeb 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\n", "chunk": "@@ -55,9 +55,7 @@ public final class UncheckedBytesTest {\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n-            Matchers.equalTo(\n-                new BytesOf(source).asBytes()\n-            )\n+            new IsEqual<>(new BytesOf(source).asBytes())\n         ).affirm();\n     }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "a210b96d42d243825c3e8146fe87334d0e785187", "committedDate": "2021-01-16 03:16:53 +0000", "message": "Move some Bytes classes from io to bytes package #1199"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDAxNw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990017", "body": "@marceloamadeu please change here to \"Must...\" too ", "bodyText": "@marceloamadeu please change here to \"Must...\" too", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> please change here to \"Must...\" too</p>", "author": "victornoel", "createdAt": "2020-04-07T17:34:24Z", "path": "src/test/java/org/cactoos/io/TeeInputStreamTest.java", "diffHunk": "@@ -76,11 +76,11 @@ public void leftInputClosed() {\n                     new OutputTo(write)\n                 )\n             ).intValue();\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Can't use output after usage from TeeInput\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTg0OA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405185848", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:12:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDAxNw=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex a89006cb..027ef1a2 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -77,7 +77,7 @@ public final class TeeInputStreamTest {\n                 )\n             ).intValue();\n             new Assertion<>(\n-                \"Can't use output after usage from TeeInput\",\n+                \"Must use output after usage from TeeInput\",\n                 write.isClosed(),\n                 new IsEqual<>(true)\n             ).affirm();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex a89006cb..027ef1a2 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -77,7 +77,7 @@ public final class TeeInputStreamTest {\n                 )\n             ).intValue();\n             new Assertion<>(\n-                \"Can't use output after usage from TeeInput\",\n+                \"Must use output after usage from TeeInput\",\n                 write.isClosed(),\n                 new IsEqual<>(true)\n             ).affirm();\n", "next_change": {"commit": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeInputStreamTest.java b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\nindex 027ef1a2..645d6e69 100644\n--- a/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeInputStreamTest.java\n", "chunk": "@@ -68,14 +68,14 @@ public final class TeeInputStreamTest {\n     }\n \n     @Test\n-    public void leftInputClosed() {\n+    void leftInputClosed() throws Exception {\n         try (StringWriterMock write = new StringWriterMock()) {\n             new LengthOf(\n                 new TeeInput(\n                     \"foo\",\n                     new OutputTo(write)\n                 )\n-            ).intValue();\n+            ).value();\n             new Assertion<>(\n                 \"Must use output after usage from TeeInput\",\n                 write.isClosed(),\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "15ed8060991d3bbc6c1b723fe4d9cd8c87ac09b4", "committedDate": "2021-02-22 15:37:07 +0100", "message": "(#1335) LengthOf is now just a Scalar of Long"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "1a3841bcbec498e84ef31aa502940b60d13b3e47", "committedDate": "2022-07-15 20:12:39 +0300", "message": "#1644 IoCheckedBytes"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDEwNg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990106", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:34:33Z", "path": "src/test/java/org/cactoos/io/TeeOutputStreamTest.java", "diffHunk": "@@ -44,7 +44,7 @@ public void copiesContentByteByByte() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final ByteArrayOutputStream copy = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Can't copy OutputStream to OutputStream byte by byte\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjQ2Mg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186462", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDEwNg=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputStreamTest.java b/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\nindex 69572210..b8943d33 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\n", "chunk": "@@ -45,7 +45,7 @@ public final class TeeOutputStreamTest {\n         final ByteArrayOutputStream copy = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n         new Assertion<>(\n-            \"Can't copy OutputStream to OutputStream byte by byte\",\n+            \"Must copy OutputStream to OutputStream byte by byte\",\n             new TextOf(\n                 new ReaderOf(\n                     new TeeInputStream(\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputStreamTest.java b/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\nindex 69572210..b8943d33 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputStreamTest.java\n", "chunk": "@@ -45,7 +45,7 @@ public final class TeeOutputStreamTest {\n         final ByteArrayOutputStream copy = new ByteArrayOutputStream();\n         final String content = \"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449!\";\n         new Assertion<>(\n-            \"Can't copy OutputStream to OutputStream byte by byte\",\n+            \"Must copy OutputStream to OutputStream byte by byte\",\n             new TextOf(\n                 new ReaderOf(\n                     new TeeInputStream(\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "1a3841bcbec498e84ef31aa502940b60d13b3e47", "committedDate": "2022-07-15 20:12:39 +0300", "message": "#1644 IoCheckedBytes"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDIzMQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990231", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:34:43Z", "path": "src/test/java/org/cactoos/io/TeeOutputTest.java", "diffHunk": "@@ -109,7 +108,7 @@ public void copiesWithWriterAndCharset() {\n     public void copiesWithPath() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Can't copy Output with path\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjAxMQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186011", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:13:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDIzMQ=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputTest.java b/src/test/java/org/cactoos/io/TeeOutputTest.java\nindex 807970d1..6607c20c 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputTest.java\n", "chunk": "@@ -109,7 +109,7 @@ public final class TeeOutputTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n         new Assertion<>(\n-            \"Can't copy Output with path\",\n+            \"Must copy Output with path\",\n             new TextOf(\n                 new TeeInput(\n                     new InputOf(\"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449! with path\"),\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputTest.java b/src/test/java/org/cactoos/io/TeeOutputTest.java\nindex 807970d1..6607c20c 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputTest.java\n", "chunk": "@@ -109,7 +109,7 @@ public final class TeeOutputTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n         new Assertion<>(\n-            \"Can't copy Output with path\",\n+            \"Must copy Output with path\",\n             new TextOf(\n                 new TeeInput(\n                     new InputOf(\"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449! with path\"),\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "committedDate": "2021-01-30 13:28:51 +0000", "message": "Update cactoos-matchers to latest version #1531"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDMyMg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990322", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:34:52Z", "path": "src/test/java/org/cactoos/io/TeeOutputTest.java", "diffHunk": "@@ -123,14 +122,14 @@ public void copiesWithPath() throws Exception {\n             new TextIs(\n                 new TextOf(file.toPath())\n             )\n-        );\n+        ).affirm();\n     }\n \n     @Test\n     public void copiesWithFile() throws Exception {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Can't copy Output with file\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjA2OA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186068", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:13:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDMyMg=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputTest.java b/src/test/java/org/cactoos/io/TeeOutputTest.java\nindex 807970d1..6607c20c 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputTest.java\n", "chunk": "@@ -130,7 +130,7 @@ public final class TeeOutputTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n         new Assertion<>(\n-            \"Can't copy Output with file\",\n+            \"Must copy Output with file\",\n             new TextOf(\n                 new TeeInput(\n                     new InputOf(\"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449! with file\"),\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeOutputTest.java b/src/test/java/org/cactoos/io/TeeOutputTest.java\nindex 807970d1..6607c20c 100644\n--- a/src/test/java/org/cactoos/io/TeeOutputTest.java\n+++ b/src/test/java/org/cactoos/io/TeeOutputTest.java\n", "chunk": "@@ -130,7 +130,7 @@ public final class TeeOutputTest {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         final File file = this.folder.newFile();\n         new Assertion<>(\n-            \"Can't copy Output with file\",\n+            \"Must copy Output with file\",\n             new TextOf(\n                 new TeeInput(\n                     new InputOf(\"Hello, \u0442\u043e\u0432\u0430\u0440\u0438\u0449! with file\"),\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "committedDate": "2021-01-30 13:28:51 +0000", "message": "Update cactoos-matchers to latest version #1531"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDQ5NQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990495", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:35:08Z", "path": "src/test/java/org/cactoos/io/TeeReaderTest.java", "diffHunk": "@@ -51,11 +51,11 @@ public void testTeeReader() throws IOException {\n             done = reader.read();\n         }\n         reader.close();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Can't read content\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjEyNA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186124", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:13:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDQ5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeReaderTest.java b/src/test/java/org/cactoos/io/TeeReaderTest.java\nindex 9142db8b..c0ec7a7c 100644\n--- a/src/test/java/org/cactoos/io/TeeReaderTest.java\n+++ b/src/test/java/org/cactoos/io/TeeReaderTest.java\n", "chunk": "@@ -52,7 +52,7 @@ public final class TeeReaderTest {\n         }\n         reader.close();\n         new Assertion<>(\n-            \"Can't read content\",\n+            \"Must read content\",\n             new InputOf(new ReaderOf(baos.toByteArray())),\n             new InputHasContent(content)\n         ).affirm();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeReaderTest.java b/src/test/java/org/cactoos/io/TeeReaderTest.java\nindex 9142db8b..c0ec7a7c 100644\n--- a/src/test/java/org/cactoos/io/TeeReaderTest.java\n+++ b/src/test/java/org/cactoos/io/TeeReaderTest.java\n", "chunk": "@@ -52,7 +52,7 @@ public final class TeeReaderTest {\n         }\n         reader.close();\n         new Assertion<>(\n-            \"Can't read content\",\n+            \"Must read content\",\n             new InputOf(new ReaderOf(baos.toByteArray())),\n             new InputHasContent(content)\n         ).affirm();\n", "next_change": {"commit": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TeeReaderTest.java b/src/test/java/org/cactoos/io/TeeReaderTest.java\nindex c0ec7a7c..198de191 100644\n--- a/src/test/java/org/cactoos/io/TeeReaderTest.java\n+++ b/src/test/java/org/cactoos/io/TeeReaderTest.java\n", "chunk": "@@ -54,7 +54,7 @@ public final class TeeReaderTest {\n         new Assertion<>(\n             \"Must read content\",\n             new InputOf(new ReaderOf(baos.toByteArray())),\n-            new InputHasContent(content)\n+            new HasContent(content)\n         ).affirm();\n     }\n \n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "0fb468c22d5b330411e51cc0878bfb1c004e30ed", "committedDate": "2021-01-30 13:28:51 +0000", "message": "Update cactoos-matchers to latest version #1531"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDU2Mw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990563", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:35:15Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -43,19 +46,19 @@\n     @Test\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Cannot create a temp file\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -47,7 +47,7 @@ public final class TempFileTest {\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n-                \"Cannot create a temp file\",\n+                \"Must create a temp file\",\n                 Files.exists(file.value()),\n                 new IsEqual<>(true)\n             ).affirm();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -40,6 +41,7 @@ import org.llorllale.cactoos.matchers.StartsWith;\n  *\n  * @since 1.0\n  * @checkstyle JavadocMethodCheck (500 lines)\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n public final class TempFileTest {\n \n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -43,10 +43,10 @@ import org.llorllale.cactoos.matchers.StartsWith;\n  * @checkstyle JavadocMethodCheck (500 lines)\n  * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n-public final class TempFileTest {\n+final class TempFileTest {\n \n     @Test\n-    public void createFile() throws Exception {\n+    void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n                 \"Must create a temp file\",\n", "next_change": null}]}}, {"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -47,7 +49,7 @@ public final class TempFileTest {\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n-                \"Cannot create a temp file\",\n+                \"Must create a temp file\",\n                 Files.exists(file.value()),\n                 new IsEqual<>(true)\n             ).affirm();\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -43,10 +43,10 @@ import org.llorllale.cactoos.matchers.StartsWith;\n  * @checkstyle JavadocMethodCheck (500 lines)\n  * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n-public final class TempFileTest {\n+final class TempFileTest {\n \n     @Test\n-    public void createFile() throws Exception {\n+    void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n             new Assertion<>(\n                 \"Must create a temp file\",\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -57,7 +57,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileInCustomPath() throws Exception {\n+    void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n", "next_change": {"commit": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa2b829 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -64,15 +63,11 @@ final class TempFileTest {\n                 \"Must create a temp file at a custom path\",\n                 file,\n                 Matchers.allOf(\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return Files.exists(tmp.value());\n-                        }\n+                    new Verifies<>(\n+                        tmp -> Files.exists(tmp.value())\n                     ),\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return tmp.value().getParent().equals(custom);\n-                        }\n+                    new Verifies<>(\n+                        tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n             ).affirm();\n", "next_change": {"commit": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex dfa2b829..397b7279 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,17 +56,18 @@ final class TempFileTest {\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                Matchers.allOf(\n-                    new Verifies<>(\n+                new AllOf<>(\n+                    new Verifies<TempFile>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<>(\n+                    new Verifies<TempFile>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": {"commit": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 397b7279..21d9f3f1 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,18 +56,17 @@ final class TempFileTest {\n     }\n \n     @Test\n-    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                new AllOf<>(\n-                    new Verifies<TempFile>(\n+                new AllOf<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDY3MQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990671", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:35:25Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -43,19 +46,19 @@\n     @Test\n     public void createFile() throws Exception {\n         try (TempFile file = new TempFile()) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Cannot create a temp file\",\n                 Files.exists(file.value()),\n-                Matchers.is(true)\n-            );\n+                new IsEqual<>(true)\n+            ).affirm();\n         }\n     }\n \n     @Test\n     public void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Cannot create a temp file at a custom path\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjIzMQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186231", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:13:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDY3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -59,7 +59,7 @@ public final class TempFileTest {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n-                \"Cannot create a temp file at a custom path\",\n+                \"Must create a temp file at a custom path\",\n                 file,\n                 Matchers.allOf(\n                     new MatcherOf<>(\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -59,7 +61,7 @@ public final class TempFileTest {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n-                \"Cannot create a temp file at a custom path\",\n+                \"Must create a temp file at a custom path\",\n                 file,\n                 Matchers.allOf(\n                     new MatcherOf<>(\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -57,7 +57,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileInCustomPath() throws Exception {\n+    void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n", "next_change": {"commit": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa2b829 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -64,15 +63,11 @@ final class TempFileTest {\n                 \"Must create a temp file at a custom path\",\n                 file,\n                 Matchers.allOf(\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return Files.exists(tmp.value());\n-                        }\n+                    new Verifies<>(\n+                        tmp -> Files.exists(tmp.value())\n                     ),\n-                    new MatcherOf<>(\n-                        tmp -> {\n-                            return tmp.value().getParent().equals(custom);\n-                        }\n+                    new Verifies<>(\n+                        tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n             ).affirm();\n", "next_change": {"commit": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex dfa2b829..397b7279 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,17 +56,18 @@ final class TempFileTest {\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                Matchers.allOf(\n-                    new Verifies<>(\n+                new AllOf<>(\n+                    new Verifies<TempFile>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<>(\n+                    new Verifies<TempFile>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": {"commit": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 397b7279..21d9f3f1 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -56,18 +56,17 @@ final class TempFileTest {\n     }\n \n     @Test\n-    @SuppressWarnings(\"unchecked\")\n     void createFileInCustomPath() throws Exception {\n         final Path custom = Paths.get(System.getProperty(\"user.home\"));\n         try (TempFile file = new TempFile(() -> custom, \"\", \"\")) {\n             new Assertion<>(\n                 \"Must create a temp file at a custom path\",\n                 file,\n-                new AllOf<>(\n-                    new Verifies<TempFile>(\n+                new AllOf<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> Files.exists(tmp.value())\n                     ),\n-                    new Verifies<TempFile>(\n+                    new Satisfies<>(\n                         tmp -> tmp.value().getParent().equals(custom)\n                     )\n                 )\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDc1NQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990755", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:35:33Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -70,19 +73,19 @@ public void createFileInCustomPath() throws Exception {\n                         }\n                     )\n                 )\n-            );\n+            ).affirm();\n         }\n     }\n \n     @Test\n     public void deleteFile() throws Exception {\n         final TempFile file = new TempFile();\n         file.close();\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Cannot delete file on close\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjI4OA==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186288", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:14:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDc1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -82,7 +82,7 @@ public final class TempFileTest {\n         final TempFile file = new TempFile();\n         file.close();\n         new Assertion<>(\n-            \"Cannot delete file on close\",\n+            \"Must delete file on close\",\n             Files.exists(file.value()),\n             new IsEqual<>(false)\n         ).affirm();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -82,7 +84,7 @@ public final class TempFileTest {\n         final TempFile file = new TempFile();\n         file.close();\n         new Assertion<>(\n-            \"Cannot delete file on close\",\n+            \"Must delete file on close\",\n             Files.exists(file.value()),\n             new IsEqual<>(false)\n         ).affirm();\n", "next_change": {"commit": "97454478d07f360b68ff98504e803f26d6777ae9", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -80,7 +80,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void deleteFile() throws Exception {\n+    void deleteFile() throws Exception {\n         final TempFile file = new TempFile();\n         file.close();\n         new Assertion<>(\n", "next_change": null}, {"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex a00c96dd..f5ee2881 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -91,7 +91,7 @@ public final class TempFileTest {\n     }\n \n     @Test\n-    public void createFileWithPrefix() throws Exception {\n+    void createFileWithPrefix() throws Exception {\n         final String prefix = new FormattedText(\n             \"randomPrefix%s\",\n             System.currentTimeMillis()\n", "next_change": {"commit": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex f5ee2881..dfa21d46 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -92,11 +88,11 @@ final class TempFileTest {\n \n     @Test\n     void createFileWithPrefix() throws Exception {\n-        final String prefix = new FormattedText(\n+        final Text prefix = new FormattedText(\n             \"randomPrefix%s\",\n             System.currentTimeMillis()\n-        ).asString();\n-        try (TempFile file = new TempFile(prefix, \"\")) {\n+        );\n+        try (TempFile file = new TempFile(prefix, new TextOf(\"\"))) {\n             new Assertion<>(\n                 \"File must be created with the given prefix\",\n                 new TextOf(file.value().getFileName().toString()),\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDk0NQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404990945", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:35:53Z", "path": "src/test/java/org/cactoos/io/UncheckedBytesTest.java", "diffHunk": "@@ -50,7 +50,7 @@ public void rethrowsCheckedToUncheckedException() {\n     @Test\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n-        MatcherAssert.assertThat(\n+        new Assertion<>(\n             \"Cannot works normally when no exception is thrown\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex d719505c..f61e7da1 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -51,7 +51,7 @@ public final class UncheckedBytesTest {\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n         new Assertion<>(\n-            \"Cannot works normally when no exception is thrown\",\n+            \"Must works normally when no exception is thrown\",\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n", "next_change": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex f61e7da1..3321b9cc 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -58,6 +58,6 @@ public final class UncheckedBytesTest {\n             Matchers.equalTo(\n                 new BytesOf(source).asBytes()\n             )\n-        );\n+        ).affirm();\n     }\n }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\nindex d719505c..3321b9cc 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n", "chunk": "@@ -51,13 +51,13 @@ public final class UncheckedBytesTest {\n     public void worksNormallyWhenNoExceptionIsThrown() throws Exception {\n         final Text source = new TextOf(\"hello, cactoos!\");\n         new Assertion<>(\n-            \"Cannot works normally when no exception is thrown\",\n+            \"Must works normally when no exception is thrown\",\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n             Matchers.equalTo(\n                 new BytesOf(source).asBytes()\n             )\n-        );\n+        ).affirm();\n     }\n }\n", "next_change": {"commit": "a210b96d42d243825c3e8146fe87334d0e785187", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/UncheckedBytesTest.java b/src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\nsimilarity index 93%\nrename from src/test/java/org/cactoos/io/UncheckedBytesTest.java\nrename to src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\nindex 3321b9cc..263f3aeb 100644\n--- a/src/test/java/org/cactoos/io/UncheckedBytesTest.java\n+++ b/src/test/java/org/cactoos/bytes/UncheckedBytesTest.java\n", "chunk": "@@ -55,9 +55,7 @@ public final class UncheckedBytesTest {\n             new UncheckedBytes(\n                 new BytesOf(source)\n             ).asBytes(),\n-            Matchers.equalTo(\n-                new BytesOf(source).asBytes()\n-            )\n+            new IsEqual<>(new BytesOf(source).asBytes())\n         ).affirm();\n     }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "a210b96d42d243825c3e8146fe87334d0e785187", "committedDate": "2021-01-16 03:16:53 +0000", "message": "Move some Bytes classes from io to bytes package #1199"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTAzMg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404991032", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:36:00Z", "path": "src/test/java/org/cactoos/io/TempFileTest.java", "diffHunk": "@@ -106,10 +109,10 @@ public void createFileWithSuffix() throws Exception {\n             \"randomSuffix%s\", System.currentTimeMillis()\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"File not created with the given suffix\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjM1OQ==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186359", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:14:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTAzMg=="}], "type": "inlineReview", "revised_code": {"commit": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..815e4d67 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -110,7 +110,7 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n+                \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n                 new StartsWith(suffix)\n             );\n", "next_change": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 815e4d67..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -112,8 +114,8 @@ public final class TempFileTest {\n             new Assertion<>(\n                 \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n-                new StartsWith(suffix)\n-            );\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/TempFileTest.java b/src/test/java/org/cactoos/io/TempFileTest.java\nindex 96d9fb43..a00c96dd 100644\n--- a/src/test/java/org/cactoos/io/TempFileTest.java\n+++ b/src/test/java/org/cactoos/io/TempFileTest.java\n", "chunk": "@@ -110,10 +112,10 @@ public final class TempFileTest {\n         ).asString();\n         try (TempFile file = new TempFile(\"\", suffix)) {\n             new Assertion<>(\n-                \"File not created with the given suffix\",\n+                \"File must be created with the given suffix\",\n                 new TextOf(file.value().getFileName().toString()),\n-                new StartsWith(suffix)\n-            );\n+                new EndsWith(suffix)\n+            ).affirm();\n         }\n     }\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "97454478d07f360b68ff98504e803f26d6777ae9", "committedDate": "2020-09-12 07:29:40 -0400", "message": "(#1416) Migrate to Jupiter"}, {"oid": "a23b69d8d50b927ff517cf867e6bfc648b02ce08", "committedDate": "2021-02-22 14:22:53 +0100", "message": "(#1531) Bump cactoos-matchers to 0.24"}, {"oid": "f3d3400f3f66b6d18b792acd76d45bbe69e9fb0f", "committedDate": "2021-04-05 13:52:54 +0000", "message": "Replace calls to Matchers with their OO counterparts #1434"}, {"oid": "3b73725c05896dcddce955efca6d2f8ff627bfc4", "committedDate": "2021-05-03 19:27:09 +0200", "message": "(#1597) Bump cactoos-matchers to 0.25"}, {"oid": "39660ea30cf7bdd0cc0b5c1c7d914d5935e53c85", "committedDate": "2021-05-04 20:49:51 -0400", "message": "Avoid calling `asString`"}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "45011f2fa2449a0885d0552ffe90e38de2de15a7", "committedDate": "2022-08-12 07:49:36 +0300", "message": "#1649 more checkstyle suppressions removed"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTEyMw==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r404991123", "body": "@marceloamadeu same here", "bodyText": "@marceloamadeu same here", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/marceloamadeu/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marceloamadeu\">@marceloamadeu</a> same here</p>", "author": "victornoel", "createdAt": "2020-04-07T17:36:07Z", "path": "src/test/java/org/cactoos/io/ZipTest.java", "diffHunk": "@@ -63,12 +63,12 @@ public void zip() throws Exception {\n                 ++cnt;\n                 entry = input.getNextEntry();\n             }\n-            MatcherAssert.assertThat(\n+            new Assertion<>(\n                 \"Can't list files in a directory represented by a path\",", "originalCommit": "3eab77fd264dda2c39b1f00330e741fbc16c64e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NjQwNg==", "url": "https://github.com/yegor256/cactoos/pull/1338#discussion_r405186406", "bodyText": "@victornoel Done!", "author": "marceloamadeu", "createdAt": "2020-04-08T00:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTEyMw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "82a30a32b7927378ca035737b1b328ca7c9185e3", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex d9599f2e..8fa6405b 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -66,7 +66,6 @@ public final class ZipTest {\n             new Assertion<>(\n                 \"Can't list files in a directory represented by a path\",\n                 cnt,\n-                // @checkstyle MagicNumber (1 line)\n                 new IsEqual<>(4)\n             ).affirm();\n         }\n", "next_change": {"commit": "0559752bd3f0859b46da3ac4d776b9010de65f7d", "changed_code": [{"header": "diff --git a/src/test/java/org/cactoos/io/ZipTest.java b/src/test/java/org/cactoos/io/ZipTest.java\nindex 8fa6405b..63085f0c 100644\n--- a/src/test/java/org/cactoos/io/ZipTest.java\n+++ b/src/test/java/org/cactoos/io/ZipTest.java\n", "chunk": "@@ -70,4 +74,31 @@ public final class ZipTest {\n             ).affirm();\n         }\n     }\n+\n+    @Test\n+    public void zipsArbitraryFileList() throws Exception {\n+        this.folder.newFolder(\"dir1\");\n+        this.folder.newFolder(\"dir2\");\n+        this.folder.newFile(\"file0\");\n+        final ListOf<Path> targets = new ListOf<>(\n+            this.folder.newFile(\"dir1/file1.txt\").toPath(),\n+            this.folder.newFile(\"dir2/file2.txt\").toPath()\n+        );\n+        try (ZipInputStream input = new ZipInputStream(new Zip(targets).stream())) {\n+            ZipEntry entry = input.getNextEntry();\n+            final List<String> entries = new ArrayList<>(2);\n+            while (entry != null) {\n+                entries.add(entry.getName());\n+                entry = input.getNextEntry();\n+            }\n+            new Assertion<>(\n+                \"Must zip files in different directories\",\n+                entries,\n+                IsIterableContainingInAnyOrder.containsInAnyOrder(\n+                    targets.get(0).toString(),\n+                    targets.get(1).toString()\n+                )\n+            ).affirm();\n+        }\n+    }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Merge commit", "committedDate": null}, {"oid": "def024cf010e8b2dd0905024f6d5634034138416", "committedDate": "2022-07-11 06:37:02 +0300", "message": "#1636 years up"}, {"oid": "9f5f6c158ee3d054380432649984b13f7ec022c2", "committedDate": "2022-08-05 15:27:50 +0200", "message": "(#1564) Add test for ZipInputStream"}, {"oid": "530ac03009a6daa1b3b9a224a961010272fe6a34", "committedDate": "2022-08-05 15:57:12 +0200", "message": "(#1564) Address codestyle issues"}, {"oid": "cfdf56edc6733288f1ac649d014aea9813aa0c46", "committedDate": "2022-08-06 18:53:29 +0200", "message": "(#1564) Change assertion message"}, {"oid": "82a30a32b7927378ca035737b1b328ca7c9185e3", "committedDate": "2022-08-12 07:45:54 +0300", "message": "#1649 MagicNumberCheck removed"}, {"oid": "0559752bd3f0859b46da3ac4d776b9010de65f7d", "committedDate": "2022-11-19 16:07:33 +0100", "message": "Merge branch '__rultor'"}]}, {"oid": "abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "url": "https://github.com/yegor256/cactoos/commit/abf9e50328ca5aaff1574c1cad0cd0fca3a840ef", "message": "Corrections", "committedDate": "2020-04-07T20:14:31Z", "type": "commit"}, {"oid": "3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "url": "https://github.com/yegor256/cactoos/commit/3ab952eeb2e7151d0ba4e435c4c12cf7c7eed8bb", "message": "Corrections", "committedDate": "2020-04-08T04:27:14Z", "type": "commit"}]}