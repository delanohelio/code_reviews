{"pr_number": 3048, "pr_title": "Server side field-level validations infrastructure (and usage on CLM)", "pr_author": "ricardoasmarques", "pr_createdAt": "2020-12-18T12:49:07Z", "pr_url": "https://github.com/uyuni-project/uyuni/pull/3048", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjQ0Mw==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551972443", "body": "Another nitpick:\r\n\r\n```suggestion\r\n        result.getFieldErrors().forEach((field, valueList) ->\r\n                fieldValidationErrors.putIfAbsent(field, new LinkedList<>()).addAll(valueList));\r\n```", "bodyText": "Another nitpick:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Map.Entry<String, List<ValidatorError>> entry : result.getFieldErrors().entrySet()) {\n          \n          \n            \n                        String field = entry.getKey();\n          \n          \n            \n                        if (!getFieldErrors().containsKey(field)) {\n          \n          \n            \n                            getFieldErrors().put(field, new LinkedList());\n          \n          \n            \n                        }\n          \n          \n            \n                        getFieldErrors().get(field).addAll(entry.getValue());\n          \n          \n            \n                    }\n          \n          \n            \n                    result.getFieldErrors().forEach((field, valueList) ->\n          \n          \n            \n                            fieldValidationErrors.putIfAbsent(field, new LinkedList<>()).addAll(valueList));", "bodyHTML": "<p dir=\"auto\">Another nitpick:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Map</span><span class=\"pl-k\">.</span><span class=\"pl-k\">Entry&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">ValidatorError</span>&gt;</span>&gt;</span> entry <span class=\"pl-k\">:</span> result<span class=\"pl-k\">.</span>getFieldErrors()<span class=\"pl-k\">.</span>entrySet()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> field <span class=\"pl-k\">=</span> entry<span class=\"pl-k\">.</span>getKey();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>getFieldErrors()<span class=\"pl-k\">.</span>containsKey(field)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                getFieldErrors()<span class=\"pl-k\">.</span>put(field, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LinkedList</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            getFieldErrors()<span class=\"pl-k\">.</span>get(field)<span class=\"pl-k\">.</span>addAll(entry<span class=\"pl-k\">.</span>getValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        result<span class=\"pl-k\">.</span>getFieldErrors()<span class=\"pl-k\">.</span>forEach((field, valueList) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                fieldValidationErrors<span class=\"pl-k\">.</span>putIfAbsent(field, <span class=\"pl-k\">new</span> <span class=\"pl-k\">LinkedList&lt;&gt;</span>())<span class=\"pl-k\">.</span>addAll(valueList));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cbbayburt", "createdAt": "2021-01-05T14:39:28Z", "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -95,6 +130,13 @@ public void addWarning(String key, Object... args) {\n     public void append(ValidatorResult result) {\n         getErrors().addAll(result.getErrors());\n         getWarnings().addAll(result.getWarnings());\n+        for (Map.Entry<String, List<ValidatorError>> entry : result.getFieldErrors().entrySet()) {\n+            String field = entry.getKey();\n+            if (!getFieldErrors().containsKey(field)) {\n+                getFieldErrors().put(field, new LinkedList());\n+            }\n+            getFieldErrors().get(field).addAll(entry.getValue());\n+        }", "originalCommit": "1bd79ed5fce592a5b180813259261227e9813ad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0MjE4NQ==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r553442185", "bodyText": "Done", "author": "ricardoasmarques", "createdAt": "2021-01-07T16:36:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjQ0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjUzNw==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551972537", "body": "Just a nitpick:\r\n```suggestion\r\n        fieldValidationErrors.putIfAbsent(field, new LinkedList()).add(error);\r\n```", "bodyText": "Just a nitpick:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!fieldValidationErrors.containsKey(field)) {\n          \n          \n            \n                        fieldValidationErrors.put(field, new LinkedList());\n          \n          \n            \n                    }\n          \n          \n            \n                    fieldValidationErrors.get(field).add(error);\n          \n          \n            \n                    fieldValidationErrors.putIfAbsent(field, new LinkedList()).add(error);", "bodyHTML": "<p dir=\"auto\">Just a nitpick:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>fieldValidationErrors<span class=\"pl-k\">.</span>containsKey(field)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"63\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            fieldValidationErrors<span class=\"pl-k\">.</span>put(field, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LinkedList</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"64\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"65\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        fieldValidationErrors<span class=\"pl-k\">.</span>get(field)<span class=\"pl-k\">.</span>add(error);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        fieldValidationErrors<span class=\"pl-k\">.</span>putIfAbsent(field, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LinkedList</span>())<span class=\"pl-k\">.</span>add(error);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cbbayburt", "createdAt": "2021-01-05T14:39:36Z", "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -50,6 +51,31 @@ public void addError(String key, Object... args) {\n         addError(new ValidatorError(key, args));\n     }\n \n+    /**\n+     * Add a ValidatorError to the list of field errors.\n+     *\n+     * @param field Field where the ValidatorError should be added.\n+     * @param error ValidatorError to be added.\n+     */\n+    public void addFieldError(String field, ValidatorError error) {\n+        if (!fieldValidationErrors.containsKey(field)) {\n+            fieldValidationErrors.put(field, new LinkedList());\n+        }\n+        fieldValidationErrors.get(field).add(error);", "originalCommit": "1bd79ed5fce592a5b180813259261227e9813ad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0MjA4Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r553442086", "bodyText": "Note that putIfAbsent will return null if the key does not exist yet.\nFrom Map docs:\n\nIf the specified key is not already associated with a value (or is mapped to null) associates it with the given value and returns null, else returns the current value.\n\nFinal solution is a mix of original implementation and you proposal:\nfieldValidationErrors.putIfAbsent(field, new LinkedList());\nfieldValidationErrors.get(field).add(error);\n\nThanks", "author": "ricardoasmarques", "createdAt": "2021-01-07T16:36:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjUzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ1NTAyNA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r553455024", "bodyText": "Oh right, I overlooked that, good catch, thanks!", "author": "cbbayburt", "createdAt": "2021-01-07T16:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MjUzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MzkyMg==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r551973922", "body": "You can also use: `fieldValidationErrors.forEach((key, value) -> { ... })` here for simplicity", "bodyText": "You can also use: fieldValidationErrors.forEach((key, value) -> { ... }) here for simplicity", "bodyHTML": "<p dir=\"auto\">You can also use: <code>fieldValidationErrors.forEach((key, value) -&gt; { ... })</code> here for simplicity</p>", "author": "cbbayburt", "createdAt": "2021-01-05T14:41:51Z", "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -110,6 +152,15 @@ public String getMessage() {\n             }\n \n         }\n+        if (!fieldValidationErrors.isEmpty()) {\n+            str.append(\"FIELD_ERRORS:\\n\");\n+            for (Map.Entry<String, List<ValidatorError>> entry : fieldValidationErrors.entrySet()) {", "originalCommit": "1bd79ed5fce592a5b180813259261227e9813ad8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ0MjY5Ng==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r553442696", "bodyText": "Done", "author": "ricardoasmarques", "createdAt": "2021-01-07T16:36:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MzkyMg=="}], "type": "inlineReview"}, {"oid": "59697f90a2530ffa36831900d338a6de918dcd4f", "url": "https://github.com/uyuni-project/uyuni/commit/59697f90a2530ffa36831900d338a6de918dcd4f", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-07T16:21:59Z", "type": "forcePushed"}, {"oid": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "url": "https://github.com/uyuni-project/uyuni/commit/9666f41adcb1d9b916bef9f4a6dc5125d911907d", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-07T16:28:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyMzY1OQ==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557323659", "body": "IIUC `getErrors().isEmpty() && getFieldErrors().isEmpty()` is supposed to return the same check result of `hasErrors()`, then I'd reuse it instead.", "bodyText": "IIUC getErrors().isEmpty() && getFieldErrors().isEmpty() is supposed to return the same check result of hasErrors(), then I'd reuse it instead.", "bodyHTML": "<p dir=\"auto\">IIUC <code>getErrors().isEmpty() &amp;&amp; getFieldErrors().isEmpty()</code> is supposed to return the same check result of <code>hasErrors()</code>, then I'd reuse it instead.</p>", "author": "ncounter", "createdAt": "2021-01-14T11:20:44Z", "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -124,13 +169,13 @@ public String getMessage() {\n      * @return true if there are no errors or warnings..\n      */\n     public boolean isEmpty() {\n-        return getWarnings().isEmpty() && getErrors().isEmpty();\n+        return getWarnings().isEmpty() && getErrors().isEmpty() && getFieldErrors().isEmpty();", "originalCommit": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM5ODA0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r558398040", "bodyText": "Done", "author": "ricardoasmarques", "createdAt": "2021-01-15T15:53:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyMzY1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyNDA3MA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557324070", "body": "Just for the sake of the logic and computation, feel free to use any of the alternatives or drop them:\r\na. `return (getErrors().size() + getFieldErrors().size()) > 0`\r\nb. `return !getErrors().isEmpty() || !getFieldErrors().isEmpty()`", "bodyText": "Just for the sake of the logic and computation, feel free to use any of the alternatives or drop them:\na. return (getErrors().size() + getFieldErrors().size()) > 0\nb. return !getErrors().isEmpty() || !getFieldErrors().isEmpty()", "bodyHTML": "<p dir=\"auto\">Just for the sake of the logic and computation, feel free to use any of the alternatives or drop them:<br>\na. <code>return (getErrors().size() + getFieldErrors().size()) &gt; 0</code><br>\nb. <code>return !getErrors().isEmpty() || !getFieldErrors().isEmpty()</code></p>", "author": "ncounter", "createdAt": "2021-01-14T11:21:31Z", "path": "java/code/src/com/redhat/rhn/common/validator/ValidatorResult.java", "diffHunk": "@@ -124,13 +169,13 @@ public String getMessage() {\n      * @return true if there are no errors or warnings..\n      */\n     public boolean isEmpty() {\n-        return getWarnings().isEmpty() && getErrors().isEmpty();\n+        return getWarnings().isEmpty() && getErrors().isEmpty() && getFieldErrors().isEmpty();\n     }\n \n     /**\n      * @return true if errors exist in this result.\n      */\n     public boolean hasErrors() {\n-        return getErrors().size() > 0;\n+        return getErrors().size() > 0 || getFieldErrors().size() > 0;", "originalCommit": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM5ODIzMA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r558398230", "bodyText": "Done", "author": "ricardoasmarques", "createdAt": "2021-01-15T15:53:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyNDA3MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyOTg0MA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r557329840", "body": "Could it be you are missing the Java checkstyle configuration in your IDE? IIRC, for instance, `static` imports should stay on top of everything, I see your PR is changing the order in different files.\r\n\r\n[IntelliJ configuration](https://github.com/uyuni-project/uyuni/wiki/IntelliJ-IDEA-specific-development-instructions#get-started)\r\n[Eclipse configuration](https://github.com/uyuni-project/uyuni/wiki/Eclipse-specific-development-instructions#automatic-import-reorganizing)", "bodyText": "Could it be you are missing the Java checkstyle configuration in your IDE? IIRC, for instance, static imports should stay on top of everything, I see your PR is changing the order in different files.\nIntelliJ configuration\nEclipse configuration", "bodyHTML": "<p dir=\"auto\">Could it be you are missing the Java checkstyle configuration in your IDE? IIRC, for instance, <code>static</code> imports should stay on top of everything, I see your PR is changing the order in different files.</p>\n<p dir=\"auto\"><a href=\"https://github.com/uyuni-project/uyuni/wiki/IntelliJ-IDEA-specific-development-instructions#get-started\">IntelliJ configuration</a><br>\n<a href=\"https://github.com/uyuni-project/uyuni/wiki/Eclipse-specific-development-instructions#automatic-import-reorganizing\">Eclipse configuration</a></p>", "author": "ncounter", "createdAt": "2021-01-14T11:32:32Z", "path": "java/code/src/com/suse/manager/webui/controllers/contentmanagement/handlers/FilterApiController.java", "diffHunk": "@@ -30,23 +24,28 @@\n import com.redhat.rhn.domain.user.User;\n import com.redhat.rhn.manager.EntityExistsException;\n import com.redhat.rhn.manager.contentmgmt.ContentManager;\n-\n import com.suse.manager.webui.controllers.contentmanagement.request.FilterRequest;\n import com.suse.manager.webui.controllers.contentmanagement.request.ProjectFiltersUpdateRequest;\n import com.suse.manager.webui.utils.FlashScopeHelper;\n import com.suse.manager.webui.utils.gson.ResultJson;\n-\n-import com.google.gson.Gson;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.http.HttpStatus;\n+import spark.Request;\n+import spark.Response;\n \n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.LinkedList;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n-import spark.Request;\n-import spark.Response;\n+import static com.suse.manager.webui.utils.SparkApplicationHelper.json;", "originalCommit": "9666f41adcb1d9b916bef9f4a6dc5125d911907d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM5ODM0NA==", "url": "https://github.com/uyuni-project/uyuni/pull/3048#discussion_r558398344", "bodyText": "Done", "author": "ricardoasmarques", "createdAt": "2021-01-15T15:54:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyOTg0MA=="}], "type": "inlineReview"}, {"oid": "c15397b3a6f9a0709a993fd4d4d449001bb1dd4e", "url": "https://github.com/uyuni-project/uyuni/commit/c15397b3a6f9a0709a993fd4d4d449001bb1dd4e", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T15:51:19Z", "type": "forcePushed"}, {"oid": "4cffb3ec2551b8c156ba29e530aa255a15b98dad", "url": "https://github.com/uyuni-project/uyuni/commit/4cffb3ec2551b8c156ba29e530aa255a15b98dad", "message": "Support server side field-level validations\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:58:03Z", "type": "commit"}, {"oid": "6bd722a727625df395c6800eaa65932426559cc0", "url": "https://github.com/uyuni-project/uyuni/commit/6bd722a727625df395c6800eaa65932426559cc0", "message": "CLM: Server side field-level validations (Properties)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:58:03Z", "type": "commit"}, {"oid": "d6b479b017d9224ef16543a7d4ba1c8665765080", "url": "https://github.com/uyuni-project/uyuni/commit/d6b479b017d9224ef16543a7d4ba1c8665765080", "message": "CLM: Server side field-level validations (Environment)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:58:03Z", "type": "commit"}, {"oid": "0932f1543211e7a43b60e73ede2ab8558cc546b0", "url": "https://github.com/uyuni-project/uyuni/commit/0932f1543211e7a43b60e73ede2ab8558cc546b0", "message": "CLM: Server side field-level validations (Filters)\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:58:03Z", "type": "commit"}, {"oid": "8aead43a40c1ba2480c25e51b425a3141b445c5b", "url": "https://github.com/uyuni-project/uyuni/commit/8aead43a40c1ba2480c25e51b425a3141b445c5b", "message": "Add CLM field-level input validations to changelog\n\nFixes: https://github.com/SUSE/spacewalk/issues/7639\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:59:00Z", "type": "commit"}, {"oid": "c2d9fd80f456190f3fe112aec74369a0fa34b868", "url": "https://github.com/uyuni-project/uyuni/commit/c2d9fd80f456190f3fe112aec74369a0fa34b868", "message": "Support for displaying multiple server errors per input field\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:59:05Z", "type": "commit"}, {"oid": "c2d9fd80f456190f3fe112aec74369a0fa34b868", "url": "https://github.com/uyuni-project/uyuni/commit/c2d9fd80f456190f3fe112aec74369a0fa34b868", "message": "Support for displaying multiple server errors per input field\n\nSigned-off-by: Ricardo Marques <rimarques@suse.com>", "committedDate": "2021-01-15T16:59:05Z", "type": "forcePushed"}]}