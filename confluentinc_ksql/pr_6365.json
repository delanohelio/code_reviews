{"pr_number": 6365, "pr_title": "Query schemas", "pr_author": "big-andy-coates", "pr_createdAt": "2020-10-06T16:41:33Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6365", "timeline": [{"oid": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "url": "https://github.com/confluentinc/ksql/commit/8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "message": "test: capture key and value formats as part of `QuerySchemas`\n\nWhen building a query, the `KsqlQueryBuilder` captures the schema and serde features used when creating each value serde.  This is later used by QTT to build historical plans that capture this information, giving us confidence that any changes we make aren't changing the schema and serde features being used by historical queries.\n\nThis commit extends this to capture details from _key_ serde, not just _value_ serde, and to capture full `KeyFormat` and `ValueFormat` info.\n\nThe benefit is two fold:  increased test coverage of historical plans and its a necessary improvement to enable testing of non-KAFKA key formats. A follow up PR will improve the `TopicInfoCache` to use this more detailed information.", "committedDate": "2020-10-06T16:32:59Z", "type": "commit"}, {"oid": "353e90280c6829c34a59193b391da046c5011a46", "url": "https://github.com/confluentinc/ksql/commit/353e90280c6829c34a59193b391da046c5011a46", "message": "test: historical plans", "committedDate": "2020-10-06T16:38:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE2Mg==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500566162", "body": "Is it worth adding a unit test to cover the `merge()` functionality required for tracking both key and value schema for the same logger prefix? I don't see coverage for that at the moment but I also don't feel too strongly since this code is essentially test-only.", "bodyText": "Is it worth adding a unit test to cover the merge() functionality required for tracking both key and value schema for the same logger prefix? I don't see coverage for that at the moment but I also don't feel too strongly since this code is essentially test-only.", "bodyHTML": "<p dir=\"auto\">Is it worth adding a unit test to cover the <code>merge()</code> functionality required for tracking both key and value schema for the same logger prefix? I don't see coverage for that at the moment but I also don't feel too strongly since this code is essentially test-only.</p>", "author": "vcrfxia", "createdAt": "2020-10-06T20:09:52Z", "path": "ksqldb-execution/src/test/java/io/confluent/ksql/execution/builder/KsqlQueryBuilderTest.java", "diffHunk": "@@ -234,39 +241,44 @@ public void shouldBuildValueSerde() {\n   }\n \n   @Test\n-  public void shouldTrackSchemasUsed() {\n+  public void shouldTrackKeySchemasUsed() {\n     // When:\n-    ksqlQueryBuilder.buildValueSerde(\n+    ksqlQueryBuilder.buildKeySerde(\n         FORMAT_INFO,\n-        SOME_SCHEMA,\n+        PHYSICAL_SCHEMA,\n         queryContext\n     );\n \n     // Then:\n-    final Map<String, PhysicalSchema> schemas = ksqlQueryBuilder.getSchemas().getSchemas();\n+    final Map<String, SchemaInfo> schemas = ksqlQueryBuilder.getSchemas().getSchemas();\n     assertThat(schemas.entrySet(), hasSize(1));\n-    assertThat(schemas.get(\"fred.context\"), is(SOME_SCHEMA));\n+    assertThat(schemas.get(\"fred.context\"), is(new SchemaInfo(\n+        LOGICAL_SCHEMA,\n+        Optional.of(KeyFormat.nonWindowed(\n+            FormatInfo.of(\"AVRO\", ImmutableMap.of(\"fullSchemaName\", \"io.confluent.ksql\")),\n+            SerdeFeatures.of(SerdeFeature.UNWRAP_SINGLES))),\n+        Optional.empty()\n+    )));\n   }\n \n   @Test\n-  public void shouldTrackSchemasTakingIntoAccountSerdeFeatures() {\n-    // Given:\n-    final PhysicalSchema schema = PhysicalSchema.from(\n-        SOME_SCHEMA.logicalSchema(),\n-        SerdeFeatures.of(),\n-        SerdeFeatures.of(SerdeFeature.UNWRAP_SINGLES)\n-    );\n-\n+  public void shouldTrackValueSchemasUsed() {", "originalCommit": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5MDU3MA==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500590570", "bodyText": "I'll add to the follow up PR.", "author": "big-andy-coates", "createdAt": "2020-10-06T20:56:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NjkyMw==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500596923", "bodyText": "see #6366", "author": "big-andy-coates", "createdAt": "2020-10-06T21:08:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE5Mw==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500566193", "body": "nit:\r\n```suggestion\r\n  public void shouldRoundTripNoKeyFormat() {\r\n```\r\nand similarly for the other test below.", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldRoundNoKeyFormat() {\n          \n          \n            \n              public void shouldRoundTripNoKeyFormat() {\n          \n      \n    \n    \n  \n\nand similarly for the other test below.", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"52\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldRoundNoKeyFormat</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"52\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldRoundTripNoKeyFormat</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">and similarly for the other test below.</p>", "author": "vcrfxia", "createdAt": "2020-10-06T20:09:55Z", "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/SchemaNodeTest.java", "diffHunk": "@@ -39,7 +49,12 @@ public void shouldRoundTrip() {\n   }\n \n   @Test\n-  public void shouldRoundTripWithoutFeatures() {\n-    ModelTester.assertRoundTrip(NO_SERDE_FEATURES);\n+  public void shouldRoundNoKeyFormat() {", "originalCommit": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5MDYwMg==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500590602", "bodyText": "I'll add to the follow up PR.", "author": "big-andy-coates", "createdAt": "2020-10-06T20:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU5NjkwNQ==", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500596905", "bodyText": "see #6366", "author": "big-andy-coates", "createdAt": "2020-10-06T21:08:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE5Mw=="}], "type": "inlineReview"}]}