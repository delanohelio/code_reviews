{"pr_number": 4671, "pr_title": "chore: Remove use of deprecated Jackson API", "pr_author": "rayokota", "pr_createdAt": "2020-02-28T20:40:29Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4671", "timeline": [{"oid": "3a8b5c07b090eefe138f7eef22dc497517b0683c", "url": "https://github.com/confluentinc/ksql/commit/3a8b5c07b090eefe138f7eef22dc497517b0683c", "message": "Remove use of deprecated Jackson API", "committedDate": "2020-02-28T20:39:17Z", "type": "commit"}, {"oid": "8ad16d9432a274d9d8b0beb28b436b4962c4aca0", "url": "https://github.com/confluentinc/ksql/commit/8ad16d9432a274d9d8b0beb28b436b4962c4aca0", "message": "Remove extraneous space", "committedDate": "2020-02-28T20:40:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMzg3Ng==", "url": "https://github.com/confluentinc/ksql/pull/4671#discussion_r385913876", "body": "nit: seems every so slightly cleaner, but up to you :) \r\n```suggestion\r\n  private static final JsonFactory PARSER_FACTORY = new JsonFactoryBuilder()\r\n    .disable(CANONICALIZE_FIELD_NAMES)\r\n    .build()\r\n    .setCodec(JsonMapper.INSTANCE.mapper);\r\n```", "bodyText": "nit: seems every so slightly cleaner, but up to you :)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final JsonFactory PARSER_FACTORY =\n          \n          \n            \n                  new JsonFactory(new JsonFactoryBuilder().disable(CANONICALIZE_FIELD_NAMES))\n          \n          \n            \n                      .setCodec(JsonMapper.INSTANCE.mapper);\n          \n          \n            \n              private static final JsonFactory PARSER_FACTORY = new JsonFactoryBuilder()\n          \n          \n            \n                .disable(CANONICALIZE_FIELD_NAMES)\n          \n          \n            \n                .build()\n          \n          \n            \n                .setCodec(JsonMapper.INSTANCE.mapper);", "bodyHTML": "<p dir=\"auto\">nit: seems every so slightly cleaner, but up to you :)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">JsonFactory</span> <span class=\"pl-c1\">PARSER_FACTORY</span> <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JsonFactory</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">JsonFactoryBuilder</span>()<span class=\"pl-k\">.</span>disable(<span class=\"pl-c1\">CANONICALIZE_FIELD_NAMES</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          .setCodec(<span class=\"pl-smi\">JsonMapper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INSTANCE</span><span class=\"pl-k\">.</span>mapper);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">JsonFactory</span> <span class=\"pl-c1\">PARSER_FACTORY</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JsonFactoryBuilder</span>()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    .disable(<span class=\"pl-c1\">CANONICALIZE_FIELD_NAMES</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    .build()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    .setCodec(<span class=\"pl-smi\">JsonMapper</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INSTANCE</span><span class=\"pl-k\">.</span>mapper);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "agavra", "createdAt": "2020-02-28T20:45:21Z", "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/json/JsonArrayContains.java", "diffHunk": "@@ -46,9 +47,9 @@\n   static final String DESCRIPTION = \"Parses a JSON array and determines whether or not the \"\n       + \"supplied value is contained within the array.\";\n \n-  private static final JsonFactory PARSER_FACTORY = new JsonFactory()\n-      .setCodec(JsonMapper.INSTANCE.mapper)\n-      .disable(CANONICALIZE_FIELD_NAMES);\n+  private static final JsonFactory PARSER_FACTORY =\n+      new JsonFactory(new JsonFactoryBuilder().disable(CANONICALIZE_FIELD_NAMES))\n+          .setCodec(JsonMapper.INSTANCE.mapper);", "originalCommit": "8ad16d9432a274d9d8b0beb28b436b4962c4aca0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "139e648a0dfc543f2f6d42cccc34ea6e0cf123af", "url": "https://github.com/confluentinc/ksql/commit/139e648a0dfc543f2f6d42cccc34ea6e0cf123af", "message": "Minor reformatting", "committedDate": "2020-02-28T21:32:00Z", "type": "commit"}, {"oid": "3269407a1be4f332e868c828e2d244bcb9e1d076", "url": "https://github.com/confluentinc/ksql/commit/3269407a1be4f332e868c828e2d244bcb9e1d076", "message": "fix: also fix the ConfigTopicKeyTest (new exception)", "committedDate": "2020-02-28T22:01:16Z", "type": "commit"}]}