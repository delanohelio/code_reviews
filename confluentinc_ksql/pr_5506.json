{"pr_number": 5506, "pr_title": "fix: allow dynamic construction of an ARRAY of STRUCTS with duplicate values #5436", "pr_author": "nae701", "pr_createdAt": "2020-05-28T22:43:29Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5506", "timeline": [{"oid": "81b21529c8732bdd35d7a616417f2c518849679c", "url": "https://github.com/confluentinc/ksql/commit/81b21529c8732bdd35d7a616417f2c518849679c", "message": "fixed issue 5436", "committedDate": "2020-05-28T21:57:33Z", "type": "commit"}, {"oid": "44d2ceba76b56175eda61ff80c751694fc713e68", "url": "https://github.com/confluentinc/ksql/commit/44d2ceba76b56175eda61ff80c751694fc713e68", "message": "Merge branch 'master' of github.com:confluentinc/ksql", "committedDate": "2020-05-28T22:10:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NTkwMA==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432165900", "body": "```suggestion\r\n    private final Map<CreateStructExpression, String> structToSchemaName =\r\n```\r\nnit: generally good practice to use the interface instead of the implementation when declaring variables. That way you don't leak any implementation details and have the freedom to change it down the line. In this case it doesn't matter so much, but a good practice to follow.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final HashMap<CreateStructExpression, String> structToSchemaName =\n          \n          \n            \n                private final Map<CreateStructExpression, String> structToSchemaName =\n          \n      \n    \n    \n  \n\nnit: generally good practice to use the interface instead of the implementation when declaring variables. That way you don't leak any implementation details and have the freedom to change it down the line. In this case it doesn't matter so much, but a good practice to follow.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">HashMap</span>&lt;<span class=\"pl-smi\">CreateStructExpression</span>, <span class=\"pl-smi\">String</span>&gt;</span> structToSchemaName <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">Map</span>&lt;<span class=\"pl-smi\">CreateStructExpression</span>, <span class=\"pl-smi\">String</span>&gt;</span> structToSchemaName <span class=\"pl-k\">=</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">nit: generally good practice to use the interface instead of the implementation when declaring variables. That way you don't leak any implementation details and have the freedom to change it down the line. In this case it doesn't matter so much, but a good practice to follow.</p>", "author": "agavra", "createdAt": "2020-05-28T22:49:24Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -101,9 +101,8 @@ public String getStructSchemaName(final CreateStructExpression createStructExpre\n     private final Map<ColumnName, String> columnRefToName = new HashMap<>();\n     private final ImmutableListMultimap.Builder<FunctionName, String> functionNameBuilder =\n         ImmutableListMultimap.builder();\n-    private final ImmutableMap.Builder<CreateStructExpression, String> structToSchemaName =\n-        ImmutableMap.builder();\n-\n+    private final HashMap<CreateStructExpression, String> structToSchemaName =", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzEzMg==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432167132", "body": "I think we should flip the semantics of the if statement here and instead return early if the `structToSchemaName` already contains the entry - that way we wont be incrementing `structSchemaCount` or adding the unnecessary argument to the `argumentBuilder`.", "bodyText": "I think we should flip the semantics of the if statement here and instead return early if the structToSchemaName already contains the entry - that way we wont be incrementing structSchemaCount or adding the unnecessary argument to the argumentBuilder.", "bodyHTML": "<p dir=\"auto\">I think we should flip the semantics of the if statement here and instead return early if the <code>structToSchemaName</code> already contains the entry - that way we wont be incrementing <code>structSchemaCount</code> or adding the unnecessary argument to the <code>argumentBuilder</code>.</p>", "author": "agavra", "createdAt": "2020-05-28T22:52:54Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -125,7 +124,9 @@ void addFunction(final FunctionName functionName, final Kudf function) {\n \n     void addStructSchema(final CreateStructExpression struct, final Schema schema) {\n       final String structSchemaName = CodeGenUtil.schemaName(structSchemaCount++);\n-      structToSchemaName.put(struct, structSchemaName);\n+      if (!structToSchemaName.containsKey(struct)) {", "originalCommit": "44d2ceba76b56175eda61ff80c751694fc713e68", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "url": "https://github.com/confluentinc/ksql/commit/bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "message": "fix issue 5436 v2", "committedDate": "2020-05-28T23:58:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU5ODk0OA==", "url": "https://github.com/confluentinc/ksql/pull/5506#discussion_r432598948", "body": "let's move the if branch one line up (to make sure that we don't unnecessarily increment `structSchemaCount`)", "bodyText": "let's move the if branch one line up (to make sure that we don't unnecessarily increment structSchemaCount)", "bodyHTML": "<p dir=\"auto\">let's move the if branch one line up (to make sure that we don't unnecessarily increment <code>structSchemaCount</code>)</p>", "author": "agavra", "createdAt": "2020-05-29T16:27:50Z", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenSpec.java", "diffHunk": "@@ -125,6 +124,9 @@ void addFunction(final FunctionName functionName, final Kudf function) {\n \n     void addStructSchema(final CreateStructExpression struct, final Schema schema) {\n       final String structSchemaName = CodeGenUtil.schemaName(structSchemaCount++);\n+      if (structToSchemaName.containsKey(struct)) {", "originalCommit": "bb74ffd1f1ba2b3afc48da629fda3fb1fc9cd2bd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f887e2552fcf0f02f067c080ae5b05f275a913a", "url": "https://github.com/confluentinc/ksql/commit/0f887e2552fcf0f02f067c080ae5b05f275a913a", "message": "historical plans added", "committedDate": "2020-05-29T16:56:39Z", "type": "commit"}, {"oid": "16747bd2cd9c2dd0df8f3c930de897d93efd2694", "url": "https://github.com/confluentinc/ksql/commit/16747bd2cd9c2dd0df8f3c930de897d93efd2694", "message": "added ignore back to PlannedTestGenerator", "committedDate": "2020-05-29T17:03:41Z", "type": "commit"}]}