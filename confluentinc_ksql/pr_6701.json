{"pr_number": 6701, "pr_title": "fix: Makes response codes rate limited as well as prints a message when it is hit", "pr_author": "AlanConfluent", "pr_createdAt": "2020-12-02T02:31:52Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6701", "timeline": [{"oid": "7f1edb14d0045ba9c0188c28698bbcb50fa124d1", "url": "https://github.com/confluentinc/ksql/commit/7f1edb14d0045ba9c0188c28698bbcb50fa124d1", "message": "fix: Makes response codes rate limited as well as prints a message when it is hit", "committedDate": "2020-12-02T02:28:48Z", "type": "commit"}, {"oid": "8673feccf6c3eac95958ed110e4bb16fbee184d3", "url": "https://github.com/confluentinc/ksql/commit/8673feccf6c3eac95958ed110e4bb16fbee184d3", "message": "Fix test name", "committedDate": "2020-12-02T02:30:35Z", "type": "commit"}, {"oid": "48282a47e0339128a381871336b39004f9a27e9f", "url": "https://github.com/confluentinc/ksql/commit/48282a47e0339128a381871336b39004f9a27e9f", "message": "Adds some more pairs to map test case", "committedDate": "2020-12-02T17:16:45Z", "type": "commit"}, {"oid": "6836df9edc6a3a5be388f5adeaba02bc1187970c", "url": "https://github.com/confluentinc/ksql/commit/6836df9edc6a3a5be388f5adeaba02bc1187970c", "message": "Apply suggestions from code review\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>", "committedDate": "2020-12-03T17:51:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNjEyNA==", "url": "https://github.com/confluentinc/ksql/pull/6701#discussion_r535716124", "body": "```suggestion\r\n  // Print \"You hit a rate limit\" at most once every 5 seconds\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Print \"You hit a rate limit\" every 5 seconds\n          \n          \n            \n              // Print \"You hit a rate limit\" at most once every 5 seconds", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"32\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Print \"You hit a rate limit\" every 5 seconds</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"32\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Print \"You hit a rate limit\" <span class=\"x x-first x-last\">at most once </span>every 5 seconds</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vcrfxia", "createdAt": "2020-12-03T23:15:20Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/LoggingRateLimiter.java", "diffHunk": "@@ -26,13 +27,23 @@\n import java.util.Map.Entry;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.function.Function;\n+import org.slf4j.Logger;\n \n class LoggingRateLimiter {\n+  // Print \"You hit a rate limit\" every 5 seconds", "originalCommit": "6836df9edc6a3a5be388f5adeaba02bc1187970c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNzEzMg==", "url": "https://github.com/confluentinc/ksql/pull/6701#discussion_r535717132", "body": "Would it be better to initialize the rate limiters up front, rather than calling `computeIfAbsent` on each request? I don't have a sense of how large this optimization is, feels minor but I also feel it can't hurt. Feel free to disagree.", "bodyText": "Would it be better to initialize the rate limiters up front, rather than calling computeIfAbsent on each request? I don't have a sense of how large this optimization is, feels minor but I also feel it can't hurt. Feel free to disagree.", "bodyHTML": "<p dir=\"auto\">Would it be better to initialize the rate limiters up front, rather than calling <code>computeIfAbsent</code> on each request? I don't have a sense of how large this optimization is, feels minor but I also feel it can't hurt. Feel free to disagree.</p>", "author": "vcrfxia", "createdAt": "2020-12-03T23:17:44Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/LoggingRateLimiter.java", "diffHunk": "@@ -45,13 +56,33 @@\n     requireNonNull(ksqlRestConfig);\n     this.rateLimiterFactory = requireNonNull(rateLimiterFactory);\n     this.rateLimitedPaths = getRateLimitedRequestPaths(ksqlRestConfig);\n+    this.rateLimitedResponseCodes = getRateLimitedResponseCodes(ksqlRestConfig);\n+    this.pathLimitHit = rateLimiterFactory.apply(LIMIT_HIT_LOG_RATE);\n+    this.responseCodeLimitHit = rateLimiterFactory.apply(LIMIT_HIT_LOG_RATE);\n   }\n \n-  public boolean shouldLog(final String path) {\n+  public boolean shouldLog(final Logger logger, final String path, final int responseCode) {\n     if (rateLimitedPaths.containsKey(path)) {\n       final double rateLimit = rateLimitedPaths.get(path);\n-      rateLimiters.computeIfAbsent(path, (k) -> rateLimiterFactory.apply(rateLimit));\n-      return rateLimiters.get(path).tryAcquire();\n+      rateLimitersByPath.computeIfAbsent(path, (k) -> rateLimiterFactory.apply(rateLimit));", "originalCommit": "6836df9edc6a3a5be388f5adeaba02bc1187970c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ5NDY4Ng==", "url": "https://github.com/confluentinc/ksql/pull/6701#discussion_r536494686", "bodyText": "Yeah, you're right.  The data is static and not large, so why not just make an immutable map instead on initialization?\nI was originally thinking it might be dynamic, but it's not currently.", "author": "AlanConfluent", "createdAt": "2020-12-05T03:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNzEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNzI4NA==", "url": "https://github.com/confluentinc/ksql/pull/6701#discussion_r535717284", "body": "```suggestion\r\n    // Already validated as having int keys and double values\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Already validated as all ints\n          \n          \n            \n                // Already validated as having int keys and double values", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"101\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Already validated as <span class=\"x x-first x-last\">all ints</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"101\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Already validated as <span class=\"x x-first x-last\">having int keys and double values</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vcrfxia", "createdAt": "2020-12-03T23:18:06Z", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/LoggingRateLimiter.java", "diffHunk": "@@ -64,4 +95,12 @@ public boolean shouldLog(final String path) {\n             entry -> Double.parseDouble(entry.getValue())));\n   }\n \n+  private static Map<Integer, Double> getRateLimitedResponseCodes(final KsqlRestConfig config) {\n+    // Already validated as all ints", "originalCommit": "6836df9edc6a3a5be388f5adeaba02bc1187970c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c0ec7a1831f58107c61b7d0fc886bdae67985e2", "url": "https://github.com/confluentinc/ksql/commit/1c0ec7a1831f58107c61b7d0fc886bdae67985e2", "message": "Feedback", "committedDate": "2020-12-05T03:25:24Z", "type": "commit"}, {"oid": "1c0ec7a1831f58107c61b7d0fc886bdae67985e2", "url": "https://github.com/confluentinc/ksql/commit/1c0ec7a1831f58107c61b7d0fc886bdae67985e2", "message": "Feedback", "committedDate": "2020-12-05T03:25:24Z", "type": "forcePushed"}, {"oid": "be9466426eb287001617948fdbace88172900443", "url": "https://github.com/confluentinc/ksql/commit/be9466426eb287001617948fdbace88172900443", "message": "Lint", "committedDate": "2020-12-05T03:45:18Z", "type": "commit"}]}