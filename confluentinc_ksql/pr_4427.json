{"pr_number": 4427, "pr_title": "refactor: Changes lag APIs to return Optional, per comments", "pr_author": "AlanConfluent", "pr_createdAt": "2020-02-03T20:42:13Z", "pr_url": "https://github.com/confluentinc/ksql/pull/4427", "timeline": [{"oid": "b649ae54afe4ff2a19fde8d2fd4a180ff789640e", "url": "https://github.com/confluentinc/ksql/commit/b649ae54afe4ff2a19fde8d2fd4a180ff789640e", "message": "refactor: Changes lag APIs to return Optional, per comments", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "41f0d6fe7cc2dc481d1f053dc8511710af6d8f7a", "url": "https://github.com/confluentinc/ksql/commit/41f0d6fe7cc2dc481d1f053dc8511710af6d8f7a", "message": "Simplifies test", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "c271a0f44c482ca4b9c4858e4ee1b373b6f39540", "url": "https://github.com/confluentinc/ksql/commit/c271a0f44c482ca4b9c4858e4ee1b373b6f39540", "message": "Additional test simplification", "committedDate": "2020-02-03T23:44:39Z", "type": "commit"}, {"oid": "d7ed77e0bbe48b44f64626b14dae1cf69d2e0ae3", "url": "https://github.com/confluentinc/ksql/commit/d7ed77e0bbe48b44f64626b14dae1cf69d2e0ae3", "message": "Remove unused empty objects", "committedDate": "2020-02-03T23:44:40Z", "type": "commit"}, {"oid": "4ce99053548ee0a03093d3b0c938c0cd983f45bb", "url": "https://github.com/confluentinc/ksql/commit/4ce99053548ee0a03093d3b0c938c0cd983f45bb", "message": "Fixes tests", "committedDate": "2020-02-03T23:44:40Z", "type": "commit"}, {"oid": "4ce99053548ee0a03093d3b0c938c0cd983f45bb", "url": "https://github.com/confluentinc/ksql/commit/4ce99053548ee0a03093d3b0c938c0cd983f45bb", "message": "Fixes tests", "committedDate": "2020-02-03T23:44:40Z", "type": "forcePushed"}, {"oid": "bdce4832ad55855c4edb06b67f9a397e11513418", "url": "https://github.com/confluentinc/ksql/commit/bdce4832ad55855c4edb06b67f9a397e11513418", "message": "Fix validation after rebase", "committedDate": "2020-02-04T00:21:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5Mzk0OQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374793949", "body": "nit: if you invert this `if` you could move it before the construction of the `lagInfo` var.\r\n\r\ne.g.\r\n\r\n```java\r\n  if (!aliveHosts.contains(host)) {\r\n     return Optional.empty();\r\n   }\r\n\r\n   final Optional<LagInfoEntity> lagInfo = ...\r\n   return lagInfo;\r\n```", "bodyText": "nit: if you invert this if you could move it before the construction of the lagInfo var.\ne.g.\n  if (!aliveHosts.contains(host)) {\n     return Optional.empty();\n   }\n\n   final Optional<LagInfoEntity> lagInfo = ...\n   return lagInfo;", "bodyHTML": "<p dir=\"auto\">nit: if you invert this <code>if</code> you could move it before the construction of the <code>lagInfo</code> var.</p>\n<p dir=\"auto\">e.g.</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  if (!aliveHosts.contains(host)) {\n     return Optional.empty();\n   }\n\n   final Optional&lt;LagInfoEntity&gt; lagInfo = ...\n   return lagInfo;\n\"><pre>  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>aliveHosts<span class=\"pl-k\">.</span>contains(host)) {\n     <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty();\n   }\n\n   <span class=\"pl-k\">final</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">LagInfoEntity</span>&gt;</span> lagInfo <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>\n   <span class=\"pl-k\">return</span> lagInfo;</pre></div>", "author": "big-andy-coates", "createdAt": "2020-02-04T16:51:47Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java", "diffHunk": "@@ -171,12 +167,11 @@ public void receiveHostLag(final LagReportingMessage lagReportingMessage) {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final LagInfoEntity lagInfo = receivedLagInfo\n-        .getOrDefault(host, EMPTY_HOST_STORE_LAGS)\n-        .getStateStoreLagsOrDefault(queryStateStoreId, EMPTY_STATE_STORE_LAGS)\n-        .getLagByPartition(partition);\n-    if (aliveHosts.contains(host) && lagInfo != null) {\n-      return Optional.of(lagInfo);\n+    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n+        .flatMap(hostStoreLags -> hostStoreLags.getStateStoreLags(queryStateStoreId))\n+        .flatMap(stateStoreLags -> stateStoreLags.getLagByPartition(partition));\n+    if (aliveHosts.contains(host)) {", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0ODA1OQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374848059", "bodyText": "Done", "author": "AlanConfluent", "createdAt": "2020-02-04T18:33:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5Mzk0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTA5Mg==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374795092", "body": "Can't this be:\r\n\r\n```suggestion\r\n    final Optional<LagInfoEntity> lagInfo = getLagPerHost(host)\r\n```\r\n??", "bodyText": "Can't this be:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))\n          \n          \n            \n                final Optional<LagInfoEntity> lagInfo = getLagPerHost(host)\n          \n      \n    \n    \n  \n\n??", "bodyHTML": "<p dir=\"auto\">Can't this be:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">LagInfoEntity</span>&gt;</span> lagInfo <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">Optional</span><span class=\"pl-k x\">.</span><span class=\"x\">ofNullable(receivedLagInfo</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">get(</span>host<span class=\"x x-first x-last\">)</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">LagInfoEntity</span>&gt;</span> lagInfo <span class=\"pl-k\">=</span> <span class=\"x x-first x-last\">getLagPerHost(</span>host)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">??</p>", "author": "big-andy-coates", "createdAt": "2020-02-04T16:53:45Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java", "diffHunk": "@@ -171,12 +167,11 @@ public void receiveHostLag(final LagReportingMessage lagReportingMessage) {\n   public Optional<LagInfoEntity> getHostsPartitionLagInfo(\n       final KsqlHost host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<KsqlHost> aliveHosts = aliveHostsRef.get();\n-    final LagInfoEntity lagInfo = receivedLagInfo\n-        .getOrDefault(host, EMPTY_HOST_STORE_LAGS)\n-        .getStateStoreLagsOrDefault(queryStateStoreId, EMPTY_STATE_STORE_LAGS)\n-        .getLagByPartition(partition);\n-    if (aliveHosts.contains(host) && lagInfo != null) {\n-      return Optional.of(lagInfo);\n+    final Optional<LagInfoEntity> lagInfo = Optional.ofNullable(receivedLagInfo.get(host))", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0NzU2MQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374847561", "bodyText": "Yep, changed.", "author": "AlanConfluent", "createdAt": "2020-02-04T18:32:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTk5Nw==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374795997", "body": "Think this can just be:\r\n\r\n```java\r\nprivate HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\r\n    return lagReportingAgent\r\n        .map(agent -> agent.getLagPerHost(ksqlHost))\r\n        .orElse(EMPTY_HOST_STORE_LAGS);\r\n  }\r\n```", "bodyText": "Think this can just be:\nprivate HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n    return lagReportingAgent\n        .map(agent -> agent.getLagPerHost(ksqlHost))\n        .orElse(EMPTY_HOST_STORE_LAGS);\n  }", "bodyHTML": "<p dir=\"auto\">Think this can just be:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n    return lagReportingAgent\n        .map(agent -&gt; agent.getLagPerHost(ksqlHost))\n        .orElse(EMPTY_HOST_STORE_LAGS);\n  }\n\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-smi\">HostStoreLags</span> getHostStoreLags(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">KsqlHost</span> ksqlHost) {\n    <span class=\"pl-k\">return</span> lagReportingAgent\n        .map(agent <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> agent<span class=\"pl-k\">.</span>getLagPerHost(ksqlHost))\n        .orElse(<span class=\"pl-c1\">EMPTY_HOST_STORE_LAGS</span>);\n  }</pre></div>", "author": "big-andy-coates", "createdAt": "2020-02-04T16:55:18Z", "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ClusterStatusResource.java", "diffHunk": "@@ -71,12 +71,17 @@ private ClusterStatusResponse getResponse() {\n             entry -> new KsqlHostEntity(entry.getKey().host(), entry.getKey().port()) ,\n             entry -> new HostStatusEntity(entry.getValue().isHostAlive(),\n                                           entry.getValue().getLastStatusUpdateMs(),\n-                                          lagReportingAgent.isPresent()\n-                                              ? lagReportingAgent.get().getLagPerHost(\n-                                                  entry.getKey())\n-                                              : EMPTY_HOST_STORE_LAGS)\n+                                          getHostStoreLags(entry.getKey()))\n         ));\n \n     return new ClusterStatusResponse(response);\n   }\n+\n+  private HostStoreLags getHostStoreLags(final KsqlHost ksqlHost) {\n+    if (!lagReportingAgent.isPresent()) {\n+      return EMPTY_HOST_STORE_LAGS;\n+    }\n+    final Optional<HostStoreLags> lags = lagReportingAgent.get().getLagPerHost(ksqlHost);\n+    return lags.orElse(EMPTY_HOST_STORE_LAGS);\n+  }", "originalCommit": "bdce4832ad55855c4edb06b67f9a397e11513418", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1MDMwOQ==", "url": "https://github.com/confluentinc/ksql/pull/4427#discussion_r374850309", "bodyText": "Done", "author": "AlanConfluent", "createdAt": "2020-02-04T18:38:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc5NTk5Nw=="}], "type": "inlineReview"}, {"oid": "4908b72e6181dcc75e4d936ea4dbd98f83060e81", "url": "https://github.com/confluentinc/ksql/commit/4908b72e6181dcc75e4d936ea4dbd98f83060e81", "message": "Feedback", "committedDate": "2020-02-04T18:41:44Z", "type": "commit"}]}