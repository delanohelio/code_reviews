{"pr_number": 5739, "pr_title": "feat: add syntax for suppression", "pr_author": "nae701", "pr_createdAt": "2020-06-30T20:33:49Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5739", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwNzY1NA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448007654", "body": "we probably want to keep this but change the condition to `if (analysis.getResultMaterialization().isPresent() && analysis.getResultMaterialization().get() == ResultMaterialization.FINAL)` because we haven't added support for `EMIT FINAL` yet. We'll remove this in a future PR, but we want to make sure that each PR is independently releasable and doesn't \"break\" master", "bodyText": "we probably want to keep this but change the condition to if (analysis.getResultMaterialization().isPresent() && analysis.getResultMaterialization().get() == ResultMaterialization.FINAL) because we haven't added support for EMIT FINAL yet. We'll remove this in a future PR, but we want to make sure that each PR is independently releasable and doesn't \"break\" master", "bodyHTML": "<p dir=\"auto\">we probably want to keep this but change the condition to <code>if (analysis.getResultMaterialization().isPresent() &amp;&amp; analysis.getResultMaterialization().get() == ResultMaterialization.FINAL)</code> because we haven't added support for <code>EMIT FINAL</code> yet. We'll remove this in a future PR, but we want to make sure that each PR is independently releasable and doesn't \"break\" master</p>", "author": "agavra", "createdAt": "2020-06-30T22:10:04Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/PushQueryValidator.java", "diffHunk": "@@ -17,17 +17,12 @@\n \n import io.confluent.ksql.analyzer.Analysis.AliasedDataSource;\n import io.confluent.ksql.metastore.model.DataSource.DataSourceType;\n-import io.confluent.ksql.parser.tree.ResultMaterialization;\n import io.confluent.ksql.util.KsqlException;\n \n public class PushQueryValidator implements QueryValidator {\n \n   @Override\n   public void validate(final Analysis analysis) {\n-    if (analysis.getResultMaterialization() != ResultMaterialization.CHANGES) {", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4ODc2Nw==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r451688767", "bodyText": "Isn't the first part of the if condition redundant though? Can we simplify this to just if (analysis.getResultMaterialization().get() == ResultMaterialization.FINAL)", "author": "nae701", "createdAt": "2020-07-08T16:52:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwNzY1NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5Mjc3MA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r451692770", "bodyText": "if getResultMaterialization.isPresent() returns false, then analysis.getResultMaterialization().get() will throw a NoSuchElementException\n    /**\n     * If a value is present in this {@code Optional}, returns the value,\n     * otherwise throws {@code NoSuchElementException}.\n     *\n     * @return the non-null value held by this {@code Optional}\n     * @throws NoSuchElementException if there is no value present\n     *\n     * @see Optional#isPresent()\n     */\n    public T get() {\n        if (value == null) {\n            throw new NoSuchElementException(\"No value present\");\n        }\n        return value;\n    }", "author": "agavra", "createdAt": "2020-07-08T16:59:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwNzY1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwODIzNA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448008234", "body": "```suggestion\r\n        givenQuery(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());\r\n```\r\nnit: and the same goes for the statements below", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    givenQuery(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),Optional.empty());\n          \n          \n            \n                    givenQuery(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());\n          \n      \n    \n    \n  \n\nnit: and the same goes for the statements below", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        givenQuery(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(),<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        givenQuery(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty(),<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">nit: and the same goes for the statements below</p>", "author": "agavra", "createdAt": "2020-06-30T22:11:34Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/engine/rewrite/StatementRewriterTest.java", "diffHunk": "@@ -193,7 +194,7 @@ private Query givenQuery(\n   public void shouldRewriteQuery() {\n     // Given:\n     final Query query =\n-        givenQuery(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());\n+        givenQuery(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(),Optional.empty());", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTQ3Mg==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448009472", "body": "it looks like we're changing behavior of this method by adding the `resultMaterialization` parameter, previously it would use the field. This makes me think that because we're passing in `Optional.empty()` here, the tests below should be failing because we're expecting `Optional.of(resultMaterialization)` ", "bodyText": "it looks like we're changing behavior of this method by adding the resultMaterialization parameter, previously it would use the field. This makes me think that because we're passing in Optional.empty() here, the tests below should be failing because we're expecting Optional.of(resultMaterialization)", "bodyHTML": "<p dir=\"auto\">it looks like we're changing behavior of this method by adding the <code>resultMaterialization</code> parameter, previously it would use the field. This makes me think that because we're passing in <code>Optional.empty()</code> here, the tests below should be failing because we're expecting <code>Optional.of(resultMaterialization)</code></p>", "author": "agavra", "createdAt": "2020-06-30T22:14:46Z", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/engine/rewrite/StatementRewriterTest.java", "diffHunk": "@@ -170,7 +170,8 @@ private Query givenQuery(\n       final Optional<Expression> where,\n       final Optional<GroupBy> groupBy,\n       final Optional<PartitionBy> partitionBy,\n-      final Optional<Expression> having\n+      final Optional<Expression> having,\n+      final Optional<ResultMaterialization> resultMaterialization", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA1Mzg2MA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448053860", "bodyText": "Sorry should we not be add resultMaterialization parameter in this method then? The tests did fail as you said but I changed the tests to expect Optional.empty() similar to the other parameters and they now pass", "author": "nae701", "createdAt": "2020-07-01T00:39:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NzU3NA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448467574", "bodyText": "we should make sure to test it both ways. I think it makes sense to pass it in here but then we need to test that it works as well. If you look at the tests in this class they all follow a pattern:\n// Given\nquery := a query\nmock(expressionRewriter).toDoSomething\n\n// When\nrewriter.rewrite(query)\n\n// Then\nassertThat(toDoSomething happened)\n\nSimilarly, we should add a test to make sure that if the mock rewriter rewrites the resultMaterialization that we get the right thing. In most cases, the givenQuery should take in Optional.empty() (and expect the output to be empty) but we should have one test where it expects the materialization to be rewritten", "author": "agavra", "createdAt": "2020-07-01T16:06:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3MzkxNQ==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r449273915", "bodyText": "So actually looking closer I see that StatementRewriter only works on AstNodes or expressions, and so cannot actually rewrite resultMaterialization since it does not extend either of these.  So some options are we could leave the test as if for now, or revert the test back to when it just used the field, or we could add a new function to rewrite the resultMaterialization though I am not sure how important it is right now to get it rewritten. I am leaning towards option 1 or 2 but want to see what your thoughts are.", "author": "nae701", "createdAt": "2020-07-02T21:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTQ3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4MjYzMQ==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r450382631", "bodyText": "I don't imagine we're going to be rewriting it anytime soon, so I'm happy to revert the test back to just having it be a field", "author": "agavra", "createdAt": "2020-07-06T17:45:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAwOTQ3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMDUzNg==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448010536", "body": "```suggestion\r\n        // Else must be a push query, which must specify a materialization\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Else must be a push query\n          \n          \n            \n                    // Else must be a push query, which must specify a materialization", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Else must be a push query</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Else must be a push query<span class=\"x x-first x-last\">, which must specify a materialization</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "agavra", "createdAt": "2020-06-30T22:17:26Z", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/AstBuilder.java", "diffHunk": "@@ -395,16 +394,27 @@ public Query visitQuery(final SqlBaseParser.QueryContext context) {\n \n       final boolean pullQuery = context.EMIT() == null && !buildingPersistentQuery;\n \n-      final ResultMaterialization resultMaterialization = Optional\n-          .ofNullable(context.resultMaterialization())\n-          .map(rm -> rm.CHANGES() == null\n-              ? ResultMaterialization.FINAL\n-              : ResultMaterialization.CHANGES\n-          )\n-          .orElse(buildingPersistentQuery\n-              ? ResultMaterialization.CHANGES\n-              : ResultMaterialization.FINAL\n-          );\n+      final Optional<ResultMaterialization> resultMaterialization;\n+\n+      if (pullQuery) {\n+        resultMaterialization = Optional.empty();\n+      } else if (buildingPersistentQuery) {\n+        resultMaterialization = Optional.of(Optional\n+            .ofNullable(context.resultMaterialization())\n+            .map(rm -> rm.FINAL() == null\n+                ? ResultMaterialization.CHANGES\n+                : ResultMaterialization.FINAL\n+            )\n+            .orElse(ResultMaterialization.CHANGES\n+            ));\n+        // Else must be a push query", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjUzMA==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448012530", "body": "this can be simplified to:\r\n```java\r\nappend(indent, \"EMIT \");\r\nappend(indent, node.getResultMaterialization().orElse(ResultMaterialization.CHANGES).toString()).append('\\n');\r\n```", "bodyText": "this can be simplified to:\nappend(indent, \"EMIT \");\nappend(indent, node.getResultMaterialization().orElse(ResultMaterialization.CHANGES).toString()).append('\\n');", "bodyHTML": "<p dir=\"auto\">this can be simplified to:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"append(indent, &quot;EMIT &quot;);\nappend(indent, node.getResultMaterialization().orElse(ResultMaterialization.CHANGES).toString()).append('\\n');\"><pre>append(indent, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>EMIT <span class=\"pl-pds\">\"</span></span>);\nappend(indent, node<span class=\"pl-k\">.</span>getResultMaterialization()<span class=\"pl-k\">.</span>orElse(<span class=\"pl-smi\">ResultMaterialization</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CHANGES</span>)<span class=\"pl-k\">.</span>toString())<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>);</pre></div>", "author": "agavra", "createdAt": "2020-06-30T22:22:45Z", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/SqlFormatter.java", "diffHunk": "@@ -127,9 +127,16 @@ protected Void visitQuery(final Query node, final Integer indent) {\n       }\n \n       if (!node.isPullQuery()) {\n-        append(indent, \"EMIT \");\n-        append(indent, node.getResultMaterialization().toString())\n-            .append('\\n');\n+        if (node.getResultMaterialization().isPresent()) {\n+          append(indent, \"EMIT \");\n+          append(indent, node.getResultMaterialization().get().toString())\n+              .append('\\n');\n+        } else {\n+          append(indent, \"EMIT \");\n+          append(indent, \"CHANGES\")\n+              .append('\\n');\n+        }", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjkzMw==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448012933", "body": "make sure to add test coverage that accounts for the new code added to ast builder (it should cover all the branches you added from AstBuilder.java L399:L417)", "bodyText": "make sure to add test coverage that accounts for the new code added to ast builder (it should cover all the branches you added from AstBuilder.java L399:L417)", "bodyHTML": "<p dir=\"auto\">make sure to add test coverage that accounts for the new code added to ast builder (it should cover all the branches you added from AstBuilder.java L399:L417)</p>", "author": "agavra", "createdAt": "2020-06-30T22:24:02Z", "path": "ksqldb-parser/src/test/java/io/confluent/ksql/parser/AstBuilderTest.java", "diffHunk": "@@ -444,7 +443,7 @@ public void shouldSupportExplicitEmitChangesOnBareQuery() {\n \n     // Then:\n     assertThat(\"Should be push\", result.isPullQuery(), is(false));\n-    assertThat(result.getResultMaterialization(), is(ResultMaterialization.CHANGES));\n+    assertThat(result.getResultMaterialization(), is(Optional.of(ResultMaterialization.CHANGES)));", "originalCommit": "e528c5b1134c1701f8006e7dfcbfd11f72e222c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3MTkwMg==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448071902", "bodyText": "So to confirm, just make new unit tests in AstBuilderTest which cover each case that is covered  in AstBuilder.java L399:L417?", "author": "nae701", "createdAt": "2020-07-01T01:52:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjkzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NTY0Ng==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r448465646", "bodyText": "yeah", "author": "agavra", "createdAt": "2020-07-01T16:03:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjkzMw=="}], "type": "inlineReview"}, {"oid": "57ce5d2fc9fbb95bdfa63e28c2127d8a78b6e1f2", "url": "https://github.com/confluentinc/ksql/commit/57ce5d2fc9fbb95bdfa63e28c2127d8a78b6e1f2", "message": "made resultMaterialization optional and fixed logic in AstBuilder", "committedDate": "2020-07-06T20:57:45Z", "type": "commit"}, {"oid": "595852086f8445072d976bd386f2e2e7056aea44", "url": "https://github.com/confluentinc/ksql/commit/595852086f8445072d976bd386f2e2e7056aea44", "message": "feat: add syntax for suppression", "committedDate": "2020-07-06T21:07:22Z", "type": "commit"}, {"oid": "8475960a98821879906ec1348a6f358460802c5f", "url": "https://github.com/confluentinc/ksql/commit/8475960a98821879906ec1348a6f358460802c5f", "message": "fix: default to emit changes for ctas/csas", "committedDate": "2020-07-06T21:07:56Z", "type": "commit"}, {"oid": "51cb6c06d41b6be77ffc67c4bb2e0c8946dbf4be", "url": "https://github.com/confluentinc/ksql/commit/51cb6c06d41b6be77ffc67c4bb2e0c8946dbf4be", "message": "chore: cleaning up code resultMaterialization", "committedDate": "2020-07-06T21:08:08Z", "type": "commit"}, {"oid": "81c45353a3c3fae4a6b240b001e3cec2d6d26528", "url": "https://github.com/confluentinc/ksql/commit/81c45353a3c3fae4a6b240b001e3cec2d6d26528", "message": "test: add tests for emit final", "committedDate": "2020-07-06T21:08:26Z", "type": "commit"}, {"oid": "184755e3910bc580606cfb4c5604c6edd725eedd", "url": "https://github.com/confluentinc/ksql/commit/184755e3910bc580606cfb4c5604c6edd725eedd", "message": "chore: revert rewrite test", "committedDate": "2020-07-06T21:11:23Z", "type": "commit"}, {"oid": "184755e3910bc580606cfb4c5604c6edd725eedd", "url": "https://github.com/confluentinc/ksql/commit/184755e3910bc580606cfb4c5604c6edd725eedd", "message": "chore: revert rewrite test", "committedDate": "2020-07-06T21:11:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5OTYxMg==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r450499612", "body": "nit: can just be `.get()` we know that it's present from the check above\r\n```suggestion\r\n              .get()\r\n```", "bodyText": "nit: can just be .get() we know that it's present from the check above\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          .orElse(ResultMaterialization.CHANGES)\n          \n          \n            \n                          .get()", "bodyHTML": "<p dir=\"auto\">nit: can just be <code>.get()</code> we know that it's present from the check above</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              .<span class=\"x x-first\">orElse(</span><span class=\"pl-smi x\">ResultMaterialization</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">CHANGES</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              .<span class=\"x x-first x-last\">get(</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "agavra", "createdAt": "2020-07-06T21:54:16Z", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/SqlFormatter.java", "diffHunk": "@@ -127,9 +127,13 @@ protected Void visitQuery(final Query node, final Integer indent) {\n       }\n \n       if (!node.isPullQuery()) {\n-        append(indent, \"EMIT \");\n-        append(indent, node.getResultMaterialization().toString())\n-            .append('\\n');\n+        if (node.getResultMaterialization().isPresent()) {\n+          append(indent, \"EMIT \");\n+          append(indent, node.getResultMaterialization()\n+              .orElse(ResultMaterialization.CHANGES)", "originalCommit": "184755e3910bc580606cfb4c5604c6edd725eedd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMTI0Mw==", "url": "https://github.com/confluentinc/ksql/pull/5739#discussion_r450501243", "body": "did you mean to add this? \ud83d\ude09 ", "bodyText": "did you mean to add this? \ud83d\ude09", "bodyHTML": "<p dir=\"auto\">did you mean to add this? <g-emoji class=\"g-emoji\" alias=\"wink\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f609.png\">\ud83d\ude09</g-emoji></p>", "author": "agavra", "createdAt": "2020-07-06T21:58:16Z", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/KsqlRestConfigTest.java", "diffHunk": "@@ -41,6 +41,7 @@\n import org.apache.kafka.clients.consumer.ConsumerConfig;\n import org.apache.kafka.common.config.ConfigException;\n import org.apache.kafka.streams.StreamsConfig;\n+import org.junit.Ignore;", "originalCommit": "184755e3910bc580606cfb4c5604c6edd725eedd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9c820585f3572360af4478742c6bceb9f6c9959b", "url": "https://github.com/confluentinc/ksql/commit/9c820585f3572360af4478742c6bceb9f6c9959b", "message": "chore: fix nits", "committedDate": "2020-07-06T22:15:51Z", "type": "commit"}]}