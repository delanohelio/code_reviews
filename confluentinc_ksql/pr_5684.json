{"pr_number": 5684, "pr_title": "fix: query w/ scoped all columns, join and where clause", "pr_author": "big-andy-coates", "pr_createdAt": "2020-06-25T15:44:51Z", "pr_url": "https://github.com/confluentinc/ksql/pull/5684", "timeline": [{"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c", "url": "https://github.com/confluentinc/ksql/commit/a3ebbf58e261460e18d0e7bc139078bdcf9eb49c", "message": "fix: query w/ scoped all columns, join and where clause\n\nhttps://github.com/confluentinc/ksql/issues/5503\n\nThis fixes a regression introduced in 0.10.\n\nThe implications of this are not that it crashes the command runner thread, as the original ticket states. Instead, the implications are that queries a users could previously run will now fail. Existing running queries will not be affected.\n\nAffected queries will be any using combining:\n\n* A join\n* with a projection using a scoped 'all columns', e.g. a A.*\n* with a where clause\n\ne.g.\n\n```\nSELECT A.*, B.Id\n   FROM A\n     JOIN B ON A.Id = B.userId\n   WHERE A.x < 10;\n```", "committedDate": "2020-06-25T15:42:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2Mzc0MA==", "url": "https://github.com/confluentinc/ksql/pull/5684#discussion_r445663740", "body": "To understand the solution, first understand the logical model of the query:\r\n\r\n```\r\nSource A            Source B\r\n   |                   |\r\n   --------Join---------\r\n             |\r\n       Where Filter\r\n             |\r\n       Final Projection\r\n```\r\n\r\nThe final SELECT / projection node calls its parent to resolve any _select stars_.  In the case of `A.*` it passes `A` as the source name to expand when calling `resolveSelectStart`.\r\n\r\nThe parent WHERE filter uses the default impl of the `resolveSelectStar` method, which just looks for a parent node with a matching source name, if one is provided.\r\n\r\nA Join node does not have a source name, i.e. it's neither `A` or `B`, so the default `resolveSelectStart` was ignoring it.\r\n\r\nThe fix is to change the default method to include any parent node that has no source name, thereby including the parent join node.", "bodyText": "To understand the solution, first understand the logical model of the query:\nSource A            Source B\n   |                   |\n   --------Join---------\n             |\n       Where Filter\n             |\n       Final Projection\n\nThe final SELECT / projection node calls its parent to resolve any select stars.  In the case of A.* it passes A as the source name to expand when calling resolveSelectStart.\nThe parent WHERE filter uses the default impl of the resolveSelectStar method, which just looks for a parent node with a matching source name, if one is provided.\nA Join node does not have a source name, i.e. it's neither A or B, so the default resolveSelectStart was ignoring it.\nThe fix is to change the default method to include any parent node that has no source name, thereby including the parent join node.", "bodyHTML": "<p dir=\"auto\">To understand the solution, first understand the logical model of the query:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Source A            Source B\n   |                   |\n   --------Join---------\n             |\n       Where Filter\n             |\n       Final Projection\"><pre><code>Source A            Source B\n   |                   |\n   --------Join---------\n             |\n       Where Filter\n             |\n       Final Projection\n</code></pre></div>\n<p dir=\"auto\">The final SELECT / projection node calls its parent to resolve any <em>select stars</em>.  In the case of <code>A.*</code> it passes <code>A</code> as the source name to expand when calling <code>resolveSelectStart</code>.</p>\n<p dir=\"auto\">The parent WHERE filter uses the default impl of the <code>resolveSelectStar</code> method, which just looks for a parent node with a matching source name, if one is provided.</p>\n<p dir=\"auto\">A Join node does not have a source name, i.e. it's neither <code>A</code> or <code>B</code>, so the default <code>resolveSelectStart</code> was ignoring it.</p>\n<p dir=\"auto\">The fix is to change the default method to include any parent node that has no source name, thereby including the parent join node.</p>", "author": "big-andy-coates", "createdAt": "2020-06-25T15:55:34Z", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/PlanNode.java", "diffHunk": "@@ -103,7 +103,9 @@ public DataSourceNode getLeftmostSourceNode() {\n       final Optional<SourceName> sourceName\n   ) {\n     return getSources().stream()\n-        .filter(s -> !sourceName.isPresent() || sourceName.equals(s.getSourceName()))\n+        .filter(s -> !sourceName.isPresent()\n+            || !s.getSourceName().isPresent()\n+            || sourceName.equals(s.getSourceName()))", "originalCommit": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}