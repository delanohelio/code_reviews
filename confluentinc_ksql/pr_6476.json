{"pr_number": 6476, "pr_title": "test: fix KsqlVersion so it supports new version format", "pr_author": "big-andy-coates", "pr_createdAt": "2020-10-20T18:22:48Z", "pr_url": "https://github.com/confluentinc/ksql/pull/6476", "timeline": [{"oid": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "url": "https://github.com/confluentinc/ksql/commit/a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "message": "test: fix KsqlVersion so it supports new version format\n\nPOM now has version set to `6.1.0-0`, which `KsqlVersion` couldn't handle.  This causes any attempt to generate new historical QTT test cases to fail.\n\n- Updated KsqlVersion to be able to handle new format.\n- Added unit test for new format.\n- Added unit test to test against latest version in POM, so we pick this up earlier next time.", "committedDate": "2020-10-20T18:22:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc0ODY1Mw==", "url": "https://github.com/confluentinc/ksql/pull/6476#discussion_r508748653", "body": "\ud83d\ude0d ", "bodyText": "\ud83d\ude0d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"heart_eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png\">\ud83d\ude0d</g-emoji></p>", "author": "agavra", "createdAt": "2020-10-20T18:30:28Z", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/KsqlVersion.java", "diffHunk": "@@ -29,7 +29,7 @@\n public final class KsqlVersion implements Comparable<KsqlVersion> {\n \n   private static final Pattern VERSION_PATTERN = Pattern\n-      .compile(\"(\\\\d+)\\\\.(\\\\d+)(.\\\\d+)?(-SNAPSHOT)?\");\n+      .compile(\"(?<major>\\\\d+)\\\\.(?<minor>\\\\d+)(?<patch>.\\\\d+)?(?:-(SNAPSHOT|\\\\d+))?\");", "originalCommit": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc0ODgxNQ==", "url": "https://github.com/confluentinc/ksql/pull/6476#discussion_r508748815", "body": "```suggestion\r\n  public void shouldParseNanoVersions() {\r\n```\r\n\ud83d\ude44 ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldParseWeirdNewFormat() {\n          \n          \n            \n              public void shouldParseNanoVersions() {\n          \n      \n    \n    \n  \n\n\ud83d\ude44", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldParseWeirdNewFormat</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldParseNanoVersions</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"roll_eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f644.png\">\ud83d\ude44</g-emoji></p>", "author": "agavra", "createdAt": "2020-10-20T18:30:45Z", "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java", "diffHunk": "@@ -64,6 +64,16 @@ public void shouldParseMajorMinorPointSnapshot() {\n     assertThat(result.getVersion(), is(SemanticVersion.of(5, 4, 1)));\n   }\n \n+  @Test\n+  public void shouldParseWeirdNewFormat() {", "originalCommit": "a7b289cf8dbcc78d8a0e767f33d5eb98c2125a21", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "88f49c80e65a30af464e675d952df581f64aa334", "url": "https://github.com/confluentinc/ksql/commit/88f49c80e65a30af464e675d952df581f64aa334", "message": "Update ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/KsqlVersionTest.java\n\nCo-authored-by: Almog Gavra <almog@confluent.io>", "committedDate": "2020-10-20T18:38:40Z", "type": "commit"}]}