{"pr_number": 716, "pr_title": "Added a field for kafka header timestamp in DatastreamProducerRecord", "pr_author": "jzakaryan", "pr_createdAt": "2020-05-28T18:36:51Z", "pr_url": "https://github.com/linkedin/brooklin/pull/716", "timeline": [{"oid": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "url": "https://github.com/linkedin/brooklin/commit/2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "message": "Added audit field in DatastreamProducerRecord", "committedDate": "2020-05-28T18:34:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNTc0NA==", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432125744", "body": "Can you add a comment explaining this field comes from the Kafka header? Also my mistake, we probably shouldn't have the word \"audit\" in the name. How about renaming it to: `_eventsKafkaHeaderTimestamp`?", "bodyText": "Can you add a comment explaining this field comes from the Kafka header? Also my mistake, we probably shouldn't have the word \"audit\" in the name. How about renaming it to: _eventsKafkaHeaderTimestamp?", "bodyHTML": "<p dir=\"auto\">Can you add a comment explaining this field comes from the Kafka header? Also my mistake, we probably shouldn't have the word \"audit\" in the name. How about renaming it to: <code>_eventsKafkaHeaderTimestamp</code>?</p>", "author": "somandal", "createdAt": "2020-05-28T21:10:59Z", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -31,6 +31,8 @@\n   // timestamp of when the record was sent to transport provider\n   private Optional<Long> _eventsSendTimestamp = Optional.empty();\n \n+  private Optional<Long> _eventsAuditTimestamp = Optional.empty();", "originalCommit": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2ODQxOQ==", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432168419", "bodyText": "I was kind of reluctant to add the word audit here too. I guess you're right. Will try to rephrase everything in more generic terms.", "author": "jzakaryan", "createdAt": "2020-05-28T22:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNTc0NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDQ2OQ==", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130469", "body": "nit: can you rephrase this:\r\nGet saved Kafka header timestamp in Epoch-millis \r\nor something along those lines?", "bodyText": "nit: can you rephrase this:\nGet saved Kafka header timestamp in Epoch-millis\nor something along those lines?", "bodyHTML": "<p dir=\"auto\">nit: can you rephrase this:<br>\nGet saved Kafka header timestamp in Epoch-millis<br>\nor something along those lines?</p>", "author": "somandal", "createdAt": "2020-05-28T21:20:48Z", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -93,6 +95,20 @@ public void setEventsSendTimestamp(long timestamp) {\n     _eventsSendTimestamp = Optional.of(timestamp);\n   }\n \n+  /**\n+   * Get timestamp in Epoch-millis for when the events have been audited", "originalCommit": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDc3NQ==", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130775", "body": "nit: can you rephrase this:\r\nSet the timestamp from the Kafka header in Epoch-millis \r\nor something along those lines?", "bodyText": "nit: can you rephrase this:\nSet the timestamp from the Kafka header in Epoch-millis\nor something along those lines?", "bodyHTML": "<p dir=\"auto\">nit: can you rephrase this:<br>\nSet the timestamp from the Kafka header in Epoch-millis<br>\nor something along those lines?</p>", "author": "somandal", "createdAt": "2020-05-28T21:21:27Z", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -93,6 +95,20 @@ public void setEventsSendTimestamp(long timestamp) {\n     _eventsSendTimestamp = Optional.of(timestamp);\n   }\n \n+  /**\n+   * Get timestamp in Epoch-millis for when the events have been audited\n+   */\n+  public Optional<Long> getEventsAuditTimestamp() {\n+    return _eventsAuditTimestamp;\n+  }\n+\n+  /**\n+   * Set timestamp in Epoch-millis for when the events have been audited", "originalCommit": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMDg4Nw==", "url": "https://github.com/linkedin/brooklin/pull/716#discussion_r432130887", "body": "nit: remove extra space", "bodyText": "nit: remove extra space", "bodyHTML": "<p dir=\"auto\">nit: remove extra space</p>", "author": "somandal", "createdAt": "2020-05-28T21:21:40Z", "path": "datastream-server-api/src/main/java/com/linkedin/datastream/server/DatastreamProducerRecord.java", "diffHunk": "@@ -149,4 +165,5 @@ public String getCheckpoint() {\n   public Optional<String> getDestination() {\n     return _destination;\n   }\n+", "originalCommit": "2c9690a978a6c3cef0cf330a0454e67cbeebaadc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d2e55ba0834855f30b4d53308727ba57ac71c50", "url": "https://github.com/linkedin/brooklin/commit/3d2e55ba0834855f30b4d53308727ba57ac71c50", "message": "Minor improvements", "committedDate": "2020-05-28T23:27:22Z", "type": "commit"}]}