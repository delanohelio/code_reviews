{"pr_number": 728, "pr_title": "Add isLeader check for Leader only events", "pr_author": "vmaheshw", "pr_createdAt": "2020-07-13T22:15:04Z", "pr_url": "https://github.com/linkedin/brooklin/pull/728", "timeline": [{"oid": "c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "url": "https://github.com/linkedin/brooklin/commit/c31cd4a15cc8dd69b0a653dbe4201de934ea6d65", "message": "Merge pull request #1 from linkedin/master\n\nPull latest", "committedDate": "2019-11-18T20:06:44Z", "type": "commit"}, {"oid": "0f3c87f2f3770e1488eb5c76468f50ac2b1e99f7", "url": "https://github.com/linkedin/brooklin/commit/0f3c87f2f3770e1488eb5c76468f50ac2b1e99f7", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-05-11T20:40:50Z", "type": "commit"}, {"oid": "4572ee158147a9cfee8b68fdef2e4d79245ef243", "url": "https://github.com/linkedin/brooklin/commit/4572ee158147a9cfee8b68fdef2e4d79245ef243", "message": "Merge branch 'master' of github.com:linkedin/brooklin", "committedDate": "2020-07-02T20:20:37Z", "type": "commit"}, {"oid": "e93964fe1e0be60e0e3194d71c06069033e4b216", "url": "https://github.com/linkedin/brooklin/commit/e93964fe1e0be60e0e3194d71c06069033e4b216", "message": "Add isLeader check for Leader only events", "committedDate": "2020-07-13T22:03:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNTYyMQ==", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r455425621", "body": "1. Instead of repeating this check in multiple `handle` methods, I think it would be better to have just a single check in `handleEvent()`. This would also allow us to identify all leader-only events by looking at that one method.\r\n2. I suggest caching `_adapter.isLeader()` in a local instead of calling it twice to avoid situations where the value of the underlying variable might have changed between the two calls.", "bodyText": "Instead of repeating this check in multiple handle methods, I think it would be better to have just a single check in handleEvent(). This would also allow us to identify all leader-only events by looking at that one method.\nI suggest caching _adapter.isLeader() in a local instead of calling it twice to avoid situations where the value of the underlying variable might have changed between the two calls.", "bodyHTML": "<ol dir=\"auto\">\n<li>Instead of repeating this check in multiple <code>handle</code> methods, I think it would be better to have just a single check in <code>handleEvent()</code>. This would also allow us to identify all leader-only events by looking at that one method.</li>\n<li>I suggest caching <code>_adapter.isLeader()</code> in a local instead of calling it twice to avoid situations where the value of the underlying variable might have changed between the two calls.</li>\n</ol>", "author": "ahmedahamid", "createdAt": "2020-07-15T23:39:19Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -777,6 +777,10 @@ private boolean isDeletingOrExpired(Datastream stream) {\n    * either. Also, expired streams are excluded from any future task assignments.\n    */\n   private void handleDatastreamAddOrDelete() {\n+    if (!_adapter.isLeader()) {\n+      _log.warn(\"skipping handleDatastreamAddOrDelete isLeader {}\", _adapter.isLeader());\n+      return;\n+    }", "originalCommit": "e93964fe1e0be60e0e3194d71c06069033e4b216", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1NjI3OQ==", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r455956279", "bodyText": "done.", "author": "vmaheshw", "createdAt": "2020-07-16T17:35:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyNTYyMQ=="}], "type": "inlineReview"}, {"oid": "aada93492b910d1a22becad6008793e1c5d2457f", "url": "https://github.com/linkedin/brooklin/commit/aada93492b910d1a22becad6008793e1c5d2457f", "message": "Address Review Comments", "committedDate": "2020-07-16T17:24:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MjU4Mw==", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r456142583", "body": "nit: I think this'd be more intuitive/straightforward if expressed as:\r\n```java\r\nif (isLeaderEvent(event) && !isLeader) {\r\n  _log.info(...);\r\n  return;\r\n}\r\n```", "bodyText": "nit: I think this'd be more intuitive/straightforward if expressed as:\nif (isLeaderEvent(event) && !isLeader) {\n  _log.info(...);\n  return;\n}", "bodyHTML": "<p dir=\"auto\">nit: I think this'd be more intuitive/straightforward if expressed as:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (isLeaderEvent(event) &amp;&amp; !isLeader) {\n  _log.info(...);\n  return;\n}\"><pre><span class=\"pl-k\">if</span> (isLeaderEvent(event) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>isLeader) {\n  _log<span class=\"pl-k\">.</span>info(<span class=\"pl-c1\">...</span>);\n  <span class=\"pl-k\">return</span>;\n}</pre></div>", "author": "ahmedahamid", "createdAt": "2020-07-16T23:57:40Z", "path": "datastream-server/src/main/java/com/linkedin/datastream/server/Coordinator.java", "diffHunk": "@@ -663,7 +663,11 @@ private void assignSerdes(DatastreamTaskImpl datastreamTask) {\n \n   protected synchronized void handleEvent(CoordinatorEvent event) {\n     _log.info(\"START: Handle event \" + event.getType() + \", Instance: \" + _adapter.getInstanceName());\n-\n+    boolean isLeader = _adapter.isLeader();\n+    if (skipLeaderEvent(event.getType(), isLeader)) {", "originalCommit": "aada93492b910d1a22becad6008793e1c5d2457f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE2OTYwNg==", "url": "https://github.com/linkedin/brooklin/pull/728#discussion_r456169606", "bodyText": "done", "author": "vmaheshw", "createdAt": "2020-07-17T01:35:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE0MjU4Mw=="}], "type": "inlineReview"}, {"oid": "ee92d426cca3112406806f4a39b4f524562abac0", "url": "https://github.com/linkedin/brooklin/commit/ee92d426cca3112406806f4a39b4f524562abac0", "message": "Address review comments", "committedDate": "2020-07-17T01:30:13Z", "type": "commit"}]}