{"pr_number": 906, "pr_title": "fix(large-data): only cleanup DeleteDeploymentCascadeTest data", "pr_author": "mboskamp", "pr_createdAt": "2020-07-23T09:32:06Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/906", "timeline": [{"oid": "a9024fd79077545c8701acc593b710818e833452", "url": "https://github.com/camunda/camunda-bpm-platform/commit/a9024fd79077545c8701acc593b710818e833452", "message": "fix(large-data): cleanup DeleteDeploymentCascadeTest data\n\nRelated to CAM-12205", "committedDate": "2020-07-27T08:51:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0MzcyOA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/906#discussion_r462243728", "body": "let's return it to 2 500.", "bodyText": "let's return it to 2 500.", "bodyHTML": "<p dir=\"auto\">let's return it to 2 500.</p>", "author": "yanavasileva", "createdAt": "2020-07-29T11:58:20Z", "path": "qa/large-data-tests/src/test/java/org/camunda/bpm/qa/largedata/DeleteDeploymentCascadeTest.java", "diffHunk": "@@ -19,57 +19,71 @@\n import static org.assertj.core.api.Assertions.assertThat;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.camunda.bpm.engine.HistoryService;\n import org.camunda.bpm.engine.RepositoryService;\n import org.camunda.bpm.engine.history.HistoricProcessInstance;\n-import org.camunda.bpm.engine.impl.test.TestHelper;\n+import org.camunda.bpm.engine.impl.db.sql.DbSqlSessionFactory;\n+import org.camunda.bpm.engine.impl.util.CollectionUtil;\n import org.camunda.bpm.engine.repository.Deployment;\n import org.camunda.bpm.engine.test.ProcessEngineRule;\n import org.camunda.bpm.qa.largedata.util.EngineDataGenerator;\n import org.junit.After;\n import org.junit.Before;\n-import org.junit.ClassRule;\n+import org.junit.Rule;\n import org.junit.Test;\n \n public class DeleteDeploymentCascadeTest {\n \n-  @ClassRule\n-  public static ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n+  @Rule\n+  public ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n \n-  protected int GENERATE_PROCESS_INSTANCES_COUNT = 2500;\n+  protected static final String DATA_PREFIX = DeleteDeploymentCascadeTest.class.getSimpleName();\n+\n+  protected int GENERATE_PROCESS_INSTANCES_COUNT = 10_000;", "originalCommit": "a9024fd79077545c8701acc593b710818e833452", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI0NDMxOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/906#discussion_r462244319", "body": "let's add null check, if the test is successful the deployment will be null so no need of clean up", "bodyText": "let's add null check, if the test is successful the deployment will be null so no need of clean up", "bodyHTML": "<p dir=\"auto\">let's add null check, if the test is successful the deployment will be null so no need of clean up</p>", "author": "yanavasileva", "createdAt": "2020-07-29T11:59:29Z", "path": "qa/large-data-tests/src/test/java/org/camunda/bpm/qa/largedata/DeleteDeploymentCascadeTest.java", "diffHunk": "@@ -19,57 +19,71 @@\n import static org.assertj.core.api.Assertions.assertThat;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.camunda.bpm.engine.HistoryService;\n import org.camunda.bpm.engine.RepositoryService;\n import org.camunda.bpm.engine.history.HistoricProcessInstance;\n-import org.camunda.bpm.engine.impl.test.TestHelper;\n+import org.camunda.bpm.engine.impl.db.sql.DbSqlSessionFactory;\n+import org.camunda.bpm.engine.impl.util.CollectionUtil;\n import org.camunda.bpm.engine.repository.Deployment;\n import org.camunda.bpm.engine.test.ProcessEngineRule;\n import org.camunda.bpm.qa.largedata.util.EngineDataGenerator;\n import org.junit.After;\n import org.junit.Before;\n-import org.junit.ClassRule;\n+import org.junit.Rule;\n import org.junit.Test;\n \n public class DeleteDeploymentCascadeTest {\n \n-  @ClassRule\n-  public static ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n+  @Rule\n+  public ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n \n-  protected int GENERATE_PROCESS_INSTANCES_COUNT = 2500;\n+  protected static final String DATA_PREFIX = DeleteDeploymentCascadeTest.class.getSimpleName();\n+\n+  protected int GENERATE_PROCESS_INSTANCES_COUNT = 10_000;\n   protected RepositoryService repositoryService;\n   protected HistoryService historyService;\n-\n+  protected EngineDataGenerator generator;\n+  \n   @Before\n   public void init() {\n-    repositoryService = processEngineRule.getRepositoryService();\n-    historyService = processEngineRule.getHistoryService();\n+    repositoryService = processEngineRule.getProcessEngine().getRepositoryService();\n+    historyService = processEngineRule.getProcessEngine().getHistoryService();\n \n     // generate data\n-    EngineDataGenerator generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), GENERATE_PROCESS_INSTANCES_COUNT);\n+    generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), GENERATE_PROCESS_INSTANCES_COUNT, DATA_PREFIX);\n     generator.deployDefinitions();\n     generator.generateCompletedProcessInstanceData();\n   }\n \n   @After\n-  public void tearDown() {\n-    TestHelper.assertAndEnsureCleanDbAndCache(processEngineRule.getProcessEngine(), false);\n+  public void teardown() {\n+    Deployment deplyoment = repositoryService.createDeploymentQuery().deploymentName(generator.getDeploymentName()).singleResult();\n+    repositoryService.deleteDeployment(deplyoment.getId(), false);\n+    List<HistoricProcessInstance> processInstances = historyService.createHistoricProcessInstanceQuery().processDefinitionKey(generator.getAutoCompleteProcessKey()).list();\n+    if(!processInstances.isEmpty()) {\n+      List<String> processInstanceIds = processInstances.stream().map(HistoricProcessInstance::getId).collect(Collectors.toList());\n+      List<List<String>> partitions = CollectionUtil.partition(processInstanceIds, DbSqlSessionFactory.MAXIMUM_NUMBER_PARAMS);\n+      for (List<String> partition : partitions) {\n+        historyService.deleteHistoricProcessInstances(partition);\n+      }\n+    }", "originalCommit": "a9024fd79077545c8701acc593b710818e833452", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "632f0cd252664849a7d987cb209324127446ae0e", "url": "https://github.com/camunda/camunda-bpm-platform/commit/632f0cd252664849a7d987cb209324127446ae0e", "message": "fix(large-data): cleanup DeleteDeploymentCascadeTest data\n\nRelated to CAM-12205", "committedDate": "2020-07-30T08:10:46Z", "type": "commit"}, {"oid": "632f0cd252664849a7d987cb209324127446ae0e", "url": "https://github.com/camunda/camunda-bpm-platform/commit/632f0cd252664849a7d987cb209324127446ae0e", "message": "fix(large-data): cleanup DeleteDeploymentCascadeTest data\n\nRelated to CAM-12205", "committedDate": "2020-07-30T08:10:46Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg4MjUwNw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/906#discussion_r462882507", "body": "I suggest a small reorder of the cleanup, otherwise, the historic process instances won't be pick up as the process definition will be deleted with the deployment:\r\n```suggestion\r\n      List<HistoricProcessInstance> processInstances = historyService.createHistoricProcessInstanceQuery()\r\n          .processDefinitionKey(generator.getAutoCompleteProcessKey()).list();\r\n      if (!processInstances.isEmpty()) {\r\n        List<String> processInstanceIds = processInstances.stream().map(HistoricProcessInstance::getId).collect(Collectors.toList());\r\n        List<List<String>> partitions = CollectionUtil.partition(processInstanceIds, DbSqlSessionFactory.MAXIMUM_NUMBER_PARAMS);\r\n        for (List<String> partition : partitions) {\r\n          historyService.deleteHistoricProcessInstances(partition);\r\n        }\r\n      }\r\n      repositoryService.deleteDeployment(deployment.getId(), false);\r\n```", "bodyText": "I suggest a small reorder of the cleanup, otherwise, the historic process instances won't be pick up as the process definition will be deleted with the deployment:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  repositoryService.deleteDeployment(deployment.getId(), false);\n          \n          \n            \n                  List<HistoricProcessInstance> processInstances = historyService.createHistoricProcessInstanceQuery()\n          \n          \n            \n                      .processDefinitionKey(generator.getAutoCompleteProcessKey()).list();\n          \n          \n            \n                  if (!processInstances.isEmpty()) {\n          \n          \n            \n                    List<String> processInstanceIds = processInstances.stream().map(HistoricProcessInstance::getId).collect(Collectors.toList());\n          \n          \n            \n                    List<List<String>> partitions = CollectionUtil.partition(processInstanceIds, DbSqlSessionFactory.MAXIMUM_NUMBER_PARAMS);\n          \n          \n            \n                    for (List<String> partition : partitions) {\n          \n          \n            \n                      historyService.deleteHistoricProcessInstances(partition);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  List<HistoricProcessInstance> processInstances = historyService.createHistoricProcessInstanceQuery()\n          \n          \n            \n                      .processDefinitionKey(generator.getAutoCompleteProcessKey()).list();\n          \n          \n            \n                  if (!processInstances.isEmpty()) {\n          \n          \n            \n                    List<String> processInstanceIds = processInstances.stream().map(HistoricProcessInstance::getId).collect(Collectors.toList());\n          \n          \n            \n                    List<List<String>> partitions = CollectionUtil.partition(processInstanceIds, DbSqlSessionFactory.MAXIMUM_NUMBER_PARAMS);\n          \n          \n            \n                    for (List<String> partition : partitions) {\n          \n          \n            \n                      historyService.deleteHistoricProcessInstances(partition);\n          \n          \n            \n                    }\n          \n          \n            \n                  }\n          \n          \n            \n                  repositoryService.deleteDeployment(deployment.getId(), false);", "bodyHTML": "<p dir=\"auto\">I suggest a small reorder of the cleanup, otherwise, the historic process instances won't be pick up as the process definition will be deleted with the deployment:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first\">repositoryService</span><span class=\"pl-k x\">.</span><span class=\"x\">deleteDeployment(deployment</span><span class=\"pl-k x\">.</span><span class=\"x\">getId(), </span><span class=\"pl-c1 x\">false</span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\"><span class=\"x x-first\">List&lt;</span><span class=\"pl-smi x\">HistoricProcessInstance</span><span class=\"x\">&gt;</span></span><span class=\"x\"> processInstances </span><span class=\"pl-k x\">=</span><span class=\"x\"> historyService</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">createHistoricProcessInstanceQuery()</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first\">    .processDefinitionKey(generator</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getAutoCompleteProcessKey</span>())<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">list();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (</span><span class=\"pl-k x x-last\">!</span>processInstances<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span><span class=\"x x-first x-last\"> processInstanceIds</span> <span class=\"pl-k\">=</span> <span class=\"x x-first\">processInstances</span><span class=\"pl-k x\">.</span><span class=\"x\">stream()</span><span class=\"pl-k x\">.</span><span class=\"x\">map(</span><span class=\"pl-smi x\">HistoricProcessInstance</span><span class=\"pl-k x\">::</span><span class=\"x\">getId)</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toList()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-k\"><span class=\"x x-first x-last\">List&lt;</span><span class=\"pl-smi\">String</span>&gt;</span><span class=\"x x-first\">&gt;</span></span><span class=\"x\"> partitions </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">CollectionUtil</span><span class=\"pl-k x x-last\">.</span>partition<span class=\"x x-first\">(processInstanceIds, </span><span class=\"pl-smi x\">DbSqlSessionFactory</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">MAXIMUM_NUMBER_PARAMS</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k x x-first\">for</span><span class=\"x\"> (</span><span class=\"pl-k\"><span class=\"x\">List&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x x-last\"> </span>partition<span class=\"x x-first\"> </span><span class=\"pl-k x\">:</span><span class=\"x x-last\"> partitions) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">  historyService</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">deleteHistoricProcessInstances(partition);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first x-last\">  </span>}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\"><span class=\"x x-first\">List&lt;</span><span class=\"pl-smi x\">HistoricProcessInstance</span><span class=\"x\">&gt;</span></span><span class=\"x\"> processInstances </span><span class=\"pl-k x\">=</span><span class=\"x\"> historyService</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">createHistoricProcessInstanceQuery()</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first\">    .processDefinitionKey(generator</span><span class=\"pl-k x\">.</span><span class=\"x\">getAutoCompleteProcessKey())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">list();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (</span><span class=\"pl-k x\">!</span><span class=\"x\">processInstances</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isEmpty</span>())<span class=\"x x-first x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first\">  </span><span class=\"pl-k\"><span class=\"x\">List&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x\">&gt;</span></span><span class=\"x\"> processInstanceIds </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span>processInstances<span class=\"pl-k\">.</span><span class=\"x x-first\">stream()</span><span class=\"pl-k x\">.</span><span class=\"x\">map(</span><span class=\"pl-smi x\">HistoricProcessInstance</span><span class=\"pl-k x\">::</span><span class=\"x\">getId)</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toList());</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">List&lt;<span class=\"pl-k\"><span class=\"x x-first x-last\">List&lt;</span><span class=\"pl-smi\">String</span>&gt;</span><span class=\"x x-first\">&gt;</span></span><span class=\"x x-last\"> partitions</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">CollectionUtil</span><span class=\"pl-k x\">.</span><span class=\"x\">partition(processInstanceIds, </span><span class=\"pl-smi x\">DbSqlSessionFactory</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">MAXIMUM_NUMBER_PARAMS</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">for</span><span class=\"x x-last\"> (</span><span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span><span class=\"x x-first x-last\"> </span>partition<span class=\"x x-first\"> </span><span class=\"pl-k x\">:</span><span class=\"x x-last\"> partitions) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first\">  historyService</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">deleteHistoricProcessInstances(</span>partition<span class=\"x x-first x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"x x-first\">repositoryService</span><span class=\"pl-k x\">.</span><span class=\"x\">deleteDeployment(deployment</span><span class=\"pl-k x\">.</span><span class=\"x\">getId(), </span><span class=\"pl-c1 x\">false</span><span class=\"x x-last\">);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "yanavasileva", "createdAt": "2020-07-30T09:49:50Z", "path": "qa/large-data-tests/src/test/java/org/camunda/bpm/qa/largedata/DeleteDeploymentCascadeTest.java", "diffHunk": "@@ -19,57 +19,74 @@\n import static org.assertj.core.api.Assertions.assertThat;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n import org.camunda.bpm.engine.HistoryService;\n import org.camunda.bpm.engine.RepositoryService;\n import org.camunda.bpm.engine.history.HistoricProcessInstance;\n-import org.camunda.bpm.engine.impl.test.TestHelper;\n+import org.camunda.bpm.engine.impl.db.sql.DbSqlSessionFactory;\n+import org.camunda.bpm.engine.impl.util.CollectionUtil;\n import org.camunda.bpm.engine.repository.Deployment;\n import org.camunda.bpm.engine.test.ProcessEngineRule;\n import org.camunda.bpm.qa.largedata.util.EngineDataGenerator;\n import org.junit.After;\n import org.junit.Before;\n-import org.junit.ClassRule;\n+import org.junit.Rule;\n import org.junit.Test;\n \n public class DeleteDeploymentCascadeTest {\n \n-  @ClassRule\n-  public static ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n+  @Rule\n+  public ProcessEngineRule processEngineRule = new ProcessEngineRule(\"camunda.cfg.xml\");\n+\n+  protected static final String DATA_PREFIX = DeleteDeploymentCascadeTest.class.getSimpleName();\n \n   protected int GENERATE_PROCESS_INSTANCES_COUNT = 2500;\n   protected RepositoryService repositoryService;\n   protected HistoryService historyService;\n-\n+  protected EngineDataGenerator generator;\n+  \n   @Before\n   public void init() {\n-    repositoryService = processEngineRule.getRepositoryService();\n-    historyService = processEngineRule.getHistoryService();\n+    repositoryService = processEngineRule.getProcessEngine().getRepositoryService();\n+    historyService = processEngineRule.getProcessEngine().getHistoryService();\n \n     // generate data\n-    EngineDataGenerator generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), GENERATE_PROCESS_INSTANCES_COUNT);\n+    generator = new EngineDataGenerator(processEngineRule.getProcessEngine(), GENERATE_PROCESS_INSTANCES_COUNT, DATA_PREFIX);\n     generator.deployDefinitions();\n     generator.generateCompletedProcessInstanceData();\n   }\n \n   @After\n-  public void tearDown() {\n-    TestHelper.assertAndEnsureCleanDbAndCache(processEngineRule.getProcessEngine(), false);\n+  public void teardown() {\n+    Deployment deployment = repositoryService.createDeploymentQuery().deploymentName(generator.getDeploymentName()).singleResult();\n+    if (deployment != null) {\n+      repositoryService.deleteDeployment(deployment.getId(), false);\n+      List<HistoricProcessInstance> processInstances = historyService.createHistoricProcessInstanceQuery()\n+          .processDefinitionKey(generator.getAutoCompleteProcessKey()).list();\n+      if (!processInstances.isEmpty()) {\n+        List<String> processInstanceIds = processInstances.stream().map(HistoricProcessInstance::getId).collect(Collectors.toList());\n+        List<List<String>> partitions = CollectionUtil.partition(processInstanceIds, DbSqlSessionFactory.MAXIMUM_NUMBER_PARAMS);\n+        for (List<String> partition : partitions) {\n+          historyService.deleteHistoricProcessInstances(partition);\n+        }\n+      }", "originalCommit": "632f0cd252664849a7d987cb209324127446ae0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9034994d776390acc7fa39bad599d0d7934b56c3", "url": "https://github.com/camunda/camunda-bpm-platform/commit/9034994d776390acc7fa39bad599d0d7934b56c3", "message": "chore(test): reorder cleanup\r\n\r\nRelated to CAM-12205\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>", "committedDate": "2020-08-03T11:11:11Z", "type": "commit"}]}