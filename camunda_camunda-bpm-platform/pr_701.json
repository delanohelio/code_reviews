{"pr_number": 701, "pr_title": "CAM-11302: add support for two configuration yml files", "pr_author": "mboskamp", "pr_createdAt": "2020-03-03T08:49:55Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/701", "timeline": [{"oid": "6e2ca0f5ba707aad84caea598bc686cd326a01ea", "url": "https://github.com/camunda/camunda-bpm-platform/commit/6e2ca0f5ba707aad84caea598bc686cd326a01ea", "message": "feat(run): add support for two configuration yml files\n\nRelated to CAM-11302", "committedDate": "2020-03-03T08:49:14Z", "type": "commit"}, {"oid": "d21413b4dd292ef6e39f49294a1019ff7f1e8cfd", "url": "https://github.com/camunda/camunda-bpm-platform/commit/d21413b4dd292ef6e39f49294a1019ff7f1e8cfd", "message": "feat(run): add integration test for production yml\n\nRelated to CAM-11302", "committedDate": "2020-03-03T09:48:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk4MDc5Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/701#discussion_r386980792", "body": "Let's use `java.nio.file.Files` here.\r\nThis expects for example an `InputStream` as source (can be received with `#getResourceAsStream` from the class loader) and a `Path` as target (can be build easily by using `java.nio.file.Paths#get`).", "bodyText": "Let's use java.nio.file.Files here.\nThis expects for example an InputStream as source (can be received with #getResourceAsStream from the class loader) and a Path as target (can be build easily by using java.nio.file.Paths#get).", "bodyHTML": "<p dir=\"auto\">Let's use <code>java.nio.file.Files</code> here.<br>\nThis expects for example an <code>InputStream</code> as source (can be received with <code>#getResourceAsStream</code> from the class loader) and a <code>Path</code> as target (can be build easily by using <code>java.nio.file.Paths#get</code>).</p>", "author": "tmetzke", "createdAt": "2020-03-03T12:16:22Z", "path": "distro/run/qa/src/test/java/org/camunda/bpm/run/qa/util/SpringBootManagedContainer.java", "diffHunk": "@@ -267,27 +270,27 @@ protected static Integer windowsProcessId(Process process) {\n     return null;\n   }\n \n-  private void createTestYml() {\n+  public void createConfigurationYml(String filePath, File source) {\n     try {\n-      File baseYml = new File(SpringBootManagedContainer.class.getClassLoader().getResource(BASE_TEST_APPLICATION_YML).getFile());\n-      File testYml = new File(new File(baseDirectory), APPLICATION_YML_PATH);\n-      Files.copy(baseYml, testYml);\n+      File testYml = new File(new File(baseDirectory), filePath);\n+      Files.copy(source, testYml);", "originalCommit": "d21413b4dd292ef6e39f49294a1019ff7f1e8cfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk4MTE3NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/701#discussion_r386981174", "body": "```suggestion\r\n      log.error(\"Could not create \" + filePath, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.error(\"Could not copy default.yml\", e);\n          \n          \n            \n                  log.error(\"Could not create \" + filePath, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not <span class=\"x x-first\">copy default.yml</span><span class=\"pl-pds x x-last\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not <span class=\"x x-first\">create </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> filePath</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tmetzke", "createdAt": "2020-03-03T12:17:11Z", "path": "distro/run/qa/src/test/java/org/camunda/bpm/run/qa/util/SpringBootManagedContainer.java", "diffHunk": "@@ -267,27 +270,27 @@ protected static Integer windowsProcessId(Process process) {\n     return null;\n   }\n \n-  private void createTestYml() {\n+  public void createConfigurationYml(String filePath, File source) {\n     try {\n-      File baseYml = new File(SpringBootManagedContainer.class.getClassLoader().getResource(BASE_TEST_APPLICATION_YML).getFile());\n-      File testYml = new File(new File(baseDirectory), APPLICATION_YML_PATH);\n-      Files.copy(baseYml, testYml);\n+      File testYml = new File(new File(baseDirectory), filePath);\n+      Files.copy(source, testYml);\n+      configurationFiles.add(testYml);\n     } catch (IOException e) {\n-      log.error(\"Could not copy application.yml\", e);\n+      log.error(\"Could not copy default.yml\", e);", "originalCommit": "d21413b4dd292ef6e39f49294a1019ff7f1e8cfd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7e07a9b987df1315002d1fc9c81fc09303a5eac0", "url": "https://github.com/camunda/camunda-bpm-platform/commit/7e07a9b987df1315002d1fc9c81fc09303a5eac0", "message": "chore(run): Change YAML handling to use nio Paths\n\nRelated to CAM-11302", "committedDate": "2020-03-03T13:57:47Z", "type": "commit"}]}