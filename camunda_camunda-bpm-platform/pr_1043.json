{"pr_number": 1043, "pr_title": "[CAM-12091] fix(engine): add error when parsing process without start event", "pr_author": "daveychu", "pr_createdAt": "2020-10-04T10:19:30Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/1043", "timeline": [{"oid": "39022c9a64dc783eb614c39f777ac6da34beb613", "url": "https://github.com/camunda/camunda-bpm-platform/commit/39022c9a64dc783eb614c39f777ac6da34beb613", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091", "committedDate": "2020-10-04T10:22:40Z", "type": "commit"}, {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613", "url": "https://github.com/camunda/camunda-bpm-platform/commit/39022c9a64dc783eb614c39f777ac6da34beb613", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091", "committedDate": "2020-10-04T10:22:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTU3Mg==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1043#discussion_r505415572", "body": "Consider using a method name, that includes where the startEvent is missing (process). \r\n\r\n```suggestion\r\n  public void testInvalidProcessWithoutStartEvent() {\r\n```", "bodyText": "Consider using a method name, that includes where the startEvent is missing (process).\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testParseWithoutStartEvent() {\n          \n          \n            \n              public void testInvalidProcessWithoutStartEvent() {", "bodyHTML": "<p dir=\"auto\">Consider using a method name, that includes where the startEvent is missing (process).</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testParseWithoutStartEvent</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">testInvalidProcessWithoutStartEvent</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mboskamp", "createdAt": "2020-10-15T09:56:40Z", "path": "engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/BpmnParseTest.java", "diffHunk": "@@ -370,6 +370,18 @@ public void testInvalidSequenceFlowInAndOutEventSubProcess() {\n     }\n   }\n \n+  @Test\n+  public void testParseWithoutStartEvent() {", "originalCommit": "39022c9a64dc783eb614c39f777ac6da34beb613", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "811532406c7320ed6f30b8629bc59bcc97f7b84f", "url": "https://github.com/camunda/camunda-bpm-platform/commit/811532406c7320ed6f30b8629bc59bcc97f7b84f", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091", "committedDate": "2020-10-17T08:40:12Z", "type": "commit"}]}