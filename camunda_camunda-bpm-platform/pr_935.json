{"pr_number": 935, "pr_title": "chore(engine): add command counter", "pr_author": "yanavasileva", "pr_createdAt": "2020-08-19T15:23:24Z", "pr_url": "https://github.com/camunda/camunda-bpm-platform/pull/935", "timeline": [{"oid": "6b9e938216f6d7ab1eebbde2e6b9d79b1ff298ec", "url": "https://github.com/camunda/camunda-bpm-platform/commit/6b9e938216f6d7ab1eebbde2e6b9d79b1ff298ec", "message": "chore(engine): add command counter", "committedDate": "2020-08-19T15:23:54Z", "type": "forcePushed"}, {"oid": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "url": "https://github.com/camunda/camunda-bpm-platform/commit/bfc78dde1f34755ace51e68ba892c5603bf8e84b", "message": "chore(engine): extend telemetry data with command count\n\n* introduce command counter interceptor that keep track of all executed\ncommand counts in the telemetry registry\n* upon sending telemetry data including command counts, the counts are\nreset\n\nRelated to CAM-12176", "committedDate": "2020-08-21T12:08:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NTkwOQ==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/935#discussion_r479355909", "body": "I don't like this setter. It is much cleaner if we just get the respective object and then set it.", "bodyText": "I don't like this setter. It is much cleaner if we just get the respective object and then set it.", "bodyHTML": "<p dir=\"auto\">I don't like this setter. It is much cleaner if we just get the respective object and then set it.</p>", "author": "tasso94", "createdAt": "2020-08-28T14:50:30Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/dto/Data.java", "diffHunk": "@@ -49,8 +51,14 @@ public void setApplicationServer(ApplicationServer applicationServer) {\n     this.product.internals.applicationServer = applicationServer;\n   }\n \n+  public void setCommands(Map<String, Command> commands) {\n+    this.product.internals.commands = commands;", "originalCommit": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1OTY1NA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/935#discussion_r479359654", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                super();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">    </span><span class=\"pl-c1 x\">super</span><span class=\"x x-last\">();</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tasso94", "createdAt": "2020-08-28T14:56:36Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/CommandCounter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.impl.telemetry;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class CommandCounter {\n+\n+  protected String name;\n+  protected AtomicLong count = new AtomicLong(0);\n+\n+  public CommandCounter(String name) {\n+    super();", "originalCommit": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyNjQ2Ng==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/935#discussion_r479926466", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public long getAndClear() {\n          \n          \n            \n                return count.getAndSet(0);\n          \n          \n            \n              }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">long</span> getAndClear() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> count<span class=\"pl-k\">.</span>getAndSet(<span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tasso94", "createdAt": "2020-08-31T06:44:07Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/CommandCounter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.impl.telemetry;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class CommandCounter {\n+\n+  protected String name;\n+  protected AtomicLong count = new AtomicLong(0);\n+\n+  public CommandCounter(String name) {\n+    super();\n+    this.name = name;\n+  }\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+\n+  public void mark() {\n+    count.incrementAndGet();\n+  }\n+\n+  public long getAndClear() {\n+    return count.getAndSet(0);\n+  }", "originalCommit": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkyODU3MA==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/935#discussion_r479928570", "body": "```suggestion\r\n    CommandCounter counter = commands.get(name);\r\n    if (counter == null) {\r\n      counter = new CommandCounter(name);\r\n      commands.put(name, counter);\r\n    }\r\n    \r\n    counter.mark();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CommandCounter counter = commands.get(name);\n          \n          \n            \n                if (counter == null) {\n          \n          \n            \n                  counter = new CommandCounter(name);\n          \n          \n            \n                  counter.mark();\n          \n          \n            \n                  commands.put(name, counter);\n          \n          \n            \n                } else {\n          \n          \n            \n                  counter.mark();\n          \n          \n            \n                }\n          \n          \n            \n                CommandCounter counter = commands.get(name);\n          \n          \n            \n                if (counter == null) {\n          \n          \n            \n                  counter = new CommandCounter(name);\n          \n          \n            \n                  commands.put(name, counter);\n          \n          \n            \n                }\n          \n          \n            \n                \n          \n          \n            \n                counter.mark();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">CommandCounter</span> counter <span class=\"pl-k\">=</span> commands<span class=\"pl-k\">.</span>get(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (counter <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      counter <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CommandCounter</span>(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      counter<span class=\"pl-k\">.</span>mark();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      commands<span class=\"pl-k\">.</span>put(name, counter);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      counter<span class=\"pl-k\">.</span>mark();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">CommandCounter</span> counter <span class=\"pl-k\">=</span> commands<span class=\"pl-k\">.</span>get(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (counter <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      counter <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CommandCounter</span>(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      commands<span class=\"pl-k\">.</span>put(name, counter);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    counter<span class=\"pl-k\">.</span>mark();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tasso94", "createdAt": "2020-08-31T06:46:43Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/TelemetryRegistry.java", "diffHunk": "@@ -37,4 +37,20 @@ public synchronized void setApplicationServer(ApplicationServer applicationServe\n   public synchronized void setApplicationServer(String applicationServerVersion) {\n     this.applicationServer = new ApplicationServer(applicationServerVersion);\n   }\n+\n+  public Map<String, CommandCounter> getCommands() {\n+    return commands;\n+  }\n+\n+  public synchronized void markOccurrence(String name) {\n+    CommandCounter counter = commands.get(name);\n+    if (counter == null) {\n+      counter = new CommandCounter(name);\n+      counter.mark();\n+      commands.put(name, counter);\n+    } else {\n+      counter.mark();\n+    }", "originalCommit": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDA3ODkwMw==", "url": "https://github.com/camunda/camunda-bpm-platform/pull/935#discussion_r480078903", "body": "In the current implementation, we don't need the `AtomicLong` since `TelemetryRegistry#markOccurrence` is synchronized.", "bodyText": "In the current implementation, we don't need the AtomicLong since TelemetryRegistry#markOccurrence is synchronized.", "bodyHTML": "<p dir=\"auto\">In the current implementation, we don't need the <code>AtomicLong</code> since <code>TelemetryRegistry#markOccurrence</code> is synchronized.</p>", "author": "tasso94", "createdAt": "2020-08-31T11:52:18Z", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/CommandCounter.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.impl.telemetry;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+public class CommandCounter {\n+\n+  protected String name;\n+  protected AtomicLong count = new AtomicLong(0);", "originalCommit": "bfc78dde1f34755ace51e68ba892c5603bf8e84b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1a6ee8fdf5c282631717ed20c570f4d725415ea1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/1a6ee8fdf5c282631717ed20c570f4d725415ea1", "message": "improve(engine): improve synchronization in telemetry", "committedDate": "2020-08-31T15:17:45Z", "type": "forcePushed"}, {"oid": "975e299eb638cc419ee5450fcab2d74af9870b27", "url": "https://github.com/camunda/camunda-bpm-platform/commit/975e299eb638cc419ee5450fcab2d74af9870b27", "message": "improve(engine): improve synchronization in telemetry", "committedDate": "2020-08-31T15:20:13Z", "type": "forcePushed"}, {"oid": "eb88a28fa29179919e2cbe255c2f5de8b6e714f1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/eb88a28fa29179919e2cbe255c2f5de8b6e714f1", "message": "chore(engine): extend telemetry data with command count\n\n* introduce command counter interceptor that keep track of all executed\ncommand counts in the telemetry registry\n* upon sending telemetry data including command counts, the counts are\nreset\n\nRelated to CAM-12176", "committedDate": "2020-09-01T15:21:01Z", "type": "commit"}, {"oid": "eb88a28fa29179919e2cbe255c2f5de8b6e714f1", "url": "https://github.com/camunda/camunda-bpm-platform/commit/eb88a28fa29179919e2cbe255c2f5de8b6e714f1", "message": "chore(engine): extend telemetry data with command count\n\n* introduce command counter interceptor that keep track of all executed\ncommand counts in the telemetry registry\n* upon sending telemetry data including command counts, the counts are\nreset\n\nRelated to CAM-12176", "committedDate": "2020-09-01T15:21:01Z", "type": "forcePushed"}]}