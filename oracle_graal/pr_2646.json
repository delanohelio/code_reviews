{"pr_number": 2646, "pr_title": "Keep image zone rules cache separate #2637", "pr_author": "galderz", "pr_createdAt": "2020-07-02T13:15:29Z", "pr_url": "https://github.com/oracle/graal/pull/2646", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyMDYwMw==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465720603", "body": "> LGTM but there are some styling issues and it's missing the copyright header.\r\n\r\n@galderz please take care of the styling issues. Ensure that `mx eclipseformat` and `mx checkstyle` pass without issues.", "bodyText": "LGTM but there are some styling issues and it's missing the copyright header.\n\n@galderz please take care of the styling issues. Ensure that mx eclipseformat and mx checkstyle pass without issues.", "bodyHTML": "<blockquote>\n<p dir=\"auto\">LGTM but there are some styling issues and it's missing the copyright header.</p>\n</blockquote>\n<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/galderz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/galderz\">@galderz</a> please take care of the styling issues. Ensure that <code>mx eclipseformat</code> and <code>mx checkstyle</code> pass without issues.</p>", "author": "olpaw", "createdAt": "2020-08-05T13:20:03Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;", "originalCommit": "545232502cefa9807a960057836138c1d4e21d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4NjM4Ng==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r465886386", "body": "For all new code we are switching to the model where each `Target_...` class is in its own .java file. In your case this avoids the awkward `class TimeSubstitutions`.", "bodyText": "For all new code we are switching to the model where each Target_... class is in its own .java file. In your case this avoids the awkward class TimeSubstitutions.", "bodyHTML": "<p dir=\"auto\">For all new code we are switching to the model where each <code>Target_...</code> class is in its own .java file. In your case this avoids the awkward <code>class TimeSubstitutions</code>.</p>", "author": "christianwimmer", "createdAt": "2020-08-05T17:25:14Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/TimeSubstitutions.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {", "originalCommit": "545232502cefa9807a960057836138c1d4e21d1e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7cd2db6d335b0dfab539a03e4b21e471be947f30", "url": "https://github.com/oracle/graal/commit/7cd2db6d335b0dfab539a03e4b21e471be947f30", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image.", "committedDate": "2020-08-06T09:48:06Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466325334", "body": "I think the following is a bit more readable :)\r\n\r\n```suggestion\r\n    @SuppressWarnings(\"unused\") //\r\n    @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\r\n    private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\r\n```", "bodyText": "I think the following is a bit more readable :)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\n          \n          \n            \n                @SuppressWarnings(\"unused\") //\n          \n          \n            \n                @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\n          \n          \n            \n                private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "bodyHTML": "<p dir=\"auto\">I think the following is a bit more readable :)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@SuppressWarnings</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unused<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k x x-first\">@Alias</span><span class=\"x\"> </span><span class=\"pl-k x\">@RecomputeFieldValue</span><span class=\"x\">(</span><span class=\"pl-c1 x\">kind</span><span class=\"x\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">RecomputeFieldValue</span><span class=\"pl-k x\">.</span><span class=\"pl-smi x\">Kind</span><span class=\"pl-k x\">.</span><span class=\"pl-smi x\">NewInstance</span><span class=\"x\">, </span><span class=\"pl-c1 x\">declClass</span><span class=\"x\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">ConcurrentHashMap</span><span class=\"pl-k x\">.</span><span class=\"x\">class) </span><span class=\"pl-k x\">private</span><span class=\"x\"> </span><span class=\"pl-k x\">transient</span><span class=\"x\"> </span><span class=\"pl-k\"><span class=\"x\">ConcurrentMap&lt;</span><span class=\"pl-smi x\">Integer</span><span class=\"x\">, </span><span class=\"pl-k x\">ZoneOffsetTransition</span><span class=\"x\">[]&gt;</span></span><span class=\"x x-last\"> lastRulesCache;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@SuppressWarnings</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unused<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"><span class=\"pl-c x x-first x-last\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Alias</span> <span class=\"pl-k\">@RecomputeFieldValue</span>(<span class=\"pl-c1\">kind</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">RecomputeFieldValue</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Kind</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NewInstance</span>, <span class=\"pl-c1\">declClass</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ConcurrentHashMap</span><span class=\"pl-k\">.</span>class) <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">transient</span> <span class=\"pl-k\">ConcurrentMap&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-k\">ZoneOffsetTransition</span>[]&gt;</span> lastRulesCache;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "zakkak", "createdAt": "2020-08-06T10:43:45Z", "path": "substratevm/src/com.oracle.svm.core/src/com/oracle/svm/core/jdk/Target_java_time_zone_ZoneRules.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ */\n+package com.oracle.svm.core.jdk;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+import java.time.zone.ZoneOffsetTransition;\n+import java.time.zone.ZoneRules;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+\n+@TargetClass(ZoneRules.class)\n+final class Target_java_time_zone_ZoneRules {\n+\n+    @SuppressWarnings(\"unused\") @Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) private transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;", "originalCommit": "7cd2db6d335b0dfab539a03e4b21e471be947f30", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzMjQ2MQ==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466332461", "bodyText": "@zakkak Blame it on mx eclipseformat...", "author": "galderz", "createdAt": "2020-08-06T10:58:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzNTU0Mg==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466335542", "bodyText": "I guessed so. Note though that eclipseformat and checkstyle should be happy (didn't check it but I see other classes following this style) with the above change.", "author": "zakkak", "createdAt": "2020-08-06T11:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzNjgxMg==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466336812", "bodyText": "@galderz you can make mx eclipseformat happy with the following trick\n@SuppressWarnings(\"unused\") //\n@Alias @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.NewInstance, declClass = ConcurrentHashMap.class) //\nprivate transient ConcurrentMap<Integer, ZoneOffsetTransition[]> lastRulesCache;\n\nUse git grep '  \\+//$' to see many examples in our sourcebase.", "author": "olpaw", "createdAt": "2020-08-06T11:07:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MzIyOA==", "url": "https://github.com/oracle/graal/pull/2646#discussion_r466363228", "bodyText": "Fixed and pushed.", "author": "galderz", "createdAt": "2020-08-06T12:04:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMyNTMzNA=="}], "type": "inlineReview"}, {"oid": "71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "url": "https://github.com/oracle/graal/commit/71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image.", "committedDate": "2020-08-06T12:03:35Z", "type": "commit"}, {"oid": "71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "url": "https://github.com/oracle/graal/commit/71c0dcf49e7e4e5e19e4d2a75bbc544412d44c92", "message": "Keep image zone rules cache separate #2637\n\n* Before this patch,\nthe image would contain zone rules cache from the JVM computing the image.\n* Side effects here,\nsuch as class or source cache lookups,\nwere affecting its contents and leading to error when writing image.\n* With this change,\nwe guarantee that the zone rules cache in the image is a brand new instance,\nseparate from the one in the JVM computing the image.", "committedDate": "2020-08-06T12:03:35Z", "type": "forcePushed"}]}