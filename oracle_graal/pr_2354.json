{"pr_number": 2354, "pr_title": "Add LLVM Round Instrinsic", "pr_author": "kipply", "pr_createdAt": "2020-04-16T17:55:22Z", "pr_url": "https://github.com/oracle/graal/pull/2354", "timeline": [{"oid": "4192cc391e80ea269d148325c4e1e5488cd3669c", "url": "https://github.com/oracle/graal/commit/4192cc391e80ea269d148325c4e1e5488cd3669c", "message": "add round intrinsic", "committedDate": "2020-04-16T17:50:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTEzOQ==", "url": "https://github.com/oracle/graal/pull/2354#discussion_r409745139", "body": "I believe this is imprecise\r\nhttps://github.com/oracle/graal/blob/6feb36b65465c38aa776b746de94c57ef9ba962c/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/floating/LLVM80BitFloat.java#L689", "bodyText": "I believe this is imprecise\n\n  \n    \n      graal/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/floating/LLVM80BitFloat.java\n    \n    \n         Line 689\n      in\n      6feb36b\n    \n    \n    \n    \n\n        \n          \n           // imprecise workaround for cases in which NFI isn't available", "bodyHTML": "<p dir=\"auto\">I believe this is imprecise<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/oracle/graal/blob/6feb36b65465c38aa776b746de94c57ef9ba962c/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/floating/LLVM80BitFloat.java#L689\">graal/sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/floating/LLVM80BitFloat.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 689\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/oracle/graal/commit/6feb36b65465c38aa776b746de94c57ef9ba962c\">6feb36b</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L689\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"689\"></td>\n          <td id=\"LC689\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> imprecise workaround for cases in which NFI isn't available</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "kipply", "createdAt": "2020-04-16T17:56:45Z", "path": "sulong/projects/com.oracle.truffle.llvm.runtime/src/com/oracle/truffle/llvm/runtime/nodes/intrinsics/c/LLVMCMathsIntrinsics.java", "diffHunk": "@@ -248,6 +248,26 @@ protected LLVM80BitFloat doIntrinsic(LLVM80BitFloat value) {\n         }\n     }\n \n+    @NodeChild(type = LLVMExpressionNode.class)\n+    public abstract static class LLVMRound extends LLVMBuiltin {\n+\n+        @Specialization\n+        protected float doIntrinsic(float value) {\n+            return (float) Math.round(value);\n+        }\n+\n+        @Specialization\n+        protected double doIntrinsic(double value) {\n+            return Math.round(value);\n+        }\n+\n+        @Specialization\n+        protected LLVM80BitFloat doIntrinsic(LLVM80BitFloat value) {\n+            double result = doIntrinsic(value.getDoubleValue());", "originalCommit": "4192cc391e80ea269d148325c4e1e5488cd3669c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEyNDY5OQ==", "url": "https://github.com/oracle/graal/pull/2354#discussion_r410124699", "bodyText": "Yes, that might lose precision, but in practice it's rarely a problem, since we're rounding anyway. This is only a problem for numbers that are big enough that the precision of double is not enough to represent a difference of 1.0 (i.e. numbers bigger than 2^52).\nIs that a problem for your use-case? Then we'd need to do a native call, similar to what we do for regular arithmetic. Unfortunately we don't have any way to directly do 80 bit floating point arithmetic in Java yet.", "author": "rschatz", "createdAt": "2020-04-17T10:05:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIxMzA2NQ==", "url": "https://github.com/oracle/graal/pull/2354#discussion_r410213065", "bodyText": "Yep sounds right. Probably not a problem for our use cases! Thanks~", "author": "kipply", "createdAt": "2020-04-17T13:13:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0NTEzOQ=="}], "type": "inlineReview"}, {"oid": "69d9a21ebb1bbc13d5ef98f59f14dc853b65706f", "url": "https://github.com/oracle/graal/commit/69d9a21ebb1bbc13d5ef98f59f14dc853b65706f", "message": "Remove unessesary `(float)`", "committedDate": "2020-04-16T19:18:44Z", "type": "commit"}, {"oid": "9f9d49e2cc59f27a280b33c1913cceb3532084a7", "url": "https://github.com/oracle/graal/commit/9f9d49e2cc59f27a280b33c1913cceb3532084a7", "message": "Update copyright year", "committedDate": "2020-04-16T22:02:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2NjI0OQ==", "url": "https://github.com/oracle/graal/pull/2354#discussion_r410266249", "body": "I guess we can also put `llvm.round.f32` and `llvm.round.f64` here, right?", "bodyText": "I guess we can also put llvm.round.f32 and llvm.round.f64 here, right?", "bodyHTML": "<p dir=\"auto\">I guess we can also put <code>llvm.round.f32</code> and <code>llvm.round.f64</code> here, right?</p>", "author": "rschatz", "createdAt": "2020-04-17T14:37:12Z", "path": "sulong/projects/com.oracle.truffle.llvm.parser.factories/src/com/oracle/truffle/llvm/parser/factories/BasicNodeFactory.java", "diffHunk": "@@ -1362,6 +1362,8 @@ protected LLVMExpressionNode getLLVMBuiltin(FunctionDeclaration declaration, LLV\n                     return LLVMPowNodeGen.create(args[1], args[2]);\n                 case \"llvm.powi.f80\":\n                     return LLVMPowNodeGen.create(args[1], args[2]);\n+                case \"llvm.round.f80\":", "originalCommit": "9f9d49e2cc59f27a280b33c1913cceb3532084a7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMzMzgyNg==", "url": "https://github.com/oracle/graal/pull/2354#discussion_r410333826", "bodyText": "Yep, let me know if you want me to commit that or if you want to add it when you merge", "author": "kipply", "createdAt": "2020-04-17T16:26:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI2NjI0OQ=="}], "type": "inlineReview"}]}