{"pr_number": 259, "pr_title": "Fix variable interpolation with custom properties for SessionID", "pr_author": "MAXbrainRUS", "pr_createdAt": "2020-02-20T20:21:17Z", "pr_url": "https://github.com/quickfix-j/quickfixj/pull/259", "timeline": [{"oid": "b40f99273af863586eaadb2cc3a89c21146bfa48", "url": "https://github.com/quickfix-j/quickfixj/commit/b40f99273af863586eaadb2cc3a89c21146bfa48", "message": "small refactoring", "committedDate": "2020-02-20T16:24:05Z", "type": "commit"}, {"oid": "0721255ec6c8ddbba89f9d4add646011ab15fcd0", "url": "https://github.com/quickfix-j/quickfixj/commit/0721255ec6c8ddbba89f9d4add646011ab15fcd0", "message": "Add new constructors for SessionSettings", "committedDate": "2020-02-20T16:49:41Z", "type": "commit"}, {"oid": "2f0cb0c19299a202286ab131b59e373d2d69354b", "url": "https://github.com/quickfix-j/quickfixj/commit/2f0cb0c19299a202286ab131b59e373d2d69354b", "message": "Add test for SessionSettings with custom variableValues and loading from file", "committedDate": "2020-02-20T17:01:07Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382345902", "body": "Make this private - it's not used outside this class.", "bodyText": "Make this private - it's not used outside this class.", "bodyHTML": "<p dir=\"auto\">Make this private - it's not used outside this class.</p>", "author": "philipwhiuk", "createdAt": "2020-02-21T01:04:10Z", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -537,4 +599,8 @@ public void testConcurrentAccess() throws ConfigError, InterruptedException {\n         return defaultSettings;\n     }\n \n+    protected String getConfigurationFileName() {", "originalCommit": "2f0cb0c19299a202286ab131b59e373d2d69354b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNzc5OA==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382707798", "bodyText": "Fixed", "author": "MAXbrainRUS", "createdAt": "2020-02-21T17:24:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg=="}], "type": "inlineReview", "revised_code": {"commit": "81b7a38f382abafc1450517b1c4b35accef1f1c3", "changed_code": [{"header": "diff --git a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\nindex 8fde66ce..027bae55 100644\n--- a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n+++ b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n", "chunk": "@@ -599,7 +599,7 @@ public class SessionSettingsTest {\n         return defaultSettings;\n     }\n \n-    protected String getConfigurationFileName() {\n+    private String getConfigurationFileName() {\n         return \"configWithSessionVariables.ini\";\n     }\n \n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NjI1OQ==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382346259", "body": "As an aside, this is still a terrible name for a variable IMO but we could fix that in another commit.\r\n\r\nTo be completely obtuse, it's a variable property that contains contains variable properties.\r\n\r\n`modifiableValues` would move us in the right direction. I'll take that up in another PR when this is merged.", "bodyText": "As an aside, this is still a terrible name for a variable IMO but we could fix that in another commit.\nTo be completely obtuse, it's a variable property that contains contains variable properties.\nmodifiableValues would move us in the right direction. I'll take that up in another PR when this is merged.", "bodyHTML": "<p dir=\"auto\">As an aside, this is still a terrible name for a variable IMO but we could fix that in another commit.</p>\n<p dir=\"auto\">To be completely obtuse, it's a variable property that contains contains variable properties.</p>\n<p dir=\"auto\"><code>modifiableValues</code> would move us in the right direction. I'll take that up in another PR when this is merged.</p>", "author": "philipwhiuk", "createdAt": "2020-02-21T01:05:26Z", "path": "quickfixj-core/src/main/java/quickfix/SessionSettings.java", "diffHunk": "@@ -86,13 +86,34 @@\n     // problems with moving configuration files between *nix and Windows.\n     private static final String NEWLINE = \"\\r\\n\";\n \n-    private Properties variableValues = System.getProperties();\n+    private Properties variableValues;", "originalCommit": "2f0cb0c19299a202286ab131b59e373d2d69354b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NzEzMw==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382347133", "body": "These comments are kind of unnecessary IMO.", "bodyText": "These comments are kind of unnecessary IMO.", "bodyHTML": "<p dir=\"auto\">These comments are kind of unnecessary IMO.</p>", "author": "philipwhiuk", "createdAt": "2020-02-21T01:08:55Z", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN", "originalCommit": "2f0cb0c19299a202286ab131b59e373d2d69354b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODA0Mg==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382708042", "bodyText": "Fixed", "author": "MAXbrainRUS", "createdAt": "2020-02-21T17:24:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NzEzMw=="}], "type": "inlineReview", "revised_code": {"commit": "09996e9492363b569b2ed3e3534fc57881bed79b", "changed_code": [{"header": "diff --git a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\nindex 8fde66ce..b10f1c61 100644\n--- a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n+++ b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n", "chunk": "@@ -326,7 +326,6 @@ public class SessionSettingsTest {\n \n     @Test\n     public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n-        // GIVEN\n         System.setProperty(\"test.2\", \"BAR\");\n         final Properties properties = new Properties(System.getProperties());\n         properties.setProperty(\"test.1\", \"FOO\");\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTM0Mw==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382349343", "body": "This method is both hard to follow and repeated.\r\n\r\nI prefer\r\n\r\n```java\r\nprivate SessionID findSessionID(SessionSettings settings, String targetCompID) {\r\n     while (sessionIDIterator.hasNext()) {\r\n          if (sessionID.getTargetCompID().startsWith(sessionID)) {\r\n                  return sessionID;\r\n          }\r\n     }\r\n     return null;\r\n}\r\n```\r\nthen\r\n\r\n```java\r\nSessionID sessionID = findSessionID(settings, \"CLIENT3\");\r\nassertNotNull(\"Settings for CLIENT3 not found\", sessionID);\r\nassertEquals(\"Wrong TargetCompID\", \"CLIENT3_FOO_BAR\", sessionID.getTargetCompID());\r\n```\r\n\r\nThis abstracts the nasty Iterator iteration out the test and makes the test closer to the arrange, act, assert model - which is what your comments are really saying. ", "bodyText": "This method is both hard to follow and repeated.\nI prefer\nprivate SessionID findSessionID(SessionSettings settings, String targetCompID) {\n     while (sessionIDIterator.hasNext()) {\n          if (sessionID.getTargetCompID().startsWith(sessionID)) {\n                  return sessionID;\n          }\n     }\n     return null;\n}\nthen\nSessionID sessionID = findSessionID(settings, \"CLIENT3\");\nassertNotNull(\"Settings for CLIENT3 not found\", sessionID);\nassertEquals(\"Wrong TargetCompID\", \"CLIENT3_FOO_BAR\", sessionID.getTargetCompID());\nThis abstracts the nasty Iterator iteration out the test and makes the test closer to the arrange, act, assert model - which is what your comments are really saying.", "bodyHTML": "<p dir=\"auto\">This method is both hard to follow and repeated.</p>\n<p dir=\"auto\">I prefer</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private SessionID findSessionID(SessionSettings settings, String targetCompID) {\n     while (sessionIDIterator.hasNext()) {\n          if (sessionID.getTargetCompID().startsWith(sessionID)) {\n                  return sessionID;\n          }\n     }\n     return null;\n}\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-smi\">SessionID</span> findSessionID(<span class=\"pl-smi\">SessionSettings</span> settings, <span class=\"pl-smi\">String</span> targetCompID) {\n     <span class=\"pl-k\">while</span> (sessionIDIterator<span class=\"pl-k\">.</span>hasNext()) {\n          <span class=\"pl-k\">if</span> (sessionID<span class=\"pl-k\">.</span>getTargetCompID()<span class=\"pl-k\">.</span>startsWith(sessionID)) {\n                  <span class=\"pl-k\">return</span> sessionID;\n          }\n     }\n     <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n}</pre></div>\n<p dir=\"auto\">then</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SessionID sessionID = findSessionID(settings, &quot;CLIENT3&quot;);\nassertNotNull(&quot;Settings for CLIENT3 not found&quot;, sessionID);\nassertEquals(&quot;Wrong TargetCompID&quot;, &quot;CLIENT3_FOO_BAR&quot;, sessionID.getTargetCompID());\"><pre><span class=\"pl-smi\">SessionID</span> sessionID <span class=\"pl-k\">=</span> findSessionID(settings, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CLIENT3<span class=\"pl-pds\">\"</span></span>);\nassertNotNull(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Settings for CLIENT3 not found<span class=\"pl-pds\">\"</span></span>, sessionID);\nassertEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Wrong TargetCompID<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CLIENT3_FOO_BAR<span class=\"pl-pds\">\"</span></span>, sessionID<span class=\"pl-k\">.</span>getTargetCompID());</pre></div>\n<p dir=\"auto\">This abstracts the nasty Iterator iteration out the test and makes the test closer to the arrange, act, assert model - which is what your comments are really saying.</p>", "author": "philipwhiuk", "createdAt": "2020-02-21T01:18:13Z", "path": "quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java", "diffHunk": "@@ -313,6 +324,57 @@ public void testVariableInterpolationWithProps() throws Exception {\n                 settings.getString(\"VariableTest\"));\n     }\n \n+    @Test\n+    public void testVariableInterpolationWithCustomPropsForSessionIdFromInputStream() throws Exception {\n+        // GIVEN\n+        System.setProperty(\"test.2\", \"BAR\");\n+        final Properties properties = new Properties(System.getProperties());\n+        properties.setProperty(\"test.1\", \"FOO\");\n+\n+        String settingsString = getDefaultSettingString();\n+        settingsString += \"\\n\";\n+        settingsString += \"[SESSION]\\n\";\n+        settingsString += \"BeginString=FIX.4.2\\n\";\n+        settingsString += \"TargetCompID=CLIENT3_${test.1}_${test.2}\\n\";\n+        settingsString += \"DataDictionary=../spec/FIX42.xml\\n\";\n+\n+        // WHEN\n+        final SessionSettings settings = createSettingsFromString(settingsString, properties);\n+\n+        // THEN\n+        Iterator<SessionID> sessionIDIterator = settings.sectionIterator();\n+        while (sessionIDIterator.hasNext()) {", "originalCommit": "2f0cb0c19299a202286ab131b59e373d2d69354b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwODEwOA==", "url": "https://github.com/quickfix-j/quickfixj/pull/259#discussion_r382708108", "bodyText": "Fixed", "author": "MAXbrainRUS", "createdAt": "2020-02-21T17:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0OTM0Mw=="}], "type": "inlineReview", "revised_code": {"commit": "09996e9492363b569b2ed3e3534fc57881bed79b", "changed_code": [{"header": "diff --git a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\nindex 8fde66ce..b10f1c61 100644\n--- a/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n+++ b/quickfixj-core/src/test/java/quickfix/SessionSettingsTest.java\n", "chunk": "@@ -338,42 +337,36 @@ public class SessionSettingsTest {\n         settingsString += \"TargetCompID=CLIENT3_${test.1}_${test.2}\\n\";\n         settingsString += \"DataDictionary=../spec/FIX42.xml\\n\";\n \n-        // WHEN\n         final SessionSettings settings = createSettingsFromString(settingsString, properties);\n \n-        // THEN\n+        SessionID sessionId = findSessionId(settings, \"CLIENT3\");\n+        assertNotNull(\"Settings for CLIENT3 are not found\", sessionId);\n+        assertEquals(\"Wrong TargetCompID\", \"CLIENT3_FOO_BAR\", sessionId.getTargetCompID());\n+    }\n+\n+    private SessionID findSessionId(SessionSettings settings, String targetCompIdPrefix) {\n         Iterator<SessionID> sessionIDIterator = settings.sectionIterator();\n         while (sessionIDIterator.hasNext()) {\n             SessionID sessionID = sessionIDIterator.next();\n-            if (sessionID.getTargetCompID().startsWith(\"CLIENT3\")) {\n-                assertEquals(\"wrong value\", \"CLIENT3_FOO_BAR\", sessionID.getTargetCompID());\n-                return;\n+            if (sessionID.getTargetCompID().startsWith(targetCompIdPrefix)) {\n+                return sessionID;\n             }\n         }\n-        fail(\"Settings for CLIENT3 are not found\");\n+        return null;\n     }\n \n     @Test\n     public void testVariableInterpolationWithCustomPropsForSessionIdFromFile() throws Exception {\n-        // GIVEN\n         System.setProperty(\"CLIENT_PLACEHOLDER2\", \"BAR\");\n         final Properties properties = new Properties(System.getProperties());\n         properties.setProperty(\"CLIENT_PLACEHOLDER1\", \"FOO\");\n \n-        // WHEN\n         final SessionSettings settings = new SessionSettings(getConfigurationFileName(), properties);\n \n-        // THEN\n-        Iterator<SessionID> sessionIDIterator = settings.sectionIterator();\n-        while (sessionIDIterator.hasNext()) {\n-            SessionID sessionID = sessionIDIterator.next();\n-            if (sessionID.getTargetCompID().startsWith(\"CLIENT3\")) {\n-                assertEquals(\"wrong value\", \"CLIENT3_FOO_BAR\", sessionID.getTargetCompID());\n-                return;\n-            }\n-        }\n-        fail(\"Settings for CLIENT3 are not found\");\n-    }\n+        SessionID sessionId = findSessionId(settings, \"CLIENT3\");\n+        assertNotNull(\"Settings for CLIENT3 are not found\", sessionId);\n+        assertEquals(\"Wrong TargetCompID\", \"CLIENT3_FOO_BAR\", sessionId.getTargetCompID());\n+}\n \n     @Test\n     public void testDefaultConstructor() {\n", "next_change": null}]}}, {"oid": "81b7a38f382abafc1450517b1c4b35accef1f1c3", "url": "https://github.com/quickfix-j/quickfixj/commit/81b7a38f382abafc1450517b1c4b35accef1f1c3", "message": "Fix method visibility", "committedDate": "2020-02-21T17:03:56Z", "type": "commit"}, {"oid": "09996e9492363b569b2ed3e3534fc57881bed79b", "url": "https://github.com/quickfix-j/quickfixj/commit/09996e9492363b569b2ed3e3534fc57881bed79b", "message": "Stylistic refactoring after code-review", "committedDate": "2020-02-21T17:22:41Z", "type": "commit"}]}