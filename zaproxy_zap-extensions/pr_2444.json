{"pr_number": 2444, "pr_title": "Kotlin scripting support addon", "pr_author": "kcberg", "pr_createdAt": "2020-06-15T14:14:39Z", "pr_url": "https://github.com/zaproxy/zap-extensions/pull/2444", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTMwNA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931304", "body": "```suggestion\r\n\r\n    static final ImageIcon KOTLIN_ICON;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final int EXTENSION_ORDER = 9999;\n          \n          \n            \n                public static final ImageIcon KOTLIN_ICON;\n          \n          \n            \n            \n          \n          \n            \n                static final ImageIcon KOTLIN_ICON;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">    </span><span class=\"pl-k x\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">static</span><span class=\"x\"> </span><span class=\"pl-k x\">final</span><span class=\"x\"> </span><span class=\"pl-k x\">int</span><span class=\"x\"> </span><span class=\"pl-c1 x\">EXTENSION_ORDER</span><span class=\"x\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">9999</span><span class=\"x x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">public</span><span class=\"x x-last\"> </span><span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImageIcon</span> <span class=\"pl-c1\">KOTLIN_ICON</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImageIcon</span> <span class=\"pl-c1\">KOTLIN_ICON</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:32Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/ExtensionKotlin.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.swing.*;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.Extension;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.ZAP;\n+import org.zaproxy.zap.control.AddOnLoader;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.ExtensionScript;\n+\n+public class ExtensionKotlin extends ExtensionAdaptor {\n+\n+    public static final String NAME = \"ExtensionKotlin\";\n+    public static final int EXTENSION_ORDER = 9999;\n+    public static final ImageIcon KOTLIN_ICON;", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTM1MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931350", "body": "```suggestion\r\n\r\n    private KotlinEngineWrapper engineWrapper;\r\n\r\n    public ExtensionKotlin() {\r\n        super(NAME);\r\n    }\r\n\r\n    @Override\r\n    public String getUIName() {\r\n        return Constant.messages.getString(\"kotlin.name\");\r\n    }\r\n\r\n    @Override\r\n    public String getDescription() {\r\n        return Constant.messages.getString(\"kotlin.desc\");\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                public ExtensionKotlin() {\n          \n          \n            \n                    super(NAME);\n          \n          \n            \n                    setOrder(EXTENSION_ORDER);\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                private KotlinEngineWrapper engineWrapper;\n          \n          \n            \n            \n          \n          \n            \n                public ExtensionKotlin() {\n          \n          \n            \n                    super(NAME);\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public String getUIName() {\n          \n          \n            \n                    return Constant.messages.getString(\"kotlin.name\");\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public String getDescription() {\n          \n          \n            \n                    return Constant.messages.getString(\"kotlin.desc\");\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> ExtensionKotlin() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">super</span>(<span class=\"pl-c1\">NAME</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        setOrder(<span class=\"pl-c1\">EXTENSION_ORDER</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">KotlinEngineWrapper</span> engineWrapper;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> ExtensionKotlin() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">super</span>(<span class=\"pl-c1\">NAME</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> getUIName() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Constant</span><span class=\"pl-k\">.</span>messages<span class=\"pl-k\">.</span>getString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>kotlin.name<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> getDescription() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Constant</span><span class=\"pl-k\">.</span>messages<span class=\"pl-k\">.</span>getString(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>kotlin.desc<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:36Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/ExtensionKotlin.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.swing.*;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.Extension;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.ZAP;\n+import org.zaproxy.zap.control.AddOnLoader;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.ExtensionScript;\n+\n+public class ExtensionKotlin extends ExtensionAdaptor {\n+\n+    public static final String NAME = \"ExtensionKotlin\";\n+    public static final int EXTENSION_ORDER = 9999;\n+    public static final ImageIcon KOTLIN_ICON;\n+    private static final List<Class<? extends Extension>> EXTENSION_DEPENDENCIES;\n+    private static final Logger LOGGER = Logger.getLogger(ExtensionKotlin.class);\n+\n+    static {\n+        List<Class<? extends Extension>> dependencies = new ArrayList<>(1);\n+        dependencies.add(ExtensionScript.class);\n+        EXTENSION_DEPENDENCIES = Collections.unmodifiableList(dependencies);\n+\n+        KOTLIN_ICON =\n+                View.isInitialised()\n+                        ? new ImageIcon(\n+                                ExtensionKotlin.class.getResource(\n+                                        \"/org/zaproxy/zap/extension/kotlin/resources/kotlin.png\"))\n+                        : null;\n+    }\n+\n+    public ExtensionKotlin() {\n+        super(NAME);\n+        setOrder(EXTENSION_ORDER);\n+    }", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTM3MA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931370", "body": "```suggestion\r\n        engineWrapper = new KotlinEngineWrapper();\r\n        getExtScript().registerScriptEngineWrapper(engineWrapper);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.debug(\"Hooking Kotlin Scripting Extension\");\n          \n          \n            \n                    String zapJar = ZAP.class.getProtectionDomain().getCodeSource().getLocation().getFile();\n          \n          \n            \n            \n          \n          \n            \n                    LOGGER.debug(\"Loading Kotlin engine...\");\n          \n          \n            \n                    AddOnLoader addonLoader = ExtensionFactory.getAddOnLoader();\n          \n          \n            \n                    Arrays.stream(addonLoader.getURLs()).forEach(LOGGER::debug);\n          \n          \n            \n                    KotlinScriptEngineFactory factory = new KotlinScriptEngineFactory(addonLoader, zapJar);\n          \n          \n            \n                    getExtScript().registerScriptEngineWrapper(new KotlinEngineWrapper(factory));\n          \n          \n            \n                    LOGGER.debug(\"Kotlin engine loaded.\");\n          \n          \n            \n                    engineWrapper = new KotlinEngineWrapper();\n          \n          \n            \n                    getExtScript().registerScriptEngineWrapper(engineWrapper);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Hooking Kotlin Scripting Extension<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> zapJar <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ZAP</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">.</span>getProtectionDomain()<span class=\"pl-k\">.</span>getCodeSource()<span class=\"pl-k\">.</span>getLocation()<span class=\"pl-k\">.</span>getFile();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Loading Kotlin engine...<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">AddOnLoader</span> addonLoader <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ExtensionFactory</span><span class=\"pl-k\">.</span>getAddOnLoader();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>stream(addonLoader<span class=\"pl-k\">.</span>getURLs())<span class=\"pl-k\">.</span>forEach(<span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">::</span>debug);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">KotlinScriptEngineFactory</span> factory <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">KotlinScriptEngineFactory</span>(addonLoader, zapJar);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        getExtScript()<span class=\"pl-k\">.</span>registerScriptEngineWrapper(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">KotlinEngineWrapper</span>(factory));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Kotlin engine loaded.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        engineWrapper <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">KotlinEngineWrapper</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        getExtScript()<span class=\"pl-k\">.</span>registerScriptEngineWrapper(engineWrapper);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:38Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/ExtensionKotlin.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.swing.*;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.Extension;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.ZAP;\n+import org.zaproxy.zap.control.AddOnLoader;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.ExtensionScript;\n+\n+public class ExtensionKotlin extends ExtensionAdaptor {\n+\n+    public static final String NAME = \"ExtensionKotlin\";\n+    public static final int EXTENSION_ORDER = 9999;\n+    public static final ImageIcon KOTLIN_ICON;\n+    private static final List<Class<? extends Extension>> EXTENSION_DEPENDENCIES;\n+    private static final Logger LOGGER = Logger.getLogger(ExtensionKotlin.class);\n+\n+    static {\n+        List<Class<? extends Extension>> dependencies = new ArrayList<>(1);\n+        dependencies.add(ExtensionScript.class);\n+        EXTENSION_DEPENDENCIES = Collections.unmodifiableList(dependencies);\n+\n+        KOTLIN_ICON =\n+                View.isInitialised()\n+                        ? new ImageIcon(\n+                                ExtensionKotlin.class.getResource(\n+                                        \"/org/zaproxy/zap/extension/kotlin/resources/kotlin.png\"))\n+                        : null;\n+    }\n+\n+    public ExtensionKotlin() {\n+        super(NAME);\n+        setOrder(EXTENSION_ORDER);\n+    }\n+\n+    @Override\n+    public void hook(ExtensionHook extensionHook) {\n+        super.hook(extensionHook);\n+\n+        LOGGER.debug(\"Hooking Kotlin Scripting Extension\");\n+        String zapJar = ZAP.class.getProtectionDomain().getCodeSource().getLocation().getFile();\n+\n+        LOGGER.debug(\"Loading Kotlin engine...\");\n+        AddOnLoader addonLoader = ExtensionFactory.getAddOnLoader();\n+        Arrays.stream(addonLoader.getURLs()).forEach(LOGGER::debug);\n+        KotlinScriptEngineFactory factory = new KotlinScriptEngineFactory(addonLoader, zapJar);\n+        getExtScript().registerScriptEngineWrapper(new KotlinEngineWrapper(factory));\n+        LOGGER.debug(\"Kotlin engine loaded.\");", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTQxMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931413", "body": "```suggestion\r\n    }\r\n\r\n    @Override\r\n    public boolean canUnload() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void unload() {\r\n        getExtScript().removeScriptEngineWrapper(engineWrapper);\r\n    }\r\n\r\n    @Override\r\n    public boolean supportsDb(String type) {\r\n        return true;\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public boolean canUnload() {\n          \n          \n            \n                    return true;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public void unload() {\n          \n          \n            \n                    getExtScript().removeScriptEngineWrapper(engineWrapper);\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                @Override\n          \n          \n            \n                public boolean supportsDb(String type) {\n          \n          \n            \n                    return true;\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> canUnload() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> unload() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        getExtScript()<span class=\"pl-k\">.</span>removeScriptEngineWrapper(engineWrapper);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">boolean</span> supportsDb(<span class=\"pl-smi\">String</span> type) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:41Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/ExtensionKotlin.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import javax.swing.*;\n+import org.apache.log4j.Logger;\n+import org.parosproxy.paros.control.Control;\n+import org.parosproxy.paros.extension.Extension;\n+import org.parosproxy.paros.extension.ExtensionAdaptor;\n+import org.parosproxy.paros.extension.ExtensionHook;\n+import org.parosproxy.paros.view.View;\n+import org.zaproxy.zap.ZAP;\n+import org.zaproxy.zap.control.AddOnLoader;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.ExtensionScript;\n+\n+public class ExtensionKotlin extends ExtensionAdaptor {\n+\n+    public static final String NAME = \"ExtensionKotlin\";\n+    public static final int EXTENSION_ORDER = 9999;\n+    public static final ImageIcon KOTLIN_ICON;\n+    private static final List<Class<? extends Extension>> EXTENSION_DEPENDENCIES;\n+    private static final Logger LOGGER = Logger.getLogger(ExtensionKotlin.class);\n+\n+    static {\n+        List<Class<? extends Extension>> dependencies = new ArrayList<>(1);\n+        dependencies.add(ExtensionScript.class);\n+        EXTENSION_DEPENDENCIES = Collections.unmodifiableList(dependencies);\n+\n+        KOTLIN_ICON =\n+                View.isInitialised()\n+                        ? new ImageIcon(\n+                                ExtensionKotlin.class.getResource(\n+                                        \"/org/zaproxy/zap/extension/kotlin/resources/kotlin.png\"))\n+                        : null;\n+    }\n+\n+    public ExtensionKotlin() {\n+        super(NAME);\n+        setOrder(EXTENSION_ORDER);\n+    }\n+\n+    @Override\n+    public void hook(ExtensionHook extensionHook) {\n+        super.hook(extensionHook);\n+\n+        LOGGER.debug(\"Hooking Kotlin Scripting Extension\");\n+        String zapJar = ZAP.class.getProtectionDomain().getCodeSource().getLocation().getFile();\n+\n+        LOGGER.debug(\"Loading Kotlin engine...\");\n+        AddOnLoader addonLoader = ExtensionFactory.getAddOnLoader();\n+        Arrays.stream(addonLoader.getURLs()).forEach(LOGGER::debug);\n+        KotlinScriptEngineFactory factory = new KotlinScriptEngineFactory(addonLoader, zapJar);\n+        getExtScript().registerScriptEngineWrapper(new KotlinEngineWrapper(factory));\n+        LOGGER.debug(\"Kotlin engine loaded.\");\n+    }\n+\n+    public List<Class<? extends Extension>> getDependencies() {\n+        return EXTENSION_DEPENDENCIES;\n+    }\n+\n+    private ExtensionScript getExtScript() {\n+        return Control.getSingleton().getExtensionLoader().getExtension(ExtensionScript.class);\n+    }", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTQ4OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931488", "body": "```suggestion\r\n\r\n    static {\r\n        System.setProperty(\r\n                KotlinJsr223DefaultScriptEngineFactoryKt\r\n                        .KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY,\r\n                \"true\");\r\n    }\r\n\r\n    private EngineClassLoader classLoader;\r\n\r\n    public KotlinEngineWrapper() {\r\n        super(new KotlinJsr223DefaultScriptEngineFactory());\r\n        this.classLoader =\r\n                new EngineClassLoader(\r\n                        getClass().getClassLoader(), ExtensionFactory.getAddOnLoader());\r\n    }\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n                static {\n          \n          \n            \n                    System.setProperty(\n          \n          \n            \n                            KotlinJsr223DefaultScriptEngineFactoryKt\n          \n          \n            \n                                    .KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY,\n          \n          \n            \n                            \"true\");\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                private EngineClassLoader classLoader;\n          \n          \n            \n            \n          \n          \n            \n                public KotlinEngineWrapper() {\n          \n          \n            \n                    super(new KotlinJsr223DefaultScriptEngineFactory());\n          \n          \n            \n                    this.classLoader =\n          \n          \n            \n                            new EngineClassLoader(\n          \n          \n            \n                                    getClass().getClassLoader(), ExtensionFactory.getAddOnLoader());\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">static</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>setProperty(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">KotlinJsr223DefaultScriptEngineFactoryKt</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-c1\"><span class=\"pl-k\">.</span>KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">EngineClassLoader</span> classLoader;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> KotlinEngineWrapper() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">super</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">KotlinJsr223DefaultScriptEngineFactory</span>());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>classLoader <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EngineClassLoader</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        getClass()<span class=\"pl-k\">.</span>getClassLoader(), <span class=\"pl-smi\">ExtensionFactory</span><span class=\"pl-k\">.</span>getAddOnLoader());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:46Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinEngineWrapper.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.script.ScriptEngineFactory;\n+import javax.swing.*;\n+import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n+import org.zaproxy.zap.extension.script.DefaultEngineWrapper;\n+\n+public class KotlinEngineWrapper extends DefaultEngineWrapper {\n+", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTU1NA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931554", "body": "```suggestion\r\n    @Override\r\n    public ScriptEngine getEngine() {\r\n        return init(super.getEngine());\r\n    }\r\n\r\n    /**\r\n     * Initialises the script engine with custom class loader and function overrides.\r\n     *\r\n     * @param scriptEngine the script engine to initialise\r\n     * @return the script engine initialised\r\n     */\r\n    private ScriptEngine init(ScriptEngine scriptEngine) {\r\n        ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader();\r\n        Thread.currentThread().setContextClassLoader(classLoader);\r\n        try {\r\n            scriptEngine\r\n                    .getBindings(ScriptContext.ENGINE_SCOPE)\r\n                    .put(\"ZapScriptContext\", scriptEngine.getContext());\r\n            // Note that this also forces the initialisation/usage of the custom class loader.\r\n            scriptEngine.eval(\r\n                    \"fun print(msg: Any) { ZapScriptContext.writer.write(\\\"$msg\\\") }\"\r\n                            + \"fun println(msg: Any) { print(\\\"$msg\\\\n\\\") }\");\r\n        } catch (ScriptException ignore) {\r\n        } finally {\r\n            Thread.currentThread().setContextClassLoader(currentClassLoader);\r\n        }\r\n        return scriptEngine;\r\n    }\r\n\r\n    private static class EngineClassLoader extends ClassLoader {\r\n\r\n        private final ClassLoader addOn;\r\n        private final ClassLoader fallback;\r\n\r\n        EngineClassLoader(ClassLoader addOn, ClassLoader fallback) {\r\n            this.addOn = addOn;\r\n            this.fallback = fallback;\r\n        }\r\n\r\n        @Override\r\n        protected Class<?> findClass(String name) throws ClassNotFoundException {\r\n            try {\r\n                return addOn.loadClass(name);\r\n            } catch (ClassNotFoundException ignore) {\r\n            }\r\n            return fallback.loadClass(name);\r\n        }\r\n    }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public KotlinEngineWrapper(ScriptEngineFactory factory) {\n          \n          \n            \n                    super(factory);\n          \n          \n            \n                }\n          \n          \n            \n                @Override\n          \n          \n            \n                public ScriptEngine getEngine() {\n          \n          \n            \n                    return init(super.getEngine());\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Initialises the script engine with custom class loader and function overrides.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param scriptEngine the script engine to initialise\n          \n          \n            \n                 * @return the script engine initialised\n          \n          \n            \n                 */\n          \n          \n            \n                private ScriptEngine init(ScriptEngine scriptEngine) {\n          \n          \n            \n                    ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader();\n          \n          \n            \n                    Thread.currentThread().setContextClassLoader(classLoader);\n          \n          \n            \n                    try {\n          \n          \n            \n                        scriptEngine\n          \n          \n            \n                                .getBindings(ScriptContext.ENGINE_SCOPE)\n          \n          \n            \n                                .put(\"ZapScriptContext\", scriptEngine.getContext());\n          \n          \n            \n                        // Note that this also forces the initialisation/usage of the custom class loader.\n          \n          \n            \n                        scriptEngine.eval(\n          \n          \n            \n                                \"fun print(msg: Any) { ZapScriptContext.writer.write(\\\"$msg\\\") }\"\n          \n          \n            \n                                        + \"fun println(msg: Any) { print(\\\"$msg\\\\n\\\") }\");\n          \n          \n            \n                    } catch (ScriptException ignore) {\n          \n          \n            \n                    } finally {\n          \n          \n            \n                        Thread.currentThread().setContextClassLoader(currentClassLoader);\n          \n          \n            \n                    }\n          \n          \n            \n                    return scriptEngine;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                private static class EngineClassLoader extends ClassLoader {\n          \n          \n            \n            \n          \n          \n            \n                    private final ClassLoader addOn;\n          \n          \n            \n                    private final ClassLoader fallback;\n          \n          \n            \n            \n          \n          \n            \n                    EngineClassLoader(ClassLoader addOn, ClassLoader fallback) {\n          \n          \n            \n                        this.addOn = addOn;\n          \n          \n            \n                        this.fallback = fallback;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    @Override\n          \n          \n            \n                    protected Class<?> findClass(String name) throws ClassNotFoundException {\n          \n          \n            \n                        try {\n          \n          \n            \n                            return addOn.loadClass(name);\n          \n          \n            \n                        } catch (ClassNotFoundException ignore) {\n          \n          \n            \n                        }\n          \n          \n            \n                        return fallback.loadClass(name);\n          \n          \n            \n                    }\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> KotlinEngineWrapper(<span class=\"pl-smi\">ScriptEngineFactory</span> factory) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c1\">super</span>(factory);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">ScriptEngine</span> getEngine() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> init(<span class=\"pl-c1\">super</span><span class=\"pl-k\">.</span>getEngine());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> Initialises the script engine with custom <span class=\"pl-k\">class</span> <span class=\"pl-en\">loader</span> and function overrides.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> scriptEngine the script engine to initialise</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> the script engine initialised</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ScriptEngine</span> init(<span class=\"pl-smi\">ScriptEngine</span> scriptEngine) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">ClassLoader</span> currentClassLoader <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>currentThread()<span class=\"pl-k\">.</span>getContextClassLoader();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>currentThread()<span class=\"pl-k\">.</span>setContextClassLoader(classLoader);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            scriptEngine</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .getBindings(<span class=\"pl-smi\">ScriptContext</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ENGINE_SCOPE</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .put(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ZapScriptContext<span class=\"pl-pds\">\"</span></span>, scriptEngine<span class=\"pl-k\">.</span>getContext());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Note that this also forces the initialisation/usage of the custom class loader.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            scriptEngine<span class=\"pl-k\">.</span>eval(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fun print(msg: Any) { ZapScriptContext.writer.write(<span class=\"pl-cce\">\\\"</span>$msg<span class=\"pl-cce\">\\\"</span>) }<span class=\"pl-pds\">\"</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fun println(msg: Any) { print(<span class=\"pl-cce\">\\\"</span>$msg<span class=\"pl-cce\">\\\\</span>n<span class=\"pl-cce\">\\\"</span>) }<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ScriptException</span> ignore) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">finally</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>currentThread()<span class=\"pl-k\">.</span>setContextClassLoader(currentClassLoader);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> scriptEngine;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">EngineClassLoader</span> <span class=\"pl-k\">extends</span> <span class=\"pl-e\">ClassLoader</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ClassLoader</span> addOn;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ClassLoader</span> fallback;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        EngineClassLoader(<span class=\"pl-smi\">ClassLoader</span> addOn, <span class=\"pl-smi\">ClassLoader</span> fallback) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>addOn <span class=\"pl-k\">=</span> addOn;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>fallback <span class=\"pl-k\">=</span> fallback;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">protected</span> <span class=\"pl-k\">Class&lt;?&gt;</span> findClass(<span class=\"pl-smi\">String</span> name) throws <span class=\"pl-smi\">ClassNotFoundException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> addOn<span class=\"pl-k\">.</span>loadClass(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">ClassNotFoundException</span> ignore) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> fallback<span class=\"pl-k\">.</span>loadClass(name);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thc202", "createdAt": "2020-06-16T15:15:51Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinEngineWrapper.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.script.ScriptEngineFactory;\n+import javax.swing.*;\n+import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n+import org.zaproxy.zap.extension.script.DefaultEngineWrapper;\n+\n+public class KotlinEngineWrapper extends DefaultEngineWrapper {\n+\n+    @Override\n+    public ImageIcon getIcon() {\n+        return ExtensionKotlin.KOTLIN_ICON;\n+    }\n+\n+    @Override\n+    public String getSyntaxStyle() {\n+        return SyntaxConstants.SYNTAX_STYLE_NONE;\n+    }\n+\n+    @Override\n+    public boolean isRawEngine() {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<String> getExtensions() {\n+        return Collections.singletonList(\"kts\");\n+    }\n+\n+    public KotlinEngineWrapper(ScriptEngineFactory factory) {\n+        super(factory);\n+    }", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTg2OQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440931869", "body": "The engines should use the existing class loaders otherwise this might (and will) lead to duplicated classes (causing subtle/surprising errors), the above suggestions should address this.", "bodyText": "The engines should use the existing class loaders otherwise this might (and will) lead to duplicated classes (causing subtle/surprising errors), the above suggestions should address this.", "bodyHTML": "<p dir=\"auto\">The engines should use the existing class loaders otherwise this might (and will) lead to duplicated classes (causing subtle/surprising errors), the above suggestions should address this.</p>", "author": "thc202", "createdAt": "2020-06-16T15:16:19Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinScriptEngineFactory.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.io.File;\n+import java.util.List;\n+import javax.script.Bindings;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import kotlin.jvm.JvmClassMappingKt;\n+import kotlin.reflect.KClass;\n+import kotlin.script.experimental.jvm.util.JvmClasspathUtilKt;\n+import org.jetbrains.kotlin.cli.common.repl.KotlinJsr223JvmScriptEngineFactoryBase;\n+import org.jetbrains.kotlin.cli.common.repl.ScriptArgsWithTypes;\n+import org.jetbrains.kotlin.script.jsr223.KotlinJsr223JvmLocalScriptEngine;\n+import org.jetbrains.kotlin.script.jsr223.KotlinStandardJsr223ScriptTemplate;\n+\n+public class KotlinScriptEngineFactory extends KotlinJsr223JvmScriptEngineFactoryBase {\n+\n+    private final List<File> jars;\n+\n+    public KotlinScriptEngineFactory(ClassLoader classLoader, String zapJar) {\n+        List<File> clJars =\n+                JvmClasspathUtilKt.scriptCompilationClasspathFromContextOrStdlib(\n+                        new String[] {\"kotlin-stdlib\"}, classLoader, true);\n+        if (zapJar != null) {\n+            clJars.add(new File(zapJar));\n+        }\n+        jars = clJars;\n+    }\n+\n+    @Override\n+    public ScriptEngine getScriptEngine() {\n+        return new KotlinJsr223JvmLocalScriptEngine(\n+                this,\n+                jars,", "originalCommit": "d59555a6f86b2b5415b76ab9b00dab29bdb62506", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk2NTgyOQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r440965829", "bodyText": "@thc202 Wow thanks!\nIt does indeed create class loader issues as I've discovered trying to make some println helpers for writing the the scripting console.", "author": "kcberg", "createdAt": "2020-06-16T16:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzMTg2OQ=="}], "type": "inlineReview"}, {"oid": "8836b2d83519598db2bf72e63fe05e03e2cc750a", "url": "https://github.com/zaproxy/zap-extensions/commit/8836b2d83519598db2bf72e63fe05e03e2cc750a", "message": "Update addOns/kotlin/src/main/resources/org/zaproxy/zap/extension/kotlin/resources/Messages.properties\n\nCo-authored-by: thc202 <thc202@gmail.com>\nSigned-off-by: kberg <kc@stackhawk.com>", "committedDate": "2020-06-16T16:28:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzMDM5Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441630396", "body": "I'm sure this is likely an IDE setting, but can you use specific imports throughout?", "bodyText": "I'm sure this is likely an IDE setting, but can you use specific imports throughout?", "bodyHTML": "<p dir=\"auto\">I'm sure this is likely an IDE setting, but can you use specific imports throughout?</p>", "author": "kingthorin", "createdAt": "2020-06-17T15:21:45Z", "path": "addOns/kotlin/src/test/java/org/zaproxy/zap/extension/kotlin/VerifyScriptTemplates.java", "diffHunk": "@@ -19,24 +19,31 @@\n  */\n package org.zaproxy.zap.extension.kotlin;\n \n-import java.io.Reader;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.*;", "originalCommit": "179335b5810a6276556d963529ac94edb2209c2a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczNjY4Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441736686", "bodyText": "pretty sure i managed to get all these \ud83d\ude05", "author": "kcberg", "createdAt": "2020-06-17T18:13:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzMDM5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDAzNQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441730035", "body": "`org.zaproxy.addon.kotlin`, new add-ons are moving away from the \"extension\".", "bodyText": "org.zaproxy.addon.kotlin, new add-ons are moving away from the \"extension\".", "bodyHTML": "<p dir=\"auto\"><code>org.zaproxy.addon.kotlin</code>, new add-ons are moving away from the \"extension\".</p>", "author": "thc202", "createdAt": "2020-06-17T18:02:06Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/ExtensionKotlin.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDE0Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441730147", "body": " - `engineClassLoader` \u2192 `fallbackClassLoader`, should replace `ExtensionFactory.getAddOnLoader()` (which can be passed in the default constructor).\r\n - Should be package accessible, just for testing?", "bodyText": "engineClassLoader \u2192 fallbackClassLoader, should replace ExtensionFactory.getAddOnLoader() (which can be passed in the default constructor).\nShould be package accessible, just for testing?", "bodyHTML": "<ul dir=\"auto\">\n<li><code>engineClassLoader</code> \u2192 <code>fallbackClassLoader</code>, should replace <code>ExtensionFactory.getAddOnLoader()</code> (which can be passed in the default constructor).</li>\n<li>Should be package accessible, just for testing?</li>\n</ul>", "author": "thc202", "createdAt": "2020-06-17T18:02:17Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinEngineWrapper.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import javax.script.ScriptException;\n+import javax.swing.ImageIcon;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactory;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactoryKt;\n+import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.DefaultEngineWrapper;\n+\n+public class KotlinEngineWrapper extends DefaultEngineWrapper {\n+\n+    static {\n+        System.setProperty(\n+                KotlinJsr223DefaultScriptEngineFactoryKt\n+                        .KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY,\n+                \"true\");\n+    }\n+\n+    private ClassLoader classLoader;\n+\n+    public KotlinEngineWrapper() {\n+        this(null);\n+    }\n+\n+    public KotlinEngineWrapper(ClassLoader engineClassLoader) {", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0Nzc2Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441747767", "bodyText": "Yeah I was trying to make this configurable for testing as ExtensionFactory.getAddOnLoader() was throwing an NPE but perhaps I just need to setup my test better?", "author": "kcberg", "createdAt": "2020-06-17T18:33:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDE0Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NTI2Nw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441755267", "bodyText": "No, it makes sense to allow to pass a custom class loader (really no need to mock ExtensionFactory).", "author": "thc202", "createdAt": "2020-06-17T18:47:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDE0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDI3NQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441730275", "body": "Does it really need to be OS dependent? (It can be added to the string, instead of called each time.)", "bodyText": "Does it really need to be OS dependent? (It can be added to the string, instead of called each time.)", "bodyHTML": "<p dir=\"auto\">Does it really need to be OS dependent? (It can be added to the string, instead of called each time.)</p>", "author": "thc202", "createdAt": "2020-06-17T18:02:31Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinEngineWrapper.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import javax.script.ScriptException;\n+import javax.swing.ImageIcon;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactory;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactoryKt;\n+import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.DefaultEngineWrapper;\n+\n+public class KotlinEngineWrapper extends DefaultEngineWrapper {\n+\n+    static {\n+        System.setProperty(\n+                KotlinJsr223DefaultScriptEngineFactoryKt\n+                        .KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY,\n+                \"true\");\n+    }\n+\n+    private ClassLoader classLoader;\n+\n+    public KotlinEngineWrapper() {\n+        this(null);\n+    }\n+\n+    public KotlinEngineWrapper(ClassLoader engineClassLoader) {\n+        super(new KotlinJsr223DefaultScriptEngineFactory());\n+        if (engineClassLoader != null) {\n+            this.classLoader = engineClassLoader;\n+        } else {\n+            this.classLoader =\n+                    new EngineClassLoader(\n+                            getClass().getClassLoader(), ExtensionFactory.getAddOnLoader());\n+        }\n+    }\n+\n+    @Override\n+    public ImageIcon getIcon() {\n+        return ExtensionKotlin.KOTLIN_ICON;\n+    }\n+\n+    @Override\n+    public String getSyntaxStyle() {\n+        return SyntaxConstants.SYNTAX_STYLE_NONE;\n+    }\n+\n+    @Override\n+    public boolean isRawEngine() {\n+        return false;\n+    }\n+\n+    @Override\n+    public List<String> getExtensions() {\n+        return Collections.singletonList(\"kts\");\n+    }\n+\n+    @Override\n+    public ScriptEngine getEngine() {\n+        return init(super.getEngine());\n+    }\n+\n+    /**\n+     * Initialises the script engine with custom class loader and function overrides.\n+     *\n+     * @param scriptEngine the script engine to initialise\n+     * @return the script engine initialised\n+     */\n+    private ScriptEngine init(ScriptEngine scriptEngine) {\n+        ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader();\n+        Thread.currentThread().setContextClassLoader(classLoader);\n+        try {\n+            scriptEngine\n+                    .getBindings(ScriptContext.ENGINE_SCOPE)\n+                    .put(\"ZapScriptContext\", scriptEngine.getContext());\n+            // Note that this also forces the initialisation/usage of the custom class loader.\n+            scriptEngine.eval(\n+                    \"fun print(msg: Any) { ZapScriptContext.writer.write(\\\"$msg\\\") }\"\n+                            + \"fun println(msg: Any) { print(\\\"$msg${System.lineSeparator()}\\\") }\");", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0ODIzMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441748233", "bodyText": "Yeah I'll put this back how it was, given where it's writing to I don't suspect it needs to be OS specific.", "author": "kcberg", "createdAt": "2020-06-17T18:34:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDI3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDM2OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441730368", "body": "These tests should be moved to another test class (e.g. `KotlinEngineWrapperUnitTest`), they are not verifying the templates.", "bodyText": "These tests should be moved to another test class (e.g. KotlinEngineWrapperUnitTest), they are not verifying the templates.", "bodyHTML": "<p dir=\"auto\">These tests should be moved to another test class (e.g. <code>KotlinEngineWrapperUnitTest</code>), they are not verifying the templates.</p>", "author": "thc202", "createdAt": "2020-06-17T18:02:41Z", "path": "addOns/kotlin/src/test/java/org/zaproxy/zap/extension/kotlin/VerifyScriptTemplates.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Reader;\n+import java.io.Writer;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.script.Compilable;\n+import javax.script.CompiledScript;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.zaproxy.zap.extension.alert.ExtensionAlert;\n+import org.zaproxy.zap.testutils.AbstractVerifyScriptTemplates;\n+\n+/** Verifies that the Kotlin script templates are parsed without errors. */\n+public class VerifyScriptTemplates extends AbstractVerifyScriptTemplates {\n+\n+    private static ScriptEngine se;\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        se = new KotlinEngineWrapper(Thread.currentThread().getContextClassLoader()).getEngine();\n+    }\n+\n+    @Override\n+    protected String getScriptExtension() {\n+        return \".kts\";\n+    }\n+\n+    @Override\n+    protected void parseTemplate(Path template) throws Exception {\n+        try (Reader reader = Files.newBufferedReader(template, StandardCharsets.UTF_8)) {\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(reader);\n+            cs.eval();\n+        }\n+    }\n+\n+    @Test\n+    public void shouldPrintToScriptContextWriter() throws Exception {", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMDM4OA==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441730388", "body": "Worth testing `print` too.", "bodyText": "Worth testing print too.", "bodyHTML": "<p dir=\"auto\">Worth testing <code>print</code> too.</p>", "author": "thc202", "createdAt": "2020-06-17T18:02:44Z", "path": "addOns/kotlin/src/test/java/org/zaproxy/zap/extension/kotlin/VerifyScriptTemplates.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Reader;\n+import java.io.Writer;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.script.Compilable;\n+import javax.script.CompiledScript;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.zaproxy.zap.extension.alert.ExtensionAlert;\n+import org.zaproxy.zap.testutils.AbstractVerifyScriptTemplates;\n+\n+/** Verifies that the Kotlin script templates are parsed without errors. */\n+public class VerifyScriptTemplates extends AbstractVerifyScriptTemplates {\n+\n+    private static ScriptEngine se;\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        se = new KotlinEngineWrapper(Thread.currentThread().getContextClassLoader()).getEngine();\n+    }\n+\n+    @Override\n+    protected String getScriptExtension() {\n+        return \".kts\";\n+    }\n+\n+    @Override\n+    protected void parseTemplate(Path template) throws Exception {\n+        try (Reader reader = Files.newBufferedReader(template, StandardCharsets.UTF_8)) {\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(reader);\n+            cs.eval();\n+        }\n+    }\n+\n+    @Test\n+    public void shouldPrintToScriptContextWriter() throws Exception {\n+        String script = getScriptContents(\"printTest.kts\");", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMTg3Ng==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441731876", "body": "e.g. `shouldLoadClassesFromProvidedClassLoader`, not about the hash code(?).", "bodyText": "e.g. shouldLoadClassesFromProvidedClassLoader, not about the hash code(?).", "bodyHTML": "<p dir=\"auto\">e.g. <code>shouldLoadClassesFromProvidedClassLoader</code>, not about the hash code(?).</p>", "author": "thc202", "createdAt": "2020-06-17T18:05:24Z", "path": "addOns/kotlin/src/test/java/org/zaproxy/zap/extension/kotlin/VerifyScriptTemplates.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Reader;\n+import java.io.Writer;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.script.Compilable;\n+import javax.script.CompiledScript;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.zaproxy.zap.extension.alert.ExtensionAlert;\n+import org.zaproxy.zap.testutils.AbstractVerifyScriptTemplates;\n+\n+/** Verifies that the Kotlin script templates are parsed without errors. */\n+public class VerifyScriptTemplates extends AbstractVerifyScriptTemplates {\n+\n+    private static ScriptEngine se;\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        se = new KotlinEngineWrapper(Thread.currentThread().getContextClassLoader()).getEngine();\n+    }\n+\n+    @Override\n+    protected String getScriptExtension() {\n+        return \".kts\";\n+    }\n+\n+    @Override\n+    protected void parseTemplate(Path template) throws Exception {\n+        try (Reader reader = Files.newBufferedReader(template, StandardCharsets.UTF_8)) {\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(reader);\n+            cs.eval();\n+        }\n+    }\n+\n+    @Test\n+    public void shouldPrintToScriptContextWriter() throws Exception {\n+        String script = getScriptContents(\"printTest.kts\");\n+\n+        ByteArrayOutputStream console = new ByteArrayOutputStream();\n+        ScriptContext sc = se.getContext();\n+        Writer originalWriter = sc.getWriter();\n+\n+        try {\n+            sc.setWriter(new PrintWriter(console));\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(script);\n+\n+            cs.eval();\n+\n+            sc.getWriter().flush();\n+            assertEquals(\"ZAP\" + System.lineSeparator(), console.toString());\n+        } finally {\n+            sc.setWriter(originalWriter);\n+        }\n+    }\n+\n+    @Test\n+    public void shouldHaveSameHashCode() throws Exception {", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMjEyMw==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441732123", "body": " - It needs to use other class than the ones available in the context class loader (technically it can be the same class file but loaded from other class loader), otherwise we don't know if it was from the provided class loader or the context class loader (the class loaders need to be different).\r\n - Better return (or pass through the bindings) the `Class` and check by reference, to not rely on the hash code which can be changed any time.", "bodyText": "It needs to use other class than the ones available in the context class loader (technically it can be the same class file but loaded from other class loader), otherwise we don't know if it was from the provided class loader or the context class loader (the class loaders need to be different).\nBetter return (or pass through the bindings) the Class and check by reference, to not rely on the hash code which can be changed any time.", "bodyHTML": "<ul dir=\"auto\">\n<li>It needs to use other class than the ones available in the context class loader (technically it can be the same class file but loaded from other class loader), otherwise we don't know if it was from the provided class loader or the context class loader (the class loaders need to be different).</li>\n<li>Better return (or pass through the bindings) the <code>Class</code> and check by reference, to not rely on the hash code which can be changed any time.</li>\n</ul>", "author": "thc202", "createdAt": "2020-06-17T18:05:50Z", "path": "addOns/kotlin/src/test/java/org/zaproxy/zap/extension/kotlin/VerifyScriptTemplates.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.Reader;\n+import java.io.Writer;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.script.Compilable;\n+import javax.script.CompiledScript;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.zaproxy.zap.extension.alert.ExtensionAlert;\n+import org.zaproxy.zap.testutils.AbstractVerifyScriptTemplates;\n+\n+/** Verifies that the Kotlin script templates are parsed without errors. */\n+public class VerifyScriptTemplates extends AbstractVerifyScriptTemplates {\n+\n+    private static ScriptEngine se;\n+\n+    @BeforeAll\n+    public static void setUp() {\n+        se = new KotlinEngineWrapper(Thread.currentThread().getContextClassLoader()).getEngine();\n+    }\n+\n+    @Override\n+    protected String getScriptExtension() {\n+        return \".kts\";\n+    }\n+\n+    @Override\n+    protected void parseTemplate(Path template) throws Exception {\n+        try (Reader reader = Files.newBufferedReader(template, StandardCharsets.UTF_8)) {\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(reader);\n+            cs.eval();\n+        }\n+    }\n+\n+    @Test\n+    public void shouldPrintToScriptContextWriter() throws Exception {\n+        String script = getScriptContents(\"printTest.kts\");\n+\n+        ByteArrayOutputStream console = new ByteArrayOutputStream();\n+        ScriptContext sc = se.getContext();\n+        Writer originalWriter = sc.getWriter();\n+\n+        try {\n+            sc.setWriter(new PrintWriter(console));\n+            Compilable c = (Compilable) se;\n+            CompiledScript cs = c.compile(script);\n+\n+            cs.eval();\n+\n+            sc.getWriter().flush();\n+            assertEquals(\"ZAP\" + System.lineSeparator(), console.toString());\n+        } finally {\n+            sc.setWriter(originalWriter);\n+        }\n+    }\n+\n+    @Test\n+    public void shouldHaveSameHashCode() throws Exception {\n+\n+        int jvmHashCode = ExtensionAlert.class.hashCode();", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MTMyMQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441751321", "bodyText": "Ok I think I understand what you're saying and I suspected there was a better way to do this. Let me see if I can create a better test setup for this.", "author": "kcberg", "createdAt": "2020-06-17T18:40:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczMjEyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTczNTYwMQ==", "url": "https://github.com/zaproxy/zap-extensions/pull/2444#discussion_r441735601", "body": "This should be kept as `EngineClassLoader`, can be final too.", "bodyText": "This should be kept as EngineClassLoader, can be final too.", "bodyHTML": "<p dir=\"auto\">This should be kept as <code>EngineClassLoader</code>, can be final too.</p>", "author": "thc202", "createdAt": "2020-06-17T18:12:06Z", "path": "addOns/kotlin/src/main/java/org/zaproxy/zap/extension/kotlin/KotlinEngineWrapper.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Zed Attack Proxy (ZAP) and its related class files.\n+ *\n+ * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n+ *\n+ * Copyright 2020 The ZAP Development Team\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.zaproxy.zap.extension.kotlin;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import javax.script.ScriptContext;\n+import javax.script.ScriptEngine;\n+import javax.script.ScriptException;\n+import javax.swing.ImageIcon;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactory;\n+import kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEngineFactoryKt;\n+import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n+import org.zaproxy.zap.control.ExtensionFactory;\n+import org.zaproxy.zap.extension.script.DefaultEngineWrapper;\n+\n+public class KotlinEngineWrapper extends DefaultEngineWrapper {\n+\n+    static {\n+        System.setProperty(\n+                KotlinJsr223DefaultScriptEngineFactoryKt\n+                        .KOTLIN_JSR223_RESOLVE_FROM_CLASSLOADER_PROPERTY,\n+                \"true\");\n+    }\n+\n+    private ClassLoader classLoader;", "originalCommit": "334363bf0c44233c739dab56951492765ceecaa5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "73eef93bc34edf8f2d03b60508f90eaefc960d33", "url": "https://github.com/zaproxy/zap-extensions/commit/73eef93bc34edf8f2d03b60508f90eaefc960d33", "message": "fix for travis tests... hopefully\n\nSigned-off-by: kberg <kc@stackhawk.com>", "committedDate": "2020-06-30T21:24:45Z", "type": "forcePushed"}, {"oid": "5a9bf9104d71a4152ff4891ec0eda2a1efbc983e", "url": "https://github.com/zaproxy/zap-extensions/commit/5a9bf9104d71a4152ff4891ec0eda2a1efbc983e", "message": "no relative classpath resource\n\nSigned-off-by: kberg <kc@stackhawk.com>", "committedDate": "2020-06-30T22:02:51Z", "type": "forcePushed"}, {"oid": "4d1a4ac3c25ca9e047ddabf3aeff7bd723f24351", "url": "https://github.com/zaproxy/zap-extensions/commit/4d1a4ac3c25ca9e047ddabf3aeff7bd723f24351", "message": "Kotlin scripting support addon\n\nSigned-off-by: kberg <kc@stackhawk.com>", "committedDate": "2020-09-11T13:42:21Z", "type": "commit"}, {"oid": "4d1a4ac3c25ca9e047ddabf3aeff7bd723f24351", "url": "https://github.com/zaproxy/zap-extensions/commit/4d1a4ac3c25ca9e047ddabf3aeff7bd723f24351", "message": "Kotlin scripting support addon\n\nSigned-off-by: kberg <kc@stackhawk.com>", "committedDate": "2020-09-11T13:42:21Z", "type": "forcePushed"}]}