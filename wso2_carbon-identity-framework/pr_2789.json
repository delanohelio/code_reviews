{"pr_number": 2789, "pr_title": "Use unique userid for session management", "pr_author": "pamodaaw", "pr_createdAt": "2020-02-26T04:31:52Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2789", "timeline": [{"oid": "9e76f6beacab88a41f1739964dc2ce0919e2d79c", "url": "https://github.com/wso2/carbon-identity-framework/commit/9e76f6beacab88a41f1739964dc2ce0919e2d79c", "message": "Use unique userid for session management", "committedDate": "2020-02-26T04:34:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MTM4Mw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384281383", "body": "shall we make this tenant id, since we already have tenant id from the place we invoke this method so that we can avoid the tenant id retrieval again?", "bodyText": "shall we make this tenant id, since we already have tenant id from the place we invoke this method so that we can avoid the tenant id retrieval again?", "bodyHTML": "<p dir=\"auto\">shall we make this tenant id, since we already have tenant id from the place we invoke this method so that we can avoid the tenant id retrieval again?</p>", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:28:53Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,81 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantDomain    tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(String tenantDomain, String userStoreDomain, String username) throws", "originalCommit": "9e76f6beacab88a41f1739964dc2ce0919e2d79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MzEwMg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384283102", "bodyText": "Fixed", "author": "pamodaaw", "createdAt": "2020-02-26T05:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MTM4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MjMxNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384282317", "body": "Can you add a comment with the reason for this check?", "bodyText": "Can you add a comment with the reason for this check?", "bodyHTML": "<p dir=\"auto\">Can you add a comment with the reason for this check?</p>", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:32:58Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,81 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantDomain    tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(String tenantDomain, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        if (StringUtils.isEmpty(tenantDomain)) {\n+            throw new UserSessionException(\"User tenant domain cannot be empty.\");\n+        }\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantDomain, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {", "originalCommit": "9e76f6beacab88a41f1739964dc2ce0919e2d79c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NDM2Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384284367", "bodyText": "Added", "author": "pamodaaw", "createdAt": "2020-02-26T05:42:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MjMxNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4Njk5OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384286999", "bodyText": "Shall we change the comment like below?\nIf the user id is not present in the userstore, we need to add it to the userstore. But if the userstore is read-only, we cannot add the id and empty user id will returned.", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4MjMxNw=="}], "type": "inlineReview"}, {"oid": "9de76fff6cb20d9a93bb471e7dc7ed86f8adfa3f", "url": "https://github.com/wso2/carbon-identity-framework/commit/9de76fff6cb20d9a93bb471e7dc7ed86f8adfa3f", "message": "Use unique userid for session management", "committedDate": "2020-02-26T05:34:23Z", "type": "forcePushed"}, {"oid": "72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "url": "https://github.com/wso2/carbon-identity-framework/commit/72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "message": "Use unique userid for session management", "committedDate": "2020-02-26T05:40:44Z", "type": "commit"}, {"oid": "72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "url": "https://github.com/wso2/carbon-identity-framework/commit/72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "message": "Use unique userid for session management", "committedDate": "2020-02-26T05:40:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4Mzg4MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384283881", "body": "```suggestion\r\n                    log.debug(\"Error occurred while resolving Id for the user: \" + username, e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.debug(\"Error occurred while retrieving Id for the user: \" + username, e);\n          \n          \n            \n                                log.debug(\"Error occurred while resolving Id for the user: \" + username, e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error occurred while <span class=\"x x-first x-last\">retrieving</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    log<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error occurred while <span class=\"x x-first x-last\">resolving</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:39:59Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,78 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantId    id of the tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {\n+                        userId = addUserId(username, userStoreManager);\n+                    }\n+                    return userId;\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +\n+                            \"AbstractUserStore manager\");\n+                }\n+                throw new UserSessionException(\"Unable to get the unique id of the user: \" + username + \".\");\n+            } catch (org.wso2.carbon.user.core.UserStoreException e) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Error occurred while retrieving Id for the user: \" + username, e);", "originalCommit": "9de76fff6cb20d9a93bb471e7dc7ed86f8adfa3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4Mzk0Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384283947", "body": "```suggestion\r\n                throw new UserSessionException(\"Error occurred while resolving Id for the user: \" + username);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);\n          \n          \n            \n                            throw new UserSessionException(\"Error occurred while resolving Id for the user: \" + username);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UserSessionException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Unable to retrieve</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UserSessionException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Error occurred while resolving</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:40:15Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,78 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantId    id of the tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {\n+                        userId = addUserId(username, userStoreManager);\n+                    }\n+                    return userId;\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +\n+                            \"AbstractUserStore manager\");\n+                }\n+                throw new UserSessionException(\"Unable to get the unique id of the user: \" + username + \".\");\n+            } catch (org.wso2.carbon.user.core.UserStoreException e) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Error occurred while retrieving Id for the user: \" + username, e);\n+                }\n+                throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);", "originalCommit": "9de76fff6cb20d9a93bb471e7dc7ed86f8adfa3f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NDI3OA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384284278", "body": "```suggestion\r\n            throw new UserSessionException(\"Error occurred while retrieving the userstore manager to resolve Id for the user: \" + username);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);\n          \n          \n            \n                        throw new UserSessionException(\"Error occurred while retrieving the userstore manager to resolve Id for the user: \" + username);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UserSessionException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Unable </span>to <span class=\"x x-first x-last\">retrieve</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UserSessionException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Error occurred while retrieving the userstore manager </span>to <span class=\"x x-first x-last\">resolve</span> Id for the user: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:41:48Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,81 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantId    id of the tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+\n+                    // If only the user store is not read-only, update the user-id claim with the unique id.\n+                    // Otherwise there will be no permission to update the userstore.\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {\n+                        userId = addUserId(username, userStoreManager);\n+                    }\n+                    return userId;\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +\n+                            \"AbstractUserStore manager\");\n+                }\n+                throw new UserSessionException(\"Unable to get the unique id of the user: \" + username + \".\");\n+            } catch (org.wso2.carbon.user.core.UserStoreException e) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Error occurred while retrieving Id for the user: \" + username, e);\n+                }\n+                throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);\n+            }\n+        } catch (UserStoreException e) {\n+            throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);", "originalCommit": "72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7bfb78623fa7a140bdff132ce7a06c3be0cfb298", "url": "https://github.com/wso2/carbon-identity-framework/commit/7bfb78623fa7a140bdff132ce7a06c3be0cfb298", "message": "Update debug logs\n\nCo-Authored-By: Maduranga Siriwardena <maduranga.siriwardena@gmail.com>", "committedDate": "2020-02-26T05:44:07Z", "type": "commit"}, {"oid": "47e5ec8c1528dd2cc31786e776ad3d8107128bf2", "url": "https://github.com/wso2/carbon-identity-framework/commit/47e5ec8c1528dd2cc31786e776ad3d8107128bf2", "message": "Update error messages\n\nCo-Authored-By: Maduranga Siriwardena <maduranga.siriwardena@gmail.com>", "committedDate": "2020-02-26T05:45:05Z", "type": "commit"}, {"oid": "836abe2097598ccafde5756f42570c3e4ac209cb", "url": "https://github.com/wso2/carbon-identity-framework/commit/836abe2097598ccafde5756f42570c3e4ac209cb", "message": "Update error messages\n\nCo-Authored-By: Maduranga Siriwardena <maduranga.siriwardena@gmail.com>", "committedDate": "2020-02-26T05:45:34Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NTE5NQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384285195", "body": "```suggestion\r\n        userId = UUID.randomUUID().toString();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    userId = UUIDGenerator.generateUUID();\n          \n          \n            \n                    userId = UUID.randomUUID().toString();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        userId <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">UUIDGenerator</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">generateUUID</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        userId <span class=\"pl-k\">=</span> <span class=\"pl-c1 x x-first\">UUID</span><span class=\"pl-k x\">.</span><span class=\"x\">randomUUID()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toString</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:45:52Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,81 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantId    id of the tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+\n+                    // If only the user store is not read-only, update the user-id claim with the unique id.\n+                    // Otherwise there will be no permission to update the userstore.\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {\n+                        userId = addUserId(username, userStoreManager);\n+                    }\n+                    return userId;\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +\n+                            \"AbstractUserStore manager\");\n+                }\n+                throw new UserSessionException(\"Unable to get the unique id of the user: \" + username + \".\");\n+            } catch (org.wso2.carbon.user.core.UserStoreException e) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Error occurred while retrieving Id for the user: \" + username, e);\n+                }\n+                throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);\n+            }\n+        } catch (UserStoreException e) {\n+            throw new UserSessionException(\"Unable to retrieve Id for the user: \" + username);\n+        }\n+    }\n+\n+    private static String addUserId(String username, UserStoreManager userStoreManager) {\n+\n+        String userId;\n+        userId = UUIDGenerator.generateUUID();", "originalCommit": "72b0f6de27484bc8e696f7cd1c2c3f7d8b33989b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMjY0Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384302642", "bodyText": "This is the util method available in the user-core level. If we use the same UUID generate logic, we can customize the logic if needed, easily from one place", "author": "pamodaaw", "createdAt": "2020-02-26T06:54:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMTE0MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384311141", "bodyText": "This comes from the org.wso2.carbon.registry.core.utils package. There is no point to have a dependency to the registry from here.", "author": "madurangasiriwardena", "createdAt": "2020-02-26T07:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NTE5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyMzc0Nw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384423747", "bodyText": "Changed", "author": "pamodaaw", "createdAt": "2020-02-26T11:06:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NTE5NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NzI2NQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384287265", "body": "Since this catch block is the same as the outer one, let's remove it.", "bodyText": "Since this catch block is the same as the outer one, let's remove it.", "bodyHTML": "<p dir=\"auto\">Since this catch block is the same as the outer one, let's remove it.</p>", "author": "madurangasiriwardena", "createdAt": "2020-02-26T05:54:52Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/store/UserSessionStore.java", "diffHunk": "@@ -729,4 +729,32 @@ public void removeFederatedAuthSessionInfo(String sessionContextKey) throws User\n                     \"the session index:\" + sessionContextKey, e);\n         }\n     }\n+\n+    /**\n+     * Method to check whether the user id is available in the IDN_AUTH_USER table.\n+     *\n+     * @param userId    Id of the user\n+     * @return the boolean decision\n+     * @throws UserSessionException if an error occurs when retrieving the mapping from the database\n+     */\n+    public boolean isExistingUser(String userId) throws UserSessionException {\n+\n+        Boolean isExisting = false;\n+        try (Connection connection = IdentityDatabaseUtil.getDBConnection(false)) {\n+            try (PreparedStatement preparedStatement = connection\n+                    .prepareStatement(SQLQueries.SQL_SELECT_INFO_OF_USER_ID)) {\n+                preparedStatement.setString(1, userId);\n+                try (ResultSet resultSet = preparedStatement.executeQuery()) {\n+                    if (resultSet.next()) {\n+                        isExisting = true;\n+                    }\n+                }\n+            } catch (SQLException e1) {", "originalCommit": "836abe2097598ccafde5756f42570c3e4ac209cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI5NzY1Mg==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384297652", "bodyText": "Changed", "author": "pamodaaw", "createdAt": "2020-02-26T06:36:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NzI2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI5ODE2OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384298169", "bodyText": "Changed", "author": "pamodaaw", "createdAt": "2020-02-26T06:38:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI4NzI2NQ=="}], "type": "inlineReview"}, {"oid": "d562e4011411bd06b2786165642e54b4ed7ce99b", "url": "https://github.com/wso2/carbon-identity-framework/commit/d562e4011411bd06b2786165642e54b4ed7ce99b", "message": "Merge branch 'master' of https://github.com/wso2/carbon-identity-framework into session-mgt-feature-updated", "committedDate": "2019-07-25T02:07:51Z", "type": "forcePushed"}, {"oid": "ef2c935b509bcf5e88e570fb11ee0acef3db2f46", "url": "https://github.com/wso2/carbon-identity-framework/commit/ef2c935b509bcf5e88e570fb11ee0acef3db2f46", "message": "Merge branch 'master' of https://github.com/wso2/carbon-identity-framework", "committedDate": "2020-02-26T06:48:49Z", "type": "forcePushed"}, {"oid": "8ef75961cb68d1c022d5286aa0d76afe71e85505", "url": "https://github.com/wso2/carbon-identity-framework/commit/8ef75961cb68d1c022d5286aa0d76afe71e85505", "message": "Update exception handling when checking users in IDN_AUTH_USER table", "committedDate": "2020-02-26T06:40:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzMyNw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384427327", "body": "Let's send the caught except too", "bodyText": "Let's send the caught except too", "bodyHTML": "<p dir=\"auto\">Let's send the caught except too</p>", "author": "janakamarasena", "createdAt": "2020-02-26T11:13:29Z", "path": "components/authentication-framework/org.wso2.carbon.identity.application.authentication.framework/src/main/java/org/wso2/carbon/identity/application/authentication/framework/util/FrameworkUtils.java", "diffHunk": "@@ -2414,5 +2421,81 @@ public static FederatedAssociationManager getFederatedAssociationManager() throw\n         }\n         return federatedAssociationManager;\n     }\n-}\n \n+    /**\n+     * Retrieves the unique user id of the given username. If the unique user id is not available, generate an id and\n+     * update the userid claim in read/write userstores.\n+     *\n+     * @param tenantId    id of the tenant domain of the user\n+     * @param userStoreDomain userstore of the user\n+     * @param username        username\n+     * @return unique user id of the user\n+     * @throws UserSessionException\n+     */\n+    public static String resolveUserIdFromUsername(int tenantId, String userStoreDomain, String username) throws\n+            UserSessionException {\n+\n+        try {\n+            UserStoreManager userStoreManager = getUserStoreManager(tenantId, userStoreDomain);\n+            try {\n+                if (userStoreManager instanceof AbstractUserStoreManager) {\n+                    String userId = ((AbstractUserStoreManager) userStoreManager).getUserIDFromUserName(username);\n+\n+                    // If the user id is not present in the userstore, we need to add it to the userstore. But if the\n+                    // userstore is read-only, we cannot add the id and empty user id will returned.\n+                    if (StringUtils.isBlank(userId) && !userStoreManager.isReadOnly()) {\n+                        userId = addUserId(username, userStoreManager);\n+                    }\n+                    return userId;\n+                }\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Provided user store manager for the user: \" + username + \", is not an instance of the \" +\n+                            \"AbstractUserStore manager\");\n+                }\n+                throw new UserSessionException(\"Unable to get the unique id of the user: \" + username + \".\");\n+            } catch (org.wso2.carbon.user.core.UserStoreException e) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Error occurred while resolving Id for the user: \" + username, e);\n+                }\n+                throw new UserSessionException(\"Error occurred while resolving Id for the user: \" + username);\n+            }\n+        } catch (UserStoreException e) {\n+            throw new UserSessionException(\"Error occurred while retrieving the userstore manager to resolve Id for the user: \" + username);", "originalCommit": "c431fab50515bbda6c803ab6f1fb69305577b40f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzNjkxMw==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2789#discussion_r384436913", "bodyText": "updated", "author": "pamodaaw", "createdAt": "2020-02-26T11:34:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyNzMyNw=="}], "type": "inlineReview"}, {"oid": "6530ce7df97dc873e61e36208a82d8556ac49ddb", "url": "https://github.com/wso2/carbon-identity-framework/commit/6530ce7df97dc873e61e36208a82d8556ac49ddb", "message": "Update error handling during session management", "committedDate": "2020-02-26T11:33:01Z", "type": "commit"}, {"oid": "6530ce7df97dc873e61e36208a82d8556ac49ddb", "url": "https://github.com/wso2/carbon-identity-framework/commit/6530ce7df97dc873e61e36208a82d8556ac49ddb", "message": "Update error handling during session management", "committedDate": "2020-02-26T11:33:01Z", "type": "forcePushed"}]}