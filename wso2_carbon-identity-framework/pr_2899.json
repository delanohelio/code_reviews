{"pr_number": 2899, "pr_title": "Add new method to validate usernames", "pr_author": "mevan-karu", "pr_createdAt": "2020-04-25T06:41:30Z", "pr_url": "https://github.com/wso2/carbon-identity-framework/pull/2899", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3ODM5OQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r415678399", "body": "exceeds 120 limit.", "bodyText": "exceeds 120 limit.", "bodyHTML": "<p dir=\"auto\">exceeds 120 limit.</p>", "author": "thanujalk", "createdAt": "2020-04-27T10:00:55Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,85 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +\n+                    \". SkipSignUpCheck flag is set to \" + skipSignUpCheck + \".\");\n         }\n \n         try (CloseableHttpClient httpclient = HttpClientBuilder.create().useSystemProperties().build()) {\n-            JSONObject user = new JSONObject();\n-            user.put(USERNAME, username);\n+            JSONObject userObject = new JSONObject();\n+            userObject.put(USERNAME, user.getUsername());\n \n             JSONArray properties = new JSONArray();\n             JSONObject property = new JSONObject();\n             property.put(\n                     IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.SKIP_SIGN_UP_ENABLE_CHECK);\n             property.put(IdentityManagementEndpointConstants.VALUE, skipSignUpCheck);\n             properties.put(property);\n-            user.put(PROPERTIES, properties);\n+\n+            if (!StringUtils.isBlank(user.getTenantDomain())) {\n+                JSONObject tenantProperty = new JSONObject();\n+                tenantProperty.put(IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.TENANT_DOMAIN);", "originalCommit": "943b108b9e5b8b224944d3af95fd96872e5291fe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTc0MjU1MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r415742550", "bodyText": "Fixed", "author": "mevan-karu", "createdAt": "2020-04-27T11:45:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY3ODM5OQ=="}], "type": "inlineReview"}, {"oid": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "url": "https://github.com/wso2/carbon-identity-framework/commit/dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "message": "Add new method to validate usernames", "committedDate": "2020-04-27T11:43:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTU5MA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416335590", "body": "don't we need to set tenantDomain to the user object?", "bodyText": "don't we need to set tenantDomain to the user object?", "bodyHTML": "<p dir=\"auto\">don't we need to set tenantDomain to the user object?</p>", "author": "emswbandara", "createdAt": "2020-04-28T05:24:47Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,86 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);", "originalCommit": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNjYzMQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416336631", "bodyText": "This was the method used for preprocessed usernames. We can deprecate this method.", "author": "mevan-karu", "createdAt": "2020-04-28T05:27:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTU5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNzYzNQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416337635", "bodyText": "let's deprecate.. add the deprecate annotation and add a comment to use new method", "author": "emswbandara", "createdAt": "2020-04-28T05:30:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTU5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNTc5MQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416335791", "body": "do we need this change? ", "bodyText": "do we need this change?", "bodyHTML": "<p dir=\"auto\">do we need this change?</p>", "author": "emswbandara", "createdAt": "2020-04-28T05:25:24Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -201,7 +202,7 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     /**\n      * Checks whether a given username is valid or not.\n      *\n-     * @param username Username.\n+     * @param username", "originalCommit": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNjE5Ng==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416336196", "body": "let's use StringUtils.isNotBlank here", "bodyText": "let's use StringUtils.isNotBlank here", "bodyHTML": "<p dir=\"auto\">let's use StringUtils.isNotBlank here</p>", "author": "emswbandara", "createdAt": "2020-04-28T05:26:26Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -210,60 +211,86 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +\n+                    \". SkipSignUpCheck flag is set to \" + skipSignUpCheck + \".\");\n         }\n \n         try (CloseableHttpClient httpclient = HttpClientBuilder.create().useSystemProperties().build()) {\n-            JSONObject user = new JSONObject();\n-            user.put(USERNAME, username);\n+            JSONObject userObject = new JSONObject();\n+            userObject.put(USERNAME, user.getUsername());\n \n             JSONArray properties = new JSONArray();\n             JSONObject property = new JSONObject();\n             property.put(\n                     IdentityManagementEndpointConstants.KEY, IdentityManagementEndpointConstants.SKIP_SIGN_UP_ENABLE_CHECK);\n             property.put(IdentityManagementEndpointConstants.VALUE, skipSignUpCheck);\n             properties.put(property);\n-            user.put(PROPERTIES, properties);\n+\n+            if (!StringUtils.isBlank(user.getTenantDomain())) {", "originalCommit": "dec28eeda17af2fb7123e30e9c6cec2d6572c5e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNzQwMA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r416337400", "bodyText": "Fixed", "author": "mevan-karu", "createdAt": "2020-04-28T05:30:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzNjE5Ng=="}], "type": "inlineReview"}, {"oid": "8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "url": "https://github.com/wso2/carbon-identity-framework/commit/8f1c2a8df11e8b2ba5ba308c0733dc50410d5822", "message": "Add new method to validate usernames", "committedDate": "2020-04-28T05:29:47Z", "type": "forcePushed"}, {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "url": "https://github.com/wso2/carbon-identity-framework/commit/fab8bf14b5d42d058cade50fba707aee029a5dd2", "message": "Add new method to validate usernames", "committedDate": "2020-04-28T05:54:15Z", "type": "commit"}, {"oid": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "url": "https://github.com/wso2/carbon-identity-framework/commit/fab8bf14b5d42d058cade50fba707aee029a5dd2", "message": "Add new method to validate usernames", "committedDate": "2020-04-28T05:54:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NDg5NA==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r438154894", "body": "`@Depricated` should be changed to `@depricated`.  [1]\r\n\r\n[1] https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html", "bodyText": "@Depricated should be changed to @depricated.  [1]\n[1] https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html", "bodyHTML": "<p dir=\"auto\"><code>@Depricated</code> should be changed to <code>@depricated</code>.  [1]</p>\n<p dir=\"auto\">[1] <a href=\"https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html\" rel=\"nofollow\">https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html</a></p>", "author": "JKAUSHALYA", "createdAt": "2020-06-10T14:13:55Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -206,64 +207,92 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n      *                        tenant.\n      * @return An integer with status code.\n      * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     * @Deprecated Use {@link #checkUsernameValidity(User user, boolean skipSignUpCheck)}", "originalCommit": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxMjkzNQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r464812935", "bodyText": "Fixed in #3035", "author": "mevan-karu", "createdAt": "2020-08-04T05:45:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NDg5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NTU0Ng==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r438155546", "body": "Use the inbuilt formatting mechanism of Log4J. Use {} instead of combining strings. Update every location.", "bodyText": "Use the inbuilt formatting mechanism of Log4J. Use {} instead of combining strings. Update every location.", "bodyHTML": "<p dir=\"auto\">Use the inbuilt formatting mechanism of Log4J. Use {} instead of combining strings. Update every location.</p>", "author": "JKAUSHALYA", "createdAt": "2020-06-10T14:14:48Z", "path": "components/identity-mgt/org.wso2.carbon.identity.mgt.endpoint.util/src/main/java/org/wso2/carbon/identity/mgt/endpoint/util/client/SelfRegistrationMgtClient.java", "diffHunk": "@@ -206,64 +207,92 @@ public Integer checkUsernameValidity(String username) throws SelfRegistrationMgt\n      *                        tenant.\n      * @return An integer with status code.\n      * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     * @Deprecated Use {@link #checkUsernameValidity(User user, boolean skipSignUpCheck)}\n      */\n+    @Deprecated\n     public Integer checkUsernameValidity(String username, boolean skipSignUpCheck) throws\n             SelfRegistrationMgtClientException {\n \n+        User user = new User();\n+        user.setUsername(username);\n+        return checkUsernameValidity(user, skipSignUpCheck);\n+    }\n+\n+    /**\n+     * Validates user attributes.\n+     *\n+     * @param user User object to validate.\n+     * @param skipSignUpCheck To specify whether to enable or disable the check whether sign up is enabled for this\n+     *                        tenant.\n+     * @return An integer with status code.\n+     * @throws SelfRegistrationMgtClientException Self Registration Management Exception.\n+     */\n+    public Integer checkUsernameValidity(User user, boolean skipSignUpCheck) throws\n+            SelfRegistrationMgtClientException {\n+\n         if (log.isDebugEnabled()) {\n-            log.debug(\"Checking username validating for username: \" + username + \". SkipSignUpCheck flag is set to \"\n-                    + skipSignUpCheck + \".\");\n+            log.debug(\"Checking username validating for username: \" + user.getUsername() +", "originalCommit": "fab8bf14b5d42d058cade50fba707aee029a5dd2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDgxMjk2NQ==", "url": "https://github.com/wso2/carbon-identity-framework/pull/2899#discussion_r464812965", "bodyText": "Fixed in #3035", "author": "mevan-karu", "createdAt": "2020-08-04T05:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NTU0Ng=="}], "type": "inlineReview"}]}