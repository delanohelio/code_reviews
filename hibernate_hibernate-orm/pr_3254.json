{"pr_number": 3254, "pr_title": "HHH-12338 - Incorrect metamodel for basic collections", "pr_author": "vladmihalcea", "pr_createdAt": "2020-02-21T08:14:18Z", "pr_url": "https://github.com/hibernate/hibernate-orm/pull/3254", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382602446", "body": "One-shot usage of `TypeUtils.containsAnnotation(Element, String)` is okay, but multiple invocations won't be as efficient as\r\n```\r\nAnnotationMirror annotationMirrors =  element.getAnnotationMirrors();\r\n// go about checking based on one-pass on the `AnnotationMirror` collection using methods from TypeUtil\r\n```\r\n\r\nFurthermore, I do think we can reformat the above code in some way to improve readability. For instance, I spent quite some time figuring out how the parenthesis pairs match up above.\r\nIgnore the performance concern if irrelevant; but I do think we can improve the code as following\r\n```\r\nif ( TypeUtils.containsAnnotation( element, Constants.CONVERT, Constants.HIBERNATE_TYPE ) && ! TypeUtils.containsAnnotation( element, Constants.ONE_TO_MANY, Constants.MANY_TO_MANY, Constants.ELEMENT_COLLECTION) ) {\r\n... ...\r\n}\r\n```\r\nprovided performance concern could be ignored", "bodyText": "One-shot usage of TypeUtils.containsAnnotation(Element, String) is okay, but multiple invocations won't be as efficient as\nAnnotationMirror annotationMirrors =  element.getAnnotationMirrors();\n// go about checking based on one-pass on the `AnnotationMirror` collection using methods from TypeUtil\n\nFurthermore, I do think we can reformat the above code in some way to improve readability. For instance, I spent quite some time figuring out how the parenthesis pairs match up above.\nIgnore the performance concern if irrelevant; but I do think we can improve the code as following\nif ( TypeUtils.containsAnnotation( element, Constants.CONVERT, Constants.HIBERNATE_TYPE ) && ! TypeUtils.containsAnnotation( element, Constants.ONE_TO_MANY, Constants.MANY_TO_MANY, Constants.ELEMENT_COLLECTION) ) {\n... ...\n}\n\nprovided performance concern could be ignored", "bodyHTML": "<p dir=\"auto\">One-shot usage of <code>TypeUtils.containsAnnotation(Element, String)</code> is okay, but multiple invocations won't be as efficient as</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"AnnotationMirror annotationMirrors =  element.getAnnotationMirrors();\n// go about checking based on one-pass on the `AnnotationMirror` collection using methods from TypeUtil\n\"><pre><code>AnnotationMirror annotationMirrors =  element.getAnnotationMirrors();\n// go about checking based on one-pass on the `AnnotationMirror` collection using methods from TypeUtil\n</code></pre></div>\n<p dir=\"auto\">Furthermore, I do think we can reformat the above code in some way to improve readability. For instance, I spent quite some time figuring out how the parenthesis pairs match up above.<br>\nIgnore the performance concern if irrelevant; but I do think we can improve the code as following</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if ( TypeUtils.containsAnnotation( element, Constants.CONVERT, Constants.HIBERNATE_TYPE ) &amp;&amp; ! TypeUtils.containsAnnotation( element, Constants.ONE_TO_MANY, Constants.MANY_TO_MANY, Constants.ELEMENT_COLLECTION) ) {\n... ...\n}\n\"><pre><code>if ( TypeUtils.containsAnnotation( element, Constants.CONVERT, Constants.HIBERNATE_TYPE ) &amp;&amp; ! TypeUtils.containsAnnotation( element, Constants.ONE_TO_MANY, Constants.MANY_TO_MANY, Constants.ELEMENT_COLLECTION) ) {\n... ...\n}\n</code></pre></div>\n<p dir=\"auto\">provided performance concern could be ignored</p>", "author": "NathanQingyangXu", "createdAt": "2020-02-21T14:14:27Z", "path": "tooling/metamodel-generator/src/main/java/org/hibernate/jpamodelgen/annotation/MetaAttributeGenerationVisitor.java", "diffHunk": "@@ -138,6 +138,16 @@ private AnnotationMetaAttribute createMetaCollectionAttribute(DeclaredType decla\n \t\t\t\taccessTypeInfo.setDefaultAccessType( entity.getEntityAccessTypeInfo().getAccessType() );\n \t\t\t}\n \t\t}\n+\t\tif (( TypeUtils.containsAnnotation( element, Constants.CONVERT ) ||\n+\t\t\t\tTypeUtils.containsAnnotation( element, Constants.HIBERNATE_TYPE ) ) &&\n+\t\t\t\t!isCollectionAssociation( element )\n+\t\t) {", "originalCommit": "c10d266ffa51b9a50d3617ee641d8005f6fd6451", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwOTk2NQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382609965", "bodyText": "Sure thing. Feel free to modify it any way you want and push the commit.", "author": "vladmihalcea", "createdAt": "2020-02-21T14:28:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYzNTExNg==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382635116", "bodyText": "I don't think I have such rights, but I can create a PR after yours is merged.", "author": "NathanQingyangXu", "createdAt": "2020-02-21T15:12:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0Mzg0Nw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382643847", "bodyText": "I think you can fork my repository, and your change and send a Pull Request.", "author": "vladmihalcea", "createdAt": "2020-02-21T15:28:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY3NzQ1OQ==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382677459", "bodyText": "Thanks for the tip, but I would approve the PR if you made the code cleaning as I proposed, :).", "author": "NathanQingyangXu", "createdAt": "2020-02-21T16:25:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDk5OA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382684998", "bodyText": "I don't know exactly what changes you want to make, so it's better if you cherry-pick my commit, add your changes and submit a new PR to the main fork.\nI'll close my PR once you do that.", "author": "vladmihalcea", "createdAt": "2020-02-21T16:39:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcwNjEwNw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382706107", "bodyText": "Sorry for the misunderstanding. I think\nif (( TypeUtils.containsAnnotation( element, Constants.CONVERT ) ||\n\t\t\t\tTypeUtils.containsAnnotation( element, Constants.HIBERNATE_TYPE ) ) &&\n\t\t\t\t!isCollectionAssociation( element )\n\t\t) {\n\ncould be simplified dramatically by\nif ( TypeUtils.containsAnnotation( element, Constants.CONVERT, Constants.HIBERNATE_TYPE ) && ! TypeUtils.containsAnnotation( element, Constants.ONE_TO_MANY, Constants.MANY_TO_MANY, Constants.ELEMENT_COLLECTION) ) {", "author": "NathanQingyangXu", "createdAt": "2020-02-21T17:20:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NjA1Mw==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382746053", "bodyText": "@NathanQingyangXu I pushed a new commit based on your changes.", "author": "vladmihalcea", "createdAt": "2020-02-21T18:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NTYzMA==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r382755630", "bodyText": "thanks. I approved. I would let other reviewer focus on business logic stuff.", "author": "NathanQingyangXu", "createdAt": "2020-02-21T19:09:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjYwMjQ0Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3ODE4Ng==", "url": "https://github.com/hibernate/hibernate-orm/pull/3254#discussion_r503778186", "body": "I don't think this is according to the JPA specification, but I didn't look into it to find a reference. My gut tells me, this should be fixed by annotating the target attribute with `@Basic` so IMO it should look like the following:\r\n\r\n```suggestion\r\n\t\tif ( TypeUtils.containsAnnotation(\r\n\t\t\t\telement,\r\n\t\t\t\tConstants.CONVERT,\r\n\t\t\t\tConstants.HIBERNATE_TYPE,\r\n\t\t\t\tConstants.BASIC\r\n\t\t) ) {\r\n\t\t\treturn new AnnotationMetaSingleAttribute(\r\n\t\t\t\t\tentity,\r\n\t\t\t\t\telement,\r\n\t\t\t\t\tTypeUtils.toTypeString( declaredType )\r\n\t\t\t);\r\n\t\t}\r\n```", "bodyText": "I don't think this is according to the JPA specification, but I didn't look into it to find a reference. My gut tells me, this should be fixed by annotating the target attribute with @Basic so IMO it should look like the following:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif ( TypeUtils.containsAnnotation(\n          \n          \n            \n            \t\t\t\telement,\n          \n          \n            \n            \t\t\t\tConstants.CONVERT,\n          \n          \n            \n            \t\t\t\tConstants.HIBERNATE_TYPE\n          \n          \n            \n            \t\t) && !TypeUtils.containsAnnotation(\n          \n          \n            \n            \t\t\t\telement,\n          \n          \n            \n            \t\t\t\tConstants.ONE_TO_MANY,\n          \n          \n            \n            \t\t\t\tConstants.MANY_TO_MANY,\n          \n          \n            \n            \t\t\t\tConstants.ELEMENT_COLLECTION\n          \n          \n            \n            \t\t) ) {\n          \n          \n            \n            \t\t\treturn new AnnotationMetaSingleAttribute(\n          \n          \n            \n            \t\t\t\t\tentity,\n          \n          \n            \n            \t\t\t\t\telement,\n          \n          \n            \n            \t\t\t\t\tTypeUtils.toTypeString( declaredType )\n          \n          \n            \n            \t\t\t);\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tif ( TypeUtils.containsAnnotation(\n          \n          \n            \n            \t\t\t\telement,\n          \n          \n            \n            \t\t\t\tConstants.CONVERT,\n          \n          \n            \n            \t\t\t\tConstants.HIBERNATE_TYPE,\n          \n          \n            \n            \t\t\t\tConstants.BASIC\n          \n          \n            \n            \t\t) ) {\n          \n          \n            \n            \t\t\treturn new AnnotationMetaSingleAttribute(\n          \n          \n            \n            \t\t\t\t\tentity,\n          \n          \n            \n            \t\t\t\t\telement,\n          \n          \n            \n            \t\t\t\t\tTypeUtils.toTypeString( declaredType )\n          \n          \n            \n            \t\t\t);\n          \n          \n            \n            \t\t}", "bodyHTML": "<p dir=\"auto\">I don't think this is according to the JPA specification, but I didn't look into it to find a reference. My gut tells me, this should be fixed by annotating the target attribute with <code>@Basic</code> so IMO it should look like the following:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"157\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">if</span> ( <span class=\"pl-smi\">TypeUtils</span><span class=\"pl-k\">.</span>containsAnnotation(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\telement,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONVERT</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>HIBERNATE_TYPE</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span><span class=\"pl-smi\">TypeUtils</span><span class=\"pl-k\">.</span>containsAnnotation(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\telement,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ONE_TO_MANY</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"164\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MANY_TO_MANY</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ELEMENT_COLLECTION</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t) ) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AnnotationMetaSingleAttribute</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\tentity,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"169\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\telement,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"170\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t<span class=\"pl-smi\">TypeUtils</span><span class=\"pl-k\">.</span>toTypeString( declaredType )</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"171\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"172\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"157\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">if</span> ( <span class=\"pl-smi\">TypeUtils</span><span class=\"pl-k\">.</span>containsAnnotation(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\telement,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CONVERT</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>HIBERNATE_TYPE</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-smi\">Constants</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>BASIC</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t) ) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AnnotationMetaSingleAttribute</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"164\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\tentity,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\telement,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t<span class=\"pl-smi\">TypeUtils</span><span class=\"pl-k\">.</span>toTypeString( declaredType )</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "beikov", "createdAt": "2020-10-13T08:50:22Z", "path": "tooling/metamodel-generator/src/main/java/org/hibernate/jpamodelgen/annotation/MetaAttributeGenerationVisitor.java", "diffHunk": "@@ -138,6 +138,22 @@ private AnnotationMetaAttribute createMetaCollectionAttribute(DeclaredType decla\n \t\t\t\taccessTypeInfo.setDefaultAccessType( entity.getEntityAccessTypeInfo().getAccessType() );\n \t\t\t}\n \t\t}\n+\t\tif ( TypeUtils.containsAnnotation(\n+\t\t\t\telement,\n+\t\t\t\tConstants.CONVERT,\n+\t\t\t\tConstants.HIBERNATE_TYPE\n+\t\t) && !TypeUtils.containsAnnotation(\n+\t\t\t\telement,\n+\t\t\t\tConstants.ONE_TO_MANY,\n+\t\t\t\tConstants.MANY_TO_MANY,\n+\t\t\t\tConstants.ELEMENT_COLLECTION\n+\t\t) ) {\n+\t\t\treturn new AnnotationMetaSingleAttribute(\n+\t\t\t\t\tentity,\n+\t\t\t\t\telement,\n+\t\t\t\t\tTypeUtils.toTypeString( declaredType )\n+\t\t\t);\n+\t\t}", "originalCommit": "12f4244f78d22f2ebbc03f25b7ef26f9728cb847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "abd55044946e6e6d4a252b2aad4f2411482df7aa", "url": "https://github.com/hibernate/hibernate-orm/commit/abd55044946e6e6d4a252b2aad4f2411482df7aa", "message": "HHH-12338 - Incorrect metamodel for basic collections", "committedDate": "2021-03-04T11:29:37Z", "type": "commit"}, {"oid": "abd55044946e6e6d4a252b2aad4f2411482df7aa", "url": "https://github.com/hibernate/hibernate-orm/commit/abd55044946e6e6d4a252b2aad4f2411482df7aa", "message": "HHH-12338 - Incorrect metamodel for basic collections", "committedDate": "2021-03-04T11:29:37Z", "type": "forcePushed"}]}