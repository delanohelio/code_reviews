{"pr_number": 979, "pr_title": "Resolves #949: Useful system keys should be exposed through a more useful API", "pr_author": "alecgrieser", "pr_createdAt": "2020-06-18T23:27:53Z", "pr_url": "https://github.com/FoundationDB/fdb-record-layer/pull/979", "timeline": [{"oid": "c8540e1900b689e00db959ffea2e0475e726b119", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/c8540e1900b689e00db959ffea2e0475e726b119", "message": "Resolves #949: Useful system keys should be exposed through a more useful API\n\nThis creates a new set of constants for the system keys that we care about, and then it changes the instances\nthat were already referencing system keys, and then I added a new class, `FDBSystemOperations`, that allows\na user to use these features.\n\nI'm not...super happy with this API, though. Unlike many operations, it wasn't sufficient to provide a context\nfor some of these operations, as you might need to set some extra options. But then to provide the user\na way to provide their own retry policies (and things like a timer, etc.), it felt like the least bad way\nto pass that information, though we don't use a runner like this in other contexts.\n\nThis resolves #949.", "committedDate": "2020-06-19T01:17:09Z", "type": "forcePushed"}, {"oid": "93a566f74e2463881b11fcf03abd4ca591ab2884", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/93a566f74e2463881b11fcf03abd4ca591ab2884", "message": "Resolves #949: Useful system keys should be exposed through a more useful API\n\nThis creates a new set of constants for the system keys that we care about, and then it changes the instances\nthat were already referencing system keys, and then I added a new class, `FDBSystemOperations`, that allows\na user to use these features.\n\nI'm not...super happy with this API, though. Unlike many operations, it wasn't sufficient to provide a context\nfor some of these operations, as you might need to set some extra options. But then to provide the user\na way to provide their own retry policies (and things like a timer, etc.), it felt like the least bad way\nto pass that information, though we don't use a runner like this in other contexts.\n\nThis resolves #949.", "committedDate": "2021-02-03T17:25:58Z", "type": "commit"}, {"oid": "93a566f74e2463881b11fcf03abd4ca591ab2884", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/93a566f74e2463881b11fcf03abd4ca591ab2884", "message": "Resolves #949: Useful system keys should be exposed through a more useful API\n\nThis creates a new set of constants for the system keys that we care about, and then it changes the instances\nthat were already referencing system keys, and then I added a new class, `FDBSystemOperations`, that allows\na user to use these features.\n\nI'm not...super happy with this API, though. Unlike many operations, it wasn't sufficient to provide a context\nfor some of these operations, as you might need to set some extra options. But then to provide the user\na way to provide their own retry policies (and things like a timer, etc.), it felt like the least bad way\nto pass that information, though we don't use a runner like this in other contexts.\n\nThis resolves #949.", "committedDate": "2021-02-03T17:25:58Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTY3NDYyNg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r569674626", "body": "I agree that these methods have a weird-feeling signature.\r\n\r\nHow about making `newRunner()` a `FunctionalInterface` implemented by `FDBDatabase` and `FDBRecordContext` and taking one of those?", "bodyText": "I agree that these methods have a weird-feeling signature.\nHow about making newRunner() a FunctionalInterface implemented by FDBDatabase and FDBRecordContext and taking one of those?", "bodyHTML": "<p dir=\"auto\">I agree that these methods have a weird-feeling signature.</p>\n<p dir=\"auto\">How about making <code>newRunner()</code> a <code>FunctionalInterface</code> implemented by <code>FDBDatabase</code> and <code>FDBRecordContext</code> and taking one of those?</p>", "author": "MMcM", "createdAt": "2021-02-03T19:07:52Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwODQxNg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574708416", "bodyText": "I think if you create an interface (TransactionalRunner maybe?):\npublic interface TransactionalRunner {\n    public CompletableFuture<T> runAsync(@Nonnull Function<? super FDBRecordContext, ? extends T> retriable);\n    public T run(@Nonnull Function<? super FDBRecordContext, ? extends T> retriable);\n}\n\nand have both FDBRecordContext and FDBDatabaseRunner implement that interface, you could clean this up a lot.\nI'm also starting to feel like we should drop the convention of having methods that join on any classes in the record layer, and it is always the responsibility of the user to join the futures that the record layer returns, but that's a pretty major change in API, and should probably be agreed upon, and then done everywhere, at once, as a major version change, so this class should maintain the current convention.", "author": "ScottDugas", "createdAt": "2021-02-11T17:55:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTY3NDYyNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg2NDk2NQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574864965", "bodyText": "Hmm, yeah, something like that might make sense, though I'm hesitant to add a whole new interface like that as part of this PR. For now, I went with something simpler, namely I removed all of the public methods that take an FDBRecordContext and now the only methods that this class takes are FDBDatabaseRunners, which simplifies this a bit, and for these methods, is actually the same efficiency as the \"reads\" don't require a real database read (and therefore an FDB read version (I don't think). It also seems like something we could add later if I'm wrong about that.", "author": "alecgrieser", "createdAt": "2021-02-11T22:16:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTY3NDYyNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY4MjQyNg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574682426", "body": "It took me a few tries to untangle the sub-clauses in this comment, so I'm going to propose a different wording (feel free to disagree about the conjugation of verbs relating to \"data\").\r\n```suggestion\r\n     * The prefix under which \"special\" keys live. The data in the range {@code \\xff\\xff} does not \"really\" exist,\r\n     * but instead acts as instructions to the client used to retrieve some special information.\r\n     * For example, they might be used to read and return client configuration information. They\r\n     * may not read any actual data from the database or (sometimes) even make any network calls at all.\r\n     * Note: This is in contrast to the rest of {@code \\xff}, which is stored in the database, but is off limits to\r\n     * regular client operations. \r\n     */\r\n```", "bodyText": "It took me a few tries to untangle the sub-clauses in this comment, so I'm going to propose a different wording (feel free to disagree about the conjugation of verbs relating to \"data\").\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The prefix under which \"special\" keys live. Unlike the data in the range [{@code \\xff}, {@code \\xff\\xff}), which\n          \n          \n            \n                 * are stored in the database but are just off limits to regular client operations, the keys prefixed with\n          \n          \n            \n                 * {@code \\xff\\xff} don't \"really\" exist, but they are instead instructions to the client used to retrieve some\n          \n          \n            \n                 * special information. For example, they might be used to read and return client configuration information. They\n          \n          \n            \n                 * may not read any actual data from the database or (sometimes) even make any network calls at all.\n          \n          \n            \n                 */\n          \n          \n            \n                 * The prefix under which \"special\" keys live. The data in the range {@code \\xff\\xff} does not \"really\" exist,\n          \n          \n            \n                 * but instead acts as instructions to the client used to retrieve some special information.\n          \n          \n            \n                 * For example, they might be used to read and return client configuration information. They\n          \n          \n            \n                 * may not read any actual data from the database or (sometimes) even make any network calls at all.\n          \n          \n            \n                 * Note: This is in contrast to the rest of {@code \\xff}, which is stored in the database, but is off limits to\n          \n          \n            \n                 * regular client operations. \n          \n          \n            \n                 */", "bodyHTML": "<p dir=\"auto\">It took me a few tries to untangle the sub-clauses in this comment, so I'm going to propose a different wording (feel free to disagree about the conjugation of verbs relating to \"data\").</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">The</span> prefix under which <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>special<span class=\"pl-pds\">\"</span></span> keys live. <span class=\"pl-smi\">Unlike</span> the data in the range [{<span class=\"pl-k\">@code</span> \\xff}, {<span class=\"pl-k\">@code</span> \\xff\\xff}), which</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> are stored in the database but are just off limits to regular client operations, the keys prefixed with</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> {<span class=\"pl-k\">@code</span> \\xff\\xff} don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t \"really\" exist, but they are instead instructions to the client used to retrieve some</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> special information. <span class=\"pl-smi\">For</span> example, they might be used to read and <span class=\"pl-k\">return</span> client configuration information. <span class=\"pl-smi\">They</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> may not read any actual data from the database or (sometimes) even make any network calls at all.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">The</span> prefix under which <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>special<span class=\"pl-pds\">\"</span></span> keys live. <span class=\"pl-smi\">The</span> data in the range {<span class=\"pl-k\">@code</span> \\xff\\xff} does not <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>really<span class=\"pl-pds\">\"</span></span> exist,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> but instead acts as instructions to the client used to retrieve some special information.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">For</span> example, they might be used to read and <span class=\"pl-k\">return</span> client configuration information. <span class=\"pl-smi\">They</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> may not read any actual data from the database or (sometimes) even make any network calls at all.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Note</span><span class=\"pl-k\">:</span> <span class=\"pl-smi\">This</span> is in contrast to the rest of {<span class=\"pl-k\">@code</span> \\xff}, which is stored in the database, but is off limits to</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> regular client operations. </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T17:18:33Z", "path": "fdb-extensions/src/main/java/com/apple/foundationdb/system/SystemKeyspace.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * SystemKeyspace.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.system;\n+\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.annotation.SpotBugsSuppressWarnings;\n+import com.apple.foundationdb.tuple.ByteArrayUtil;\n+\n+import javax.annotation.Nonnull;\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * Keys living in the FDB system and special keyspace. These keys are used to communicate system configuration\n+ * information and related information between the FoundationDB server and client. This API is {@link API.Status#INTERNAL}\n+ * and should not be consumed directly by adopters. They should instead generally be referenced through wrapper\n+ * functions that exist in this project and in the Record Layer core project.\n+ *\n+ * <p>\n+ * There is currently a project to provide a framework for FoundationDB clients to make use of the special\n+ * key space API. As that project develops, this class may become unnecessary. See:\n+ * <a href=\"https://github.com/apple/foundationdb/blob/master/design/special-key-space.md\">Special-Key-Space</a>.\n+ * </p>\n+ */\n+@SpotBugsSuppressWarnings(value = \"MS_MUTABLE_ARRAY\", justification = \"array copying is expensive\")\n+@API(API.Status.INTERNAL)\n+public class SystemKeyspace {\n+\n+    // Key prefixes for the various system and special key subspaces\n+\n+    /**\n+     * The prefix under which all FDB system and special data live. Regular user operations typically cannot read keys\n+     * with this prefix unless they set special options except in special circumstances.\n+     */\n+    private static final byte[] SYSTEM_PREFIX = {(byte)0xff};\n+\n+    /**\n+     * The prefix under which FDB system data that is sharded like regular data lives. The data in the FDB system\n+     * keyspace that begins with {@code \\xff} but not {@code \\xff\\x02} is handled somewhat specially as certain database\n+     * operations rely on knowing the contents during recoveries, etc. However, because those data are not sharded, they\n+     * are fundamentally limited in size. So, to allow for more system data to be stored in FDB, the {@code \\xff\\x02}\n+     * keyspace exists, which are handled more like regular data (in that placement and shard splitting or merging are\n+     * handled by the data distributor). For a client, this is mostly just trivia, but it seems necessary to explain why\n+     * certain keys are prefixed like this.\n+     */\n+    private static final byte[] SYSTEM_2_PREFIX = {(byte)0xff, 0x02};\n+\n+    /**\n+     * The prefix under which \"special\" keys live. Unlike the data in the range [{@code \\xff}, {@code \\xff\\xff}), which\n+     * are stored in the database but are just off limits to regular client operations, the keys prefixed with\n+     * {@code \\xff\\xff} don't \"really\" exist, but they are instead instructions to the client used to retrieve some\n+     * special information. For example, they might be used to read and return client configuration information. They\n+     * may not read any actual data from the database or (sometimes) even make any network calls at all.\n+     */", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY4NTE3Ng==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574685176", "body": "```suggestion\r\n * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n          \n          \n            \n             * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2020</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2021</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T17:22:19Z", "path": "fdb-extensions/src/main/java/com/apple/foundationdb/system/SystemKeyspace.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * SystemKeyspace.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY4NTI4MA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574685280", "body": "```suggestion\r\n * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n          \n          \n            \n             * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2020</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2021</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T17:22:27Z", "path": "fdb-extensions/src/main/java/com/apple/foundationdb/system/package-info.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * package-info.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDY5NDM4Ng==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574694386", "body": "```suggestion\r\n     * of the datacenter currently serving as the primary, which (by definition) is where the transaction\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * of the datacenter currently serving as the primary, which is (by definition) is where the transaction\n          \n          \n            \n                 * of the datacenter currently serving as the primary, which (by definition) is where the transaction", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> of the datacenter currently serving as the primary, which <span class=\"x x-first x-last\">is </span>(by definition) is where the transaction</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> of the datacenter currently serving as the primary, which (by definition) is where the transaction</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T17:35:16Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {\n+\n+    @Nullable\n+    private static String nullableUtf8(@Nullable byte[] bytes) {\n+        return bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBRecordContext context, @Nonnull CompletableFuture<T> operation) {\n+        return context.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBDatabaseRunner runner, @Nonnull CompletableFuture<T> operation) {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This will return the datacenter ID (if set)\n+     * of the datacenter currently serving as the primary, which is (by definition) is where the transaction", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwODc3Mg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574708772", "body": "What would it mean for this to be `null`?", "bodyText": "What would it mean for this to be null?", "bodyHTML": "<p dir=\"auto\">What would it mean for this to be <code>null</code>?</p>", "author": "ScottDugas", "createdAt": "2021-02-11T17:55:42Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {\n+\n+    @Nullable\n+    private static String nullableUtf8(@Nullable byte[] bytes) {\n+        return bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBRecordContext context, @Nonnull CompletableFuture<T> operation) {\n+        return context.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBDatabaseRunner runner, @Nonnull CompletableFuture<T> operation) {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This will return the datacenter ID (if set)\n+     * of the datacenter currently serving as the primary, which is (by definition) is where the transaction\n+     * subsystem will be recruited. This is mostly relevant for\n+     * <a href=\"https://apple.github.io/foundationdb/configuration.html#configuring-regions\">multi-region configurations</a>,\n+     * where this value might change if the cluster decides that it needs to fail over to a secondary region. The returned\n+     * datacenter ID will be {@code null} if the server's datacenter has not been set.\n+     *\n+     * <p>\n+     * Note that this operation must read this information from the database's storage and uses its own transaction.\n+     * </p>\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will complete with the primary datacenter of the cluster for the database underlying {@code runner}\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getPrimaryDatacenterAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(context -> {\n+            final Transaction tr = context.ensureActive();\n+            tr.options().setReadSystemKeys();\n+            return tr.get(SystemKeyspace.PRIMARY_DATACENTER_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+        });\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This is a blocking version of\n+     * {@link #getPrimaryDatacenterAsync(FDBDatabaseRunner)}.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the primary datacenter of the database underlying {@code runner}\n+     */\n+    @Nullable\n+    public static String getPrimaryDatacenter(@Nonnull FDBDatabaseRunner runner) {\n+        return asyncToSync(runner, getPrimaryDatacenterAsync(runner));\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This string essentially contains the contents of\n+     * the cluster file, though it may change if the cluster's coordinators change. Note that even though this\n+     * operation requires having a database connection (in the transaction) and returns a future (as the client\n+     * may schedule to complete the work at a later time), it does not actually perform any network calls but reads\n+     * the value from the client's local memory.\n+     *\n+     * <p>\n+     * For more information, see the documentation on the\n+     * <a href=\"https://apple.github.io/foundationdb/administration.html#cluster-file-format\">cluster file format</a>\n+     * in the FoundationDB documentation.\n+     * </p>\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return a future that will contain the current cluster connection string\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getConnectionStringAsync(@Nonnull FDBRecordContext context) {\n+        return context.ensureActive().get(SystemKeyspace.CONNECTION_STR_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This operates like\n+     * {@link #getConnectionStringAsync(FDBRecordContext)}, but it will use the provided runner to create a new\n+     * transaction and retry if necessary.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will contain the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBRecordContext)\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getConnectionStringAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(FDBSystemOperations::getConnectionStringAsync);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This is a synchronous version of\n+     * {@link #getConnectionStringAsync(FDBRecordContext)}\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBRecordContext)\n+     */\n+    @Nullable", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg0OTExNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574849114", "bodyText": "I was trying to figure that out. Unfortunately, it doesn't seem to be documented (see: https://github.com/apple/foundationdb/blob/master/design/special-key-space.md) if they can be null, so I left this as @Nullable under the theory that it would be better to be @Nullable and wrong than @Nonnull and wrong. I can try and ask around", "author": "alecgrieser", "createdAt": "2021-02-11T21:46:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwODc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwOTA2MQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574709061", "body": "What would it mean for this to be `null`", "bodyText": "What would it mean for this to be null", "bodyHTML": "<p dir=\"auto\">What would it mean for this to be <code>null</code></p>", "author": "ScottDugas", "createdAt": "2021-02-11T17:56:07Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {\n+\n+    @Nullable\n+    private static String nullableUtf8(@Nullable byte[] bytes) {\n+        return bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBRecordContext context, @Nonnull CompletableFuture<T> operation) {\n+        return context.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBDatabaseRunner runner, @Nonnull CompletableFuture<T> operation) {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This will return the datacenter ID (if set)\n+     * of the datacenter currently serving as the primary, which is (by definition) is where the transaction\n+     * subsystem will be recruited. This is mostly relevant for\n+     * <a href=\"https://apple.github.io/foundationdb/configuration.html#configuring-regions\">multi-region configurations</a>,\n+     * where this value might change if the cluster decides that it needs to fail over to a secondary region. The returned\n+     * datacenter ID will be {@code null} if the server's datacenter has not been set.\n+     *\n+     * <p>\n+     * Note that this operation must read this information from the database's storage and uses its own transaction.\n+     * </p>\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will complete with the primary datacenter of the cluster for the database underlying {@code runner}\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getPrimaryDatacenterAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(context -> {\n+            final Transaction tr = context.ensureActive();\n+            tr.options().setReadSystemKeys();\n+            return tr.get(SystemKeyspace.PRIMARY_DATACENTER_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+        });\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This is a blocking version of\n+     * {@link #getPrimaryDatacenterAsync(FDBDatabaseRunner)}.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the primary datacenter of the database underlying {@code runner}\n+     */\n+    @Nullable\n+    public static String getPrimaryDatacenter(@Nonnull FDBDatabaseRunner runner) {\n+        return asyncToSync(runner, getPrimaryDatacenterAsync(runner));\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This string essentially contains the contents of\n+     * the cluster file, though it may change if the cluster's coordinators change. Note that even though this\n+     * operation requires having a database connection (in the transaction) and returns a future (as the client\n+     * may schedule to complete the work at a later time), it does not actually perform any network calls but reads\n+     * the value from the client's local memory.\n+     *\n+     * <p>\n+     * For more information, see the documentation on the\n+     * <a href=\"https://apple.github.io/foundationdb/administration.html#cluster-file-format\">cluster file format</a>\n+     * in the FoundationDB documentation.\n+     * </p>\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return a future that will contain the current cluster connection string\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getConnectionStringAsync(@Nonnull FDBRecordContext context) {\n+        return context.ensureActive().get(SystemKeyspace.CONNECTION_STR_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This operates like\n+     * {@link #getConnectionStringAsync(FDBRecordContext)}, but it will use the provided runner to create a new\n+     * transaction and retry if necessary.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will contain the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBRecordContext)\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getConnectionStringAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(FDBSystemOperations::getConnectionStringAsync);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This is a synchronous version of\n+     * {@link #getConnectionStringAsync(FDBRecordContext)}\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBRecordContext)\n+     */\n+    @Nullable\n+    public static String getConnectionString(@Nonnull FDBRecordContext context) {\n+        return asyncToSync(context, getConnectionStringAsync(context));\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This is a synchronous version of\n+     * {@link #getConnectionStringAsync(FDBDatabaseRunner)}\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBDatabaseRunner)\n+     * @see #getConnectionStringAsync(FDBRecordContext)\n+     */\n+    @Nullable\n+    public static String getConnectionString(@Nonnull FDBDatabaseRunner runner) {\n+        return asyncToSync(runner, getConnectionStringAsync(runner));\n+    }\n+\n+    /**\n+     * Get the file system path to the cluster file used. Note that this differs from the value that is returned by\n+     * {@link FDBDatabase#getClusterFile()} in that that function may return {@code null} if the cluster file is set to\n+     * the system default. This function, however, requests the information from the native client, and so it will\n+     * return the resolved cluster file (e.g., returning the path to the system default instead of {@code null}).\n+     * Note that even though this operation returns a future, it does not need to perform any network calls but instead\n+     * answers this question from the client's local memory.\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return a future that will contain the cluster file path\n+     * @see FDBDatabase#getClusterFile()\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getClusterFilePathAsync(@Nonnull FDBRecordContext context) {\n+        return context.ensureActive().get(SystemKeyspace.CLUSTER_FILE_PATH_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+    }\n+\n+    /**\n+     * Get the file system path to the cluster file used. This operates like\n+     * {@link #getClusterFilePathAsync(FDBRecordContext)}, but it will use the provided runner to create a transaction\n+     * and to handle performing any retries (if necessary).\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will contain the cluster file path\n+     * @see #getClusterFilePathAsync(FDBRecordContext)\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getClusterFilePathAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(FDBSystemOperations::getClusterFilePathAsync);\n+    }\n+\n+    /**\n+     * Get the file system path to the cluster file used. This is a synchronous version of\n+     * {@link #getClusterFilePathAsync(FDBRecordContext)}.\n+     *\n+     * @param context a transaction to use to perform the operation\n+     * @return the cluster file path\n+     * @see #getClusterFilePathAsync(FDBRecordContext)\n+     */\n+    @Nullable", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg2NzQ2OA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574867468", "bodyText": "Same response as to https://github.com/FoundationDB/fdb-record-layer/pull/979/files#r574708772", "author": "alecgrieser", "createdAt": "2021-02-11T22:21:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwOTA2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwOTIzNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574709234", "body": "what would it mean for this to be `null`", "bodyText": "what would it mean for this to be null", "bodyHTML": "<p dir=\"auto\">what would it mean for this to be <code>null</code></p>", "author": "ScottDugas", "createdAt": "2021-02-11T17:56:22Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {\n+\n+    @Nullable\n+    private static String nullableUtf8(@Nullable byte[] bytes) {\n+        return bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBRecordContext context, @Nonnull CompletableFuture<T> operation) {\n+        return context.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBDatabaseRunner runner, @Nonnull CompletableFuture<T> operation) {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This will return the datacenter ID (if set)\n+     * of the datacenter currently serving as the primary, which is (by definition) is where the transaction\n+     * subsystem will be recruited. This is mostly relevant for\n+     * <a href=\"https://apple.github.io/foundationdb/configuration.html#configuring-regions\">multi-region configurations</a>,\n+     * where this value might change if the cluster decides that it needs to fail over to a secondary region. The returned\n+     * datacenter ID will be {@code null} if the server's datacenter has not been set.\n+     *\n+     * <p>\n+     * Note that this operation must read this information from the database's storage and uses its own transaction.\n+     * </p>\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will complete with the primary datacenter of the cluster for the database underlying {@code runner}\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getPrimaryDatacenterAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(context -> {\n+            final Transaction tr = context.ensureActive();\n+            tr.options().setReadSystemKeys();\n+            return tr.get(SystemKeyspace.PRIMARY_DATACENTER_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+        });\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This is a blocking version of\n+     * {@link #getPrimaryDatacenterAsync(FDBDatabaseRunner)}.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the primary datacenter of the database underlying {@code runner}\n+     */\n+    @Nullable", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgzNjY1Ng==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574836656", "bodyText": "Added to the Javadoc, and linked to the other method where there are more details.", "author": "alecgrieser", "createdAt": "2021-02-11T21:24:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcwOTIzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMTE2MQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574711161", "body": "You assert that it is not null above, so I'm confused, does that mean this test only works if you specify a cluster file?", "bodyText": "You assert that it is not null above, so I'm confused, does that mean this test only works if you specify a cluster file?", "bodyHTML": "<p dir=\"auto\">You assert that it is not null above, so I'm confused, does that mean this test only works if you specify a cluster file?</p>", "author": "ScottDugas", "createdAt": "2021-02-11T17:59:00Z", "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperationsTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * FDBSystemOperationsTest.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.test.Tags;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Tag;\n+import org.junit.jupiter.api.Test;\n+\n+import javax.annotation.Nonnull;\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.IOException;\n+import java.util.function.Function;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+/**\n+ * Test class for {@link FDBSystemOperations}.\n+ */\n+@Tag(Tags.RequiresFDB)\n+public class FDBSystemOperationsTest extends FDBTestBase {\n+    private FDBDatabase fdb;\n+    private FDBStoreTimer timer;\n+\n+    @BeforeEach\n+    public void setup() {\n+        fdb = FDBDatabaseFactory.instance().getDatabase();\n+        timer = new FDBStoreTimer();\n+    }\n+\n+    private <T> T run(@Nonnull Function<FDBDatabaseRunner, T> operation) {\n+        try (FDBDatabaseRunner runner = fdb.newRunner(timer, null)) {\n+            return operation.apply(runner);\n+        }\n+    }\n+\n+    @Test\n+    public void primaryDatacenter() {\n+        // Because we don't know what the data-center was set to run the test, the best this test\n+        // can do is validate that this doesn't throw an error.\n+        run(FDBSystemOperations::getPrimaryDatacenter);\n+    }\n+\n+    @Test\n+    public void clusterFilePath() {\n+        String clusterFilePath = run(FDBSystemOperations::getClusterFilePath);\n+        assertNotNull(clusterFilePath);\n+\n+        // This may or may not match the database's cluster file path, as that can be null if the\n+        // database is using the default cluster file.", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgzNTU3Ng==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574835576", "bodyText": "I tried to clarify the comment, but what this is actually trying to explain is why this method doesn't compare the output of FDBSystemOperations::getClusterFilePath with the output of fdb.getClusterFile(), which one might assume are the same. However, if a database is created with the default cluster file, fdb.getClusterFile() returns null while the system operation does not.", "author": "alecgrieser", "createdAt": "2021-02-11T21:22:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMTE2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMjIzOQ==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574712239", "body": "Why change the port here?", "bodyText": "Why change the port here?", "bodyHTML": "<p dir=\"auto\">Why change the port here?</p>", "author": "ScottDugas", "createdAt": "2021-02-11T18:00:34Z", "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBTestBase.java", "diffHunk": "@@ -67,7 +67,7 @@ public static void setupBlockingInAsyncDetection() {\n     public static String createFakeClusterFile(String prefix) throws IOException {\n         File clusterFile = File.createTempFile(prefix, \".cluster\");\n         try (BufferedWriter writer = new BufferedWriter(new FileWriter(clusterFile))) {\n-            writer.write(\"fake:fdbcluster@127.0.0.1:65537\\n\");\n+            writer.write(\"fake:fdbcluster@127.0.0.1:65535\\n\");", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDc0OTQzNA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574749434", "bodyText": "I needed to change this because the FDB internals interpret the port as a two-byte (unsigned) int, and so when given 65537, it actually stores this as \"1\" due to overflow errors, and so it actually broke the new fakeClusterConnectionString test.", "author": "alecgrieser", "createdAt": "2021-02-11T18:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMjIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMjkyMg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574712922", "body": "What about the rest of the prefixes in `SystemKeyspace`?", "bodyText": "What about the rest of the prefixes in SystemKeyspace?", "bodyHTML": "<p dir=\"auto\">What about the rest of the prefixes in <code>SystemKeyspace</code>?</p>", "author": "ScottDugas", "createdAt": "2021-02-11T18:01:32Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDgyNjg3OA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574826878", "bodyText": "The intention with this class was to expose the methods that a client might be interested in without needing additional parsing, etc. So, for example, the client log stuff isn't exposed through this because the expectation is that the user should use the FDBClientLogEvents wrapping logic, which also has data to parse the data encoded there.", "author": "alecgrieser", "createdAt": "2021-02-11T21:06:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMjkyMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMzQ1Mg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574713452", "body": "```suggestion\r\n * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n          \n          \n            \n             * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2020</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2021</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T18:02:12Z", "path": "fdb-record-layer-core/src/test/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperationsTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * FDBSystemOperationsTest.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDcxMzYyOA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574713628", "body": "```suggestion\r\n * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors\n          \n          \n            \n             * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2020</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Copyright</span> <span class=\"pl-c1\">2015</span><span class=\"pl-k\">-</span><span class=\"pl-c1 x x-first x-last\">2021</span> <span class=\"pl-smi\">Apple</span> <span class=\"pl-smi\">Inc</span>. and the <span class=\"pl-smi\">FoundationDB</span> project authors</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T18:02:27Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2020 Apple Inc. and the FoundationDB project authors", "originalCommit": "93a566f74e2463881b11fcf03abd4ca591ab2884", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ebe8aa4f348b731d3fe0358545df0dd961b04bd2", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/ebe8aa4f348b731d3fe0358545df0dd961b04bd2", "message": "Apply suggestions from code review\n\nCo-authored-by: Scott Dugas <scott.dugas@gmail.com>", "committedDate": "2021-02-11T21:07:33Z", "type": "commit"}, {"oid": "7b07e63ee5a54027104715b944bb8da9e5c000f4", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/7b07e63ee5a54027104715b944bb8da9e5c000f4", "message": "Remove public methods that take an `FDBRecordContext` from `FDBSystemOperations`. Clarify a few comments, etc.", "committedDate": "2021-02-11T22:17:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg2ODkyOA==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574868928", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @see #getConnectionStringAsync(FDBDatabaseRunner)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">     </span><span class=\"pl-k x\">*</span><span class=\"x\"> </span><span class=\"pl-k x\">@see</span><span class=\"x\"> #getConnectionStringAsync(</span><span class=\"pl-smi x\">FDBDatabaseRunner</span><span class=\"x x-last\">)</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ScottDugas", "createdAt": "2021-02-11T22:24:57Z", "path": "fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java", "diffHunk": "@@ -0,0 +1,162 @@\n+/*\n+ * FDBSystemDatabase.java\n+ *\n+ * This source file is part of the FoundationDB open source project\n+ *\n+ * Copyright 2015-2021 Apple Inc. and the FoundationDB project authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.apple.foundationdb.record.provider.foundationdb;\n+\n+import com.apple.foundationdb.Transaction;\n+import com.apple.foundationdb.annotation.API;\n+import com.apple.foundationdb.system.SystemKeyspace;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * View of an FoundationDB database used for accessing system and special keys. These are special keys defined within\n+ * special system keyspaces that contain information about the underlying FoundationDB cluster, about the client\n+ * configuration, or other information available through another API.\n+ */\n+@API(API.Status.EXPERIMENTAL)\n+public class FDBSystemOperations {\n+\n+    @Nullable\n+    private static String nullableUtf8(@Nullable byte[] bytes) {\n+        return bytes == null ? null : new String(bytes, StandardCharsets.UTF_8);\n+    }\n+\n+    private static <T> T asyncToSync(@Nonnull FDBDatabaseRunner runner, @Nonnull CompletableFuture<T> operation) {\n+        return runner.asyncToSync(FDBStoreTimer.Waits.WAIT_LOAD_SYSTEM_KEY, operation);\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This will return the datacenter ID (if set)\n+     * of the datacenter currently serving as the primary, which (by definition) is where the transaction\n+     * subsystem will be recruited. This is mostly relevant for\n+     * <a href=\"https://apple.github.io/foundationdb/configuration.html#configuring-regions\">multi-region configurations</a>,\n+     * where this value might change if the cluster decides that it needs to fail over to a secondary region. The returned\n+     * datacenter ID will be {@code null} if the FDB cluster's datacenter has not been set.\n+     *\n+     * <p>\n+     * Note that this operation must read this information from the database's storage and uses its own transaction.\n+     * </p>\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will complete with the primary datacenter of the cluster for the database underlying {@code runner}\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getPrimaryDatacenterAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(context -> {\n+            final Transaction tr = context.ensureActive();\n+            tr.options().setReadSystemKeys();\n+            return tr.get(SystemKeyspace.PRIMARY_DATACENTER_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+        });\n+    }\n+\n+    /**\n+     * Get the primary datacenter of the underlying cluster. This is a blocking version of\n+     * {@link #getPrimaryDatacenterAsync(FDBDatabaseRunner)}. If the FDB cluster's primary datacenter has not\n+     * been set, this will return {@code null}.\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the primary datacenter of the database underlying {@code runner}\n+     * @see #getPrimaryDatacenterAsync(FDBDatabaseRunner)\n+     */\n+    @Nullable\n+    public static String getPrimaryDatacenter(@Nonnull FDBDatabaseRunner runner) {\n+        return asyncToSync(runner, getPrimaryDatacenterAsync(runner));\n+    }\n+\n+    @Nonnull\n+    private static CompletableFuture<String> getConnectionStringAsyncInternal(@Nonnull FDBRecordContext context) {\n+        return context.ensureActive().get(SystemKeyspace.CONNECTION_STR_KEY).thenApply(FDBSystemOperations::nullableUtf8);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This string essentially contains the contents of\n+     * the cluster file, though it may change if the cluster's coordinators change. Note that even though this\n+     * operation requires having a database connection (in the transaction) and returns a future (as the client\n+     * may schedule to complete the work at a later time), it does not actually perform any network calls but reads\n+     * the value from the client's local memory.\n+     *\n+     * <p>\n+     * For more information, see the documentation on the\n+     * <a href=\"https://apple.github.io/foundationdb/administration.html#cluster-file-format\">cluster file format</a>\n+     * in the FoundationDB documentation.\n+     * </p>\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return a future that will contain the current cluster connection string\n+     */\n+    @Nonnull\n+    public static CompletableFuture<String> getConnectionStringAsync(@Nonnull FDBDatabaseRunner runner) {\n+        return runner.runAsync(FDBSystemOperations::getConnectionStringAsyncInternal);\n+    }\n+\n+    /**\n+     * Get the connection string used to connect to the FDB cluster. This is a synchronous version of\n+     * {@link #getConnectionStringAsync(FDBDatabaseRunner)}\n+     *\n+     * @param runner a runner to use to perform the operation\n+     * @return the current cluster connection string\n+     * @see #getConnectionStringAsync(FDBDatabaseRunner)\n+     * @see #getConnectionStringAsync(FDBDatabaseRunner)", "originalCommit": "7b07e63ee5a54027104715b944bb8da9e5c000f4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg3MzQzNg==", "url": "https://github.com/FoundationDB/fdb-record-layer/pull/979#discussion_r574873436", "bodyText": "Whoops, must have added the dupe at some point", "author": "alecgrieser", "createdAt": "2021-02-11T22:34:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg2ODkyOA=="}], "type": "inlineReview"}, {"oid": "c1676f15334f6625a511ec5f75e5c6477e5cfed1", "url": "https://github.com/FoundationDB/fdb-record-layer/commit/c1676f15334f6625a511ec5f75e5c6477e5cfed1", "message": "Update fdb-record-layer-core/src/main/java/com/apple/foundationdb/record/provider/foundationdb/FDBSystemOperations.java\n\nCo-authored-by: Scott Dugas <scott.dugas@gmail.com>", "committedDate": "2021-02-11T22:34:22Z", "type": "commit"}]}