{"pr_number": 982, "pr_title": "K8s compatible liveness and readiness probes OKAPI-904", "pr_author": "adamdickmeiss", "pr_createdAt": "2020-10-01T10:33:45Z", "pr_url": "https://github.com/folio-org/okapi/pull/982", "timeline": [{"oid": "63bc5c21fda70cc72561c00df44956b7fed0e3ed", "url": "https://github.com/folio-org/okapi/commit/63bc5c21fda70cc72561c00df44956b7fed0e3ed", "message": "K8s compatible liveness and readiness probes OKAPI-904\n\nNew configuration healthPort which when set and non-zero enables that Okapi\nlistens on that port and offers /readiness and /liveness services.. Both of\nwhich returns 204 No Content on success. 500 on failure.", "committedDate": "2020-10-01T10:31:49Z", "type": "commit"}, {"oid": "5d1e1b2615d84f51864447128b6b4544a78850bb", "url": "https://github.com/folio-org/okapi/commit/5d1e1b2615d84f51864447128b6b4544a78850bb", "message": "More testing", "committedDate": "2020-10-01T11:10:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMxNDEzMA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r498314130", "body": "this includes supertenant, right?", "bodyText": "this includes supertenant, right?", "bodyHTML": "<p dir=\"auto\">this includes supertenant, right?</p>", "author": "craigmcnally", "createdAt": "2020-10-01T15:01:53Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/TenantManager.java", "diffHunk": "@@ -1035,4 +1036,8 @@ private ModuleInstance getTenantInstanceForInterface(\n     });\n   }\n \n+  @Override\n+  public Future<Void> isAlive() {\n+    return tenantStore.listTenants().mapEmpty();", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc3MjU1OA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r498772558", "bodyText": "yes.", "author": "adamdickmeiss", "createdAt": "2020-10-02T11:47:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMxNDEzMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMzc1MA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499723750", "bodyText": "isAlive() succeeds if the list is empty, contains the supertenant only, or contains any number of tenants.\nIf only fails if the database query fails.", "author": "julianladisch", "createdAt": "2020-10-05T16:26:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODMxNDEzMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MTcwMQ==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499691701", "body": "The method should be renamed to testPortReadinessPort0 and `port = 0` been used. Then we can delete testPort0.", "bodyText": "The method should be renamed to testPortReadinessPort0 and port = 0 been used. Then we can delete testPort0.", "bodyHTML": "<p dir=\"auto\">The method should be renamed to testPortReadinessPort0 and <code>port = 0</code> been used. Then we can delete testPort0.</p>", "author": "julianladisch", "createdAt": "2020-10-05T15:37:49Z", "path": "okapi-core/src/test/java/org/folio/okapi/managers/HealthManagerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.web.client.WebClient;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import org.folio.okapi.service.Liveness;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(VertxExtension.class)\n+public class HealthManagerTest {\n+\n+  @Test\n+  void testPort0(Vertx vertx, VertxTestContext context) {\n+    HealthManager m = new HealthManager(0);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortPortOK(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortReadinessSuccess(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTYzNw==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501129637", "bodyText": "if port = 0, then this test will start failing.. There won't be a response to /readiness, then.", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:00:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MTcwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MjI2Ng==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499692266", "body": "This should be renamed to testPortReadinessPort9130. Then we can remove testPortOK.", "bodyText": "This should be renamed to testPortReadinessPort9130. Then we can remove testPortOK.", "bodyHTML": "<p dir=\"auto\">This should be renamed to testPortReadinessPort9130. Then we can remove testPortOK.</p>", "author": "julianladisch", "createdAt": "2020-10-05T15:38:33Z", "path": "okapi-core/src/test/java/org/folio/okapi/managers/HealthManagerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.web.client.WebClient;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import org.folio.okapi.service.Liveness;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(VertxExtension.class)\n+public class HealthManagerTest {\n+\n+  @Test\n+  void testPort0(Vertx vertx, VertxTestContext context) {\n+    HealthManager m = new HealthManager(0);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortPortOK(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortReadinessSuccess(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeeding(res -> {\n+      WebClient client = WebClient.create(vertx);\n+      client.get(port, \"localhost\", \"/readiness\")\n+          .send(context.succeeding(response -> {\n+            assertThat(response.statusCode()).isEqualTo(204);\n+            context.completeNow();\n+          }));\n+    }));\n+  }\n+\n+  @Test\n+  void testPortReadiness(Vertx vertx, VertxTestContext context) {", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMDU3MA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501130570", "bodyText": "ok. That will do.", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:01:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MjI2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NDgwNA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499694804", "body": "The list should be [IsAlive(), IsNotAlive()] to test that it not only checks the first one.", "bodyText": "The list should be [IsAlive(), IsNotAlive()] to test that it not only checks the first one.", "bodyHTML": "<p dir=\"auto\">The list should be [IsAlive(), IsNotAlive()] to test that it not only checks the first one.</p>", "author": "julianladisch", "createdAt": "2020-10-05T15:42:11Z", "path": "okapi-core/src/test/java/org/folio/okapi/managers/HealthManagerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.ext.web.client.WebClient;\n+import io.vertx.junit5.VertxExtension;\n+import io.vertx.junit5.VertxTestContext;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import org.folio.okapi.service.Liveness;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(VertxExtension.class)\n+public class HealthManagerTest {\n+\n+  @Test\n+  void testPort0(Vertx vertx, VertxTestContext context) {\n+    HealthManager m = new HealthManager(0);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortPortOK(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeedingThenComplete());\n+  }\n+\n+  @Test\n+  void testPortReadinessSuccess(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeeding(res -> {\n+      WebClient client = WebClient.create(vertx);\n+      client.get(port, \"localhost\", \"/readiness\")\n+          .send(context.succeeding(response -> {\n+            assertThat(response.statusCode()).isEqualTo(204);\n+            context.completeNow();\n+          }));\n+    }));\n+  }\n+\n+  @Test\n+  void testPortReadiness(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Collections.emptyList()).onComplete(context.succeeding(res -> {\n+      WebClient client = WebClient.create(vertx);\n+      client.get(port, \"localhost\", \"/readiness\")\n+          .send(context.succeeding(response -> {\n+            assertThat(response.statusCode()).isEqualTo(204);\n+            context.completeNow();\n+          }));\n+    }));\n+  }\n+\n+  @Test\n+  void testPortLivenessSuccess(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Arrays.asList(new IsAlive())).onComplete(context.succeeding(res -> {\n+      WebClient client = WebClient.create(vertx);\n+      client.get(port, \"localhost\", \"/liveness\")\n+          .send(context.succeeding(response -> {\n+            assertThat(response.statusCode()).isEqualTo(204);\n+            context.completeNow();\n+          }));\n+    }));\n+  }\n+\n+  @Test\n+  void testPortLivenessFailure(Vertx vertx, VertxTestContext context) {\n+    final int port = 9130;\n+    HealthManager m = new HealthManager(port);\n+    m.init(vertx, Arrays.asList(new IsNotAlive())).onComplete(context.succeeding(res -> {", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTE0Nw==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501131147", "bodyText": "Sure", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:02:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NDgwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNTc4Ng==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499715786", "body": "This variable is not used.", "bodyText": "This variable is not used.", "bodyHTML": "<p dir=\"auto\">This variable is not used.</p>", "author": "julianladisch", "createdAt": "2020-10-05T16:14:00Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/HealthManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.List;\n+import org.folio.okapi.service.Liveness;\n+\n+public class HealthManager {\n+  private Vertx vertx;", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTg3NQ==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501131875", "bodyText": "yep", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:03:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNTc4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMDcyMg==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499720722", "body": "The idiomatic way using Future methods:\r\n```suggestion\r\n    future.onFailure(e -> {\r\n      ctx.response().putHeader(\"Content-Type\", \"text/plain\");\r\n      ctx.response().setStatusCode(500);\r\n      ctx.response().end(e.getMessage());\r\n    }).onSuccess(handler -> {\r\n      ctx.response().setStatusCode(204);\r\n      ctx.response().end();\r\n    });\r\n```", "bodyText": "The idiomatic way using Future methods:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                future.onComplete(res -> {\n          \n          \n            \n                  if (res.failed()) {\n          \n          \n            \n                    ctx.response().putHeader(\"Content-Type\", \"text/plain\");\n          \n          \n            \n                    ctx.response().setStatusCode(500);\n          \n          \n            \n                    ctx.response().end(res.cause().getMessage());\n          \n          \n            \n                    return;\n          \n          \n            \n                  }\n          \n          \n            \n                  ctx.response().setStatusCode(204);\n          \n          \n            \n                  ctx.response().end();\n          \n          \n            \n                });\n          \n          \n            \n                future.onFailure(e -> {\n          \n          \n            \n                  ctx.response().putHeader(\"Content-Type\", \"text/plain\");\n          \n          \n            \n                  ctx.response().setStatusCode(500);\n          \n          \n            \n                  ctx.response().end(e.getMessage());\n          \n          \n            \n                }).onSuccess(handler -> {\n          \n          \n            \n                  ctx.response().setStatusCode(204);\n          \n          \n            \n                  ctx.response().end();\n          \n          \n            \n                });", "bodyHTML": "<p dir=\"auto\">The idiomatic way using Future methods:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    future<span class=\"pl-k\">.</span>onComplete(res <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (res<span class=\"pl-k\">.</span>failed()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"69\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>putHeader(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Content-Type<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text/plain<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>setStatusCode(<span class=\"pl-c1\">500</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>end(res<span class=\"pl-k\">.</span>cause()<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>setStatusCode(<span class=\"pl-c1\">204</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>end();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    future<span class=\"pl-k\">.</span>onFailure(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>putHeader(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Content-Type<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>text/plain<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"69\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>setStatusCode(<span class=\"pl-c1\">500</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>end(e<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    })<span class=\"pl-k\">.</span>onSuccess(handler <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>setStatusCode(<span class=\"pl-c1\">204</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      ctx<span class=\"pl-k\">.</span>response()<span class=\"pl-k\">.</span>end();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "julianladisch", "createdAt": "2020-10-05T16:21:44Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/HealthManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.List;\n+import org.folio.okapi.service.Liveness;\n+\n+public class HealthManager {\n+  private Vertx vertx;\n+  private final int listenPort;\n+  private List<Liveness> livenessChecks;\n+\n+  public HealthManager(int listenPort) {\n+    this.listenPort = listenPort;\n+  }\n+\n+  /**\n+   * Initialize health manager.\n+   * This should be called when the service should start\n+   * serving readiness and liveness.\n+   * @param vertx Vert.x handle\n+   * @return future result\n+   *\n+   */\n+  public Future<Void> init(Vertx vertx, List<Liveness> livenessChecks) {\n+    this.vertx = vertx;\n+    this.livenessChecks = livenessChecks;\n+    if (listenPort == 0) {\n+      return Future.succeededFuture();\n+    }\n+    Router router = Router.router(vertx);\n+\n+    router.route(HttpMethod.GET, \"/readiness\").handler(this::readinessHandler);\n+    router.route(HttpMethod.GET, \"/liveness\").handler(this::livenessHandler);\n+    HttpServerOptions serverOptions = new HttpServerOptions()\n+        .setHandle100ContinueAutomatically(true);\n+    return vertx.createHttpServer(serverOptions)\n+        .requestHandler(router)\n+        .listen(listenPort)\n+        .mapEmpty();\n+  }\n+\n+  private void readinessHandler(RoutingContext ctx) {\n+    ctx.response().setStatusCode(204);\n+    ctx.response().end();\n+  }\n+\n+  private void livenessHandler(RoutingContext ctx) {\n+    Future<Void> future = Future.succeededFuture();\n+    for (Liveness l : livenessChecks) {\n+      future = future.compose(x -> l.isAlive());\n+    }\n+    future.onComplete(res -> {\n+      if (res.failed()) {\n+        ctx.response().putHeader(\"Content-Type\", \"text/plain\");\n+        ctx.response().setStatusCode(500);\n+        ctx.response().end(res.cause().getMessage());\n+        return;\n+      }\n+      ctx.response().setStatusCode(204);\n+      ctx.response().end();\n+    });", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMjQxNw==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499722417", "body": "Should we also log the exception (message + stacktrace) on failure? One reason might be that the database query fails. This should also be in the log, not only in the HTTP body.", "bodyText": "Should we also log the exception (message + stacktrace) on failure? One reason might be that the database query fails. This should also be in the log, not only in the HTTP body.", "bodyHTML": "<p dir=\"auto\">Should we also log the exception (message + stacktrace) on failure? One reason might be that the database query fails. This should also be in the log, not only in the HTTP body.</p>", "author": "julianladisch", "createdAt": "2020-10-05T16:24:36Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/HealthManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.List;\n+import org.folio.okapi.service.Liveness;\n+\n+public class HealthManager {\n+  private Vertx vertx;\n+  private final int listenPort;\n+  private List<Liveness> livenessChecks;\n+\n+  public HealthManager(int listenPort) {\n+    this.listenPort = listenPort;\n+  }\n+\n+  /**\n+   * Initialize health manager.\n+   * This should be called when the service should start\n+   * serving readiness and liveness.\n+   * @param vertx Vert.x handle\n+   * @return future result\n+   *\n+   */\n+  public Future<Void> init(Vertx vertx, List<Liveness> livenessChecks) {\n+    this.vertx = vertx;\n+    this.livenessChecks = livenessChecks;\n+    if (listenPort == 0) {\n+      return Future.succeededFuture();\n+    }\n+    Router router = Router.router(vertx);\n+\n+    router.route(HttpMethod.GET, \"/readiness\").handler(this::readinessHandler);\n+    router.route(HttpMethod.GET, \"/liveness\").handler(this::livenessHandler);\n+    HttpServerOptions serverOptions = new HttpServerOptions()\n+        .setHandle100ContinueAutomatically(true);\n+    return vertx.createHttpServer(serverOptions)\n+        .requestHandler(router)\n+        .listen(listenPort)\n+        .mapEmpty();\n+  }\n+\n+  private void readinessHandler(RoutingContext ctx) {\n+    ctx.response().setStatusCode(204);\n+    ctx.response().end();\n+  }\n+\n+  private void livenessHandler(RoutingContext ctx) {\n+    Future<Void> future = Future.succeededFuture();\n+    for (Liveness l : livenessChecks) {\n+      future = future.compose(x -> l.isAlive());\n+    }\n+    future.onComplete(res -> {\n+      if (res.failed()) {\n+        ctx.response().putHeader(\"Content-Type\", \"text/plain\");\n+        ctx.response().setStatusCode(500);\n+        ctx.response().end(res.cause().getMessage());\n+        return;\n+      }\n+      ctx.response().setStatusCode(204);\n+      ctx.response().end();\n+    });", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNjE4MQ==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501136181", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:09:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMjQxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNjI0OQ==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r499726249", "body": "The if clause should be move to the first line to avoid storing livenessChecks if they are not needed.", "bodyText": "The if clause should be move to the first line to avoid storing livenessChecks if they are not needed.", "bodyHTML": "<p dir=\"auto\">The if clause should be move to the first line to avoid storing livenessChecks if they are not needed.</p>", "author": "julianladisch", "createdAt": "2020-10-05T16:30:54Z", "path": "okapi-core/src/main/java/org/folio/okapi/managers/HealthManager.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package org.folio.okapi.managers;\n+\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.http.HttpMethod;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.List;\n+import org.folio.okapi.service.Liveness;\n+\n+public class HealthManager {\n+  private Vertx vertx;\n+  private final int listenPort;\n+  private List<Liveness> livenessChecks;\n+\n+  public HealthManager(int listenPort) {\n+    this.listenPort = listenPort;\n+  }\n+\n+  /**\n+   * Initialize health manager.\n+   * This should be called when the service should start\n+   * serving readiness and liveness.\n+   * @param vertx Vert.x handle\n+   * @return future result\n+   *\n+   */\n+  public Future<Void> init(Vertx vertx, List<Liveness> livenessChecks) {\n+    this.vertx = vertx;\n+    this.livenessChecks = livenessChecks;\n+    if (listenPort == 0) {\n+      return Future.succeededFuture();\n+    }", "originalCommit": "5d1e1b2615d84f51864447128b6b4544a78850bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNDc3NA==", "url": "https://github.com/folio-org/okapi/pull/982#discussion_r501134774", "bodyText": "ok", "author": "adamdickmeiss", "createdAt": "2020-10-07T16:07:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNjI0OQ=="}], "type": "inlineReview"}, {"oid": "b27fbc11855d61c19e03be1b9ba1d5c602f634c4", "url": "https://github.com/folio-org/okapi/commit/b27fbc11855d61c19e03be1b9ba1d5c602f634c4", "message": "Hopefully most of Julians suggestions", "committedDate": "2020-10-07T16:11:32Z", "type": "commit"}, {"oid": "75585bdfab4608194b33549bf2eb40b71599b3a6", "url": "https://github.com/folio-org/okapi/commit/75585bdfab4608194b33549bf2eb40b71599b3a6", "message": "Merge branch 'master' into OKAPI-904-k8s-liveness-readiness", "committedDate": "2020-10-07T16:58:24Z", "type": "commit"}, {"oid": "f946e9deb7482157c85a70a27c022227e6f9db58", "url": "https://github.com/folio-org/okapi/commit/f946e9deb7482157c85a70a27c022227e6f9db58", "message": "Merge branch 'master' into OKAPI-904-k8s-liveness-readiness", "committedDate": "2020-10-14T15:15:40Z", "type": "commit"}, {"oid": "92723ece454094a2f6d7f8fc9ceea3c6fa0e80f6", "url": "https://github.com/folio-org/okapi/commit/92723ece454094a2f6d7f8fc9ceea3c6fa0e80f6", "message": "Merge branch 'master' into OKAPI-904-k8s-liveness-readiness", "committedDate": "2020-10-18T14:38:38Z", "type": "commit"}, {"oid": "fac2f4451c4512f275d3b86c127d6eb6f3ccea41", "url": "https://github.com/folio-org/okapi/commit/fac2f4451c4512f275d3b86c127d6eb6f3ccea41", "message": "Merge branch 'master' into OKAPI-904-k8s-liveness-readiness", "committedDate": "2020-10-19T14:15:32Z", "type": "commit"}]}