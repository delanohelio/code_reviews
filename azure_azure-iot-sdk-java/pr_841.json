{"pr_number": 841, "pr_title": "feat(samples): Updating and adding samples for pnp summer refresh", "pr_createdAt": "2020-07-06T23:54:55Z", "pr_url": "https://github.com/Azure/azure-iot-sdk-java/pull/841", "merge_commit": "2d5a217421ffb5669584f99d71a3d2891ddf5e07", "timeline": [{"oid": "4ba9a31e1c79dc563aceeddf50162f3b90412ef0", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4ba9a31e1c79dc563aceeddf50162f3b90412ef0", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T00:07:24Z", "type": "forcePushed"}, {"oid": "dd62370873bf38400b380b8f1aaff18e9c1bc85e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/dd62370873bf38400b380b8f1aaff18e9c1bc85e", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T00:19:48Z", "type": "forcePushed"}, {"oid": "44d2343ec5695a951a46922aadc5a422f6aabba3", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/44d2343ec5695a951a46922aadc5a422f6aabba3", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T00:24:44Z", "type": "forcePushed"}, {"oid": "9238951d14854658271888e220a85cf9300f4cad", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9238951d14854658271888e220a85cf9300f4cad", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T00:25:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODY0MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r450548641", "body": "I was not very clear if helper meant helper class or method. Will move it to a class if that is what it means.", "bodyText": "I was not very clear if helper meant helper class or method. Will move it to a class if that is what it means.", "bodyHTML": "<p dir=\"auto\">I was not very clear if helper meant helper class or method. Will move it to a class if that is what it means.</p>", "author": "vinagesh", "createdAt": "2020-07-07T00:36:06Z", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,143 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import javax.json.Json;\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json\n+public class TemperatureController {\n+    // Get connection string and device id inputs\n+    private static final String hubConnectionString  = \"HostName=summerrelease-test-04.private.azure-devices-int.net;SharedAccessKeyName=iothubowner;SharedAccessKey=lkm4Gvm5gN9nWDgK4Cwwwgj47q/8w1qxgF5bRbi6yNM=\";\n+    private static final String deviceId = \"vinageshpnpdevice1\";\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(hubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(hubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get a Twin and retrieves model Id set by Device client\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin - Update the thermostat1 component\n+        twin.setDesiredProperties(CreatePropertyPatch());\n+        System.out.println(\"Updating Device twin property\");\n+        twinClient.updateTwin(twin);\n+\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static Set<Pair> CreatePropertyPatch()", "originalCommit": "9238951d14854658271888e220a85cf9300f4cad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODkxMg==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r450548912", "bodyText": "Based on discussion, these need to be in a helper class so I will move them.", "author": "vinagesh", "createdAt": "2020-07-07T00:37:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODY0MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6cf554f3d8a187ab1b4fab44f5bc2c64188abd26", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 6c1481a9d..a26cb3853 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -52,7 +49,10 @@ public class TemperatureController {\n         System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n \n         // Update the twin - Update the thermostat1 component\n-        twin.setDesiredProperties(CreatePropertyPatch());\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";\n+        String componentName = \"thermostat1\";\n+        twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n         System.out.println(\"Updating Device twin property\");\n         twinClient.updateTwin(twin);\n \n", "next_change": {"commit": "952a50df9925165c507a7c1c603be60c7047453b", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex a26cb3853..056feb585 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -49,11 +49,11 @@ public class TemperatureController {\n         System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n \n         // Update the twin - Update the thermostat1 component\n+        System.out.println(\"Updating Device twin property\");\n         String propertyName = \"targetTemperature\";\n         String propertyValue = \"60\";\n         String componentName = \"thermostat1\";\n         twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n-        System.out.println(\"Updating Device twin property\");\n         twinClient.updateTwin(twin);\n \n         twinClient.getTwin(twin);\n", "next_change": {"commit": "fc954c6abad94f033f091d8f67dde3dd770b7ee1", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 056feb585..97447c620 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -56,6 +56,7 @@ public class TemperatureController {\n         twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n         twinClient.updateTwin(twin);\n \n+        // Get updated twin properties\n         twinClient.getTwin(twin);\n         System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n     }\n", "next_change": {"commit": "0ff65e4c3ec563484d4ef11bf4a1059380bb434d", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 97447c620..97c967e46 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -56,20 +56,20 @@ public class TemperatureController {\n         twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n         twinClient.updateTwin(twin);\n \n-        // Get updated twin properties\n+        // Get the updated twin properties.\n         twinClient.getTwin(twin);\n         System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n     }\n \n     private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {\n-        // The method to invoke on the root level should be \"methodName\"\n+        // The method to invoke on the root level for a device with components should be \"methodName\" as defined in the DTDL.\n         String methodToInvoke = \"reboot\";\n         System.out.println(\"Invoking method: \" + methodToInvoke);\n \n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n-        // Invoke method\n+        // Invoke the method.\n         String delay = \"5\";\n         MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n         if(result == null)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nsimilarity index 70%\nrename from service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nrename to service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nindex 97c967e46..92fdc7e70 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\n", "chunk": "@@ -69,9 +77,14 @@ public class TemperatureController {\n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n-        // Invoke the method.\n+        // Invoke the command.\n+        // The command payload should be in the following format:\n+        // \"payload\": {\n+        //   \"commandRequest\": {\n+        //   \"value\": \"commandInput\"\n+        //  }\n         String delay = \"5\";\n-        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n+        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateCommandPayload(delay));\n         if(result == null)\n         {\n             throw new IOException(\"Method result is null\");\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 6c1481a9d..a26cb3853 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -60,33 +60,6 @@ public class TemperatureController {\n         System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n     }\n \n-    private static Set<Pair> CreatePropertyPatch()\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        String componentName = \"thermostat1\";\n-        String propertyName = \"targetTemperature\";\n-\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, 70);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>();\n-        Pair desiredProperty = new Pair(\n-                componentName,\n-                patchJson);\n-        desiredProperties.add(desiredProperty);\n-\n-        return desiredProperties;\n-    }\n-\n     private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {\n         // The method to invoke on the root level should be \"methodName\"\n         String methodToInvoke = \"reboot\";\n", "next_change": {"commit": "050ff763f171434c4c5dcedf5cd2ddfe1525ae8e", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex a26cb3853..5d8bf44b7 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -68,7 +68,8 @@ public class TemperatureController {\n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n-        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(\"5\"));\n+        String delay = \"5\";\n+        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n         if(result == null)\n         {\n             throw new IOException(\"Method result is null\");\n", "next_change": {"commit": "fc954c6abad94f033f091d8f67dde3dd770b7ee1", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 5d8bf44b7..97447c620 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -68,6 +69,7 @@ public class TemperatureController {\n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n+        // Invoke method\n         String delay = \"5\";\n         MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n         if(result == null)\n", "next_change": {"commit": "0ff65e4c3ec563484d4ef11bf4a1059380bb434d", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nindex 97447c620..97c967e46 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n", "chunk": "@@ -56,20 +56,20 @@ public class TemperatureController {\n         twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n         twinClient.updateTwin(twin);\n \n-        // Get updated twin properties\n+        // Get the updated twin properties.\n         twinClient.getTwin(twin);\n         System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n     }\n \n     private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {\n-        // The method to invoke on the root level should be \"methodName\"\n+        // The method to invoke on the root level for a device with components should be \"methodName\" as defined in the DTDL.\n         String methodToInvoke = \"reboot\";\n         System.out.println(\"Invoking method: \" + methodToInvoke);\n \n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n-        // Invoke method\n+        // Invoke the method.\n         String delay = \"5\";\n         MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n         if(result == null)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nsimilarity index 70%\nrename from service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nrename to service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nindex 97c967e46..92fdc7e70 100644\n--- a/service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\n", "chunk": "@@ -69,9 +77,14 @@ public class TemperatureController {\n         Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n         Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n \n-        // Invoke the method.\n+        // Invoke the command.\n+        // The command payload should be in the following format:\n+        // \"payload\": {\n+        //   \"commandRequest\": {\n+        //   \"value\": \"commandInput\"\n+        //  }\n         String delay = \"5\";\n-        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateMethodPayload(delay));\n+        MethodResult result = methodClient.invoke(deviceId, methodToInvoke, responseTimeout, connectTimeout, PnpHelper.CreateCommandPayload(delay));\n         if(result == null)\n         {\n             throw new IOException(\"Method result is null\");\n", "next_change": null}]}}]}}]}}]}}]}}, {"oid": "6cf554f3d8a187ab1b4fab44f5bc2c64188abd26", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/6cf554f3d8a187ab1b4fab44f5bc2c64188abd26", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:18:45Z", "type": "forcePushed"}, {"oid": "050ff763f171434c4c5dcedf5cd2ddfe1525ae8e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/050ff763f171434c4c5dcedf5cd2ddfe1525ae8e", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:21:34Z", "type": "forcePushed"}, {"oid": "952a50df9925165c507a7c1c603be60c7047453b", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/952a50df9925165c507a7c1c603be60c7047453b", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:34:55Z", "type": "forcePushed"}, {"oid": "16d10631d7b72ba1749830505b4e97ba0f193563", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/16d10631d7b72ba1749830505b4e97ba0f193563", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:35:13Z", "type": "forcePushed"}, {"oid": "fc954c6abad94f033f091d8f67dde3dd770b7ee1", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fc954c6abad94f033f091d8f67dde3dd770b7ee1", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:36:39Z", "type": "forcePushed"}, {"oid": "0ff65e4c3ec563484d4ef11bf4a1059380bb434d", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0ff65e4c3ec563484d4ef11bf4a1059380bb434d", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:42:40Z", "type": "forcePushed"}, {"oid": "93a4d39192526f7219c5d4595506fdc0d732b10f", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/93a4d39192526f7219c5d4595506fdc0d732b10f", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:43:44Z", "type": "forcePushed"}, {"oid": "e64fed3858c542aa3f80aed1117da27df72da933", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e64fed3858c542aa3f80aed1117da27df72da933", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:45:11Z", "type": "forcePushed"}, {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e7594692868ffedc7340aceb7a986078f95c52d0", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T04:45:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451004171", "body": "I have plaved the helper under the package `com.microsoft.azure.sdk.iot.pnphelpers`: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\r\n\r\nWhat do you think of this as the folder/ package structure?\r\n\r\nI would rather not have the word \"samples\" in the package and folder path.", "bodyText": "I have plaved the helper under the package com.microsoft.azure.sdk.iot.pnphelpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\nWhat do you think of this as the folder/ package structure?\nI would rather not have the word \"samples\" in the package and folder path.", "bodyHTML": "<p dir=\"auto\">I have plaved the helper under the package <code>com.microsoft.azure.sdk.iot.pnphelpers</code>: <a href=\"https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\">https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java</a></p>\n<p dir=\"auto\">What do you think of this as the folder/ package structure?</p>\n<p dir=\"auto\">I would rather not have the word \"samples\" in the package and folder path.</p>", "author": "abhipsaMisra", "createdAt": "2020-07-07T16:47:21Z", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;", "originalCommit": "e7594692868ffedc7340aceb7a986078f95c52d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyNjk5Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451026997", "bodyText": "Don't forget to include the log4j.properties file for this new sample so that users who run it can easily get logs from the SDK. The other other samples each have a resources folder that you can copy to do that\n\nLet me take a look at that. Thanks. Will reach out if I have any questions.", "author": "vinagesh", "createdAt": "2020-07-07T17:26:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyOTg2Nw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451029867", "bodyText": "I have plaved the helper under the package com.microsoft.azure.sdk.iot.pnphelpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\nWhat do you think of this as the folder/ package structure?\nI would rather not have the word \"samples\" in the package and folder path.\n\nI think it is a good idea to get rid of the samples as we discussed that this might be released separately. And we can use the pnp-helper for the module name. I believe your change will go in first so make those changes and I can rebase. I'll just add my helper functions to that.", "author": "vinagesh", "createdAt": "2020-07-07T17:31:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -3,10 +3,7 @@ package samples.com.microsoft.azure.sdk.iot.helper;\n import com.google.gson.JsonObject;\n import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n \n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n \n public class PnpHelper {\n     public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNzc3MQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451007771", "body": "nit: this can also be done in a single statement:\r\n```java\r\nreturn Collections.singleton(new Pair(properyName, propertyValue));\r\n```", "bodyText": "nit: this can also be done in a single statement:\nreturn Collections.singleton(new Pair(properyName, propertyValue));", "bodyHTML": "<p dir=\"auto\">nit: this can also be done in a single statement:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"return Collections.singleton(new Pair(properyName, propertyValue));\n\"><pre><span class=\"pl-k\">return</span> <span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>singleton(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Pair</span>(properyName, propertyValue));</pre></div>", "author": "abhipsaMisra", "createdAt": "2020-07-07T16:53:29Z", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        return desiredProperties;", "originalCommit": "e7594692868ffedc7340aceb7a986078f95c52d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyMjY0Ng==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451022646", "bodyText": "Cool! Good to know :)", "author": "vinagesh", "createdAt": "2020-07-07T17:18:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNzc3MQ=="}], "type": "inlineReview", "revised_code": {"commit": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -16,9 +13,7 @@ public class PnpHelper {\n         //    \"propertyName\": {\n         //      \"value\": \"hello\"\n         //  }\n-        Set<Pair> desiredProperties = new HashSet<Pair>();\n-        desiredProperties.add(new Pair(propertyName, propertyValue));\n-        return desiredProperties;\n+        return Collections.singleton(new Pair(propertyName, propertyValue));\n     }\n \n     public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODEyNA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451008124", "body": "nice!", "bodyText": "nice!", "bodyHTML": "<p dir=\"auto\">nice!</p>", "author": "abhipsaMisra", "createdAt": "2020-07-07T16:54:10Z", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {", "originalCommit": "e7594692868ffedc7340aceb7a986078f95c52d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -3,10 +3,7 @@ package samples.com.microsoft.azure.sdk.iot.helper;\n import com.google.gson.JsonObject;\n import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n \n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n \n public class PnpHelper {\n     public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}, {"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -16,9 +13,7 @@ public class PnpHelper {\n         //    \"propertyName\": {\n         //      \"value\": \"hello\"\n         //  }\n-        Set<Pair> desiredProperties = new HashSet<Pair>();\n-        desiredProperties.add(new Pair(propertyName, propertyValue));\n-        return desiredProperties;\n+        return Collections.singleton(new Pair(propertyName, propertyValue));\n     }\n \n     public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODQzOA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451008438", "body": "I've added doc comments for these public helpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java#L66-L76", "bodyText": "I've added doc comments for these public helpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java#L66-L76", "bodyHTML": "<p dir=\"auto\">I've added doc comments for these public helpers: <a href=\"https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java#L66-L76\">https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java#L66-L76</a></p>", "author": "abhipsaMisra", "createdAt": "2020-07-07T16:54:40Z", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)", "originalCommit": "e7594692868ffedc7340aceb7a986078f95c52d0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0Mzg0MA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451043840", "bodyText": "I will anyway have to rebase so this is mostly a place holder.", "author": "vinagesh", "createdAt": "2020-07-07T17:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODQzOA=="}], "type": "inlineReview", "revised_code": {"commit": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -3,10 +3,7 @@ package samples.com.microsoft.azure.sdk.iot.helper;\n import com.google.gson.JsonObject;\n import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n \n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n \n public class PnpHelper {\n     public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTA3OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451009078", "body": "nit: same, can be replaced by returning `Collections.singleton()`.", "bodyText": "nit: same, can be replaced by returning Collections.singleton().", "bodyHTML": "<p dir=\"auto\">nit: same, can be replaced by returning <code>Collections.singleton()</code>.</p>", "author": "abhipsaMisra", "createdAt": "2020-07-07T16:55:45Z", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        return desiredProperties;\n+    }\n+\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n+    {\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"hello\"\n+        //      }\n+        //  }\n+        JsonObject patchJson = new JsonObject();\n+        // The following property is required to specify that the update is for a component and not root level.\n+        patchJson.addProperty(\"__t\", \"c\");\n+        patchJson.addProperty(propertyName, propertyValue);\n+\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        Pair desiredProperty = new Pair(\n+                componentName,\n+                patchJson);\n+        desiredProperties.add(desiredProperty);\n+\n+        return desiredProperties;\n+    }\n+\n+    public static Map<String, Object> CreateMethodPayload(String methodValue)\n+    {\n+        // The method payload should be in the following format:\n+        // \"payload\": {\n+        //   \"commandRequest\": {\n+        //   \"value\": \"hello\"\n+        //  }\n+        JsonObject commandPayload = new JsonObject();\n+        commandPayload.addProperty(\"value\", methodValue);\n+        Map<String, Object> payload = new HashMap<String, Object>()", "originalCommit": "e7594692868ffedc7340aceb7a986078f95c52d0", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\nindex 85bb68b0b..0d75afcc7 100644\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n", "chunk": "@@ -54,13 +50,7 @@ public class PnpHelper {\n         //  }\n         JsonObject commandPayload = new JsonObject();\n         commandPayload.addProperty(\"value\", methodValue);\n-        Map<String, Object> payload = new HashMap<String, Object>()\n-        {\n-            {\n-                put(\"commandRequest\", commandPayload);\n-            }\n-        };\n-        return payload;\n+        return Collections.singletonMap(\"commandRequest\", commandPayload);\n     }\n \n     public static String CreateComponentMethodName(String componentName, String methodName)\n", "next_change": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 0d75afcc7..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "2d5a217421ffb5669584f99d71a3d2891ddf5e07", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java b/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\ndeleted file mode 100644\nindex 85bb68b0b..000000000\n--- a/pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,73 +0,0 @@\n-package samples.com.microsoft.azure.sdk.iot.helper;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        Set<Pair> desiredProperties = new HashSet<Pair>();\n-        desiredProperties.add(new Pair(propertyName, propertyValue));\n-        return desiredProperties;\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>();\n-        Pair desiredProperty = new Pair(\n-                componentName,\n-                patchJson);\n-        desiredProperties.add(desiredProperty);\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        Map<String, Object> payload = new HashMap<String, Object>()\n-        {\n-            {\n-                put(\"commandRequest\", commandPayload);\n-            }\n-        };\n-        return payload;\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}, "commits_in_main": [{"oid": "2d5a217421ffb5669584f99d71a3d2891ddf5e07", "message": "Merge commit", "committedDate": null}]}, {"oid": "6766c1a29aad186a2bd0e74313f3d6b33b316989", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/6766c1a29aad186a2bd0e74313f3d6b33b316989", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T19:38:33Z", "type": "forcePushed"}, {"oid": "ff44191af8decfeb9db7e3be50d73f1cad548b50", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/ff44191af8decfeb9db7e3be50d73f1cad548b50", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T19:41:40Z", "type": "forcePushed"}, {"oid": "9ff8666c13ecea440252a043811f91c3369e9de0", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9ff8666c13ecea440252a043811f91c3369e9de0", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-07T22:37:21Z", "type": "forcePushed"}, {"oid": "fa2010ae9634a9c42fbb454b4255e59b6fb737c8", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fa2010ae9634a9c42fbb454b4255e59b6fb737c8", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T00:41:30Z", "type": "forcePushed"}, {"oid": "d57d2e67bf52dd6fc34ae097f1939e1bbf4a5a15", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d57d2e67bf52dd6fc34ae097f1939e1bbf4a5a15", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T00:54:01Z", "type": "forcePushed"}, {"oid": "b9f61d7e2bc77a10762052cf57c0ebd1226341f6", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b9f61d7e2bc77a10762052cf57c0ebd1226341f6", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T00:56:49Z", "type": "forcePushed"}, {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/aff97a571b15490ea3d27aff8447c5ef7d221750", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T00:58:21Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNTIxMQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451235211", "body": "is this code similar to line 16? ", "bodyText": "is this code similar to line 16?", "bodyHTML": "<p dir=\"auto\">is this code similar to line 16?</p>", "author": "bikamani", "createdAt": "2020-07-08T01:45:09Z", "path": "pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.*;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        return Collections.singleton(new Pair(propertyName, propertyValue));\n+    }\n+\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n+    {\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"hello\"\n+        //      }\n+        //  }\n+        JsonObject patchJson = new JsonObject();\n+        // The following property is required to specify that the update is for a component and not root level.\n+        patchJson.addProperty(\"__t\", \"c\");\n+        patchJson.addProperty(propertyName, propertyValue);\n+\n+        Set<Pair> desiredProperties = new HashSet<Pair>()\n+        {\n+            {\n+                new Pair(componentName, patchJson);", "originalCommit": "aff97a571b15490ea3d27aff8447c5ef7d221750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyOTY0NQ==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451829645", "bodyText": "All this has changed due to most recent changes.", "author": "vinagesh", "createdAt": "2020-07-08T21:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNTIxMQ=="}], "type": "inlineReview", "revised_code": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java b/pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java\ndeleted file mode 100644\nindex 5dc1882d9..000000000\n--- a/pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java\n+++ /dev/null\n", "chunk": "@@ -1,63 +0,0 @@\n-package com.microsoft.azure.sdk.iot;\n-\n-import com.google.gson.JsonObject;\n-import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n-\n-import java.util.*;\n-\n-public class PnpHelper {\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n-    {\n-        // The update patch for a property on the root level or a device without component should be in the format:\n-        // \"desired\": {\n-        //    \"propertyName\": {\n-        //      \"value\": \"hello\"\n-        //  }\n-        return Collections.singleton(new Pair(propertyName, propertyValue));\n-    }\n-\n-    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n-    {\n-        // The update patch for a property of a component should be in the format:\n-        // \"desired\": {\n-        //    \"componentName\": {\n-        //      \"__t\": \"c\",\n-        //      \"propertyName\": {\n-        //        \"value\": \"hello\"\n-        //      }\n-        //  }\n-        JsonObject patchJson = new JsonObject();\n-        // The following property is required to specify that the update is for a component and not root level.\n-        patchJson.addProperty(\"__t\", \"c\");\n-        patchJson.addProperty(propertyName, propertyValue);\n-\n-        Set<Pair> desiredProperties = new HashSet<Pair>()\n-        {\n-            {\n-                new Pair(componentName, patchJson);\n-            }\n-        };\n-\n-        return desiredProperties;\n-    }\n-\n-    public static Map<String, Object> CreateMethodPayload(String methodValue)\n-    {\n-        // The method payload should be in the following format:\n-        // \"payload\": {\n-        //   \"commandRequest\": {\n-        //   \"value\": \"hello\"\n-        //  }\n-        JsonObject commandPayload = new JsonObject();\n-        commandPayload.addProperty(\"value\", methodValue);\n-        return Collections.singletonMap(\"commandRequest\", commandPayload);\n-    }\n-\n-    public static String CreateComponentMethodName(String componentName, String methodName)\n-    {\n-        // The method to invoke for components should be in the format:\n-        // \"comonentName*methodName\"\n-        return componentName + \"*\" + methodName;\n-    }\n-}\n-\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjI5NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451236294", "body": "I was wondering if this should be on top. That's the approach I took in C#.\r\nDon't have a strong opinion though", "bodyText": "I was wondering if this should be on top. That's the approach I took in C#.\nDon't have a strong opinion though", "bodyHTML": "<p dir=\"auto\">I was wondering if this should be on top. That's the approach I took in C#.<br>\nDon't have a strong opinion though</p>", "author": "bikamani", "createdAt": "2020-07-08T01:49:33Z", "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";", "originalCommit": "aff97a571b15490ea3d27aff8447c5ef7d221750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTM5OA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451831398", "bodyText": "I have kept it as is for now. We can see later which way to go.", "author": "vinagesh", "createdAt": "2020-07-08T21:19:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nsimilarity index 75%\nrename from service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nrename to service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nindex 833ee0574..92fdc7e70 100644\n--- a/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\n", "chunk": "@@ -49,6 +49,14 @@ public class TemperatureController {\n         System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n \n         // Update the twin for thermostat1 component.\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"propertyValue\"\n+        //      }\n+        //  }\n         System.out.println(\"Updating Device twin property\");\n         String propertyName = \"targetTemperature\";\n         String propertyValue = \"60\";\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjY4NA==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451236684", "body": "This makes me think if we really need no component sample \ud83d\ude04 ", "bodyText": "This makes me think if we really need no component sample \ud83d\ude04", "bodyHTML": "<p dir=\"auto\">This makes me think if we really need no component sample <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>", "author": "bikamani", "createdAt": "2020-07-08T01:51:03Z", "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";\n+        String componentName = \"thermostat1\";\n+        twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n+        twinClient.updateTwin(twin);\n+\n+        // Get the updated twin properties.\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {", "originalCommit": "aff97a571b15490ea3d27aff8447c5ef7d221750", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyOTcxNw==", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451829717", "bodyText": "ha ha :)", "author": "vinagesh", "createdAt": "2020-07-08T21:15:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjY4NA=="}], "type": "inlineReview", "revised_code": {"commit": "d31fa16021325d1204dd8674aba90a32d155a3b2", "changed_code": [{"header": "diff --git a/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java b/service/iot-service-samples/pnp-service-sample/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nsimilarity index 75%\nrename from service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\nrename to service/iot-service-samples/pnp-service-sample/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\nindex 833ee0574..f2bb94135 100644\n--- a/service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java\n+++ b/service/iot-service-samples/pnp-service-sample/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/service/TemperatureController.java\n", "chunk": "@@ -49,11 +49,19 @@ public class TemperatureController {\n         System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n \n         // Update the twin for thermostat1 component.\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"propertyValue\"\n+        //      }\n+        //  }\n         System.out.println(\"Updating Device twin property\");\n         String propertyName = \"targetTemperature\";\n-        String propertyValue = \"60\";\n+        double propertyValue = 60.2;\n         String componentName = \"thermostat1\";\n-        twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n+        twin.setDesiredProperties(PnpHelper.CreateComponentPropertyPatch(propertyName, propertyValue, componentName));\n         twinClient.updateTwin(twin);\n \n         // Get the updated twin properties.\n", "next_change": null}]}}, {"oid": "49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/49e95db7e68e888fed75bf8d7efe24bec5dfb5e9", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T05:35:02Z", "type": "forcePushed"}, {"oid": "862be06470742e96f430e35021514986463f61a9", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/862be06470742e96f430e35021514986463f61a9", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T05:42:19Z", "type": "forcePushed"}, {"oid": "cfff0ea1c8767802611f17d102dd646e5758d249", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/cfff0ea1c8767802611f17d102dd646e5758d249", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T05:45:19Z", "type": "forcePushed"}, {"oid": "0f2c336421682cad40d60c5118ed817ce733964c", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0f2c336421682cad40d60c5118ed817ce733964c", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T19:04:39Z", "type": "forcePushed"}, {"oid": "33110d7dd3b495f3086d33f7aee1469d9a7b053d", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/33110d7dd3b495f3086d33f7aee1469d9a7b053d", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T20:52:14Z", "type": "forcePushed"}, {"oid": "e1cb8385041b8638554530695473f025b645f85e", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e1cb8385041b8638554530695473f025b645f85e", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T20:53:11Z", "type": "forcePushed"}, {"oid": "29b7aac75cbc8aebd0ca02e4d48ac435c10b33ca", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/29b7aac75cbc8aebd0ca02e4d48ac435c10b33ca", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T21:14:37Z", "type": "forcePushed"}, {"oid": "d31fa16021325d1204dd8674aba90a32d155a3b2", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d31fa16021325d1204dd8674aba90a32d155a3b2", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T21:18:36Z", "type": "forcePushed"}, {"oid": "1f1bc25383ff9921b8557662dc84d7de9ddc20b2", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1f1bc25383ff9921b8557662dc84d7de9ddc20b2", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T21:22:24Z", "type": "forcePushed"}, {"oid": "bbc489c885c11f93ef0aa1bb2c35e569497b2d16", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/bbc489c885c11f93ef0aa1bb2c35e569497b2d16", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T21:25:19Z", "type": "commit"}, {"oid": "bbc489c885c11f93ef0aa1bb2c35e569497b2d16", "url": "https://github.com/Azure/azure-iot-sdk-java/commit/bbc489c885c11f93ef0aa1bb2c35e569497b2d16", "message": "feat(samples): Updating and adding samples for pnp summer refresh", "committedDate": "2020-07-08T21:25:19Z", "type": "forcePushed"}]}