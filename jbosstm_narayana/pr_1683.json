{"pr_number": 1683, "pr_title": "[JBTM-3368] provide error messages in the HTTP responses", "pr_author": "ochaloup", "pr_createdAt": "2020-10-06T11:53:01Z", "pr_url": "https://github.com/jbosstm/narayana/pull/1683", "timeline": [{"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497", "url": "https://github.com/jbosstm/narayana/commit/263af1c535e7b3dd5869180a1e447bd31e66b497", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-06T12:26:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDQxNA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500874414", "body": "we should rename this \"status\" variable :)", "bodyText": "we should rename this \"status\" variable :)", "bodyHTML": "<p dir=\"auto\">we should rename this \"status\" variable :)</p>", "author": "xstefank", "createdAt": "2020-10-07T09:36:56Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -529,7 +531,7 @@ public boolean isActive(URI lraId) {\n                 .header(\"Accept\", MediaType.APPLICATION_JSON)\n                 .get();\n \n-        if (status.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (status.getStatus() == NOT_FOUND.getStatusCode()) {", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyNjUyNQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501726525", "bodyText": "I changed to \"lra\" as I can't find any better name. In case, please, suggest me some better.", "author": "ochaloup", "createdAt": "2020-10-08T13:37:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDQxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTYzNQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500875635", "body": "If we are to include the message for 404 not found, it should mention that the requested LRA id was not found. This is too general for a particular case.", "bodyText": "If we are to include the message for 404 not found, it should mention that the requested LRA id was not found. This is too general for a particular case.", "bodyHTML": "<p dir=\"auto\">If we are to include the message for 404 not found, it should mention that the requested LRA id was not found. This is too general for a particular case.</p>", "author": "xstefank", "createdAt": "2020-10-07T09:38:57Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -581,10 +583,11 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n             return null;\n         }\n \n-        if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n             String responseContent = response.readEntity();\n-            throw new NotFoundException(\"Failed to get status of LRA id \" + lraId\n-                    + (responseContent != null ? \": \" + responseContent : \"\"));\n+            String errorMsg = \"Failed to get status of LRA id \" + lraId", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcyODYzNg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501728636", "bodyText": "I tried to make this better.", "author": "ochaloup", "createdAt": "2020-10-08T13:39:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTYzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg0OA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500876848", "body": "this can go to i18NLogger", "bodyText": "this can go to i18NLogger", "bodyHTML": "<p dir=\"auto\">this can go to i18NLogger</p>", "author": "xstefank", "createdAt": "2020-10-07T09:40:49Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -706,11 +709,14 @@ private URI enlistCompensator(URI uri, long timelimit, String linkHeader, String\n \n         if (response.getStatus() == Response.Status.PRECONDITION_FAILED.getStatusCode()) {\n                 LRALogger.i18NLogger.error_tooLateToJoin(lraId, response.toString());\n-            throw new WebApplicationException(lraId + \": Too late to join with this LRA \", PRECONDITION_FAILED);\n-        } else if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%s'\",\n-                    lraId, base, Response.Status.NOT_FOUND.getStatusCode());\n-            throw new WebApplicationException(uri.toASCIIString(), Response.Status.GONE);\n+                String errorMsg = lraId + \": Too late to join with this LRA \";\n+            throw new WebApplicationException(errorMsg,\n+                    Response.status(PRECONDITION_FAILED).entity(errorMsg).build());\n+        } else if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%d (%s)'. Returning '%d (%s)'.\",", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc0OTAxNA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501749014", "bodyText": "we normally used WARN and ERROR levels to be part of the i18NLogger messages but I assume this is a good idea to use it here as well", "author": "ochaloup", "createdAt": "2020-10-08T14:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODIwMA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500878200", "body": "also maybe better to add this to i18NLogger?", "bodyText": "also maybe better to add this to i18NLogger?", "bodyHTML": "<p dir=\"auto\">also maybe better to add this to i18NLogger?</p>", "author": "xstefank", "createdAt": "2020-10-07T09:43:04Z", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -739,16 +745,18 @@ private void endLRA(URI lra, boolean confirm) throws WebApplicationException {\n         try {\n             response = getTarget().path(confirmUrl).request().put();\n \n-            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, Response.Status.NOT_FOUND)) {\n+            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, NOT_FOUND)) {\n                 LRALogger.i18NLogger.error_lraTerminationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(lra, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA finished with an unexpected status code: \" + response.getStatus());\n             }\n \n-            if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-                LRALogger.logger.infof(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n-                        confirm ? \"close\" : \"compensate\", lra, base, Response.Status.NOT_FOUND.getReasonPhrase());\n-                throw new NotFoundException(lra.toASCIIString());\n+            if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+                String errorMsg = String.format(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n+                        confirm ? \"close\" : \"compensate\", lra, base, NOT_FOUND.getReasonPhrase());\n+                LRALogger.logger.info(errorMsg);", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NDI1MQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501754251", "bodyText": "+1", "author": "ochaloup", "createdAt": "2020-10-08T14:13:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODIwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MDIxNw==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500880217", "body": "missing closing `'`", "bodyText": "missing closing '", "bodyHTML": "<p dir=\"auto\">missing closing <code>'</code></p>", "author": "xstefank", "createdAt": "2020-10-07T09:46:16Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -289,9 +290,10 @@ public Response getNestedLRAStatus(@PathParam(\"NestedLraId\")String nestedLraId)\n \n         if (status == null || lra.getLRAStatus() == null) {\n             LRALogger.i18NLogger.error_cannotGetStatusOfNestedLraURI(nestedLraId, lra.getId());\n-            throw new WebApplicationException(Response.status(Response.Status.PRECONDITION_FAILED)\n-                    .entity(String.format(\"LRA is in the wrong state for operation '%s': %s\",\n-                            \"getNestedLRAStatus\", \"The LRA is still  active\")).build());\n+            String errMsg = String.format(\"LRA (parent: %s, nested:%s) is in the wrong state for operation \" +\n+                    \"'getNestedLRAStatus: The LRA is still active\", nestedLraId, lra.getId());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NTEwNg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501755106", "bodyText": "+1", "author": "ochaloup", "createdAt": "2020-10-08T14:14:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MDIxNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MTE2Mw==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500881163", "body": "```suggestion\r\n            String errorMsg = lraId + \": Invalid format of LRA id URL format to convert to URI \" + e.getMessage();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();\n          \n          \n            \n                        String errorMsg = lraId + \": Invalid format of LRA id URL format to convert to URI \" + e.getMessage();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> errorMsg <span class=\"pl-k\">=</span> lraId <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: <span class=\"x x-first x-last\">Ivalid</span> format of LRA id URL format to convert to URI <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> e<span class=\"pl-k\">.</span>getMessage();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> errorMsg <span class=\"pl-k\">=</span> lraId <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>: <span class=\"x x-first x-last\">Invalid</span> format of LRA id URL format to convert to URI <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> e<span class=\"pl-k\">.</span>getMessage();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "xstefank", "createdAt": "2020-10-07T09:47:49Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -564,15 +566,19 @@ private URI toURI(String lraId, String message) {\n                 url = new URL(String.format(\"%s%s/%s\", context.getBaseUri(), COORDINATOR_PATH_NAME, lraId));\n             } catch (MalformedURLException e1) {\n                 LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e1);\n-                throw new WebApplicationException(message, e1, BAD_REQUEST);\n+                String errorMsg = lraId + \": Illegal LRA id format \" + e1.getMessage();\n+                throw new WebApplicationException(errorMsg, e1,\n+                        Response.status(BAD_REQUEST).entity(errorMsg).build());\n             }\n         }\n \n         try {\n             return url.toURI();\n         } catch (URISyntaxException e) {\n             LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e);\n-            throw new WebApplicationException(message, e, BAD_REQUEST);\n+            String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4NTc1OQ==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500885759", "body": "I just wonder whether this is a Response design to redundantly repeat the status in the included response and it doesn't provide a simpler API to include the errorMsg. If not, then this is ok to go.", "bodyText": "I just wonder whether this is a Response design to redundantly repeat the status in the included response and it doesn't provide a simpler API to include the errorMsg. If not, then this is ok to go.", "bodyHTML": "<p dir=\"auto\">I just wonder whether this is a Response design to redundantly repeat the status in the included response and it doesn't provide a simpler API to include the errorMsg. If not, then this is ok to go.</p>", "author": "xstefank", "createdAt": "2020-10-07T09:55:12Z", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -252,7 +256,9 @@ public synchronized URI startLRA(String baseUri, URI parentLRA, String clientId,\n \n             lra.abort();\n \n-            throw new InternalServerErrorException(\"Could not start LRA: \" + ActionStatus.stringForm(status));\n+            String errorMsg = \"Could not start LRA: \" + ActionStatus.stringForm(status);\n+            throw new InternalServerErrorException(errorMsg,\n+                    Response.status(INTERNAL_SERVER_ERROR).entity(errorMsg).build());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NzI0MA==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r501757240", "bodyText": "That's how I understand it. I was checking if I can do this better but I haven't found it. Any WebApplicationException takes the Response as parameter in constructor and run validity checker where it checks if the status of the response is the same as it's expected by the name of the exception. I can't find another way now.", "author": "ochaloup", "createdAt": "2020-10-08T14:17:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4NTc1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkxNTE5Mg==", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500915192", "body": "```suggestion\r\n                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found exception with \" + e.getMessage());\r\n```\r\n\r\nseems a little out of context without this word", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());\n          \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found exception with \" + e.getMessage());\n          \n      \n    \n    \n  \n\nseems a little out of context without this word", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    lraTrace(containerRequestContext, lraId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ServerLRAFilter before: not found with <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> e<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    lraTrace(containerRequestContext, lraId, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ServerLRAFilter before: not found <span class=\"x x-first x-last\">exception </span>with <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> e<span class=\"pl-k\">.</span>getMessage());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">seems a little out of context without this word</p>", "author": "xstefank", "createdAt": "2020-10-07T10:46:51Z", "path": "rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java", "diffHunk": "@@ -331,6 +331,7 @@ public void filter(ContainerRequestContext containerRequestContext) {\n                             toURI(terminateURIs.get(STATUS)),\n                             null);\n                 } catch (NotFoundException e) {\n+                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());", "originalCommit": "263af1c535e7b3dd5869180a1e447bd31e66b497", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "url": "https://github.com/jbosstm/narayana/commit/7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-08T14:22:25Z", "type": "forcePushed"}, {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-19T08:30:48Z", "type": "commit"}, {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "message": "[JBTM-3368] provide error messages in the HTTP responses", "committedDate": "2020-10-19T08:30:48Z", "type": "forcePushed"}]}