{"pr_number": 5021, "pr_title": "[LW] Compress snapshots returned to the user", "pr_author": "Jolyon-S", "pr_createdAt": "2020-10-12T09:28:41Z", "pr_url": "https://github.com/palantir/atlasdb/pull/5021", "timeline": [{"oid": "1fd70733076945cc50c7a24da0b1212a2669cb3d", "url": "https://github.com/palantir/atlasdb/commit/1fd70733076945cc50c7a24da0b1212a2669cb3d", "message": "Initial pass on retention", "committedDate": "2020-10-12T09:30:18Z", "type": "commit"}, {"oid": "0ac6f05d79664a1571055e17134892ad8329f28c", "url": "https://github.com/palantir/atlasdb/commit/0ac6f05d79664a1571055e17134892ad8329f28c", "message": "squash again", "committedDate": "2020-10-12T09:35:47Z", "type": "commit"}, {"oid": "0ac6f05d79664a1571055e17134892ad8329f28c", "url": "https://github.com/palantir/atlasdb/commit/0ac6f05d79664a1571055e17134892ad8329f28c", "message": "squash again", "committedDate": "2020-10-12T09:35:47Z", "type": "forcePushed"}, {"oid": "b78fbe5719459df613522242cc857aa8c95b2cbc", "url": "https://github.com/palantir/atlasdb/commit/b78fbe5719459df613522242cc857aa8c95b2cbc", "message": "Resolve strange merge issues", "committedDate": "2020-10-12T09:58:47Z", "type": "commit"}, {"oid": "c4c102fcbb000ad444a0bb7b0b4b3fbe2cd21393", "url": "https://github.com/palantir/atlasdb/commit/c4c102fcbb000ad444a0bb7b0b4b3fbe2cd21393", "message": "remove redundant method", "committedDate": "2020-10-12T10:01:48Z", "type": "commit"}, {"oid": "d8049d808375e77df9ccc97ec05fc2b208db6319", "url": "https://github.com/palantir/atlasdb/commit/d8049d808375e77df9ccc97ec05fc2b208db6319", "message": "remove old changelog", "committedDate": "2020-10-12T10:03:45Z", "type": "commit"}, {"oid": "43d006802be3d037d91f86d9e85bf0fe23a2d98e", "url": "https://github.com/palantir/atlasdb/commit/43d006802be3d037d91f86d9e85bf0fe23a2d98e", "message": "Add generated changelog entries", "committedDate": "2020-10-12T10:03:45Z", "type": "commit"}, {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "url": "https://github.com/palantir/atlasdb/commit/17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "message": "Remove unused imports", "committedDate": "2020-10-12T13:07:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503887457", "body": "Feels wrong that you would allow this?", "bodyText": "Feels wrong that you would allow this?", "bodyHTML": "<p dir=\"auto\">Feels wrong that you would allow this?</p>", "author": "jkozlowski", "createdAt": "2020-10-13T11:51:57Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "diffHunk": "@@ -77,7 +77,10 @@ VersionedEventStoreState getStateForTesting() {\n                 .build();\n     }\n \n-    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, Long startVersion) {\n+    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, long startVersion) {\n+        if (endVersion < startVersion) {", "originalCommit": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MDA4OQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503890089", "bodyText": "Wouldn't you want to validate this where the parent method is called? As I understand it, it's because it simplifies the code in LockWatchEventLog#getEventsBetweenVersions, where you just snapshotVersion + 1, but I think this complexity should live there. Because in all other cases calling this method with the versions inverted is probably wrong?", "author": "jkozlowski", "createdAt": "2020-10-13T11:56:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYxODIxNw==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505618217", "bodyText": "Fair enough", "author": "Jolyon-S", "createdAt": "2020-10-15T15:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNDg2MQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503904861", "body": "Can you also add tests here? I think there's a bunch of edge cases to cover around the snapshot computation piece? Or add unit tests, whatever works for you.", "bodyText": "Can you also add tests here? I think there's a bunch of edge cases to cover around the snapshot computation piece? Or add unit tests, whatever works for you.", "bodyHTML": "<p dir=\"auto\">Can you also add tests here? I think there's a bunch of edge cases to cover around the snapshot computation piece? Or add unit tests, whatever works for you.</p>", "author": "jkozlowski", "createdAt": "2020-10-13T12:21:32Z", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -236,25 +236,23 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n+    public void getEventsForTransactionsReturnsSnapshotWithCondensedEvents() {", "originalCommit": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzODI3OQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505638279", "bodyText": "we now have tests for:\n\nno condensing\nsome condensing\nmax condensing\n\nI think that covers all the main cases.", "author": "Jolyon-S", "createdAt": "2020-10-15T15:30:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNDg2MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNTE5NA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503905194", "body": "Check continuity?", "bodyText": "Check continuity?", "bodyHTML": "<p dir=\"auto\">Check continuity?</p>", "author": "jkozlowski", "createdAt": "2020-10-13T12:22:02Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "diffHunk": "@@ -61,6 +61,13 @@ private ClientLockWatchSnapshot() {\n                 ImmutableSet.copyOf(watches));\n     }\n \n+    LockWatchStateUpdate.Snapshot getSnapshotWithEvents(LockWatchEvents events, UUID versionId) {", "originalCommit": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMTA2MA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505621060", "bodyText": "Factored out a check so that this is always the case (in ClientLockWatchSnapshot normally as well as in this case).", "author": "Jolyon-S", "createdAt": "2020-10-15T15:08:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNTE5NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNjk5MA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r504526990", "body": "For completeness, can you also remove the \"Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");\" here; it's checked in the TimestampMapping", "bodyText": "For completeness, can you also remove the \"Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");\" here; it's checked in the TimestampMapping", "bodyHTML": "<p dir=\"auto\">For completeness, can you also remove the \"Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");\" here; it's checked in the TimestampMapping</p>", "author": "jkozlowski", "createdAt": "2020-10-14T09:16:33Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -100,7 +105,13 @@ public TransactionsLockWatchUpdate getUpdateForTransactions(\n         lastKnownVersion.ifPresent(version -> assertTrue(version.version() <= timestampMapping.lastVersion().version(),", "originalCommit": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMjQ4NA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505622484", "bodyText": "Good point - removed", "author": "Jolyon-S", "createdAt": "2020-10-15T15:09:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNjk5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODM5NQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r504528395", "body": "This comment should just live on VersionBounds, if you really care about it.", "bodyText": "This comment should just live on VersionBounds, if you really care about it.", "bodyHTML": "<p dir=\"auto\">This comment should just live on VersionBounds, if you really care about it.</p>", "author": "jkozlowski", "createdAt": "2020-10-14T09:18:44Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -49,31 +51,36 @@ CacheUpdate processUpdate(LockWatchStateUpdate update) {\n     }\n \n     /**\n-     * @param lastKnownVersion latest version that the client knows about; should be before timestamps in the mapping.\n-     * @param endVersion       mapping from timestamp to identified version from client-side event cache.\n-     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive)\n+     * @param versionBounds contains:", "originalCommit": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "63d402726b7795e805abf936a8153cf61790d8e2", "url": "https://github.com/palantir/atlasdb/commit/63d402726b7795e805abf936a8153cf61790d8e2", "message": "some progress", "committedDate": "2020-10-15T15:08:29Z", "type": "commit"}, {"oid": "5add0394d0864ab56e46b79f522cd054ef9da8cb", "url": "https://github.com/palantir/atlasdb/commit/5add0394d0864ab56e46b79f522cd054ef9da8cb", "message": "merge", "committedDate": "2020-10-15T15:14:23Z", "type": "commit"}, {"oid": "05714a9c54c676d587bdcf7e134670178079dbf8", "url": "https://github.com/palantir/atlasdb/commit/05714a9c54c676d587bdcf7e134670178079dbf8", "message": "all the tests", "committedDate": "2020-10-15T15:27:29Z", "type": "commit"}, {"oid": "4f231ea9cd1fc307094fa2673d4d329b8b9433ce", "url": "https://github.com/palantir/atlasdb/commit/4f231ea9cd1fc307094fa2673d4d329b8b9433ce", "message": "rename and another refactor", "committedDate": "2020-10-15T15:29:51Z", "type": "commit"}, {"oid": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20", "url": "https://github.com/palantir/atlasdb/commit/9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20", "message": "unused imports", "committedDate": "2020-10-16T12:28:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTMzOA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r509185338", "body": "Would we get anything in terms of simplification of code if this was taking Long startTimestamp, instead of Set<Long>? atlas-proxy just needs one transaction pushed here.", "bodyText": "Would we get anything in terms of simplification of code if this was taking Long startTimestamp, instead of Set? atlas-proxy just needs one transaction pushed here.", "bodyHTML": "<p dir=\"auto\">Would we get anything in terms of simplification of code if this was taking Long startTimestamp, instead of Set? atlas-proxy just needs one transaction pushed here.</p>", "author": "jkozlowski", "createdAt": "2020-10-21T11:00:42Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -86,18 +85,28 @@ public CommitUpdate getCommitUpdate(long startTs) {\n                 \"start or commit info not processed for start timestamp\");\n \n         CommitInfo commitInfo = maybeCommitInfo.get();\n-        return eventLog.getEventsBetweenVersions(startVersion, commitInfo.commitVersion())\n-                .toCommitUpdate(startVersion.get(), commitInfo);\n+\n+        VersionBounds versionBounds = new VersionBounds.Builder()\n+                .startVersion(startVersion)\n+                .endVersion(commitInfo.commitVersion())\n+                .build();\n+\n+        return eventLog.getEventsBetweenVersions(versionBounds).toCommitUpdate(startVersion.get(), commitInfo);\n     }\n \n     @Override\n     public TransactionsLockWatchUpdate getUpdateForTransactions(", "originalCommit": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1NTI4Mw==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r509255283", "bodyText": "Yes, that would be simpler, but I don't think by leaps and bounds - it just simplifies what we can compress a little.", "author": "Jolyon-S", "createdAt": "2020-10-21T12:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTMzOA=="}], "type": "inlineReview"}, {"oid": "4c9376f3a0e6a4f2295e906149cea9ec44e14860", "url": "https://github.com/palantir/atlasdb/commit/4c9376f3a0e6a4f2295e906149cea9ec44e14860", "message": "Merge branch 'develop' into snapshot-compression-squashed-2\n\n# Conflicts:\n#\tatlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java\n#\tatlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java\n#\tatlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java\n#\tatlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "committedDate": "2021-02-15T13:27:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjE5NTE3Nw==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r576195177", "body": "This check lives in `TimestampMapping`", "bodyText": "This check lives in TimestampMapping", "bodyHTML": "<p dir=\"auto\">This check lives in <code>TimestampMapping</code></p>", "author": "Jolyon-S", "createdAt": "2021-02-15T13:34:02Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -86,18 +85,28 @@ public CommitUpdate getCommitUpdate(long startTs) {\n                 \"start or commit info not processed for start timestamp\");\n \n         CommitInfo commitInfo = maybeCommitInfo.get();\n-        return eventLog.getEventsBetweenVersions(startVersion, commitInfo.commitVersion())\n-                .toCommitUpdate(startVersion.get(), commitInfo);\n+\n+        VersionBounds versionBounds = new VersionBounds.Builder()\n+                .startVersion(startVersion)\n+                .endVersion(commitInfo.commitVersion())\n+                .build();\n+\n+        return eventLog.getEventsBetweenVersions(versionBounds).toCommitUpdate(startVersion.get(), commitInfo);\n     }\n \n     @Override\n     public TransactionsLockWatchUpdate getUpdateForTransactions(\n             Set<Long> startTimestamps,\n             Optional<LockWatchVersion> lastKnownVersion) {\n-        Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");", "originalCommit": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89e0532001f2aa5fb9cae60f3dce58cc488611c7", "url": "https://github.com/palantir/atlasdb/commit/89e0532001f2aa5fb9cae60f3dce58cc488611c7", "message": "tidy", "committedDate": "2021-02-15T13:46:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjIwMzk0MQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r576203941", "body": "We want to get the events _after_ the snapshot only", "bodyText": "We want to get the events after the snapshot only", "bodyHTML": "<p dir=\"auto\">We want to get the events <em>after</em> the snapshot only</p>", "author": "Jolyon-S", "createdAt": "2021-02-15T13:48:26Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -49,35 +52,44 @@ CacheUpdate processUpdate(LockWatchStateUpdate update) {\n     }\n \n     /**\n-     * @param lastKnownVersion latest version that the client knows about; should be before timestamps in the mapping.\n-     * @param endVersion       mapping from timestamp to identified version from client-side event cache.\n-     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive)\n+     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive);\n+     *         this may begin with a snapshot if the latest version is too far behind, and this snapshot may be\n+     *         condensed.\n      */\n-    public ClientLogEvents getEventsBetweenVersions(\n-            Optional<LockWatchVersion> lastKnownVersion, LockWatchVersion endVersion) {\n-        Optional<LockWatchVersion> startVersion = lastKnownVersion.map(this::createStartVersion);\n-        LockWatchVersion currentVersion = getLatestVersionAndVerify(endVersion);\n+    public ClientLogEvents getEventsBetweenVersions(VersionBounds versionBounds) {\n+        Optional<LockWatchVersion> startVersion = versionBounds.startVersion().map(this::createStartVersion);\n+        LockWatchVersion currentVersion = getLatestVersionAndVerify(versionBounds.endVersion());\n \n         if (!startVersion.isPresent()\n                 || differentLeaderOrTooFarBehind(currentVersion, lastKnownVersion.get(), startVersion.get())) {\n+            long snapshotVersion = versionBounds.snapshotVersion() + 1;\n+            Collection<LockWatchEvent> afterSnapshotEvents;\n+            if (snapshotVersion > versionBounds.endVersion().version()) {\n+                afterSnapshotEvents = ImmutableList.of();\n+            } else {\n+                afterSnapshotEvents = eventStore.getEventsBetweenVersionsInclusive(\n+                        Optional.of(snapshotVersion), versionBounds.endVersion().version());\n+            }", "originalCommit": "89e0532001f2aa5fb9cae60f3dce58cc488611c7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9720e9eb93f6d6efc6ac307195342c2df1beec62", "url": "https://github.com/palantir/atlasdb/commit/9720e9eb93f6d6efc6ac307195342c2df1beec62", "message": "fix", "committedDate": "2021-02-16T10:35:49Z", "type": "commit"}, {"oid": "a100b91f97785f3dc452c93a5c9ca16dcf547b3c", "url": "https://github.com/palantir/atlasdb/commit/a100b91f97785f3dc452c93a5c9ca16dcf547b3c", "message": "exterminate", "committedDate": "2021-02-16T10:53:45Z", "type": "commit"}, {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "url": "https://github.com/palantir/atlasdb/commit/a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "message": "maybe that fixes it", "committedDate": "2021-02-16T11:59:08Z", "type": "commit"}, {"oid": "6ef17b0e1dd763694f2f83d06fe62d21cbc188fe", "url": "https://github.com/palantir/atlasdb/commit/6ef17b0e1dd763694f2f83d06fe62d21cbc188fe", "message": "Add generated changelog entries", "committedDate": "2021-02-16T11:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyMDYwMg==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583020602", "body": "getSnapshot() can be private", "bodyText": "getSnapshot() can be private", "bodyHTML": "<p dir=\"auto\">getSnapshot() can be private</p>", "author": "gmaretic", "createdAt": "2021-02-25T17:21:49Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "diffHunk": "@@ -60,11 +60,19 @@ private ClientLockWatchSnapshot() {\n                 ImmutableSet.copyOf(watches));\n     }\n \n+    LockWatchStateUpdate.Snapshot getSnapshotWithEvents(LockWatchEvents events, UUID versionId) {\n+        ClientLockWatchSnapshot freshSnapshot = create();\n+        freshSnapshot.resetWithSnapshot(getSnapshot());", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyMzQ5NA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583023494", "body": "Oh no you don't", "bodyText": "Oh no you don't", "bodyHTML": "<p dir=\"auto\">Oh no you don't</p>", "author": "gmaretic", "createdAt": "2021-02-25T17:25:54Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionBounds.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.keyvalue.api.watch;\n+\n+import com.palantir.lock.watch.LockWatchVersion;\n+import java.util.Optional;\n+import java.util.UUID;\n+import org.immutables.value.Value;\n+\n+@Value.Immutable\n+interface VersionBounds {\n+    Optional<LockWatchVersion> startVersion();\n+\n+    LockWatchVersion endVersion();\n+\n+    /**\n+     * If the start version is too far behind and we need to take a snapshot, this field communicates how much we can\n+     * condense the events in that snapshot.\n+     */\n+    Optional<Long> earliestSnapshotVersion();\n+\n+    @Value.Derived\n+    default long snapshotVersion() {\n+        return earliestSnapshotVersion().orElseGet(() -> endVersion().version());\n+    }\n+\n+    @Value.Derived\n+    default UUID leader() {\n+        return endVersion().id();\n+    }\n+\n+    class Builder extends ImmutableVersionBounds.Builder {}", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyNzAzMQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583027031", "body": "that versionRange() method is super overengineered, since the correctness relies on the check below it at which point you can literally just do range of first event.sequence + length of list -1 instead of fancy streams", "bodyText": "that versionRange() method is super overengineered, since the correctness relies on the check below it at which point you can literally just do range of first event.sequence + length of list -1 instead of fancy streams", "bodyHTML": "<p dir=\"auto\">that versionRange() method is super overengineered, since the correctness relies on the check below it at which point you can literally just do range of first event.sequence + length of list -1 instead of fancy streams</p>", "author": "gmaretic", "createdAt": "2021-02-25T17:30:28Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNTI0Ng==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583525246", "bodyText": "Ha! Good point, actually.", "author": "Jolyon-S", "createdAt": "2021-02-26T10:07:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyNzAzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyODU5Ng==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583028596", "body": "This can never happen", "bodyText": "This can never happen", "bodyHTML": "<p dir=\"auto\">This can never happen</p>", "author": "gmaretic", "createdAt": "2021-02-25T17:32:38Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNTgwMA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583525800", "bodyText": "Not only because I only make a range if the events are non-empty, but also because of the other check. Removed.", "author": "Jolyon-S", "createdAt": "2021-02-26T10:08:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyODU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyOTI1NQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583029255", "body": "below: wth!!!", "bodyText": "below: wth!!!", "bodyHTML": "<p dir=\"auto\">below: wth!!!</p>", "author": "gmaretic", "createdAt": "2021-02-25T17:33:30Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()\n+                            || latestVersion.get().version() + 1 == firstVersion,\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstVersion));\n+        }\n+    }\n+", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNjQ1Mg==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583526452", "bodyText": "Don't worry, I've come to see the sins of my ways.", "author": "Jolyon-S", "createdAt": "2021-02-26T10:09:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyOTI1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583034686", "body": "Maybe the invariant holds, but this is also just easier to read\r\n```suggestion\r\n                    versionRange().get().contains(latestVersion.get().version())\r\n```", "bodyText": "Maybe the invariant holds, but this is also just easier to read\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                firstVersion <= latestVersion.get().version()\n          \n          \n            \n                                versionRange().get().contains(latestVersion.get().version())", "bodyHTML": "<p dir=\"auto\">Maybe the invariant holds, but this is also just easier to read</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"x x-first\">firstVersion </span><span class=\"pl-k x\">&lt;=</span><span class=\"x x-last\"> </span>latestVersion<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>version()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"x x-first\">versionRange()</span><span class=\"pl-k x\">.</span><span class=\"x\">get()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">contains(</span>latestVersion<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>version(<span class=\"x x-first x-last\">)</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gmaretic", "createdAt": "2021-02-25T17:41:02Z", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNzYyOQ==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583527629", "bodyText": "That's not the same check - what if latest version is > the upper bound of the range?", "author": "Jolyon-S", "createdAt": "2021-02-26T10:12:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyODg1Ng==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583528856", "bodyText": "Although, on review of the code, I don't think that can happen.", "author": "Jolyon-S", "createdAt": "2021-02-26T10:13:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyOTIxNg==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583529216", "bodyText": "but to be safe, I'd prefer to do this.", "author": "Jolyon-S", "createdAt": "2021-02-26T10:14:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzU1NjMzMg==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583556332", "bodyText": "I know it's not equivalent, but the method name assertNoEventsAreMissing implies they are connected. So then change the method name to assertNoEventsAreMissingAfterLatestVersion?", "author": "gmaretic", "createdAt": "2021-02-26T10:58:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzA1MjQ1MA==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583052450", "body": "Can we make these tests more legible by not using seemingly magic numbers?\r\nI.e.,\r\n```suggestion\r\n               eventCache.getUpdateForTransactions(ImmutableSet.of(START_TS, TS_16), Optional.empty());\r\n```\r\nand then using those in the asserts, and similarly below not using the magic `LockWatchVersion` but call `logId` and `lastKnownVersion` on the relevant updates?", "bodyText": "Can we make these tests more legible by not using seemingly magic numbers?\nI.e.,\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            eventCache.getUpdateForTransactions(Sets.union(TIMESTAMPS, TIMESTAMPS_2), Optional.empty());\n          \n          \n            \n                           eventCache.getUpdateForTransactions(ImmutableSet.of(START_TS, TS_16), Optional.empty());\n          \n      \n    \n    \n  \n\nand then using those in the asserts, and similarly below not using the magic LockWatchVersion but call logId and lastKnownVersion on the relevant updates?", "bodyHTML": "<p dir=\"auto\">Can we make these tests more legible by not using seemingly magic numbers?<br>\nI.e.,</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"310\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">               <span class=\"x x-first x-last\"> </span>eventCache<span class=\"pl-k\">.</span>getUpdateForTransactions(<span class=\"pl-smi x x-first\">Sets</span><span class=\"pl-k x\">.</span><span class=\"x\">union(</span><span class=\"pl-c1 x\">TIMESTAMPS</span><span class=\"x\">, </span><span class=\"pl-c1 x x-last\">TIMESTAMPS_2</span>), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"310\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">               eventCache<span class=\"pl-k\">.</span>getUpdateForTransactions(<span class=\"pl-smi x x-first\">ImmutableSet</span><span class=\"pl-k x\">.</span><span class=\"x\">of(</span><span class=\"pl-c1 x\">START_TS</span><span class=\"x\">, </span><span class=\"pl-c1 x x-last\">TS_16</span>), <span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">and then using those in the asserts, and similarly below not using the magic <code>LockWatchVersion</code> but call <code>logId</code> and <code>lastKnownVersion</code> on the relevant updates?</p>", "author": "gmaretic", "createdAt": "2021-02-25T18:06:00Z", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -296,30 +296,72 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n-        createEventCache(3);\n+    public void getEventsForTransactionsNoCondensing() {\n         setupInitialState();\n-        eventCache.processGetCommitTimestampsUpdate(COMMIT_UPDATE, SUCCESS);\n-        eventCache.removeTransactionStateFromCache(START_TS);\n-        verifyStage();\n-\n+        eventCache.processStartTransactionsUpdate(ImmutableSet.of(), SUCCESS);\n         eventCache.processStartTransactionsUpdate(TIMESTAMPS_2, SUCCESS_2);\n         verifyStage();\n \n-        TransactionsLockWatchUpdate results = eventCache.getUpdateForTransactions(TIMESTAMPS_2, Optional.empty());\n+        // Client is behind and needs a snapshot, but no compression can be done as the first transaction is at the\n+        // first version\n+        TransactionsLockWatchUpdate results =\n+                eventCache.getUpdateForTransactions(Sets.union(TIMESTAMPS, TIMESTAMPS_2), Optional.empty());", "originalCommit": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUzMjYwMg==", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583532602", "bodyText": "Done", "author": "Jolyon-S", "createdAt": "2021-02-26T10:19:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzA1MjQ1MA=="}], "type": "inlineReview"}, {"oid": "32877c3bb67e24d19dca695989b9146441fa1b2b", "url": "https://github.com/palantir/atlasdb/commit/32877c3bb67e24d19dca695989b9146441fa1b2b", "message": "booom", "committedDate": "2021-02-26T10:18:07Z", "type": "commit"}, {"oid": "f01414faea258e0c0838832ec74a86dde3e548b6", "url": "https://github.com/palantir/atlasdb/commit/f01414faea258e0c0838832ec74a86dde3e548b6", "message": "rename", "committedDate": "2021-02-26T11:00:09Z", "type": "commit"}]}