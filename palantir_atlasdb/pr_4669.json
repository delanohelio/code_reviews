{"pr_number": 4669, "pr_title": "Lazy Initialization for ReplaceIfExceptionMatchingProxy", "pr_author": "jeremyk-91", "pr_createdAt": "2020-03-24T18:51:52Z", "pr_url": "https://github.com/palantir/atlasdb/pull/4669", "timeline": [{"oid": "ce926a073b00f29b7bea4e9977f1e38ab9e73393", "url": "https://github.com/palantir/atlasdb/commit/ce926a073b00f29b7bea4e9977f1e38ab9e73393", "message": "Lazy initialization", "committedDate": "2020-03-24T18:43:00Z", "type": "commit"}, {"oid": "34e6f91de724a2722dcb335e30bc373f5f26c80e", "url": "https://github.com/palantir/atlasdb/commit/34e6f91de724a2722dcb335e30bc373f5f26c80e", "message": "Add generated changelog entries", "committedDate": "2020-03-24T18:43:00Z", "type": "commit"}, {"oid": "3d079904fb6238ec4766c75561e7438ed7bb2c66", "url": "https://github.com/palantir/atlasdb/commit/3d079904fb6238ec4766c75561e7438ed7bb2c66", "message": "Add generated changelog entries", "committedDate": "2020-03-24T18:43:00Z", "type": "commit"}, {"oid": "7d3e55b96e665c73dc4392dd8eeece4edf75be58", "url": "https://github.com/palantir/atlasdb/commit/7d3e55b96e665c73dc4392dd8eeece4edf75be58", "message": "test", "committedDate": "2020-03-24T18:54:33Z", "type": "commit"}, {"oid": "621429ee55656e95488f296a7e7a80b5d37fbd36", "url": "https://github.com/palantir/atlasdb/commit/621429ee55656e95488f296a7e7a80b5d37fbd36", "message": "Remove volatile read", "committedDate": "2020-03-25T10:58:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1OTc0Mg==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397759742", "body": "```suggestion\r\n        if (delegate == null) {\r\n            synchronized (this) {\r\n                if (delegate == null) {\r\n                    delegate = delegateFactory.get();\r\n                }\r\n            }\r\n        }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    T perceivedDelegate = delegate;\n          \n          \n            \n                    if (delegate == null) {\n          \n          \n            \n                        synchronized (this) {\n          \n          \n            \n                            if (delegate == null) {\n          \n          \n            \n                                delegate = delegateFactory.get();\n          \n          \n            \n                            }\n          \n          \n            \n                        }\n          \n          \n            \n                    }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi x x-first\">T</span><span class=\"x\"> perceivedDelegate </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> delegate;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"58\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (delegate </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"59\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">synchronized</span> (<span class=\"pl-c1\">this</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"60\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (delegate <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"61\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    delegate <span class=\"pl-k\">=</span> delegateFactory<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"62\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"63\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"64\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "gmaretic", "createdAt": "2020-03-25T10:45:27Z", "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -51,13 +51,25 @@ protected Object handleInvocation(Object proxy, Method method, Object[] args) th\n         }\n     }\n \n+    private void setUpDelegateIfNecessary() {\n+        T perceivedDelegate = delegate;", "originalCommit": "7d3e55b96e665c73dc4392dd8eeece4edf75be58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4NTQ0NQ==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397785445", "bodyText": "I guess we need a return delegate after that though, which again means we do 2 volatile reads in the happy path?", "author": "jeremyk-91", "createdAt": "2020-03-25T11:31:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1OTc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5ODE0Ng==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397798146", "bodyText": "That wasn't there when I reviewed, but agree this is more performant", "author": "gmaretic", "createdAt": "2020-03-25T11:55:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1OTc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2NjE0NQ==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397766145", "body": "This is kinda funky, because the expected behaviour depends on `delegateFactory.get()` being memoized both for this check to even make sense and to avoid a \"creation storm\". I think the memoization should be explicitly done in this class, maybe by having factory method that takes a non-memoized delegateFactory, and an expiration time and then memoizes it?  ", "bodyText": "This is kinda funky, because the expected behaviour depends on delegateFactory.get() being memoized both for this check to even make sense and to avoid a \"creation storm\". I think the memoization should be explicitly done in this class, maybe by having factory method that takes a non-memoized delegateFactory, and an expiration time and then memoizes it?", "bodyHTML": "<p dir=\"auto\">This is kinda funky, because the expected behaviour depends on <code>delegateFactory.get()</code> being memoized both for this check to even make sense and to avoid a \"creation storm\". I think the memoization should be explicitly done in this class, maybe by having factory method that takes a non-memoized delegateFactory, and an expiration time and then memoizes it?</p>", "author": "gmaretic", "createdAt": "2020-03-25T10:56:35Z", "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/ReplaceIfExceptionMatchingProxy.java", "diffHunk": "@@ -51,13 +51,25 @@ protected Object handleInvocation(Object proxy, Method method, Object[] args) th\n         }\n     }\n \n+    private void setUpDelegateIfNecessary() {\n+        T perceivedDelegate = delegate;\n+        if (perceivedDelegate == null) {\n+            synchronized (this) {\n+                perceivedDelegate = delegate;\n+                if (perceivedDelegate == null) {\n+                    delegate = delegateFactory.get();\n+                }\n+            }\n+        }\n+    }\n+\n     private void replaceIfNecessary(Throwable thrown) {\n         if (shouldReplace.test(thrown)) {\n             synchronized (this) {\n                 T replacement = delegateFactory.get();\n                 if (delegate != replacement) {", "originalCommit": "7d3e55b96e665c73dc4392dd8eeece4edf75be58", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5MjQ0OQ==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397792449", "bodyText": "Yep, the factory method suggestion is good", "author": "jeremyk-91", "createdAt": "2020-03-25T11:44:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2NjE0NQ=="}], "type": "inlineReview"}, {"oid": "dba9dc1d12eae7bde375a9c4896ac5701b07912e", "url": "https://github.com/palantir/atlasdb/commit/dba9dc1d12eae7bde375a9c4896ac5701b07912e", "message": "Refactor memoization to a factory", "committedDate": "2020-03-25T11:44:20Z", "type": "commit"}, {"oid": "44937a2daa4de721c868cf9e776d46e12c4ec70a", "url": "https://github.com/palantir/atlasdb/commit/44937a2daa4de721c868cf9e776d46e12c4ec70a", "message": "oops", "committedDate": "2020-03-25T11:53:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc5ODY5Nw==", "url": "https://github.com/palantir/atlasdb/pull/4669#discussion_r397798697", "body": ":P", "bodyText": ":P", "bodyHTML": "<p dir=\"auto\">:P</p>", "author": "gmaretic", "createdAt": "2020-03-25T11:56:23Z", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/http/AtlasDbHttpClients.java", "diffHunk": "@@ -111,7 +111,7 @@ private AtlasDbHttpClients() {\n     private static <T> T wrapWithOkHttpBugHandling(Class<T> type, Supplier<T> supplier) {\n         return ReplaceIfExceptionMatchingProxy.create(\n                 type,\n-                supplier::get,", "originalCommit": "44937a2daa4de721c868cf9e776d46e12c4ec70a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eaa0c615d8013ae1e0fc0306b9cc11f33bdceac9", "url": "https://github.com/palantir/atlasdb/commit/eaa0c615d8013ae1e0fc0306b9cc11f33bdceac9", "message": "Fix checkstyle", "committedDate": "2020-03-25T13:16:30Z", "type": "commit"}]}