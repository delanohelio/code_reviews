{"pr_number": 9717, "pr_title": "Add primary keys to pg_class and pg_index", "pr_author": "mkleen", "pr_createdAt": "2020-03-02T10:15:03Z", "pr_url": "https://github.com/crate/crate/pull/9717", "timeline": [{"oid": "56335b32ce4ae1816b2c696ac4595152936fb11a", "url": "https://github.com/crate/crate/commit/56335b32ce4ae1816b2c696ac4595152936fb11a", "message": "migrate pg_catalog table to use SystemTable Builder", "committedDate": "2020-03-02T11:31:15Z", "type": "forcePushed"}, {"oid": "0a14b338a79d2ae8a1c3fbd3f84f2622e23b185b", "url": "https://github.com/crate/crate/commit/0a14b338a79d2ae8a1c3fbd3f84f2622e23b185b", "message": "migrate pg_class table to use SystemTable Builder", "committedDate": "2020-03-02T15:38:33Z", "type": "forcePushed"}, {"oid": "ace992959feab876d50f0d350c8e8e74fb0c598b", "url": "https://github.com/crate/crate/commit/ace992959feab876d50f0d350c8e8e74fb0c598b", "message": "add values tot pg_index.indexrelid", "committedDate": "2020-03-03T14:06:53Z", "type": "forcePushed"}, {"oid": "42fd1a123c981ada449b31d8c614383d33e31bb9", "url": "https://github.com/crate/crate/commit/42fd1a123c981ada449b31d8c614383d33e31bb9", "message": "Introduce custom classes for pg_class and pg_index", "committedDate": "2020-03-03T21:07:40Z", "type": "forcePushed"}, {"oid": "4ae722fad26f70aed67307e3ae438557cdc8f4bf", "url": "https://github.com/crate/crate/commit/4ae722fad26f70aed67307e3ae438557cdc8f4bf", "message": "convert entries for pg_class and pg_index to inner classes", "committedDate": "2020-03-04T16:31:52Z", "type": "forcePushed"}, {"oid": "9c08742c9719d8d9696acd8f52bb68d4b6f2d6b9", "url": "https://github.com/crate/crate/commit/9c08742c9719d8d9696acd8f52bb68d4b6f2d6b9", "message": "convert entries for pg_class and pg_index to inner classes", "committedDate": "2020-03-04T16:53:54Z", "type": "forcePushed"}, {"oid": "94ef15d55ce4d98b2a46b94f7c693d93d0e501f5", "url": "https://github.com/crate/crate/commit/94ef15d55ce4d98b2a46b94f7c693d93d0e501f5", "message": "convert entries for pg_class and pg_index to inner classes", "committedDate": "2020-03-04T16:59:34Z", "type": "forcePushed"}, {"oid": "5f6008f0fd6351c1bf0ca62718e1467df2b17ffe", "url": "https://github.com/crate/crate/commit/5f6008f0fd6351c1bf0ca62718e1467df2b17ffe", "message": "fix pk ids for pg_class", "committedDate": "2020-03-05T09:59:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MDc2NQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388190765", "body": "`Primary keys` should actually not have a `reltuples` value, not relevant for the kafka usecase. Fixing this is a bit of a effort, not sure if it is worth.", "bodyText": "Primary keys should actually not have a reltuples value, not relevant for the kafka usecase. Fixing this is a bit of a effort, not sure if it is worth.", "bodyHTML": "<p dir=\"auto\"><code>Primary keys</code> should actually not have a <code>reltuples</code> value, not relevant for the kafka usecase. Fixing this is a bit of a effort, not sure if it is worth.</p>", "author": "mkleen", "createdAt": "2020-03-05T10:03:20Z", "path": "sql/src/main/java/io/crate/metadata/pgcatalog/PgClassTable.java", "diffHunk": "@@ -22,107 +22,93 @@\n \n package io.crate.metadata.pgcatalog;\n \n-import io.crate.action.sql.SessionContext;\n-import io.crate.analyze.WhereClause;\n-import io.crate.metadata.ColumnIdent;\n import io.crate.metadata.RelationInfo;\n import io.crate.metadata.RelationName;\n-import io.crate.metadata.Routing;\n-import io.crate.metadata.RoutingProvider;\n-import io.crate.metadata.RowGranularity;\n-import io.crate.metadata.expressions.RowCollectExpressionFactory;\n-import io.crate.metadata.table.ColumnRegistrar;\n-import io.crate.metadata.table.StaticTableInfo;\n+import io.crate.metadata.SystemTable;\n import io.crate.statistics.TableStats;\n-import io.crate.types.ArrayType;\n-import io.crate.types.ObjectType;\n-import org.elasticsearch.cluster.ClusterState;\n \n import java.util.Map;\n \n-import static io.crate.execution.engine.collect.NestableCollectExpression.constant;\n-import static io.crate.execution.engine.collect.NestableCollectExpression.forFunction;\n-import static io.crate.metadata.pgcatalog.OidHash.schemaOid;\n+import static io.crate.metadata.RelationInfo.RelationType.BASE_TABLE;\n+import static io.crate.metadata.RelationInfo.RelationType.VIEW;\n import static io.crate.types.DataTypes.BOOLEAN;\n import static io.crate.types.DataTypes.FLOAT;\n import static io.crate.types.DataTypes.INTEGER;\n import static io.crate.types.DataTypes.SHORT;\n import static io.crate.types.DataTypes.STRING;\n import static io.crate.types.DataTypes.STRING_ARRAY;\n \n-public class PgClassTable extends StaticTableInfo<RelationInfo> {\n+public class PgClassTable {\n \n     public static final RelationName IDENT = new RelationName(PgCatalogSchemaInfo.NAME, \"pg_class\");\n-    private static final String KIND_TABLE = \"r\";\n-    private static final String KIND_VIEW = \"v\";\n-\n+    private static final Map<RelationInfo.RelationType, String> KIND_MAPPING = Map.of(VIEW, \"v\", BASE_TABLE, \"r\");\n     private static final String PERSISTENCE_PERMANENT = \"p\";\n \n-    private final ColumnRegistrar<RelationInfo> columnRegistrar;\n-\n-    Map<ColumnIdent, RowCollectExpressionFactory<RelationInfo>> expressions() {\n-        return columnRegistrar.expressions();\n-    }\n-\n-    private static ColumnRegistrar<RelationInfo> columnRegistrar(TableStats tableStats) {\n-        return new ColumnRegistrar<RelationInfo>(IDENT, RowGranularity.DOC)\n-            .register(\"oid\", INTEGER, () -> forFunction(OidHash::relationOid))\n-            .register(\"relname\", STRING, () -> forFunction(r -> r.ident().name()))\n-            .register(\"relnamespace\", INTEGER,() -> forFunction(r -> schemaOid(r.ident().schema())))\n-            .register(\"reltype\", INTEGER, () -> constant(0))\n-            .register(\"reloftype\", INTEGER, () -> constant(0))\n-            .register(\"relowner\", INTEGER, () -> constant(0))\n-            .register(\"relam\", INTEGER, () -> constant(0))\n-            .register(\"relfilenode\", INTEGER, () -> constant(0))\n-            .register(\"reltablespace\", INTEGER, () -> constant(0))\n-            .register(\"relpages\", INTEGER, () -> constant(0))\n-            .register(\"reltuples\", FLOAT, () -> forFunction(r -> (float) tableStats.numDocs(r.ident())))\n-            .register(\"relallvisible\", INTEGER, () -> constant(0))\n-            .register(\"reltoastrelid\", INTEGER, () -> constant(0))\n-            .register(\"relhasindex\", BOOLEAN, () -> constant(false))\n-            .register(\"relisshared\", BOOLEAN, () -> constant(false))\n-            .register(\"relpersistence\", STRING, () -> constant(PERSISTENCE_PERMANENT))\n-            .register(\"relkind\", STRING, () -> forFunction(r -> r.relationType() == RelationType.VIEW ? KIND_VIEW : KIND_TABLE))\n-            .register(\"relnatts\", SHORT, () -> forFunction(r -> (short) r.columns().size()))\n-            .register(\"relchecks\", SHORT, () -> constant((short) 0))\n-            .register(\"relhasoids\", BOOLEAN, () -> constant(false))\n-            .register(\"relhaspkey\", BOOLEAN, () -> forFunction(r -> r.primaryKey().size() > 0))\n-            .register(\"relhasrules\", BOOLEAN, () -> constant(false))\n-            .register(\"relhastriggers\", BOOLEAN, () -> constant(false))\n-            .register(\"relhassubclass\", BOOLEAN, () -> constant(false))\n-            .register(\"relrowsecurity\", BOOLEAN, () -> constant(false))\n-            .register(\"relforcerowsecurity\", BOOLEAN, () -> constant(false))\n-            .register(\"relispopulated\", BOOLEAN, () -> constant(true))\n-            .register(\"relreplident\", STRING, () -> constant(\"p\"))\n-            .register(\"relispartition\", BOOLEAN, () -> constant(false))\n-            .register(\"relfrozenxid\", INTEGER,() -> constant(0))\n-            .register(\"relminmxid\", INTEGER, () -> constant(0))\n-            .register(\"relacl\", new ArrayType<>(ObjectType.untyped()), () -> constant(null))\n-            .register(\"reloptions\", STRING_ARRAY, () -> constant(null))\n-            .register(\"relpartbound\", ObjectType.untyped(), () -> constant(null));\n+    public static SystemTable<Entry> create(TableStats tableStats) {\n+        return SystemTable.<Entry>builder()\n+            .add(\"oid\", INTEGER, x -> x.oid)\n+            .add(\"relname\", STRING, x -> x.name)\n+            .add(\"relnamespace\", INTEGER, x -> x.schemaOid)\n+            .add(\"reltype\", INTEGER, x -> 0)\n+            .add(\"reloftype\", INTEGER, x -> 0)\n+            .add(\"relowner\", INTEGER, x -> 0)\n+            .add(\"relam\", INTEGER, x -> 0)\n+            .add(\"relfilenode\", INTEGER, x -> 0)\n+            .add(\"reltablespace\", INTEGER, x -> 0)\n+            .add(\"relpages\", INTEGER, x -> 0)\n+            .add(\"reltuples\", FLOAT, x -> (float) tableStats.numDocs(x.ident))", "originalCommit": "5f6008f0fd6351c1bf0ca62718e1467df2b17ffe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMjIyMA==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388212220", "bodyText": "Could we use  relkind / relationType to avoid the numDocs call then?", "author": "mfussenegger", "createdAt": "2020-03-05T10:42:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MDc2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NTUzNQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388385535", "bodyText": "it is addressed now.", "author": "mkleen", "createdAt": "2020-03-05T15:53:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MDc2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwODI2OQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388208269", "body": "```suggestion\r\n        return relationInfo.primaryKey().size() > 1 ||\r\n            (relationInfo.primaryKey().size() == 1 &&\r\n             !relationInfo.primaryKey().get(0).name().equals(\"_id\"));\r\n```\r\n\r\nI think we don't have `null` `RelationInfo` entries.\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return relationInfo != null && (relationInfo.primaryKey().size() > 1 ||\n          \n          \n            \n                                                    (relationInfo.primaryKey().size() == 1 &&\n          \n          \n            \n                                                     !relationInfo.primaryKey().get(0).name().equals(\"_id\")));\n          \n          \n            \n                    return relationInfo.primaryKey().size() > 1 ||\n          \n          \n            \n                        (relationInfo.primaryKey().size() == 1 &&\n          \n          \n            \n                         !relationInfo.primaryKey().get(0).name().equals(\"_id\"));\n          \n      \n    \n    \n  \n\nI think we don't have null RelationInfo entries.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> relationInfo<span class=\"x x-first\"> </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> (relationInfo</span><span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">||</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first x-last\">                            </span>(relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">             <span class=\"x x-first x-last\">                            </span><span class=\"pl-k\">!</span>relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>name()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_id<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">||</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            (relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             <span class=\"pl-k\">!</span>relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">.</span>name()<span class=\"pl-k\">.</span>equals(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_id<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">I think we don't have <code>null</code> <code>RelationInfo</code> entries.</p>", "author": "mfussenegger", "createdAt": "2020-03-05T10:35:33Z", "path": "sql/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java", "diffHunk": "@@ -125,6 +130,50 @@ public InformationSchemaIterables(final Schemas schemas,\n         // these are initialized on a clusterState change\n         routines = emptyList();\n         clusterService.addListener(this);\n+\n+        pgIndices = () -> tablesStream(schemas).filter(this::isPrimaryKey).map(this::pgIndex).iterator();\n+\n+        pgClasses = () -> concat(sequentialStream(relations).map(this::relationToPgClassEntry),\n+                                 sequentialStream(primaryKeys).map(this::primaryKeyToPgClassEntry)).iterator();\n+\n+    }\n+\n+    private boolean isPrimaryKey(RelationInfo relationInfo) {\n+        return relationInfo != null && (relationInfo.primaryKey().size() > 1 ||\n+                                        (relationInfo.primaryKey().size() == 1 &&\n+                                         !relationInfo.primaryKey().get(0).name().equals(\"_id\")));", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwODkxNw==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388208917", "body": "```suggestion\r\n        return new PgClassTable.Entry(\r\n            OidHash.relationOid(info),\r\n            OidHash.schemaOid(info.ident().schema()),\r\n            info.ident(),\r\n            info.ident().name(),\r\n            info.relationType(),\r\n            info.columns().size(),\r\n            info.primaryKey().size() > 0);\r\n```\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new PgClassTable.Entry(OidHash.relationOid(info),\n          \n          \n            \n                                                  OidHash.schemaOid(info.ident().schema()),\n          \n          \n            \n                                                  info.ident(),\n          \n          \n            \n                                                  info.ident().name(),\n          \n          \n            \n                                                  info.relationType(),\n          \n          \n            \n                                                  info.columns().size(),\n          \n          \n            \n                                                  info.primaryKey().size() > 0);\n          \n          \n            \n                    return new PgClassTable.Entry(\n          \n          \n            \n                        OidHash.relationOid(info),\n          \n          \n            \n                        OidHash.schemaOid(info.ident().schema()),\n          \n          \n            \n                        info.ident(),\n          \n          \n            \n                        info.ident().name(),\n          \n          \n            \n                        info.relationType(),\n          \n          \n            \n                        info.columns().size(),\n          \n          \n            \n                        info.primaryKey().size() > 0);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PgClassTable</span>.<span class=\"pl-smi\">Entry</span>(<span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>relationOid(info),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>schemaOid(info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>schema()),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>ident(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>name(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>relationType(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>columns()<span class=\"pl-k\">.</span>size(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PgClassTable</span>.<span class=\"pl-smi\">Entry</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>relationOid(info),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>schemaOid(info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>schema()),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>ident(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>name(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>relationType(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>columns()<span class=\"pl-k\">.</span>size(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mfussenegger", "createdAt": "2020-03-05T10:36:38Z", "path": "sql/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java", "diffHunk": "@@ -125,6 +130,50 @@ public InformationSchemaIterables(final Schemas schemas,\n         // these are initialized on a clusterState change\n         routines = emptyList();\n         clusterService.addListener(this);\n+\n+        pgIndices = () -> tablesStream(schemas).filter(this::isPrimaryKey).map(this::pgIndex).iterator();\n+\n+        pgClasses = () -> concat(sequentialStream(relations).map(this::relationToPgClassEntry),\n+                                 sequentialStream(primaryKeys).map(this::primaryKeyToPgClassEntry)).iterator();\n+\n+    }\n+\n+    private boolean isPrimaryKey(RelationInfo relationInfo) {\n+        return relationInfo != null && (relationInfo.primaryKey().size() > 1 ||\n+                                        (relationInfo.primaryKey().size() == 1 &&\n+                                         !relationInfo.primaryKey().get(0).name().equals(\"_id\")));\n+    }\n+\n+    private PgClassTable.Entry relationToPgClassEntry(RelationInfo info) {\n+        return new PgClassTable.Entry(OidHash.relationOid(info),\n+                                      OidHash.schemaOid(info.ident().schema()),\n+                                      info.ident(),\n+                                      info.ident().name(),\n+                                      info.relationType(),\n+                                      info.columns().size(),\n+                                      info.primaryKey().size() > 0);", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwOTI0MQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388209241", "body": "```suggestion\r\n        return new PgClassTable.Entry(\r\n            OidHash.primaryKeyOid(info),\r\n            OidHash.schemaOid(info.ident().schema()),\r\n            info.ident(),\r\n            info.ident().name() + \"_pkey\",\r\n            info.relationType(),\r\n            info.columns().size(),\r\n            info.primaryKey().size() > 0);\r\n```\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new PgClassTable.Entry(OidHash.primaryKeyOid(info),\n          \n          \n            \n                                                  OidHash.schemaOid(info.ident().schema()),\n          \n          \n            \n                                                  info.ident(),\n          \n          \n            \n                                                  info.ident().name() + \"_pkey\",\n          \n          \n            \n                                                  info.relationType(),\n          \n          \n            \n                                                  info.columns().size(),\n          \n          \n            \n                                                  info.primaryKey().size() > 0);\n          \n          \n            \n                    return new PgClassTable.Entry(\n          \n          \n            \n                        OidHash.primaryKeyOid(info),\n          \n          \n            \n                        OidHash.schemaOid(info.ident().schema()),\n          \n          \n            \n                        info.ident(),\n          \n          \n            \n                        info.ident().name() + \"_pkey\",\n          \n          \n            \n                        info.relationType(),\n          \n          \n            \n                        info.columns().size(),\n          \n          \n            \n                        info.primaryKey().size() > 0);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PgClassTable</span>.<span class=\"pl-smi\">Entry</span>(<span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>primaryKeyOid(info),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>schemaOid(info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>schema()),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>ident(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>name() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_pkey<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>relationType(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>columns()<span class=\"pl-k\">.</span>size(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                      info<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PgClassTable</span>.<span class=\"pl-smi\">Entry</span>(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>primaryKeyOid(info),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">OidHash</span><span class=\"pl-k\">.</span>schemaOid(info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>schema()),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>ident(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>ident()<span class=\"pl-k\">.</span>name() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_pkey<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>relationType(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>columns()<span class=\"pl-k\">.</span>size(),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            info<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mfussenegger", "createdAt": "2020-03-05T10:37:09Z", "path": "sql/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java", "diffHunk": "@@ -125,6 +130,50 @@ public InformationSchemaIterables(final Schemas schemas,\n         // these are initialized on a clusterState change\n         routines = emptyList();\n         clusterService.addListener(this);\n+\n+        pgIndices = () -> tablesStream(schemas).filter(this::isPrimaryKey).map(this::pgIndex).iterator();\n+\n+        pgClasses = () -> concat(sequentialStream(relations).map(this::relationToPgClassEntry),\n+                                 sequentialStream(primaryKeys).map(this::primaryKeyToPgClassEntry)).iterator();\n+\n+    }\n+\n+    private boolean isPrimaryKey(RelationInfo relationInfo) {\n+        return relationInfo != null && (relationInfo.primaryKey().size() > 1 ||\n+                                        (relationInfo.primaryKey().size() == 1 &&\n+                                         !relationInfo.primaryKey().get(0).name().equals(\"_id\")));\n+    }\n+\n+    private PgClassTable.Entry relationToPgClassEntry(RelationInfo info) {\n+        return new PgClassTable.Entry(OidHash.relationOid(info),\n+                                      OidHash.schemaOid(info.ident().schema()),\n+                                      info.ident(),\n+                                      info.ident().name(),\n+                                      info.relationType(),\n+                                      info.columns().size(),\n+                                      info.primaryKey().size() > 0);\n+    }\n+\n+    private PgClassTable.Entry primaryKeyToPgClassEntry(RelationInfo info) {\n+        return new PgClassTable.Entry(OidHash.primaryKeyOid(info),\n+                                      OidHash.schemaOid(info.ident().schema()),\n+                                      info.ident(),\n+                                      info.ident().name() + \"_pkey\",\n+                                      info.relationType(),\n+                                      info.columns().size(),\n+                                      info.primaryKey().size() > 0);", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMDY1NQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388210655", "body": "```suggestion\r\n            var pkRef = tableInfo.getReference(columnIdent);\r\n            assert pkRef != null : \"`getReference(..)` must not return null for columns retrieved from `primaryKey()`\";\r\n            var position = pkRef.position();\r\n```\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var position = tableInfo.getReference(columnIdent).position();\n          \n          \n            \n                        var pkRef = tableInfo.getReference(columnIdent);\n          \n          \n            \n                        assert pkRef != null : \"`getReference(..)` must not return null for columns retrieved from `primaryKey()`\";\n          \n          \n            \n                        var position = pkRef.position();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">var</span> <span class=\"x x-first x-last\">position</span> <span class=\"pl-k\">=</span> tableInfo<span class=\"pl-k\">.</span>getReference(columnIdent<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">position(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">var</span> <span class=\"x x-first x-last\">pkRef</span> <span class=\"pl-k\">=</span> tableInfo<span class=\"pl-k\">.</span>getReference(columnIdent);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">assert</span> pkRef <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>`getReference(..)` must not return null for columns retrieved from `primaryKey()`<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">var</span> position <span class=\"pl-k\">=</span> pkRef<span class=\"pl-k\">.</span>position();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mfussenegger", "createdAt": "2020-03-05T10:39:42Z", "path": "sql/src/main/java/io/crate/execution/engine/collect/sources/InformationSchemaIterables.java", "diffHunk": "@@ -125,6 +130,50 @@ public InformationSchemaIterables(final Schemas schemas,\n         // these are initialized on a clusterState change\n         routines = emptyList();\n         clusterService.addListener(this);\n+\n+        pgIndices = () -> tablesStream(schemas).filter(this::isPrimaryKey).map(this::pgIndex).iterator();\n+\n+        pgClasses = () -> concat(sequentialStream(relations).map(this::relationToPgClassEntry),\n+                                 sequentialStream(primaryKeys).map(this::primaryKeyToPgClassEntry)).iterator();\n+\n+    }\n+\n+    private boolean isPrimaryKey(RelationInfo relationInfo) {\n+        return relationInfo != null && (relationInfo.primaryKey().size() > 1 ||\n+                                        (relationInfo.primaryKey().size() == 1 &&\n+                                         !relationInfo.primaryKey().get(0).name().equals(\"_id\")));\n+    }\n+\n+    private PgClassTable.Entry relationToPgClassEntry(RelationInfo info) {\n+        return new PgClassTable.Entry(OidHash.relationOid(info),\n+                                      OidHash.schemaOid(info.ident().schema()),\n+                                      info.ident(),\n+                                      info.ident().name(),\n+                                      info.relationType(),\n+                                      info.columns().size(),\n+                                      info.primaryKey().size() > 0);\n+    }\n+\n+    private PgClassTable.Entry primaryKeyToPgClassEntry(RelationInfo info) {\n+        return new PgClassTable.Entry(OidHash.primaryKeyOid(info),\n+                                      OidHash.schemaOid(info.ident().schema()),\n+                                      info.ident(),\n+                                      info.ident().name() + \"_pkey\",\n+                                      info.relationType(),\n+                                      info.columns().size(),\n+                                      info.primaryKey().size() > 0);\n+    }\n+\n+    private PgIndexTable.Entry pgIndex(TableInfo tableInfo) {\n+        var primaryKey = tableInfo.primaryKey();\n+        var positions = new ArrayList<Integer>();\n+        for (var columnIdent : primaryKey) {\n+            var position = tableInfo.getReference(columnIdent).position();", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMTI0OQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388211249", "body": "```suggestion\r\n        var primaryKey = Lists2.joinOn(\" \", relationInfo.primaryKey(), ColumnIdent::name);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var primaryKey = relationInfo.primaryKey().stream().map(ColumnIdent::name).collect(Collectors.joining());\n          \n          \n            \n                    var primaryKey = Lists2.joinOn(\" \", relationInfo.primaryKey(), ColumnIdent::name);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">var</span> primaryKey <span class=\"pl-k\">=</span> relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"pl-k x x-first\">.</span><span class=\"x\">stream()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">map(</span><span class=\"pl-smi\">ColumnIdent</span><span class=\"pl-k\">::</span>name<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">joining()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">var</span> primaryKey <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">Lists2</span><span class=\"pl-k x\">.</span><span class=\"x\">joinOn(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\"> </span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, </span>relationInfo<span class=\"pl-k\">.</span>primaryKey()<span class=\"x x-first x-last\">, </span><span class=\"pl-smi\">ColumnIdent</span><span class=\"pl-k\">::</span>name);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mfussenegger", "createdAt": "2020-03-05T10:40:49Z", "path": "sql/src/main/java/io/crate/metadata/pgcatalog/OidHash.java", "diffHunk": "@@ -22,31 +22,41 @@\n \n package io.crate.metadata.pgcatalog;\n \n+import io.crate.metadata.ColumnIdent;\n import io.crate.metadata.RelationInfo;\n import org.apache.lucene.util.BytesRef;\n \n+import java.util.stream.Collectors;\n+\n import static org.apache.lucene.util.StringHelper.murmurhash3_x86_32;\n \n-final class OidHash {\n+public final class OidHash {\n \n     enum Type {\n         SCHEMA,\n         TABLE,\n         VIEW,\n-        CONSTRAINT\n+        CONSTRAINT,\n+        PRIMARY_KEY\n     }\n \n-    static int relationOid(RelationInfo relationInfo) {\n+    public static int relationOid(RelationInfo relationInfo) {\n         Type t = relationInfo.relationType() == RelationInfo.RelationType.VIEW ? Type.VIEW : Type.TABLE;\n         BytesRef b = new BytesRef(t.toString() + relationInfo.ident().fqn());\n         return murmurhash3_x86_32(b.bytes, b.offset, b.length, 0);\n     }\n \n-    static int schemaOid(String name) {\n+    public static int schemaOid(String name) {\n         BytesRef b = new BytesRef(Type.SCHEMA.toString() + name);\n         return murmurhash3_x86_32(b.bytes, b.offset, b.length, 0);\n     }\n \n+    public static int primaryKeyOid(RelationInfo relationInfo) {\n+        var primaryKey = relationInfo.primaryKey().stream().map(ColumnIdent::name).collect(Collectors.joining());", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMjcwMg==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388212702", "body": "Would it make sense to reduce this to the columns that are relevant?", "bodyText": "Would it make sense to reduce this to the columns that are relevant?", "bodyHTML": "<p dir=\"auto\">Would it make sense to reduce this to the columns that are relevant?</p>", "author": "mfussenegger", "createdAt": "2020-03-05T10:43:23Z", "path": "sql/src/test/java/io/crate/integrationtests/PgCatalogITest.java", "diffHunk": "@@ -105,4 +111,25 @@ public void testPgSettingsTable() {\n             \"max_index_keys| 32| Shows the maximum number of index keys.| NULL| NULL\\n\"\n         ));\n     }\n+\n+    @Test\n+    public void test_primary_key_in_pg_index() {\n+        execute(\" select i.* from pg_index i, pg_class c where c.relname = 't1' and c.oid = i.indrelid;\");\n+\n+        assertThat(printedTable(response.rows()), is(\n+            \"false| NULL| NULL| NULL| -649073482| true| false| false| true| true| true| false| false| true| [1]| 0| NULL| NULL| 728874843\\n\"", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMjc4OQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388212789", "body": "Same here.", "bodyText": "Same here.", "bodyHTML": "<p dir=\"auto\">Same here.</p>", "author": "mfussenegger", "createdAt": "2020-03-05T10:43:31Z", "path": "sql/src/test/java/io/crate/integrationtests/PgCatalogITest.java", "diffHunk": "@@ -105,4 +111,25 @@ public void testPgSettingsTable() {\n             \"max_index_keys| 32| Shows the maximum number of index keys.| NULL| NULL\\n\"\n         ));\n     }\n+\n+    @Test\n+    public void test_primary_key_in_pg_index() {\n+        execute(\" select i.* from pg_index i, pg_class c where c.relname = 't1' and c.oid = i.indrelid;\");\n+\n+        assertThat(printedTable(response.rows()), is(\n+            \"false| NULL| NULL| NULL| -649073482| true| false| false| true| true| true| false| false| true| [1]| 0| NULL| NULL| 728874843\\n\"\n+        ));\n+    }\n+\n+    @Test\n+    public void test_primary_key_in_pg_class() {\n+\n+        execute(\"select ct.* from pg_class ct, (select * from pg_index i, pg_class c where c.relname = 't1' and c.oid = i.indrelid) i\" +\n+                \" where ct.oid = i.indexrelid;\");\n+\n+        assertThat(printedTable(response.rows()), is(\n+            \"-649073482| NULL| 0| 0| 0| 0| false| 0| false| false| true| false| false| false| false| true| false| r| 0| t1_pkey| -2048275947| 2| 0| NULL| 0| 0| NULL| p| p| false| 0| 0| -1.0| 0\\n\"", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIxMjk2NQ==", "url": "https://github.com/crate/crate/pull/9717#discussion_r388212965", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.carrotsearch.randomizedtesting.annotations.Repeat;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">import</span><span class=\"x\"> </span><span class=\"pl-smi x\">com.carrotsearch.randomizedtesting.annotations.Repeat</span><span class=\"x x-last\">;</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mfussenegger", "createdAt": "2020-03-05T10:43:48Z", "path": "sql/src/test/java/io/crate/integrationtests/PgCatalogITest.java", "diffHunk": "@@ -22,13 +22,19 @@\n \n package io.crate.integrationtests;\n \n+import com.carrotsearch.randomizedtesting.annotations.Repeat;", "originalCommit": "601017b1c0a6900daaed79f060def0125dcb2529", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3be7ab755c6e862f3126154fca35f90691a044fb", "url": "https://github.com/crate/crate/commit/3be7ab755c6e862f3126154fca35f90691a044fb", "message": "add entries for primary keys to pg_class and pg_index table.", "committedDate": "2020-03-05T16:38:20Z", "type": "commit"}, {"oid": "3be7ab755c6e862f3126154fca35f90691a044fb", "url": "https://github.com/crate/crate/commit/3be7ab755c6e862f3126154fca35f90691a044fb", "message": "add entries for primary keys to pg_class and pg_index table.", "committedDate": "2020-03-05T16:38:20Z", "type": "forcePushed"}, {"oid": "fdb23792d8f1c3494cbbcbc2d9b022092b2be274", "url": "https://github.com/crate/crate/commit/fdb23792d8f1c3494cbbcbc2d9b022092b2be274", "message": "Merge branch 'master' into mkleen/meta_pkeys", "committedDate": "2020-03-05T17:11:21Z", "type": "commit"}]}