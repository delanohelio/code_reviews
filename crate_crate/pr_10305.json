{"pr_number": 10305, "pr_title": "Add scalar function pg_get_function_result required by conn.getMetaData().getFunctions()", "pr_author": "marregui", "pr_createdAt": "2020-08-03T18:16:40Z", "pr_url": "https://github.com/crate/crate/pull/10305", "timeline": [{"oid": "f4ead315ad96af382573cd96f367c297fae56b1d", "url": "https://github.com/crate/crate/commit/f4ead315ad96af382573cd96f367c297fae56b1d", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though.", "committedDate": "2020-08-04T10:26:54Z", "type": "forcePushed"}, {"oid": "05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "url": "https://github.com/crate/crate/commit/05f164e50ce5af3ed314feb08d36f669ebeb0cd6", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.\n\nWIP: As a template to initiate discussion on approach. Static registration is lazy though.", "committedDate": "2020-08-04T10:35:57Z", "type": "forcePushed"}, {"oid": "b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "url": "https://github.com/crate/crate/commit/b8214d3ac813bd17ba57d921e78b09a5b24ea71f", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-20T10:07:52Z", "type": "forcePushed"}, {"oid": "ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "url": "https://github.com/crate/crate/commit/ad5ad3fc43da81d92d3c4cffa2e551789ee5282a", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-20T12:29:47Z", "type": "forcePushed"}, {"oid": "daeeef8dd640243bd582c6f427e24486b5730079", "url": "https://github.com/crate/crate/commit/daeeef8dd640243bd582c6f427e24486b5730079", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-20T12:48:20Z", "type": "forcePushed"}, {"oid": "bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "url": "https://github.com/crate/crate/commit/bf7cd26cae7fcc8c3429ae067ebb430fbb18ff38", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-25T14:37:40Z", "type": "forcePushed"}, {"oid": "96956a00384bb4f5e710bda87f68e7208e0cf98c", "url": "https://github.com/crate/crate/commit/96956a00384bb4f5e710bda87f68e7208e0cf98c", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-25T17:40:43Z", "type": "forcePushed"}, {"oid": "03b242ba71c393d04415d38628d23a9d10bf9dc3", "url": "https://github.com/crate/crate/commit/03b242ba71c393d04415d38628d23a9d10bf9dc3", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-08-25T17:43:05Z", "type": "forcePushed"}, {"oid": "f495e1b16597069be2bdf24797a509dce107143f", "url": "https://github.com/crate/crate/commit/f495e1b16597069be2bdf24797a509dce107143f", "message": "Make the function's OID be created out of its signature, rather than just its name", "committedDate": "2020-08-26T09:37:34Z", "type": "forcePushed"}, {"oid": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "url": "https://github.com/crate/crate/commit/45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "message": "Make the function's OID be created out of its signature, rather than just its name", "committedDate": "2020-08-31T08:28:19Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NzE3Mg==", "url": "https://github.com/crate/crate/pull/10305#discussion_r484357172", "body": "Maybe something like that can be more redable?\r\n```suggestion\r\n        execute(\"select pg_get_function_result(?)\", new Object[]{functionOid});\r\n```", "bodyText": "Maybe something like that can be more redable?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    execute(\"select pg_get_function_result(\" + functionOid + \")\");\n          \n          \n            \n                    execute(\"select pg_get_function_result(?)\", new Object[]{functionOid});", "bodyHTML": "<p dir=\"auto\">Maybe something like that can be more redable?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        execute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>select pg_get_function_result(<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>functionOid<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">)</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        execute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>select pg_get_function_result(<span class=\"x x-first\">?)</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">Object</span><span class=\"x x-last\">[]{</span>functionOid<span class=\"x x-first x-last\">}</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kovrus", "createdAt": "2020-09-07T10:55:43Z", "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n+            .returnType(returnTypeSig)\n+            .build();\n+        int functionOid = OidHash.functionOid(signature);\n+\n+        execute(\"select pg_get_function_result(\" + functionOid + \")\");", "originalCommit": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1NzMxNg==", "url": "https://github.com/crate/crate/pull/10305#discussion_r484357316", "body": "```suggestion\r\n        execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as ?\", new Object[]{returnType});\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as '\" + returnType + \"'\");\n          \n          \n            \n                    execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as ?\", new Object[]{returnType});", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        execute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as <span class=\"x x-first\">'</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>returnType<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">'</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        execute(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as <span class=\"x x-first\">?</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">Object</span><span class=\"x x-last\">[]{</span>returnType<span class=\"x x-first x-last\">}</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kovrus", "createdAt": "2020-09-07T10:56:01Z", "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n+            .returnType(returnTypeSig)\n+            .build();\n+        int functionOid = OidHash.functionOid(signature);\n+\n+        execute(\"select pg_get_function_result(\" + functionOid + \")\");\n+        assertThat(response.rows()[0][0], nullValue());\n+\n+        execute(\"create function doc.make_2d_array(integer) returns array(array(integer)) language dummy_lang as '\" + returnType + \"'\");", "originalCommit": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2MDY0MQ==", "url": "https://github.com/crate/crate/pull/10305#discussion_r484360641", "body": "can you maybe extract these two assertions into a separate test?", "bodyText": "can you maybe extract these two assertions into a separate test?", "bodyHTML": "<p dir=\"auto\">can you maybe extract these two assertions into a separate test?</p>", "author": "kovrus", "createdAt": "2020-09-07T11:02:58Z", "path": "server/src/test/java/io/crate/expression/scalar/systeminformation/PgGetFunctionResultFunctionTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to Crate under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional\n+ * information regarding copyright ownership.  Crate licenses this file\n+ * to you under the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.  You may\n+ * obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+ * implied.  See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ *\n+ * However, if you have executed another commercial license agreement\n+ * with Crate these terms will supersede the license and you may use the\n+ * software solely pursuant to the terms of the relevant commercial\n+ * agreement.\n+ */\n+\n+package io.crate.expression.scalar.systeminformation;\n+\n+import io.crate.expression.scalar.AbstractScalarFunctionsTest;\n+import io.crate.metadata.FunctionProvider;\n+import io.crate.metadata.functions.Signature;\n+import io.crate.metadata.pgcatalog.OidHash;\n+import org.junit.Test;\n+\n+import java.util.List;\n+\n+public class PgGetFunctionResultFunctionTest extends AbstractScalarFunctionsTest {\n+\n+    @Test\n+    public void test_null_oid_results_in_null() {\n+        assertEvaluate(\"pg_function_is_visible(null)\", null);\n+    }\n+\n+    @Test\n+    public void test_system_function_result_type_text_representation() {\n+        assertEvaluate(\"pg_get_function_result(0)\",null);", "originalCommit": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM2NDUwNA==", "url": "https://github.com/crate/crate/pull/10305#discussion_r484364504", "body": "will be a better choise if there would be some kind of refactoring\r\n```suggestion\r\n            .argumentTypes(DataTypes.INTEGER.getTypeSignature()\"))\r\n```", "bodyText": "will be a better choise if there would be some kind of refactoring\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))\n          \n          \n            \n                        .argumentTypes(DataTypes.INTEGER.getTypeSignature()\"))", "bodyHTML": "<p dir=\"auto\">will be a better choise if there would be some kind of refactoring</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .argumentTypes(<span class=\"pl-smi x x-first\">TypeSignature</span><span class=\"pl-k x\">.</span><span class=\"x\">parseTypeSignature(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">integer</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .argumentTypes(<span class=\"pl-smi x x-first\">DataTypes</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">INTEGER</span></span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getTypeSignature()</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>))</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "kovrus", "createdAt": "2020-09-07T11:11:11Z", "path": "server/src/test/java/io/crate/integrationtests/UserDefinedFunctionsIntegrationTest.java", "diffHunk": "@@ -299,6 +300,32 @@ public void test_pg_function_is_visible() throws Exception {\n         assertThat(response.rows()[0][0], is(false));\n     }\n \n+    @Test\n+    public void test_pg_get_function_result() throws Exception {\n+        TypeSignature returnTypeSig = TypeSignature.parseTypeSignature(\"array(array(integer))\");\n+        String returnType = returnTypeSig.toString();\n+        Signature signature = Signature\n+            .builder()\n+            .kind(FunctionType.SCALAR)\n+            .name(new FunctionName(Schemas.DOC_SCHEMA_NAME, \"make_2d_array\"))\n+            .argumentTypes(TypeSignature.parseTypeSignature(\"integer\"))", "originalCommit": "45b5dc4e479bedb537d4dd8bbf0159b134e62a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "url": "https://github.com/crate/crate/commit/1d8ff3ee1b84cd221618af263df791e7e5ddc3d7", "message": "Ruslan's suggestions", "committedDate": "2020-09-07T14:35:31Z", "type": "forcePushed"}, {"oid": "ce7453300317bb11b055c1f28a1e26d0668f621b", "url": "https://github.com/crate/crate/commit/ce7453300317bb11b055c1f28a1e26d0668f621b", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-09-07T15:11:43Z", "type": "commit"}, {"oid": "ce7453300317bb11b055c1f28a1e26d0668f621b", "url": "https://github.com/crate/crate/commit/ce7453300317bb11b055c1f28a1e26d0668f621b", "message": "Add scalar function pg_get_function_result(OID)\n\nUsers can 'select function pg_get_function_result(OID)' to retrieve the text\nrepresentation of the return data type of the function refered to by the OID.\nAll system and user defined functions' OIDs will return text, the rest null.", "committedDate": "2020-09-07T15:11:43Z", "type": "forcePushed"}]}