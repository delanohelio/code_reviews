{"pr_number": 7708, "pr_title": "[daikin] Add Energy, compressor frequency and special mode channels", "pr_author": "LukasA83", "pr_createdAt": "2020-05-20T22:40:11Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7708", "timeline": [{"oid": "39e6030a6caabcde5477cd04b795ff414fd1547f", "url": "https://github.com/openhab/openhab-addons/commit/39e6030a6caabcde5477cd04b795ff414fd1547f", "message": "[daikin] Add Energy, compressor frequency and special mode channels\n\n#6980: Add compressor frequency channel\n#6115: Add energy current year channels\n\nSigned-off-by: Lukas Agethen <lukas83@gmx.de>", "committedDate": "2020-05-20T22:35:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMDA2NA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428830064", "body": "I don't know why you are passing in the decimal type into the quantity type. I'm pretty sure you don't need to do that.\r\n```suggestion\r\n        updateState(channel, maybeTemperature.<State>map(t -> new QuantityType<>(t, SIUnits.CELSIUS))\r\n```", "bodyText": "I don't know why you are passing in the decimal type into the quantity type. I'm pretty sure you don't need to do that.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    updateState(channel, maybeTemperature.<State>map(t -> new QuantityType<>(new DecimalType(t), SIUnits.CELSIUS))\n          \n          \n            \n                    updateState(channel, maybeTemperature.<State>map(t -> new QuantityType<>(t, SIUnits.CELSIUS))", "bodyHTML": "<p dir=\"auto\">I don't know why you are passing in the decimal type into the quantity type. I'm pretty sure you don't need to do that.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        updateState(channel, maybeTemperature<span class=\"pl-k\">.</span><span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">State</span><span class=\"pl-k\">&gt;</span>map(t <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">QuantityType&lt;&gt;</span>(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">DecimalType</span><span class=\"x x-last\">(t)</span>, <span class=\"pl-smi\">SIUnits</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CELSIUS</span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        updateState(channel, maybeTemperature<span class=\"pl-k\">.</span><span class=\"pl-k\">&lt;</span><span class=\"pl-smi\">State</span><span class=\"pl-k\">&gt;</span>map(t <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">QuantityType&lt;&gt;</span>(<span class=\"x x-first x-last\">t</span>, <span class=\"pl-smi\">SIUnits</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>CELSIUS</span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T18:19:43Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "diffHunk": "@@ -201,7 +203,7 @@ private synchronized void poll() {\n     }\n \n     protected void updateTemperatureChannel(String channel, Optional<Double> maybeTemperature) {\n-        updateState(channel, maybeTemperature.<State> map(t -> new QuantityType<>(new DecimalType(t), SIUnits.CELSIUS))\n+        updateState(channel, maybeTemperature.<State>map(t -> new QuantityType<>(new DecimalType(t), SIUnits.CELSIUS))", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2ODY2NA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428868664", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:34:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMDA2NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMTU2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428831569", "body": "```suggestion\r\n                                t -> new QuantityType<>(BigDecimal.valueOf(t[i - 1].longValue(), 1),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            t -> new QuantityType<>(new DecimalType(BigDecimal.valueOf(t[i - 1].longValue(), 1)),\n          \n          \n            \n                                            t -> new QuantityType<>(BigDecimal.valueOf(t[i - 1].longValue(), 1),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                t <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">QuantityType&lt;&gt;</span>(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">DecimalType</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">BigDecimal</span><span class=\"pl-k\">.</span>valueOf(t[i <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>]<span class=\"pl-k\">.</span>longValue(), <span class=\"pl-c1\">1</span><span class=\"x x-first x-last\">)</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                t <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">QuantityType&lt;&gt;</span>(<span class=\"pl-smi\">BigDecimal</span><span class=\"pl-k\">.</span>valueOf(t[i <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>]<span class=\"pl-k\">.</span>longValue(), <span class=\"pl-c1\">1</span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T18:22:31Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -160,6 +216,35 @@ protected void changeFanDir(String fanDir) throws DaikinCommunicationException {\n         webTargets.setControlInfo(info);\n     }\n \n+    /**\n+     *\n+     * @param powerfulMode\n+     * @return Is change successful\n+     * @throws DaikinCommunicationException\n+     */\n+    protected boolean changeSpecialModePowerful(boolean powerfulMode) throws DaikinCommunicationException {\n+\n+        return webTargets.setSpecialMode(SpecialModeKind.POWERFUL, powerfulMode);\n+    }\n+\n+    /**\n+     * Updates energy year channels. Values are provided in hundreds of Watt\n+     *\n+     * @param channelPrefix\n+     * @param maybePower\n+     */\n+    protected void updateEnergyYearChannel(String channelPrefix, Optional<Integer[]> maybePower) {\n+        IntStream.range(1, 13).forEach(\n+                i -> updateState(String.format(DaikinBindingConstants.CHANNEL_ENERGY_STRING_FORMAT, channelPrefix, i),\n+                        maybePower.<State>map(\n+                                t -> new QuantityType<>(new DecimalType(BigDecimal.valueOf(t[i - 1].longValue(), 1)),", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2OTMxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428869315", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:35:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMTU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMjM4NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428832385", "body": "remove blank line", "bodyText": "remove blank line", "bodyHTML": "<p dir=\"auto\">remove blank line</p>", "author": "cpmeister", "createdAt": "2020-05-21T18:23:56Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -160,6 +216,35 @@ protected void changeFanDir(String fanDir) throws DaikinCommunicationException {\n         webTargets.setControlInfo(info);\n     }\n \n+    /**\n+     *\n+     * @param powerfulMode\n+     * @return Is change successful\n+     * @throws DaikinCommunicationException\n+     */\n+    protected boolean changeSpecialModePowerful(boolean powerfulMode) throws DaikinCommunicationException {\n+", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3MjczNg==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428872736", "bodyText": "Done.", "author": "LukasA83", "createdAt": "2020-05-21T19:42:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzMjM4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNDk0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428834947", "body": "humidity should use QuantityType with `SmartHomeUnits.PERCENT` units.\r\n\r\nNote: Changing this might be outside the scope of this PR so you are free to skip this change.", "bodyText": "humidity should use QuantityType with SmartHomeUnits.PERCENT units.\nNote: Changing this might be outside the scope of this PR so you are free to skip this change.", "bodyHTML": "<p dir=\"auto\">humidity should use QuantityType with <code>SmartHomeUnits.PERCENT</code> units.</p>\n<p dir=\"auto\">Note: Changing this might be outside the scope of this PR so you are free to skip this change.</p>", "author": "cpmeister", "createdAt": "2020-05-21T18:28:42Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -44,49 +50,93 @@\n  *\n  * @author Tim Waterhouse - Initial Contribution\n  * @author Paul Smedley <paul@smedley.id.au> - Modifications to support Airbase Controllers\n- *\n+ * @author Lukas Agethen - Added support for Energy Year reading, compressor frequency and powerful mode\n  */\n @NonNullByDefault\n public class DaikinAcUnitHandler extends DaikinBaseHandler {\n     private final Logger logger = LoggerFactory.getLogger(DaikinAcUnitHandler.class);\n \n-    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider, @Nullable HttpClient httpClient) {\n+    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider,\n+            @Nullable HttpClient httpClient) {\n         super(thing, stateDescriptionProvider, httpClient);\n     }\n \n     @Override\n     protected void pollStatus() throws IOException {\n-        ControlInfo controlInfo = webTargets.getControlInfo();\n-        updateStatus(ThingStatus.ONLINE);\n-        if (controlInfo != null) {\n-            updateState(DaikinBindingConstants.CHANNEL_AC_POWER, controlInfo.power ? OnOffType.ON : OnOffType.OFF);\n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_AC_TEMP, controlInfo.temp);\n-\n-            updateState(DaikinBindingConstants.CHANNEL_AC_MODE, new StringType(controlInfo.mode.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_SPEED, new StringType(controlInfo.fanSpeed.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_DIR, new StringType(controlInfo.fanMovement.name()));\n-\n-            if (!controlInfo.power) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.OFF.getValue()));\n-            } else if (controlInfo.mode == Mode.COLD) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.COOL.getValue()));\n-            } else if (controlInfo.mode == Mode.HEAT) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.HEAT.getValue()));\n-            } else if (controlInfo.mode == Mode.AUTO) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.AUTO.getValue()));\n+        if (webTargets != null) {\n+            ControlInfo controlInfo = webTargets.getControlInfo();\n+            updateStatus(ThingStatus.ONLINE);\n+            if (controlInfo != null) {\n+                updateState(DaikinBindingConstants.CHANNEL_AC_POWER, controlInfo.power ? OnOffType.ON : OnOffType.OFF);\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_AC_TEMP, controlInfo.temp);\n+\n+                updateState(DaikinBindingConstants.CHANNEL_AC_MODE, new StringType(controlInfo.mode.name()));\n+                updateState(DaikinBindingConstants.CHANNEL_AC_FAN_SPEED, new StringType(controlInfo.fanSpeed.name()));\n+                updateState(DaikinBindingConstants.CHANNEL_AC_FAN_DIR, new StringType(controlInfo.fanMovement.name()));\n+\n+                if (!controlInfo.power) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.OFF.getValue()));\n+                } else if (controlInfo.mode == Mode.COLD) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.COOL.getValue()));\n+                } else if (controlInfo.mode == Mode.HEAT) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.HEAT.getValue()));\n+                } else if (controlInfo.mode == Mode.AUTO) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.AUTO.getValue()));\n+                }\n+\n+                updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE,\n+                        new StringType(controlInfo.specialMode.name()));\n+\n+                if (controlInfo.specialMode.isUndefined()) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE_POWERFUL, UnDefType.UNDEF);\n+                } else {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE_POWERFUL,\n+                            controlInfo.specialMode.isPowerfulActive() ? OnOffType.ON : OnOffType.OFF);\n+                }\n+\n             }\n-        }\n \n-        SensorInfo sensorInfo = webTargets.getSensorInfo();\n-        if (sensorInfo != null) {\n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_INDOOR_TEMP, sensorInfo.indoortemp);\n+            SensorInfo sensorInfo = webTargets.getSensorInfo();\n+            if (sensorInfo != null) {\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_INDOOR_TEMP, sensorInfo.indoortemp);\n+\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_OUTDOOR_TEMP, sensorInfo.outdoortemp);\n \n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_OUTDOOR_TEMP, sensorInfo.outdoortemp);\n+                if (sensorInfo.indoorhumidity.isPresent()) {\n+                    updateState(DaikinBindingConstants.CHANNEL_HUMIDITY,\n+                            new DecimalType(sensorInfo.indoorhumidity.get()));", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3MjQxNw==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428872417", "bodyText": "Corrected.", "author": "LukasA83", "createdAt": "2020-05-21T19:41:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNDk0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNTY0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428835643", "body": "Please specify specific exceptions if possible. What do you expect to be thrown here anyway?", "bodyText": "Please specify specific exceptions if possible. What do you expect to be thrown here anyway?", "bodyHTML": "<p dir=\"auto\">Please specify specific exceptions if possible. What do you expect to be thrown here anyway?</p>", "author": "cpmeister", "createdAt": "2020-05-21T18:30:00Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -44,49 +50,93 @@\n  *\n  * @author Tim Waterhouse - Initial Contribution\n  * @author Paul Smedley <paul@smedley.id.au> - Modifications to support Airbase Controllers\n- *\n+ * @author Lukas Agethen - Added support for Energy Year reading, compressor frequency and powerful mode\n  */\n @NonNullByDefault\n public class DaikinAcUnitHandler extends DaikinBaseHandler {\n     private final Logger logger = LoggerFactory.getLogger(DaikinAcUnitHandler.class);\n \n-    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider, @Nullable HttpClient httpClient) {\n+    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider,\n+            @Nullable HttpClient httpClient) {\n         super(thing, stateDescriptionProvider, httpClient);\n     }\n \n     @Override\n     protected void pollStatus() throws IOException {\n-        ControlInfo controlInfo = webTargets.getControlInfo();\n-        updateStatus(ThingStatus.ONLINE);\n-        if (controlInfo != null) {\n-            updateState(DaikinBindingConstants.CHANNEL_AC_POWER, controlInfo.power ? OnOffType.ON : OnOffType.OFF);\n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_AC_TEMP, controlInfo.temp);\n-\n-            updateState(DaikinBindingConstants.CHANNEL_AC_MODE, new StringType(controlInfo.mode.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_SPEED, new StringType(controlInfo.fanSpeed.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_DIR, new StringType(controlInfo.fanMovement.name()));\n-\n-            if (!controlInfo.power) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.OFF.getValue()));\n-            } else if (controlInfo.mode == Mode.COLD) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.COOL.getValue()));\n-            } else if (controlInfo.mode == Mode.HEAT) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.HEAT.getValue()));\n-            } else if (controlInfo.mode == Mode.AUTO) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.AUTO.getValue()));\n+        if (webTargets != null) {\n+            ControlInfo controlInfo = webTargets.getControlInfo();\n+            updateStatus(ThingStatus.ONLINE);\n+            if (controlInfo != null) {\n+                updateState(DaikinBindingConstants.CHANNEL_AC_POWER, controlInfo.power ? OnOffType.ON : OnOffType.OFF);\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_AC_TEMP, controlInfo.temp);\n+\n+                updateState(DaikinBindingConstants.CHANNEL_AC_MODE, new StringType(controlInfo.mode.name()));\n+                updateState(DaikinBindingConstants.CHANNEL_AC_FAN_SPEED, new StringType(controlInfo.fanSpeed.name()));\n+                updateState(DaikinBindingConstants.CHANNEL_AC_FAN_DIR, new StringType(controlInfo.fanMovement.name()));\n+\n+                if (!controlInfo.power) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.OFF.getValue()));\n+                } else if (controlInfo.mode == Mode.COLD) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.COOL.getValue()));\n+                } else if (controlInfo.mode == Mode.HEAT) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.HEAT.getValue()));\n+                } else if (controlInfo.mode == Mode.AUTO) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE,\n+                            new StringType(HomekitMode.AUTO.getValue()));\n+                }\n+\n+                updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE,\n+                        new StringType(controlInfo.specialMode.name()));\n+\n+                if (controlInfo.specialMode.isUndefined()) {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE_POWERFUL, UnDefType.UNDEF);\n+                } else {\n+                    updateState(DaikinBindingConstants.CHANNEL_AC_SPECIALMODE_POWERFUL,\n+                            controlInfo.specialMode.isPowerfulActive() ? OnOffType.ON : OnOffType.OFF);\n+                }\n+\n             }\n-        }\n \n-        SensorInfo sensorInfo = webTargets.getSensorInfo();\n-        if (sensorInfo != null) {\n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_INDOOR_TEMP, sensorInfo.indoortemp);\n+            SensorInfo sensorInfo = webTargets.getSensorInfo();\n+            if (sensorInfo != null) {\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_INDOOR_TEMP, sensorInfo.indoortemp);\n+\n+                updateTemperatureChannel(DaikinBindingConstants.CHANNEL_OUTDOOR_TEMP, sensorInfo.outdoortemp);\n \n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_OUTDOOR_TEMP, sensorInfo.outdoortemp);\n+                if (sensorInfo.indoorhumidity.isPresent()) {\n+                    updateState(DaikinBindingConstants.CHANNEL_HUMIDITY,\n+                            new DecimalType(sensorInfo.indoorhumidity.get()));\n+                } else {\n+                    updateState(DaikinBindingConstants.CHANNEL_HUMIDITY, UnDefType.UNDEF);\n+                }\n+\n+                if (sensorInfo.compressorfrequency.isPresent()) {\n+                    updateState(DaikinBindingConstants.CHANNEL_CMP_FREQ,\n+                            new DecimalType(sensorInfo.compressorfrequency.get()));\n+                } else {\n+                    updateState(DaikinBindingConstants.CHANNEL_CMP_FREQ, UnDefType.UNDEF);\n+                }\n \n-            if (sensorInfo.indoorhumidity.isPresent()) {\n-                updateState(DaikinBindingConstants.CHANNEL_HUMIDITY, new DecimalType(sensorInfo.indoorhumidity.get()));\n-            } else {\n-                updateState(DaikinBindingConstants.CHANNEL_HUMIDITY, UnDefType.UNDEF);\n+            }\n+\n+            try {\n+                EnergyInfoYear energyInfoYear = webTargets.getEnergyInfoYear();\n+\n+                if (energyInfoYear.energyHeatingThisYear.isPresent()) {\n+                    updateEnergyYearChannel(DaikinBindingConstants.CHANNEL_ENERGY_HEATING_CURRENTYEAR_PREFIX,\n+                            energyInfoYear.energyHeatingThisYear);\n+                }\n+                if (energyInfoYear.energyCoolingThisYear.isPresent()) {\n+                    updateEnergyYearChannel(DaikinBindingConstants.CHANNEL_ENERGY_COOLING_CURRENTYEAR_PREFIX,\n+                            energyInfoYear.energyCoolingThisYear);\n+                }\n+            } catch (Exception e) {", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2ODg1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428868859", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:34:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNTY0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzOTEzMg==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428839132", "body": "```suggestion\r\n        } catch (NumberFormatException e) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                    } catch (Exception e) {\n          \n          \n            \n                    } catch (NumberFormatException e) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">NumberFormatException</span> e) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T18:36:49Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/InfoParser.java", "diffHunk": "@@ -62,4 +61,24 @@ private InfoParser() {\n             return Optional.empty();\n         }\n     }\n+\n+    public static Optional<Integer[]> parseArrayofInt(String value) {\n+        if (\"-\".equals(value)) {\n+            return Optional.empty();\n+        }\n+        try {\n+            return Optional.of(Stream.of(value.split(\"/\")).map(val -> Integer.parseInt(val)).toArray(Integer[]::new));\n+\n+        } catch (Exception e) {", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2ODk0MA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428868940", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:34:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzOTEzMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MDExMg==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428840112", "body": "```suggestion\r\n        return Stream.of(response.split(\",\")).filter(kv -> kv.contains(\"=\")).map(kv -> {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Arrays.asList(response.split(\",\")).stream().filter(kv -> kv.contains(\"=\")).map(kv -> {\n          \n          \n            \n                    return Stream.of(response.split(\",\")).filter(kv -> kv.contains(\"=\")).map(kv -> {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi x x-first\">Arrays</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">asList</span>(response<span class=\"pl-k\">.</span>split(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>)<span class=\"x x-first\">)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">stream(</span>)<span class=\"pl-k\">.</span>filter(kv <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> kv<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>=<span class=\"pl-pds\">\"</span></span>))<span class=\"pl-k\">.</span>map(kv <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi x x-first\">Stream</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">of</span>(response<span class=\"pl-k\">.</span>split(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,<span class=\"pl-pds\">\"</span></span>))<span class=\"pl-k\">.</span>filter(kv <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> kv<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>=<span class=\"pl-pds\">\"</span></span>))<span class=\"pl-k\">.</span>map(kv <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T18:38:33Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/InfoParser.java", "diffHunk": "@@ -32,13 +32,12 @@ private InfoParser() {\n     }\n \n     public static Map<String, String> parse(String response) {\n-        return Arrays.asList(response.split(\",\")).stream().filter(kv -> kv.contains(\"=\"))\n-                .map(kv -> {\n-                    String[] keyValue = kv.split(\"=\");\n-                    String key = keyValue[0];\n-                    String value = keyValue.length > 1 ? keyValue[1] : \"\";\n-                    return new String[] { key, value };\n-                }).collect(Collectors.toMap(x -> x[0], x -> x[1]));\n+        return Arrays.asList(response.split(\",\")).stream().filter(kv -> kv.contains(\"=\")).map(kv -> {", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2OTAyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428869020", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:34:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MDExMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MTM5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428841392", "body": "Please add yourself to the author tags for this file.", "bodyText": "Please add yourself to the author tags for this file.", "bodyHTML": "<p dir=\"auto\">Please add yourself to the author tags for this file.</p>", "author": "cpmeister", "createdAt": "2020-05-21T18:41:07Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/Enums.java", "diffHunk": "@@ -138,4 +137,75 @@ public String getValue() {\n             return value;\n         }\n     }\n+", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2OTA3NA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428869074", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:35:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MTM5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MTcyOA==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428841728", "body": "remove this empty java doc", "bodyText": "remove this empty java doc", "bodyHTML": "<p dir=\"auto\">remove this empty java doc</p>", "author": "cpmeister", "createdAt": "2020-05-21T18:41:50Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/DaikinCommunicationForbiddenException.java", "diffHunk": "@@ -23,6 +22,11 @@\n  */\n @NonNullByDefault\n public class DaikinCommunicationForbiddenException extends DaikinCommunicationException {\n+    /**\n+     *\n+     */", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2OTExNw==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428869117", "bodyText": "Fixed.", "author": "LukasA83", "createdAt": "2020-05-21T19:35:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0MTcyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NjAzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428846039", "body": "Rather than forcing the indentation of every line I would rather you just exit early. And even then you should cache the variable locally to avoid the null checker warning.\r\n```suggestion\r\n        DaikinWebTargets webTargets = this.webTargets;\r\n        if (webTargets == null) {\r\n             return;\r\n        }\r\n        ControlInfo controlInfo = webTargets.getControlInfo();\r\n```", "bodyText": "Rather than forcing the indentation of every line I would rather you just exit early. And even then you should cache the variable locally to avoid the null checker warning.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (webTargets != null) {\n          \n          \n            \n                        ControlInfo controlInfo = webTargets.getControlInfo();\n          \n          \n            \n                    DaikinWebTargets webTargets = this.webTargets;\n          \n          \n            \n                    if (webTargets == null) {\n          \n          \n            \n                         return;\n          \n          \n            \n                    }\n          \n          \n            \n                    ControlInfo controlInfo = webTargets.getControlInfo();", "bodyHTML": "<p dir=\"auto\">Rather than forcing the indentation of every line I would rather you just exit early. And even then you should cache the variable locally to avoid the null checker warning.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (webTargets <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">ControlInfo</span> controlInfo <span class=\"pl-k\">=</span> webTargets<span class=\"pl-k\">.</span>getControlInfo();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">DaikinWebTargets</span> webTargets <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>webTargets;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (webTargets <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">ControlInfo</span> controlInfo <span class=\"pl-k\">=</span> webTargets<span class=\"pl-k\">.</span>getControlInfo();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T18:50:02Z", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -44,49 +50,93 @@\n  *\n  * @author Tim Waterhouse - Initial Contribution\n  * @author Paul Smedley <paul@smedley.id.au> - Modifications to support Airbase Controllers\n- *\n+ * @author Lukas Agethen - Added support for Energy Year reading, compressor frequency and powerful mode\n  */\n @NonNullByDefault\n public class DaikinAcUnitHandler extends DaikinBaseHandler {\n     private final Logger logger = LoggerFactory.getLogger(DaikinAcUnitHandler.class);\n \n-    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider, @Nullable HttpClient httpClient) {\n+    public DaikinAcUnitHandler(Thing thing, DaikinDynamicStateDescriptionProvider stateDescriptionProvider,\n+            @Nullable HttpClient httpClient) {\n         super(thing, stateDescriptionProvider, httpClient);\n     }\n \n     @Override\n     protected void pollStatus() throws IOException {\n-        ControlInfo controlInfo = webTargets.getControlInfo();\n-        updateStatus(ThingStatus.ONLINE);\n-        if (controlInfo != null) {\n-            updateState(DaikinBindingConstants.CHANNEL_AC_POWER, controlInfo.power ? OnOffType.ON : OnOffType.OFF);\n-            updateTemperatureChannel(DaikinBindingConstants.CHANNEL_AC_TEMP, controlInfo.temp);\n-\n-            updateState(DaikinBindingConstants.CHANNEL_AC_MODE, new StringType(controlInfo.mode.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_SPEED, new StringType(controlInfo.fanSpeed.name()));\n-            updateState(DaikinBindingConstants.CHANNEL_AC_FAN_DIR, new StringType(controlInfo.fanMovement.name()));\n-\n-            if (!controlInfo.power) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.OFF.getValue()));\n-            } else if (controlInfo.mode == Mode.COLD) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.COOL.getValue()));\n-            } else if (controlInfo.mode == Mode.HEAT) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.HEAT.getValue()));\n-            } else if (controlInfo.mode == Mode.AUTO) {\n-                updateState(DaikinBindingConstants.CHANNEL_AC_HOMEKITMODE, new StringType(HomekitMode.AUTO.getValue()));\n+        if (webTargets != null) {\n+            ControlInfo controlInfo = webTargets.getControlInfo();", "originalCommit": "39e6030a6caabcde5477cd04b795ff414fd1547f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2OTIxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7708#discussion_r428869215", "bodyText": "Good suggestion - implemented.", "author": "LukasA83", "createdAt": "2020-05-21T19:35:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg0NjAzOQ=="}], "type": "inlineReview"}, {"oid": "b6ca1bf421e5dc9a66aebe620df74bfb74cc2200", "url": "https://github.com/openhab/openhab-addons/commit/b6ca1bf421e5dc9a66aebe620df74bfb74cc2200", "message": "Update small typos and code refactoring as suggested by cpmeister\n\nSigned-off-by: Lukas Agethen <lukas83@gmx.de>", "committedDate": "2020-05-21T19:22:38Z", "type": "commit"}, {"oid": "06eb605d69fae76a85c01f2a52cac578446382d1", "url": "https://github.com/openhab/openhab-addons/commit/06eb605d69fae76a85c01f2a52cac578446382d1", "message": "Update small typos and added units where possible\n\n\n\nSigned-off-by: Lukas Agethen <lukas83@gmx.de>", "committedDate": "2020-05-21T19:41:09Z", "type": "commit"}]}