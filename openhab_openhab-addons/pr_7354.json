{"pr_number": 7354, "pr_title": "Replaced deprecated constructors and methods from Thing API", "pr_author": "cweitkamp", "pr_createdAt": "2020-04-13T11:00:58Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7354", "timeline": [{"oid": "fc3d929a7dd36d8ad31ccafaad52abe67060b098", "url": "https://github.com/openhab/openhab-addons/commit/fc3d929a7dd36d8ad31ccafaad52abe67060b098", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T11:02:07Z", "type": "forcePushed"}, {"oid": "2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "url": "https://github.com/openhab/openhab-addons/commit/2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:46:33Z", "type": "commit"}, {"oid": "2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "url": "https://github.com/openhab/openhab-addons/commit/2e5cff4c530404eed96c0f7d20a3e3ad9736495c", "message": "Replaced deprecated constructors and methods from Thing API\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:46:33Z", "type": "forcePushed"}, {"oid": "f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "url": "https://github.com/openhab/openhab-addons/commit/f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "message": "Implement ChannelGroupTypeProvider interface in addition to ChannelTypeProvider interface\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>", "committedDate": "2020-04-13T12:51:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0OTc5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407549797", "body": "```suggestion\r\n                                channelUID, root, CoreItemFactory.STRING, null, \"Error message\", \"Text\", true, false,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,\n          \n          \n            \n                                            channelUID, root, CoreItemFactory.STRING, null, \"Error message\", \"Text\", true, false,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                channelUID, root, <span class=\"pl-smi\">CoreItemFactory</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">NUMBER</span></span>, <span class=\"pl-c1\">null</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error message<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Text<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>, <span class=\"pl-c1\">false</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                channelUID, root, <span class=\"pl-smi\">CoreItemFactory</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">STRING</span></span>, <span class=\"pl-c1\">null</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error message<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Text<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>, <span class=\"pl-c1\">false</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-04-13T15:49:39Z", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -404,14 +431,17 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n \n                 case \"errorList\":\n                     if (\"nbrErrors\".equals(subKey) || \"error\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%.0f \", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%.0f\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"Number\", null, subKey, subKey, true, false, state, unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, subKey, subKey, true, false, state,\n+                                unitOfMeasure);\n                     } else if (\"errorString\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%s\", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%s\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"String\", null, \"Error message\", \"Text\", true, false, state,\n-                                unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,", "originalCommit": "f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "url": "https://github.com/openhab/openhab-addons/commit/f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "message": "Update bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java\n\nCo-Authored-By: cpmeister <mistercpp2000@gmail.com>", "committedDate": "2020-04-13T16:16:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407586139", "body": "This class doesn't have a `@NonNullByDefault` so are you sure that removing `@NonNull` here is safe?", "bodyText": "This class doesn't have a @NonNullByDefault so are you sure that removing @NonNull here is safe?", "bodyHTML": "<p dir=\"auto\">This class doesn't have a <code>@NonNullByDefault</code> so are you sure that removing <code>@NonNull</code> here is safe?</p>", "author": "cpmeister", "createdAt": "2020-04-13T16:56:07Z", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -324,7 +335,7 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n             switch (subKeyType) {\n                 case \"stringValue\":\n                     /* Creating an new channel type with capabilities from service */\n-                    List<@NonNull StateOption> options = null;", "originalCommit": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NTMxNg==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407595316", "bodyText": "Yes, I am. But it should not be to hard to add it on class level if you prefer.", "author": "cweitkamp", "createdAt": "2020-04-13T17:13:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NzQzMw==", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407667433", "bodyText": "Might as well", "author": "cpmeister", "createdAt": "2020-04-13T19:23:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}], "type": "inlineReview"}]}