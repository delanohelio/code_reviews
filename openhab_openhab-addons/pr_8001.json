{"pr_number": 8001, "pr_title": "[insteon] improved the handling of duplicate broadcast group messages", "pr_author": "robnielsen", "pr_createdAt": "2020-06-24T12:50:43Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8001", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3ODQwMA==", "url": "https://github.com/openhab/openhab-addons/pull/8001#discussion_r445178400", "body": "To prevent unnecessary calls to `Utils.getHexByte` we should check if logging would occur at all.\r\n```suggestion\r\n                            if (logger.isDebugEnabled()) {\r\n                                logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\r\n                                         Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));\r\n                            }\r\n```", "bodyText": "To prevent unnecessary calls to Utils.getHexByte we should check if logging would occur at all.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n          \n          \n            \n                                                Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));\n          \n          \n            \n                                        if (logger.isDebugEnabled()) {\n          \n          \n            \n                                            logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n          \n          \n            \n                                                     Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));\n          \n          \n            \n                                        }", "bodyHTML": "<p dir=\"auto\">To prevent unnecessary calls to <code>Utils.getHexByte</code> we should check if logging would occur at all.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}<span class=\"pl-pds\">\"</span></span>, address, group,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    <span class=\"pl-smi\">Utils</span><span class=\"pl-k\">.</span>getHexByte(cmd1), <span class=\"pl-smi\">Utils</span><span class=\"pl-k\">.</span>getHexByte(lastCmd1));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">if</span> (logger<span class=\"pl-k\">.</span>isDebugEnabled()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}<span class=\"pl-pds\">\"</span></span>, address, group,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                         <span class=\"pl-smi\">Utils</span><span class=\"pl-k\">.</span>getHexByte(cmd1), <span class=\"pl-smi\">Utils</span><span class=\"pl-k\">.</span>getHexByte(lastCmd1));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-06-24T21:20:28Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/GroupMessageStateMachine.java", "diffHunk": "@@ -132,7 +135,13 @@ public boolean action(GroupMessage a, InsteonAddress address, int group) {\n             case EXPECT_CLEAN:\n                 switch (a) {\n                     case BCAST:\n-                        publish = false;\n+                        if (lastCmd1 == cmd1) {\n+                            publish = false;\n+                        } else {\n+                            logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n+                                    Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));", "originalCommit": "81856e7f3b5ccdb1aca81af8a603bd6c341c2aec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NzcyMw==", "url": "https://github.com/openhab/openhab-addons/pull/8001#discussion_r445197723", "bodyText": "Good idea, I wonder why this convention isn't used around all logger.* message.", "author": "robnielsen", "createdAt": "2020-06-24T22:04:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3ODQwMA=="}], "type": "inlineReview"}, {"oid": "6562bef7ab31318db4344dce5f1adc24e69aac3b", "url": "https://github.com/openhab/openhab-addons/commit/6562bef7ab31318db4344dce5f1adc24e69aac3b", "message": "[insteon] improved the handling of duplicate broadcast group messages\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-06-24T22:03:43Z", "type": "commit"}]}