{"pr_number": 9509, "pr_title": "[http] Add rate-limiting to channel refresh", "pr_author": "J-N-K", "pr_createdAt": "2020-12-24T14:46:33Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9509", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIyNzE3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9509#discussion_r549227175", "body": "Completing with an InterruptedException would be misleading, so I suggest just cancelling the futures instead. It will complete with a CancelationException instead.\r\n```suggestion\r\n        requestQueue.forEach(queueEntry -> queueEntry.future.cancel(false));\r\n```", "bodyText": "Completing with an InterruptedException would be misleading, so I suggest just cancelling the futures instead. It will complete with a CancelationException instead.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    requestQueue.forEach(queueEntry -> queueEntry.future.completeExceptionally(new InterruptedException()));\n          \n          \n            \n                    requestQueue.forEach(queueEntry -> queueEntry.future.cancel(false));", "bodyHTML": "<p dir=\"auto\">Completing with an InterruptedException would be misleading, so I suggest just cancelling the futures instead. It will complete with a CancelationException instead.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        requestQueue<span class=\"pl-k\">.</span>forEach(queueEntry <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> queueEntry<span class=\"pl-k\">.</span>future<span class=\"pl-k\">.</span><span class=\"x x-first\">completeExceptionally(</span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">InterruptedException</span><span class=\"x x-last\">()</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        requestQueue<span class=\"pl-k\">.</span>forEach(queueEntry <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> queueEntry<span class=\"pl-k\">.</span>future<span class=\"pl-k\">.</span><span class=\"x x-first\">cancel(</span><span class=\"pl-c1 x x-last\">false</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-12-28T06:10:07Z", "path": "bundles/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/http/RateLimitedHttpClient.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.http.internal.http;\n+\n+import java.net.URI;\n+import java.util.concurrent.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.AuthenticationStore;\n+import org.eclipse.jetty.client.api.Request;\n+\n+/**\n+ * The {@link RateLimitedHttpClient} is a wrapper for a Jetty HTTP client that limits the number of requests by delaying\n+ * the request creation\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class RateLimitedHttpClient {\n+    private static final int MAX_QUEUE_SIZE = 1000; // maximum queue size\n+    private HttpClient httpClient;\n+    private int delay = 0; // in ms\n+    private final ScheduledExecutorService scheduler;\n+    private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>();\n+\n+    private @Nullable ScheduledFuture<?> processJob;\n+\n+    public RateLimitedHttpClient(HttpClient httpClient, ScheduledExecutorService scheduler) {\n+        this.httpClient = httpClient;\n+        this.scheduler = scheduler;\n+    }\n+\n+    /**\n+     * Stop processing the queue and clear it\n+     */\n+    public void shutdown() {\n+        stopProcessJob();\n+        requestQueue.forEach(queueEntry -> queueEntry.future.completeExceptionally(new InterruptedException()));", "originalCommit": "6af69687992b1b021e4b3760088897f0c73c948e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIyODIzNQ==", "url": "https://github.com/openhab/openhab-addons/pull/9509#discussion_r549228235", "body": "If this queue is going to have a fixed capacity, then you should let the LinkedBlockingQueue handle capacity instead of trying to implement the behavior yourself, it would be threadsafe that way.\r\n```suggestion\r\n    private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>(MAX_QUEUE_SIZE);\r\n```", "bodyText": "If this queue is going to have a fixed capacity, then you should let the LinkedBlockingQueue handle capacity instead of trying to implement the behavior yourself, it would be threadsafe that way.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>();\n          \n          \n            \n                private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>(MAX_QUEUE_SIZE);", "bodyHTML": "<p dir=\"auto\">If this queue is going to have a fixed capacity, then you should let the LinkedBlockingQueue handle capacity instead of trying to implement the behavior yourself, it would be threadsafe that way.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">LinkedBlockingQueue&lt;<span class=\"pl-smi\">RequestQueueEntry</span>&gt;</span> requestQueue <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">LinkedBlockingQueue&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">LinkedBlockingQueue&lt;<span class=\"pl-smi\">RequestQueueEntry</span>&gt;</span> requestQueue <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">LinkedBlockingQueue&lt;&gt;</span>(<span class=\"pl-c1 x x-first x-last\">MAX_QUEUE_SIZE</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-12-28T06:15:46Z", "path": "bundles/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/http/RateLimitedHttpClient.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.http.internal.http;\n+\n+import java.net.URI;\n+import java.util.concurrent.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.AuthenticationStore;\n+import org.eclipse.jetty.client.api.Request;\n+\n+/**\n+ * The {@link RateLimitedHttpClient} is a wrapper for a Jetty HTTP client that limits the number of requests by delaying\n+ * the request creation\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class RateLimitedHttpClient {\n+    private static final int MAX_QUEUE_SIZE = 1000; // maximum queue size\n+    private HttpClient httpClient;\n+    private int delay = 0; // in ms\n+    private final ScheduledExecutorService scheduler;\n+    private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>();", "originalCommit": "6af69687992b1b021e4b3760088897f0c73c948e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIyODk4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9509#discussion_r549228987", "body": "You can let the queue do the capacity check instead which would simplify this a bit.\r\n```suggestion\r\n        CompletableFuture<Request> future = new CompletableFuture<>();\r\n        if (!requestQueue.offer(new RequestQueueEntry(finalUrl, future)) {\r\n            future.completeExceptionally(new RejectedExecutionException(\"Maximum queue size exceeded.\"));\r\n        }\r\n        return future;\r\n```", "bodyText": "You can let the queue do the capacity check instead which would simplify this a bit.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (requestQueue.size() >= MAX_QUEUE_SIZE) {\n          \n          \n            \n                        return CompletableFuture.failedFuture(new IllegalStateException(\"Maximum queue size exceeded.\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    CompletableFuture<Request> future = new CompletableFuture<>();\n          \n          \n            \n                    requestQueue.add(new RequestQueueEntry(finalUrl, future));\n          \n          \n            \n                    return future;\n          \n          \n            \n                    CompletableFuture<Request> future = new CompletableFuture<>();\n          \n          \n            \n                    if (!requestQueue.offer(new RequestQueueEntry(finalUrl, future)) {\n          \n          \n            \n                        future.completeExceptionally(new RejectedExecutionException(\"Maximum queue size exceeded.\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    return future;", "bodyHTML": "<p dir=\"auto\">You can let the queue do the capacity check instead which would simplify this a bit.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (requestQueue<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">MAX_QUEUE_SIZE</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">CompletableFuture</span><span class=\"pl-k\">.</span>failedFuture(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalStateException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Maximum queue size exceeded.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">Request</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        requestQueue<span class=\"pl-k\">.</span>add(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RequestQueueEntry</span>(finalUrl, future));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> future;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">Request</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>requestQueue<span class=\"pl-k\">.</span>offer(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RequestQueueEntry</span>(finalUrl, future)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            future<span class=\"pl-k\">.</span>completeExceptionally(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">RejectedExecutionException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Maximum queue size exceeded.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> future;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-12-28T06:19:40Z", "path": "bundles/org.openhab.binding.http/src/main/java/org/openhab/binding/http/internal/http/RateLimitedHttpClient.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.http.internal.http;\n+\n+import java.net.URI;\n+import java.util.concurrent.*;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.jetty.client.HttpClient;\n+import org.eclipse.jetty.client.api.AuthenticationStore;\n+import org.eclipse.jetty.client.api.Request;\n+\n+/**\n+ * The {@link RateLimitedHttpClient} is a wrapper for a Jetty HTTP client that limits the number of requests by delaying\n+ * the request creation\n+ *\n+ * @author Jan N. Klug - Initial contribution\n+ */\n+@NonNullByDefault\n+public class RateLimitedHttpClient {\n+    private static final int MAX_QUEUE_SIZE = 1000; // maximum queue size\n+    private HttpClient httpClient;\n+    private int delay = 0; // in ms\n+    private final ScheduledExecutorService scheduler;\n+    private final LinkedBlockingQueue<RequestQueueEntry> requestQueue = new LinkedBlockingQueue<>();\n+\n+    private @Nullable ScheduledFuture<?> processJob;\n+\n+    public RateLimitedHttpClient(HttpClient httpClient, ScheduledExecutorService scheduler) {\n+        this.httpClient = httpClient;\n+        this.scheduler = scheduler;\n+    }\n+\n+    /**\n+     * Stop processing the queue and clear it\n+     */\n+    public void shutdown() {\n+        stopProcessJob();\n+        requestQueue.forEach(queueEntry -> queueEntry.future.completeExceptionally(new InterruptedException()));\n+    }\n+\n+    /**\n+     * Set a new delay\n+     * \n+     * @param delay in ms between to requests\n+     */\n+    public void setDelay(int delay) {\n+        if (delay < 0) {\n+            throw new IllegalArgumentException(\"Delay needs to be larger or equal to zero\");\n+        }\n+        this.delay = delay;\n+        stopProcessJob();\n+        if (delay != 0) {\n+            processJob = scheduler.scheduleWithFixedDelay(this::processQueue, 0, delay, TimeUnit.MILLISECONDS);\n+        }\n+    }\n+\n+    /**\n+     * Set the HTTP client\n+     *\n+     * @param httpClient secure or insecure Jetty http client\n+     */\n+    public void setHttpClient(HttpClient httpClient) {\n+        this.httpClient = httpClient;\n+    }\n+\n+    /**\n+     * Create a new request to the given URL respecting rate-limits\n+     *\n+     * @param finalUrl the request URL\n+     * @return a CompletableFuture that completes with the request\n+     */\n+    public CompletableFuture<Request> newRequest(URI finalUrl) {\n+        // if no delay is set, return a completed CompletableFuture\n+        if (delay == 0) {\n+            return CompletableFuture.completedFuture(httpClient.newRequest(finalUrl));\n+        }\n+        if (requestQueue.size() >= MAX_QUEUE_SIZE) {\n+            return CompletableFuture.failedFuture(new IllegalStateException(\"Maximum queue size exceeded.\"));\n+        }\n+        CompletableFuture<Request> future = new CompletableFuture<>();\n+        requestQueue.add(new RequestQueueEntry(finalUrl, future));\n+        return future;", "originalCommit": "6af69687992b1b021e4b3760088897f0c73c948e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "670a94d5bfae52100e7b4ab1be990e518abc592c", "url": "https://github.com/openhab/openhab-addons/commit/670a94d5bfae52100e7b4ab1be990e518abc592c", "message": "add rate limiter for requests and catch transformation exception\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-28T09:15:05Z", "type": "commit"}, {"oid": "b7531643961d91e39aea9f1953efabc2c1d57a73", "url": "https://github.com/openhab/openhab-addons/commit/b7531643961d91e39aea9f1953efabc2c1d57a73", "message": "address review comment\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-28T09:15:05Z", "type": "commit"}, {"oid": "6015b8983b1b36e08c57502d5ca954edc84f868c", "url": "https://github.com/openhab/openhab-addons/commit/6015b8983b1b36e08c57502d5ca954edc84f868c", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-28T09:15:05Z", "type": "commit"}, {"oid": "6015b8983b1b36e08c57502d5ca954edc84f868c", "url": "https://github.com/openhab/openhab-addons/commit/6015b8983b1b36e08c57502d5ca954edc84f868c", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-28T09:15:05Z", "type": "forcePushed"}]}