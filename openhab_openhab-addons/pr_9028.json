{"pr_number": 9028, "pr_title": "[neeo] improve code", "pr_author": "J-N-K", "pr_createdAt": "2020-11-14T17:58:09Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9028", "timeline": [{"oid": "ee71ad95419af70f83d77b119828529386236e09", "url": "https://github.com/openhab/openhab-addons/commit/ee71ad95419af70f83d77b119828529386236e09", "message": "create forwardactionsservlet only if forwardchain is not empty\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-14T15:47:44Z", "type": "commit"}, {"oid": "ff8d5b599755c97d693e9fa3338ed01b95f5f7c5", "url": "https://github.com/openhab/openhab-addons/commit/ff8d5b599755c97d693e9fa3338ed01b95f5f7c5", "message": "remove dependency on apache commons\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-14T17:57:32Z", "type": "commit"}, {"oid": "ee3b94037d1cce36f5ccafd19256f232c55d85da", "url": "https://github.com/openhab/openhab-addons/commit/ee3b94037d1cce36f5ccafd19256f232c55d85da", "message": "fixes\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-14T19:24:35Z", "type": "commit"}, {"oid": "2fdcd377fcc0c4a7dfc737886f98e2637a4133da", "url": "https://github.com/openhab/openhab-addons/commit/2fdcd377fcc0c4a7dfc737886f98e2637a4133da", "message": "fix forwardChain definition\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-14T19:41:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODA1Nw==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523808057", "body": "Aren't the lists returned by `Arrays.asList` immutable? I don't think this would work unless you make a copy of the `oldScenarios ` List first.", "bodyText": "Aren't the lists returned by Arrays.asList immutable? I don't think this would work unless you make a copy of the oldScenarios  List first.", "bodyHTML": "<p dir=\"auto\">Aren't the lists returned by <code>Arrays.asList</code> immutable? I don't think this would work unless you make a copy of the <code>oldScenarios </code> List first.</p>", "author": "cpmeister", "createdAt": "2020-11-15T20:18:36Z", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -263,19 +263,14 @@ private void refreshActiveScenarios() {\n             logger.debug(\"API is null [likely bridge is offline]\");\n         } else {\n             try {\n-                final String[] activeScenarios = api.getActiveScenarios();\n-                final String[] oldScenarios = this.activeScenarios.getAndSet(activeScenarios);\n-\n-                if (!ArrayUtils.isEquals(activeScenarios, oldScenarios)) {\n-                    for (String scenario : activeScenarios) {\n-                        refreshScenarioStatus(scenario);\n-                    }\n-\n-                    for (String oldScenario : oldScenarios) {\n-                        if (!ArrayUtils.contains(activeScenarios, oldScenario)) {\n-                            refreshScenarioStatus(oldScenario);\n-                        }\n-                    }\n+                final String[] apiScenarios = api.getActiveScenarios();\n+                final List<String> activeScenarios = Arrays.asList(apiScenarios);\n+                final List<String> oldScenarios = Arrays.asList(this.activeScenarios.getAndSet(apiScenarios));\n+\n+                if (!activeScenarios.equals(oldScenarios)) {\n+                    activeScenarios.forEach(this::refreshScenarioStatus);\n+                    oldScenarios.removeIf(activeScenarios::contains);", "originalCommit": "2fdcd377fcc0c4a7dfc737886f98e2637a4133da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODk5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523808992", "body": "Same issue here.", "bodyText": "Same issue here.", "bodyHTML": "<p dir=\"auto\">Same issue here.</p>", "author": "cpmeister", "createdAt": "2020-11-15T20:25:53Z", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,18 +123,19 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = Arrays.asList(this.activeScenarios.get());\n+        final int idx = activeScenarios.indexOf(scenarioKey);\n \n         // already set that way\n         if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n             return;\n+        } else if (idx >= 0) {\n+            activeScenarios.remove(scenarioKey);\n+        } else {\n+            activeScenarios.add(scenarioKey);\n         }", "originalCommit": "2fdcd377fcc0c4a7dfc737886f98e2637a4133da", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f35d04249109a75f119116dae48aab30d2bd03bc", "url": "https://github.com/openhab/openhab-addons/commit/f35d04249109a75f119116dae48aab30d2bd03bc", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-15T20:59:26Z", "type": "commit"}, {"oid": "7d96e66ff31b6e94aae13dec49d92e2aca27574a", "url": "https://github.com/openhab/openhab-addons/commit/7d96e66ff31b6e94aae13dec49d92e2aca27574a", "message": "fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-15T21:15:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgxNDY1MA==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523814650", "body": "You risk concurrency exceptions if you don't make a copy of the list here.\r\n```suggestion\r\n        final List<String> activeScenarios = new ArrayList<>(this.activeScenarios.get());\r\n```", "bodyText": "You risk concurrency exceptions if you don't make a copy of the list here.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final List<String> activeScenarios = this.activeScenarios.get();\n          \n          \n            \n                    final List<String> activeScenarios = new ArrayList<>(this.activeScenarios.get());", "bodyHTML": "<p dir=\"auto\">You risk concurrency exceptions if you don't make a copy of the list here.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span> activeScenarios <span class=\"pl-k\">=</span> <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>activeScenarios<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span> activeScenarios <span class=\"pl-k\">=</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">ArrayList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>activeScenarios<span class=\"pl-k\">.</span>get(<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-11-15T21:14:05Z", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +124,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();", "originalCommit": "f35d04249109a75f119116dae48aab30d2bd03bc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523823495", "body": "For this to behave correctly in a concurrent environment you should use `AtomicReference.compareAndSet` to make sure that the reference has't been changed by something else before you were able to set it. Usually this is put in a while loop and only exists once the compareAndSet returns true.", "bodyText": "For this to behave correctly in a concurrent environment you should use AtomicReference.compareAndSet to make sure that the reference has't been changed by something else before you were able to set it. Usually this is put in a while loop and only exists once the compareAndSet returns true.", "bodyHTML": "<p dir=\"auto\">For this to behave correctly in a concurrent environment you should use <code>AtomicReference.compareAndSet</code> to make sure that the reference has't been changed by something else before you were able to set it. Usually this is put in a while loop and only exists once the compareAndSet returns true.</p>", "author": "cpmeister", "createdAt": "2020-11-15T22:29:13Z", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +123,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();\n \n-        // already set that way\n-        if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n-            return;\n+        if (activeScenarios.contains(scenarioKey)) {\n+            if (launch) {\n+                return;\n+            } else {\n+                activeScenarios.remove(scenarioKey);\n+            }\n+        } else {\n+            if (launch) {\n+                activeScenarios.add(scenarioKey);\n+            } else {\n+                return;\n+            }\n         }\n \n-        final String[] newScenarios = idx >= 0 ? (String[]) ArrayUtils.remove(activeScenarios, idx)\n-                : (String[]) ArrayUtils.add(activeScenarios, scenarioKey);\n-\n-        this.activeScenarios.set(newScenarios);\n-\n+        this.activeScenarios.set(activeScenarios);", "originalCommit": "7d96e66ff31b6e94aae13dec49d92e2aca27574a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk0MjYwMg==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523942602", "bodyText": "I wonder if this is sort of over-kill, but I changed it accordingly.", "author": "J-N-K", "createdAt": "2020-11-16T07:36:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NjU0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r524546541", "bodyText": "I'm sure it is, but if any of the atomic utility classes are going to be used, they should be used correctly.", "author": "cpmeister", "createdAt": "2020-11-16T20:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ=="}], "type": "inlineReview"}, {"oid": "dfb5b82fd49e63cb761c22df59f836fbb19099d1", "url": "https://github.com/openhab/openhab-addons/commit/dfb5b82fd49e63cb761c22df59f836fbb19099d1", "message": "address review comments\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-16T07:35:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NjExMQ==", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r524546111", "body": "The compareAndSet here will never return true since you always make a copy of activeScenarios.get(). The compareAndSet does reference comparison.", "bodyText": "The compareAndSet here will never return true since you always make a copy of activeScenarios.get(). The compareAndSet does reference comparison.", "bodyHTML": "<p dir=\"auto\">The compareAndSet here will never return true since you always make a copy of activeScenarios.get(). The compareAndSet does reference comparison.</p>", "author": "cpmeister", "createdAt": "2020-11-16T20:17:32Z", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,23 +123,28 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final List<String> activeScenarios = this.activeScenarios.get();\n+        List<String> activeScenarios;\n+        List<String> newActiveScenarios;\n \n-        if (activeScenarios.contains(scenarioKey)) {\n-            if (launch) {\n-                return;\n-            } else {\n-                activeScenarios.remove(scenarioKey);\n-            }\n-        } else {\n-            if (launch) {\n-                activeScenarios.add(scenarioKey);\n+        do {\n+            activeScenarios = new ArrayList<>(this.activeScenarios.get());\n+            newActiveScenarios = new ArrayList<>(activeScenarios);\n+\n+            if (activeScenarios.contains(scenarioKey)) {\n+                if (launch) {\n+                    return;\n+                } else {\n+                    newActiveScenarios.remove(scenarioKey);\n+                }\n             } else {\n-                return;\n+                if (launch) {\n+                    newActiveScenarios.add(scenarioKey);\n+                } else {\n+                    return;\n+                }\n             }\n-        }\n+        } while (!this.activeScenarios.compareAndSet(activeScenarios, newActiveScenarios));", "originalCommit": "dfb5b82fd49e63cb761c22df59f836fbb19099d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b1656c529e9690bc85c5b49a9dc46a5b040716cb", "url": "https://github.com/openhab/openhab-addons/commit/b1656c529e9690bc85c5b49a9dc46a5b040716cb", "message": "next try\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-17T06:45:35Z", "type": "commit"}]}