{"pr_number": 7404, "pr_title": "[miio] add miot protocol & conditions", "pr_author": "marcelrv", "pr_createdAt": "2020-04-17T20:53:38Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7404", "timeline": [{"oid": "ca692bbe7d72e5740cdac4740a22ecb10969d8bd", "url": "https://github.com/openhab/openhab-addons/commit/ca692bbe7d72e5740cdac4740a22ecb10969d8bd", "message": "[miio] add miot protocol & conditions\n\n* Add miot protocol handling #7276\n* Add first 2 miot devices (airpurifiers mb3 & ma4)\n* Add conditional commands\n* Change brightness to dimmers #4388\n* Apply conditions for dimmers\n* Remove obsolete (pre)parameters from actions\n\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-04-17T20:43:06Z", "type": "commit"}, {"oid": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "url": "https://github.com/openhab/openhab-addons/commit/0fc6173d8683189c9d7f0f186102c271ccdf0146", "message": "[miio] remove DTO files not relevant to this PR", "committedDate": "2020-04-17T21:35:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5Nzc0Mg==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410497742", "body": "Is this a todo or a comment?", "bodyText": "Is this a todo or a comment?", "bodyHTML": "<p dir=\"auto\">Is this a todo or a comment?</p>", "author": "cpmeister", "createdAt": "2020-04-17T22:23:17Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.miio.internal.basic;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonPrimitive;\n+\n+/**\n+ * Conditional Execution of rules\n+ *\n+ * @author Marcel Verpaalen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ActionConditions {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ActionConditions.class);\n+\n+    /**\n+     * Check if it matches the firmware version.\n+     *\n+     * @param condition\n+     * @param deviceVariables\n+     * @param value\n+     * @return value is case firmware is matching, return null if not\n+     */\n+    private static @Nullable JsonElement firmwareCheck(MiIoDeviceActionCondition condition,\n+            Map<String, Object> deviceVariables, @Nullable JsonElement value) {\n+        // TODO: placeholder for firmware version check to allow for firmware dependent actions", "originalCommit": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NDQwMA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410664400", "bodyText": "It indeed is a placeholder for now for something I want to implement in a further version.\nIt does require still bit of researching on the format of the various firmware version strings Xiaomi is using.\nif it is disturbing I can remove the whole function until it is actually used.", "author": "marcelrv", "createdAt": "2020-04-18T07:51:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5Nzc0Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMTIxNA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410711214", "bodyText": "You can leave this as is.", "author": "cpmeister", "createdAt": "2020-04-18T15:20:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5Nzc0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5Nzg0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410497843", "body": "```suggestion\r\n     * @return value in case firmware is matching, return null if not\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return value is case firmware is matching, return null if not\n          \n          \n            \n                 * @return value in case firmware is matching, return null if not", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> value <span class=\"x x-first x-last\">is</span> <span class=\"pl-k\">case</span> firmware is matching, <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">if</span> not</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> value <span class=\"x x-first x-last\">in</span> <span class=\"pl-k\">case</span> firmware is matching, <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">if</span> not</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-04-17T22:23:33Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.miio.internal.basic;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonPrimitive;\n+\n+/**\n+ * Conditional Execution of rules\n+ *\n+ * @author Marcel Verpaalen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ActionConditions {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ActionConditions.class);\n+\n+    /**\n+     * Check if it matches the firmware version.\n+     *\n+     * @param condition\n+     * @param deviceVariables\n+     * @param value\n+     * @return value is case firmware is matching, return null if not", "originalCommit": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NTA3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410665076", "bodyText": "done", "author": "marcelrv", "createdAt": "2020-04-18T07:59:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5Nzg0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODEwMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410498101", "body": "Can you check for this before trying to cast it rather than catching the exception?", "bodyText": "Can you check for this before trying to cast it rather than catching the exception?", "bodyHTML": "<p dir=\"auto\">Can you check for this before trying to cast it rather than catching the exception?</p>", "author": "cpmeister", "createdAt": "2020-04-17T22:24:26Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.miio.internal.basic;\n+\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonPrimitive;\n+\n+/**\n+ * Conditional Execution of rules\n+ *\n+ * @author Marcel Verpaalen - Initial contribution\n+ */\n+@NonNullByDefault\n+public class ActionConditions {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ActionConditions.class);\n+\n+    /**\n+     * Check if it matches the firmware version.\n+     *\n+     * @param condition\n+     * @param deviceVariables\n+     * @param value\n+     * @return value is case firmware is matching, return null if not\n+     */\n+    private static @Nullable JsonElement firmwareCheck(MiIoDeviceActionCondition condition,\n+            Map<String, Object> deviceVariables, @Nullable JsonElement value) {\n+        // TODO: placeholder for firmware version check to allow for firmware dependent actions\n+        return value;\n+    }\n+\n+    /**\n+     * Check if the value is a valid brightness between 1-99.\n+     * If <1 returns Off, if >99 returns On to activate the power On/Off switch\n+     *\n+     * @param value\n+     * @return\n+     */\n+    private static @Nullable JsonElement brightness(@Nullable JsonElement value) {\n+        if (value != null && value.isJsonPrimitive()) {\n+            try {\n+                int intVal = value.getAsInt();\n+                if (intVal > 99) {\n+                    return new JsonPrimitive(\"on\");\n+                }\n+                if (intVal < 1) {\n+                    return new JsonPrimitive(\"off\");\n+                }\n+            } catch (ClassCastException e) {\n+                LOGGER.debug(\"Error parsing brightness. Value {} is not an int\", value);\n+            }\n+        }\n+        return null;\n+    }\n+\n+    /**\n+     * Check if the value is a valid brightness between 1-99 which can be send to brightness channel.\n+     * If not returns a null\n+     *\n+     * @param value\n+     * @return\n+     */\n+    private static @Nullable JsonElement brightnessExists(@Nullable JsonElement value) {\n+        if (value != null && value.isJsonPrimitive()) {\n+            try {\n+                int intVal = value.getAsInt();\n+                if (intVal > 0 && intVal < 99) {\n+                    return value;\n+                }\n+            } catch (ClassCastException e) {", "originalCommit": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NTEyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410665129", "bodyText": "yes, didn't find it at first, but found a number check.\ndone", "author": "marcelrv", "createdAt": "2020-04-18T08:00:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODEwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODQ1NA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410498454", "body": "If this is non-null by default why not make this a primitive?", "bodyText": "If this is non-null by default why not make this a primitive?", "bodyHTML": "<p dir=\"auto\">If this is non-null by default why not make this a primitive?</p>", "author": "cpmeister", "createdAt": "2020-04-17T22:25:34Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoBasicChannel.java", "diffHunk": "@@ -69,6 +75,40 @@ public void setProperty(String property) {\n         this.property = property;\n     }\n \n+    public int getSiid() {\n+        final Integer siid = this.siid;\n+        if (siid != null) {\n+            return siid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setSiid(Integer siid) {\n+        this.siid = siid;\n+    }\n+\n+    public int getPiid() {\n+        final Integer piid = this.piid;\n+        if (piid != null) {\n+            return piid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setPiid(Integer piid) {", "originalCommit": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NTQ2OA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410665468", "bodyText": "These  siid & piid Integers are only used for miot protocol devices, I use it to determine if it is a miot device by comparing to null in the  isMiot function.\nin the further functions I don't want to do this checking anymore hence the conversion here to primitive", "author": "marcelrv", "createdAt": "2020-04-18T08:04:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ5ODQ1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMTUyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410501520", "body": "Why not just do:\r\n```suggestion\r\n        }\r\n        deviceVariables.putAll(properties);\r\n        updateProperties(properties);\r\n```", "bodyText": "Why not just do:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    updateProperties(properties);\n          \n          \n            \n                    }\n          \n          \n            \n                    deviceVariables.putAll(properties);\n          \n          \n            \n                    updateProperties(properties);", "bodyHTML": "<p dir=\"auto\">Why not just do:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"376\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"377\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        updateProperties(properties);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"376\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"377\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        deviceVariables<span class=\"pl-k\">.</span>putAll(properties);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"378\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        updateProperties(properties);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-04-17T22:37:00Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoAbstractHandler.java", "diffHunk": "@@ -359,22 +359,27 @@ private void updateProperties(JsonObject miioInfo) {\n         Map<String, String> properties = editProperties();\n         if (info.model != null) {\n             properties.put(Thing.PROPERTY_MODEL_ID, info.model);\n+            deviceVariables.put(Thing.PROPERTY_MODEL_ID, info.model);\n         }\n         if (info.fwVer != null) {\n             properties.put(Thing.PROPERTY_FIRMWARE_VERSION, info.fwVer);\n+            deviceVariables.put(Thing.PROPERTY_FIRMWARE_VERSION, info.fwVer);\n         }\n         if (info.hwVer != null) {\n             properties.put(Thing.PROPERTY_HARDWARE_VERSION, info.hwVer);\n+            deviceVariables.put(Thing.PROPERTY_HARDWARE_VERSION, info.hwVer);\n         }\n         if (info.wifiFwVer != null) {\n             properties.put(\"wifiFirmware\", info.wifiFwVer);\n+            deviceVariables.put(\"wifiFirmware\", info.hwVer);\n         }\n         if (info.mcuFwVer != null) {\n             properties.put(\"mcuFirmware\", info.mcuFwVer);\n+            deviceVariables.put(\"mcuFirmware\", info.mcuFwVer);\n         }\n         updateProperties(properties);", "originalCommit": "0fc6173d8683189c9d7f0f186102c271ccdf0146", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NTcwOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410665709", "bodyText": "Excellent suggestion...done", "author": "marcelrv", "createdAt": "2020-04-18T08:07:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUwMTUyMA=="}], "type": "inlineReview"}, {"oid": "c39d7891618376e18b6bfb2577df9e08c8c49ad4", "url": "https://github.com/openhab/openhab-addons/commit/c39d7891618376e18b6bfb2577df9e08c8c49ad4", "message": "[miio] updates from code review\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-04-18T08:15:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMjA4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410712083", "body": "You should cache `para.get(i)` in a local variable for reuse.", "bodyText": "You should cache para.get(i) in a local variable for reuse.", "bodyHTML": "<p dir=\"auto\">You should cache <code>para.get(i)</code> in a local variable for reuse.</p>", "author": "cpmeister", "createdAt": "2020-04-18T15:27:52Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -375,11 +417,19 @@ private void updatePropsFromJsonArray(MiIoSendCommand response) {\n                     para.size(), res.size(), para, res);\n         }\n         for (int i = 0; i < para.size(); i++) {\n-            String param = para.get(i).getAsString();\n+            // This is a miot parameter\n+            String param;\n+            if (para.get(i).isJsonObject()) { // miot channel", "originalCommit": "c39d7891618376e18b6bfb2577df9e08c8c49ad4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMjUwOA==", "url": "https://github.com/openhab/openhab-addons/pull/7404#discussion_r410712508", "body": "This calculation would look better using bit-shift operators instead of multiplication.\r\n```suggestion\r\n                                    (color.getRed() << 16) + (color.getGreen() << 8) + color.getBlue());\r\n```", "bodyText": "This calculation would look better using bit-shift operators instead of multiplication.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                (color.getRed() * 65536) + (color.getGreen() * 256) + color.getBlue());\n          \n          \n            \n                                                (color.getRed() << 16) + (color.getGreen() << 8) + color.getBlue());", "bodyHTML": "<p dir=\"auto\">This calculation would look better using bit-shift operators instead of multiplication.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    (color<span class=\"pl-k\">.</span>getRed() <span class=\"pl-k x x-first\">*</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">65536</span>) <span class=\"pl-k\">+</span> (color<span class=\"pl-k\">.</span>getGreen() <span class=\"pl-k x x-first\">*</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">256</span>) <span class=\"pl-k\">+</span> color<span class=\"pl-k\">.</span>getBlue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    (color<span class=\"pl-k\">.</span>getRed() <span class=\"pl-k x x-first\">&lt;&lt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">16</span>) <span class=\"pl-k\">+</span> (color<span class=\"pl-k\">.</span>getGreen() <span class=\"pl-k x x-first\">&lt;&lt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">8</span>) <span class=\"pl-k\">+</span> color<span class=\"pl-k\">.</span>getBlue());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-04-18T15:31:02Z", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -130,73 +132,94 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         }\n         logger.debug(\"Locating action for channel {}: {}\", channelUID.getId(), command);\n         if (!actions.isEmpty()) {\n-            if (actions.containsKey(channelUID.getId())) {\n+            if (actions.containsKey(channelUID)) {\n                 int valuePos = 0;\n-                @Nullable\n-                JsonElement value = null;\n-                MiIoDeviceAction action = actions.get(channelUID.getId());\n-                JsonArray parameters = actions.get(channelUID.getId()).getParameters();\n-                for (int i = 0; i < action.getParameters().size(); i++) {\n-                    JsonElement p = action.getParameters().get(i);\n-                    if (p.isJsonPrimitive() && p.getAsString().toLowerCase().contains(\"$value$\")) {\n-                        valuePos = i;\n+                MiIoBasicChannel miIoBasicChannel = actions.get(channelUID);\n+                for (MiIoDeviceAction action : miIoBasicChannel.getActions()) {\n+                    @Nullable\n+                    JsonElement value = null;\n+                    JsonArray parameters = action.getParameters();\n+                    for (int i = 0; i < action.getParameters().size(); i++) {\n+                        JsonElement p = action.getParameters().get(i);\n+                        if (p.isJsonPrimitive() && p.getAsString().toLowerCase().contains(\"$value$\")) {\n+                            valuePos = i;\n+                        }\n                     }\n-                }\n-                String cmd = actions.get(channelUID.getId()).getCommand();\n-                CommandParameterType paramType = actions.get(channelUID.getId()).getparameterType();\n-                if (paramType == CommandParameterType.COLOR) {\n-                    if (command instanceof HSBType) {\n-                        HSBType hsb = (HSBType) command;\n-                        Color color = Color.getHSBColor(hsb.getHue().floatValue() / 360,\n-                                hsb.getSaturation().floatValue() / 100, hsb.getBrightness().floatValue() / 100);\n-                        value = new JsonPrimitive(\n-                                (color.getRed() * 65536) + (color.getGreen() * 256) + color.getBlue());\n+                    String cmd = action.getCommand();\n+                    CommandParameterType paramType = action.getparameterType();\n+                    if (paramType == CommandParameterType.COLOR) {\n+                        if (command instanceof HSBType) {\n+                            HSBType hsb = (HSBType) command;\n+                            Color color = Color.getHSBColor(hsb.getHue().floatValue() / 360,\n+                                    hsb.getSaturation().floatValue() / 100, hsb.getBrightness().floatValue() / 100);\n+                            value = new JsonPrimitive(\n+                                    (color.getRed() * 65536) + (color.getGreen() * 256) + color.getBlue());", "originalCommit": "c39d7891618376e18b6bfb2577df9e08c8c49ad4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c479de2a87bd476aeb9343240de2b53285dd8997", "url": "https://github.com/openhab/openhab-addons/commit/c479de2a87bd476aeb9343240de2b53285dd8997", "message": "[miio] updates from code review\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>", "committedDate": "2020-04-18T16:05:01Z", "type": "commit"}]}