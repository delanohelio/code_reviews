{"pr_number": 8937, "pr_title": "[insteon] remove all @SuppressWarnings(\"null\")", "pr_author": "robnielsen", "pr_createdAt": "2020-11-01T21:37:14Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8937", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDYyNg==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516264626", "body": "Now that we have EEAs there is no need for annotating the value type with `@Nullable` to prevent those false positives. You should only do that if you put actual `null` values in a map. Which usually is not the case and is also not preferable because it increases the risk of NPEs. ", "bodyText": "Now that we have EEAs there is no need for annotating the value type with @Nullable to prevent those false positives. You should only do that if you put actual null values in a map. Which usually is not the case and is also not preferable because it increases the risk of NPEs.", "bodyHTML": "<p dir=\"auto\">Now that we have EEAs there is no need for annotating the value type with <code>@Nullable</code> to prevent those false positives. You should only do that if you put actual <code>null</code> values in a map. Which usually is not the case and is also not preferable because it increases the risk of NPEs.</p>", "author": "wborn", "createdAt": "2020-11-02T21:28:58Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBinding.java", "diffHunk": "@@ -106,15 +106,14 @@\n  * @author Rob Nielsen - Port to openHAB 2 insteon binding\n  */\n @NonNullByDefault\n-@SuppressWarnings({ \"null\", \"unused\" })\n public class InsteonBinding {\n     private static final int DEAD_DEVICE_COUNT = 10;\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonBinding.class);\n \n     private Driver driver;\n-    private ConcurrentHashMap<InsteonAddress, InsteonDevice> devices = new ConcurrentHashMap<>();\n-    private ConcurrentHashMap<String, InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();\n+    private Map<InsteonAddress, @Nullable InsteonDevice> devices = new ConcurrentHashMap<>();\n+    private Map<String, @Nullable InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();", "originalCommit": "6b634cad466e48b74f5de9247de9aca35e172108", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyMTM4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516321387", "bodyText": "fixed", "author": "robnielsen", "createdAt": "2020-11-02T23:15:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDYyNg=="}], "type": "inlineReview"}, {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb", "url": "https://github.com/openhab/openhab-addons/commit/ff35f03ddb4b27de76ed94300b3f962d9dd473cb", "message": "[insteon] remove all @SuppressWarnings(\"null\")\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-02T21:28:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516277556", "body": "The proper fix is here to remove `@Nullable` from the `dbes` value type. Then if you iterate over the `entrySet` instead of the `keySet` there will be no possible null reference and so you won't need the `dbe != null` check either. It results in less code, less NPEs and better performance. :smile: ", "bodyText": "The proper fix is here to remove @Nullable from the dbes value type. Then if you iterate over the entrySet instead of the keySet there will be no possible null reference and so you won't need the dbe != null check either. It results in less code, less NPEs and better performance. \ud83d\ude04", "bodyHTML": "<p dir=\"auto\">The proper fix is here to remove <code>@Nullable</code> from the <code>dbes</code> value type. Then if you iterate over the <code>entrySet</code> instead of the <code>keySet</code> there will be no possible null reference and so you won't need the <code>dbe != null</code> check either. It results in less code, less NPEs and better performance. <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>", "author": "wborn", "createdAt": "2020-11-02T21:55:45Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "originalCommit": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyMTg3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516321873", "bodyText": "fixed", "author": "robnielsen", "createdAt": "2020-11-02T23:15:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2OTkxNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517169915", "bodyText": "The code is still iterating over the keySet instead of the entrySet causing redundant null checks. Looks like the same improvement can also be applied to other for-loops in the binding.", "author": "wborn", "createdAt": "2020-11-04T08:28:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNDYyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517424628", "bodyText": "sorry, fixed now. I also review reviewed other for-loops and didn't find any that should be changed.", "author": "robnielsen", "createdAt": "2020-11-04T15:24:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNDg5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517424891", "bodyText": "sorry, fixed now. I also review reviewed other for-loops and didn't find any that should be changed.", "author": "robnielsen", "createdAt": "2020-11-04T15:25:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjUyOA==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516282528", "body": "```suggestion\r\n    private static Map<String, DataType> typeMap = new HashMap<>();\r\n```\r\n\r\nWith the current EEAs there is only proper null analysis for the `Map` type. I created https://github.com/lastnpe/eclipse-null-eea-augments/pull/109 because I was not happy to see the analysis missing on other common types. So that should also bring proper analysis whenever someone doesn't program against interfaces such as `Map` (which is still preferable) but actual implementations such as `HashMap`, `ArrayList` etc.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static HashMap<String, @Nullable DataType> typeMap = new HashMap<>();\n          \n          \n            \n                private static Map<String, DataType> typeMap = new HashMap<>();\n          \n      \n    \n    \n  \n\nWith the current EEAs there is only proper null analysis for the Map type. I created lastnpe/eclipse-null-eea-augments#109 because I was not happy to see the analysis missing on other common types. So that should also bring proper analysis whenever someone doesn't program against interfaces such as Map (which is still preferable) but actual implementations such as HashMap, ArrayList etc.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">HashMap</span>&lt;<span class=\"pl-smi\">String</span>,<span class=\"x x-first\"> @</span></span><span class=\"pl-smi x x-last\">Nullable</span> <span class=\"pl-smi\">DataType</span><span class=\"pl-k\">&gt;</span> typeMap <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\"><span class=\"x x-first x-last\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">DataType</span>&gt;</span> typeMap <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">With the current EEAs there is only proper null analysis for the <code>Map</code> type. I created <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"733770382\" data-permission-text=\"Title is private\" data-url=\"https://github.com/lastnpe/eclipse-null-eea-augments/issues/109\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/lastnpe/eclipse-null-eea-augments/pull/109/hovercard\" href=\"https://github.com/lastnpe/eclipse-null-eea-augments/pull/109\">lastnpe/eclipse-null-eea-augments#109</a> because I was not happy to see the analysis missing on other common types. So that should also bring proper analysis whenever someone doesn't program against interfaces such as <code>Map</code> (which is still preferable) but actual implementations such as <code>HashMap</code>, <code>ArrayList</code> etc.</p>", "author": "wborn", "createdAt": "2020-11-02T22:06:35Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/message/DataType.java", "diffHunk": "@@ -31,10 +31,10 @@\n     ADDRESS(\"address\", 3),\n     INVALID(\"INVALID\", -1);\n \n-    private static HashMap<String, DataType> typeMap = new HashMap<>();\n+    private static HashMap<String, @Nullable DataType> typeMap = new HashMap<>();", "originalCommit": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyNzc2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516327766", "bodyText": "fixed", "author": "robnielsen", "createdAt": "2020-11-02T23:24:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjUyOA=="}], "type": "inlineReview"}, {"oid": "6d46a45208b21590c1bb9122d65b6345d0d4da1c", "url": "https://github.com/openhab/openhab-addons/commit/6d46a45208b21590c1bb9122d65b6345d0d4da1c", "message": "[insteon] changes recommended by wborn\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-02T23:21:10Z", "type": "forcePushed"}, {"oid": "c1cca364ab16bc4c0c306ab41ab0f9a21f7171ec", "url": "https://github.com/openhab/openhab-addons/commit/c1cca364ab16bc4c0c306ab41ab0f9a21f7171ec", "message": "[insteon] remove more instances of unnecessary @Nullable\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-04T00:05:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM1ODY0NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517358645", "body": "Perhaps this if condition can be added to `if (conf.getFeature().contains(\"dimmer\")) {` to simplify the code?\r\n", "bodyText": "Perhaps this if condition can be added to if (conf.getFeature().contains(\"dimmer\")) { to simplify the code?", "bodyHTML": "<p dir=\"auto\">Perhaps this if condition can be added to <code>if (conf.getFeature().contains(\"dimmer\")) {</code> to simplify the code?</p>", "author": "wborn", "createdAt": "2020-11-04T13:54:43Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -114,22 +112,24 @@ protected String nm() {\n \n     protected int getMaxLightLevel(InsteonChannelConfiguration conf, int defaultLevel) {\n         Map<String, @Nullable String> params = conf.getParameters();\n-        if (conf.getFeature().contains(\"dimmer\") && params.containsKey(\"dimmermax\")) {\n-            String item = conf.getChannelName();\n+        if (conf.getFeature().contains(\"dimmer\")) {\n             String dimmerMax = params.get(\"dimmermax\");\n-            try {\n-                int i = Integer.parseInt(dimmerMax);\n-                if (i > 1 && i <= 99) {\n-                    int level = (int) Math.ceil((i * 255.0) / 100); // round up\n-                    if (level < defaultLevel) {\n-                        logger.debug(\"item {}: using dimmermax value of {}\", item, dimmerMax);\n-                        return level;\n+            if (dimmerMax != null) {", "originalCommit": "c1cca364ab16bc4c0c306ab41ab0f9a21f7171ec", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0NzY4NA==", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517447684", "bodyText": "Not really, getFeature() returns a string and the first if check to see it it contains the string \"dimmer\". If it does the second if checks to see if there is a parameter called \"dimmermax\".", "author": "robnielsen", "createdAt": "2020-11-04T15:55:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM1ODY0NQ=="}], "type": "inlineReview"}, {"oid": "30cdf0d23d1a1f0a11c2c2a960c1db282d4a83fe", "url": "https://github.com/openhab/openhab-addons/commit/30cdf0d23d1a1f0a11c2c2a960c1db282d4a83fe", "message": "[insteon] remove more instances of unnecessary @Nullable\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-04T14:45:24Z", "type": "forcePushed"}, {"oid": "019c804950851209e32d64af952a0465d253c138", "url": "https://github.com/openhab/openhab-addons/commit/019c804950851209e32d64af952a0465d253c138", "message": "[insteon]  more cleanup\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-04T16:48:25Z", "type": "forcePushed"}, {"oid": "059a483c73f2b05c3660a42e8db942b04ea1452b", "url": "https://github.com/openhab/openhab-addons/commit/059a483c73f2b05c3660a42e8db942b04ea1452b", "message": "[insteon] remove all @SuppressWarnings(\"null\")\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-04T19:29:44Z", "type": "commit"}, {"oid": "059a483c73f2b05c3660a42e8db942b04ea1452b", "url": "https://github.com/openhab/openhab-addons/commit/059a483c73f2b05c3660a42e8db942b04ea1452b", "message": "[insteon] remove all @SuppressWarnings(\"null\")\n\nSigned-off-by: Rob Nielsen <rob.nielsen@yahoo.com>", "committedDate": "2020-11-04T19:29:44Z", "type": "forcePushed"}]}