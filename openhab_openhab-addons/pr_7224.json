{"pr_number": 7224, "pr_title": "[insteon] support Dimmer/Switch Beep and LED On/Off as well as Motion Sensor Dawn/Dusk and Low Bat", "pr_author": "tommycw1", "pr_createdAt": "2020-03-26T00:13:37Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7224", "merge_commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "timeline": [{"oid": "9aa3134a9625c7bfefb3adf00f4f05b35f3ac67a", "url": "https://github.com/openhab/openhab-addons/commit/9aa3134a9625c7bfefb3adf00f4f05b35f3ac67a", "message": "Added Beep and LED On/Off to dimmers switches (and keypad dimmers and switches).  Also added Dawn/Dusk and LowBattery to motion detectors.\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-26T01:50:48Z", "type": "commit"}, {"oid": "915943e01de97372f7959cdf9d98da29fc9c12f2", "url": "https://github.com/openhab/openhab-addons/commit/915943e01de97372f7959cdf9d98da29fc9c12f2", "message": "Added Beep and LED On/Off as channels\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-26T01:50:48Z", "type": "commit"}, {"oid": "ded4e5c47005c93a54537ad6f1a69430d0aa4707", "url": "https://github.com/openhab/openhab-addons/commit/ded4e5c47005c93a54537ad6f1a69430d0aa4707", "message": "Added Beep and LED On/Off channels to README.md\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-26T01:50:48Z", "type": "commit"}, {"oid": "d690e466b18693d564158ef9aee13a10a892ed7e", "url": "https://github.com/openhab/openhab-addons/commit/d690e466b18693d564158ef9aee13a10a892ed7e", "message": "Added Motion Sensor Dawn/Dusk and Low Batt as channels and to README.md\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-26T01:50:48Z", "type": "commit"}, {"oid": "d690e466b18693d564158ef9aee13a10a892ed7e", "url": "https://github.com/openhab/openhab-addons/commit/d690e466b18693d564158ef9aee13a10a892ed7e", "message": "Added Motion Sensor Dawn/Dusk and Low Batt as channels and to README.md\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-26T01:50:48Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMDQ5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398300491", "body": "so the last three bytes of the message are 0?", "bodyText": "so the last three bytes of the message are 0?", "bodyHTML": "<p dir=\"auto\">so the last three bytes of the message are 0?</p>", "author": "cpmeister", "createdAt": "2020-03-26T03:40:29Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -386,13 +386,13 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n             try {\n                 int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3NTg2MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398575861", "bodyText": "Yes, per @robnielsen 's comments below, I've changed code to set these specifically to 0x00", "author": "tommycw1", "createdAt": "2020-03-26T13:35:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMDQ5MQ=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..614da7fe1e 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +364,12 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 614da7fe1e..5da35c3fd3 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,11 +365,13 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +365,14 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMjAwOA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398302008", "body": "Is this variable used anymore then?", "bodyText": "Is this variable used anymore then?", "bodyHTML": "<p dir=\"auto\">Is this variable used anymore then?</p>", "author": "cpmeister", "createdAt": "2020-03-26T03:47:26Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -386,13 +386,13 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n             try {\n                 int button = this.getIntParameter(\"button\", -1);", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3NjMyMw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398576323", "bodyText": "No, this was leftover from previous usage and I've now removed it from new code", "author": "tommycw1", "createdAt": "2020-03-26T13:36:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMjAwOA=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..614da7fe1e 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +364,12 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 614da7fe1e..5da35c3fd3 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,11 +365,13 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +365,14 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDA5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398530090", "body": "Can we use something more generic than \"dawndusk\"? This assumes that the variable is associated with the sun rise/set.", "bodyText": "Can we use something more generic than \"dawndusk\"? This assumes that the variable is associated with the sun rise/set.", "bodyHTML": "<p dir=\"auto\">Can we use something more generic than \"dawndusk\"? This assumes that the variable is associated with the sun rise/set.</p>", "author": "robnielsen", "createdAt": "2020-03-26T12:23:53Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java", "diffHunk": "@@ -46,6 +47,7 @@\n     public static final String BROADCAST_ON_OFF = \"broadcastOnOff\";\n     public static final String CONTACT = \"contact\";\n     public static final String COOL_SET_POINT = \"coolSetPoint\";\n+    public static final String DAWNDUSK = \"dawndusk\";", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3OTQ1OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398579459", "bodyText": "I can make it whatever you'd like, but I think this is the traditional way to refer to this feature on motion sensors going back to old X10 stuff. How about lightdark?", "author": "tommycw1", "createdAt": "2020-03-26T13:40:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDA5MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4NTA1Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398585053", "bodyText": "change to:\npublic static final String LIGHTDARK = \"lightdark\";", "author": "tommycw1", "createdAt": "2020-03-26T13:48:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDA5MA=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ce8500fd8c..9c7f07b4e1 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -47,7 +47,6 @@ public class InsteonBindingConstants {\n     public static final String BROADCAST_ON_OFF = \"broadcastOnOff\";\n     public static final String CONTACT = \"contact\";\n     public static final String COOL_SET_POINT = \"coolSetPoint\";\n-    public static final String DAWNDUSK = \"dawndusk\";\n     public static final String DIMMER = \"dimmer\";\n     public static final String FAN = \"fan\";\n     public static final String FAN_MODE = \"fanMode\";\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ce8500fd8c..ed70322848 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -47,7 +47,6 @@ public class InsteonBindingConstants {\n     public static final String BROADCAST_ON_OFF = \"broadcastOnOff\";\n     public static final String CONTACT = \"contact\";\n     public static final String COOL_SET_POINT = \"coolSetPoint\";\n-    public static final String DAWNDUSK = \"dawndusk\";\n     public static final String DIMMER = \"dimmer\";\n     public static final String FAN = \"fan\";\n     public static final String FAN_MODE = \"fanMode\";\n", "next_change": {"commit": "6df6783b60e1651399585c575da7ed1a18783454", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ed70322848..20b9001699 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -55,6 +56,10 @@ public class InsteonBindingConstants {\n     public static final String FAST_ON_OFF_BUTTON_B = \"fastOnOffButtonB\";\n     public static final String FAST_ON_OFF_BUTTON_C = \"fastOnOffButtonC\";\n     public static final String FAST_ON_OFF_BUTTON_D = \"fastOnOffButtonD\";\n+    public static final String FAST_ON_OFF_BUTTON_E = \"fastOnOffButtonE\";\n+    public static final String FAST_ON_OFF_BUTTON_F = \"fastOnOffButtonF\";\n+    public static final String FAST_ON_OFF_BUTTON_G = \"fastOnOffButtonG\";\n+    public static final String FAST_ON_OFF_BUTTON_H = \"fastOnOffButtonH\";\n     public static final String HEAT_SET_POINT = \"heatSetPoint\";\n     public static final String HUMIDITY = \"humidity\";\n     public static final String HUMIDITY_HIGH = \"humidityHigh\";\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDM5MA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398530390", "body": "public static final String LOW_BATTERY= \"lowBattery\";", "bodyText": "public static final String LOW_BATTERY= \"lowBattery\";", "bodyHTML": "<p dir=\"auto\">public static final String LOW_BATTERY= \"lowBattery\";</p>", "author": "robnielsen", "createdAt": "2020-03-26T12:24:25Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java", "diffHunk": "@@ -71,12 +73,14 @@\n     public static final String KWH = \"kWh\";\n     public static final String LAST_HEARD_FROM = \"lastHeardFrom\";\n     public static final String LED_BRIGHTNESS = \"ledBrightness\";\n+    public static final String LED_ONOFF = \"ledOnOff\";\n     public static final String LIGHT_DIMMER = \"lightDimmer\";\n     public static final String LIGHT_LEVEL = \"lightLevel\";\n     public static final String LOAD_DIMMER = \"loadDimmer\";\n     public static final String LOAD_SWITCH = \"loadSwitch\";\n     public static final String LOAD_SWITCH_FAST_ON_OFF = \"loadSwitchFastOnOff\";\n     public static final String LOAD_SWITCH_MANUAL_CHANGE = \"loadSwitchManualChange\";\n+    public static final String LOWBAT = \"lowbat\";", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3OTc4Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398579783", "bodyText": "Done", "author": "tommycw1", "createdAt": "2020-03-26T13:41:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDM5MA=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ce8500fd8c..9c7f07b4e1 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -74,13 +73,14 @@ public class InsteonBindingConstants {\n     public static final String LAST_HEARD_FROM = \"lastHeardFrom\";\n     public static final String LED_BRIGHTNESS = \"ledBrightness\";\n     public static final String LED_ONOFF = \"ledOnOff\";\n+    public static final String LIGHTDARK = \"lightDark\";\n     public static final String LIGHT_DIMMER = \"lightDimmer\";\n     public static final String LIGHT_LEVEL = \"lightLevel\";\n     public static final String LOAD_DIMMER = \"loadDimmer\";\n     public static final String LOAD_SWITCH = \"loadSwitch\";\n     public static final String LOAD_SWITCH_FAST_ON_OFF = \"loadSwitchFastOnOff\";\n     public static final String LOAD_SWITCH_MANUAL_CHANGE = \"loadSwitchManualChange\";\n-    public static final String LOWBAT = \"lowbat\";\n+    public static final String LOWBATTERY = \"lowBattery\";\n     public static final String MANUAL_CHANGE = \"manualChange\";\n     public static final String MANUAL_CHANGE_BUTTON_A = \"manualChangeButtonA\";\n     public static final String MANUAL_CHANGE_BUTTON_B = \"manualChangeButtonB\";\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ce8500fd8c..ed70322848 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -76,11 +75,12 @@ public class InsteonBindingConstants {\n     public static final String LED_ONOFF = \"ledOnOff\";\n     public static final String LIGHT_DIMMER = \"lightDimmer\";\n     public static final String LIGHT_LEVEL = \"lightLevel\";\n+    public static final String LIGHT_LEVEL_ABOVE_THRESHOLD = \"lightLevelAboveThreshold\";\n     public static final String LOAD_DIMMER = \"loadDimmer\";\n     public static final String LOAD_SWITCH = \"loadSwitch\";\n     public static final String LOAD_SWITCH_FAST_ON_OFF = \"loadSwitchFastOnOff\";\n     public static final String LOAD_SWITCH_MANUAL_CHANGE = \"loadSwitchManualChange\";\n-    public static final String LOWBAT = \"lowbat\";\n+    public static final String LOWBATTERY = \"lowBattery\";\n     public static final String MANUAL_CHANGE = \"manualChange\";\n     public static final String MANUAL_CHANGE_BUTTON_A = \"manualChangeButtonA\";\n     public static final String MANUAL_CHANGE_BUTTON_B = \"manualChangeButtonB\";\n", "next_change": {"commit": "6df6783b60e1651399585c575da7ed1a18783454", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\nindex ed70322848..20b9001699 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBindingConstants.java\n", "chunk": "@@ -86,6 +91,10 @@ public class InsteonBindingConstants {\n     public static final String MANUAL_CHANGE_BUTTON_B = \"manualChangeButtonB\";\n     public static final String MANUAL_CHANGE_BUTTON_C = \"manualChangeButtonC\";\n     public static final String MANUAL_CHANGE_BUTTON_D = \"manualChangeButtonD\";\n+    public static final String MANUAL_CHANGE_BUTTON_E = \"manualChangeButtonE\";\n+    public static final String MANUAL_CHANGE_BUTTON_F = \"manualChangeButtonF\";\n+    public static final String MANUAL_CHANGE_BUTTON_G = \"manualChangeButtonG\";\n+    public static final String MANUAL_CHANGE_BUTTON_H = \"manualChangeButtonH\";\n     public static final String NOTIFICATION = \"notification\";\n     public static final String ON_LEVEL = \"onLevel\";\n     public static final String RAMP_DIMMER = \"rampDimmer\";\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDg5OA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398530898", "body": "I assume this was accidental? Eclipse formatting produces the original formatting.", "bodyText": "I assume this was accidental? Eclipse formatting produces the original formatting.", "bodyHTML": "<p dir=\"auto\">I assume this was accidental? Eclipse formatting produces the original formatting.</p>", "author": "robnielsen", "createdAt": "2020-03-26T12:25:15Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java", "diffHunk": "@@ -54,34 +54,74 @@\n public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private static final Set<String> ALL_CHANNEL_IDS = Collections.unmodifiableSet(Stream.of(\n-            InsteonBindingConstants.AC_DELAY, InsteonBindingConstants.BACKLIGHT_DURATION,\n-            InsteonBindingConstants.BATTERY_LEVEL, InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n-            InsteonBindingConstants.BOTTOM_OUTLET, InsteonBindingConstants.BUTTON_A, InsteonBindingConstants.BUTTON_B,\n-            InsteonBindingConstants.BUTTON_C, InsteonBindingConstants.BUTTON_D, InsteonBindingConstants.BUTTON_E,\n-            InsteonBindingConstants.BUTTON_F, InsteonBindingConstants.BUTTON_G, InsteonBindingConstants.BUTTON_H,\n-            InsteonBindingConstants.BROADCAST_ON_OFF, InsteonBindingConstants.CONTACT,\n-            InsteonBindingConstants.COOL_SET_POINT, InsteonBindingConstants.DIMMER, InsteonBindingConstants.FAN,\n-            InsteonBindingConstants.FAN_MODE, InsteonBindingConstants.FAST_ON_OFF,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A, InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C, InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n-            InsteonBindingConstants.HEAT_SET_POINT, InsteonBindingConstants.HUMIDITY,\n-            InsteonBindingConstants.HUMIDITY_HIGH, InsteonBindingConstants.HUMIDITY_LOW,\n-            InsteonBindingConstants.IS_COOLING, InsteonBindingConstants.IS_HEATING,\n-            InsteonBindingConstants.KEYPAD_BUTTON_A, InsteonBindingConstants.KEYPAD_BUTTON_B,\n-            InsteonBindingConstants.KEYPAD_BUTTON_C, InsteonBindingConstants.KEYPAD_BUTTON_D,\n-            InsteonBindingConstants.KEYPAD_BUTTON_E, InsteonBindingConstants.KEYPAD_BUTTON_F,\n-            InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n-            InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n-            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LIGHT_DIMMER,\n-            InsteonBindingConstants.LIGHT_LEVEL, InsteonBindingConstants.LOAD_DIMMER,\n-            InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n-            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D,\n-            InsteonBindingConstants.NOTIFICATION, InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER,\n-            InsteonBindingConstants.RAMP_RATE, InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION,\n-            InsteonBindingConstants.SWITCH, InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n-            InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n+            InsteonBindingConstants.AC_DELAY,\n+            InsteonBindingConstants.BACKLIGHT_DURATION,\n+            InsteonBindingConstants.BATTERY_LEVEL,\n+            InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n+            InsteonBindingConstants.BEEP,\n+            InsteonBindingConstants.BOTTOM_OUTLET,\n+            InsteonBindingConstants.BUTTON_A,\n+            InsteonBindingConstants.BUTTON_B,\n+            InsteonBindingConstants.BUTTON_C,\n+            InsteonBindingConstants.BUTTON_D,\n+            InsteonBindingConstants.BUTTON_E,\n+            InsteonBindingConstants.BUTTON_F,\n+            InsteonBindingConstants.BUTTON_G,\n+            InsteonBindingConstants.BUTTON_H,\n+            InsteonBindingConstants.BROADCAST_ON_OFF,\n+            InsteonBindingConstants.CONTACT,\n+            InsteonBindingConstants.COOL_SET_POINT,\n+            InsteonBindingConstants.DAWNDUSK,\n+            InsteonBindingConstants.DIMMER,\n+            InsteonBindingConstants.FAN,\n+            InsteonBindingConstants.FAN_MODE,\n+            InsteonBindingConstants.FAST_ON_OFF,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n+            InsteonBindingConstants.HEAT_SET_POINT,\n+            InsteonBindingConstants.HUMIDITY,\n+            InsteonBindingConstants.HUMIDITY_HIGH,\n+            InsteonBindingConstants.HUMIDITY_LOW,\n+            InsteonBindingConstants.IS_COOLING,\n+            InsteonBindingConstants.IS_HEATING,\n+            InsteonBindingConstants.KEYPAD_BUTTON_A,\n+            InsteonBindingConstants.KEYPAD_BUTTON_B,\n+            InsteonBindingConstants.KEYPAD_BUTTON_C,\n+            InsteonBindingConstants.KEYPAD_BUTTON_D,\n+            InsteonBindingConstants.KEYPAD_BUTTON_E,\n+            InsteonBindingConstants.KEYPAD_BUTTON_F,\n+            InsteonBindingConstants.KEYPAD_BUTTON_G,\n+            InsteonBindingConstants.KEYPAD_BUTTON_H,\n+            InsteonBindingConstants.KWH,\n+            InsteonBindingConstants.LAST_HEARD_FROM,\n+            InsteonBindingConstants.LED_BRIGHTNESS,\n+            InsteonBindingConstants.LED_ONOFF,\n+            InsteonBindingConstants.LIGHT_DIMMER,\n+            InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LOAD_SWITCH,\n+            InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n+            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE,\n+            InsteonBindingConstants.LOWBAT,\n+            InsteonBindingConstants.MANUAL_CHANGE,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D,\n+            InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.ON_LEVEL,\n+            InsteonBindingConstants.RAMP_DIMMER,\n+            InsteonBindingConstants.RAMP_RATE,\n+            InsteonBindingConstants.RESET,\n+            InsteonBindingConstants.STAGE1_DURATION,\n+            InsteonBindingConstants.SWITCH,\n+            InsteonBindingConstants.SYSTEM_MODE,\n+            InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.TOP_OUTLET,\n+            InsteonBindingConstants.UPDATE,\n+            InsteonBindingConstants.WATTS)", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4NjIxNg==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398586216", "bodyText": "do you mean with multiple on each line?  I had a really hard time reading this so I changed to one per line similar to formatting in InsteonDeviceHandler.java.  I can set to however you want.", "author": "tommycw1", "createdAt": "2020-03-26T13:49:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxMTcyMA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398611720", "bodyText": "This is not following how it is formatted when using the code formatters built into eclipse", "author": "robnielsen", "createdAt": "2020-03-26T14:22:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDg5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU0MTcyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399541725", "bodyText": "done", "author": "tommycw1", "createdAt": "2020-03-27T21:16:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzMDg5OA=="}], "type": "inlineReview", "revised_code": {"commit": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex 634c0c39de..a1137d197a 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -54,74 +54,36 @@ import org.slf4j.LoggerFactory;\n public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private static final Set<String> ALL_CHANNEL_IDS = Collections.unmodifiableSet(Stream.of(\n-            InsteonBindingConstants.AC_DELAY,\n-            InsteonBindingConstants.BACKLIGHT_DURATION,\n-            InsteonBindingConstants.BATTERY_LEVEL,\n-            InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n-            InsteonBindingConstants.BEEP,\n-            InsteonBindingConstants.BOTTOM_OUTLET,\n-            InsteonBindingConstants.BUTTON_A,\n-            InsteonBindingConstants.BUTTON_B,\n-            InsteonBindingConstants.BUTTON_C,\n-            InsteonBindingConstants.BUTTON_D,\n-            InsteonBindingConstants.BUTTON_E,\n-            InsteonBindingConstants.BUTTON_F,\n-            InsteonBindingConstants.BUTTON_G,\n-            InsteonBindingConstants.BUTTON_H,\n-            InsteonBindingConstants.BROADCAST_ON_OFF,\n-            InsteonBindingConstants.CONTACT,\n-            InsteonBindingConstants.COOL_SET_POINT,\n-            InsteonBindingConstants.DAWNDUSK,\n-            InsteonBindingConstants.DIMMER,\n-            InsteonBindingConstants.FAN,\n-            InsteonBindingConstants.FAN_MODE,\n-            InsteonBindingConstants.FAST_ON_OFF,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n-            InsteonBindingConstants.HEAT_SET_POINT,\n-            InsteonBindingConstants.HUMIDITY,\n-            InsteonBindingConstants.HUMIDITY_HIGH,\n-            InsteonBindingConstants.HUMIDITY_LOW,\n-            InsteonBindingConstants.IS_COOLING,\n-            InsteonBindingConstants.IS_HEATING,\n-            InsteonBindingConstants.KEYPAD_BUTTON_A,\n-            InsteonBindingConstants.KEYPAD_BUTTON_B,\n-            InsteonBindingConstants.KEYPAD_BUTTON_C,\n-            InsteonBindingConstants.KEYPAD_BUTTON_D,\n-            InsteonBindingConstants.KEYPAD_BUTTON_E,\n-            InsteonBindingConstants.KEYPAD_BUTTON_F,\n-            InsteonBindingConstants.KEYPAD_BUTTON_G,\n-            InsteonBindingConstants.KEYPAD_BUTTON_H,\n-            InsteonBindingConstants.KWH,\n-            InsteonBindingConstants.LAST_HEARD_FROM,\n-            InsteonBindingConstants.LED_BRIGHTNESS,\n-            InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,\n-            InsteonBindingConstants.LIGHT_LEVEL,\n-            InsteonBindingConstants.LOAD_DIMMER,\n-            InsteonBindingConstants.LOAD_SWITCH,\n-            InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n-            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE,\n-            InsteonBindingConstants.LOWBAT,\n-            InsteonBindingConstants.MANUAL_CHANGE,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D,\n-            InsteonBindingConstants.NOTIFICATION,\n-            InsteonBindingConstants.ON_LEVEL,\n-            InsteonBindingConstants.RAMP_DIMMER,\n-            InsteonBindingConstants.RAMP_RATE,\n-            InsteonBindingConstants.RESET,\n-            InsteonBindingConstants.STAGE1_DURATION,\n-            InsteonBindingConstants.SWITCH,\n-            InsteonBindingConstants.SYSTEM_MODE,\n-            InsteonBindingConstants.TEMPERATURE,\n-            InsteonBindingConstants.TOP_OUTLET,\n-            InsteonBindingConstants.UPDATE,\n-            InsteonBindingConstants.WATTS)\n+            InsteonBindingConstants.AC_DELAY, InsteonBindingConstants.BACKLIGHT_DURATION,\n+            InsteonBindingConstants.BATTERY_LEVEL, InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n+            InsteonBindingConstants.BEEP, InsteonBindingConstants.BOTTOM_OUTLET, InsteonBindingConstants.BUTTON_A,\n+            InsteonBindingConstants.BUTTON_B, InsteonBindingConstants.BUTTON_C, InsteonBindingConstants.BUTTON_D,\n+            InsteonBindingConstants.BUTTON_E, InsteonBindingConstants.BUTTON_F, InsteonBindingConstants.BUTTON_G,\n+            InsteonBindingConstants.BUTTON_H, InsteonBindingConstants.BROADCAST_ON_OFF, InsteonBindingConstants.CONTACT,\n+            InsteonBindingConstants.COOL_SET_POINT, InsteonBindingConstants.DIMMER, InsteonBindingConstants.FAN,\n+            InsteonBindingConstants.FAN_MODE, InsteonBindingConstants.FAST_ON_OFF,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A, InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C, InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n+            InsteonBindingConstants.HEAT_SET_POINT, InsteonBindingConstants.HUMIDITY,\n+            InsteonBindingConstants.HUMIDITY_HIGH, InsteonBindingConstants.HUMIDITY_LOW,\n+            InsteonBindingConstants.IS_COOLING, InsteonBindingConstants.IS_HEATING,\n+            InsteonBindingConstants.KEYPAD_BUTTON_A, InsteonBindingConstants.KEYPAD_BUTTON_B,\n+            InsteonBindingConstants.KEYPAD_BUTTON_C, InsteonBindingConstants.KEYPAD_BUTTON_D,\n+            InsteonBindingConstants.KEYPAD_BUTTON_E, InsteonBindingConstants.KEYPAD_BUTTON_F,\n+            InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n+            InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n+            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n+            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n+            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n+            InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER, InsteonBindingConstants.RAMP_RATE,\n+            InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION, InsteonBindingConstants.SWITCH,\n+            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n             .collect(Collectors.toSet()));\n \n     private static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex 634c0c39de..ec78a6f9f8 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -54,74 +54,36 @@ import org.slf4j.LoggerFactory;\n public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private static final Set<String> ALL_CHANNEL_IDS = Collections.unmodifiableSet(Stream.of(\n-            InsteonBindingConstants.AC_DELAY,\n-            InsteonBindingConstants.BACKLIGHT_DURATION,\n-            InsteonBindingConstants.BATTERY_LEVEL,\n-            InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n-            InsteonBindingConstants.BEEP,\n-            InsteonBindingConstants.BOTTOM_OUTLET,\n-            InsteonBindingConstants.BUTTON_A,\n-            InsteonBindingConstants.BUTTON_B,\n-            InsteonBindingConstants.BUTTON_C,\n-            InsteonBindingConstants.BUTTON_D,\n-            InsteonBindingConstants.BUTTON_E,\n-            InsteonBindingConstants.BUTTON_F,\n-            InsteonBindingConstants.BUTTON_G,\n-            InsteonBindingConstants.BUTTON_H,\n-            InsteonBindingConstants.BROADCAST_ON_OFF,\n-            InsteonBindingConstants.CONTACT,\n-            InsteonBindingConstants.COOL_SET_POINT,\n-            InsteonBindingConstants.DAWNDUSK,\n-            InsteonBindingConstants.DIMMER,\n-            InsteonBindingConstants.FAN,\n-            InsteonBindingConstants.FAN_MODE,\n-            InsteonBindingConstants.FAST_ON_OFF,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C,\n-            InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n-            InsteonBindingConstants.HEAT_SET_POINT,\n-            InsteonBindingConstants.HUMIDITY,\n-            InsteonBindingConstants.HUMIDITY_HIGH,\n-            InsteonBindingConstants.HUMIDITY_LOW,\n-            InsteonBindingConstants.IS_COOLING,\n-            InsteonBindingConstants.IS_HEATING,\n-            InsteonBindingConstants.KEYPAD_BUTTON_A,\n-            InsteonBindingConstants.KEYPAD_BUTTON_B,\n-            InsteonBindingConstants.KEYPAD_BUTTON_C,\n-            InsteonBindingConstants.KEYPAD_BUTTON_D,\n-            InsteonBindingConstants.KEYPAD_BUTTON_E,\n-            InsteonBindingConstants.KEYPAD_BUTTON_F,\n-            InsteonBindingConstants.KEYPAD_BUTTON_G,\n-            InsteonBindingConstants.KEYPAD_BUTTON_H,\n-            InsteonBindingConstants.KWH,\n-            InsteonBindingConstants.LAST_HEARD_FROM,\n-            InsteonBindingConstants.LED_BRIGHTNESS,\n-            InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,\n-            InsteonBindingConstants.LIGHT_LEVEL,\n-            InsteonBindingConstants.LOAD_DIMMER,\n-            InsteonBindingConstants.LOAD_SWITCH,\n-            InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n-            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE,\n-            InsteonBindingConstants.LOWBAT,\n-            InsteonBindingConstants.MANUAL_CHANGE,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D,\n-            InsteonBindingConstants.NOTIFICATION,\n-            InsteonBindingConstants.ON_LEVEL,\n-            InsteonBindingConstants.RAMP_DIMMER,\n-            InsteonBindingConstants.RAMP_RATE,\n-            InsteonBindingConstants.RESET,\n-            InsteonBindingConstants.STAGE1_DURATION,\n-            InsteonBindingConstants.SWITCH,\n-            InsteonBindingConstants.SYSTEM_MODE,\n-            InsteonBindingConstants.TEMPERATURE,\n-            InsteonBindingConstants.TOP_OUTLET,\n-            InsteonBindingConstants.UPDATE,\n-            InsteonBindingConstants.WATTS)\n+            InsteonBindingConstants.AC_DELAY, InsteonBindingConstants.BACKLIGHT_DURATION,\n+            InsteonBindingConstants.BATTERY_LEVEL, InsteonBindingConstants.BATTERY_WATERMARK_LEVEL,\n+            InsteonBindingConstants.BEEP, InsteonBindingConstants.BOTTOM_OUTLET, InsteonBindingConstants.BUTTON_A,\n+            InsteonBindingConstants.BUTTON_B, InsteonBindingConstants.BUTTON_C, InsteonBindingConstants.BUTTON_D,\n+            InsteonBindingConstants.BUTTON_E, InsteonBindingConstants.BUTTON_F, InsteonBindingConstants.BUTTON_G,\n+            InsteonBindingConstants.BUTTON_H, InsteonBindingConstants.BROADCAST_ON_OFF, InsteonBindingConstants.CONTACT,\n+            InsteonBindingConstants.COOL_SET_POINT, InsteonBindingConstants.DIMMER, InsteonBindingConstants.FAN,\n+            InsteonBindingConstants.FAN_MODE, InsteonBindingConstants.FAST_ON_OFF,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_A, InsteonBindingConstants.FAST_ON_OFF_BUTTON_B,\n+            InsteonBindingConstants.FAST_ON_OFF_BUTTON_C, InsteonBindingConstants.FAST_ON_OFF_BUTTON_D,\n+            InsteonBindingConstants.HEAT_SET_POINT, InsteonBindingConstants.HUMIDITY,\n+            InsteonBindingConstants.HUMIDITY_HIGH, InsteonBindingConstants.HUMIDITY_LOW,\n+            InsteonBindingConstants.IS_COOLING, InsteonBindingConstants.IS_HEATING,\n+            InsteonBindingConstants.KEYPAD_BUTTON_A, InsteonBindingConstants.KEYPAD_BUTTON_B,\n+            InsteonBindingConstants.KEYPAD_BUTTON_C, InsteonBindingConstants.KEYPAD_BUTTON_D,\n+            InsteonBindingConstants.KEYPAD_BUTTON_E, InsteonBindingConstants.KEYPAD_BUTTON_F,\n+            InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n+            InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n+            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n+            InsteonBindingConstants.LIGHT_DIMMER, InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD, InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n+            InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n+            InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER, InsteonBindingConstants.RAMP_RATE,\n+            InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION, InsteonBindingConstants.SWITCH,\n+            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n             .collect(Collectors.toSet()));\n \n     private static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n", "next_change": {"commit": "6df6783b60e1651399585c575da7ed1a18783454", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex ec78a6f9f8..6c483ed8d1 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -79,31 +88,38 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n             InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_E,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_F, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_G,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_H, InsteonBindingConstants.NOTIFICATION,\n             InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER, InsteonBindingConstants.RAMP_RATE,\n             InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION, InsteonBindingConstants.SWITCH,\n-            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TAMPER_SWITCH,\n+            InsteonBindingConstants.TEMPERATURE, InsteonBindingConstants.TEMPERATURE_LEVEL,\n             InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n             .collect(Collectors.toSet()));\n \n-    private static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n-    private static final String CMD = \"cmd\";\n-    private static final String CMD_RESET = \"reset\";\n-    private static final String CMD_UPDATE = \"update\";\n-    private static final String DATA = \"data\";\n-    private static final String FIELD = \"field\";\n-    private static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n-    private static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n-    private static final String FIELD_KWH = \"kwh\";\n-    private static final String FIELD_LIGHT_LEVEL = \"light_level\";\n-    private static final String FIELD_WATTS = \"watts\";\n-    private static final String GROUP = \"group\";\n-    private static final String METER = \"meter\";\n-\n-    private static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n-    private static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n-    private static final String PLM_PRODUCT_KEY = \"0x000045\";\n-    private static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n+    public static final String BROADCAST_GROUPS = \"broadcastGroups\";\n+    public static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n+    public static final String CMD = \"cmd\";\n+    public static final String CMD_RESET = \"reset\";\n+    public static final String CMD_UPDATE = \"update\";\n+    public static final String DATA = \"data\";\n+    public static final String FIELD = \"field\";\n+    public static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n+    public static final String FIELD_BATTERY_PERCENTAGE = \"battery_percentage\";\n+    public static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n+    public static final String FIELD_KWH = \"kwh\";\n+    public static final String FIELD_LIGHT_LEVEL = \"light_level\";\n+    public static final String FIELD_TEMPERATURE_LEVEL = \"temperature_level\";\n+    public static final String FIELD_WATTS = \"watts\";\n+    public static final String GROUP = \"group\";\n+    public static final String METER = \"meter\";\n+\n+    public static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n+    public static final String MOTION_SENSOR_II_PRODUCT_KEY = \"F00.00.24\";\n+    public static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n+    public static final String PLM_PRODUCT_KEY = \"0x000045\";\n+    public static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n", "next_change": {"commit": "3349cf4945302d0dd1301bc55e538ef5845612a9", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex 6c483ed8d1..4c2bf66e3b 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -123,7 +124,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n-    private @Nullable InsteonDeviceConfiguration config;\n+    private @NonNullByDefault({}) InsteonDeviceConfiguration config;\n+    private boolean deviceLinked = true;\n \n     public InsteonDeviceHandler(Thing thing) {\n         super(thing);\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "0f3112d3f827f950438139360c8b8a9bad7f44af", "committedDate": "2020-10-21 00:54:40 +0200", "message": "[insteon] handle cases when channelLinked is not called after initialization (#8803)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "3c3e9adbb1bad928d66932677189c5b9dd5aca62", "committedDate": "2020-11-11 11:29:55 -0800", "message": "[insteon] sort the channels by channel id so they show up sorted in the ui (#8966)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "0c36650179ac3ee0d6df3bb4a2f7dfacc23ca9ab", "committedDate": "2021-04-15 16:12:05 +0200", "message": "Avoid star imports and add missing braces (#10521)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "37c028ddc041471d3994066f4372327a95bdce56", "committedDate": "2022-01-30 18:50:47 +0100", "message": "[insteon] Ignore missing network handler when disposing a device (#12169)"}, {"oid": "5b79e182897e48b56236c09a2fd5f8e14df01e6a", "committedDate": "2022-05-23 21:56:35 +0200", "message": "[insteon] ignore commands if device is not online (#12787)"}, {"oid": "88e7ba3774045325c6e85c613eeefb468db2ecef", "committedDate": "2022-05-27 14:14:43 +0200", "message": "[insteon] set device to offline if network is not online after initialization (#12790)"}, {"oid": "53db5c48227753f5beadf0b2b51db6b76b5d4990", "committedDate": "2022-05-27 16:12:04 +0200", "message": "[insteon] change .equals() to == for ThingStatus equality check (#12826)"}, {"oid": "3349cf4945302d0dd1301bc55e538ef5845612a9", "committedDate": "2022-06-14 23:26:08 +0200", "message": "[insteon] set device offline if it doesn't exist in the plm/hub database (#12904)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODk3OA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398538978", "body": "Remove commented code.\r\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).", "bodyText": "Remove commented code.\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).", "bodyHTML": "<p dir=\"auto\">Remove commented code.<br>\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).</p>", "author": "robnielsen", "createdAt": "2020-03-26T12:39:07Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -386,13 +386,13 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n             try {\n                 int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTg5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398581897", "bodyText": "Done", "author": "tommycw1", "createdAt": "2020-03-26T13:44:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzODk3OA=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..614da7fe1e 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +364,12 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 614da7fe1e..5da35c3fd3 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,11 +365,13 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +365,14 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTExMQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398539111", "body": "Remove commented code.\r\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).", "bodyText": "Remove commented code.\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).", "bodyHTML": "<p dir=\"auto\">Remove commented code.<br>\nConvert to hexadecimal, and explicitly assign values to the 3 bytes (even if they are 0x00).</p>", "author": "robnielsen", "createdAt": "2020-03-26T12:39:18Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -386,13 +386,13 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n             try {\n                 int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n+                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);", "originalCommit": "d690e466b18693d564158ef9aee13a10a892ed7e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MjUyOQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r398582529", "bodyText": "Done", "author": "tommycw1", "createdAt": "2020-03-26T13:44:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUzOTExMQ=="}], "type": "inlineReview", "revised_code": {"commit": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..614da7fe1e 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +364,12 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 614da7fe1e..5da35c3fd3 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,11 +365,13 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 97090239a7..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -384,15 +365,14 @@ public abstract class CommandHandler {\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)9, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    //Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00, new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n-                    Msg m = dev.makeExtendedMessage((byte)31, (byte)32, (byte)8, new byte[3]);\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n                 }\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"oid": "7f4aaefcad7866c1ec1f05091031a00c8a498123", "url": "https://github.com/openhab/openhab-addons/commit/7f4aaefcad7866c1ec1f05091031a00c8a498123", "message": "Changed a few variable names to better match standard and removed commented out code.\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-27T01:39:24Z", "type": "commit"}, {"oid": "a73965d22178317dd3d5a7e768b0875342d8e4d5", "url": "https://github.com/openhab/openhab-addons/commit/a73965d22178317dd3d5a7e768b0875342d8e4d5", "message": "Chnged variable for light sensor above threshold to betther match standard and fixed formatting to better match standard\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-27T21:14:47Z", "type": "commit"}, {"oid": "d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "url": "https://github.com/openhab/openhab-addons/commit/d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "message": "Changed WirelessMotionSensorLightlevelabovethreshold to WirelessMotionSensorLightLevelAboveThreshold per request\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-27T23:18:39Z", "type": "commit"}, {"oid": "1a482f944c029e469b2480517daf2a1caf437ec3", "url": "https://github.com/openhab/openhab-addons/commit/1a482f944c029e469b2480517daf2a1caf437ec3", "message": "Changed WirelessMotionSensorLowbattery to WirelessMotionSensorLowBattery per request\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-27T23:53:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDI3NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399594275", "body": "Remove space at end of line, eclipse formatter removes it.", "bodyText": "Remove space at end of line, eclipse formatter removes it.", "bodyHTML": "<p dir=\"auto\">Remove space at end of line, eclipse formatter removes it.</p>", "author": "robnielsen", "createdAt": "2020-03-28T00:34:09Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -384,15 +364,14 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, ", "originalCommit": "d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MDU0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399670543", "bodyText": "Weird, not sure why me opening, saving in Eclipse didn't fix this. Anyway, Done", "author": "tommycw1", "createdAt": "2020-03-28T14:50:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +366,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDI5NA==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399594294", "body": "Remove space at end of line, eclipse formatter removes it.", "bodyText": "Remove space at end of line, eclipse formatter removes it.", "bodyHTML": "<p dir=\"auto\">Remove space at end of line, eclipse formatter removes it.</p>", "author": "robnielsen", "createdAt": "2020-03-28T00:34:21Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -384,15 +364,14 @@ public void handleCommand(InsteonChannelConfiguration conf, Command cmd, Insteon\n         @Override\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n-                int button = this.getIntParameter(\"button\", -1);\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x01 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                            new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x2e, (byte) 0x00,\n-                            new byte[] { (byte) button, (byte) 0x09, (byte) 0x00 });\n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, ", "originalCommit": "d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MDA0MQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399670041", "bodyText": "Weird, not sure why me opening, saving in Eclipse didn't fix this.  Anyway, Done", "author": "tommycw1", "createdAt": "2020-03-28T14:45:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDI5NA=="}], "type": "inlineReview", "revised_code": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..c3a91e364f 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +365,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\nindex 5da35c3fd3..a789aa30ee 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java\n", "chunk": "@@ -365,12 +366,12 @@ public abstract class CommandHandler {\n         public void handleCommand(InsteonChannelConfiguration conf, Command cmd, InsteonDevice dev) {\n             try {\n                 if (cmd == OnOffType.ON) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x09,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} on\", nm(), dev.getAddress());\n                 } else if (cmd == OnOffType.OFF) {\n-                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08, \n+                    Msg m = dev.makeExtendedMessage((byte) 0x1f, (byte) 0x20, (byte) 0x08,\n                             new byte[] { (byte) 0x00, (byte) 0x00, (byte) 0x00 });\n                     dev.enqueueMessage(m, feature);\n                     logger.debug(\"{}: sent msg to switch {} off\", nm(), dev.getAddress());\n", "next_change": null}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "bd664ff0c89631e23a9506e0fea9d78bf5f3f419", "committedDate": "2020-10-31 00:29:03 +0100", "message": "[infrastructure] add external null-annotations (#8848)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "589400e2231fb96a9a94e5ea4726b377ba6c7da5", "committedDate": "2021-11-02 10:43:53 +0100", "message": "Fix/suppress PMD CompareObjectsWithEquals findings (#11476)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "2a5d6beb6420934f5ba35b8735748ce5bbd2d012", "committedDate": "2022-12-05 18:47:43 +0100", "message": "Typos a/an (#13846)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDc5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399594793", "body": "Space after comma, and remove space at end of line.", "bodyText": "Space after comma, and remove space at end of line.", "bodyHTML": "<p dir=\"auto\">Space after comma, and remove space at end of line.</p>", "author": "robnielsen", "createdAt": "2020-03-28T00:37:43Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java", "diffHunk": "@@ -72,15 +72,17 @@\n             InsteonBindingConstants.KEYPAD_BUTTON_E, InsteonBindingConstants.KEYPAD_BUTTON_F,\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n-            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LIGHT_DIMMER,\n-            InsteonBindingConstants.LIGHT_LEVEL, InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n+            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, ", "originalCommit": "d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MDU3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399670573", "bodyText": "Weird, not sure why me opening, saving in Eclipse didn't fix this. Anyway, Done", "author": "tommycw1", "createdAt": "2020-03-28T14:50:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDc5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex a1137d197a..ec78a6f9f8 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -73,8 +73,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n             InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n-            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LIGHT_DIMMER, InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD, InsteonBindingConstants.LOAD_DIMMER,\n             InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex a1137d197a..ec78a6f9f8 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -73,8 +73,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n             InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n-            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LIGHT_DIMMER, InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD, InsteonBindingConstants.LOAD_DIMMER,\n             InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n", "next_change": {"commit": "6df6783b60e1651399585c575da7ed1a18783454", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex ec78a6f9f8..6c483ed8d1 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -79,31 +88,38 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n             InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_E,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_F, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_G,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_H, InsteonBindingConstants.NOTIFICATION,\n             InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER, InsteonBindingConstants.RAMP_RATE,\n             InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION, InsteonBindingConstants.SWITCH,\n-            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TAMPER_SWITCH,\n+            InsteonBindingConstants.TEMPERATURE, InsteonBindingConstants.TEMPERATURE_LEVEL,\n             InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n             .collect(Collectors.toSet()));\n \n-    private static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n-    private static final String CMD = \"cmd\";\n-    private static final String CMD_RESET = \"reset\";\n-    private static final String CMD_UPDATE = \"update\";\n-    private static final String DATA = \"data\";\n-    private static final String FIELD = \"field\";\n-    private static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n-    private static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n-    private static final String FIELD_KWH = \"kwh\";\n-    private static final String FIELD_LIGHT_LEVEL = \"light_level\";\n-    private static final String FIELD_WATTS = \"watts\";\n-    private static final String GROUP = \"group\";\n-    private static final String METER = \"meter\";\n-\n-    private static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n-    private static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n-    private static final String PLM_PRODUCT_KEY = \"0x000045\";\n-    private static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n+    public static final String BROADCAST_GROUPS = \"broadcastGroups\";\n+    public static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n+    public static final String CMD = \"cmd\";\n+    public static final String CMD_RESET = \"reset\";\n+    public static final String CMD_UPDATE = \"update\";\n+    public static final String DATA = \"data\";\n+    public static final String FIELD = \"field\";\n+    public static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n+    public static final String FIELD_BATTERY_PERCENTAGE = \"battery_percentage\";\n+    public static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n+    public static final String FIELD_KWH = \"kwh\";\n+    public static final String FIELD_LIGHT_LEVEL = \"light_level\";\n+    public static final String FIELD_TEMPERATURE_LEVEL = \"temperature_level\";\n+    public static final String FIELD_WATTS = \"watts\";\n+    public static final String GROUP = \"group\";\n+    public static final String METER = \"meter\";\n+\n+    public static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n+    public static final String MOTION_SENSOR_II_PRODUCT_KEY = \"F00.00.24\";\n+    public static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n+    public static final String PLM_PRODUCT_KEY = \"0x000045\";\n+    public static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n", "next_change": {"commit": "3349cf4945302d0dd1301bc55e538ef5845612a9", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex 6c483ed8d1..4c2bf66e3b 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -123,7 +124,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n-    private @Nullable InsteonDeviceConfiguration config;\n+    private @NonNullByDefault({}) InsteonDeviceConfiguration config;\n+    private boolean deviceLinked = true;\n \n     public InsteonDeviceHandler(Thing thing) {\n         super(thing);\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "0f3112d3f827f950438139360c8b8a9bad7f44af", "committedDate": "2020-10-21 00:54:40 +0200", "message": "[insteon] handle cases when channelLinked is not called after initialization (#8803)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "3c3e9adbb1bad928d66932677189c5b9dd5aca62", "committedDate": "2020-11-11 11:29:55 -0800", "message": "[insteon] sort the channels by channel id so they show up sorted in the ui (#8966)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "0c36650179ac3ee0d6df3bb4a2f7dfacc23ca9ab", "committedDate": "2021-04-15 16:12:05 +0200", "message": "Avoid star imports and add missing braces (#10521)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "37c028ddc041471d3994066f4372327a95bdce56", "committedDate": "2022-01-30 18:50:47 +0100", "message": "[insteon] Ignore missing network handler when disposing a device (#12169)"}, {"oid": "5b79e182897e48b56236c09a2fd5f8e14df01e6a", "committedDate": "2022-05-23 21:56:35 +0200", "message": "[insteon] ignore commands if device is not online (#12787)"}, {"oid": "88e7ba3774045325c6e85c613eeefb468db2ecef", "committedDate": "2022-05-27 14:14:43 +0200", "message": "[insteon] set device to offline if network is not online after initialization (#12790)"}, {"oid": "53db5c48227753f5beadf0b2b51db6b76b5d4990", "committedDate": "2022-05-27 16:12:04 +0200", "message": "[insteon] change .equals() to == for ThingStatus equality check (#12826)"}, {"oid": "3349cf4945302d0dd1301bc55e538ef5845612a9", "committedDate": "2022-06-14 23:26:08 +0200", "message": "[insteon] set device offline if it doesn't exist in the plm/hub database (#12904)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDg1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399594855", "body": "space after comma", "bodyText": "space after comma", "bodyHTML": "<p dir=\"auto\">space after comma</p>", "author": "robnielsen", "createdAt": "2020-03-28T00:38:05Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java", "diffHunk": "@@ -72,15 +72,17 @@\n             InsteonBindingConstants.KEYPAD_BUTTON_E, InsteonBindingConstants.KEYPAD_BUTTON_F,\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n-            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LIGHT_DIMMER,\n-            InsteonBindingConstants.LIGHT_LEVEL, InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n+            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,", "originalCommit": "d3db24e2e687536868bf2eb9f0aa2edfb2dec2f0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MDYzNg==", "url": "https://github.com/openhab/openhab-addons/pull/7224#discussion_r399670636", "bodyText": "Weird, not sure why me opening, saving in Eclipse didn't fix this. Anyway, Done", "author": "tommycw1", "createdAt": "2020-03-28T14:51:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NDg1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "315e8c38dbaa6750130526bc035f352b96e0449f", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex a1137d197a..ec78a6f9f8 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -73,8 +73,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n             InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n-            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LIGHT_DIMMER, InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD, InsteonBindingConstants.LOAD_DIMMER,\n             InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n", "next_change": null}]}, "revised_code_in_main": {"commit": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex a1137d197a..ec78a6f9f8 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -73,8 +73,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.KEYPAD_BUTTON_G, InsteonBindingConstants.KEYPAD_BUTTON_H,\n             InsteonBindingConstants.KWH, InsteonBindingConstants.LAST_HEARD_FROM,\n             InsteonBindingConstants.LED_BRIGHTNESS, InsteonBindingConstants.LED_ONOFF,\n-            InsteonBindingConstants.LIGHT_DIMMER,InsteonBindingConstants.LIGHT_LEVEL, \n-            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD,InsteonBindingConstants.LOAD_DIMMER,\n+            InsteonBindingConstants.LIGHT_DIMMER, InsteonBindingConstants.LIGHT_LEVEL,\n+            InsteonBindingConstants.LIGHT_LEVEL_ABOVE_THRESHOLD, InsteonBindingConstants.LOAD_DIMMER,\n             InsteonBindingConstants.LOAD_SWITCH, InsteonBindingConstants.LOAD_SWITCH_FAST_ON_OFF,\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n", "next_change": {"commit": "6df6783b60e1651399585c575da7ed1a18783454", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex ec78a6f9f8..6c483ed8d1 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -79,31 +88,38 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n             InsteonBindingConstants.LOAD_SWITCH_MANUAL_CHANGE, InsteonBindingConstants.LOWBATTERY,\n             InsteonBindingConstants.MANUAL_CHANGE, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_A,\n             InsteonBindingConstants.MANUAL_CHANGE_BUTTON_B, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_C,\n-            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.NOTIFICATION,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_D, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_E,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_F, InsteonBindingConstants.MANUAL_CHANGE_BUTTON_G,\n+            InsteonBindingConstants.MANUAL_CHANGE_BUTTON_H, InsteonBindingConstants.NOTIFICATION,\n             InsteonBindingConstants.ON_LEVEL, InsteonBindingConstants.RAMP_DIMMER, InsteonBindingConstants.RAMP_RATE,\n             InsteonBindingConstants.RESET, InsteonBindingConstants.STAGE1_DURATION, InsteonBindingConstants.SWITCH,\n-            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TEMPERATURE,\n+            InsteonBindingConstants.SYSTEM_MODE, InsteonBindingConstants.TAMPER_SWITCH,\n+            InsteonBindingConstants.TEMPERATURE, InsteonBindingConstants.TEMPERATURE_LEVEL,\n             InsteonBindingConstants.TOP_OUTLET, InsteonBindingConstants.UPDATE, InsteonBindingConstants.WATTS)\n             .collect(Collectors.toSet()));\n \n-    private static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n-    private static final String CMD = \"cmd\";\n-    private static final String CMD_RESET = \"reset\";\n-    private static final String CMD_UPDATE = \"update\";\n-    private static final String DATA = \"data\";\n-    private static final String FIELD = \"field\";\n-    private static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n-    private static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n-    private static final String FIELD_KWH = \"kwh\";\n-    private static final String FIELD_LIGHT_LEVEL = \"light_level\";\n-    private static final String FIELD_WATTS = \"watts\";\n-    private static final String GROUP = \"group\";\n-    private static final String METER = \"meter\";\n-\n-    private static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n-    private static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n-    private static final String PLM_PRODUCT_KEY = \"0x000045\";\n-    private static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n+    public static final String BROADCAST_GROUPS = \"broadcastGroups\";\n+    public static final String BROADCAST_ON_OFF = \"broadcastonoff\";\n+    public static final String CMD = \"cmd\";\n+    public static final String CMD_RESET = \"reset\";\n+    public static final String CMD_UPDATE = \"update\";\n+    public static final String DATA = \"data\";\n+    public static final String FIELD = \"field\";\n+    public static final String FIELD_BATTERY_LEVEL = \"battery_level\";\n+    public static final String FIELD_BATTERY_PERCENTAGE = \"battery_percentage\";\n+    public static final String FIELD_BATTERY_WATERMARK_LEVEL = \"battery_watermark_level\";\n+    public static final String FIELD_KWH = \"kwh\";\n+    public static final String FIELD_LIGHT_LEVEL = \"light_level\";\n+    public static final String FIELD_TEMPERATURE_LEVEL = \"temperature_level\";\n+    public static final String FIELD_WATTS = \"watts\";\n+    public static final String GROUP = \"group\";\n+    public static final String METER = \"meter\";\n+\n+    public static final String HIDDEN_DOOR_SENSOR_PRODUCT_KEY = \"F00.00.03\";\n+    public static final String MOTION_SENSOR_II_PRODUCT_KEY = \"F00.00.24\";\n+    public static final String MOTION_SENSOR_PRODUCT_KEY = \"0x00004A\";\n+    public static final String PLM_PRODUCT_KEY = \"0x000045\";\n+    public static final String POWER_METER_PRODUCT_KEY = \"F00.00.17\";\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n", "next_change": {"commit": "3349cf4945302d0dd1301bc55e538ef5845612a9", "changed_code": [{"header": "diff --git a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\nindex 6c483ed8d1..4c2bf66e3b 100644\n--- a/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n+++ b/bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/handler/InsteonDeviceHandler.java\n", "chunk": "@@ -123,7 +124,8 @@ public class InsteonDeviceHandler extends BaseThingHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonDeviceHandler.class);\n \n-    private @Nullable InsteonDeviceConfiguration config;\n+    private @NonNullByDefault({}) InsteonDeviceConfiguration config;\n+    private boolean deviceLinked = true;\n \n     public InsteonDeviceHandler(Thing thing) {\n         super(thing);\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "45d3ca9709309e4fbcd0f848bc5fb79b1bf4160e", "message": "Merge commit", "committedDate": null}, {"oid": "6df6783b60e1651399585c575da7ed1a18783454", "committedDate": "2020-09-21 03:37:19 +0200", "message": "added migrated 2.x add-ons"}, {"oid": "0f3112d3f827f950438139360c8b8a9bad7f44af", "committedDate": "2020-10-21 00:54:40 +0200", "message": "[insteon] handle cases when channelLinked is not called after initialization (#8803)"}, {"oid": "b423f93b1f74d0553de21a0f25a14655a6d01ddd", "committedDate": "2020-11-04 13:57:24 +0100", "message": "Remove Map null annotation workarounds (#8916)"}, {"oid": "0722bd71f5e2e7e6606653aede6bb53954947228", "committedDate": "2020-11-04 21:05:01 +0100", "message": "[insteon] remove all @SuppressWarnings(\"null\") (#8937)"}, {"oid": "3c3e9adbb1bad928d66932677189c5b9dd5aca62", "committedDate": "2020-11-11 11:29:55 -0800", "message": "[insteon] sort the channels by channel id so they show up sorted in the ui (#8966)"}, {"oid": "ba4c96d99dc4c801f0ec19023f242ccf6ab816d1", "committedDate": "2020-11-12 21:07:11 +0100", "message": "[infrastructure] move infered nullness warnings to error and update EEA (#8949)"}, {"oid": "d6364aceb1d952e80c0c8ed758af5d06d072ffa4", "committedDate": "2021-01-02 22:03:14 +0100", "message": "Update license headers to 2021 (#9620)"}, {"oid": "0c36650179ac3ee0d6df3bb4a2f7dfacc23ca9ab", "committedDate": "2021-04-15 16:12:05 +0200", "message": "Avoid star imports and add missing braces (#10521)"}, {"oid": "da59cdd255a66275dd7ae11dd294fedca4942d30", "committedDate": "2022-01-06 18:14:47 +0100", "message": "Update license headers to 2022 (#11973)"}, {"oid": "37c028ddc041471d3994066f4372327a95bdce56", "committedDate": "2022-01-30 18:50:47 +0100", "message": "[insteon] Ignore missing network handler when disposing a device (#12169)"}, {"oid": "5b79e182897e48b56236c09a2fd5f8e14df01e6a", "committedDate": "2022-05-23 21:56:35 +0200", "message": "[insteon] ignore commands if device is not online (#12787)"}, {"oid": "88e7ba3774045325c6e85c613eeefb468db2ecef", "committedDate": "2022-05-27 14:14:43 +0200", "message": "[insteon] set device to offline if network is not online after initialization (#12790)"}, {"oid": "53db5c48227753f5beadf0b2b51db6b76b5d4990", "committedDate": "2022-05-27 16:12:04 +0200", "message": "[insteon] change .equals() to == for ThingStatus equality check (#12826)"}, {"oid": "3349cf4945302d0dd1301bc55e538ef5845612a9", "committedDate": "2022-06-14 23:26:08 +0200", "message": "[insteon] set device offline if it doesn't exist in the plm/hub database (#12904)"}, {"oid": "4dd6d3a8a2134cec920f07cb0b73c5f224f8bc70", "committedDate": "2023-01-06 09:49:54 +0100", "message": "Update license headers to 2023 (#14154)"}]}, {"oid": "315e8c38dbaa6750130526bc035f352b96e0449f", "url": "https://github.com/openhab/openhab-addons/commit/315e8c38dbaa6750130526bc035f352b96e0449f", "message": "Added some formatting changes to ensure docs match code and to al code to match Eclipse formatting\n\nSigned-off-by: Tom Weichmann <tommycw10@gmail.com>", "committedDate": "2020-03-28T14:58:02Z", "type": "commit"}]}