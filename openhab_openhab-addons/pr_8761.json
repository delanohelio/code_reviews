{"pr_number": 8761, "pr_title": "[OpenUV] Correcting representation property", "pr_author": "clinique", "pr_createdAt": "2020-10-15T17:56:32Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8761", "timeline": [{"oid": "c3ffc8ae40e4f742ba381db4fb083f65d683dc6a", "url": "https://github.com/openhab/openhab-addons/commit/c3ffc8ae40e4f742ba381db4fb083f65d683dc6a", "message": "[OpenUV] Correcting representation property\nRemoving org.apache.commons.stringutils usage\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-15T17:47:10Z", "type": "commit"}, {"oid": "78063a83da004c4b00941ed6b74621e6b961c020", "url": "https://github.com/openhab/openhab-addons/commit/78063a83da004c4b00941ed6b74621e6b961c020", "message": "Corrected\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-15T17:52:06Z", "type": "commit"}, {"oid": "8733c27ca1eb3fc57a931a6c750b74cfc9b7f19d", "url": "https://github.com/openhab/openhab-addons/commit/8733c27ca1eb3fc57a931a6c750b74cfc9b7f19d", "message": "While on it, reviewed completely the binding.\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-15T22:08:32Z", "type": "commit"}, {"oid": "0e141cba6f498ce8447d6809ccbccaaece99e38a", "url": "https://github.com/openhab/openhab-addons/commit/0e141cba6f498ce8447d6809ccbccaaece99e38a", "message": "spotless applied\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-15T22:17:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwNzAzNw==", "url": "https://github.com/openhab/openhab-addons/pull/8761#discussion_r505907037", "body": "You should keep track of this scheduled future so that you can cancel it if the handler gets disposed.", "bodyText": "You should keep track of this scheduled future so that you can cancel it if the handler gets disposed.", "bodyHTML": "<p dir=\"auto\">You should keep track of this scheduled future so that you can cancel it if the handler gets disposed.</p>", "author": "cpmeister", "createdAt": "2020-10-15T22:48:59Z", "path": "bundles/org.openhab.binding.openuv/src/main/java/org/openhab/binding/openuv/internal/handler/OpenUVBridgeHandler.java", "diffHunk": "@@ -106,62 +94,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n \n     private void initiateConnexion() {\n         // Check if the provided api key is valid for use with the OpenUV service\n-        getUVData(\"0\", \"0\", null);\n-    }\n-\n-    public Map<ThingUID, @Nullable ServiceRegistration<?>> getDiscoveryServiceRegs() {\n-        return discoveryServiceRegs;\n-    }\n-\n-    public void setDiscoveryServiceRegs(Map<ThingUID, @Nullable ServiceRegistration<?>> discoveryServiceRegs) {\n-        this.discoveryServiceRegs = discoveryServiceRegs;\n+        getUVData(\"0\", \"0\", \"0\");\n     }\n \n-    @Override\n-    public void handleRemoval() {\n-        // removes the old registration service associated to the bridge, if existing\n-        ServiceRegistration<?> dis = getDiscoveryServiceRegs().get(getThing().getUID());\n-        if (dis != null) {\n-            dis.unregister();\n-        }\n-        super.handleRemoval();\n-    }\n-\n-    public @Nullable OpenUVResult getUVData(String latitude, String longitude, @Nullable String altitude) {\n-        StringBuilder urlBuilder = new StringBuilder(BASE_URL).append(\"?lat=\").append(latitude).append(\"&lng=\")\n-                .append(longitude);\n-\n-        if (altitude != null) {\n-            urlBuilder.append(\"&alt=\").append(altitude);\n-        }\n-        String errorMessage = null;\n+    public @Nullable OpenUVResult getUVData(String latitude, String longitude, String altitude) {\n         try {\n-            String jsonData = HttpUtil.executeUrl(\"GET\", urlBuilder.toString(), header, null, null, REQUEST_TIMEOUT);\n+            String jsonData = HttpUtil.executeUrl(\"GET\", String.format(QUERY_URL, latitude, longitude, altitude),\n+                    header, null, null, REQUEST_TIMEOUT_MS);\n             OpenUVResponse uvResponse = gson.fromJson(jsonData, OpenUVResponse.class);\n             if (uvResponse.getError() == null) {\n                 updateStatus(ThingStatus.ONLINE);\n                 return uvResponse.getResult();\n             } else {\n-                errorMessage = uvResponse.getError();\n+                throw new OpenUVException(uvResponse.getError());\n             }\n         } catch (IOException e) {\n-            errorMessage = e.getMessage();\n+            logger.error(\"Error occured during API query : {}\", e.getMessage());\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n+        } catch (OpenUVException e) {\n+            if (e.isQuotaError()) {\n+                LocalDate today = LocalDate.now();\n+                LocalDate tomorrow = today.plusDays(1);\n+                LocalDateTime tomorrowMidnight = tomorrow.atStartOfDay().plusMinutes(2);\n+\n+                String message = \"Quota Exceeded, going OFFLINE for today, will retry at : \"\n+                        + tomorrowMidnight.toString();\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, message);\n+\n+                scheduler.schedule(this::initiateConnexion,\n+                        Duration.between(LocalDateTime.now(), tomorrowMidnight).toMinutes(), TimeUnit.MINUTES);", "originalCommit": "0e141cba6f498ce8447d6809ccbccaaece99e38a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a7745ee576a92fd7c0043f7e5132b157a4ee9576", "url": "https://github.com/openhab/openhab-addons/commit/a7745ee576a92fd7c0043f7e5132b157a4ee9576", "message": "Code review\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-16T04:46:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwOTE2NA==", "url": "https://github.com/openhab/openhab-addons/pull/8761#discussion_r506609164", "body": "You are already setting the thing offline with the error message so you don't need to log it as well.\r\n```suggestion\r\n```\r\n", "bodyText": "You are already setting the thing offline with the error message so you don't need to log it as well.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.error(\"Error occured during API query : {}\", e.getMessage());", "bodyHTML": "<p dir=\"auto\">You are already setting the thing offline with the error message so you don't need to log it as well.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">            logger</span><span class=\"pl-k x\">.</span><span class=\"x\">error(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">Error occured during API query : {}</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-10-16T17:09:40Z", "path": "bundles/org.openhab.binding.openuv/src/main/java/org/openhab/binding/openuv/internal/handler/OpenUVBridgeHandler.java", "diffHunk": "@@ -106,62 +105,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n \n     private void initiateConnexion() {\n         // Check if the provided api key is valid for use with the OpenUV service\n-        getUVData(\"0\", \"0\", null);\n+        getUVData(\"0\", \"0\", \"0\");\n     }\n \n-    public Map<ThingUID, @Nullable ServiceRegistration<?>> getDiscoveryServiceRegs() {\n-        return discoveryServiceRegs;\n-    }\n-\n-    public void setDiscoveryServiceRegs(Map<ThingUID, @Nullable ServiceRegistration<?>> discoveryServiceRegs) {\n-        this.discoveryServiceRegs = discoveryServiceRegs;\n-    }\n-\n-    @Override\n-    public void handleRemoval() {\n-        // removes the old registration service associated to the bridge, if existing\n-        ServiceRegistration<?> dis = getDiscoveryServiceRegs().get(getThing().getUID());\n-        if (dis != null) {\n-            dis.unregister();\n-        }\n-        super.handleRemoval();\n-    }\n-\n-    public @Nullable OpenUVResult getUVData(String latitude, String longitude, @Nullable String altitude) {\n-        StringBuilder urlBuilder = new StringBuilder(BASE_URL).append(\"?lat=\").append(latitude).append(\"&lng=\")\n-                .append(longitude);\n-\n-        if (altitude != null) {\n-            urlBuilder.append(\"&alt=\").append(altitude);\n-        }\n-        String errorMessage = null;\n+    public @Nullable OpenUVResult getUVData(String latitude, String longitude, String altitude) {\n         try {\n-            String jsonData = HttpUtil.executeUrl(\"GET\", urlBuilder.toString(), header, null, null, REQUEST_TIMEOUT);\n+            String jsonData = HttpUtil.executeUrl(\"GET\", String.format(QUERY_URL, latitude, longitude, altitude),\n+                    header, null, null, REQUEST_TIMEOUT_MS);\n             OpenUVResponse uvResponse = gson.fromJson(jsonData, OpenUVResponse.class);\n             if (uvResponse.getError() == null) {\n                 updateStatus(ThingStatus.ONLINE);\n                 return uvResponse.getResult();\n             } else {\n-                errorMessage = uvResponse.getError();\n+                throw new OpenUVException(uvResponse.getError());\n             }\n         } catch (IOException e) {\n-            errorMessage = e.getMessage();\n+            logger.error(\"Error occured during API query : {}\", e.getMessage());", "originalCommit": "a7745ee576a92fd7c0043f7e5132b157a4ee9576", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "da5b3ff224d91fc6a9d128fc517aef5e947fe1d6", "url": "https://github.com/openhab/openhab-addons/commit/da5b3ff224d91fc6a9d128fc517aef5e947fe1d6", "message": "Code review enhancement\n\nSigned-off-by: clinique <gael@lhopital.org>", "committedDate": "2020-10-19T09:05:04Z", "type": "commit"}]}