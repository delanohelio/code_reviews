{"pr_number": 6909, "pr_title": "[hueemulation] Fixes to prevent Alexa errors when using voice commands and the app (#6690)", "pr_author": "MikeJMajor", "pr_createdAt": "2020-01-26T19:11:54Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/6909", "timeline": [{"oid": "90e5a89b8881f2f4ca53e0ea79991834696f19d1", "url": "https://github.com/openhab/openhab-addons/commit/90e5a89b8881f2f4ca53e0ea79991834696f19d1", "message": "Correct state to prevent Alexa reporting device errors.\n\nSigned-off-by: Mike Major <mike_j_major@hotmail.com>", "committedDate": "2020-01-26T17:53:51Z", "type": "commit"}, {"oid": "fdc567ad9e765cb7c65aa7adf2477ca4a70e58ed", "url": "https://github.com/openhab/openhab-addons/commit/fdc567ad9e765cb7c65aa7adf2477ca4a70e58ed", "message": "Minimum hue brightness should be 1 not 0.\n\nSigned-off-by: Mike Major <mike_j_major@hotmail.com>", "committedDate": "2020-01-27T22:13:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxNTgzNw==", "url": "https://github.com/openhab/openhab-addons/pull/6909#discussion_r373415837", "body": "Usage of `as` is tricky here. Because the `as` as used with the openHAB `State` class returns a new instance. So the contract to be assumed should be the method returns a new instance. Here it's assumed it returns the same object. But if that would change this code will break here. Because the code below will than make changes on the local variable only and not on the object returned. It would be better to do an `instanceof` check and a cast :\r\n```suggestion\r\n                    HueStateColorBulb c = (HueStateColorBulb) hueState;\r\n```\r\nSame below with `HueStateBulb`", "bodyText": "Usage of as is tricky here. Because the as as used with the openHAB State class returns a new instance. So the contract to be assumed should be the method returns a new instance. Here it's assumed it returns the same object. But if that would change this code will break here. Because the code below will than make changes on the local variable only and not on the object returned. It would be better to do an instanceof check and a cast :\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                HueStateColorBulb c = hueState.as(HueStateColorBulb.class);\n          \n          \n            \n                                HueStateColorBulb c = (HueStateColorBulb) hueState;\n          \n      \n    \n    \n  \n\nSame below with HueStateBulb", "bodyHTML": "<p dir=\"auto\">Usage of <code>as</code> is tricky here. Because the <code>as</code> as used with the openHAB <code>State</code> class returns a new instance. So the contract to be assumed should be the method returns a new instance. Here it's assumed it returns the same object. But if that would change this code will break here. Because the code below will than make changes on the local variable only and not on the object returned. It would be better to do an <code>instanceof</code> check and a cast :</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-smi\">HueStateColorBulb</span> c <span class=\"pl-k\">=</span> <span class=\"x x-first\">hueState</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">as</span>(<span class=\"pl-smi\">HueStateColorBulb</span><span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">class)</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-smi\">HueStateColorBulb</span> c <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">HueStateColorBulb</span><span class=\"x x-first x-last\">) hueState</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Same below with <code>HueStateBulb</code></p>", "author": "Hilbrand", "createdAt": "2020-01-31T10:38:49Z", "path": "bundles/org.openhab.io.hueemulation/src/main/java/org/openhab/io/hueemulation/internal/StateUtils.java", "diffHunk": "@@ -413,4 +413,48 @@ public static Command commandByItemState(State state) throws IllegalStateExcepti\n         }\n         return t;\n     }\n+\n+    /**\n+     * Compute the hue state from a given item state and a device type.\n+     * If the item state matches the last command. the hue state is adjusted\n+     * to use the values from the last hue state change. This is done to prevent\n+     * Alexa reporting device errors.\n+     * \n+     * @param itemState The item state\n+     * @param deviceType The device type\n+     * @param lastCommand The last command\n+     * @param lastHueChange The last hue state change\n+     * @return A hue light state\n+     */\n+    public static AbstractHueState adjustedColorStateFromItemState(State itemState, @Nullable DeviceType deviceType,\n+            @Nullable Command lastCommand, @Nullable HueStateChange lastHueChange) {\n+\n+        AbstractHueState hueState = colorStateFromItemState(itemState, deviceType);\n+\n+        if (lastCommand != null && lastHueChange != null) {\n+            if (lastCommand instanceof HSBType) {\n+                if (itemState.as(HSBType.class).equals(lastCommand)) {\n+                    HueStateColorBulb c = hueState.as(HueStateColorBulb.class);", "originalCommit": "fdc567ad9e765cb7c65aa7adf2477ca4a70e58ed", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e2a8aa93d28b1f8d185043f69b9d93ac07013abf", "url": "https://github.com/openhab/openhab-addons/commit/e2a8aa93d28b1f8d185043f69b9d93ac07013abf", "message": "Updated with review comments and return CT value in status\n\nSigned-off-by: Mike Major <mike_j_major@hotmail.com>", "committedDate": "2020-01-31T15:49:45Z", "type": "commit"}]}