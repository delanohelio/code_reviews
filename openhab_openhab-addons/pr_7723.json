{"pr_number": 7723, "pr_title": "[mqtt] Correctly unsubscribe after message is received", "pr_author": "bodiroga", "pr_createdAt": "2020-05-21T19:54:59Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/7723", "timeline": [{"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6", "url": "https://github.com/openhab/openhab-addons/commit/4e4975407b45e69f87e6e5b91058b9a5d07609b6", "message": "Correctly unsubscribe after message is received\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-05-21T19:43:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwNTQ0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428905443", "body": "The default charset varies from system to system so it is better to specify it yourself instead of using the default.", "bodyText": "The default charset varies from system to system so it is better to specify it yourself instead of using the default.", "bodyHTML": "<p dir=\"auto\">The default charset varies from system to system so it is better to specify it yourself instead of using the default.</p>", "author": "cpmeister", "createdAt": "2020-05-21T20:47:35Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -46,11 +46,11 @@ public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n             future.complete(new String(payload));", "originalCommit": "4e4975407b45e69f87e6e5b91058b9a5d07609b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwODY5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428908699", "body": "```suggestion\r\n    private final CompletableFuture<String> future = new CompletableFuture<>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private CompletableFuture<String> future = new CompletableFuture<>();\n          \n          \n            \n                private final CompletableFuture<String> future = new CompletableFuture<>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">String</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">CompletableFuture&lt;<span class=\"pl-smi\">String</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">CompletableFuture&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-21T20:54:01Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +24,14 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n     private CompletableFuture<String> future = new CompletableFuture<>();", "originalCommit": "4e4975407b45e69f87e6e5b91058b9a5d07609b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwOTE4Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428909187", "body": "seems a bit wasteful to create a new compose future every time. Could you cache `subscribeFuture.thenCompose(b -> future)` in a field?", "bodyText": "seems a bit wasteful to create a new compose future every time. Could you cache subscribeFuture.thenCompose(b -> future) in a field?", "bodyHTML": "<p dir=\"auto\">seems a bit wasteful to create a new compose future every time. Could you cache <code>subscribeFuture.thenCompose(b -&gt; future)</code> in a field?</p>", "author": "cpmeister", "createdAt": "2020-05-21T20:55:03Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -68,7 +68,7 @@ public void stop() {\n      */\n     public @Nullable String waitForTopicValue(int timeoutInMS) {\n         try {\n-            return subscripeFuture.thenCompose(b -> future).get(timeoutInMS, TimeUnit.MILLISECONDS);\n+            return subscribeFuture.thenCompose(b -> future).get(timeoutInMS, TimeUnit.MILLISECONDS);", "originalCommit": "4e4975407b45e69f87e6e5b91058b9a5d07609b6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzNzA5OQ==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428937099", "bodyText": "Ok, I will modify it, but keep in mind that the WaitForTopicValue is a one-time use class and a new object should be created in each use. What would be the benefit?", "author": "bodiroga", "createdAt": "2020-05-21T21:54:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwOTE4Nw=="}], "type": "inlineReview"}, {"oid": "bd89d052d2db876073f7dae4b766b7209ec45d6f", "url": "https://github.com/openhab/openhab-addons/commit/bd89d052d2db876073f7dae4b766b7209ec45d6f", "message": "Address review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-05-21T21:59:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMjEzNw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429022137", "body": "You probably don't need the `subscribeFuture` field anymore.\r\n```suggestion\r\n        composeFuture = connection.subscribe(topic, mqttMessageSubscriber).thenCompose(b -> future);\r\n```", "bodyText": "You probably don't need the subscribeFuture field anymore.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    subscribeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n          \n          \n            \n            \n          \n          \n            \n                    composeFuture = subscribeFuture.thenCompose(b -> future);\n          \n          \n            \n                    composeFuture = connection.subscribe(topic, mqttMessageSubscriber).thenCompose(b -> future);", "bodyHTML": "<p dir=\"auto\">You probably don't need the <code>subscribeFuture</code> field anymore.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        subscribeFuture <span class=\"pl-k\">=</span> connection<span class=\"pl-k\">.</span>subscribe(topic, mqttMessageSubscriber);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        composeFuture <span class=\"pl-k\">=</span> subscribeFuture<span class=\"pl-k\">.</span>thenCompose(b <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> future);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        composeFuture <span class=\"pl-k\">=</span> connection<span class=\"pl-k\">.</span>subscribe(topic, mqttMessageSubscriber)<span class=\"pl-k\">.</span>thenCompose(b <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> future);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-05-22T03:18:07Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,13 +46,19 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n-            future.complete(new String(payload));\n+            try {\n+                future.complete(new String(payload, \"UTF-8\"));\n+            } catch (UnsupportedEncodingException e1) {\n+                future.complete(new String(payload));\n+            }\n         };\n-        future = future.whenComplete((r, e) -> {\n+        future.whenComplete((r, e) -> {\n             connection.unsubscribe(topic, mqttMessageSubscriber);\n         });\n \n-        subscripeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n+        subscribeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n+\n+        composeFuture = subscribeFuture.thenCompose(b -> future);", "originalCommit": "bd89d052d2db876073f7dae4b766b7209ec45d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2OTc0Nw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429369747", "bodyText": "\ud83d\udc4d", "author": "bodiroga", "createdAt": "2020-05-22T17:28:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMjEzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyMw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429024823", "body": "I suspect that you should replace usages of `future` in this class with `composeFuture`. \r\nYour `timeout ` method completes the `future` but the result of that future isn't available until the `subscribeFuture` completes first so your timeout wouldn't actually cause the timeout as you would expect.\r\n\r\nHowever if you caused the timeout on the `composeFuture` everything would operate as you would expect.\r\n", "bodyText": "I suspect that you should replace usages of future in this class with composeFuture.\nYour timeout  method completes the future but the result of that future isn't available until the subscribeFuture completes first so your timeout wouldn't actually cause the timeout as you would expect.\nHowever if you caused the timeout on the composeFuture everything would operate as you would expect.", "bodyHTML": "<p dir=\"auto\">I suspect that you should replace usages of <code>future</code> in this class with <code>composeFuture</code>.<br>\nYour <code>timeout </code> method completes the <code>future</code> but the result of that future isn't available until the <code>subscribeFuture</code> completes first so your timeout wouldn't actually cause the timeout as you would expect.</p>\n<p dir=\"auto\">However if you caused the timeout on the <code>composeFuture</code> everything would operate as you would expect.</p>", "author": "cpmeister", "createdAt": "2020-05-22T03:30:49Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +25,15 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n-    private CompletableFuture<String> future = new CompletableFuture<>();\n-    private final CompletableFuture<Boolean> subscripeFuture;\n+    private final CompletableFuture<String> future = new CompletableFuture<>();", "originalCommit": "bd89d052d2db876073f7dae4b766b7209ec45d6f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3NDQ3Mw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429374473", "bodyText": "Thanks @cpmeister, although we're going to change more lines than the class itself has \ud83d\ude04  Anyway, it seems that the Homie discovery process has another unnoticed error. The Homie300Discovery class does the following:\ntry {\n            WaitForTopicValue w = new WaitForTopicValue(connection, topic.replace(\"$homie\", \"$name\"));\n            w.waitForTopicValueAsync(scheduler, 700).thenAccept(name -> {\n                publishDevice(connectionBridge, connection, deviceID, topic, name);\n            });\n        } catch (InterruptedException | ExecutionException ignored) {\n            // The name is nice to have, but not required, use deviceId as fallback\n            publishDevice(connectionBridge, connection, deviceID, topic, deviceID);\n        }\nBut, if I intentionally remove the $name message and thus, trigger the timeout, the composeFuture.completeExceptionally function doesn't throw any error, so no discoveryResult is published. I'm sorry, but do you know how can I receive the completeExceptionally message in the w.waitForTopicValueAsync() sequence?\nThis CompleteFuture topic is driving me crazy, I'm more used to synchronous programming \ud83d\ude1e", "author": "bodiroga", "createdAt": "2020-05-22T17:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyNjc3Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429426776", "bodyText": "Would this work?\n            WaitForTopicValue w = new WaitForTopicValue(connection, topic.replace(\"$homie\", \"$name\"));\n            w.waitForTopicValueAsync(scheduler, 700).whenComplete((name, ex) -> {\n                String deviceName = ex == null ? deviceID : name;\n                publishDevice(connectionBridge, connection, deviceID, topic, deviceName);\n            });", "author": "cpmeister", "createdAt": "2020-05-22T19:45:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ5NTExNw==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429495117", "bodyText": "Awesome, it works! It seems that I need to read more about whenComplete, exceptionally, thenApply... \ud83d\ude09", "author": "bodiroga", "createdAt": "2020-05-23T00:16:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyMw=="}], "type": "inlineReview"}, {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "url": "https://github.com/openhab/openhab-addons/commit/4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "message": "Address more review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-05-23T00:13:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMzEyNg==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429503126", "body": "I don't see anywhere this would be thrown. It should be safe to remove these exceptions.", "bodyText": "I don't see anywhere this would be thrown. It should be safe to remove these exceptions.", "bodyHTML": "<p dir=\"auto\">I don't see anywhere this would be thrown. It should be safe to remove these exceptions.</p>", "author": "cpmeister", "createdAt": "2020-05-23T01:42:48Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,20 +45,24 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {", "originalCommit": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMzI1Ng==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429503256", "body": "I don't think this needs to be a field anymore since it isn't used outside of the constructor.", "bodyText": "I don't think this needs to be a field anymore since it isn't used outside of the constructor.", "bodyHTML": "<p dir=\"auto\">I don't think this needs to be a field anymore since it isn't used outside of the constructor.</p>", "author": "cpmeister", "createdAt": "2020-05-23T01:44:35Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +25,14 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n-    private CompletableFuture<String> future = new CompletableFuture<>();\n-    private final CompletableFuture<Boolean> subscripeFuture;\n+    private final CompletableFuture<String> future = new CompletableFuture<>();", "originalCommit": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0MDQ2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429540465", "body": "Is it possible to use the `String(byte[] bytes, Charset charset)` method with const `StandardCharsets.UTF_8` to omit the `UnsupportedEncodingException`?", "bodyText": "Is it possible to use the String(byte[] bytes, Charset charset) method with const StandardCharsets.UTF_8 to omit the UnsupportedEncodingException?", "bodyHTML": "<p dir=\"auto\">Is it possible to use the <code>String(byte[] bytes, Charset charset)</code> method with const <code>StandardCharsets.UTF_8</code> to omit the <code>UnsupportedEncodingException</code>?</p>", "author": "cweitkamp", "createdAt": "2020-05-23T12:10:24Z", "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,20 +45,24 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n-            future.complete(new String(payload));\n+            try {\n+                future.complete(new String(payload, \"UTF-8\"));", "originalCommit": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ebcd85bb2f1cf3d7c6f9737caa8e76119255ccff", "url": "https://github.com/openhab/openhab-addons/commit/ebcd85bb2f1cf3d7c6f9737caa8e76119255ccff", "message": "Address even more review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-05-23T12:25:31Z", "type": "commit"}, {"oid": "d284edd07aa2c2e33089c5527acf29fab0c198c8", "url": "https://github.com/openhab/openhab-addons/commit/d284edd07aa2c2e33089c5527acf29fab0c198c8", "message": "Use StandardCharset for UTF-8\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>", "committedDate": "2020-05-23T12:39:59Z", "type": "commit"}]}