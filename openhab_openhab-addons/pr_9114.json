{"pr_number": 9114, "pr_title": "[nikobus] fixed refresh handling", "pr_author": "crnjan", "pr_createdAt": "2020-11-23T19:29:53Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9114", "timeline": [{"oid": "afc4f8ebbfc1f56ea41143f6a7ad1a8a214a1e97", "url": "https://github.com/openhab/openhab-addons/commit/afc4f8ebbfc1f56ea41143f6a7ad1a8a214a1e97", "message": "* fixed refresh handing due `channelLinked` not called anymore on startup for example (similar to https://github.com/openhab/openhab-core/issues/1707),\n* \"Impacted Modules\" can be empty if button is configured as \"standalone\" and does not impact modules,\n* minor doc fix\n\nSigned-off-by: Boris Krivonog <boris.krivonog@inova.si>", "committedDate": "2020-11-23T19:30:35Z", "type": "commit"}, {"oid": "afc4f8ebbfc1f56ea41143f6a7ad1a8a214a1e97", "url": "https://github.com/openhab/openhab-addons/commit/afc4f8ebbfc1f56ea41143f6a7ad1a8a214a1e97", "message": "* fixed refresh handing due `channelLinked` not called anymore on startup for example (similar to https://github.com/openhab/openhab-core/issues/1707),\n* \"Impacted Modules\" can be empty if button is configured as \"standalone\" and does not impact modules,\n* minor doc fix\n\nSigned-off-by: Boris Krivonog <boris.krivonog@inova.si>", "committedDate": "2020-11-23T19:30:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2OTY0Mw==", "url": "https://github.com/openhab/openhab-addons/pull/9114#discussion_r529169643", "body": "Is it expected for the impactedModules to contain ThingUIDs for things that might not actually exist?\r\nWhat is the expected behavior if the config contains a thing that doesn't exist?\r\nYou can check the validity of a thingUID by iterating through all of the things under a bridge using `getBridge().getThings()`.\r\n\r\nThat said I don't know what your requirements are here.", "bodyText": "Is it expected for the impactedModules to contain ThingUIDs for things that might not actually exist?\nWhat is the expected behavior if the config contains a thing that doesn't exist?\nYou can check the validity of a thingUID by iterating through all of the things under a bridge using getBridge().getThings().\nThat said I don't know what your requirements are here.", "bodyHTML": "<p dir=\"auto\">Is it expected for the impactedModules to contain ThingUIDs for things that might not actually exist?<br>\nWhat is the expected behavior if the config contains a thing that doesn't exist?<br>\nYou can check the validity of a thingUID by iterating through all of the things under a bridge using <code>getBridge().getThings()</code>.</p>\n<p dir=\"auto\">That said I don't know what your requirements are here.</p>", "author": "cpmeister", "createdAt": "2020-11-24T03:00:03Z", "path": "bundles/org.openhab.binding.nikobus/src/main/java/org/openhab/binding/nikobus/internal/handler/NikobusPushButtonHandler.java", "diffHunk": "@@ -118,27 +118,30 @@ public void initialize() {\n \n         impactedModules.clear();\n \n-        try {\n-            ThingUID bridgeUID = thing.getBridgeUID();\n-            if (bridgeUID == null) {\n-                throw new IllegalArgumentException(\"Bridge does not exist!\");\n+        Object impactedModulesObject = getConfig().get(CONFIG_IMPACTED_MODULES);\n+        if (impactedModulesObject != null) {\n+            try {\n+                ThingUID bridgeUID = thing.getBridgeUID();\n+                if (bridgeUID == null) {\n+                    throw new IllegalArgumentException(\"Bridge does not exist!\");\n+                }\n+\n+                String[] impactedModulesString = impactedModulesObject.toString().split(\",\");\n+                for (String impactedModuleString : impactedModulesString) {\n+                    ImpactedModuleUID impactedModuleUID = new ImpactedModuleUID(impactedModuleString.trim());\n+                    ThingTypeUID thingTypeUID = new ThingTypeUID(bridgeUID.getBindingId(),\n+                            impactedModuleUID.getThingTypeId());\n+                    ThingUID thingUID = new ThingUID(thingTypeUID, bridgeUID, impactedModuleUID.getThingId());\n+                    impactedModules.add(new ImpactedModule(thingUID, impactedModuleUID.getGroup()));\n+                }", "originalCommit": "afc4f8ebbfc1f56ea41143f6a7ad1a8a214a1e97", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTMxNDczOQ==", "url": "https://github.com/openhab/openhab-addons/pull/9114#discussion_r529314739", "bodyText": "Great suggestion, fixed!", "author": "crnjan", "createdAt": "2020-11-24T09:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE2OTY0Mw=="}], "type": "inlineReview"}, {"oid": "5ebab8b111e09cd9c1483a03f35d4b4c1a6518c3", "url": "https://github.com/openhab/openhab-addons/commit/5ebab8b111e09cd9c1483a03f35d4b4c1a6518c3", "message": "* check if configured impacted module for `impactedModules` is referencing an existing thing,\n* fixed warnings\n\nSigned-off-by: Boris Krivonog <boris.krivonog@inova.si>", "committedDate": "2020-11-24T09:06:39Z", "type": "commit"}, {"oid": "5ebab8b111e09cd9c1483a03f35d4b4c1a6518c3", "url": "https://github.com/openhab/openhab-addons/commit/5ebab8b111e09cd9c1483a03f35d4b4c1a6518c3", "message": "* check if configured impacted module for `impactedModules` is referencing an existing thing,\n* fixed warnings\n\nSigned-off-by: Boris Krivonog <boris.krivonog@inova.si>", "committedDate": "2020-11-24T09:06:39Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYyNzUzMg==", "url": "https://github.com/openhab/openhab-addons/pull/9114#discussion_r530627532", "body": "```suggestion\r\n    public static @Nullable String appendCRC(@Nullable String input) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Nullable\n          \n          \n            \n                public static String appendCRC(@Nullable String input) {\n          \n          \n            \n                public static @Nullable String appendCRC(@Nullable String input) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Nullable</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> appendCRC(<span class=\"pl-k\">@Nullable</span> <span class=\"pl-smi\">String</span> input) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">@Nullable</span> <span class=\"pl-smi\">String</span> appendCRC(<span class=\"pl-k\">@Nullable</span> <span class=\"pl-smi\">String</span> input) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-11-25T20:29:08Z", "path": "bundles/org.openhab.binding.nikobus/src/main/java/org/openhab/binding/nikobus/internal/utils/CRCUtil.java", "diffHunk": "@@ -35,7 +37,8 @@\n      *            String representing hex numbers.\n      * @return input string + CRC.\n      */\n-    public static String appendCRC(String input) {\n+    @Nullable\n+    public static String appendCRC(@Nullable String input) {", "originalCommit": "5ebab8b111e09cd9c1483a03f35d4b4c1a6518c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7f41dd940e88055d267e7c98aa16787e31aa407a", "url": "https://github.com/openhab/openhab-addons/commit/7f41dd940e88055d267e7c98aa16787e31aa407a", "message": "Fixed review comment.\n\nSigned-off-by: Boris Krivonog <boris.krivonog@inova.si>", "committedDate": "2020-11-25T20:47:29Z", "type": "commit"}]}