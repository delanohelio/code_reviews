{"pr_number": 9320, "pr_title": "[remoteopenhab] Asynchronous reading of big API response", "pr_author": "lolodomo", "pr_createdAt": "2020-12-10T19:36:24Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9320", "timeline": [{"oid": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e", "url": "https://github.com/openhab/openhab-addons/commit/d64b4de48c9b0a9dc645a40d815ad77a611dbc0e", "message": "[remoteopenhab] Asynchronous reading of big API response\n\nFix #9281\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-12-10T19:32:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDQyMA==", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540664420", "body": "```suggestion\r\n                    input.transferTo(responseContent);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                while (true) {\n          \n          \n            \n                                    int read = input.read(buffer);\n          \n          \n            \n                                    if (read < 0) {\n          \n          \n            \n                                        break;\n          \n          \n            \n                                    }\n          \n          \n            \n                                    responseContent.write(buffer, 0, read);\n          \n          \n            \n                                }\n          \n          \n            \n                                input.transferTo(responseContent);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">while</span> (<span class=\"pl-c1\">true</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">int</span> read <span class=\"pl-k\">=</span> input<span class=\"pl-k\">.</span>read(buffer);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">if</span> (read <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-k\">break</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        responseContent<span class=\"pl-k\">.</span>write(buffer, <span class=\"pl-c1\">0</span>, read);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    input<span class=\"pl-k\">.</span>transferTo(responseContent);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-12-11T03:30:14Z", "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "diffHunk": "@@ -481,15 +489,39 @@ public String executeUrl(HttpMethod httpMethod, String url, String acceptHeader,\n         }\n \n         try {\n-            ContentResponse response = request.send();\n-            int statusCode = response.getStatus();\n-            if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n-                String statusLine = statusCode + \" \" + response.getReason();\n-                throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+            if (asyncReading) {\n+                InputStreamResponseListener listener = new InputStreamResponseListener();\n+                request.send(listener);\n+                Response response = listener.get(5, TimeUnit.SECONDS);\n+                int statusCode = response.getStatus();\n+                if (statusCode != HttpStatus.OK_200) {\n+                    response.abort(new Exception(response.getReason()));\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                ByteArrayOutputStream responseContent = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[256];\n+                try (InputStream input = listener.getInputStream()) {\n+                    while (true) {\n+                        int read = input.read(buffer);\n+                        if (read < 0) {\n+                            break;\n+                        }\n+                        responseContent.write(buffer, 0, read);\n+                    }", "originalCommit": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc1NTUzNA==", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540755534", "bodyText": "Cool, we have a method to do that.", "author": "lolodomo", "createdAt": "2020-12-11T07:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDg0NA==", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540664844", "body": "You are wrapping RemoteopenhabException in another RemoteopenhabException?", "bodyText": "You are wrapping RemoteopenhabException in another RemoteopenhabException?", "bodyHTML": "<p dir=\"auto\">You are wrapping RemoteopenhabException in another RemoteopenhabException?</p>", "author": "cpmeister", "createdAt": "2020-12-11T03:31:35Z", "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "diffHunk": "@@ -481,15 +489,39 @@ public String executeUrl(HttpMethod httpMethod, String url, String acceptHeader,\n         }\n \n         try {\n-            ContentResponse response = request.send();\n-            int statusCode = response.getStatus();\n-            if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n-                String statusLine = statusCode + \" \" + response.getReason();\n-                throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+            if (asyncReading) {\n+                InputStreamResponseListener listener = new InputStreamResponseListener();\n+                request.send(listener);\n+                Response response = listener.get(5, TimeUnit.SECONDS);\n+                int statusCode = response.getStatus();\n+                if (statusCode != HttpStatus.OK_200) {\n+                    response.abort(new Exception(response.getReason()));\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                ByteArrayOutputStream responseContent = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[256];\n+                try (InputStream input = listener.getInputStream()) {\n+                    while (true) {\n+                        int read = input.read(buffer);\n+                        if (read < 0) {\n+                            break;\n+                        }\n+                        responseContent.write(buffer, 0, read);\n+                    }\n+                }\n+                return new String(responseContent.toByteArray(), StandardCharsets.UTF_8.name());\n+            } else {\n+                ContentResponse response = request.send();\n+                int statusCode = response.getStatus();\n+                if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                String encoding = response.getEncoding() != null ? response.getEncoding().replaceAll(\"\\\"\", \"\").trim()\n+                        : StandardCharsets.UTF_8.name();\n+                return new String(response.getContent(), encoding);\n             }\n-            String encoding = response.getEncoding() != null ? response.getEncoding().replaceAll(\"\\\"\", \"\").trim()\n-                    : StandardCharsets.UTF_8.name();\n-            return new String(response.getContent(), encoding);\n         } catch (Exception e) {\n             throw new RemoteopenhabException(e);", "originalCommit": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f61e5f24e7c5fa69fa9b52a7f8daa66c2c23f677", "url": "https://github.com/openhab/openhab-addons/commit/f61e5f24e7c5fa69fa9b52a7f8daa66c2c23f677", "message": "Consider review comments\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>", "committedDate": "2020-12-11T08:04:44Z", "type": "commit"}]}