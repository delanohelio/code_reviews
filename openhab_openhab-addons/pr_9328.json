{"pr_number": 9328, "pr_title": "[amazonechocontrol] fix unnecessary refresh and add text commands", "pr_author": "J-N-K", "pr_createdAt": "2020-12-11T17:04:00Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/9328", "timeline": [{"oid": "ba8a8cf706191a89b68796e61c759992270c3569", "url": "https://github.com/openhab/openhab-addons/commit/ba8a8cf706191a89b68796e61c759992270c3569", "message": "fixed: removed unnecessary refresh on push activity\n\nSigned-off-by: Tom Blum trinitus01@googlemail.com", "committedDate": "2020-12-11T16:12:13Z", "type": "commit"}, {"oid": "2d04cb8a418f4466aa849c5d06b4407c42ce86ad", "url": "https://github.com/openhab/openhab-addons/commit/2d04cb8a418f4466aa849c5d06b4407c42ce86ad", "message": "add text commands\n\nAlso-By: Tom Blum <trinitus01@googlemail.com>\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T17:01:07Z", "type": "commit"}, {"oid": "b0b4f5c315d5daf7f389e495724377c85c22a904", "url": "https://github.com/openhab/openhab-addons/commit/b0b4f5c315d5daf7f389e495724377c85c22a904", "message": "address review comment\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T18:06:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0MzE5Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541243192", "body": "You are only removing the last command?", "bodyText": "You are only removing the last command?", "bodyHTML": "<p dir=\"auto\">You are only removing the last command?</p>", "author": "cpmeister", "createdAt": "2020-12-11T20:18:05Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1441,6 +1446,58 @@ private void sendTextToSpeech() {\n         }\n     }\n \n+    public void textCommand(Device device, String text, @Nullable Integer ttsVolume, @Nullable Integer standardVolume) {\n+        if (text.replaceAll(\"<.+?>\", \"\").replaceAll(\"\\\\s+\", \" \").trim().isEmpty()) {\n+            return;\n+        }\n+\n+        // we lock TextCommands until we have finished adding this one\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+        try {\n+            TextCommand textCommand = Objects\n+                    .requireNonNull(textCommands.computeIfAbsent(Objects.hash(text), k -> new TextCommand(text)));\n+            textCommand.devices.add(device);\n+            textCommand.ttsVolumes.add(ttsVolume);\n+            textCommand.standardVolumes.add(standardVolume);\n+            // schedule a TextCommand only if it has not been scheduled before\n+            timers.computeIfAbsent(TimerType.TEXT_COMMAND,\n+                    k -> scheduler.schedule(this::sendTextCommand, 500, TimeUnit.MILLISECONDS));\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    private synchronized void sendTextCommand() {\n+        // we lock new TTS until we have dispatched everything\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+\n+        try {\n+            Iterator<TextCommand> iterator = textCommands.values().iterator();\n+            while (iterator.hasNext()) {\n+                TextCommand textCommand = iterator.next();\n+                try {\n+                    List<Device> devices = textCommand.devices;\n+                    if (!devices.isEmpty()) {\n+                        String text = textCommand.text;\n+                        Map<String, Object> parameters = new HashMap<>();\n+                        parameters.put(\"text\", text);\n+                        executeSequenceCommandWithVolume(devices, \"Alexa.TextCommand\", parameters,\n+                                textCommand.ttsVolumes, textCommand.standardVolumes);\n+                    }\n+                } catch (Exception e) {\n+                    logger.warn(\"send textCommand fails with unexpected error\", e);\n+                }\n+            }\n+            iterator.remove();", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4NTg1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541285852", "bodyText": "Oops. Remove wrong }...", "author": "J-N-K", "createdAt": "2020-12-11T21:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0MzE5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0NDA2Ng==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541244066", "body": "Would this be a good place to use `Map.of`? Or do you need the map to be a HashMap instance?", "bodyText": "Would this be a good place to use Map.of? Or do you need the map to be a HashMap instance?", "bodyHTML": "<p dir=\"auto\">Would this be a good place to use <code>Map.of</code>? Or do you need the map to be a HashMap instance?</p>", "author": "cpmeister", "createdAt": "2020-12-11T20:18:58Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/Connection.java", "diffHunk": "@@ -1441,6 +1446,58 @@ private void sendTextToSpeech() {\n         }\n     }\n \n+    public void textCommand(Device device, String text, @Nullable Integer ttsVolume, @Nullable Integer standardVolume) {\n+        if (text.replaceAll(\"<.+?>\", \"\").replaceAll(\"\\\\s+\", \" \").trim().isEmpty()) {\n+            return;\n+        }\n+\n+        // we lock TextCommands until we have finished adding this one\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+        try {\n+            TextCommand textCommand = Objects\n+                    .requireNonNull(textCommands.computeIfAbsent(Objects.hash(text), k -> new TextCommand(text)));\n+            textCommand.devices.add(device);\n+            textCommand.ttsVolumes.add(ttsVolume);\n+            textCommand.standardVolumes.add(standardVolume);\n+            // schedule a TextCommand only if it has not been scheduled before\n+            timers.computeIfAbsent(TimerType.TEXT_COMMAND,\n+                    k -> scheduler.schedule(this::sendTextCommand, 500, TimeUnit.MILLISECONDS));\n+        } finally {\n+            lock.unlock();\n+        }\n+    }\n+\n+    private synchronized void sendTextCommand() {\n+        // we lock new TTS until we have dispatched everything\n+        Lock lock = locks.computeIfAbsent(TimerType.TEXT_COMMAND, k -> new ReentrantLock());\n+        lock.lock();\n+\n+        try {\n+            Iterator<TextCommand> iterator = textCommands.values().iterator();\n+            while (iterator.hasNext()) {\n+                TextCommand textCommand = iterator.next();\n+                try {\n+                    List<Device> devices = textCommand.devices;\n+                    if (!devices.isEmpty()) {\n+                        String text = textCommand.text;\n+                        Map<String, Object> parameters = new HashMap<>();\n+                        parameters.put(\"text\", text);\n+                        executeSequenceCommandWithVolume(devices, \"Alexa.TextCommand\", parameters,", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI0NzE3NA==", "url": "https://github.com/openhab/openhab-addons/pull/9328#discussion_r541247174", "body": "Probably should make the same changes elsewhere as well.\r\n```suggestion\r\n                updateState(CHANNEL_TEXT_COMMAND, StringType.EMPTY);\r\n```", "bodyText": "Probably should make the same changes elsewhere as well.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            updateState(CHANNEL_TEXT_COMMAND, new StringType(\"\"));\n          \n          \n            \n                            updateState(CHANNEL_TEXT_COMMAND, StringType.EMPTY);", "bodyHTML": "<p dir=\"auto\">Probably should make the same changes elsewhere as well.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                updateState(<span class=\"pl-c1\">CHANNEL_TEXT_COMMAND</span>, <span class=\"pl-k x x-first\">new</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">StringType</span><span class=\"x x-first\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                updateState(<span class=\"pl-c1\">CHANNEL_TEXT_COMMAND</span>, <span class=\"pl-smi\">StringType</span><span class=\"pl-c1\"><span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">EMPTY</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-12-11T20:21:47Z", "path": "bundles/org.openhab.binding.amazonechocontrol/src/main/java/org/openhab/binding/amazonechocontrol/internal/handler/EchoHandler.java", "diffHunk": "@@ -1083,6 +1103,10 @@ public void updateState(AccountHandler accountHandler, @Nullable Device device,\n                 updateTextToSpeech = false;\n                 updateState(CHANNEL_TEXT_TO_SPEECH, new StringType(\"\"));\n             }\n+            if (updateTextCommand) {\n+                updateTextCommand = false;\n+                updateState(CHANNEL_TEXT_COMMAND, new StringType(\"\"));", "originalCommit": "b0b4f5c315d5daf7f389e495724377c85c22a904", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "605eca6cf4a6670ce68b1217a60267ae242c05dc", "url": "https://github.com/openhab/openhab-addons/commit/605eca6cf4a6670ce68b1217a60267ae242c05dc", "message": "address review comments and fix warnings\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-12-11T21:10:39Z", "type": "commit"}]}