{"pr_number": 8213, "pr_title": "[solaredge] simplified internal channel modelling", "pr_author": "alexf2015", "pr_createdAt": "2020-07-27T13:34:29Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8213", "timeline": [{"oid": "bba735da7a624ce65a54bb455b46c9fd7c0fb093", "url": "https://github.com/openhab/openhab-addons/commit/bba735da7a624ce65a54bb455b46c9fd7c0fb093", "message": "refactoring: remove JAVA modelling of channels\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>", "committedDate": "2020-07-27T13:30:11Z", "type": "commit"}, {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43", "url": "https://github.com/openhab/openhab-addons/commit/dce281b713e14070668f5c98bd1f2a84df943e43", "message": "improved code quality: fixes due to compiler warnings\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>", "committedDate": "2020-07-27T13:30:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NDU2OQ==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460954569", "body": "Is the cast to `Type` necessary?", "bodyText": "Is the cast to Type necessary?", "bodyHTML": "<p dir=\"auto\">Is the cast to <code>Type</code> necessary?</p>", "author": "fwolter", "createdAt": "2020-07-27T14:59:01Z", "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/callback/AbstractCommandCallback.java", "diffHunk": "@@ -172,13 +190,22 @@ public CommunicationStatus getCommunicationStatus() {\n      */\n     protected abstract String getURL();\n \n-    @Override\n-    public final StatusUpdateListener getListener() {\n-        return listener;\n-    }\n-\n     @Override\n     public final void setListener(StatusUpdateListener listener) {\n         this.listener = listener;\n     }\n+\n+    /**\n+     * just a wrapper as fromJson could return null. This will avoid warnings as eclipse otherwise assumes unnecessary\n+     * null checks which are not unnecessary\n+     *\n+     * @param <T>\n+     * @param json\n+     * @param classOfT\n+     * @return\n+     * @throws JsonSyntaxException\n+     */\n+    protected <T> @Nullable T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException {\n+        return gson.fromJson(json, (Type) classOfT);", "originalCommit": "dce281b713e14070668f5c98bd1f2a84df943e43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MDkzMA==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r461060930", "bodyText": "you are right, this does not make any sense. It is a c&p mistake.", "author": "alexf2015", "createdAt": "2020-07-27T17:43:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NDU2OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MDQ1Mg==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460970452", "body": "Null annotations on inner classes are not necessary. There is a bug in checkstyle, generating a false positive warning, which can safely be ignored. Same for the others.", "bodyText": "Null annotations on inner classes are not necessary. There is a bug in checkstyle, generating a false positive warning, which can safely be ignored. Same for the others.", "bodyHTML": "<p dir=\"auto\">Null annotations on inner classes are not necessary. There is a bug in checkstyle, generating a false positive warning, which can safely be ignored. Same for the others.</p>", "author": "fwolter", "createdAt": "2020-07-27T15:21:11Z", "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/model/AggregateDataResponsePublicApi.java", "diffHunk": "@@ -12,346 +12,45 @@\n  */\n package org.openhab.binding.solaredge.internal.model;\n \n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n \n-import javax.measure.Unit;\n-import javax.measure.quantity.Energy;\n-\n-import org.eclipse.smarthome.core.library.types.DecimalType;\n-import org.eclipse.smarthome.core.library.types.QuantityType;\n-import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n-import org.eclipse.smarthome.core.types.State;\n-import org.eclipse.smarthome.core.types.UnDefType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * this class is used to map the aggregate data response of the public API\n  *\n  * @author Alexander Friese - initial contribution\n  */\n-public class AggregateDataResponsePublicApi implements DataResponse {\n-\n-    private final Logger logger = LoggerFactory.getLogger(AggregateDataResponsePublicApi.class);\n-\n-    private static final String METER_TYPE_PRODUCTION = \"Production\";\n-    private static final String METER_TYPE_CONSUMPTION = \"Consumption\";\n-    private static final String METER_TYPE_SELFCONSUMPTION = \"SelfConsumption\";\n-    private static final String METER_TYPE_IMPORT = \"Purchased\";\n-    private static final String METER_TYPE_EXPORT = \"FeedIn\";\n+@NonNullByDefault\n+public class AggregateDataResponsePublicApi {\n \n+    @NonNullByDefault", "originalCommit": "dce281b713e14070668f5c98bd1f2a84df943e43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MTg2NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r461061865", "bodyText": "I recognized that there are some differences between warnings shown by Eclipse and those shown by the mvn build process.\nBut I thought that Eclipse was wrong. I will remove these.", "author": "alexf2015", "createdAt": "2020-07-27T17:45:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MDQ1Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3NjMyMQ==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460976321", "body": "These massive compiler warnings are not nice. You could store it to a local variable, which would be one extra line each.\r\n```suggestion\r\n            Power localCurrentPower = overview.currentPower;\r\n            if (localCurrentPower != null) {\r\n                putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\r\n                        localCurrentPower.power, UNIT_W);\r\n```", "bodyText": "These massive compiler warnings are not nice. You could store it to a local variable, which would be one extra line each.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (overview.currentPower != null) {\n          \n          \n            \n                            putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n          \n          \n            \n                                    overview.currentPower.power, UNIT_W);\n          \n          \n            \n                        Power localCurrentPower = overview.currentPower;\n          \n          \n            \n                        if (localCurrentPower != null) {\n          \n          \n            \n                            putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n          \n          \n            \n                                    localCurrentPower.power, UNIT_W);", "bodyHTML": "<p dir=\"auto\">These massive compiler warnings are not nice. You could store it to a local variable, which would be one extra line each.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (overview<span class=\"pl-k\">.</span>currentPower <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                putPowerType(result, channelProvider<span class=\"pl-k\">.</span>getChannel(<span class=\"pl-c1\">CHANNEL_GROUP_LIVE</span>, <span class=\"pl-c1\">CHANNEL_ID_PRODUCTION</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        overview<span class=\"pl-k\">.</span>currentPower<span class=\"pl-k\">.</span>power, <span class=\"pl-c1\">UNIT_W</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Power</span> localCurrentPower <span class=\"pl-k\">=</span> overview<span class=\"pl-k\">.</span>currentPower;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (localCurrentPower <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                putPowerType(result, channelProvider<span class=\"pl-k\">.</span>getChannel(<span class=\"pl-c1\">CHANNEL_GROUP_LIVE</span>, <span class=\"pl-c1\">CHANNEL_ID_PRODUCTION</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        localCurrentPower<span class=\"pl-k\">.</span>power, <span class=\"pl-c1\">UNIT_W</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "fwolter", "createdAt": "2020-07-27T15:29:14Z", "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/model/LiveDataResponseTransformer.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solaredge.internal.model;\n+\n+import static org.openhab.binding.solaredge.internal.SolarEdgeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.Channel;\n+import org.eclipse.smarthome.core.types.State;\n+import org.openhab.binding.solaredge.internal.handler.ChannelProvider;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponse.Connection;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponse.SiteCurrentPowerFlow;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponseMeterless.Overview;\n+\n+/**\n+ * transforms the http response into the openhab datamodel (instances of State)\n+ *\n+ * @author Alexander Friese - initial contribution\n+ */\n+@NonNullByDefault\n+public class LiveDataResponseTransformer extends AbstractDataResponseTransformer {\n+    private static final Double ZERO_POWER = 0.0;\n+\n+    private final ChannelProvider channelProvider;\n+\n+    public LiveDataResponseTransformer(ChannelProvider channelProvider) {\n+        this.channelProvider = channelProvider;\n+    }\n+\n+    public Map<Channel, State> transform(LiveDataResponseMeterless response) {\n+        Map<Channel, State> result = new HashMap<>(20);\n+        Overview overview = response.getOverview();\n+\n+        if (overview != null) {\n+            if (overview.currentPower != null) {\n+                putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n+                        overview.currentPower.power, UNIT_W);", "originalCommit": "dce281b713e14070668f5c98bd1f2a84df943e43", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2MzM3OA==", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r461063378", "bodyText": "Hmm it seems that I have overlooked this. In the other transformer class I solved it exactly like you suggested.", "author": "alexf2015", "createdAt": "2020-07-27T17:48:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3NjMyMQ=="}], "type": "inlineReview"}, {"oid": "d7b36416ca2f29c1bbf3f561b0bded5fffe33de1", "url": "https://github.com/openhab/openhab-addons/commit/d7b36416ca2f29c1bbf3f561b0bded5fffe33de1", "message": "fixes due to code review\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>", "committedDate": "2020-07-27T18:17:39Z", "type": "commit"}, {"oid": "79e4181d6c853747b6fecce72d02072101f47825", "url": "https://github.com/openhab/openhab-addons/commit/79e4181d6c853747b6fecce72d02072101f47825", "message": "adopted README\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>", "committedDate": "2020-07-27T18:34:31Z", "type": "commit"}]}