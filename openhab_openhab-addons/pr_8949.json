{"pr_number": 8949, "pr_title": "[infrastructure] move infered nullness warnings to error and update EEA", "pr_author": "J-N-K", "pr_createdAt": "2020-11-03T08:56:34Z", "pr_url": "https://github.com/openhab/openhab-addons/pull/8949", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxMjkzOQ==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517612939", "body": "What was wrong with this code that required this change?", "bodyText": "What was wrong with this code that required this change?", "bodyHTML": "<p dir=\"auto\">What was wrong with this code that required this change?</p>", "author": "cpmeister", "createdAt": "2020-11-04T20:29:42Z", "path": "bundles/org.openhab.binding.dsmr/src/main/java/org/openhab/binding/dsmr/internal/discovery/DSMRMeterDiscoveryService.java", "diffHunk": "@@ -148,8 +144,9 @@ private void validateConfiguredMeters(List<Thing> things, Set<DSMRMeterType> con\n                 .filter(DSMRMeterHandler.class::isInstance)\n                 .map(DSMRMeterHandler.class::cast)\n                 .map(h -> h == null ? null : h.getMeterDescriptor())\n-                .map(d -> d == null ? null : d.getMeterType())\n-                .filter(Objects::nonNull)\n+                .map(d -> Optional.ofNullable(d == null ? null : d.getMeterType()))\n+                .filter(Optional::isPresent)\n+                .map(Optional::get)", "originalCommit": "a02fe901828e0deb824feca2b1cb12490ee26d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyMzk5MQ==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517623991", "bodyText": "The null-checker is not able to detect that a Stream<@Nullable T> is converted to a Stream<@NonNull T> if .filter(Objects::nonNull) is applied.", "author": "J-N-K", "createdAt": "2020-11-04T20:51:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxMjkzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517615097", "body": "I'd prefer to have the null checker disabled on testing classes than be required to add unnecessary checks like this in the test code.\r\n\r\n@wborn Can we just disable the null checker for test classes?", "bodyText": "I'd prefer to have the null checker disabled on testing classes than be required to add unnecessary checks like this in the test code.\n@wborn Can we just disable the null checker for test classes?", "bodyHTML": "<p dir=\"auto\">I'd prefer to have the null checker disabled on testing classes than be required to add unnecessary checks like this in the test code.</p>\n<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wborn/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wborn\">@wborn</a> Can we just disable the null checker for test classes?</p>", "author": "cpmeister", "createdAt": "2020-11-04T20:33:46Z", "path": "bundles/org.openhab.binding.foobot/src/test/java/org/openhab/binding/foobot/internal/handler/FoobotDeviceHandlerTest.java", "diffHunk": "@@ -53,6 +54,7 @@ public void testSensorDataToState() throws IOException, FoobotApiException {\n         final FoobotJsonData sensorData = connector.getSensorData(\"1234\");\n \n         assertNotNull(sensorData, \"No sensor data read\");\n+        Objects.requireNonNull(sensorData);", "originalCommit": "a02fe901828e0deb824feca2b1cb12490ee26d46", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYyNjM1NQ==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517626355", "bodyText": "For me test code is not any different as any other code. It should be clean, spotless and NPE free.", "author": "wborn", "createdAt": "2020-11-04T20:56:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYzMDU2MA==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517630560", "bodyText": "I wonder if we annotate Mockito.assertNonNull the same as Objects.requireNonNull if that would work as well", "author": "J-N-K", "createdAt": "2020-11-04T21:04:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY2MDg0MA==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517660840", "bodyText": "I'd prefer to make the barriers to entry for testing as low as possible. The more requirements you add to test code the less test code people will write. Test code should not be held to the same standard as the regular code base other than readability and maintainability. I could care less about how robust testing code is.\nAlso the point of using a null checker is to prevent untested runtime errors. Any test code that runs successfully can be assumed to be NPE free (unless it is really poorly written).\nJust my 2 cents.", "author": "cpmeister", "createdAt": "2020-11-04T22:10:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkyNjcyNQ==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517926725", "bodyText": "Also the point of using a null checker is to prevent untested runtime errors. Any test code that runs successfully can be assumed to be NPE free (unless it is really poorly written).\n\nBased on timing due to server loads test code can also return null e.g. getService in itests. So tests can also behave differently at runtime. The null analysis triggers you to think about and investigate these possible null scenarios which makes tests more robust. As a result builds will less likely fail and contributors/maintainers have to spent less time debugging them and retriggering failing builds making them more happy. :-)", "author": "wborn", "createdAt": "2020-11-05T09:59:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NDk5Mw==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r519984993", "bodyText": "Fair enough.", "author": "cpmeister", "createdAt": "2020-11-09T17:21:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxNTA5Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzYxODMxOA==", "url": "https://github.com/openhab/openhab-addons/pull/8949#discussion_r517618318", "body": "I'd try to avoid inline variable assignment if possible.\r\n```suggestion\r\n        String dimmerMax = params.get(\"dimmermax\");\r\n        if (conf.getFeature().contains(\"dimmer\") && dimmerMax != null) {\r\n```", "bodyText": "I'd try to avoid inline variable assignment if possible.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String dimmerMax;\n          \n          \n            \n                    if (conf.getFeature().contains(\"dimmer\") && (dimmerMax = params.get(\"dimmermax\")) != null) {\n          \n          \n            \n                    String dimmerMax = params.get(\"dimmermax\");\n          \n          \n            \n                    if (conf.getFeature().contains(\"dimmer\") && dimmerMax != null) {", "bodyHTML": "<p dir=\"auto\">I'd try to avoid inline variable assignment if possible.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> dimmerMax;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (conf<span class=\"pl-k\">.</span>getFeature()<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dimmer<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span>dimmerMax<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> params</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">dimmermax</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">))</span> <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> dimmerMax<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> params</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">dimmermax</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (conf<span class=\"pl-k\">.</span>getFeature()<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dimmer<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">&amp;&amp;</span> dimmerMax <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cpmeister", "createdAt": "2020-11-04T20:40:21Z", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -114,9 +114,9 @@ protected String nm() {\n \n     protected int getMaxLightLevel(InsteonChannelConfiguration conf, int defaultLevel) {\n         Map<String, @Nullable String> params = conf.getParameters();\n-        if (conf.getFeature().contains(\"dimmer\") && params.containsKey(\"dimmermax\")) {\n+        String dimmerMax;\n+        if (conf.getFeature().contains(\"dimmer\") && (dimmerMax = params.get(\"dimmermax\")) != null) {", "originalCommit": "a02fe901828e0deb824feca2b1cb12490ee26d46", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1fcf0fc1ad242e9776f41ed94cad994b4595ac17", "url": "https://github.com/openhab/openhab-addons/commit/1fcf0fc1ad242e9776f41ed94cad994b4595ac17", "message": "fixes\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-04T21:19:29Z", "type": "forcePushed"}, {"oid": "2a91a73293998756727badc31d6b85ee9eeab40d", "url": "https://github.com/openhab/openhab-addons/commit/2a91a73293998756727badc31d6b85ee9eeab40d", "message": "inferNullAnnot as error instead of warning\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-05T08:10:59Z", "type": "forcePushed"}, {"oid": "fe99c4f7d12b1896795aedea6535b89e2a5fd5af", "url": "https://github.com/openhab/openhab-addons/commit/fe99c4f7d12b1896795aedea6535b89e2a5fd5af", "message": "part 1\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-07T20:11:48Z", "type": "forcePushed"}, {"oid": "b4cd27d8b5dfc02784701c7c0ecb973e0333a5c9", "url": "https://github.com/openhab/openhab-addons/commit/b4cd27d8b5dfc02784701c7c0ecb973e0333a5c9", "message": "final fixes", "committedDate": "2020-11-09T18:27:25Z", "type": "forcePushed"}, {"oid": "417b10f58075a3180b2e43cc52a978343cd3e432", "url": "https://github.com/openhab/openhab-addons/commit/417b10f58075a3180b2e43cc52a978343cd3e432", "message": "inferNullAnnot as error instead of warning\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-09T18:47:37Z", "type": "forcePushed"}, {"oid": "f401015c197c96a1ce4c5dfb4e68cdd66fbb1daa", "url": "https://github.com/openhab/openhab-addons/commit/f401015c197c96a1ce4c5dfb4e68cdd66fbb1daa", "message": "inferNullAnnot as error instead of warning\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-12T11:24:22Z", "type": "commit"}, {"oid": "8d19e530c5a0594becc5be2e89e0c7dd68443164", "url": "https://github.com/openhab/openhab-addons/commit/8d19e530c5a0594becc5be2e89e0c7dd68443164", "message": "fix after rebase\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-12T11:24:23Z", "type": "commit"}, {"oid": "8d19e530c5a0594becc5be2e89e0c7dd68443164", "url": "https://github.com/openhab/openhab-addons/commit/8d19e530c5a0594becc5be2e89e0c7dd68443164", "message": "fix after rebase\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-12T11:24:23Z", "type": "forcePushed"}, {"oid": "e60fe4c36cc6a34e683bb215c382d2cc448d12a0", "url": "https://github.com/openhab/openhab-addons/commit/e60fe4c36cc6a34e683bb215c382d2cc448d12a0", "message": "fix\n\nSigned-off-by: Jan N. Klug <jan.n.klug@rub.de>", "committedDate": "2020-11-12T14:32:26Z", "type": "commit"}]}