{"pr_number": 6753, "pr_title": "[Rust][Client] Unify sync/async client structure", "pr_author": "bcourtine", "pr_createdAt": "2020-06-23T09:53:46Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6753", "timeline": [{"oid": "b054edfb34f6354c320014aa29a6bb522ce5ab5a", "url": "https://github.com/OpenAPITools/openapi-generator/commit/b054edfb34f6354c320014aa29a6bb522ce5ab5a", "message": "Unify sync/async client structure (configuration as first param instead of a struct).", "committedDate": "2020-06-23T09:36:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NjExMQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6753#discussion_r444456111", "body": "I'm afraid your change breaks `library: hyper`, as can easily be checked like this:\r\n```\r\njava -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g rust -i https://github.com/slackapi/slack-api-specs/raw/master/web-api/slack_web_openapi_v2.json -o slack --skip-validate-spec --remove-operation-id-prefix --library hyper\r\ncargo check --manifest-path slack/Cargo.toml\r\n> ...\r\n> error[E0583]: file not found for module `client`\r\n>    --> src\\apis\\mod.rs:162:1\r\n>     |\r\n> 162 | pub mod client;\r\n>     | ^^^^^^^^^^^^^^^\r\n>     |\r\n>     = help: to create the module `client`, create file \"src\\apis\\client.rs\"\r\n```\r\nI would suggest something like this as an alternative for removing the line completely:\r\n\r\n```suggestion\r\n        if (HYPER_LIBRARY.equals(getLibrary())) {\r\n            supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\r\n            supportingFiles.add(new SupportingFile(getLibrary() + \"/client.mustache\", apiFolder, \"client.rs\"));\r\n        }\r\n```\r\n\r\nMaybe a test using `library: hyper` would be helpful to prevent something like this in the future?", "bodyText": "I'm afraid your change breaks library: hyper, as can easily be checked like this:\njava -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g rust -i https://github.com/slackapi/slack-api-specs/raw/master/web-api/slack_web_openapi_v2.json -o slack --skip-validate-spec --remove-operation-id-prefix --library hyper\ncargo check --manifest-path slack/Cargo.toml\n> ...\n> error[E0583]: file not found for module `client`\n>    --> src\\apis\\mod.rs:162:1\n>     |\n> 162 | pub mod client;\n>     | ^^^^^^^^^^^^^^^\n>     |\n>     = help: to create the module `client`, create file \"src\\apis\\client.rs\"\n\nI would suggest something like this as an alternative for removing the line completely:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (HYPER_LIBRARY.equals(getLibrary())) {\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    if (HYPER_LIBRARY.equals(getLibrary())) {\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(getLibrary() + \"/client.mustache\", apiFolder, \"client.rs\"));\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nMaybe a test using library: hyper would be helpful to prevent something like this in the future?", "bodyHTML": "<p dir=\"auto\">I'm afraid your change breaks <code>library: hyper</code>, as can easily be checked like this:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g rust -i https://github.com/slackapi/slack-api-specs/raw/master/web-api/slack_web_openapi_v2.json -o slack --skip-validate-spec --remove-operation-id-prefix --library hyper\ncargo check --manifest-path slack/Cargo.toml\n&gt; ...\n&gt; error[E0583]: file not found for module `client`\n&gt;    --&gt; src\\apis\\mod.rs:162:1\n&gt;     |\n&gt; 162 | pub mod client;\n&gt;     | ^^^^^^^^^^^^^^^\n&gt;     |\n&gt;     = help: to create the module `client`, create file &quot;src\\apis\\client.rs&quot;\"><pre><code>java -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g rust -i https://github.com/slackapi/slack-api-specs/raw/master/web-api/slack_web_openapi_v2.json -o slack --skip-validate-spec --remove-operation-id-prefix --library hyper\ncargo check --manifest-path slack/Cargo.toml\n&gt; ...\n&gt; error[E0583]: file not found for module `client`\n&gt;    --&gt; src\\apis\\mod.rs:162:1\n&gt;     |\n&gt; 162 | pub mod client;\n&gt;     | ^^^^^^^^^^^^^^^\n&gt;     |\n&gt;     = help: to create the module `client`, create file \"src\\apis\\client.rs\"\n</code></pre></div>\n<p dir=\"auto\">I would suggest something like this as an alternative for removing the line completely:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"304\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">HYPER_LIBRARY</span><span class=\"pl-k\">.</span>equals(getLibrary())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"305\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            supportingFiles<span class=\"pl-k\">.</span>add(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SupportingFile</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>request.rs<span class=\"pl-pds\">\"</span></span>, apiFolder, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>request.rs<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"306\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"304\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">HYPER_LIBRARY</span><span class=\"pl-k\">.</span>equals(getLibrary())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"305\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            supportingFiles<span class=\"pl-k\">.</span>add(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SupportingFile</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>request.rs<span class=\"pl-pds\">\"</span></span>, apiFolder, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>request.rs<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"306\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            supportingFiles<span class=\"pl-k\">.</span>add(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SupportingFile</span>(getLibrary() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/client.mustache<span class=\"pl-pds\">\"</span></span>, apiFolder, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>client.rs<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"307\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Maybe a test using <code>library: hyper</code> would be helpful to prevent something like this in the future?</p>", "author": "HenningHolmDE", "createdAt": "2020-06-23T19:26:54Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustClientCodegen.java", "diffHunk": "@@ -301,9 +301,6 @@ public void processOpts() {\n         if (HYPER_LIBRARY.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n         }", "originalCommit": "b054edfb34f6354c320014aa29a6bb522ce5ab5a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY5MTMzMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6753#discussion_r444691330", "bodyText": "Good catch! I didn't think that client file was shared between hyper and reqwest. Will fix that. \ud83d\udc4d", "author": "bcourtine", "createdAt": "2020-06-24T07:14:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NjExMQ=="}], "type": "inlineReview"}, {"oid": "2ba9513ad859a9cce339810f6f669aa046ad2371", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2ba9513ad859a9cce339810f6f669aa046ad2371", "message": "Fix: Hyper client requires the client.rs file.\n\nCo-authored-by: Henning Holm <git@henningholm.de>", "committedDate": "2020-06-24T07:23:58Z", "type": "commit"}, {"oid": "550d7932948aeed1ec9cbc8b30c9d1ead4b2a509", "url": "https://github.com/OpenAPITools/openapi-generator/commit/550d7932948aeed1ec9cbc8b30c9d1ead4b2a509", "message": "Add API method comments (description and/or notes when available).", "committedDate": "2020-06-26T06:19:55Z", "type": "commit"}]}