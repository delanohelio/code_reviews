{"pr_number": 5184, "pr_title": "[codegen] Add code comments and improve \"first content\" warning", "pr_author": "sebastien-rosset", "pr_createdAt": "2020-02-01T02:26:10Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5184", "timeline": [{"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "message": "Add code comments and improve warning", "committedDate": "2020-02-01T02:24:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752094", "body": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\r\n\r\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.\r\n\r\n", "bodyText": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.", "bodyHTML": "<p dir=\"auto\">This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.</p>\n<p dir=\"auto\">As a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.</p>", "author": "sebastien-rosset", "createdAt": "2020-02-01T02:37:24Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYwMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752600", "body": "```suggestion\r\n            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\r\n```\r\nUsing String.format syntax means the string isn't formatted with `entry.getKey()` if the log level is above warn.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n          \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\n          \n      \n    \n    \n  \n\nUsing String.format syntax means the string isn't formatted with entry.getKey() if the log level is above warn.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multiple schemas found in the OAS 'content' section, returning only the first one (<span class=\"x x-first\">'</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multiple schemas found in the OAS 'content' section, returning only the first one (<span class=\"x x-first\">{})</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getKey());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Using String.format syntax means the string isn't formatted with <code>entry.getKey()</code> if the log level is above warn.</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:47:14Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752612", "body": "```suggestion\r\n```\r\n\r\nWrapped line isn't need if prev suggestion is accepted.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            entry.getKey() + \"')\");\n          \n      \n    \n    \n  \n\nWrapped line isn't need if prev suggestion is accepted.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">                entry</span><span class=\"pl-k x\">.</span><span class=\"x\">getKey() </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">')</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Wrapped line isn't need if prev suggestion is accepted.</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:47:29Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzE2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753160", "body": "```suggestion\r\n        MediaType mediaType = entry.getValue();\r\n```\r\n\r\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MediaType mediaType = content.values().iterator().next();\n          \n          \n            \n                    MediaType mediaType = entry.getValue();\n          \n      \n    \n    \n  \n\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">MediaType</span> mediaType <span class=\"pl-k\">=</span> <span class=\"x x-first\">content</span><span class=\"pl-k x\">.</span><span class=\"x\">values()</span><span class=\"pl-k x\">.</span><span class=\"x\">iterator()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">next</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">MediaType</span> mediaType <span class=\"pl-k\">=</span> <span class=\"x x-first\">entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getValue</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">No need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:57:43Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzIxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753210", "body": "```suggestion\r\n        return mediaType.getSchema();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return entry.getValue().getSchema();\n          \n          \n            \n                    return mediaType.getSchema();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"823\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"x x-first\">entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getValue()</span><span class=\"pl-k\">.</span>getSchema();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"823\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\">mediaType</span><span class=\"pl-k\">.</span>getSchema();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jimschubert", "createdAt": "2020-02-01T02:58:37Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");\n         }\n-        MediaType mediaType = content.values().iterator().next();\n-        return mediaType.getSchema();\n+        return entry.getValue().getSchema();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"oid": "d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "message": "add code comments", "committedDate": "2020-02-01T03:02:06Z", "type": "commit"}, {"oid": "062caf9d1fcd11b28c73325559ff2e3623496592", "url": "https://github.com/OpenAPITools/openapi-generator/commit/062caf9d1fcd11b28c73325559ff2e3623496592", "message": "remove line which is no longer needed", "committedDate": "2020-02-01T03:24:03Z", "type": "commit"}]}