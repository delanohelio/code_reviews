{"pr_number": 5184, "pr_title": "[codegen] Add code comments and improve \"first content\" warning", "pr_createdAt": "2020-02-01T02:26:10Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/5184", "merge_commit": "6f1ce5645ebf61b77ae0d6bc523b553f706d25c2", "timeline": [{"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "url": "https://github.com/OpenAPITools/openapi-generator/commit/36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "message": "Add code comments and improve warning", "committedDate": "2020-02-01T02:24:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752094", "body": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\r\n\r\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.\r\n\r\n", "bodyText": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.", "bodyHTML": "<p dir=\"auto\">This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.</p>\n<p dir=\"auto\">As a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.</p>", "author": "sebastien-rosset", "createdAt": "2020-02-01T02:37:24Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYwMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752600", "body": "```suggestion\r\n            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\r\n```\r\nUsing String.format syntax means the string isn't formatted with `entry.getKey()` if the log level is above warn.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n          \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\n          \n      \n    \n    \n  \n\nUsing String.format syntax means the string isn't formatted with entry.getKey() if the log level is above warn.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multiple schemas found in the OAS 'content' section, returning only the first one (<span class=\"x x-first\">'</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x x-last\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Multiple schemas found in the OAS 'content' section, returning only the first one (<span class=\"x x-first\">{})</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getKey());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Using String.format syntax means the string isn't formatted with <code>entry.getKey()</code> if the log level is above warn.</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:47:14Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752612", "body": "```suggestion\r\n```\r\n\r\nWrapped line isn't need if prev suggestion is accepted.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            entry.getKey() + \"')\");\n          \n      \n    \n    \n  \n\nWrapped line isn't need if prev suggestion is accepted.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">                entry</span><span class=\"pl-k x\">.</span><span class=\"x\">getKey() </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">')</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Wrapped line isn't need if prev suggestion is accepted.</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:47:29Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "6f1ce5645ebf61b77ae0d6bc523b553f706d25c2", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": {"commit": "9c8fb9db465b08a1d1483fbaa65ea7aac2f63799", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex 3872b11d872..e55479e4a31 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -817,7 +985,7 @@ public class ModelUtils {\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+            once(LOGGER).warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n                 entry.getKey());\n         }\n         return entry.getValue().getSchema();\n", "next_change": {"commit": "3bbaedd9bc086028e7b1be973a30e04870962e5d", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex e55479e4a31..7092f296171 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -986,7 +997,7 @@ public class ModelUtils {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n             once(LOGGER).warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n-                entry.getKey());\n+                    entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": {"commit": "d97c152c140a5e4b5e0079485f031bd18b38be26", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex 7092f296171..ac3ef1346b0 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -1002,6 +1065,96 @@ public class ModelUtils {\n         return entry.getValue().getSchema();\n     }\n \n+    /**\n+     * Has self reference?\n+     *\n+     * @param openAPI OpenAPI spec.\n+     * @param schema Schema\n+     * @return boolean true if it has at least one self reference\n+     */\n+    public static boolean hasSelfReference(OpenAPI openAPI,\n+                                       Schema schema) {\n+        return hasSelfReference(openAPI, schema, null);\n+    }\n+\n+    /**\n+     * Has self reference?\n+     *\n+     * @param openAPI OpenAPI spec.\n+     * @param schema Schema\n+     * @param visitedSchemaNames A set of visited schema names\n+     * @return boolean true if it has at least one self reference\n+     */\n+    public static boolean hasSelfReference(OpenAPI openAPI,\n+                                          Schema schema,\n+                                          Set<String> visitedSchemaNames) {\n+        if (visitedSchemaNames == null) {\n+            visitedSchemaNames = new HashSet<String>();\n+        }\n+\n+        if (schema.get$ref() != null) {\n+            String ref = getSimpleRef(schema.get$ref());\n+            if (!visitedSchemaNames.contains(ref)) {\n+                visitedSchemaNames.add(ref);\n+                Schema referencedSchema = getSchemas(openAPI).get(ref);\n+                if (referencedSchema != null) {\n+                    return hasSelfReference(openAPI, referencedSchema, visitedSchemaNames);\n+                } else {\n+                    LOGGER.error(\"Failed to obtain schema from `{}` in self reference check\", ref);\n+                    return false;\n+                }\n+            } else {\n+                return true;\n+            }\n+        }\n+        if (schema instanceof ComposedSchema) {\n+            List<Schema> oneOf = ((ComposedSchema) schema).getOneOf();\n+            if (oneOf != null) {\n+                for (Schema s : oneOf) {\n+                    if (hasSelfReference(openAPI, s, visitedSchemaNames)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+            List<Schema> allOf = ((ComposedSchema) schema).getAllOf();\n+            if (allOf != null) {\n+                for (Schema s : allOf) {\n+                    if (hasSelfReference(openAPI, s, visitedSchemaNames)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+            List<Schema> anyOf = ((ComposedSchema) schema).getAnyOf();\n+            if (anyOf != null) {\n+                for (Schema s : anyOf) {\n+                    if (hasSelfReference(openAPI, s, visitedSchemaNames)) {\n+                        return true;\n+                    }\n+                }\n+            }\n+        } else if (isArraySchema(schema)) {\n+            Schema itemsSchema = ((ArraySchema) schema).getItems();\n+            if (itemsSchema != null) {\n+                return hasSelfReference(openAPI, itemsSchema, visitedSchemaNames);\n+            }\n+        } else if (isMapSchema(schema)) {\n+            Object additionalProperties = schema.getAdditionalProperties();\n+            if (additionalProperties instanceof Schema) {\n+                return hasSelfReference(openAPI, (Schema) additionalProperties, visitedSchemaNames);\n+            }\n+        } else if (schema.getNot() != null) {\n+            return hasSelfReference(openAPI, schema.getNot(), visitedSchemaNames);\n+        } else if (schema.getProperties() != null && !schema.getProperties().isEmpty()) {\n+            // go through properties to see if there's any self-reference\n+            for (Schema property : ((Map<String, Schema>)schema.getProperties()).values()) {\n+                if (hasSelfReference(openAPI, property, visitedSchemaNames)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Get the actual schema from aliases. If the provided schema is not an alias, the schema itself will be returned.\n      *\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "6f1ce5645ebf61b77ae0d6bc523b553f706d25c2", "message": "Merge commit", "committedDate": null}, {"oid": "9d2c39dc43992ad3ae6fe83a0eb1d962e62c1527", "committedDate": "2020-02-05 23:40:32 -0500", "message": "Add openAPI attribute to validation and recommendation (#5216)"}, {"oid": "197cea3248b66b11ed22da6cd0760804b1737776", "committedDate": "2020-02-06 20:21:06 +0100", "message": "[core][typescript][perl] Ensure model.parent is also added to model.allParents with multiple inheritance (#5182)"}, {"oid": "2aa8a6d033699121d2692a3b03993748b3eeb3ed", "committedDate": "2020-02-09 00:19:25 -0500", "message": "[core] Log some things in model/url utils once (#5233)"}, {"oid": "b627fb1137547862778adedce1a8bb38158165b8", "committedDate": "2020-02-12 18:41:18 -0500", "message": "[codegen][validation] Add support for 'null' type (#5290)"}, {"oid": "eecd8c056a730e7043c75c12dfe5810c087ad126", "committedDate": "2020-02-13 22:05:53 +0800", "message": "Java importmapping 3589 (#4350)"}, {"oid": "527c118210b33c1d2c9acde7344619879b7639cb", "committedDate": "2020-02-16 20:23:00 -0500", "message": "[codegen] Improve java code comments and argument documentation; Fix issue with ComposedSchema that has undeclared properties (#5316)"}, {"oid": "0a3272697de84afe29b0b54fea37d9517d073fb5", "committedDate": "2020-03-16 21:12:36 -0400", "message": "Adds parseFlattenSpec (#5526)"}, {"oid": "2c1ca02b61552505f154281e89d8ccfc645195a0", "committedDate": "2020-03-26 16:40:34 +0800", "message": "[codegen][Go] Fix compilation error of generated go code when schema is free form object (#5391)"}, {"oid": "9c8fb9db465b08a1d1483fbaa65ea7aac2f63799", "committedDate": "2020-04-03 23:10:12 +0800", "message": "[codegen] Use once(LOGGER) to reduce amount of identical warning messages (#5808)"}, {"oid": "c5472be422eb8508abbe2a7cb6d4b623f3df6158", "committedDate": "2020-04-18 15:22:20 +0800", "message": "Ensure `model.allParents` always includes `model.parent`. (#5738)"}, {"oid": "1766279916377f49df70aa2b935a98f9efe35eab", "committedDate": "2020-04-20 16:00:24 +0800", "message": "Fixes issue 5876 (#5977)"}, {"oid": "3bbaedd9bc086028e7b1be973a30e04870962e5d", "committedDate": "2020-04-30 21:23:55 +0800", "message": "Better \"Any Type\" support (#6091)"}, {"oid": "f7f41410e764bb8354e4f9756c9f886e1d3c03f7", "committedDate": "2020-05-29 00:40:48 +0800", "message": "[codegen][python-experimental] Composed schema with additionalProperties  (#6290)"}, {"oid": "313d205f56cd123011bd2efb764def9c03e0d8db", "committedDate": "2020-06-21 19:19:35 +0800", "message": "[maven] Avoid \"Schema unaliasing\" INFO-spam on the Maven console (#6687)"}, {"oid": "3199ddc6152effe92aa8fa5ba4918d9054337bcb", "committedDate": "2020-07-23 16:26:18 +0800", "message": "Add 'x-generate-alias-as-model' extension to allow enabling generating alias as model per-schema (#6937)"}, {"oid": "a97feaf533aeace3e18b8cd96087e544a46646ea", "committedDate": "2020-08-24 19:00:47 -0400", "message": "[core] Add x-is-free-form vendor extension (#6849)"}, {"oid": "972120c35a31d20f51295e3ea66363d75304e9b7", "committedDate": "2020-08-31 21:47:18 -0400", "message": "Correct allOf with only one child schema (no discriminator) (#6901)"}, {"oid": "26bb348354def0034d1ccd4e3e2abcd6841f8f64", "committedDate": "2020-08-31 22:46:57 -0400", "message": "Revert \"Correct allOf with only one child schema (no discriminator)\" (#7323)"}, {"oid": "e7f83595e5f61cc09b6f2983490c75c115365af0", "committedDate": "2020-09-08 23:12:56 +0800", "message": "Properly decode $ref (#7191)"}, {"oid": "8556cb8d71cb063f3a34bcd250440ac0fbb57031", "committedDate": "2020-09-14 17:18:43 +0800", "message": "Adds fix for issue 7372 (#7383)"}, {"oid": "35d42728d9df60da65300fe7cd900e4056719969", "committedDate": "2020-09-20 10:55:54 -0700", "message": "Adds free form model generation in python-experimental (#7373)"}, {"oid": "4f279398796472f52de529d4f28f1380aedec27d", "committedDate": "2020-09-20 22:15:32 -0400", "message": "[core] Add model cache to speed up code generation (#7250)"}, {"oid": "49760f7a3491ed216f0d48c4a2c8457832419ccc", "committedDate": "2020-09-24 22:02:11 -0400", "message": "[sonar][ci] Fixes some new recommended \"bug\" fixes found via Sonar (#7508)"}, {"oid": "9377dbca56afcc32901262e94ba4d7af4379ba94", "committedDate": "2020-11-02 21:31:32 +0800", "message": "Add \"decimal\" support (#7808)"}, {"oid": "4984f9c3d57fa5288b254663935e9a6b6b27c0a5", "committedDate": "2020-11-23 17:16:36 +0800", "message": "Correct allOf with only one child schema (no discriminator) (#7855)"}, {"oid": "2331432cc0f062ceff44c3d09e1a16c31abf6f57", "committedDate": "2021-01-21 09:52:49 -0800", "message": "Adds hasValidation to all java core Schema classes (#8474)"}, {"oid": "97e27f2b3617fb1b6f5a8c695ab0b449a7e0de5f", "committedDate": "2021-03-25 21:23:29 +0800", "message": "[cleanup] erefactor/EclipseJdt - Remove trailing whitespace - All lines (#9076)"}, {"oid": "6daecb88c2cad654da8fdca37c71bb7c2b5db709", "committedDate": "2021-03-29 21:02:51 +0800", "message": "[cleanup] erefactor/EclipseJdt - Use primitive parse methods instead of wrapper. (#9113)"}, {"oid": "d4b8ff60a13a33124468da42ff7aa6d32a92ddc9", "committedDate": "2021-09-27 16:12:40 -0700", "message": "[Java] Fixes schema class type booleans for composed schemas (#10334)"}, {"oid": "4d947a1c4579a73c7350ea55153d33ef76ba5d89", "committedDate": "2021-11-09 14:36:01 +0800", "message": "Non functional Java styling changes (#10808)"}, {"oid": "df05e6f4bc6265ba4de801ba306f75dd7278e119", "committedDate": "2022-02-21 18:37:52 +0800", "message": "Update parser to 2.0.29 (#11388)"}, {"oid": "85df431ebf7b2fbdb8fa95ba90d153df8a4ef98c", "committedDate": "2022-03-25 00:48:41 +0800", "message": "Replace maps with models to reduce casting (#11913)"}, {"oid": "f6231d2488621f0fc5f9b5e3e52f81941be18e45", "committedDate": "2022-04-09 10:19:54 +0800", "message": "Remove restrictions for additional property types (#11802)"}, {"oid": "d97c152c140a5e4b5e0079485f031bd18b38be26", "committedDate": "2022-05-05 16:22:52 +0800", "message": "Add new method to detect self-referencing in ModelUtils (#12294)"}, {"oid": "ad3b5f70450cc80bff5e2d9338ad2abca8855b5b", "committedDate": "2022-05-10 17:13:57 +0800", "message": "[Inline model resolver] various improvements (#12293)"}, {"oid": "c270640a36aaaa2927a14160b848d4bfa18c4caa", "committedDate": "2022-05-20 20:25:15 +0800", "message": "Better support for inline schemas in parameters (#12369)"}, {"oid": "2d3bfaf96dad35629453c1b99a3f8efa0a084bee", "committedDate": "2022-07-03 17:46:39 +0800", "message": "Add schema mappings (#12600)"}, {"oid": "8cd0d38446dae83f28cc98ff79e044349ba2e2b0", "committedDate": "2022-08-11 12:57:00 -0700", "message": "Adds $ref data to schema classes (#13163)"}, {"oid": "308f9d15099f791b4a46e86d100d2737f3371e2b", "committedDate": "2022-08-20 16:19:28 +0800", "message": "minor code improvement in model utils (#13237)"}, {"oid": "3f2b1673603521fc08e20d680952a88d367a6372", "committedDate": "2022-08-23 17:26:43 -0700", "message": "[python-experimental] creates + uses MetaOapg cls to store non-properties schema keywords (#13256)"}, {"oid": "9f1fa0e44012a11f85d8360cfe5f634530e49e57", "committedDate": "2022-11-07 21:30:24 +0800", "message": "Fix another batch of spelling typos (#13915)"}, {"oid": "b71aecbe9ea1eb7b74d77421936162f8ca2b70bb", "committedDate": "2022-12-30 16:03:21 +0800", "message": "Add OpenAPI Normalizer (#14172)"}, {"oid": "d1cde7febe90279f0e2aa55a073bce777e370259", "committedDate": "2023-01-17 21:27:57 +0800", "message": "Add 2 rules to OpenAPI Normalizer (#14463)"}, {"oid": "70faa6b15c1084ee1bb5cc5526c9340fa544e2f6", "committedDate": "2023-03-07 00:35:34 +0800", "message": "better support of allOf with 1 sub-schema (#14882)"}, {"oid": "e38ea578f879d1a86972ee3c70dfc0d4e34e10eb", "committedDate": "2023-03-07 15:53:53 +0800", "message": "Better support of inline allOf/anyOf/oneOf schemas (#14887)"}, {"oid": "140d941da2e48268624cd83dde95492f9294d5a1", "committedDate": "2023-03-10 15:18:41 +0800", "message": "[csharp-netcore] Add unsigned integer/long support (#14885)"}, {"oid": "0c41a7c1b4c7f3288b1205b0e9fb9e6c9fd350b4", "committedDate": "2023-03-12 15:28:16 +0800", "message": "Minor bug fix in openapi normalizer (#14924)"}, {"oid": "f5d31c5214cad5f73c29c8fa54f595c709e1daac", "committedDate": "2023-03-14 11:16:18 +0800", "message": "Log Warn Messages for ineffective Schema Validations, updated (#14759)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzE2MA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753160", "body": "```suggestion\r\n        MediaType mediaType = entry.getValue();\r\n```\r\n\r\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MediaType mediaType = content.values().iterator().next();\n          \n          \n            \n                    MediaType mediaType = entry.getValue();\n          \n      \n    \n    \n  \n\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">MediaType</span> mediaType <span class=\"pl-k\">=</span> <span class=\"x x-first\">content</span><span class=\"pl-k x\">.</span><span class=\"x\">values()</span><span class=\"pl-k x\">.</span><span class=\"x\">iterator()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">next</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">MediaType</span> mediaType <span class=\"pl-k\">=</span> <span class=\"x x-first\">entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getValue</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">No need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)</p>", "author": "jimschubert", "createdAt": "2020-02-01T02:57:43Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzIxMA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753210", "body": "```suggestion\r\n        return mediaType.getSchema();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return entry.getValue().getSchema();\n          \n          \n            \n                    return mediaType.getSchema();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"823\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"x x-first\">entry</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getValue()</span><span class=\"pl-k\">.</span>getSchema();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"823\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"x x-first x-last\">mediaType</span><span class=\"pl-k\">.</span>getSchema();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jimschubert", "createdAt": "2020-02-01T02:58:37Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");\n         }\n-        MediaType mediaType = content.values().iterator().next();\n-        return mediaType.getSchema();\n+        return entry.getValue().getSchema();", "originalCommit": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "062caf9d1fcd11b28c73325559ff2e3623496592", "changed_code": [{"header": "diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\nindex adaaa07ec3b..3872b11d872 100644\n--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java\n", "chunk": "@@ -814,12 +814,11 @@ public class ModelUtils {\n             return null;\n         }\n         Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n-        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n             // Other content types are currently ignored by codegen. If you see this warning,\n             // reorder the OAS spec to put the desired content type first.\n-            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n-                entry.getKey() + \"')\");\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\",\n+                entry.getKey());\n         }\n         return entry.getValue().getSchema();\n     }\n", "next_change": null}]}}, {"oid": "d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "message": "add code comments", "committedDate": "2020-02-01T03:02:06Z", "type": "commit"}, {"oid": "062caf9d1fcd11b28c73325559ff2e3623496592", "url": "https://github.com/OpenAPITools/openapi-generator/commit/062caf9d1fcd11b28c73325559ff2e3623496592", "message": "remove line which is no longer needed", "committedDate": "2020-02-01T03:24:03Z", "type": "commit"}]}