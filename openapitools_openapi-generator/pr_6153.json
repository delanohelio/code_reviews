{"pr_number": 6153, "pr_title": "[core] Add type and format properties to model of inline response", "pr_author": "ybelenko", "pr_createdAt": "2020-05-03T23:32:41Z", "pr_url": "https://github.com/OpenAPITools/openapi-generator/pull/6153", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3OTEyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r419179125", "body": "I wonder how to clone `schema` instance here. I need to change result of `Json.pretty(schema);` but keep original instance not modified.", "bodyText": "I wonder how to clone schema instance here. I need to change result of Json.pretty(schema); but keep original instance not modified.", "bodyHTML": "<p dir=\"auto\">I wonder how to clone <code>schema</code> instance here. I need to change result of <code>Json.pretty(schema);</code> but keep original instance not modified.</p>", "author": "ybelenko", "createdAt": "2020-05-04T00:19:44Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2129,6 +2129,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);", "originalCommit": "8e033b3a4e8e87685d8360ba6f471136b75470ea", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5114dcc0b659bf45f23f94095364c92bef0ce342", "url": "https://github.com/OpenAPITools/openapi-generator/commit/5114dcc0b659bf45f23f94095364c92bef0ce342", "message": "Refresh samples", "committedDate": "2020-05-09T07:35:01Z", "type": "forcePushed"}, {"oid": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "url": "https://github.com/OpenAPITools/openapi-generator/commit/8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "message": "Refresh samples", "committedDate": "2020-05-09T12:41:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODcyNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418725", "body": "```suggestion\r\n        String modelJson;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String modelJson = Json.pretty(schema);\n          \n          \n            \n                    String modelJson;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> modelJson<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">Json</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">pretty(schema)</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> modelJson;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jimschubert", "createdAt": "2020-06-08T00:50:40Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);", "originalCommit": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQxODgxNQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r436418815", "body": "```suggestion\r\n        } else {\r\n            modelJson = Json.pretty(schema)\r\n        }\r\n```\r\n\r\nThis coupled with the above solution will prevent prettifying this twice.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                        modelJson = Json.pretty(schema)\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nThis coupled with the above solution will prevent prettifying this twice.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }<span class=\"x x-first\"> </span><span class=\"pl-k x\">else</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            modelJson <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Json</span><span class=\"pl-k\">.</span>pretty(schema)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This coupled with the above solution will prevent prettifying this twice.</p>", "author": "jimschubert", "createdAt": "2020-06-08T00:51:31Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2146,6 +2146,25 @@ public CodegenModel fromModel(String name, Schema schema) {\n             return null;\n         }\n \n+        String modelJson = Json.pretty(schema);\n+        if (schema.getType() == null ) {\n+            Schema copy = ModelUtils.unaliasSchema(this.openAPI, schema, importMapping);\n+            if (ModelUtils.isIntegerSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.INTEGER_TYPE);\n+            } else if (ModelUtils.isNumberSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.NUMBER_TYPE);\n+            } else if (ModelUtils.isStringSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.STRING_TYPE);\n+            } else if (ModelUtils.isBooleanSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.BOOLEAN_TYPE);\n+            } else if (ModelUtils.isArraySchema(schema)) {\n+                copy.setType(\"array\");\n+            } else if (ModelUtils.isObjectSchema(schema) || ModelUtils.isComposedSchema(schema) || ModelUtils.isMapSchema(schema)) {\n+                copy.setType(SchemaTypeUtil.OBJECT_TYPE);\n+            }\n+            modelJson = Json.pretty(copy);\n+        }", "originalCommit": "8698e0e05132922cba5ff4c8516d8ec8f0c8318e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "49de85e778d5dc47b46cf493becdae27f432251b", "url": "https://github.com/OpenAPITools/openapi-generator/commit/49de85e778d5dc47b46cf493becdae27f432251b", "message": "Refresh samples", "committedDate": "2020-06-09T12:04:54Z", "type": "forcePushed"}, {"oid": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "url": "https://github.com/OpenAPITools/openapi-generator/commit/267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "message": "Refresh samples", "committedDate": "2020-06-13T19:46:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r439764985", "body": "I've figured out Java debugger finally and found that InlineModelResolver strips data type here. That's my fix.", "bodyText": "I've figured out Java debugger finally and found that InlineModelResolver strips data type here. That's my fix.", "bodyHTML": "<p dir=\"auto\">I've figured out Java debugger finally and found that InlineModelResolver strips data type here. That's my fix.</p>", "author": "ybelenko", "createdAt": "2020-06-13T19:56:50Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,9 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {", "originalCommit": "267e09078e589ea3aa26fe6f74c41a8b4a3b0c00", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2OTk3Ng==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456269976", "bodyText": "@ybelenko thanks for the fix. Do we need to set the format as well?", "author": "wing328", "createdAt": "2020-07-17T07:33:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI3Mzg4NA==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456273884", "bodyText": "@wing328 Yeas, I think so. It's not so critical as type, but it's weird that InlineModelResolver can cut off that field completely. I'll test it today, maybe format isn't missing.", "author": "ybelenko", "createdAt": "2020-07-17T07:41:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NzExMg==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r456367112", "bodyText": "@wing328 Done.", "author": "ybelenko", "createdAt": "2020-07-17T10:46:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NDk4NQ=="}], "type": "inlineReview"}, {"oid": "1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1550753d8fc66126bfaf2f5e40fbe487b94e8eb6", "message": "Refresh samples", "committedDate": "2020-07-11T11:48:07Z", "type": "forcePushed"}, {"oid": "3e2259b1eed5354bf6766999c7b97384d4034cd3", "url": "https://github.com/OpenAPITools/openapi-generator/commit/3e2259b1eed5354bf6766999c7b97384d4034cd3", "message": "Save type of inline schema in modelJson prop", "committedDate": "2020-07-17T10:31:00Z", "type": "commit"}, {"oid": "1b26eca23ac51680524d4aae29ac9e616ad03f7c", "url": "https://github.com/OpenAPITools/openapi-generator/commit/1b26eca23ac51680524d4aae29ac9e616ad03f7c", "message": "Add fix suggested by Jim Schubert", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "e1eb83a87154ac88d682ba94c599a1babde80ec6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/e1eb83a87154ac88d682ba94c599a1babde80ec6", "message": "Revert \"Add fix suggested by Jim Schubert\"\n\nThis reverts commit 3a1951b62088836aa116444fffb90c83719b4927.", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/d2ff8c43d02d94277777bd9d9c99d4ef98c4513f", "message": "Revert \"Save type of inline schema in modelJson prop\"\n\nThis reverts commit f88dcb13594b3e21b734b8b1569ca29bcbf9cb13.", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "url": "https://github.com/OpenAPITools/openapi-generator/commit/fa77a31b5b9ea025c80884f2b3b1eb3f4e69a18f", "message": "Keep schema type in InlineModelResolver", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "url": "https://github.com/OpenAPITools/openapi-generator/commit/4105317c9a61cfb7c6e6403acd3c46903e1e14c6", "message": "Add test for InlineModelResolver", "committedDate": "2020-07-17T10:31:01Z", "type": "commit"}, {"oid": "324bd3283017ffb5109af264e858bce9527ec6a1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/324bd3283017ffb5109af264e858bce9527ec6a1", "message": "Add data formats to test spec", "committedDate": "2020-07-17T10:31:40Z", "type": "commit"}, {"oid": "01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "url": "https://github.com/OpenAPITools/openapi-generator/commit/01a491e9915e5eea4984ac62e6a404a0eeeda9b9", "message": "Save data format in inline models", "committedDate": "2020-07-17T10:31:41Z", "type": "commit"}, {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "message": "Refresh samples", "committedDate": "2020-07-17T10:43:28Z", "type": "commit"}, {"oid": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "url": "https://github.com/OpenAPITools/openapi-generator/commit/cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "message": "Refresh samples", "committedDate": "2020-07-17T10:43:28Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk3ODkzNw==", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6153#discussion_r463978937", "body": "IMO, there may be a contradiction in the OAS spec (both 3.0.3 and 3.1) versus the JSON schema specification.\r\nI have opened https://github.com/OAI/OpenAPI-Specification/issues/2301. It would be interesting to have @wing328  and @jimschubert  opinions.\r\nIn any case, I suggest adding the code comments below because later it can be hard for maintainers to understand the context and why this was done.\r\n```suggestion\r\n            // Even though the `format` keyword typically applies to primitive types only,\r\n            // the JSON schema specification states `format` can be used for any model type instance\r\n            // including object types.\r\n            model.setFormat(object.getFormat());\r\n```", "bodyText": "IMO, there may be a contradiction in the OAS spec (both 3.0.3 and 3.1) versus the JSON schema specification.\nI have opened OAI/OpenAPI-Specification#2301. It would be interesting to have @wing328  and @jimschubert  opinions.\nIn any case, I suggest adding the code comments below because later it can be hard for maintainers to understand the context and why this was done.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        model.setFormat(object.getFormat());\n          \n          \n            \n                        // Even though the `format` keyword typically applies to primitive types only,\n          \n          \n            \n                        // the JSON schema specification states `format` can be used for any model type instance\n          \n          \n            \n                        // including object types.\n          \n          \n            \n                        model.setFormat(object.getFormat());", "bodyHTML": "<p dir=\"auto\">IMO, there may be a contradiction in the OAS spec (both 3.0.3 and 3.1) versus the JSON schema specification.<br>\nI have opened <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"670995617\" data-permission-text=\"Title is private\" data-url=\"https://github.com/OAI/OpenAPI-Specification/issues/2301\" data-hovercard-type=\"issue\" data-hovercard-url=\"/OAI/OpenAPI-Specification/issues/2301/hovercard\" href=\"https://github.com/OAI/OpenAPI-Specification/issues/2301\">OAI/OpenAPI-Specification#2301</a>. It would be interesting to have <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wing328/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wing328\">@wing328</a>  and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jimschubert/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jimschubert\">@jimschubert</a>  opinions.<br>\nIn any case, I suggest adding the code comments below because later it can be hard for maintainers to understand the context and why this was done.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"631\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first\">model</span><span class=\"pl-k x\">.</span><span class=\"x\">setFormat(object</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getFormat());</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"631\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> Even though the `format` keyword typically applies to primitive types only,</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"632\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> the JSON schema specification states `format` can be used for any model type instance</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"633\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> including object types.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"634\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            model<span class=\"pl-k\">.</span>setFormat(object<span class=\"pl-k\">.</span>getFormat());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "sebastien-rosset", "createdAt": "2020-08-01T16:42:57Z", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -621,6 +621,12 @@ private Schema modelFromProperty(OpenAPI openAPI, Schema object, String path) {\n         XML xml = object.getXml();\n         Map<String, Schema> properties = object.getProperties();\n         Schema model = new Schema();\n+        if (object.getType() != null) {\n+            model.setType(object.getType());\n+        }\n+        if (object.getFormat() != null) {\n+            model.setFormat(object.getFormat());", "originalCommit": "cdf4d35e49857e0214b8a8cf4694c61f653d09b1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "url": "https://github.com/OpenAPITools/openapi-generator/commit/2bd379bd2f388b744a90e28f5de1aa3d2a58be66", "message": "Add comments suggested by @sebastien-rosset", "committedDate": "2020-08-02T10:40:54Z", "type": "commit"}]}