{"pr_number": 4840, "pr_title": "REST authentication: Remove exception class name from failure message", "pr_author": "johnjcool", "pr_createdAt": "2020-05-04T20:59:26Z", "pr_url": "https://github.com/apereo/cas/pull/4840", "timeline": [{"oid": "07988ebfe2861aceb1909adf6a3d19af58ff814a", "url": "https://github.com/apereo/cas/commit/07988ebfe2861aceb1909adf6a3d19af58ff814a", "message": "Security: hide sensitive framework information during rest call exceptions", "committedDate": "2020-05-04T20:58:12Z", "type": "commit"}, {"oid": "b1dde6506814a65da3856a030c4ed39330d10455", "url": "https://github.com/apereo/cas/commit/b1dde6506814a65da3856a030c4ed39330d10455", "message": "Merge branch '6.1.x' into bugfix/hide-sensitive-framework-information\n\n* 6.1.x:\n  Use tag for samba test container with version of ubuntu that works with java 11.0.2 (#4846)\n  Update Attribute-Release-PrincipalId.md", "committedDate": "2020-05-12T07:19:25Z", "type": "commit"}, {"oid": "ef736679dddcf791d36da49bae0b1466119cb0a4", "url": "https://github.com/apereo/cas/commit/ef736679dddcf791d36da49bae0b1466119cb0a4", "message": "added test", "committedDate": "2020-05-13T22:34:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzI5Mw==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424897293", "body": "Why this change? ", "bodyText": "Why this change?", "bodyHTML": "<p dir=\"auto\">Why this change?</p>", "author": "mmoayyed", "createdAt": "2020-05-14T06:26:36Z", "path": "support/cas-server-support-rest-core/src/main/java/org/apereo/cas/support/rest/resources/RestResourceUtils.java", "diffHunk": "@@ -39,8 +39,12 @@\n             .findAndRegisterModules()\n             .configure(DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE, false)\n             .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)\n-            .setSerializationInclusion(JsonInclude.Include.NON_EMPTY)\n-            .enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);\n+            .setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n+        MAPPER.activateDefaultTyping(\n+                MAPPER.getPolymorphicTypeValidator(),\n+                ObjectMapper.DefaultTyping.NON_FINAL,\n+                JsonTypeInfo.As.PROPERTY", "originalCommit": "ef736679dddcf791d36da49bae0b1466119cb0a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxNDA0NQ==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424914045", "bodyText": "enableDefaultTyping is deprecated and sonar check points to this https://rules.sonarsource.com/java/RSPEC-4544", "author": "johnjcool", "createdAt": "2020-05-14T07:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxNTU3MA==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424915570", "bodyText": "under the hood jackson is doing the same in enableDefaultTyping.", "author": "johnjcool", "createdAt": "2020-05-14T07:08:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzI5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxNTc1MQ==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424915751", "bodyText": "Indeed. However, since that is unrelated to your changeset, please reset back to original. If you want to clean up deprecated instances such as this, that would be a separate PR and one that needs to be applied everywhere to be consistent.", "author": "mmoayyed", "createdAt": "2020-05-14T07:08:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzI5Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzY2MA==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424897660", "body": "Tag with `@Tag(\"RestfulApi\")`", "bodyText": "Tag with @Tag(\"RestfulApi\")", "bodyHTML": "<p dir=\"auto\">Tag with <code>@Tag(\"RestfulApi\")</code></p>", "author": "mmoayyed", "createdAt": "2020-05-14T06:27:30Z", "path": "support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/RestResourceUtilsTests.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.apereo.cas.support.rest;\n+\n+import lombok.val;\n+import org.apereo.cas.authentication.AuthenticationException;\n+import org.apereo.cas.authentication.adaptive.UnauthorizedAuthenticationException;\n+import org.apereo.cas.support.rest.resources.RestResourceUtils;\n+import org.apereo.cas.util.CollectionUtils;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.http.ResponseEntity;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.HashMap;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+/**\n+ * This is {@link RestResourceUtilsTests}.\n+ *\n+ * @author john.j.cool\n+ * @since 6.1.6\n+ */\n+@ExtendWith(MockitoExtension.class)\n+public class RestResourceUtilsTests {", "originalCommit": "ef736679dddcf791d36da49bae0b1466119cb0a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NzcyMw==", "url": "https://github.com/apereo/cas/pull/4840#discussion_r424897723", "body": "```suggestion\r\n        val response = RestResourceUtils.createResponseEntityForAuthnFailure(\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ResponseEntity<String> response = RestResourceUtils.createResponseEntityForAuthnFailure(\n          \n          \n            \n                    val response = RestResourceUtils.createResponseEntityForAuthnFailure(", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\"><span class=\"x x-first\">ResponseEntity&lt;</span><span class=\"pl-smi x\">String</span><span class=\"x x-last\">&gt;</span></span> response <span class=\"pl-k\">=</span> <span class=\"pl-smi\">RestResourceUtils</span><span class=\"pl-k\">.</span>createResponseEntityForAuthnFailure(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">val</span> response <span class=\"pl-k\">=</span> <span class=\"pl-smi\">RestResourceUtils</span><span class=\"pl-k\">.</span>createResponseEntityForAuthnFailure(</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mmoayyed", "createdAt": "2020-05-14T06:27:41Z", "path": "support/cas-server-support-rest/src/test/java/org/apereo/cas/support/rest/RestResourceUtilsTests.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.apereo.cas.support.rest;\n+\n+import lombok.val;\n+import org.apereo.cas.authentication.AuthenticationException;\n+import org.apereo.cas.authentication.adaptive.UnauthorizedAuthenticationException;\n+import org.apereo.cas.support.rest.resources.RestResourceUtils;\n+import org.apereo.cas.util.CollectionUtils;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.http.ResponseEntity;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import java.util.HashMap;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+\n+/**\n+ * This is {@link RestResourceUtilsTests}.\n+ *\n+ * @author john.j.cool\n+ * @since 6.1.6\n+ */\n+@ExtendWith(MockitoExtension.class)\n+public class RestResourceUtilsTests {\n+\n+    @Mock\n+    private ApplicationContext context;\n+\n+    @BeforeEach\n+    public void before() {\n+        MockitoAnnotations.initMocks(this);\n+        doReturn(\"test\").when(context)\n+                .getMessage(any(), any(), any());\n+    }\n+\n+    @Test\n+    public void verifyNoFrameworkClassSendToClient() {\n+        val request = mock(HttpServletRequest.class);\n+        val msg = \"test\";\n+        val map = CollectionUtils.<String, Throwable>wrap(\n+                UnauthorizedAuthenticationException.class.getSimpleName(),\n+                new UnauthorizedAuthenticationException(msg)\n+        );\n+\n+        ResponseEntity<String> response = RestResourceUtils.createResponseEntityForAuthnFailure(", "originalCommit": "ef736679dddcf791d36da49bae0b1466119cb0a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "48f5914006b0bc85d29b09ba77781323e0913a6d", "url": "https://github.com/apereo/cas/commit/48f5914006b0bc85d29b09ba77781323e0913a6d", "message": "adding feedback", "committedDate": "2020-05-14T07:06:44Z", "type": "commit"}, {"oid": "047fc382a877c6c46184106de8e08ec7c27af04c", "url": "https://github.com/apereo/cas/commit/047fc382a877c6c46184106de8e08ec7c27af04c", "message": "reverted deprecated fix.", "committedDate": "2020-05-14T07:12:44Z", "type": "commit"}, {"oid": "362df3031b21e5c1e11dd5c516960b29f9ebb220", "url": "https://github.com/apereo/cas/commit/362df3031b21e5c1e11dd5c516960b29f9ebb220", "message": "fixing checkstyle errors", "committedDate": "2020-05-14T16:23:48Z", "type": "commit"}, {"oid": "ce4ced7adb235abf176a9f776ae264fb955640fa", "url": "https://github.com/apereo/cas/commit/ce4ced7adb235abf176a9f776ae264fb955640fa", "message": "Merge branch '6.1.x' into bugfix/hide-sensitive-framework-information", "committedDate": "2020-05-22T09:39:00Z", "type": "commit"}, {"oid": "a0930773c4b15c690c33ef45e45034a127e2ddf0", "url": "https://github.com/apereo/cas/commit/a0930773c4b15c690c33ef45e45034a127e2ddf0", "message": "fixing test exception", "committedDate": "2020-05-25T16:42:07Z", "type": "commit"}, {"oid": "13e81ca970aab4d728aaaa57650783037de50222", "url": "https://github.com/apereo/cas/commit/13e81ca970aab4d728aaaa57650783037de50222", "message": "fixing tests", "committedDate": "2020-05-26T08:38:09Z", "type": "commit"}]}