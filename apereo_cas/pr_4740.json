{"pr_number": 4740, "pr_title": "Surrogate authentication NPE fix for REST protocol", "pr_author": "CardoEggert", "pr_createdAt": "2020-02-28T23:23:08Z", "pr_url": "https://github.com/apereo/cas/pull/4740", "merge_commit": "172ab78f1b91f7a476bfd3cbc5800282b272d71f", "timeline": [{"oid": "2484245fe3830ecd1663666fa0bc5d186c88db62", "url": "https://github.com/apereo/cas/commit/2484245fe3830ecd1663666fa0bc5d186c88db62", "message": "Surrogate authentication NPE fix for basic REST protocol login", "committedDate": "2020-02-28T22:58:17Z", "type": "commit"}, {"oid": "7688d8e488931bbb8007502fde203da19b44244e", "url": "https://github.com/apereo/cas/commit/7688d8e488931bbb8007502fde203da19b44244e", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-02-29T07:17:28Z", "type": "commit"}, {"oid": "d5099b0c1acc2f902258099785c980e2038225b6", "url": "https://github.com/apereo/cas/commit/d5099b0c1acc2f902258099785c980e2038225b6", "message": "Remove unused import", "committedDate": "2020-02-29T07:35:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMDI0Nw==", "url": "https://github.com/apereo/cas/pull/4740#discussion_r386010247", "body": "```suggestion\r\n            LOGGER.trace(\"Not a surrogate authentication attempt, returning parent class credentials\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.debug(\"Not a surrogate authentication attempt, returning parent class credentials\");\n          \n          \n            \n                        LOGGER.trace(\"Not a surrogate authentication attempt, returning parent class credentials\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not a surrogate authentication attempt, returning parent class credentials<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Not a surrogate authentication attempt, returning parent class credentials<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mmoayyed", "createdAt": "2020-02-29T07:49:19Z", "path": "support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java", "diffHunk": "@@ -86,6 +86,10 @@ public int getOrder() {\n             return credentials;\n         }\n         val credential = extractCredential(request, credentials);\n+        if (credential == null) {\n+            LOGGER.debug(\"Not a surrogate authentication attempt, returning parent class credentials\");", "originalCommit": "d5099b0c1acc2f902258099785c980e2038225b6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "5b2d2ef0cd349fe8a3f0e2bb0b1823129dd14554", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex 5617f84f1f..fb78bce86b 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -87,7 +87,7 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n         }\n         val credential = extractCredential(request, credentials);\n         if (credential == null) {\n-            LOGGER.debug(\"Not a surrogate authentication attempt, returning parent class credentials\");\n+            LOGGER.trace(\"Not a surrogate authentication attempt, returning parent class credentials\");\n             return credentials;\n         }\n         val surrogateAccounts = surrogateAuthenticationService.getEligibleAccountsForSurrogateToProxy(credential.getId());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "172ab78f1b91f7a476bfd3cbc5800282b272d71f", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex 5617f84f1f..fb78bce86b 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -87,7 +87,7 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n         }\n         val credential = extractCredential(request, credentials);\n         if (credential == null) {\n-            LOGGER.debug(\"Not a surrogate authentication attempt, returning parent class credentials\");\n+            LOGGER.trace(\"Not a surrogate authentication attempt, returning parent class credentials\");\n             return credentials;\n         }\n         val surrogateAccounts = surrogateAuthenticationService.getEligibleAccountsForSurrogateToProxy(credential.getId());\n", "next_change": {"commit": "1863d2aafc0020322920d8751a4408f575bd7600", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex fb78bce86b..d5bdea0d3c 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -92,7 +92,8 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n         }\n         val surrogateAccounts = surrogateAuthenticationService.getEligibleAccountsForSurrogateToProxy(credential.getId());\n         if (!surrogateAccounts.contains(credential.getSurrogateUsername())) {\n-            throw new SurrogateAuthenticationException(\"Unable to authorize surrogate authentication request for \" + credential.getSurrogateUsername());\n+            throw new SurrogateAuthenticationException(\n+                \"Unable to authorize surrogate authentication request for \" + credential.getSurrogateUsername());\n         }\n         return CollectionUtils.wrapList(credential);\n     }\n", "next_change": {"commit": "1de8bb0da02498482d91d4863338166db7a86d12", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex d5bdea0d3c..d2760003d3 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -72,29 +95,4 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n         }\n         return null;\n     }\n-\n-    @Override\n-    public int getOrder() {\n-        return super.getOrder() - 1;\n-    }\n-\n-    @SneakyThrows\n-    @Override\n-    public List<Credential> fromRequest(final HttpServletRequest request, final MultiValueMap<String, String> requestBody) {\n-        val credentials = super.fromRequest(request, requestBody);\n-        if (credentials.isEmpty()) {\n-            return credentials;\n-        }\n-        val credential = extractCredential(request, credentials);\n-        if (credential == null) {\n-            LOGGER.trace(\"Not a surrogate authentication attempt, returning parent class credentials\");\n-            return credentials;\n-        }\n-        val surrogateAccounts = surrogateAuthenticationService.getEligibleAccountsForSurrogateToProxy(credential.getId());\n-        if (!surrogateAccounts.contains(credential.getSurrogateUsername())) {\n-            throw new SurrogateAuthenticationException(\n-                \"Unable to authorize surrogate authentication request for \" + credential.getSurrogateUsername());\n-        }\n-        return CollectionUtils.wrapList(credential);\n-    }\n }\n", "next_change": {"commit": "5d679c7605e8aa6dfcc3afaf96f55eab455c01c3", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex d2760003d3..677d8a2e9c 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -90,7 +90,7 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n             val realUsername = username.substring(username.indexOf(properties.getSeparator()) + properties.getSeparator().length());\n             sc.setUsername(realUsername);\n             sc.setSurrogateUsername(surrogateUsername);\n-            sc.setPassword(credential.getPassword());\n+            sc.setPassword(credential.toPassword());\n             return sc;\n         }\n         return null;\n", "next_change": {"commit": "dee32a4b0968827fb64c456a071c0fa9cb617117", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex 677d8a2e9c..61d67e5ddc 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -90,7 +90,7 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n             val realUsername = username.substring(username.indexOf(properties.getSeparator()) + properties.getSeparator().length());\n             sc.setUsername(realUsername);\n             sc.setSurrogateUsername(surrogateUsername);\n-            sc.setPassword(credential.toPassword());\n+            sc.assignPassword(credential.toPassword());\n             return sc;\n         }\n         return null;\n", "next_change": {"commit": "a64c9b2796f8792dec49cda25cfa9603bd8d7f6c", "changed_code": [{"header": "diff --git a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\nindex 61d67e5ddc..84dac8aa13 100644\n--- a/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n+++ b/support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java\n", "chunk": "@@ -57,41 +57,35 @@ public class SurrogateAuthenticationRestHttpRequestCredentialFactory extends Use\n             return credentials;\n         }\n         val surrogateAccounts = surrogateAuthenticationService.getImpersonationAccounts(credential.getId());\n-        if (!surrogateAccounts.contains(credential.getSurrogateUsername())) {\n+        val surrogateUsername = credential.getCredentialMetadata().getTrait(SurrogateCredentialTrait.class)\n+            .map(SurrogateCredentialTrait::getSurrogateUsername)\n+            .orElseThrow();\n+        if (!surrogateAccounts.contains(surrogateUsername)) {\n             throw new SurrogateAuthenticationException(\n-                \"Unable to authorize surrogate authentication request for \" + credential.getSurrogateUsername());\n+                \"Unable to authorize surrogate authentication request for \" + surrogateUsername);\n         }\n         return CollectionUtils.wrapList(credential);\n     }\n \n-    /**\n-     * Extract credential surrogate username password.\n-     *\n-     * @param request     the request\n-     * @param credentials the credentials\n-     * @return the surrogate username password credential\n-     * @throws Exception the exception\n-     */\n-    protected SurrogateUsernamePasswordCredential extractCredential(final HttpServletRequest request,\n-                                                                    final List<Credential> credentials) throws Exception {\n-        val sc = new SurrogateUsernamePasswordCredential();\n-        val credential = UsernamePasswordCredential.class.cast(credentials.get(0));\n-        BeanUtils.copyProperties(sc, credential);\n+    protected Credential extractCredential(final HttpServletRequest request,\n+                                           final List<Credential> credentials) throws Exception {\n+        val credential = (MutableCredential) credentials.get(0);\n+        if (credential != null) {\n+            var surrogateUsername = request.getHeader(REQUEST_HEADER_SURROGATE_PRINCIPAL);\n+            if (StringUtils.isNotBlank(surrogateUsername)) {\n+                LOGGER.debug(\"Request surrogate principal [{}]\", surrogateUsername);\n+                credential.getCredentialMetadata().addTrait(new SurrogateCredentialTrait(surrogateUsername));\n+                return credential;\n+            }\n \n-        val surrogatePrincipal = request.getHeader(REQUEST_HEADER_SURROGATE_PRINCIPAL);\n-        if (StringUtils.isNotBlank(surrogatePrincipal)) {\n-            LOGGER.debug(\"Request surrogate principal [{}]\", surrogatePrincipal);\n-            sc.setSurrogateUsername(surrogatePrincipal);\n-            return sc;\n-        }\n-        val username = credential.getUsername();\n-        if (username.contains(properties.getSeparator())) {\n-            val surrogateUsername = username.substring(0, username.indexOf(properties.getSeparator()));\n-            val realUsername = username.substring(username.indexOf(properties.getSeparator()) + properties.getSeparator().length());\n-            sc.setUsername(realUsername);\n-            sc.setSurrogateUsername(surrogateUsername);\n-            sc.assignPassword(credential.toPassword());\n-            return sc;\n+            val username = credential.getId();\n+            if (username.contains(properties.getSeparator())) {\n+                surrogateUsername = username.substring(0, username.indexOf(properties.getSeparator()));\n+                val realUsername = username.substring(username.indexOf(properties.getSeparator()) + properties.getSeparator().length());\n+                credential.setId(realUsername);\n+                credential.getCredentialMetadata().addTrait(new SurrogateCredentialTrait(surrogateUsername));\n+                return credential;\n+            }\n         }\n         return null;\n     }\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "172ab78f1b91f7a476bfd3cbc5800282b272d71f", "message": "Merge commit", "committedDate": null}, {"oid": "1863d2aafc0020322920d8751a4408f575bd7600", "committedDate": "2020-12-06 12:33:49 +0400", "message": "add tests"}, {"oid": "1de8bb0da02498482d91d4863338166db7a86d12", "committedDate": "2022-04-08 11:04:40 +0400", "message": "remove sneakythrows to improve coverage"}, {"oid": "5588505e2f99ebb744195f8c7722c0a6c59b29c8", "committedDate": "2022-08-02 08:00:50 +0400", "message": "additional tests for impersonation w/ groovy"}, {"oid": "5d679c7605e8aa6dfcc3afaf96f55eab455c01c3", "committedDate": "2022-08-05 14:24:37 +0400", "message": "use character array instead of string for passwords"}, {"oid": "dee32a4b0968827fb64c456a071c0fa9cb617117", "committedDate": "2022-08-06 15:30:35 +0400", "message": "fix test failures"}, {"oid": "0efaf81819b473621ee4829690c13f29d56b35b8", "committedDate": "2022-09-18 23:35:15 +0400", "message": "initial upgrade to boot v3 - wip"}, {"oid": "12ff42f72821f84668eea19fcead18a477a45d80", "committedDate": "2022-11-29 08:45:21 +0100", "message": "Rework surrogation design"}, {"oid": "fba4014952d8f0a876bade8f3061fd755488729c", "committedDate": "2022-12-01 11:05:10 +0400", "message": "Merge branch 'master' into pr-5552"}, {"oid": "a64c9b2796f8792dec49cda25cfa9603bd8d7f6c", "committedDate": "2022-12-02 00:37:23 +0400", "message": "rework impersonation via credential traits"}, {"oid": "4b3354960fd6c8a180459cf772b95b94b72a24a7", "committedDate": "2022-12-05 12:56:43 +0400", "message": "break down surrogate and notification APIs into separate modules"}]}, {"oid": "5b2d2ef0cd349fe8a3f0e2bb0b1823129dd14554", "url": "https://github.com/apereo/cas/commit/5b2d2ef0cd349fe8a3f0e2bb0b1823129dd14554", "message": "Update support/cas-server-support-surrogate-authentication/src/main/java/org/apereo/cas/authentication/rest/SurrogateAuthenticationRestHttpRequestCredentialFactory.java", "committedDate": "2020-02-29T07:49:24Z", "type": "commit"}, {"oid": "3a02cefd89b7699c6218dcbd6485dafeebebc04e", "url": "https://github.com/apereo/cas/commit/3a02cefd89b7699c6218dcbd6485dafeebebc04e", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-02-29T13:17:28Z", "type": "commit"}, {"oid": "9598f9ceb433024dbc067588f6205e2d2afc72b7", "url": "https://github.com/apereo/cas/commit/9598f9ceb433024dbc067588f6205e2d2afc72b7", "message": "Ldap utils checkstyle comment fix from apereocas-bot master merge", "committedDate": "2020-03-01T15:12:19Z", "type": "commit"}, {"oid": "9241bedfe16b82ac6641cfd88e45e77dbf7bdc86", "url": "https://github.com/apereo/cas/commit/9241bedfe16b82ac6641cfd88e45e77dbf7bdc86", "message": "Merge branch 'master' of github.com:CardoKambla/cas into surrogate-authentication-npe-fix", "committedDate": "2020-03-01T16:36:17Z", "type": "commit"}, {"oid": "aafa869d712006d2f40f0e80a6280d008a394313", "url": "https://github.com/apereo/cas/commit/aafa869d712006d2f40f0e80a6280d008a394313", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-01T18:37:04Z", "type": "commit"}, {"oid": "281fa384acf6c5cc9b95d627cfdee8237ff1af56", "url": "https://github.com/apereo/cas/commit/281fa384acf6c5cc9b95d627cfdee8237ff1af56", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-01T20:07:05Z", "type": "commit"}, {"oid": "e3707bccbc53756043c43f1aedf250f2adbdcac7", "url": "https://github.com/apereo/cas/commit/e3707bccbc53756043c43f1aedf250f2adbdcac7", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-01T21:13:09Z", "type": "commit"}, {"oid": "5ff2ee719671cd6f461a30e21b3f0844e3541a61", "url": "https://github.com/apereo/cas/commit/5ff2ee719671cd6f461a30e21b3f0844e3541a61", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-01T22:43:09Z", "type": "commit"}, {"oid": "b6f3f2de5baf47f8fa2749882ba6e68bce660691", "url": "https://github.com/apereo/cas/commit/b6f3f2de5baf47f8fa2749882ba6e68bce660691", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T00:13:09Z", "type": "commit"}, {"oid": "d7f050c9605c2d9b835ccd0ccbb3708917458a51", "url": "https://github.com/apereo/cas/commit/d7f050c9605c2d9b835ccd0ccbb3708917458a51", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T01:43:09Z", "type": "commit"}, {"oid": "9fe468ddc433e29c1fc1018552e9def467df5396", "url": "https://github.com/apereo/cas/commit/9fe468ddc433e29c1fc1018552e9def467df5396", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T03:13:10Z", "type": "commit"}, {"oid": "bccdbe0ebdadfbac7c13715ff9d4dfb6abc033bc", "url": "https://github.com/apereo/cas/commit/bccdbe0ebdadfbac7c13715ff9d4dfb6abc033bc", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T04:43:10Z", "type": "commit"}, {"oid": "ed26413b5d71f76e7613bd9875f47cba5f681062", "url": "https://github.com/apereo/cas/commit/ed26413b5d71f76e7613bd9875f47cba5f681062", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T06:13:09Z", "type": "commit"}, {"oid": "f4ce3b5dab9298e42c6dad0dc675690345afdd3b", "url": "https://github.com/apereo/cas/commit/f4ce3b5dab9298e42c6dad0dc675690345afdd3b", "message": "Merge branch 'master' into surrogate-authentication-npe-fix", "committedDate": "2020-03-02T07:43:09Z", "type": "commit"}]}