{"pr_number": 2631, "pr_title": "[java] NPathComplexity can't handle switch expressions", "pr_author": "adangel", "pr_createdAt": "2020-07-03T17:59:06Z", "pr_url": "https://github.com/pmd/pmd/pull/2631", "timeline": [{"oid": "db675c37d91e0fdf4b43f1651d485b42264c0451", "url": "https://github.com/pmd/pmd/commit/db675c37d91e0fdf4b43f1651d485b42264c0451", "message": "[java] NPathComplexity can't handle switch expressions\n\nFixes #2625", "committedDate": "2020-07-03T17:57:09Z", "type": "commit"}, {"oid": "25bfb9d90995b72706af8ba30117df92eb55f97b", "url": "https://github.com/pmd/pmd/commit/25bfb9d90995b72706af8ba30117df92eb55f97b", "message": "[java] Support switch labels/rules/expressions for CYCLO", "committedDate": "2020-07-03T17:57:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTU1MA==", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457465550", "body": "~I think, this would ignore the complexity of the block under the default label.~\r\n\r\nCorrection: it probably does handle it, since descendants are counted, but a test case would be nice. Here's one that uses a switch expression, which is relevant to the other comment\r\n```java\r\nclass Foo {\r\n    void foo(int x) {     // +1\r\n        foo(switch (x) {\r\n            default -> {\r\n                if (a) { // +1\r\n                    yield 1;\r\n                } else {\r\n                    yield 2;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}", "bodyText": "I think, this would ignore the complexity of the block under the default label.\nCorrection: it probably does handle it, since descendants are counted, but a test case would be nice. Here's one that uses a switch expression, which is relevant to the other comment\nclass Foo {\n    void foo(int x) {     // +1\n        foo(switch (x) {\n            default -> {\n                if (a) { // +1\n                    yield 1;\n                } else {\n                    yield 2;\n                }\n            }\n        });\n    }\n}", "bodyHTML": "<p dir=\"auto\"><del>I think, this would ignore the complexity of the block under the default label.</del></p>\n<p dir=\"auto\">Correction: it probably does handle it, since descendants are counted, but a test case would be nice. Here's one that uses a switch expression, which is relevant to the other comment</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class Foo {\n    void foo(int x) {     // +1\n        foo(switch (x) {\n            default -&gt; {\n                if (a) { // +1\n                    yield 1;\n                } else {\n                    yield 2;\n                }\n            }\n        });\n    }\n}\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">Foo</span> {\n    <span class=\"pl-k\">void</span> <span class=\"pl-en\">foo</span>(<span class=\"pl-k\">int</span> <span class=\"pl-v\">x</span>) {     <span class=\"pl-c\"><span class=\"pl-c\">//</span> +1</span>\n        foo(<span class=\"pl-k\">switch</span> (x) {\n            <span class=\"pl-k\">default</span> <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {\n                <span class=\"pl-k\">if</span> (a) { <span class=\"pl-c\"><span class=\"pl-c\">//</span> +1</span>\n                    yield <span class=\"pl-c1\">1</span>;\n                } <span class=\"pl-k\">else</span> {\n                    yield <span class=\"pl-c1\">2</span>;\n                }\n            }\n        });\n    }\n}</pre></div>", "author": "oowekyala", "createdAt": "2020-07-20T14:57:45Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+\n+        for (ASTSwitchLabeledRule rule : node.findChildrenOfType(ASTSwitchLabeledRule.class)) {\n+            ASTSwitchLabel label = rule.getFirstChildOfType(ASTSwitchLabel.class);\n+            if (label.isDefault()) {\n+                continue;", "originalCommit": "25bfb9d90995b72706af8ba30117df92eb55f97b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMTQzOA==", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r458321438", "bodyText": "I'll try to add this case on Thursday....", "author": "adangel", "createdAt": "2020-07-21T19:00:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTU1MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NzQwNA==", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r457467404", "body": "I see, all this applies only to switch statements? You added support for non-fallthrough switch branches, but this still needs to handle switch expressions", "bodyText": "I see, all this applies only to switch statements? You added support for non-fallthrough switch branches, but this still needs to handle switch expressions", "bodyHTML": "<p dir=\"auto\">I see, all this applies only to switch statements? You added support for non-fallthrough switch branches, but this still needs to handle switch expressions</p>", "author": "oowekyala", "createdAt": "2020-07-20T14:59:43Z", "path": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/internal/CycloVisitor.java", "diffHunk": "@@ -65,13 +67,24 @@ public Object visit(ASTSwitchStatement node, Object data) {\n             }\n \n             if (considerBooleanPaths) {\n-                ((MutableInt) data).increment();\n+                ((MutableInt) data).add(label.findChildrenOfType(ASTExpression.class).size());\n             } else if (node.getNumChildren() > 1 + label.getIndexInParent()\n                     && node.getChild(label.getIndexInParent() + 1) instanceof ASTBlockStatement) {\n                 // an empty label is only counted if we count boolean paths\n                 ((MutableInt) data).increment();\n             }\n         }\n+", "originalCommit": "25bfb9d90995b72706af8ba30117df92eb55f97b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxNDI5Mw==", "url": "https://github.com/pmd/pmd/pull/2631#discussion_r459414293", "bodyText": "I think the other test case was not sufficient. Eg the following fails, the complexity of the switch expr is not counted:\nclass Foo {\n    int bar() { return 1; }\n    void foo(int i) {                    // +1\n        int x = switch (i) {\n            case 1, 2, 3 -> bar();  // +3\n            case 4       -> bar();  // +1\n            default -> bar();\n        };\n    }\n}\nI'll push a fix", "author": "oowekyala", "createdAt": "2020-07-23T12:34:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NzQwNA=="}], "type": "inlineReview"}, {"oid": "677bfd4ae4e29fa63d14c23b3719aa8b7af5be5e", "url": "https://github.com/pmd/pmd/commit/677bfd4ae4e29fa63d14c23b3719aa8b7af5be5e", "message": "[java] Added additional test case for CycloMetric\n\nAnd fixed comments in test cases\n\nRefs #2631", "committedDate": "2020-07-23T07:46:50Z", "type": "commit"}, {"oid": "7941d8d6102e41208bff3f18f40b0f54347e8f91", "url": "https://github.com/pmd/pmd/commit/7941d8d6102e41208bff3f18f40b0f54347e8f91", "message": "Merge branch 'master' into issue-2625", "committedDate": "2020-07-23T07:57:57Z", "type": "commit"}, {"oid": "fbeaa5bc748613b13455cfb2a2b65a1d7b5b0928", "url": "https://github.com/pmd/pmd/commit/fbeaa5bc748613b13455cfb2a2b65a1d7b5b0928", "message": "Merge branch 'master' into issue-2625", "committedDate": "2020-07-23T12:26:33Z", "type": "commit"}, {"oid": "9a47d658e690e08b2b73e8f70c088730ff15c551", "url": "https://github.com/pmd/pmd/commit/9a47d658e690e08b2b73e8f70c088730ff15c551", "message": "Handle switch exprs properly", "committedDate": "2020-07-23T12:42:29Z", "type": "commit"}, {"oid": "6a9a834c672dc241053b5aeff5eaa5e199e30746", "url": "https://github.com/pmd/pmd/commit/6a9a834c672dc241053b5aeff5eaa5e199e30746", "message": "Same for NPath", "committedDate": "2020-07-23T12:51:26Z", "type": "commit"}]}