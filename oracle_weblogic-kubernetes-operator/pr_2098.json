{"pr_number": 2098, "pr_title": "negative test for changing domain name using MII dynamic update ", "pr_author": "xiancao", "pr_createdAt": "2020-12-14T17:21:49Z", "pr_url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098", "timeline": [{"oid": "b8773f3a7d8999b74aade6cde797b74db81c2956", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/b8773f3a7d8999b74aade6cde797b74db81c2956", "message": "dynamic update change domain name (unsupported)", "committedDate": "2020-12-11T22:24:02Z", "type": "commit"}, {"oid": "908292ff81ee8adc9a9a7812c99e67fa7f97a5e3", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/908292ff81ee8adc9a9a7812c99e67fa7f97a5e3", "message": "cleanup", "committedDate": "2020-12-12T00:02:59Z", "type": "commit"}, {"oid": "bb8a95d7ea92e39e89817b85277e02f798c55846", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/bb8a95d7ea92e39e89817b85277e02f798c55846", "message": "Merge branch 'dynamicupdate' of https://github.com/oracle/weblogic-kubernetes-operator into xc-86195", "committedDate": "2020-12-14T19:12:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5ODM0NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542798344", "body": "> \r\n```suggestion\r\n```", "bodyText": "Suggested change", "bodyHTML": "<blockquote>\n</blockquote>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vanajamukkara", "createdAt": "2020-12-14T21:17:26Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());\n+    return introspectorPod.getMetadata().getName();\n+  }\n+\n+  private boolean podLogContainsExpectedErrorMsg(String introspectJobName, String namespace, String errormsg) {\n+", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5ODU3NA==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542798574", "body": "```suggestion\r\n```", "bodyText": "Suggested change", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vanajamukkara", "createdAt": "2020-12-14T21:17:40Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());\n+    return introspectorPod.getMetadata().getName();\n+  }\n+\n+  private boolean podLogContainsExpectedErrorMsg(String introspectJobName, String namespace, String errormsg) {\n+\n+    String introspectPodName = getPodNameFromJobName(namespace, introspectJobName);\n+", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5OTQ2Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542799466", "body": "add message", "bodyText": "add message", "bodyHTML": "<p dir=\"auto\">add message</p>", "author": "vanajamukkara", "createdAt": "2020-12-14T21:18:31Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc5OTU5Ng==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542799596", "body": "add message", "bodyText": "add message", "bodyHTML": "<p dir=\"auto\">add message</p>", "author": "vanajamukkara", "createdAt": "2020-12-14T21:18:40Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -453,6 +516,65 @@ private void verifyIntrospectorRuns() {\n     checkPodDoesNotExist(introspectPodName, domainUid, domainNamespace);\n   }\n \n+  private void verifyIntrospectorFails(String expectedErrorMsg) {\n+    // verify the introspector pod is created\n+    logger.info(\"Verifying introspector pod is created\");\n+    String introspectJobName = getIntrospectJobName(domainUid);\n+    checkPodExists(introspectJobName, domainUid, domainNamespace);\n+\n+    // check whether the introspector log contains the expected error message\n+    ConditionFactory withRetryPolicy = with().pollDelay(2, SECONDS)\n+        .and().with().pollInterval(2, SECONDS)\n+        .atMost(2, MINUTES).await();\n+\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for the log of introspector pod contains the expected error msg {0}. \"\n+                        + \"Elapsed time {1}ms, remaining time {2}ms\",\n+                    expectedErrorMsg,\n+                    condition.getElapsedTimeInMS(),\n+                    condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podLogContainsExpectedErrorMsg(introspectJobName, domainNamespace, expectedErrorMsg));\n+\n+    // check the status phase of the introspector pod is failed\n+    withRetryPolicy\n+        .conditionEvaluationListener(\n+            condition ->\n+                logger.info(\n+                    \"Checking for status phase of introspector pod is failed. \"\n+                        + \"Elapsed time {0}ms, remaining time {1}ms\",\n+                    condition.getElapsedTimeInMS(), condition.getRemainingTimeInMS()))\n+        .until(() ->\n+            podStatusPhaseContainsString(domainNamespace, introspectJobName, \"Failed\"));\n+  }\n+\n+  private String getPodNameFromJobName(String namespace, String jobName) {\n+    String labelSelector = String.format(\"weblogic.domainUID in (%s)\", domainUid);\n+    V1Pod introspectorPod = assertDoesNotThrow(() -> getPod(namespace, labelSelector, jobName));\n+    assertNotNull(introspectorPod);\n+    assertNotNull(introspectorPod.getMetadata());", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgwMDAzMg==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r542800032", "body": "```suggestion\r\n```", "bodyText": "Suggested change", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"506\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vanajamukkara", "createdAt": "2020-12-14T21:19:03Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -443,7 +452,61 @@ public void testMiiRemoveTarget() {\n \n   }\n \n+  /**\n+   * Negative test: Changing the domain name using mii dynamic update.\n+   */\n+  @Test\n+  @Order(5)\n+  @DisplayName(\"Negative test changing domain name using mii dynamic update\")\n+  public void testMiiChangeDomainName() {\n+\n+    // This test uses the WebLogic domain created in BeforeAll method\n+    // BeforeEach method ensures that the server pods are running\n+\n+    // write sparse yaml to file\n+    Path pathToChangeDomainNameYaml = Paths.get(WORK_DIR + \"/changedomainname.yaml\");\n+    String yamlToChangeDomainName = \"topology:\\n\"\n+        + \"  name: newdomainname\\n\"\n+        + \"  AdminServerName: 'admin-server'\";\n \n+    assertDoesNotThrow(() -> Files.write(pathToChangeDomainNameYaml, yamlToChangeDomainName.getBytes()));\n+\n+    // Replace contents of an existing configMap\n+    replaceConfigMapWithModelFiles(configMapName, domainUid, domainNamespace,\n+        Arrays.asList(pathToChangeDomainNameYaml.toString()), withStandardRetryPolicy);\n+\n+    // Patch a running domain with introspectVersion.\n+    patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace);\n+\n+    // Verifying introspector pod is created and failed\n+    logger.info(\"verifying the introspector failed and the pod log contains the expected error msg\");\n+    String expectedErrorMsg = \"name is not one of the attribute names allowed in model location topology\";\n+    verifyIntrospectorFails(expectedErrorMsg);\n+\n+    // verify the domain status message contains the error msg\n+    logger.info(\"verifying the domain status message contains the expected error msg\");\n+    Domain miiDynamicUpdateDomain =\n+        assertDoesNotThrow(() -> getDomainCustomResource(domainUid, domainNamespace));\n+\n+    assertTrue(miiDynamicUpdateDomain.getStatus().getMessage().contains(expectedErrorMsg),\n+        String.format(\"failed to find the error msg %s in domain status message\", expectedErrorMsg));\n+\n+    // check the domain status condition message contains the error msg\n+    logger.info(\"verifying the domain status condition message contains the expected error msg\");\n+    assertTrue(domainStatusConditionMsgContainsErrorMsg(miiDynamicUpdateDomain, expectedErrorMsg),\n+        String.format(\"domain status condition does not contain error msg %s\", expectedErrorMsg));\n+  }\n+\n+  private boolean domainStatusConditionMsgContainsErrorMsg(Domain domain, String errorMsg) {\n+    for (DomainCondition domainCondition : domain.getStatus().getConditions()) {\n+      if (domainCondition.getType().equalsIgnoreCase(\"Failed\")\n+          && domainCondition.getMessage().contains(errorMsg)) {\n+        return true;\n+      }\n+    }\n+", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NjcxMQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r543446711", "body": "I don't think this is the correct message.  Are you wait for the latest WDT release 1.9.8 (not yet released but should be today).   ", "bodyText": "I don't think this is the correct message.  Are you wait for the latest WDT release 1.9.8 (not yet released but should be today).", "bodyHTML": "<p dir=\"auto\">I don't think this is the correct message.  Are you wait for the latest WDT release 1.9.8 (not yet released but should be today).</p>", "author": "jshum2479", "createdAt": "2020-12-15T15:30:33Z", "path": "integration-tests/src/test/java/oracle/weblogic/kubernetes/ItMiiDynamicUpdate.java", "diffHunk": "@@ -443,7 +452,61 @@ public void testMiiRemoveTarget() {\n \n   }\n \n+  /**\n+   * Negative test: Changing the domain name using mii dynamic update.\n+   */\n+  @Test\n+  @Order(5)\n+  @DisplayName(\"Negative test changing domain name using mii dynamic update\")\n+  public void testMiiChangeDomainName() {\n+\n+    // This test uses the WebLogic domain created in BeforeAll method\n+    // BeforeEach method ensures that the server pods are running\n+\n+    // write sparse yaml to file\n+    Path pathToChangeDomainNameYaml = Paths.get(WORK_DIR + \"/changedomainname.yaml\");\n+    String yamlToChangeDomainName = \"topology:\\n\"\n+        + \"  name: newdomainname\\n\"\n+        + \"  AdminServerName: 'admin-server'\";\n \n+    assertDoesNotThrow(() -> Files.write(pathToChangeDomainNameYaml, yamlToChangeDomainName.getBytes()));\n+\n+    // Replace contents of an existing configMap\n+    replaceConfigMapWithModelFiles(configMapName, domainUid, domainNamespace,\n+        Arrays.asList(pathToChangeDomainNameYaml.toString()), withStandardRetryPolicy);\n+\n+    // Patch a running domain with introspectVersion.\n+    patchDomainResourceWithNewIntrospectVersion(domainUid, domainNamespace);\n+\n+    // Verifying introspector pod is created and failed\n+    logger.info(\"verifying the introspector failed and the pod log contains the expected error msg\");\n+    String expectedErrorMsg = \"name is not one of the attribute names allowed in model location topology\";", "originalCommit": "bb8a95d7ea92e39e89817b85277e02f798c55846", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY3NTczOQ==", "url": "https://github.com/oracle/weblogic-kubernetes-operator/pull/2098#discussion_r543675739", "bodyText": "I tried with latest WDT from https://objectstorage.us-phoenix-1.oraclecloud.com/n/weblogick8s/b/wko-system-test-files/o/weblogic-deploy-master.zip. I got the same error msg. What's the new error msg I should get?", "author": "xiancao", "createdAt": "2020-12-15T20:48:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ0NjcxMQ=="}], "type": "inlineReview"}, {"oid": "9db6586aed2d816eceddf1f26c3110a8b4bda41c", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/9db6586aed2d816eceddf1f26c3110a8b4bda41c", "message": "resolve merge conflicts and address Vanaja's comments", "committedDate": "2020-12-15T20:49:56Z", "type": "commit"}, {"oid": "abd1e89276f3f4b3144e8063befd2d413910be6e", "url": "https://github.com/oracle/weblogic-kubernetes-operator/commit/abd1e89276f3f4b3144e8063befd2d413910be6e", "message": "Merge branch 'dynamicupdate' of https://github.com/oracle/weblogic-kubernetes-operator into xc-86195", "committedDate": "2020-12-15T20:50:19Z", "type": "commit"}]}