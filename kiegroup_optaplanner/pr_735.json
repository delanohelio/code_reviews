{"pr_number": 735, "pr_title": "PLANNER-1934 Set custom constraint weights only for configurable cons\u2026", "pr_author": "triceo", "pr_createdAt": "2020-04-07T08:59:47Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/735", "timeline": [{"oid": "ada32cd020a860a412809c3f883e3016dc286b79", "url": "https://github.com/kiegroup/optaplanner/commit/ada32cd020a860a412809c3f883e3016dc286b79", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints", "committedDate": "2020-04-07T09:26:20Z", "type": "forcePushed"}, {"oid": "21d634935921c623b041919c3564de38d4804d7a", "url": "https://github.com/kiegroup/optaplanner/commit/21d634935921c623b041919c3564de38d4804d7a", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints", "committedDate": "2020-04-07T09:27:42Z", "type": "forcePushed"}, {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "url": "https://github.com/kiegroup/optaplanner/commit/e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints", "committedDate": "2020-04-07T10:42:36Z", "type": "commit"}, {"oid": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "url": "https://github.com/kiegroup/optaplanner/commit/e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "message": "PLANNER-1934 Set custom constraint weights only for configurable constraints", "committedDate": "2020-04-07T10:42:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMTAyNg==", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404731026", "body": "Extra \"be\" in the sentence.\r\n", "bodyText": "Extra \"be\" in the sentence.", "bodyHTML": "<p dir=\"auto\">Extra \"be\" in the sentence.</p>", "author": "yurloc", "createdAt": "2020-04-07T11:18:30Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/stream/common/AbstractConstraint.java", "diffHunk": "@@ -32,17 +32,31 @@\n     protected final String constraintName;\n     private final Function<Solution_, Score<?>> constraintWeightExtractor;\n     protected final ScoreImpactType scoreImpactType;\n+    private final boolean isConstraintWeightConfigurable;\n \n     protected AbstractConstraint(ConstraintFactory constraintFactory, String constraintPackage, String constraintName,\n-            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType) {\n+            Function<Solution_, Score<?>> constraintWeightExtractor, ScoreImpactType scoreImpactType,\n+            boolean isConstraintWeightConfigurable) {\n         this.constraintFactory = constraintFactory;\n         this.constraintPackage = constraintPackage;\n         this.constraintName = constraintName;\n         this.constraintWeightExtractor = constraintWeightExtractor;\n         this.scoreImpactType = scoreImpactType;\n+        this.isConstraintWeightConfigurable = isConstraintWeightConfigurable;\n     }\n \n-    public Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+    public final Score<?> extractConstraintWeight(Solution_ workingSolution) {\n+        if (isConstraintWeightConfigurable && workingSolution == null) {\n+            /*\n+             * In constraint verifier API, we allow for testing constraint providers without having a planning solution.\n+             * However, constraint weights may be configurable and in that case the solution is be required to read the", "originalCommit": "e450b0f3915e1222fa5da9b35d71e49a1b752fc5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2bf4d1b7cac8691253dea204691434a7e611bd59", "url": "https://github.com/kiegroup/optaplanner/commit/2bf4d1b7cac8691253dea204691434a7e611bd59", "message": "Fix a comment", "committedDate": "2020-04-07T11:32:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwODQyMQ==", "url": "https://github.com/kiegroup/optaplanner/pull/735#discussion_r404808421", "body": "(soft) 0) do we need the prefix \"constraitnProvider\"? It in the class ...ConstraintProviderTest\r\n1) What method are we testing? Answer: \"given\". I 'd start with that.\r\n2) I am not a fan of having the word \"test\" in methods that already have @Test annotation.\r\n3) Today I understand why this is an \"integration\" test. Because it does more integration than the other unit tests that just test one constraint. In 6 months from now I'll have forgotten that. Can we naming it something like \"multipleConstraints\"?\r\n\r\nTherefore, these method name suggestions for these 2 tests:\r\ngivenSolutionMultipleConstraints\r\ngivenFactsMultipleConstraints\r\n", "bodyText": "(soft) 0) do we need the prefix \"constraitnProvider\"? It in the class ...ConstraintProviderTest\n\nWhat method are we testing? Answer: \"given\". I 'd start with that.\nI am not a fan of having the word \"test\" in methods that already have @test annotation.\nToday I understand why this is an \"integration\" test. Because it does more integration than the other unit tests that just test one constraint. In 6 months from now I'll have forgotten that. Can we naming it something like \"multipleConstraints\"?\n\nTherefore, these method name suggestions for these 2 tests:\ngivenSolutionMultipleConstraints\ngivenFactsMultipleConstraints", "bodyHTML": "<p dir=\"auto\">(soft) 0) do we need the prefix \"constraitnProvider\"? It in the class ...ConstraintProviderTest</p>\n<ol dir=\"auto\">\n<li>What method are we testing? Answer: \"given\". I 'd start with that.</li>\n<li>I am not a fan of having the word \"test\" in methods that already have <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/test/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/test\">@test</a> annotation.</li>\n<li>Today I understand why this is an \"integration\" test. Because it does more integration than the other unit tests that just test one constraint. In 6 months from now I'll have forgotten that. Can we naming it something like \"multipleConstraints\"?</li>\n</ol>\n<p dir=\"auto\">Therefore, these method name suggestions for these 2 tests:<br>\ngivenSolutionMultipleConstraints<br>\ngivenFactsMultipleConstraints</p>", "author": "ge0ffrey", "createdAt": "2020-04-07T13:28:39Z", "path": "optaplanner-examples/src/test/java/org/optaplanner/examples/nqueens/solver/score/NQueensConstraintProviderTest.java", "diffHunk": "@@ -129,9 +129,20 @@ private static NQueens readSolution(String resource) throws IOException {\n     }\n \n     @Test\n-    public void constraintProviderIntegrationTest() throws IOException {\n+    public void constraintProviderSolutionBasedIntegrationTest() throws IOException {\n         constraintVerifier.verifyThat(constraintProvider)\n                 .given(readSolution(\"256queensScore-30.xml\"))\n                 .scores(SimpleScore.of(-30));\n     }\n+\n+    @Test\n+    public void constraintProviderFactBasedIntegrationTest() {", "originalCommit": "2bf4d1b7cac8691253dea204691434a7e611bd59", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e7b9a0888e03907d0ae2aec1efc46b254bddad9a", "url": "https://github.com/kiegroup/optaplanner/commit/e7b9a0888e03907d0ae2aec1efc46b254bddad9a", "message": "Fix test names", "committedDate": "2020-04-07T16:40:00Z", "type": "commit"}]}