{"pr_number": 1016, "pr_title": "PLANNER-2240 Switch OptaPlanner to KieHelper", "pr_author": "triceo", "pr_createdAt": "2020-11-09T11:10:54Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/1016", "timeline": [{"oid": "2ab25d9192472c2ca0d046f4e80e07598355d81f", "url": "https://github.com/kiegroup/optaplanner/commit/2ab25d9192472c2ca0d046f4e80e07598355d81f", "message": "PLANNER-2240 Switch OptaPlanner to KieHelper", "committedDate": "2020-11-09T11:10:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNTI2OQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1016#discussion_r519735269", "body": "I 'd argue it needs to have the word \"scoreDRL\" in the message, because that is the breadcrumb that ties back into the solverConfig's `<scoreDRL>` line.\r\nIt's also important for us when we get support tickets, to know that they went through scoreDrl and not though kmodule.xml or CS.", "bodyText": "I 'd argue it needs to have the word \"scoreDRL\" in the message, because that is the breadcrumb that ties back into the solverConfig's <scoreDRL> line.\nIt's also important for us when we get support tickets, to know that they went through scoreDrl and not though kmodule.xml or CS.", "bodyHTML": "<p dir=\"auto\">I 'd argue it needs to have the word \"scoreDRL\" in the message, because that is the breadcrumb that ties back into the solverConfig's <code>&lt;scoreDRL&gt;</code> line.<br>\nIt's also important for us when we get support tickets, to know that they went through scoreDrl and not though kmodule.xml or CS.</p>", "author": "ge0ffrey", "createdAt": "2020-11-09T11:22:33Z", "path": "optaplanner-core/src/test/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactoryTest.java", "diffHunk": "@@ -140,16 +140,20 @@ void multipleScoreCalculations_throwsException() {\n \n     @Test\n     void nonExistingDrlResource_throwsException() {\n-        ScoreDirectorFactoryConfig config = new ScoreDirectorFactoryConfig().withScoreDrls(\"nonExisting.drl\");\n-        assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> buildTestdataScoreDirectoryFactory(config))\n-                .withMessageContaining(\"scoreDrl\");\n+        ScoreDirectorFactoryConfig config = new ScoreDirectorFactoryConfig()\n+                .withScoreDrls(\"nonExisting.drl\");\n+        assertThatExceptionOfType(IllegalStateException.class)\n+                .isThrownBy(() -> buildTestdataScoreDirectoryFactory(config))\n+                .withMessageContaining(\"DRL\");\n     }\n \n     @Test\n     void nonExistingDrlFile_throwsException() {\n-        ScoreDirectorFactoryConfig config = new ScoreDirectorFactoryConfig().withScoreDrlFiles(new File(\"nonExisting.drl\"));\n-        assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> buildTestdataScoreDirectoryFactory(config))\n-                .withMessageContaining(\"scoreDrlFile\");\n+        ScoreDirectorFactoryConfig config = new ScoreDirectorFactoryConfig()\n+                .withScoreDrlFiles(new File(\"nonExisting.drl\"));\n+        assertThatExceptionOfType(IllegalStateException.class)\n+                .isThrownBy(() -> buildTestdataScoreDirectoryFactory(config))\n+                .withMessageContaining(\"DRL\");", "originalCommit": "2ab25d9192472c2ca0d046f4e80e07598355d81f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MDQzNQ==", "url": "https://github.com/kiegroup/optaplanner/pull/1016#discussion_r519740435", "bodyText": "This code will only be used when they go through scoreDrl/scoreDrlFile.\nIn fact, I'd argue that saying \"DRL\" is better than saying \"scoreDrl or scoreDrlFile\".", "author": "triceo", "createdAt": "2020-11-09T11:31:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczNTI2OQ=="}], "type": "inlineReview"}, {"oid": "6cb59d180daa3ad3ced63ff663e10b01cb2b642c", "url": "https://github.com/kiegroup/optaplanner/commit/6cb59d180daa3ad3ced63ff663e10b01cb2b642c", "message": "Add test for an invalid DRL", "committedDate": "2020-11-09T11:45:04Z", "type": "commit"}, {"oid": "572a1173d71ddd06b255b377b96552dc2c44f9fd", "url": "https://github.com/kiegroup/optaplanner/commit/572a1173d71ddd06b255b377b96552dc2c44f9fd", "message": "Fix test", "committedDate": "2020-11-09T12:08:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc4NTY5NA==", "url": "https://github.com/kiegroup/optaplanner/pull/1016#discussion_r519785694", "body": "```suggestion\r\n            throw new IllegalStateException(\"There is an error in a scoreDrl or scoreDrlFile.\", ex);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalStateException(\"There are problems in your DRL.\", ex);\n          \n          \n            \n                        throw new IllegalStateException(\"There is an error in a scoreDrl or scoreDrlFile.\", ex);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalStateException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>There <span class=\"x x-first x-last\">are problems </span>in <span class=\"x x-first x-last\">your DRL</span>.<span class=\"pl-pds\">\"</span></span>, ex);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalStateException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>There <span class=\"x x-first x-last\">is an error </span>in <span class=\"x x-first x-last\">a scoreDrl or scoreDrlFile</span>.<span class=\"pl-pds\">\"</span></span>, ex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ge0ffrey", "createdAt": "2020-11-09T12:55:50Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactory.java", "diffHunk": "@@ -237,76 +232,32 @@ public ScoreDirectorFactoryFactory(ScoreDirectorFactoryConfig config) {\n             return null;\n         }\n \n-        KieServices kieServices = KieServices.Factory.get();\n-        KieResources kieResources = kieServices.getResources();\n-        KieFileSystem kieFileSystem = kieServices.newKieFileSystem();\n-\n-        writeScoreDrlListToKieFileSystem(kieFileSystem, kieResources, classLoader);\n-        writeScoreDrlFileListToKieFileSystem(kieFileSystem, kieResources);\n-\n-        // Can be overwritten by kieBaseConfigurationProperties\n-        KieModuleModel kmodel = kieServices.newKieModuleModel()\n-                .setConfigurationProperty(PropertySpecificOption.PROPERTY_NAME,\n-                        PropertySpecificOption.ALLOWED.toString());\n-        kieFileSystem.writeKModuleXML(kmodel.toXML());\n-\n-        KieBuilder kieBuilder = kieServices.newKieBuilder(kieFileSystem);\n-        kieBuilder.buildAll(ExecutableModelProject.class);\n-        Results results = kieBuilder.getResults();\n-        if (results.hasMessages(Message.Level.ERROR)) {\n-            throw new IllegalStateException(\"There are errors in a score DRL:\\n\" + results);\n-        } else if (results.hasMessages(Message.Level.WARNING)) {\n-            logger.warn(\"There are warnings in a score DRL:\\n{}\", results);\n-        }\n-        KieContainer kieContainer = kieServices.newKieContainer(kieBuilder.getKieModule().getReleaseId());\n-\n-        KieBaseConfiguration kieBaseConfiguration = buildKieBaseConfiguration(kieServices);\n-        KieBase kieBase = kieContainer.newKieBase(kieBaseConfiguration);\n-        if (generateDroolsTestOnError) {\n-            return new TestGenDroolsScoreDirectorFactory<>(solutionDescriptor, kieBase, config.getScoreDrlList(),\n-                    config.getScoreDrlFileList());\n-        } else {\n-            return new DroolsScoreDirectorFactory<>(solutionDescriptor, kieBase);\n-        }\n-    }\n-\n-    private void writeScoreDrlListToKieFileSystem(KieFileSystem kieFileSystem, KieResources kieResources,\n-            ClassLoader classLoader) {\n+        KieHelper kieHelper = new KieHelper(PropertySpecificOption.ALLOWED)\n+                .setClassLoader(classLoader);\n         if (!ConfigUtils.isEmptyCollection(config.getScoreDrlList())) {\n-            ClassLoader actualClassLoader =\n-                    (classLoader != null) ? classLoader : Thread.currentThread().getContextClassLoader();\n             for (String scoreDrl : config.getScoreDrlList()) {\n                 if (scoreDrl == null) {\n                     throw new IllegalArgumentException(\"The scoreDrl (\" + scoreDrl + \") cannot be null.\");\n                 }\n-                URL scoreDrlURL = actualClassLoader.getResource(scoreDrl);\n-                if (scoreDrlURL == null) {\n-                    String errorMessage = \"The scoreDrl (\" + scoreDrl + \") does not exist as a classpath resource\"\n-                            + \" in the classLoader (\" + actualClassLoader + \").\";\n-                    if (scoreDrl.startsWith(\"/\")) {\n-                        errorMessage += \"\\nAs from 6.1, a classpath resource should not start with a slash (/).\"\n-                                + \" A scoreDrl now adheres to ClassLoader.getResource(String).\"\n-                                + \" Remove the leading slash from the scoreDrl if you're upgrading from 6.0.\";\n-                    }\n-                    throw new IllegalArgumentException(errorMessage);\n-                }\n-                kieFileSystem.write(kieResources.newClassPathResource(scoreDrl, \"UTF-8\", actualClassLoader));\n+                kieHelper.addResource(new ClassPathResource(scoreDrl, classLoader));\n             }\n         }\n-    }\n-\n-    private void writeScoreDrlFileListToKieFileSystem(KieFileSystem kieFileSystem, KieResources kieResources) {\n         if (!ConfigUtils.isEmptyCollection(config.getScoreDrlFileList())) {\n             for (File scoreDrlFile : config.getScoreDrlFileList()) {\n-                if (scoreDrlFile == null) {\n-                    throw new IllegalArgumentException(\"The scoreDrlFile (\" + scoreDrlFile + \") cannot be null.\");\n-                }\n-                if (!scoreDrlFile.exists()) {\n-                    throw new IllegalArgumentException(\"The scoreDrlFile (\" + scoreDrlFile\n-                            + \") does not exist.\");\n-                }\n-                kieFileSystem.write(kieResources.newFileSystemResource(scoreDrlFile, \"UTF-8\"));\n+                kieHelper.addResource(new FileSystemResource(scoreDrlFile));\n+            }\n+        }\n+\n+        try {\n+            KieBase kieBase = kieHelper.build(ExecutableModelProject.class);\n+            if (generateDroolsTestOnError) {\n+                return new TestGenDroolsScoreDirectorFactory<>(solutionDescriptor, kieBase, config.getScoreDrlList(),\n+                        config.getScoreDrlFileList());\n+            } else {\n+                return new DroolsScoreDirectorFactory<>(solutionDescriptor, kieBase);\n             }\n+        } catch (Exception ex) {\n+            throw new IllegalStateException(\"There are problems in your DRL.\", ex);", "originalCommit": "2ab25d9192472c2ca0d046f4e80e07598355d81f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ac2fbbafa0f1ca0ba50c1b18ca924fb10eccd455", "url": "https://github.com/kiegroup/optaplanner/commit/ac2fbbafa0f1ca0ba50c1b18ca924fb10eccd455", "message": "Update optaplanner-core/src/main/java/org/optaplanner/core/impl/score/director/ScoreDirectorFactoryFactory.java\n\nCo-authored-by: Geoffrey De Smet <gds.geoffrey.de.smet@gmail.com>", "committedDate": "2020-11-09T12:57:31Z", "type": "commit"}, {"oid": "833978290a9381d06c4939c6424c0fa3e572bb12", "url": "https://github.com/kiegroup/optaplanner/commit/833978290a9381d06c4939c6424c0fa3e572bb12", "message": "Fix test", "committedDate": "2020-11-09T13:06:32Z", "type": "commit"}]}