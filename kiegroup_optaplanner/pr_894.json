{"pr_number": 894, "pr_title": "PLANNER-1868 SolverManager needs an API that allows a user to listen to both best solution and solver terminated events", "pr_author": "ge0ffrey", "pr_createdAt": "2020-08-21T08:05:26Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/894", "timeline": [{"oid": "9bdbdf2f24ced6a6a98e02b5e50cff3c50442699", "url": "https://github.com/kiegroup/optaplanner/commit/9bdbdf2f24ced6a6a98e02b5e50cff3c50442699", "message": "PLANNER-1868 SolverManager needs an API that allows a user to listen to both best solution and solver terminated events", "committedDate": "2020-08-21T08:04:09Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU1Njk2Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/894#discussion_r474556966", "body": "```suggestion\r\n     * @param problemId never null, an ID for each planning problem. This must be unique.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param problemId never null, a ID for each planning problem. This must be unique.\n          \n          \n            \n                 * @param problemId never null, an ID for each planning problem. This must be unique.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> problemId never <span class=\"pl-c1\">null</span>, <span class=\"x x-first x-last\">a</span> <span class=\"pl-c1\">ID</span> <span class=\"pl-k\">for</span> each planning problem. <span class=\"pl-smi\">This</span> must be unique.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> problemId never <span class=\"pl-c1\">null</span>, <span class=\"x x-first x-last\">an</span> <span class=\"pl-c1\">ID</span> <span class=\"pl-k\">for</span> each planning problem. <span class=\"pl-smi\">This</span> must be unique.</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rsynek", "createdAt": "2020-08-21T09:08:56Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/solver/SolverManager.java", "diffHunk": "@@ -222,8 +223,39 @@\n      *        If null it defaults to logging the exception as an error.\n      * @return never null\n      */\n+    default SolverJob<Solution_, ProblemId_> solveAndListen(ProblemId_ problemId,\n+            Function<? super ProblemId_, ? extends Solution_> problemFinder,\n+            Consumer<? super Solution_> bestSolutionConsumer,\n+            BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler) {\n+        return solveAndListen(problemId, problemFinder, bestSolutionConsumer, null, exceptionHandler);\n+    }\n+\n+    /**\n+     * As defined by {@link #solveAndListen(Object, Function, Consumer)}.\n+     * <p>\n+     * The final best solution is delivered twice:\n+     * first to the {@code bestSolutionConsumer} when it is found\n+     * and then again to the {@code finalBestSolutionConsumer} when the solver terminates.\n+     * Do not store the solution twice.\n+     * This allows for use cases that only process the {@link Score} first (during best solution changed events)\n+     * and then store the solution upon termination.\n+     *\n+     * @param problemId never null, a ID for each planning problem. This must be unique.", "originalCommit": "9bdbdf2f24ced6a6a98e02b5e50cff3c50442699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU1Nzc3Mw==", "url": "https://github.com/kiegroup/optaplanner/pull/894#discussion_r474557773", "body": "```suggestion\r\n     * @param finalBestSolutionConsumer sometimes null, called only once, at the end, on a consumer thread.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param finalBestSolutionConsumer sometimes null, called only once, at the end, on a consumer thread,\n          \n          \n            \n                 * @param finalBestSolutionConsumer sometimes null, called only once, at the end, on a consumer thread.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> finalBestSolutionConsumer sometimes <span class=\"pl-c1\">null</span>, called only once, at the end, on a consumer thread<span class=\"x x-first x-last\">,</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> finalBestSolutionConsumer sometimes <span class=\"pl-c1\">null</span>, called only once, at the end, on a consumer thread<span class=\"x x-first x-last\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rsynek", "createdAt": "2020-08-21T09:09:50Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/api/solver/SolverManager.java", "diffHunk": "@@ -222,8 +223,39 @@\n      *        If null it defaults to logging the exception as an error.\n      * @return never null\n      */\n+    default SolverJob<Solution_, ProblemId_> solveAndListen(ProblemId_ problemId,\n+            Function<? super ProblemId_, ? extends Solution_> problemFinder,\n+            Consumer<? super Solution_> bestSolutionConsumer,\n+            BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler) {\n+        return solveAndListen(problemId, problemFinder, bestSolutionConsumer, null, exceptionHandler);\n+    }\n+\n+    /**\n+     * As defined by {@link #solveAndListen(Object, Function, Consumer)}.\n+     * <p>\n+     * The final best solution is delivered twice:\n+     * first to the {@code bestSolutionConsumer} when it is found\n+     * and then again to the {@code finalBestSolutionConsumer} when the solver terminates.\n+     * Do not store the solution twice.\n+     * This allows for use cases that only process the {@link Score} first (during best solution changed events)\n+     * and then store the solution upon termination.\n+     *\n+     * @param problemId never null, a ID for each planning problem. This must be unique.\n+     *        Use this problemId to {@link #terminateEarly(Object) terminate} the solver early,\n+     *        {@link #getSolverStatus(Object) to get the status} or if the problem changes while solving.\n+     * @param problemFinder never null, function that returns a {@link PlanningSolution}, usually with uninitialized planning\n+     *        variables\n+     * @param bestSolutionConsumer never null, called multiple times, on a consumer thread\n+     * @param finalBestSolutionConsumer sometimes null, called only once, at the end, on a consumer thread,", "originalCommit": "9bdbdf2f24ced6a6a98e02b5e50cff3c50442699", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fa8c75039b4c25d20140b970fd51ba852eb86557", "url": "https://github.com/kiegroup/optaplanner/commit/fa8c75039b4c25d20140b970fd51ba852eb86557", "message": "Typo\n\nCo-authored-by: Radovan Synek <rsynek@redhat.com>", "committedDate": "2020-08-21T10:03:51Z", "type": "commit"}, {"oid": "769edf67d28a6d23aeae15deb389bfa56fd39e1a", "url": "https://github.com/kiegroup/optaplanner/commit/769edf67d28a6d23aeae15deb389bfa56fd39e1a", "message": "Typo\n\nCo-authored-by: Radovan Synek <rsynek@redhat.com>", "committedDate": "2020-08-21T10:04:24Z", "type": "commit"}]}