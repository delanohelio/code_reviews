{"pr_number": 722, "pr_title": "PLANNER-1894 SolverManager.terminateEarly() fix", "pr_author": "ge0ffrey", "pr_createdAt": "2020-03-17T14:11:10Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/722", "timeline": [{"oid": "fe5bccee0a7d37f0e643aaa5e3d752c613b6b130", "url": "https://github.com/kiegroup/optaplanner/commit/fe5bccee0a7d37f0e643aaa5e3d752c613b6b130", "message": "PLANNER-1894 SolverManager.terminateEarly() fix", "committedDate": "2020-03-17T14:10:23Z", "type": "commit"}, {"oid": "d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "url": "https://github.com/kiegroup/optaplanner/commit/d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "message": "PLANNER-1894 Clean up SolverManager map (memory leak)", "committedDate": "2020-03-17T14:15:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgxNTM3NQ==", "url": "https://github.com/kiegroup/optaplanner/pull/722#discussion_r393815375", "body": "@triceo I actually originally tried an AtomicRefence, for the reasons you mentioned.\r\nTrouble was the code above versus the terminateEarly() code.\r\nThat latter did change drastically, so maybe there's a way to reintroduce the AtomicReference, let me try.", "bodyText": "@triceo I actually originally tried an AtomicRefence, for the reasons you mentioned.\nTrouble was the code above versus the terminateEarly() code.\nThat latter did change drastically, so maybe there's a way to reintroduce the AtomicReference, let me try.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/triceo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/triceo\">@triceo</a> I actually originally tried an AtomicRefence, for the reasons you mentioned.<br>\nTrouble was the code above versus the terminateEarly() code.<br>\nThat latter did change drastically, so maybe there's a way to reintroduce the AtomicReference, let me try.</p>", "author": "ge0ffrey", "createdAt": "2020-03-17T16:38:05Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -77,13 +78,19 @@ public ProblemId_ getProblemId() {\n     }\n \n     @Override\n-    public SolverStatus getSolverStatus() {\n+    public synchronized SolverStatus getSolverStatus() {\n         return solverStatus;\n     }\n \n     @Override\n     public Solution_ call() {\n-        solverStatus = SolverStatus.SOLVING_ACTIVE;\n+        synchronized (this) {\n+            if (solverStatus != SolverStatus.SOLVING_SCHEDULED) {\n+                // This job has been canceled before it started\n+                return problemFinder.apply(problemId);\n+            }\n+            solverStatus = SolverStatus.SOLVING_ACTIVE;\n+        }", "originalCommit": "d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzNjk5Ng==", "url": "https://github.com/kiegroup/optaplanner/pull/722#discussion_r393836996", "body": "```suggestion\r\n            SolverStatus previousSolverStatus = solverStatus.getAndSet(SOLVING_ACTIVE);\r\n            if (previousSolverStatus != SolverStatus.SOLVING_SCHEDULED) {\r\n                // This job has been canceled before it started\r\n                return problemFinder.apply(problemId);\r\n            }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    synchronized (this) {\n          \n          \n            \n                        if (solverStatus != SolverStatus.SOLVING_SCHEDULED) {\n          \n          \n            \n                            // This job has been canceled before it started\n          \n          \n            \n                            return problemFinder.apply(problemId);\n          \n          \n            \n                        }\n          \n          \n            \n                        solverStatus = SolverStatus.SOLVING_ACTIVE;\n          \n          \n            \n                    }\n          \n          \n            \n                        SolverStatus previousSolverStatus = solverStatus.getAndSet(SOLVING_ACTIVE);\n          \n          \n            \n                        if (previousSolverStatus != SolverStatus.SOLVING_SCHEDULED) {\n          \n          \n            \n                            // This job has been canceled before it started\n          \n          \n            \n                            return problemFinder.apply(problemId);\n          \n          \n            \n                        }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">synchronized</span> (<span class=\"pl-c1\">this</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (solverStatus <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">SolverStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SOLVING_SCHEDULED</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> This job has been canceled before it started</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> problemFinder<span class=\"pl-k\">.</span>apply(problemId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            solverStatus <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SolverStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SOLVING_ACTIVE</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">SolverStatus</span> previousSolverStatus <span class=\"pl-k\">=</span> solverStatus<span class=\"pl-k\">.</span>getAndSet(<span class=\"pl-c1\">SOLVING_ACTIVE</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (previousSolverStatus <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">SolverStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SOLVING_SCHEDULED</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> This job has been canceled before it started</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> problemFinder<span class=\"pl-k\">.</span>apply(problemId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "triceo", "createdAt": "2020-03-17T17:09:35Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -77,13 +78,19 @@ public ProblemId_ getProblemId() {\n     }\n \n     @Override\n-    public SolverStatus getSolverStatus() {\n+    public synchronized SolverStatus getSolverStatus() {\n         return solverStatus;\n     }\n \n     @Override\n     public Solution_ call() {\n-        solverStatus = SolverStatus.SOLVING_ACTIVE;\n+        synchronized (this) {\n+            if (solverStatus != SolverStatus.SOLVING_SCHEDULED) {\n+                // This job has been canceled before it started\n+                return problemFinder.apply(problemId);\n+            }\n+            solverStatus = SolverStatus.SOLVING_ACTIVE;\n+        }", "originalCommit": "d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzNzkwMw==", "url": "https://github.com/kiegroup/optaplanner/pull/722#discussion_r393837903", "body": "```suggestion\r\n        SolverStatus previousSolverStatus = solverStatus.getAndSet(NOT_SOLVING);\r\n        if (previousSolverStatus != NOT_SOLVING) {\r\n            solverManager.getProblemIdToSolverJobMap().remove(problemId);\r\n            terminatedLatch.countDown();\r\n        }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    solverManager.getProblemIdToSolverJobMap().remove(problemId);\n          \n          \n            \n                    solverStatus = SolverStatus.NOT_SOLVING;\n          \n          \n            \n                    terminatedLatch.countDown();\n          \n          \n            \n                    SolverStatus previousSolverStatus = solverStatus.getAndSet(NOT_SOLVING);\n          \n          \n            \n                    if (previousSolverStatus != NOT_SOLVING) {\n          \n          \n            \n                        solverManager.getProblemIdToSolverJobMap().remove(problemId);\n          \n          \n            \n                        terminatedLatch.countDown();\n          \n          \n            \n                    }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        solverManager<span class=\"pl-k\">.</span>getProblemIdToSolverJobMap()<span class=\"pl-k\">.</span>remove(problemId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"113\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        solverStatus <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SolverStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>NOT_SOLVING</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        terminatedLatch<span class=\"pl-k\">.</span>countDown();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">SolverStatus</span> previousSolverStatus <span class=\"pl-k\">=</span> solverStatus<span class=\"pl-k\">.</span>getAndSet(<span class=\"pl-c1\">NOT_SOLVING</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"113\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (previousSolverStatus <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">NOT_SOLVING</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            solverManager<span class=\"pl-k\">.</span>getProblemIdToSolverJobMap()<span class=\"pl-k\">.</span>remove(problemId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"115\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            terminatedLatch<span class=\"pl-k\">.</span>countDown();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"116\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "triceo", "createdAt": "2020-03-17T17:10:58Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -96,12 +103,16 @@ public Solution_ call() {\n             exceptionHandler.accept(problemId, e);\n             throw new IllegalStateException(\"Solving failed for problemId (\" + problemId + \").\", e);\n         } finally {\n-            solverManager.getProblemIdToSolverJobMap().remove(problemId);\n-            solverStatus = SolverStatus.NOT_SOLVING;\n-            terminatedLatch.countDown();\n+            solvingTerminated();\n         }\n     }\n \n+    private synchronized void solvingTerminated() {\n+        solverManager.getProblemIdToSolverJobMap().remove(problemId);\n+        solverStatus = SolverStatus.NOT_SOLVING;\n+        terminatedLatch.countDown();", "originalCommit": "d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzOTE5Nw==", "url": "https://github.com/kiegroup/optaplanner/pull/722#discussion_r393839197", "body": "This should be replacable by `switch (solverStatus.get())`, as all the actual state mutation happens in `solvingTerminated()`/`solver.terminateEarly()` as I've suggested above.", "bodyText": "This should be replacable by switch (solverStatus.get()), as all the actual state mutation happens in solvingTerminated()/solver.terminateEarly() as I've suggested above.", "bodyHTML": "<p dir=\"auto\">This should be replacable by <code>switch (solverStatus.get())</code>, as all the actual state mutation happens in <code>solvingTerminated()</code>/<code>solver.terminateEarly()</code> as I've suggested above.</p>", "author": "triceo", "createdAt": "2020-03-17T17:13:06Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -116,20 +127,26 @@ public Solution_ call() {\n \n     @Override\n     public void terminateEarly() {\n-        boolean cancelled = future.cancel(false);\n-        if (cancelled) {\n-            solverStatus = SolverStatus.NOT_SOLVING;\n-        } else {\n-            // The solver is either actively solving or has already terminated\n-            solver.terminateEarly();\n-            try {\n-                // Don't return until bestSolutionConsumer won't be called any more\n-                terminatedLatch.await();\n-            } catch (InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-                logger.warn(\"The terminateEarly() call is interrupted.\", e);\n+        future.cancel(false);\n+        synchronized (this) {\n+            if (solverStatus == SolverStatus.SOLVING_SCHEDULED) {\n+                solvingTerminated();\n+            } else if (solverStatus == SolverStatus.SOLVING_ACTIVE) {\n+                // Indirectly triggers solvingTerminated()\n+                solver.terminateEarly();\n+            } else if (solverStatus == SolverStatus.NOT_SOLVING) {\n+                // Do nothing, solvingTerminated() already called\n+            } else {\n+                throw new IllegalStateException(\"Unsupported solverStatus (\" + solverStatus + \").\");\n             }", "originalCommit": "d1b027f12b8a2225a9a07d9039c5105c4dba23e6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4bb3d0d882bd830ecdd5eadfef93dee9c5e554ad", "url": "https://github.com/kiegroup/optaplanner/commit/4bb3d0d882bd830ecdd5eadfef93dee9c5e554ad", "message": "Use AtomicReference for solverStatus", "committedDate": "2020-03-18T12:41:13Z", "type": "commit"}, {"oid": "4bb3d0d882bd830ecdd5eadfef93dee9c5e554ad", "url": "https://github.com/kiegroup/optaplanner/commit/4bb3d0d882bd830ecdd5eadfef93dee9c5e554ad", "message": "Use AtomicReference for solverStatus", "committedDate": "2020-03-18T12:41:13Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyMTkwNw==", "url": "https://github.com/kiegroup/optaplanner/pull/722#discussion_r394321907", "body": "Looks like this one could be `final`.", "bodyText": "Looks like this one could be final.", "bodyHTML": "<p dir=\"auto\">Looks like this one could be <code>final</code>.</p>", "author": "triceo", "createdAt": "2020-03-18T12:51:36Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -47,8 +48,9 @@\n     private final Consumer<? super Solution_> finalBestSolutionConsumer;\n     private final BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler;\n \n-    private volatile SolverStatus solverStatus;\n+    private AtomicReference<SolverStatus> solverStatusReference;", "originalCommit": "4bb3d0d882bd830ecdd5eadfef93dee9c5e554ad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1c2c8515e9ede2ae2433088478ca717ce5d1188f", "url": "https://github.com/kiegroup/optaplanner/commit/1c2c8515e9ede2ae2433088478ca717ce5d1188f", "message": "Make AtomicReference final", "committedDate": "2020-03-18T12:56:13Z", "type": "commit"}]}