{"pr_number": 648, "pr_title": "Make exception handler accept Throwable superclasses", "pr_author": "yurloc", "pr_createdAt": "2020-01-03T09:41:16Z", "pr_url": "https://github.com/kiegroup/optaplanner/pull/648", "timeline": [{"oid": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "url": "https://github.com/kiegroup/optaplanner/commit/b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "message": "Make exception handler accept Throwable superclasses", "committedDate": "2020-01-03T09:28:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MDU5Mg==", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r362750592", "body": "@ge0ffrey This type of exception handler couldn't be used with the `solve()` method.", "bodyText": "@ge0ffrey This type of exception handler couldn't be used with the solve() method.", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ge0ffrey/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ge0ffrey\">@ge0ffrey</a> This type of exception handler couldn't be used with the <code>solve()</code> method.</p>", "author": "yurloc", "createdAt": "2020-01-03T09:42:12Z", "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java", "diffHunk": "@@ -157,6 +163,20 @@ public void exceptionInConsumer() throws InterruptedException {\n         assertEquals(SolverStatus.NOT_SOLVING, solverJob1.getSolverStatus());\n     }\n \n+    @Test\n+    public void solveGenerics() {\n+        final SolverConfig solverConfig = PlannerTestUtils\n+                .buildSolverConfig(TestdataSolution.class, TestdataEntity.class);\n+        SolverManager<TestdataSolution, Long> solverManager = SolverManager\n+                .create(solverConfig, new SolverManagerConfig());\n+\n+        BiConsumer<Object, Object> exceptionHandler = (o1, o2) -> fail(\"This is unexpected\");", "originalCommit": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjc1MDkxMw==", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r362750913", "body": "Changed order of parameters (solverManager + solver first, then problemId + problemFinder).", "bodyText": "Changed order of parameters (solverManager + solver first, then problemId + problemFinder).", "bodyHTML": "<p dir=\"auto\">Changed order of parameters (solverManager + solver first, then problemId + problemFinder).</p>", "author": "yurloc", "createdAt": "2020-01-03T09:43:24Z", "path": "optaplanner-core/src/main/java/org/optaplanner/core/impl/solver/DefaultSolverJob.java", "diffHunk": "@@ -40,16 +40,17 @@\n     private final Solver<Solution_> solver;\n     private final Function<? super ProblemId_, ? extends Solution_> problemFinder;\n     private final Consumer<? super Solution_> finalBestSolutionConsumer;\n-    private final BiConsumer<? super ProblemId_, Throwable> exceptionHandler;\n+    private final BiConsumer<? super ProblemId_, ? super Throwable> exceptionHandler;\n \n     private volatile SolverStatus solverStatus;\n     private Future<Solution_> future;\n \n-    public DefaultSolverJob(DefaultSolverManager<Solution_, ProblemId_> solverManager, ProblemId_ problemId,\n-            Solver<Solution_> solver,\n+    public DefaultSolverJob(\n+            DefaultSolverManager<Solution_, ProblemId_> solverManager,\n+            Solver<Solution_> solver, ProblemId_ problemId,", "originalCommit": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI5OTU1OA==", "url": "https://github.com/kiegroup/optaplanner/pull/648#discussion_r365299558", "body": "This solver actually failed, but that failure never reached the test thread. I believe this change fixed it, please review :)\r\nhttps://github.com/kiegroup/optaplanner/commit/d2589ed10073618ec7cbea7bfe0ce6cac55393ae", "bodyText": "This solver actually failed, but that failure never reached the test thread. I believe this change fixed it, please review :)\nd2589ed", "bodyHTML": "<p dir=\"auto\">This solver actually failed, but that failure never reached the test thread. I believe this change fixed it, please review :)<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/kiegroup/optaplanner/commit/d2589ed10073618ec7cbea7bfe0ce6cac55393ae/hovercard\" href=\"https://github.com/kiegroup/optaplanner/commit/d2589ed10073618ec7cbea7bfe0ce6cac55393ae\"><tt>d2589ed</tt></a></p>", "author": "ge0ffrey", "createdAt": "2020-01-10T15:49:26Z", "path": "optaplanner-core/src/test/java/org/optaplanner/core/api/solver/SolverManagerTest.java", "diffHunk": "@@ -157,6 +163,20 @@ public void exceptionInConsumer() throws InterruptedException {\n         assertEquals(SolverStatus.NOT_SOLVING, solverJob1.getSolverStatus());\n     }\n \n+    @Test\n+    public void solveGenerics() {\n+        final SolverConfig solverConfig = PlannerTestUtils\n+                .buildSolverConfig(TestdataSolution.class, TestdataEntity.class);\n+        SolverManager<TestdataSolution, Long> solverManager = SolverManager\n+                .create(solverConfig, new SolverManagerConfig());\n+\n+        BiConsumer<Object, Object> exceptionHandler = (o1, o2) -> fail(\"This is unexpected\");\n+        Consumer<Object> finalBestSolutionConsumer = o -> {};\n+        Function<Object, TestdataUnannotatedExtendedSolution> problemFinder = o -> new TestdataUnannotatedExtendedSolution();\n+\n+        solverManager.solve(1L, problemFinder, finalBestSolutionConsumer, exceptionHandler);", "originalCommit": "b5d9c7cc711ce461e1b15120bb7c7838eaa8c59b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}