{"pr_number": 2215, "pr_title": "Add Audiences#withPermission", "pr_author": "ImMorpheus", "pr_createdAt": "2020-08-28T17:59:05Z", "pr_url": "https://github.com/SpongePowered/SpongeAPI/pull/2215", "merge_commit": "cd62114e3a58619a15228aef67003cd04cb5e0c8", "timeline": [{"oid": "1ace13fd524cadefd447e0eacda318d8aa8f5918", "url": "https://github.com/SpongePowered/SpongeAPI/commit/1ace13fd524cadefd447e0eacda318d8aa8f5918", "message": "Add Audiences#withPermission", "committedDate": "2020-08-28T17:59:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1NjA1Mg==", "url": "https://github.com/SpongePowered/SpongeAPI/pull/2215#discussion_r479656052", "body": "`final` and `Objects.requireNonNull` in the method to fail out as soon as possible if there is a problem.", "bodyText": "final and Objects.requireNonNull in the method to fail out as soon as possible if there is a problem.", "bodyHTML": "<p dir=\"auto\"><code>final</code> and <code>Objects.requireNonNull</code> in the method to fail out as soon as possible if there is a problem.</p>", "author": "Zidane", "createdAt": "2020-08-29T14:41:34Z", "path": "src/main/java/org/spongepowered/api/adventure/Audiences.java", "diffHunk": "@@ -47,7 +47,18 @@ public static Audience server() {\n      * @return An audience\n      */\n     public static Audience onlinePlayers() {\n-        return factory().onlinePlayers();\n+        return Sponge.getRegistry().getFactoryRegistry().provideFactory(Factory.class).onlinePlayers();\n+    }\n+\n+    /**\n+     * Gets an {@link Audience} that targets all online players\n+     * with the specified permission.\n+     *\n+     * @param permission The permission\n+     * @return An audience\n+     */\n+    public static Audience withPermission(String permission) {", "originalCommit": "1ace13fd524cadefd447e0eacda318d8aa8f5918", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "8b3ab150adf24e88927612c1dd4267268a898146", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex d8fa6a10f..fd7100e99 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -57,7 +59,8 @@ public static Audience onlinePlayers() {\n      * @param permission The permission\n      * @return An audience\n      */\n-    public static Audience withPermission(String permission) {\n+    public static Audience withPermission(final String permission) {\n+        Objects.requireNonNull(permission);\n         return Sponge.getRegistry().getFactoryRegistry().provideFactory(Factory.class).withPermission(permission);\n     }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "cd62114e3a58619a15228aef67003cd04cb5e0c8", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex d8fa6a10f..fd7100e99 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -57,7 +59,8 @@ public static Audience onlinePlayers() {\n      * @param permission The permission\n      * @return An audience\n      */\n-    public static Audience withPermission(String permission) {\n+    public static Audience withPermission(final String permission) {\n+        Objects.requireNonNull(permission);\n         return Sponge.getRegistry().getFactoryRegistry().provideFactory(Factory.class).withPermission(permission);\n     }\n \n", "next_change": {"commit": "7ae0c2e79483511708130984a24861b3cf34bab3", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex fd7100e99..1f7cce722 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -61,7 +61,7 @@ public static Audience onlinePlayers() {\n      */\n     public static Audience withPermission(final String permission) {\n         Objects.requireNonNull(permission);\n-        return Sponge.getRegistry().getFactoryRegistry().provideFactory(Factory.class).withPermission(permission);\n+        return Sponge.getGame().getFactoryProvider().provide(Factory.class).withPermission(permission);\n     }\n \n     /**\n", "next_change": {"commit": "bcc994fd84049ff7630d9f241bedefa2d7ba815e", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex 1f7cce722..1a864f693 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -61,7 +61,7 @@ public static Audience onlinePlayers() {\n      */\n     public static Audience withPermission(final String permission) {\n         Objects.requireNonNull(permission);\n-        return Sponge.getGame().getFactoryProvider().provide(Factory.class).withPermission(permission);\n+        return Sponge.game().factoryProvider().provide(Factory.class).withPermission(permission);\n     }\n \n     /**\n", "next_change": {"commit": "6a3de281ff3e1c9b3ff86300ca1f401577ad4bb7", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex 1a864f693..33443fb66 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -61,7 +61,7 @@ public static Audience onlinePlayers() {\n      */\n     public static Audience withPermission(final String permission) {\n         Objects.requireNonNull(permission);\n-        return Sponge.game().factoryProvider().provide(Factory.class).withPermission(permission);\n+        return Audiences.factory().withPermission(permission);\n     }\n \n     /**\n", "next_change": {"commit": "cf87f65f4a77b4327774468fa6af6df9ce0f4147", "changed_code": [{"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex 33443fb66..1e0aa2dd5 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -64,6 +69,31 @@ public static Audience withPermission(final String permission) {\n         return Audiences.factory().withPermission(permission);\n     }\n \n+    /**\n+     * Filters an audience with given predicate.\n+     * <p>For {@link net.kyori.adventure.audience.ForwardingAudience}s the predicate is tested on each {@link ForwardingAudience#audiences()}</p>\n+     *\n+     * @param predicate The predicate\n+     *\n+     * @return The filtered audience.\n+     */\n+    public static Optional<Audience> filtered(final Audience audience, final Predicate<Audience> predicate) {\n+        if (!(audience instanceof ForwardingAudience)) {\n+            if (predicate.test(audience)) {\n+                return Optional.of(audience);\n+            }\n+            return Optional.empty();\n+        }\n+        final List<Audience> list = new ArrayList<>();\n+        for (Audience subAudience : ((ForwardingAudience) audience).audiences()) {\n+            Audiences.filtered(subAudience, predicate).ifPresent(list::add);\n+        }\n+        if (list.isEmpty()) {\n+            return Optional.empty();\n+        }\n+        return Optional.of((ForwardingAudience) () -> list);\n+    }\n+\n     /**\n      * Gets an {@link Audience} that targets the system, such as a server console.\n      *\n", "next_change": null}]}}]}}, {"header": "diff --git a/src/main/java/org/spongepowered/api/adventure/Audiences.java b/src/main/java/org/spongepowered/api/adventure/Audiences.java\nindex 1f7cce722..1a864f693 100644\n--- a/src/main/java/org/spongepowered/api/adventure/Audiences.java\n+++ b/src/main/java/org/spongepowered/api/adventure/Audiences.java\n", "chunk": "@@ -70,11 +70,11 @@ public static Audience withPermission(final String permission) {\n      * @return An audience\n      */\n     public static Audience system() {\n-        return Sponge.getGame().getSystemSubject();\n+        return Sponge.game().systemSubject();\n     }\n \n     private static Factory factory() {\n-        return Sponge.getGame().getFactoryProvider().provide(Factory.class);\n+        return Sponge.game().factoryProvider().provide(Factory.class);\n     }\n \n     public interface Factory {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "cd62114e3a58619a15228aef67003cd04cb5e0c8", "message": "Merge commit", "committedDate": null}, {"oid": "7ae0c2e79483511708130984a24861b3cf34bab3", "committedDate": "2020-12-12 19:46:42 -0600", "message": "Scoped registry framework."}, {"oid": "bcc994fd84049ff7630d9f241bedefa2d7ba815e", "committedDate": "2021-03-21 16:59:33 +0000", "message": "Remove the \"get\" prefix from most API elements."}, {"oid": "6a3de281ff3e1c9b3ff86300ca1f401577ad4bb7", "committedDate": "2021-05-08 16:05:56 +0000", "message": "Implement error-prone for basic analysis (#2344)"}, {"oid": "cf87f65f4a77b4327774468fa6af6df9ce0f4147", "committedDate": "2021-05-23 15:06:35 +0200", "message": "improve PlayerChatEvent #2259"}]}, {"oid": "8b3ab150adf24e88927612c1dd4267268a898146", "url": "https://github.com/SpongePowered/SpongeAPI/commit/8b3ab150adf24e88927612c1dd4267268a898146", "message": "Add final and requireNonNull", "committedDate": "2020-08-29T14:53:12Z", "type": "commit"}]}