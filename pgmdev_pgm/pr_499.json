{"pr_number": 499, "pr_title": "Scoreboard can show more CTW teams and wools per team.", "pr_author": "alexsosnovsky", "pr_createdAt": "2020-05-23T09:01:11Z", "pr_url": "https://github.com/PGMDev/PGM/pull/499", "timeline": [{"oid": "7d31a4b13b98baa08d4ea129127845ad3dd8634b", "url": "https://github.com/PGMDev/PGM/commit/7d31a4b13b98baa08d4ea129127845ad3dd8634b", "message": "Scoreboard: No blank lines if a CTW map has >5 teams\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-23T06:06:34Z", "type": "commit"}, {"oid": "86a4dfdaa2bd29cb61aad444691a96dd49aba5d5", "url": "https://github.com/PGMDev/PGM/commit/86a4dfdaa2bd29cb61aad444691a96dd49aba5d5", "message": "Scoreboard: If a team has to capture >5 wools, only 1 space is inserted between each.\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-23T06:16:50Z", "type": "commit"}, {"oid": "2288e2badefa2d0683fdd0e98dffb716fb521634", "url": "https://github.com/PGMDev/PGM/commit/2288e2badefa2d0683fdd0e98dffb716fb521634", "message": "Wools can fit on the team name's line on the scoreboard\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-23T08:45:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyOTQxOQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429529419", "body": "Being wool or not, shouldn't be the reason used to compact, See the `isCompactWool` method, what it defines is that wools should be compacted if they don't fit the scoreboard.", "bodyText": "Being wool or not, shouldn't be the reason used to compact, See the isCompactWool method, what it defines is that wools should be compacted if they don't fit the scoreboard.", "bodyHTML": "<p dir=\"auto\">Being wool or not, shouldn't be the reason used to compact, See the <code>isCompactWool</code> method, what it defines is that wools should be compacted if they don't fit the scoreboard.</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:06:18Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -221,6 +221,10 @@ private boolean isBlitz() {\n     return match.getModule(BlitzMatchModule.class) != null;\n   }\n \n+  private boolean isWool() {\n+    return match.getModule(WoolMatchModule.class) != null;\n+  }\n+", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUyOTUwMA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429529500", "body": "Make the \"isWool()\" into a \"isHighlyCompact()\" or something along the lines, don't use \"competitors with goals\" as your reason, make it the total rows being > MAX_ROWS even using the normally compact format", "bodyText": "Make the \"isWool()\" into a \"isHighlyCompact()\" or something along the lines, don't use \"competitors with goals\" as your reason, make it the total rows being > MAX_ROWS even using the normally compact format", "bodyHTML": "<p dir=\"auto\">Make the \"isWool()\" into a \"isHighlyCompact()\" or something along the lines, don't use \"competitors with goals\" as your reason, make it the total rows being &gt; MAX_ROWS even using the normally compact format</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:07:31Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,15 +470,12 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDQ4NQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530485", "body": "Again, instead of basing this on amount of wools, base it off of if the characters will fit", "bodyText": "Again, instead of basing this on amount of wools, base it off of if the characters will fit", "bodyHTML": "<p dir=\"auto\">Again, instead of basing this on amount of wools, base it off of if the characters will fit</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:22:49Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDY4MA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530680", "body": "```suggestion\r\n              if (wool.getDefinition().isInline()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          if (wool.getDefinition().isInline() == true) {\n          \n          \n            \n                          if (wool.getDefinition().isInline()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (wool<span class=\"pl-k\">.</span>getDefinition()<span class=\"pl-k\">.</span>isInline()<span class=\"x x-first\"> </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">true</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">if</span> (wool<span class=\"pl-k\">.</span>getDefinition()<span class=\"pl-k\">.</span>isInline()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-05-23T09:25:49Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDg0MQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530841", "body": "I really do not think that this should be changed.\r\nThat not all teams & their wools will fit is a shame, but joining team name & objectives is a worse solution than the problem itself, i'd just accept that the last teams' wools (wich, because they should be sorted, should be the losing one) won't be visible in scoreboard and only visible in /match", "bodyText": "I really do not think that this should be changed.\nThat not all teams & their wools will fit is a shame, but joining team name & objectives is a worse solution than the problem itself, i'd just accept that the last teams' wools (wich, because they should be sorted, should be the losing one) won't be visible in scoreboard and only visible in /match", "bodyHTML": "<p dir=\"auto\">I really do not think that this should be changed.<br>\nThat not all teams &amp; their wools will fit is a shame, but joining team name &amp; objectives is a worse solution than the problem itself, i'd just accept that the last teams' wools (wich, because they should be sorted, should be the losing one) won't be visible in scoreboard and only visible in /match</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:28:15Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,15 +470,12 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDg3MQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429530871", "body": "See above comment for all of this inline functionality", "bodyText": "See above comment for all of this inline functionality", "bodyHTML": "<p dir=\"auto\">See above comment for all of this inline functionality</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:29:03Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {\n+                  woolText += \" \";\n+                  if (index % 2 == 0) {\n+                    altText += \" \";\n+                  }\n+                  index += 1;\n+                } else {\n+                  woolText += \"   \";\n+                }\n               }\n               firstWool = false;\n               woolText += wool.renderSidebarStatusColor(competitor, viewingParty);\n               woolText += wool.renderSidebarStatusText(competitor, viewingParty);\n+              altText += wool.renderSidebarStatusColor(competitor, viewingParty);\n+              altText += wool.renderSidebarStatusText(competitor, viewingParty);\n             }\n           }\n \n-          rows.add(woolText);\n+          if (!inline) {\n+            // This team's wools are not inline; add a row for the team name\n+            rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+            // Add a row for the compact wools\n+            rows.add(woolText);\n+          } else {\n+            // Add team name & compact wools on a single line.\n+            String teamName = competitor.getStyledName(NameStyle.FANCY).render().toLegacyText();\n+            String inlineString = teamName + woolText;\n+            if (inlineString.length() <= 32) {\n+              rows.add(teamName + woolText);\n+            } else {\n+              inlineString = teamName + altText;\n+              if (inlineString.length() <= 32) {\n+                rows.add(teamName + altText);\n+              } else {\n+                rows.add(teamName + \" \" + altText.replaceAll(\"\\\\s\", \"\"));\n+              }\n+            }\n+          }\n \n         } else {\n+          // Wools are not compact; add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMTE1Mw==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429531153", "body": "Adding a space every other wool looks extremely weird in the scoreboard, do either one or none, but don't toggle", "bodyText": "Adding a space every other wool looks extremely weird in the scoreboard, do either one or none, but don't toggle", "bodyHTML": "<p dir=\"auto\">Adding a space every other wool looks extremely weird in the scoreboard, do either one or none, but don't toggle</p>", "author": "Pablete1234", "createdAt": "2020-05-23T09:33:30Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {\n+                inline = true;\n+              }\n               if (!firstWool) {\n-                woolText += \"   \";\n+                if (sortedWools.size() > 5) {\n+                  woolText += \" \";\n+                  if (index % 2 == 0) {", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0NDM2Nw==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429544367", "body": "Inlining looks really weird, I don't agree that we should allow that.", "bodyText": "Inlining looks really weird, I don't agree that we should allow that.", "bodyHTML": "<p dir=\"auto\">Inlining looks really weird, I don't agree that we should allow that.</p>", "author": "Electroid", "createdAt": "2020-05-23T13:01:57Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -489,21 +490,60 @@ public int compare(Goal a, Goal b) {\n                 }\n               });\n \n+          boolean inline = false;\n+          String altText = \" \";\n+          int index = 1;\n           for (Goal goal : sortedWools) {\n             if (goal instanceof MonumentWool && goal.isVisible()) {\n               MonumentWool wool = (MonumentWool) goal;\n+              if (wool.getDefinition().isInline() == true) {", "originalCommit": "2288e2badefa2d0683fdd0e98dffb716fb521634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "09beb74710d303003e8d8e451560442ffcd490cd", "url": "https://github.com/PGMDev/PGM/commit/09beb74710d303003e8d8e451560442ffcd490cd", "message": "Remove inline functionality for the time being.\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-24T00:56:39Z", "type": "commit"}, {"oid": "e4e5c436313c831a0b05fe311f41736ee42be1d9", "url": "https://github.com/PGMDev/PGM/commit/e4e5c436313c831a0b05fe311f41736ee42be1d9", "message": "Change how scoreboard spacing is determined\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-24T01:45:15Z", "type": "commit"}, {"oid": "052aa7041aa89a1e46bab6d3bda0614329f12563", "url": "https://github.com/PGMDev/PGM/commit/052aa7041aa89a1e46bab6d3bda0614329f12563", "message": "Merge branch 'master' into master", "committedDate": "2020-05-24T01:46:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxNTQ5OA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429615498", "body": "You should use lambda here. Something like:\r\n`(Goal a, Goal b) -> a.getName().compareToIgnoreCase(b.getName());`", "bodyText": "You should use lambda here. Something like:\n(Goal a, Goal b) -> a.getName().compareToIgnoreCase(b.getName());", "bodyHTML": "<p dir=\"auto\">You should use lambda here. Something like:<br>\n<code>(Goal a, Goal b) -&gt; a.getName().compareToIgnoreCase(b.getName());</code></p>", "author": "KingOfSquares", "createdAt": "2020-05-24T09:10:23Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjUxOA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429652518", "bodyText": "Well this was already like that, so it can stay, the better way would be to use a:\nComparators.comparing(Goal::getName, String.CASE_INSENSITIVE_ORDER)", "author": "Pablete1234", "createdAt": "2020-05-24T16:21:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxNTQ5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MjU3Nw==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429652577", "body": "Leaving a small comment here mentioning why this is done could be helpful for future mantainers", "bodyText": "Leaving a small comment here mentioning why this is done could be helpful for future mantainers", "bodyHTML": "<p dir=\"auto\">Leaving a small comment here mentioning why this is done could be helpful for future mantainers</p>", "author": "Pablete1234", "createdAt": "2020-05-24T16:21:53Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -470,86 +473,61 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!(firstTeam || (isWool() && competitorsWithGoals.size() > 5))) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n-                }\n-              });\n-\n-          boolean inline = false;\n-          String altText = \" \";\n-          int index = 1;\n-          for (Goal goal : sortedWools) {\n-            if (goal instanceof MonumentWool && goal.isVisible()) {\n-              MonumentWool wool = (MonumentWool) goal;\n-              if (wool.getDefinition().isInline() == true) {\n-                inline = true;\n-              }\n-              if (!firstWool) {\n-                if (sortedWools.size() > 5) {\n-                  woolText += \" \";\n-                  if (index % 2 == 0) {\n-                    altText += \" \";\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });\n+\n+            boolean horizontalCompact =\n+                !((MAX_PREFIX + MAX_SUFFIX) < sortedWools.size() + 3 * (sortedWools.size() - 1));", "originalCommit": "e4e5c436313c831a0b05fe311f41736ee42be1d9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDAwMA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654000", "body": "```suggestion\r\n  private boolean isSuperCompact() {\r\n```\r\nMaybe this shouldn't be restricted to just compacting by wools, if other objectives need to show maybe it's worth removing the in-between-team lines in the scoreboard. \r\nObviously the method should change accordingly to add up non-wool objectives, one line for compacted wools, and one line for the space between teams", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean isSuperCompactWool() {\n          \n          \n            \n              private boolean isSuperCompact() {\n          \n      \n    \n    \n  \n\nMaybe this shouldn't be restricted to just compacting by wools, if other objectives need to show maybe it's worth removing the in-between-team lines in the scoreboard.\nObviously the method should change accordingly to add up non-wool objectives, one line for compacted wools, and one line for the space between teams", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isSuperCompactWool</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isSuperCompact</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Maybe this shouldn't be restricted to just compacting by wools, if other objectives need to show maybe it's worth removing the in-between-team lines in the scoreboard.<br>\nObviously the method should change accordingly to add up non-wool objectives, one line for compacted wools, and one line for the space between teams</p>", "author": "Pablete1234", "createdAt": "2020-05-24T16:39:17Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -227,6 +227,11 @@ private boolean isCompactWool() {\n         && MAX_ROWS < wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size();\n   }\n \n+  private boolean isSuperCompactWool() {", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDE3OQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654179", "body": "```suggestion\r\n      for (Competitor competitor : sortedCompetitors) {\r\n          if (rows.size() + 2 >= MAX_ROWS) break; // No point in rendering the team at all, no space\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for (Competitor competitor : sortedCompetitors) {\n          \n          \n            \n                  for (Competitor competitor : sortedCompetitors) {\n          \n          \n            \n                      if (rows.size() + 2 >= MAX_ROWS) break; // No point in rendering the team at all, no space", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"486\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Competitor</span> competitor <span class=\"pl-k\">:</span> sortedCompetitors) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"486\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Competitor</span> competitor <span class=\"pl-k\">:</span> sortedCompetitors) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"487\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">if</span> (rows<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">+</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">MAX_ROWS</span>) <span class=\"pl-k\">break</span>; <span class=\"pl-c\"><span class=\"pl-c\">//</span> No point in rendering the team at all, no space</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-05-24T16:41:33Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDIzMA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654230", "body": "This condition is better handled above (before potentially adding the whitespace line), also prevents the whole code getting indented inwards by 1", "bodyText": "This condition is better handled above (before potentially adding the whitespace line), also prevents the whole code getting indented inwards by 1", "bodyHTML": "<p dir=\"auto\">This condition is better handled above (before potentially adding the whitespace line), also prevents the whole code getting indented inwards by 1</p>", "author": "Pablete1234", "createdAt": "2020-05-24T16:42:23Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDQ2NQ==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654465", "body": "```suggestion\r\n                woolText += \" \";\r\n                if (!firstWool && !horizontalCompact) woolText += \" \";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!firstWool) {\n          \n          \n            \n                              if (horizontalCompact) {\n          \n          \n            \n                                woolText += \" \";\n          \n          \n            \n                              } else {\n          \n          \n            \n                                woolText += \"   \";\n          \n          \n            \n                              }\n          \n          \n            \n                            woolText += \" \";\n          \n          \n            \n                            if (!firstWool && !horizontalCompact) woolText += \" \";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>firstWool) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  <span class=\"pl-k\">if</span> (horizontalCompact) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    woolText <span class=\"pl-k\">+=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    woolText <span class=\"pl-k\">+=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>   <span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                woolText <span class=\"pl-k\">+=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>firstWool <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>horizontalCompact) woolText <span class=\"pl-k\">+=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-05-24T16:45:23Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";\n+            boolean firstWool = true;\n+\n+            List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n+            Collections.sort(\n+                sortedWools,\n+                new Comparator<Goal>() {\n+                  @Override\n+                  public int compare(Goal a, Goal b) {\n+                    return a.getName().compareToIgnoreCase(b.getName());\n+                  }\n+                });\n+\n+            boolean horizontalCompact =\n+                !((MAX_PREFIX + MAX_SUFFIX) < sortedWools.size() + 3 * (sortedWools.size() - 1));\n+\n+            for (Goal goal : sortedWools) {\n+              if (goal instanceof MonumentWool && goal.isVisible()) {\n+                MonumentWool wool = (MonumentWool) goal;\n+                if (!firstWool) {\n+                  if (horizontalCompact) {\n+                    woolText += \" \";\n+                  } else {\n+                    woolText += \"   \";\n+                  }", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDQ4MA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429654480", "body": "```suggestion\r\n            String woolText = \"\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String woolText = \" \";\n          \n          \n            \n                        String woolText = \"\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> woolText <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\"> </span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> woolText <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-05-24T16:45:32Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -466,48 +473,59 @@ private void renderSidebar() {\n       }\n \n       for (Competitor competitor : sortedCompetitors) {\n-        if (!firstTeam) {\n+        if (!(firstTeam || isSuperCompactWool)) {\n           // Add a blank row between teams\n           rows.add(\"\");\n         }\n         firstTeam = false;\n \n-        // Add a row for the team name\n-        rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n-\n-        if (isCompactWool()) {\n-          String woolText = \" \";\n-          boolean firstWool = true;\n-\n-          List<Goal> sortedWools = new ArrayList<>(gmm.getGoals(competitor));\n-          Collections.sort(\n-              sortedWools,\n-              new Comparator<Goal>() {\n-                @Override\n-                public int compare(Goal a, Goal b) {\n-                  return a.getName().compareToIgnoreCase(b.getName());\n+        // Prevent team name from showing up if there is no space for its objectives\n+        if (!isSuperCompactWool || rows.size() + 2 < MAX_ROWS) {\n+\n+          // Add a row for the team name\n+          rows.add(competitor.getStyledName(NameStyle.FANCY).render().toLegacyText());\n+\n+          if (isCompactWool) {\n+            String woolText = \" \";", "originalCommit": "052aa7041aa89a1e46bab6d3bda0614329f12563", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8308fa1c8b6089c5ece58b73395da4be86bdf0c8", "url": "https://github.com/PGMDev/PGM/commit/8308fa1c8b6089c5ece58b73395da4be86bdf0c8", "message": "Reorganize some scoreboard logic\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-24T22:04:16Z", "type": "commit"}, {"oid": "de0f955f0f741868da100ece51cd198b3b6cf093", "url": "https://github.com/PGMDev/PGM/commit/de0f955f0f741868da100ece51cd198b3b6cf093", "message": "Super Compact check considers non-wool objectives as well\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-24T22:47:20Z", "type": "commit"}, {"oid": "8ff090465e0d057ec561c99c247457f1f15131e9", "url": "https://github.com/PGMDev/PGM/commit/8ff090465e0d057ec561c99c247457f1f15131e9", "message": "Merge branch 'master' of github.com:alexsosnovsky/PGM", "committedDate": "2020-05-24T22:47:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMDI4OA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429720288", "body": "I think you could use `GoalMatchModule` to get all the goals without checking each module.", "bodyText": "I think you could use GoalMatchModule to get all the goals without checking each module.", "bodyHTML": "<p dir=\"auto\">I think you could use <code>GoalMatchModule</code> to get all the goals without checking each module.</p>", "author": "Electroid", "createdAt": "2020-05-25T03:46:11Z", "path": "core/src/main/java/tc/oc/pgm/scoreboard/SidebarMatchModule.java", "diffHunk": "@@ -221,10 +225,39 @@ private boolean isBlitz() {\n     return match.getModule(BlitzMatchModule.class) != null;\n   }\n \n+  // Determines if wool objectives should be given their own rows, or all shown on 1 row.\n   private boolean isCompactWool() {\n     WoolMatchModule wmm = match.getModule(WoolMatchModule.class);\n     return wmm != null\n-        && MAX_ROWS < wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size();\n+        && !(wmm.getWools().keySet().size() * 2 - 1 + wmm.getWools().values().size() < MAX_ROWS);\n+  }\n+\n+  // Determines if all the map objectives can fit onto the scoreboard with empty rows in between.\n+  private boolean isSuperCompact(Set<Competitor> competitorsWithGoals) {\n+    int rowsUsed = competitorsWithGoals.size() * 2 - 1;\n+\n+    WoolMatchModule wmm = match.getModule(WoolMatchModule.class);\n+    if (wmm != null) {\n+      if (isCompactWool()) {\n+        rowsUsed += wmm.getWools().keySet().size() * 2 - 1;\n+      } else {\n+        rowsUsed += wmm.getWools().values().size();\n+      }\n+    }\n+\n+    ControlPointMatchModule cpmm = match.getModule(ControlPointMatchModule.class);\n+    if (cpmm != null) rowsUsed += cpmm.getControlPoints().size();\n+\n+    FlagMatchModule fmm = match.getModule(FlagMatchModule.class);\n+    if (fmm != null) rowsUsed += fmm.getFlags().size();\n+\n+    CoreMatchModule cmm = match.getModule(CoreMatchModule.class);\n+    if (cmm != null) rowsUsed += cmm.getCores().size();\n+\n+    DestroyableMatchModule dmm = match.getModule(DestroyableMatchModule.class);\n+    if (dmm != null) rowsUsed += dmm.getDestroyables().size();", "originalCommit": "8ff090465e0d057ec561c99c247457f1f15131e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyODk1Ng==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429728956", "bodyText": "Yeah, I see that would be the easy way. Sorry, I misunderstood how goals work.", "author": "alexsosnovsky", "createdAt": "2020-05-25T04:43:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyMDI4OA=="}], "type": "inlineReview"}, {"oid": "55648ad91d0e1f1415af26efbc339f4d54c639c3", "url": "https://github.com/PGMDev/PGM/commit/55648ad91d0e1f1415af26efbc339f4d54c639c3", "message": "Super Compact check uses GoalMatchModule\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-25T04:59:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczODQ4NA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429738484", "body": "Remove this.", "bodyText": "Remove this.", "bodyHTML": "<p dir=\"auto\">Remove this.</p>", "author": "Electroid", "createdAt": "2020-05-25T05:36:07Z", "path": "core/src/main/java/tc/oc/pgm/controlpoint/ControlPointMatchModule.java", "diffHunk": "@@ -36,4 +36,8 @@ public void unload() {\n     }\n     HandlerList.unregisterAll(this.announcer);\n   }\n+\n+  public List<ControlPoint> getControlPoints() {\n+    return controlPoints;\n+  }", "originalCommit": "55648ad91d0e1f1415af26efbc339f4d54c639c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczODUyMA==", "url": "https://github.com/PGMDev/PGM/pull/499#discussion_r429738520", "body": "And remove this.", "bodyText": "And remove this.", "bodyHTML": "<p dir=\"auto\">And remove this.</p>", "author": "Electroid", "createdAt": "2020-05-25T05:36:18Z", "path": "core/src/main/java/tc/oc/pgm/core/CoreMatchModule.java", "diffHunk": "@@ -152,4 +152,8 @@ public void onObjectiveModeSwitch(final ObjectiveModeChangeEvent event) {\n       }\n     }\n   }\n+\n+  public List<Core> getCores() {\n+    return cores;\n+  }", "originalCommit": "55648ad91d0e1f1415af26efbc339f4d54c639c3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b", "url": "https://github.com/PGMDev/PGM/commit/5ee12a5422144e1c6226de9a0c4c8e6c4d460a4b", "message": "Remove unused methods\n\nSigned-off-by: alexsosnovsky <60436249+alexsosnovsky@users.noreply.github.com>", "committedDate": "2020-05-25T05:42:03Z", "type": "commit"}]}