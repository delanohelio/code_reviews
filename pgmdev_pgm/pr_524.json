{"pr_number": 524, "pr_title": "Add names to posts. Add support for multiple posts for one flag.", "pr_author": "mrcookieunderscore13", "pr_createdAt": "2020-06-04T15:45:14Z", "pr_url": "https://github.com/PGMDev/PGM/pull/524", "timeline": [{"oid": "5fc3950e1cd25a61495ac1ea1185fcd9507b168f", "url": "https://github.com/PGMDev/PGM/commit/5fc3950e1cd25a61495ac1ea1185fcd9507b168f", "message": "Fixed issue that broke maps with more than one flag.\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-06-04T15:46:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MzQwMg==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435373402", "body": "`@Nullable`? ", "bodyText": "@Nullable?", "bodyHTML": "<p dir=\"auto\"><code>@Nullable</code>?</p>", "author": "KingOfSquares", "createdAt": "2020-06-04T16:02:18Z", "path": "core/src/main/java/tc/oc/pgm/flag/FlagParser.java", "diffHunk": "@@ -85,6 +86,7 @@ public Post parsePost(Element el) throws InvalidXMLException {\n     Post post =\n         new Post(\n             id,\n+            name,", "originalCommit": "5fc3950e1cd25a61495ac1ea1185fcd9507b168f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMDkyNg==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435620926", "bodyText": "I think it is, or at least it is in post.java at line 41 & 47. I might be misunderstanding what you mean though.", "author": "mrcookieunderscore13", "createdAt": "2020-06-04T23:59:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MzQwMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDIxNQ==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435630215", "bodyText": "I meant you should probably annotate the variable with @Nullable such that people understand that a name is not required and can be null.", "author": "KingOfSquares", "createdAt": "2020-06-05T00:37:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MzQwMg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3MzQ5MA==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435373490", "body": "No reason to leave this in", "bodyText": "No reason to leave this in", "bodyHTML": "<p dir=\"auto\">No reason to leave this in</p>", "author": "KingOfSquares", "createdAt": "2020-06-04T16:02:27Z", "path": "core/src/main/java/tc/oc/pgm/flag/FlagParser.java", "diffHunk": "@@ -214,15 +219,20 @@ public FlagDefinition parseFlag(Element el) throws InvalidXMLException {\n     ProximityMetric netProximityMetric =\n         ProximityMetric.parse(\n             el, \"net\", new ProximityMetric(ProximityMetric.Type.CLOSEST_PLAYER, false));\n-\n     Post defaultPost;\n-    Element elPost = XMLUtils.getUniqueChild(el, \"post\");\n-    if (elPost != null) {\n+    List<Post> flagPosts = new ArrayList<>();\n+    for (Element elPost : el.getChildren(\"post\")) {\n+      flagPosts.add(this.parsePost(elPost));\n+    }\n+    // Element elPost = XMLUtils.getUniqueChild(el, \"post\");", "originalCommit": "5fc3950e1cd25a61495ac1ea1185fcd9507b168f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3NjU0OQ==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435376549", "body": "What about `Post returnPost`? `temp` sounds weird imo", "bodyText": "What about Post returnPost? temp sounds weird imo", "bodyHTML": "<p dir=\"auto\">What about <code>Post returnPost</code>? <code>temp</code> sounds weird imo</p>", "author": "KingOfSquares", "createdAt": "2020-06-04T16:06:56Z", "path": "core/src/main/java/tc/oc/pgm/flag/Flag.java", "diffHunk": "@@ -231,8 +232,32 @@ public boolean canDropAt(Location location) {\n     }\n   }\n \n+  private int sequentialPostCounter = 0;\n+  private Post returnPost;\n+\n+  public Post getReturnPost(Post post) {\n+    if (post.isSpecifiedPost()) {\n+      return post;\n+    }\n+    if (definition.isSequential()) {\n+      Post tempPost = definition.getPosts().get(sequentialPostCounter);", "originalCommit": "5fc3950e1cd25a61495ac1ea1185fcd9507b168f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTk5Ng==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435629996", "body": "Use `TranslatableComponent.of()` instead of `PersonalizedTranslatable` (Should've told you that earlier sorry)", "bodyText": "Use TranslatableComponent.of() instead of PersonalizedTranslatable (Should've told you that earlier sorry)", "bodyHTML": "<p dir=\"auto\">Use <code>TranslatableComponent.of()</code> instead of <code>PersonalizedTranslatable</code> (Should've told you that earlier sorry)</p>", "author": "KingOfSquares", "createdAt": "2020-06-05T00:37:05Z", "path": "core/src/main/java/tc/oc/pgm/flag/state/Respawning.java", "diffHunk": "@@ -55,22 +55,31 @@ public void enterState() {\n     if (!Duration.ZERO.equals(respawnTime)) {\n       // Respawn is delayed\n \n-      String displayPostName = \"\";\n+      // String displayPostName = \"\";\n       String postName = this.respawnToPost.getPostName();\n       if (postName != null) {\n-        displayPostName = \" to \" + net.md_5.bungee.api.ChatColor.AQUA + postName;\n+        // displayPostName = \" to \" + net.md_5.bungee.api.ChatColor.AQUA + postName;\n+        this.flag\n+            .getMatch()\n+            .sendMessage(\n+                new PersonalizedTranslatable(\n+                    \"flag.willRespawnNamed\",\n+                    this.flag.getComponentName(),\n+                    net.md_5.bungee.api.ChatColor.AQUA + postName,\n+                    new PersonalizedText(\n+                        PeriodFormats.briefNaturalApproximate(respawnTime),\n+                        net.md_5.bungee.api.ChatColor.AQUA)));\n+      } else {\n+        this.flag\n+            .getMatch()\n+            .sendMessage(\n+                new PersonalizedTranslatable(\n+                    \"flag.willRespawn\",\n+                    this.flag.getComponentName(),\n+                    new PersonalizedText(\n+                        PeriodFormats.briefNaturalApproximate(respawnTime),\n+                        net.md_5.bungee.api.ChatColor.AQUA)));", "originalCommit": "8c101eeb47c8c834f89a2e60a8de617563af924a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU3NA==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435630574", "body": "The comments should be removed", "bodyText": "The comments should be removed", "bodyHTML": "<p dir=\"auto\">The comments should be removed</p>", "author": "KingOfSquares", "createdAt": "2020-06-05T00:39:31Z", "path": "core/src/main/java/tc/oc/pgm/flag/state/Respawning.java", "diffHunk": "@@ -52,15 +54,32 @@ public void enterState() {\n \n     if (!Duration.ZERO.equals(respawnTime)) {\n       // Respawn is delayed\n-      this.flag\n-          .getMatch()\n-          .sendMessage(\n-              new PersonalizedTranslatable(\n-                  \"flag.willRespawn\",\n-                  this.flag.getComponentName(),\n-                  new PersonalizedText(\n-                      PeriodFormats.briefNaturalApproximate(respawnTime),\n-                      net.md_5.bungee.api.ChatColor.AQUA)));\n+\n+      // String displayPostName = \"\";\n+      String postName = this.respawnToPost.getPostName();\n+      if (postName != null) {\n+        // displayPostName = \" to \" + net.md_5.bungee.api.ChatColor.AQUA + postName;", "originalCommit": "8c101eeb47c8c834f89a2e60a8de617563af924a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTMxOQ==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435631319", "body": "I think this comment is missing some words \ud83e\udd14 ", "bodyText": "I think this comment is missing some words \ud83e\udd14", "bodyHTML": "<p dir=\"auto\">I think this comment is missing some words <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f914.png\">\ud83e\udd14</g-emoji></p>", "author": "KingOfSquares", "createdAt": "2020-06-05T00:42:39Z", "path": "core/src/main/java/tc/oc/pgm/flag/Post.java", "diffHunk": "@@ -38,9 +38,13 @@\n   private final boolean permanent; // Flag enters Completed state when at this post\n   private final double pointsPerSecond; // Points awarded while any flag is at this post\n   private final Filter pickupFilter; // Filter players who can pickup a flag at this post\n+  private final @Nullable String postName; // The name of the post to displayed.", "originalCommit": "8c101eeb47c8c834f89a2e60a8de617563af924a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NTQ1Mg==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435975452", "body": "```suggestion\r\n    if (!flagPosts.isEmpty()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (flagPosts.size() != 0) {\n          \n          \n            \n                if (!flagPosts.isEmpty()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (flagPosts<span class=\"pl-k\">.</span><span class=\"x x-first\">size() </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (<span class=\"pl-k x x-first x-last\">!</span>flagPosts<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Electroid", "createdAt": "2020-06-05T14:53:15Z", "path": "core/src/main/java/tc/oc/pgm/flag/FlagParser.java", "diffHunk": "@@ -214,15 +219,19 @@ public FlagDefinition parseFlag(Element el) throws InvalidXMLException {\n     ProximityMetric netProximityMetric =\n         ProximityMetric.parse(\n             el, \"net\", new ProximityMetric(ProximityMetric.Type.CLOSEST_PLAYER, false));\n-\n     Post defaultPost;\n-    Element elPost = XMLUtils.getUniqueChild(el, \"post\");\n-    if (elPost != null) {\n+    List<Post> flagPosts = new ArrayList<>();\n+    for (Element elPost : el.getChildren(\"post\")) {\n+      flagPosts.add(this.parsePost(elPost));\n+    }\n+\n+    if (flagPosts.size() != 0) {", "originalCommit": "e16c6f3a1874d163755dd732d024764a2131281e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NTc1OA==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435975758", "body": "```suggestion\r\n      Post returnPost = definition.getPosts().get(sequentialPostCounter++);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Post returnPost = definition.getPosts().get(sequentialPostCounter);\n          \n          \n            \n                  sequentialPostCounter++;\n          \n          \n            \n                  Post returnPost = definition.getPosts().get(sequentialPostCounter++);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi\">Post</span> returnPost <span class=\"pl-k\">=</span> definition<span class=\"pl-k\">.</span>getPosts()<span class=\"pl-k\">.</span>get(sequentialPostCounter);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      sequentialPostCounter<span class=\"pl-k\">++</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">Post</span> returnPost <span class=\"pl-k\">=</span> definition<span class=\"pl-k\">.</span>getPosts()<span class=\"pl-k\">.</span>get(sequentialPostCounter<span class=\"pl-k\">++</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Electroid", "createdAt": "2020-06-05T14:53:43Z", "path": "core/src/main/java/tc/oc/pgm/flag/Flag.java", "diffHunk": "@@ -231,8 +232,32 @@ public boolean canDropAt(Location location) {\n     }\n   }\n \n+  private int sequentialPostCounter = 0;\n+  private Post returnPost;\n+\n+  public Post getReturnPost(Post post) {\n+    if (post.isSpecifiedPost()) {\n+      return post;\n+    }\n+    if (definition.isSequential()) {\n+      Post returnPost = definition.getPosts().get(sequentialPostCounter);\n+      sequentialPostCounter++;", "originalCommit": "e16c6f3a1874d163755dd732d024764a2131281e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NjEzNw==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r435976137", "body": "Use `match.getRandom()` instead", "bodyText": "Use match.getRandom() instead", "bodyHTML": "<p dir=\"auto\">Use <code>match.getRandom()</code> instead</p>", "author": "Electroid", "createdAt": "2020-06-05T14:54:16Z", "path": "core/src/main/java/tc/oc/pgm/flag/Flag.java", "diffHunk": "@@ -231,8 +232,32 @@ public boolean canDropAt(Location location) {\n     }\n   }\n \n+  private int sequentialPostCounter = 0;\n+  private Post returnPost;\n+\n+  public Post getReturnPost(Post post) {\n+    if (post.isSpecifiedPost()) {\n+      return post;\n+    }\n+    if (definition.isSequential()) {\n+      Post returnPost = definition.getPosts().get(sequentialPostCounter);\n+      sequentialPostCounter++;\n+      if (sequentialPostCounter == definition.getPosts().size()) {\n+        sequentialPostCounter = 0;\n+      }\n+      return returnPost;\n+    }\n+    Random random = new Random();", "originalCommit": "e16c6f3a1874d163755dd732d024764a2131281e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAyMzMyMg==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r436023322", "body": "```suggestion\r\n                        TextComponent.of(postName, TextColor.AQUA),\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    TextComponent.of(net.md_5.bungee.api.ChatColor.AQUA + postName),\n          \n          \n            \n                                    TextComponent.of(postName, TextColor.AQUA),", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-smi\">TextComponent</span><span class=\"pl-k\">.</span>of(<span class=\"pl-smi\"><span class=\"x x-first\">net.md_5.bungee.api</span><span class=\"pl-k x\">.</span><span class=\"x\">ChatColor</span></span><span class=\"pl-c1\"><span class=\"pl-k x x-last\">.</span>AQUA</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> postName</span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-smi\">TextComponent</span><span class=\"pl-k\">.</span>of(<span class=\"x x-first\">postName, </span><span class=\"pl-smi x\">TextColor</span><span class=\"pl-c1\"><span class=\"pl-k x x-last\">.</span>AQUA</span>),</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Electroid", "createdAt": "2020-06-05T16:12:59Z", "path": "core/src/main/java/tc/oc/pgm/flag/state/Respawning.java", "diffHunk": "@@ -52,15 +56,30 @@ public void enterState() {\n \n     if (!Duration.ZERO.equals(respawnTime)) {\n       // Respawn is delayed\n-      this.flag\n-          .getMatch()\n-          .sendMessage(\n-              new PersonalizedTranslatable(\n-                  \"flag.willRespawn\",\n-                  this.flag.getComponentName(),\n-                  new PersonalizedText(\n-                      PeriodFormats.briefNaturalApproximate(respawnTime),\n-                      net.md_5.bungee.api.ChatColor.AQUA)));\n+\n+      String postName = this.respawnToPost.getPostName();\n+      Component timeComponent =\n+          new PersonalizedText(\n+              PeriodFormats.briefNaturalApproximate(respawnTime),\n+              net.md_5.bungee.api.ChatColor.AQUA);\n+      String timeStr = timeComponent.render().toLegacyText();\n+\n+      if (postName != null) {\n+        this.flag\n+            .getMatch()\n+            .sendMessage(\n+                TranslatableComponent.of(\"flag.willRespawn.named\")\n+                    .args(\n+                        this.flag.getTextName(),\n+                        TextComponent.of(net.md_5.bungee.api.ChatColor.AQUA + postName),", "originalCommit": "367b275c5b698d2c3208a3a0de28e1c0ae7f20a2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NTM2MA==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r436175360", "body": "You can just do `TranslatableComponent.of(\"key\", arg1, arg2, arg3)` instead of `TranslatableComponent.of(\"key\").args(arg1, arg2, arg3)`", "bodyText": "You can just do TranslatableComponent.of(\"key\", arg1, arg2, arg3) instead of TranslatableComponent.of(\"key\").args(arg1, arg2, arg3)", "bodyHTML": "<p dir=\"auto\">You can just do <code>TranslatableComponent.of(\"key\", arg1, arg2, arg3)</code> instead of <code>TranslatableComponent.of(\"key\").args(arg1, arg2, arg3)</code></p>", "author": "KingOfSquares", "createdAt": "2020-06-05T21:37:38Z", "path": "core/src/main/java/tc/oc/pgm/flag/state/Respawning.java", "diffHunk": "@@ -52,15 +57,30 @@ public void enterState() {\n \n     if (!Duration.ZERO.equals(respawnTime)) {\n       // Respawn is delayed\n-      this.flag\n-          .getMatch()\n-          .sendMessage(\n-              new PersonalizedTranslatable(\n-                  \"flag.willRespawn\",\n-                  this.flag.getComponentName(),\n-                  new PersonalizedText(\n-                      PeriodFormats.briefNaturalApproximate(respawnTime),\n-                      net.md_5.bungee.api.ChatColor.AQUA)));\n+\n+      String postName = this.respawnToPost.getPostName();\n+      Component timeComponent =\n+          new PersonalizedText(\n+              PeriodFormats.briefNaturalApproximate(respawnTime),\n+              net.md_5.bungee.api.ChatColor.AQUA);\n+      String timeStr = timeComponent.render().toLegacyText();\n+\n+      if (postName != null) {\n+        this.flag\n+            .getMatch()\n+            .sendMessage(\n+                TranslatableComponent.of(\"flag.willRespawn.named\")\n+                    .args(\n+                        this.flag.getTextName(),\n+                        TextComponent.of(postName, TextColor.AQUA),\n+                        TextComponent.of(timeStr)));\n+      } else {\n+        this.flag\n+            .getMatch()\n+            .sendMessage(\n+                TranslatableComponent.of(\"flag.willRespawn\")\n+                    .args(this.flag.getTextName(), TextComponent.of(timeStr)));\n+      }", "originalCommit": "fd88acfd83ef44d9e145f879ffa58ddbdae7cca1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MTc0NQ==", "url": "https://github.com/PGMDev/PGM/pull/524#discussion_r436191745", "bodyText": "Got it. Changed it \ud83d\udc4d", "author": "mrcookieunderscore13", "createdAt": "2020-06-05T22:27:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE3NTM2MA=="}], "type": "inlineReview"}, {"oid": "f7e52a8f511d4e6ad630e9d6d7770026f99efe86", "url": "https://github.com/PGMDev/PGM/commit/f7e52a8f511d4e6ad630e9d6d7770026f99efe86", "message": "Say the name of the post that the flag is respawning to. Added a name attribute to post.\n\nAdded supprot for multiple posts.\nAdded a sequential attribute to <flag> that determines if the respawning flag randomly chooses a post to respawn to or if it cycles through posts.\nAdded the boolean of a specified post, which is when a net sets a new post for the flag to spawn to. If it is a specified post, it doesn't care if the original flag decleration has multiple flags. That means, if the flag respawns at a post with specifiedPost = true, respawning will remain at this post until a net changes it to a new post.\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-06-07T01:10:25Z", "type": "commit"}, {"oid": "f7e52a8f511d4e6ad630e9d6d7770026f99efe86", "url": "https://github.com/PGMDev/PGM/commit/f7e52a8f511d4e6ad630e9d6d7770026f99efe86", "message": "Say the name of the post that the flag is respawning to. Added a name attribute to post.\n\nAdded supprot for multiple posts.\nAdded a sequential attribute to <flag> that determines if the respawning flag randomly chooses a post to respawn to or if it cycles through posts.\nAdded the boolean of a specified post, which is when a net sets a new post for the flag to spawn to. If it is a specified post, it doesn't care if the original flag decleration has multiple flags. That means, if the flag respawns at a post with specifiedPost = true, respawning will remain at this post until a net changes it to a new post.\n\nSigned-off-by: mrcookie <athertonmook@gmail.com>", "committedDate": "2020-06-07T01:10:25Z", "type": "forcePushed"}]}