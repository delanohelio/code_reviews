{"pr_number": 270, "pr_title": "Fix tab list for players on 1.7.10, resolves #16", "pr_author": "Meeples10", "pr_createdAt": "2020-01-27T19:06:25Z", "pr_url": "https://github.com/PGMDev/PGM/pull/270", "timeline": [{"oid": "f80e9d67cc70ef18a23b8235bf304c79b9ba78e3", "url": "https://github.com/PGMDev/PGM/commit/f80e9d67cc70ef18a23b8235bf304c79b9ba78e3", "message": "Minor refactoring to be more abstract\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-27T18:09:10Z", "type": "commit"}, {"oid": "9202ceb83305db3ef156d19faf1588d00126e9d6", "url": "https://github.com/PGMDev/PGM/commit/9202ceb83305db3ef156d19faf1588d00126e9d6", "message": "Do not send fake players or custom tab list to 1.7.10 players\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-27T18:58:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1ODg3Ng==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371458876", "body": "Create a util for protocol versions, `47` means nothing but `Protocol.VERSION_1_7` (or something along those lines) is easy to read", "bodyText": "Create a util for protocol versions, 47 means nothing but Protocol.VERSION_1_7 (or something along those lines) is easy to read", "bodyHTML": "<p dir=\"auto\">Create a util for protocol versions, <code>47</code> means nothing but <code>Protocol.VERSION_1_7</code> (or something along those lines) is easy to read</p>", "author": "Pablete1234", "createdAt": "2020-01-27T20:13:47Z", "path": "src/main/java/tc/oc/pgm/listeners/LongRangeTNTListener.java", "diffHunk": "@@ -271,7 +272,9 @@ private void removeTNT(Entity entity, boolean explode) {\n \n   @EventHandler(priority = EventPriority.MONITOR, ignoreCancelled = true)\n   public void onPlayerJoin(final PlayerJoinEvent event) {\n-    this.viewsByPlayer.put(event.getPlayer(), new View(event.getPlayer()));\n+    if (ViaUtils.getProtocolVersion(event.getPlayer()) >= 47) {", "originalCommit": "9202ceb83305db3ef156d19faf1588d00126e9d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTYzMQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371459631", "body": "This is a complete and absolute hack. Don't change the current tab view to avoid sending packets to 1.7 players, give them a new no-op view", "bodyText": "This is a complete and absolute hack. Don't change the current tab view to avoid sending packets to 1.7 players, give them a new no-op view", "bodyHTML": "<p dir=\"auto\">This is a complete and absolute hack. Don't change the current tab view to avoid sending packets to 1.7 players, give them a new no-op view</p>", "author": "Pablete1234", "createdAt": "2020-01-27T20:15:32Z", "path": "src/main/java/tc/oc/tablist/TabRender.java", "diffHunk": "@@ -53,6 +54,9 @@ private BaseComponent getContent(TabEntry entry, int index) {\n   }\n \n   private void appendAddition(TabEntry entry, int index) {\n+    if (ViaUtils.getProtocolVersion(this.view.getViewer()) < 47) {", "originalCommit": "9202ceb83305db3ef156d19faf1588d00126e9d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTczNg==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371459736", "body": "See previous comment", "bodyText": "See previous comment", "bodyHTML": "<p dir=\"auto\">See previous comment</p>", "author": "Pablete1234", "createdAt": "2020-01-27T20:15:45Z", "path": "src/main/java/tc/oc/tablist/TabRender.java", "diffHunk": "@@ -154,6 +158,9 @@ public void setHeaderFooter(TabEntry header, TabEntry footer) {\n   }\n \n   public void updateFakeEntity(TabEntry entry, boolean create) {\n+    if (ViaUtils.getProtocolVersion(this.view.getViewer()) < 47) {", "originalCommit": "9202ceb83305db3ef156d19faf1588d00126e9d6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MDA2MA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371460060", "body": "I don't get why this was changed (and the subsequent changes) if you aren't even changing the MatchTabManager for 1.7/1.8+ players.", "bodyText": "I don't get why this was changed (and the subsequent changes) if you aren't even changing the MatchTabManager for 1.7/1.8+ players.", "bodyHTML": "<p dir=\"auto\">I don't get why this was changed (and the subsequent changes) if you aren't even changing the MatchTabManager for 1.7/1.8+ players.</p>", "author": "Pablete1234", "createdAt": "2020-01-27T20:16:31Z", "path": "src/main/java/tc/oc/pgm/PGMImpl.java", "diffHunk": "@@ -143,12 +160,13 @@\n import tc.oc.pgm.tracker.TrackerMatchModule;\n import tc.oc.pgm.wool.WoolModule;\n import tc.oc.pgm.worldborder.WorldBorderModule;\n+import tc.oc.tablist.TabManager;\n import tc.oc.util.SemanticVersion;\n \n public final class PGMImpl extends JavaPlugin implements PGM {\n \n   private MatchManager matchManager;\n-  private MatchTabManager matchTabManager;\n+  private TabManager tabManager;", "originalCommit": "9202ceb83305db3ef156d19faf1588d00126e9d6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4MzY5Mg==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371483692", "bodyText": "Sorry, I had meant to do something different than what I ended up doing and forgot to undo this.", "author": "Meeples10", "createdAt": "2020-01-27T21:09:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MDA2MA=="}], "type": "inlineReview"}, {"oid": "6dc4d0289d52fe761607bab80c688aeee0d512a0", "url": "https://github.com/PGMDev/PGM/commit/6dc4d0289d52fe761607bab80c688aeee0d512a0", "message": "Revert \"Minor refactoring to be more abstract\"\n\nThis reverts commit f80e9d67cc70ef18a23b8235bf304c79b9ba78e3.\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-27T21:18:46Z", "type": "commit"}, {"oid": "d684dee5c1c24ebfcca282c08622564a03de4cc8", "url": "https://github.com/PGMDev/PGM/commit/d684dee5c1c24ebfcca282c08622564a03de4cc8", "message": "Add static variables for 1.7.10 and 1.8.x protocol numbers\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-27T21:28:34Z", "type": "commit"}, {"oid": "a5f607bb719c1ff034d36a10b548fa27cd90267a", "url": "https://github.com/PGMDev/PGM/commit/a5f607bb719c1ff034d36a10b548fa27cd90267a", "message": "Proper fix for the 1.7.10 tab list\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-28T03:54:53Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4NjMwNA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371886304", "body": "This check shouldn't be here, instead, this renderer shouldn't be called for 1.7 clients", "bodyText": "This check shouldn't be here, instead, this renderer shouldn't be called for 1.7 clients", "bodyHTML": "<p dir=\"auto\">This check shouldn't be here, instead, this renderer shouldn't be called for 1.7 clients</p>", "author": "Pablete1234", "createdAt": "2020-01-28T15:48:11Z", "path": "src/main/java/tc/oc/tablist/TabRender.java", "diffHunk": "@@ -53,6 +54,9 @@ private BaseComponent getContent(TabEntry entry, int index) {\n   }\n \n   private void appendAddition(TabEntry entry, int index) {\n+    if (ViaUtils.getProtocolVersion(this.view.getViewer()) < ViaUtils.VERSION_1_8) {\n+      return;\n+    }", "originalCommit": "a5f607bb719c1ff034d36a10b548fa27cd90267a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg5MjMyMw==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371892323", "body": "Same here", "bodyText": "Same here", "bodyHTML": "<p dir=\"auto\">Same here</p>", "author": "Pablete1234", "createdAt": "2020-01-28T15:57:09Z", "path": "src/main/java/tc/oc/tablist/TabRender.java", "diffHunk": "@@ -154,6 +158,9 @@ public void setHeaderFooter(TabEntry header, TabEntry footer) {\n   }\n \n   public void updateFakeEntity(TabEntry entry, boolean create) {\n+    if (ViaUtils.getProtocolVersion(this.view.getViewer()) < ViaUtils.VERSION_1_8) {\n+      return;\n+    }", "originalCommit": "a5f607bb719c1ff034d36a10b548fa27cd90267a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg5OTA1MA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371899050", "body": "May i ask why this is now necessary?", "bodyText": "May i ask why this is now necessary?", "bodyHTML": "<p dir=\"auto\">May i ask why this is now necessary?</p>", "author": "Pablete1234", "createdAt": "2020-01-28T16:07:30Z", "path": "src/main/java/tc/oc/tablist/TabView.java", "diffHunk": "@@ -365,4 +367,10 @@ protected void onRespawn(PlayerRespawnEvent event) {\n   protected void onWorldChange(PlayerChangedWorldEvent event) {\n     if (this.viewer == event.getPlayer()) this.respawnFakeEntities();\n   }\n+\n+  public void onViewerJoinMatch(PlayerJoinMatchEvent event) {", "originalCommit": "a5f607bb719c1ff034d36a10b548fa27cd90267a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg5OTUxNg==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371899516", "body": "I do not think this is nor should be a listener", "bodyText": "I do not think this is nor should be a listener", "bodyHTML": "<p dir=\"auto\">I do not think this is nor should be a listener</p>", "author": "Pablete1234", "createdAt": "2020-01-28T16:08:15Z", "path": "src/main/java/tc/oc/tablist/TabView.java", "diffHunk": "@@ -16,7 +18,7 @@\n  * bottom and cannot be seen. The fake team names all start with a '\\u0001' character, so they will\n  * always come before any real teams.\n  */\n-public class TabView {\n+public class TabView implements Listener {", "originalCommit": "a5f607bb719c1ff034d36a10b548fa27cd90267a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ae2bb20f339e79ab71c0e7934d70aa33c9869d82", "url": "https://github.com/PGMDev/PGM/commit/ae2bb20f339e79ab71c0e7934d70aa33c9869d82", "message": "Revert unneeded changes\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-28T16:49:23Z", "type": "commit"}, {"oid": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "url": "https://github.com/PGMDev/PGM/commit/652d4e6b3cd8cfa1e83e44e672a08e117886777f", "message": "Remove unneeded logic from LegacyMatchTabView\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-28T18:49:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5MTE5MA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371991190", "body": "Add a comment explaining this is a no-op tab list intended for legacy players", "bodyText": "Add a comment explaining this is a no-op tab list intended for legacy players", "bodyHTML": "<p dir=\"auto\">Add a comment explaining this is a no-op tab list intended for legacy players</p>", "author": "Pablete1234", "createdAt": "2020-01-28T18:51:51Z", "path": "src/main/java/tc/oc/pgm/tablist/LegacyMatchTabView.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package tc.oc.pgm.tablist;\n+\n+import org.bukkit.entity.Player;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.tablist.LegacyTabView;\n+import tc.oc.util.collection.DefaultProvider;\n+", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5MTgxNg==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371991816", "body": "```suggestion\r\n    if (view != null && !(view instanceof Listener)) {\r\n```\r\nWould be more future-proof and need a less specific cast", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (view != null && !(view instanceof LegacyMatchTabView)) {\n          \n          \n            \n                if (view != null && !(view instanceof Listener)) {\n          \n      \n    \n    \n  \n\nWould be more future-proof and need a less specific cast", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>(view <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi x x-first x-last\">LegacyMatchTabView</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>(view <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi x x-first x-last\">Listener</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Would be more future-proof and need a less specific cast</p>", "author": "Pablete1234", "createdAt": "2020-01-28T18:53:04Z", "path": "src/main/java/tc/oc/pgm/tablist/MatchTabManager.java", "diffHunk": "@@ -86,15 +87,15 @@ public void run() {\n   }\n \n   @Override\n-  public @Nullable MatchTabView getViewOrNull(Player viewer) {\n-    return (MatchTabView) super.getViewOrNull(viewer);\n+  public @Nullable TabView getViewOrNull(Player viewer) {\n+    return (TabView) super.getViewOrNull(viewer);\n   }\n \n   @Override\n-  public @Nullable MatchTabView getView(Player viewer) {\n-    MatchTabView view = (MatchTabView) super.getView(viewer);\n-    if (view != null) {\n-      this.registerEvents(view);\n+  public @Nullable TabView getView(Player viewer) {\n+    TabView view = super.getView(viewer);\n+    if (view != null && !(view instanceof LegacyMatchTabView)) {", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5MTkwMQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371991901", "body": "```suggestion\r\n      this.registerEvents((Listener) view);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  this.registerEvents((MatchTabView) view);\n          \n          \n            \n                  this.registerEvents((Listener) view);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>registerEvents((<span class=\"pl-smi x x-first x-last\">MatchTabView</span>) view);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>registerEvents((<span class=\"pl-smi x x-first x-last\">Listener</span>) view);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-01-28T18:53:13Z", "path": "src/main/java/tc/oc/pgm/tablist/MatchTabManager.java", "diffHunk": "@@ -86,15 +87,15 @@ public void run() {\n   }\n \n   @Override\n-  public @Nullable MatchTabView getViewOrNull(Player viewer) {\n-    return (MatchTabView) super.getViewOrNull(viewer);\n+  public @Nullable TabView getViewOrNull(Player viewer) {\n+    return (TabView) super.getViewOrNull(viewer);\n   }\n \n   @Override\n-  public @Nullable MatchTabView getView(Player viewer) {\n-    MatchTabView view = (MatchTabView) super.getView(viewer);\n-    if (view != null) {\n-      this.registerEvents(view);\n+  public @Nullable TabView getView(Player viewer) {\n+    TabView view = super.getView(viewer);\n+    if (view != null && !(view instanceof LegacyMatchTabView)) {\n+      this.registerEvents((MatchTabView) view);", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5MzU5OA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371993598", "body": "If it's not a `LegacyMatchTabView`, it must be `MatchTabView`? Bad assumption to make.\r\n\r\nConsider adding a generic `ListeningTabView` interface or something along those lines that both legacy and match can implement, since the `onViewerJoinMatch` method is actually present on both.", "bodyText": "If it's not a LegacyMatchTabView, it must be MatchTabView? Bad assumption to make.\nConsider adding a generic ListeningTabView interface or something along those lines that both legacy and match can implement, since the onViewerJoinMatch method is actually present on both.", "bodyHTML": "<p dir=\"auto\">If it's not a <code>LegacyMatchTabView</code>, it must be <code>MatchTabView</code>? Bad assumption to make.</p>\n<p dir=\"auto\">Consider adding a generic <code>ListeningTabView</code> interface or something along those lines that both legacy and match can implement, since the <code>onViewerJoinMatch</code> method is actually present on both.</p>", "author": "Pablete1234", "createdAt": "2020-01-28T18:56:39Z", "path": "src/main/java/tc/oc/pgm/tablist/MatchTabManager.java", "diffHunk": "@@ -149,8 +150,10 @@ public void onMatchUnload(MatchUnloadEvent event) {\n   /** Delegated events */\n   @EventHandler(priority = EventPriority.MONITOR, ignoreCancelled = true)\n   public void onJoinMatch(PlayerJoinMatchEvent event) {\n-    MatchTabView view = this.getView(event.getPlayer().getBukkit());\n-    if (view != null) view.onViewerJoinMatch(event);\n+    TabView view = this.getView(event.getPlayer().getBukkit());\n+    if (view != null && !(view instanceof LegacyMatchTabView)) {\n+      ((MatchTabView) view).onViewerJoinMatch(event);\n+    }", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5Mzc1MQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371993751", "body": "```suggestion\r\n    return 3;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return 0;\n          \n          \n            \n                return 3;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first x-last\">0</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first x-last\">3</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-01-28T18:56:56Z", "path": "src/main/java/tc/oc/tablist/LegacyTabView.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package tc.oc.tablist;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.util.collection.DefaultProvider;\n+\n+/**\n+ * The pre-1.8 tab list is severely limited. This is essentially a no-op {@link TabView} for pre-1.8\n+ * clients.\n+ */\n+public class LegacyTabView extends TabView implements Listener {\n+\n+  public static class Factory implements DefaultProvider<Player, LegacyTabView> {\n+    @Override\n+    public LegacyTabView get(Player key) {\n+      return new LegacyTabView(key);\n+    }\n+  }\n+\n+  // The single player seeing this view\n+  private final Player viewer;\n+\n+  protected @Nullable TabManager manager;\n+\n+  public LegacyTabView(Player viewer) {\n+    super(viewer);\n+    this.viewer = viewer;\n+  }\n+\n+  private void assertEnabled() {\n+    if (manager == null)\n+      throw new IllegalStateException(getClass().getSimpleName() + \" is not enabled\");\n+  }\n+\n+  public Player getViewer() {\n+    return viewer;\n+  }\n+\n+  public int getWidth() {\n+    return 0;", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5Mzk0Nw==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371993947", "body": "```suggestion\r\n    return 20;\r\n```\r\nNot sure on this one, may be 30?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return 0;\n          \n          \n            \n                return 20;\n          \n      \n    \n    \n  \n\nNot sure on this one, may be 30?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first x-last\">0</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first x-last\">20</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Not sure on this one, may be 30?</p>", "author": "Pablete1234", "createdAt": "2020-01-28T18:57:17Z", "path": "src/main/java/tc/oc/tablist/LegacyTabView.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package tc.oc.tablist;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.util.collection.DefaultProvider;\n+\n+/**\n+ * The pre-1.8 tab list is severely limited. This is essentially a no-op {@link TabView} for pre-1.8\n+ * clients.\n+ */\n+public class LegacyTabView extends TabView implements Listener {\n+\n+  public static class Factory implements DefaultProvider<Player, LegacyTabView> {\n+    @Override\n+    public LegacyTabView get(Player key) {\n+      return new LegacyTabView(key);\n+    }\n+  }\n+\n+  // The single player seeing this view\n+  private final Player viewer;\n+\n+  protected @Nullable TabManager manager;\n+\n+  public LegacyTabView(Player viewer) {\n+    super(viewer);\n+    this.viewer = viewer;\n+  }\n+\n+  private void assertEnabled() {\n+    if (manager == null)\n+      throw new IllegalStateException(getClass().getSimpleName() + \" is not enabled\");\n+  }\n+\n+  public Player getViewer() {\n+    return viewer;\n+  }\n+\n+  public int getWidth() {\n+    return 0;\n+  }\n+\n+  public int getHeight() {\n+    return 0;", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5NDAyNA==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371994024", "body": "width * height", "bodyText": "width * height", "bodyHTML": "<p dir=\"auto\">width * height</p>", "author": "Pablete1234", "createdAt": "2020-01-28T18:57:24Z", "path": "src/main/java/tc/oc/tablist/LegacyTabView.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package tc.oc.tablist;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.util.collection.DefaultProvider;\n+\n+/**\n+ * The pre-1.8 tab list is severely limited. This is essentially a no-op {@link TabView} for pre-1.8\n+ * clients.\n+ */\n+public class LegacyTabView extends TabView implements Listener {\n+\n+  public static class Factory implements DefaultProvider<Player, LegacyTabView> {\n+    @Override\n+    public LegacyTabView get(Player key) {\n+      return new LegacyTabView(key);\n+    }\n+  }\n+\n+  // The single player seeing this view\n+  private final Player viewer;\n+\n+  protected @Nullable TabManager manager;\n+\n+  public LegacyTabView(Player viewer) {\n+    super(viewer);\n+    this.viewer = viewer;\n+  }\n+\n+  private void assertEnabled() {\n+    if (manager == null)\n+      throw new IllegalStateException(getClass().getSimpleName() + \" is not enabled\");\n+  }\n+\n+  public Player getViewer() {\n+    return viewer;\n+  }\n+\n+  public int getWidth() {\n+    return 0;\n+  }\n+\n+  public int getHeight() {\n+    return 0;\n+  }\n+\n+  public int getSize() {\n+    return 0;", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk5NTg2MQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r371995861", "body": "I think you only need to override the `render()` method to no-op here, everything else either isn't even used nor overriding (like `onViewerJoinMatch`) or you shouldn't be overriding anyways", "bodyText": "I think you only need to override the render() method to no-op here, everything else either isn't even used nor overriding (like onViewerJoinMatch) or you shouldn't be overriding anyways", "bodyHTML": "<p dir=\"auto\">I think you only need to override the <code>render()</code> method to no-op here, everything else either isn't even used nor overriding (like <code>onViewerJoinMatch</code>) or you shouldn't be overriding anyways</p>", "author": "Pablete1234", "createdAt": "2020-01-28T19:00:49Z", "path": "src/main/java/tc/oc/tablist/LegacyTabView.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package tc.oc.tablist;\n+\n+import javax.annotation.Nullable;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.Listener;\n+import tc.oc.pgm.events.PlayerJoinMatchEvent;\n+import tc.oc.util.collection.DefaultProvider;\n+\n+/**\n+ * The pre-1.8 tab list is severely limited. This is essentially a no-op {@link TabView} for pre-1.8\n+ * clients.\n+ */\n+public class LegacyTabView extends TabView implements Listener {\n+\n+  public static class Factory implements DefaultProvider<Player, LegacyTabView> {\n+    @Override\n+    public LegacyTabView get(Player key) {\n+      return new LegacyTabView(key);\n+    }\n+  }\n+\n+  // The single player seeing this view\n+  private final Player viewer;\n+\n+  protected @Nullable TabManager manager;\n+\n+  public LegacyTabView(Player viewer) {\n+    super(viewer);\n+    this.viewer = viewer;\n+  }\n+\n+  private void assertEnabled() {\n+    if (manager == null)\n+      throw new IllegalStateException(getClass().getSimpleName() + \" is not enabled\");\n+  }\n+\n+  public Player getViewer() {\n+    return viewer;\n+  }\n+\n+  public int getWidth() {\n+    return 0;\n+  }\n+\n+  public int getHeight() {\n+    return 0;\n+  }\n+\n+  public int getSize() {\n+    return 0;\n+  }\n+\n+  /** Take control of the viewer's player list */\n+  public void enable(TabManager manager) {\n+    if (this.manager != null) disable();\n+    this.manager = manager;\n+    this.assertEnabled();\n+  }\n+\n+  /** Tear down the display and return control the the viewer's player list to settings */\n+  public void disable() {\n+    if (this.manager != null) {\n+      this.manager.removeView(this);\n+      this.manager = null;\n+    }\n+  }\n+\n+  public void setSlot(int x, int y, @Nullable TabEntry entry) {}\n+\n+  public void setHeader(@Nullable TabEntry entry) {}\n+\n+  public void setFooter(@Nullable TabEntry entry) {}\n+\n+  public void render() {}\n+\n+  public void renderLayout(TabRender render) {}\n+\n+  public void renderContent(TabRender render) {}\n+\n+  public void markSlotsClean() {}\n+\n+  public void renderHeaderFooter(TabRender render, boolean force) {}\n+\n+  public void onViewerJoinMatch(PlayerJoinMatchEvent event) {}", "originalCommit": "652d4e6b3cd8cfa1e83e44e672a08e117886777f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6de1d2bc0bff0cbc6673c3b6a4691390fbb64998", "url": "https://github.com/PGMDev/PGM/commit/6de1d2bc0bff0cbc6673c3b6a4691390fbb64998", "message": "Make changes suggested by Pablo\n\nSigned-off-by: Meeples10 <8867705+Meeples10@users.noreply.github.com>", "committedDate": "2020-01-28T20:27:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyODQ3Ng==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r372128476", "body": "```suggestion\r\n    if (view != null && view instanceof ListeningTabView) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (view instanceof ListeningTabView) {\n          \n          \n            \n                if (view != null && view instanceof ListeningTabView) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ListeningTabView</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k x x-first\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> view </span><span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ListeningTabView</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-01-29T00:09:12Z", "path": "src/main/java/tc/oc/pgm/tablist/MatchTabManager.java", "diffHunk": "@@ -94,8 +95,8 @@ public void run() {\n   @Override\n   public @Nullable TabView getView(Player viewer) {\n     TabView view = super.getView(viewer);\n-    if (view != null && !(view instanceof LegacyMatchTabView)) {\n-      this.registerEvents((MatchTabView) view);\n+    if (view instanceof ListeningTabView) {", "originalCommit": "6de1d2bc0bff0cbc6673c3b6a4691390fbb64998", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTIyNQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r372129225", "bodyText": "Is a null check really needed if there is an instanceof check? instanceof will return false if the object is null.", "author": "Meeples10", "createdAt": "2020-01-29T00:12:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyODQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzOTQxMw==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r372139413", "bodyText": "true, why did it have it before?", "author": "Pablete1234", "createdAt": "2020-01-29T00:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyODQ3Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE0MTA5Mg==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r372141092", "bodyText": "I forgot to remove it when I added the instanceof check.", "author": "Meeples10", "createdAt": "2020-01-29T00:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyODQ3Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyODU1NQ==", "url": "https://github.com/PGMDev/PGM/pull/270#discussion_r372128555", "body": "```suggestion\r\n    if (view != null && view instanceof ListeningTabView) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (view instanceof ListeningTabView) {\n          \n          \n            \n                if (view != null && view instanceof ListeningTabView) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"150\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ListeningTabView</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"150\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (view <span class=\"pl-k x x-first\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> view </span><span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ListeningTabView</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "Pablete1234", "createdAt": "2020-01-29T00:09:34Z", "path": "src/main/java/tc/oc/pgm/tablist/MatchTabManager.java", "diffHunk": "@@ -151,8 +152,8 @@ public void onMatchUnload(MatchUnloadEvent event) {\n   @EventHandler(priority = EventPriority.MONITOR, ignoreCancelled = true)\n   public void onJoinMatch(PlayerJoinMatchEvent event) {\n     TabView view = this.getView(event.getPlayer().getBukkit());\n-    if (view != null && !(view instanceof LegacyMatchTabView)) {\n-      ((MatchTabView) view).onViewerJoinMatch(event);\n+    if (view instanceof ListeningTabView) {", "originalCommit": "6de1d2bc0bff0cbc6673c3b6a4691390fbb64998", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9e35be5814b1d5047127ee727f332cca1972b3b3", "url": "https://github.com/PGMDev/PGM/commit/9e35be5814b1d5047127ee727f332cca1972b3b3", "message": "Merge branch 'master' into fix-tab-list", "committedDate": "2020-01-29T01:23:12Z", "type": "commit"}, {"oid": "00f3ab243524310a5915d145fbe4d0a98143cec5", "url": "https://github.com/PGMDev/PGM/commit/00f3ab243524310a5915d145fbe4d0a98143cec5", "message": "Merge branch 'master' into fix-tab-list", "committedDate": "2020-01-29T17:36:08Z", "type": "commit"}]}