{"pr_number": 1394, "pr_title": "[0253] New vehicle data StabilityControlsStatus", "pr_createdAt": "2020-06-23T09:50:14Z", "pr_url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394", "merge_commit": "494fee526cfd274ccba47c8c9122a8db1e9b131c", "timeline": [{"oid": "0d784b122bf9d245956c0c740755cadd533098c5", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/0d784b122bf9d245956c0c740755cadd533098c5", "message": "[0253]\n    - VehicleDataType\n    - Add StabilityControlsStatus\n    - Implement changes in proper requests responses related to new structs", "committedDate": "2020-06-17T13:47:25Z", "type": "commit"}, {"oid": "2d1ca6b51f61cbaa5adc3df43d3006626a6da1ee", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2d1ca6b51f61cbaa5adc3df43d3006626a6da1ee", "message": "[0253]\n    - Fix tests\n    - Add new tests for StabilityControlsStatus\n    - Fix updated Structs according to specification", "committedDate": "2020-06-21T12:07:40Z", "type": "commit"}, {"oid": "ec297fe656b6d96ae4a7c45c8b3a515802ecafa0", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ec297fe656b6d96ae4a7c45c8b3a515802ecafa0", "message": "[0253]\n   - Add specific struct tests", "committedDate": "2020-06-21T13:28:58Z", "type": "commit"}, {"oid": "fca9e589e27ba01278e2c1f48e5e865ec5fae121", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/fca9e589e27ba01278e2c1f48e5e865ec5fae121", "message": "[0253]\n    - Rename StabilityControlStatus --> StabilityControlsStatus\n    - Update missing tests\n    - Remove useless constructor", "committedDate": "2020-07-02T14:01:12Z", "type": "commit"}, {"oid": "ae6e66bed1c7cd92cd4ff95b46fc2edb140ea853", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/ae6e66bed1c7cd92cd4ff95b46fc2edb140ea853", "message": "Merge branch 'develop' into fork/0253_new_vehicle_data_stability_control_status\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/VehicleDataHelper.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/notifications/OnVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/GetVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/SubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/SubscribeVehicleDataResponseTest.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java", "committedDate": "2020-07-06T14:39:08Z", "type": "commit"}, {"oid": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/c91b3d6dd54228fc3fd17773d577ca0857d34cee", "message": "[0266]\n    - Test --> TestValues in multiple files", "committedDate": "2020-07-06T14:46:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI5NzMyMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458297320", "body": "Remove Unnecessary semicolon", "bodyText": "Remove Unnecessary semicolon", "bodyHTML": "<p dir=\"auto\">Remove Unnecessary semicolon</p>", "author": "JulianKast", "createdAt": "2020-07-21T18:17:34Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "diffHunk": "@@ -167,6 +167,9 @@\n      * @since SmartDeviceLink 6.0\r\n      */\r\n     VEHICLEDATA_OEM_CUSTOM_DATA,\r\n+\r\n+\r\n+    VEHICLEDATA_STABILITYCONTROLSSTATUS;\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 31fb4e8ba..4616bd744 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -1,188 +1,188 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc.enums;\n-\n-/**\n- * Defines the vehicle data types that can be published and subscribed to.\n- * \n- */\n-public enum VehicleDataType {\n-\t/**\n-\t * Notifies GPSData may be subscribed\n-\t */\n-\tVEHICLEDATA_GPS,\n-\t/**\n-\t * Notifies SPEED Data may be subscribed\n-\t */\n-    VEHICLEDATA_SPEED,\n-    /**\n-     * Notifies RPMData may be subscribed\n-     */\n-    VEHICLEDATA_RPM,\n-    /**\n-     * Notifies FUELLEVELData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL,\n-    /**\n-     * Notifies FUELLEVEL_STATEData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL_STATE,\n-/**\n- * Notifies FUELCONSUMPTIONData may be subscribed\n- */\n-    VEHICLEDATA_FUELCONSUMPTION,\n-    /**\n-     * Notifies EXTERNTEMPData may be subscribed\n-     */\n-    VEHICLEDATA_EXTERNTEMP,\n-    /**\n-     * Notifies VINData may be subscribed\n-     */\n-    VEHICLEDATA_VIN,\n-    /**\n-     * Notifies PRNDLData may be subscribed\n-     */\n-    VEHICLEDATA_PRNDL,\n-    /**\n-     * Notifies TIREPRESSUREData may be subscribed\n-     */\n-    VEHICLEDATA_TIREPRESSURE,\n-    /**\n-     * Notifies ODOMETERData may be subscribed\n-     */\n-    VEHICLEDATA_ODOMETER,   \n-    /**\n-     * Notifies BELTSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_BELTSTATUS,\n-    /**\n-     * Notifies BODYINFOData may be subscribed\n-     */\n-    VEHICLEDATA_BODYINFO,\n-    /**\n-     * Notifies DEVICESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_DEVICESTATUS,\n-    /**\n-     * Notifies BRAKINGData may be subscribed\n-     */\n-    VEHICLEDATA_BRAKING,\n-    /**\n-     * Notifies WIPERSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_WIPERSTATUS,\n-    /**\n-     * Notifies HEADLAMPSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_HEADLAMPSTATUS,\n-    /**\n-     * Notifies BATTVOLTAGEData may be subscribed\n-     */\n-    VEHICLEDATA_BATTVOLTAGE,\n-    /**\n-     * Notifies EGINETORQUEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINETORQUE,\n-    /**\n-     * Notifies ENGINEOILLIFEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINEOILLIFE,\n-    /**\n-     * Notifies ACCPEDALData may be subscribed\n-     */\n-    VEHICLEDATA_ACCPEDAL,\n-    /**\n-     * Notifies STEERINGWHEELData may be subscribed\n-     */\n-    VEHICLEDATA_STEERINGWHEEL,\n-    /**\n-     * Notifies ECALLINFOData may be subscribed\n-     */\n-    VEHICLEDATA_ECALLINFO,\n-    /**\n-     * Notifies AIRBAGSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_AIRBAGSTATUS,\n-    /**\n-     * Notifies EMERGENCYEVENTData may be subscribed\n-     */\n-    VEHICLEDATA_EMERGENCYEVENT,\n-    /**\n-     * Notifies CLUSTERMODESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_CLUSTERMODESTATUS,\n-    /**\n-     * Notifies MYKEYData may be subscribed\n-     */\n-    VEHICLEDATA_MYKEY,\n-\n-    VEHICLEDATA_FUELRANGE,\n-\n-    /**\n-     * Notifies TURNSIGNALData may be subscribed\n-     */\n-    VEHICLEDATA_TURNSIGNAL,\n-\n-    /**\n-     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n-\n-    /**\n-     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n-     */\n-    VEHICLEDATA_CLOUDAPPVEHICLEID,\n-    /**\n-     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n-     *\n-     * @since SmartDeviceLink 6.0\n-     */\n-    VEHICLEDATA_OEM_CUSTOM_DATA,\n-\n-\n-    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n-    ;\n-\n-     /**\n-     * Convert String to VehicleDataType\n-     * @param value String\n-     * @return VehicleDataType\n-     */\n-\n-    public static VehicleDataType valueForString(String value) {\n-        try{\n-            return valueOf(value);\n-        }catch(Exception e){\n-            return null;\n-        }\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc.enums;\n+\n+/**\n+ * Defines the vehicle data types that can be published and subscribed to.\n+ *\n+ */\n+public enum VehicleDataType {\n+\t/**\n+\t * Notifies GPSData may be subscribed\n+\t */\n+\tVEHICLEDATA_GPS,\n+\t/**\n+\t * Notifies SPEED Data may be subscribed\n+\t */\n+    VEHICLEDATA_SPEED,\n+    /**\n+     * Notifies RPMData may be subscribed\n+     */\n+    VEHICLEDATA_RPM,\n+    /**\n+     * Notifies FUELLEVELData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL,\n+    /**\n+     * Notifies FUELLEVEL_STATEData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL_STATE,\n+    /**\n+     * Notifies FUELCONSUMPTIONData may be subscribed\n+     */\n+    VEHICLEDATA_FUELCONSUMPTION,\n+    /**\n+     * Notifies EXTERNTEMPData may be subscribed\n+     */\n+    VEHICLEDATA_EXTERNTEMP,\n+    /**\n+     * Notifies VINData may be subscribed\n+     */\n+    VEHICLEDATA_VIN,\n+    /**\n+     * Notifies PRNDLData may be subscribed\n+     */\n+    VEHICLEDATA_PRNDL,\n+    /**\n+     * Notifies TIREPRESSUREData may be subscribed\n+     */\n+    VEHICLEDATA_TIREPRESSURE,\n+    /**\n+     * Notifies ODOMETERData may be subscribed\n+     */\n+    VEHICLEDATA_ODOMETER,\n+    /**\n+     * Notifies BELTSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_BELTSTATUS,\n+    /**\n+     * Notifies BODYINFOData may be subscribed\n+     */\n+    VEHICLEDATA_BODYINFO,\n+    /**\n+     * Notifies DEVICESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_DEVICESTATUS,\n+    /**\n+     * Notifies BRAKINGData may be subscribed\n+     */\n+    VEHICLEDATA_BRAKING,\n+    /**\n+     * Notifies WIPERSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_WIPERSTATUS,\n+    /**\n+     * Notifies HEADLAMPSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_HEADLAMPSTATUS,\n+    /**\n+     * Notifies BATTVOLTAGEData may be subscribed\n+     */\n+    VEHICLEDATA_BATTVOLTAGE,\n+    /**\n+     * Notifies EGINETORQUEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINETORQUE,\n+    /**\n+     * Notifies ENGINEOILLIFEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINEOILLIFE,\n+    /**\n+     * Notifies ACCPEDALData may be subscribed\n+     */\n+    VEHICLEDATA_ACCPEDAL,\n+    /**\n+     * Notifies STEERINGWHEELData may be subscribed\n+     */\n+    VEHICLEDATA_STEERINGWHEEL,\n+    /**\n+     * Notifies ECALLINFOData may be subscribed\n+     */\n+    VEHICLEDATA_ECALLINFO,\n+    /**\n+     * Notifies AIRBAGSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_AIRBAGSTATUS,\n+    /**\n+     * Notifies EMERGENCYEVENTData may be subscribed\n+     */\n+    VEHICLEDATA_EMERGENCYEVENT,\n+    /**\n+     * Notifies CLUSTERMODESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_CLUSTERMODESTATUS,\n+    /**\n+     * Notifies MYKEYData may be subscribed\n+     */\n+    VEHICLEDATA_MYKEY,\n+\n+    VEHICLEDATA_FUELRANGE,\n+\n+    /**\n+     * Notifies TURNSIGNALData may be subscribed\n+     */\n+    VEHICLEDATA_TURNSIGNAL,\n+\n+    /**\n+     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n+\n+    /**\n+     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n+     */\n+    VEHICLEDATA_CLOUDAPPVEHICLEID,\n+    /**\n+     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n+     *\n+     * @since SmartDeviceLink 6.0\n+     */\n+    VEHICLEDATA_OEM_CUSTOM_DATA,\n+    /**\n+     * @since SmartDeviceLink 6.2.0\n+     */\n+    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n+\n+     /**\n+     * Convert String to VehicleDataType\n+     * @param value String\n+     * @return VehicleDataType\n+     */\n+\n+    public static VehicleDataType valueForString(String value) {\n+        try {\n+            return valueOf(value);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+}\n", "next_change": {"commit": "56a2d97385ac35bede9b7edfd7570814fb8810ea", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 4616bd744..3393f0ed7 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -179,9 +179,9 @@ public enum VehicleDataType {\n      */\n \n     public static VehicleDataType valueForString(String value) {\n-        try {\n+        try{\n             return valueOf(value);\n-        } catch (Exception e) {\n+        }catch(Exception e){\n             return null;\n         }\n     }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 3393f0ed7..12b1ec5d2 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -1,188 +1,194 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc.enums;\n-\n-/**\n- * Defines the vehicle data types that can be published and subscribed to.\n- * \n- */\n-public enum VehicleDataType {\n-\t/**\n-\t * Notifies GPSData may be subscribed\n-\t */\n-\tVEHICLEDATA_GPS,\n-\t/**\n-\t * Notifies SPEED Data may be subscribed\n-\t */\n-    VEHICLEDATA_SPEED,\n-    /**\n-     * Notifies RPMData may be subscribed\n-     */\n-    VEHICLEDATA_RPM,\n-    /**\n-     * Notifies FUELLEVELData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL,\n-    /**\n-     * Notifies FUELLEVEL_STATEData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL_STATE,\n-/**\n- * Notifies FUELCONSUMPTIONData may be subscribed\n- */\n-    VEHICLEDATA_FUELCONSUMPTION,\n-    /**\n-     * Notifies EXTERNTEMPData may be subscribed\n-     */\n-    VEHICLEDATA_EXTERNTEMP,\n-    /**\n-     * Notifies VINData may be subscribed\n-     */\n-    VEHICLEDATA_VIN,\n-    /**\n-     * Notifies PRNDLData may be subscribed\n-     */\n-    VEHICLEDATA_PRNDL,\n-    /**\n-     * Notifies TIREPRESSUREData may be subscribed\n-     */\n-    VEHICLEDATA_TIREPRESSURE,\n-    /**\n-     * Notifies ODOMETERData may be subscribed\n-     */\n-    VEHICLEDATA_ODOMETER,   \n-    /**\n-     * Notifies BELTSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_BELTSTATUS,\n-    /**\n-     * Notifies BODYINFOData may be subscribed\n-     */\n-    VEHICLEDATA_BODYINFO,\n-    /**\n-     * Notifies DEVICESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_DEVICESTATUS,\n-    /**\n-     * Notifies BRAKINGData may be subscribed\n-     */\n-    VEHICLEDATA_BRAKING,\n-    /**\n-     * Notifies WIPERSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_WIPERSTATUS,\n-    /**\n-     * Notifies HEADLAMPSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_HEADLAMPSTATUS,\n-    /**\n-     * Notifies BATTVOLTAGEData may be subscribed\n-     */\n-    VEHICLEDATA_BATTVOLTAGE,\n-    /**\n-     * Notifies EGINETORQUEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINETORQUE,\n-    /**\n-     * Notifies ENGINEOILLIFEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINEOILLIFE,\n-    /**\n-     * Notifies ACCPEDALData may be subscribed\n-     */\n-    VEHICLEDATA_ACCPEDAL,\n-    /**\n-     * Notifies STEERINGWHEELData may be subscribed\n-     */\n-    VEHICLEDATA_STEERINGWHEEL,\n-    /**\n-     * Notifies ECALLINFOData may be subscribed\n-     */\n-    VEHICLEDATA_ECALLINFO,\n-    /**\n-     * Notifies AIRBAGSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_AIRBAGSTATUS,\n-    /**\n-     * Notifies EMERGENCYEVENTData may be subscribed\n-     */\n-    VEHICLEDATA_EMERGENCYEVENT,\n-    /**\n-     * Notifies CLUSTERMODESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_CLUSTERMODESTATUS,\n-    /**\n-     * Notifies MYKEYData may be subscribed\n-     */\n-    VEHICLEDATA_MYKEY,\n-\n-    VEHICLEDATA_FUELRANGE,\n-\n-    /**\n-     * Notifies TURNSIGNALData may be subscribed\n-     */\n-    VEHICLEDATA_TURNSIGNAL,\n-\n-    /**\n-     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n-\n-    /**\n-     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n-     */\n-    VEHICLEDATA_CLOUDAPPVEHICLEID,\n-    /**\n-     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n-     *\n-     * @since SmartDeviceLink 6.0\n-     */\n-    VEHICLEDATA_OEM_CUSTOM_DATA,\n-    /**\n-     * @since SmartDeviceLink 6.2.0\n-     */\n-    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n-\n-     /**\n-     * Convert String to VehicleDataType\n-     * @param value String\n-     * @return VehicleDataType\n-     */\n-\n-    public static VehicleDataType valueForString(String value) {\n-        try{\n-            return valueOf(value);\n-        }catch(Exception e){\n-            return null;\n-        }\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc.enums;\n+\n+/**\n+ * Defines the vehicle data types that can be published and subscribed to.\n+ * \n+ */\n+public enum VehicleDataType {\n+\t/**\n+\t * Notifies GPSData may be subscribed\n+\t */\n+\tVEHICLEDATA_GPS,\n+\t/**\n+\t * Notifies SPEED Data may be subscribed\n+\t */\n+    VEHICLEDATA_SPEED,\n+    /**\n+     * Notifies RPMData may be subscribed\n+     */\n+    VEHICLEDATA_RPM,\n+    /**\n+     * Notifies FUELLEVELData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL,\n+    /**\n+     * Notifies FUELLEVEL_STATEData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL_STATE,\n+/**\n+ * Notifies FUELCONSUMPTIONData may be subscribed\n+ */\n+    VEHICLEDATA_FUELCONSUMPTION,\n+    /**\n+     * Notifies EXTERNTEMPData may be subscribed\n+     */\n+    VEHICLEDATA_EXTERNTEMP,\n+    /**\n+     * Notifies VINData may be subscribed\n+     */\n+    VEHICLEDATA_VIN,\n+    /**\n+     * Notifies PRNDLData may be subscribed\n+     */\n+    VEHICLEDATA_PRNDL,\n+    /**\n+     * Notifies TIREPRESSUREData may be subscribed\n+     */\n+    VEHICLEDATA_TIREPRESSURE,\n+    /**\n+     * Notifies ODOMETERData may be subscribed\n+     */\n+    VEHICLEDATA_ODOMETER,   \n+    /**\n+     * Notifies BELTSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_BELTSTATUS,\n+    /**\n+     * Notifies BODYINFOData may be subscribed\n+     */\n+    VEHICLEDATA_BODYINFO,\n+    /**\n+     * Notifies DEVICESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_DEVICESTATUS,\n+    /**\n+     * Notifies BRAKINGData may be subscribed\n+     */\n+    VEHICLEDATA_BRAKING,\n+    /**\n+     * Notifies WIPERSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_WIPERSTATUS,\n+    /**\n+     * Notifies HEADLAMPSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_HEADLAMPSTATUS,\n+    /**\n+     * Notifies BATTVOLTAGEData may be subscribed\n+     */\n+    VEHICLEDATA_BATTVOLTAGE,\n+    /**\n+     * Notifies EGINETORQUEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINETORQUE,\n+    /**\n+     * Notifies ENGINEOILLIFEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINEOILLIFE,\n+    /**\n+     * Notifies ACCPEDALData may be subscribed\n+     */\n+    VEHICLEDATA_ACCPEDAL,\n+    /**\n+     * Notifies STEERINGWHEELData may be subscribed\n+     */\n+    VEHICLEDATA_STEERINGWHEEL,\n+    /**\n+     * Notifies ECALLINFOData may be subscribed\n+     */\n+    VEHICLEDATA_ECALLINFO,\n+    /**\n+     * Notifies AIRBAGSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_AIRBAGSTATUS,\n+    /**\n+     * Notifies EMERGENCYEVENTData may be subscribed\n+     */\n+    VEHICLEDATA_EMERGENCYEVENT,\n+    /**\n+     * Notifies CLUSTERMODESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_CLUSTERMODESTATUS,\n+    /**\n+     * Notifies MYKEYData may be subscribed\n+     */\n+    VEHICLEDATA_MYKEY,\n+\n+    VEHICLEDATA_FUELRANGE,\n+\n+    /**\n+     * Notifies TURNSIGNALData may be subscribed\n+     */\n+    VEHICLEDATA_TURNSIGNAL,\n+\n+    /**\n+     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n+\n+    /**\n+     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n+     */\n+    VEHICLEDATA_CLOUDAPPVEHICLEID,\n+    /**\n+     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n+     *\n+     * @since SmartDeviceLink 6.0\n+     */\n+    VEHICLEDATA_OEM_CUSTOM_DATA,\n+\n+    /**\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    VEHICLEDATA_HANDSOFFSTEERING,\n+\n+    /**\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n+\n+     /**\n+     * Convert String to VehicleDataType\n+     * @param value String\n+     * @return VehicleDataType\n+     */\n+\n+    public static VehicleDataType valueForString(String value) {\n+        try{\n+            return valueOf(value);\n+        }catch(Exception e){\n+            return null;\n+        }\n+    }\n+}\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwMjExNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458302116", "body": "For the added Methodes in this class, We are trying to maintain a consistent format throughout our library and are in the process of doing this, will you add a space before { to look like:\r\n```\r\npublic void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\r\n ```", "bodyText": "For the added Methodes in this class, We are trying to maintain a consistent format throughout our library and are in the process of doing this, will you add a space before { to look like:\npublic void setStabilityControlsStatus(Boolean stabilityControlsStatus) {", "bodyHTML": "<p dir=\"auto\">For the added Methodes in this class, We are trying to maintain a consistent format throughout our library and are in the process of doing this, will you add a space before { to look like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n\"><pre><code>public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-21T18:25:48Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -864,21 +865,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n \tpublic Boolean getCloudAppVehicleID(){\r\n \t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n \t}\r\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-}\n+\r\n+\t/**\r\n+\t * Sets a boolean value for OEM Custom VehicleData.\r\n+\t * @param vehicleDataName a String value\r\n+\t * @param vehicleDataState a boolean value\r\n+\t */\r\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for OEM Custom VehicleData.\r\n+\t * @return a Boolean value.\r\n+\t */\r\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+\t\treturn getBoolean(vehicleDataName);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sets a boolean value for StabilityControlsStatus.\r\n+\t * @param stabilityControlsStatus a Boolean value\r\n+\t */\r\n+\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 01c8784ec..8ee514cbc 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,901 +1,882 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- * \n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * \n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>SmartDeviceLink Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *   </table>\n- *  \n- * <p> <b>Response</b></p>\n- *<p><b>Non-default Result Codes:</b></p>\n- *<p>SUCCESS</p>\n- *<p>WARNINGS </p>     \n- *<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED </p>\n- *\t<p>DISALLOWED</p>\n- *\t<p>USER_DISALLOWED </p>\n- * \n- * @since SmartDeviceLink 2.0\n- * @see UnsubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleData object\n-\t */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes rpm data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been subscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-  \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Fuel Range data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-\t *         has been subscribed.\n-\t *\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus(){\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a Boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ *\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ *\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleData object\n+     */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * subscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * subscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * subscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes rpm data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been subscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been subscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been subscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been subscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been subscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been subscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been subscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been subscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been subscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Fuel Range data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 8ee514cbc..69f8fbc32 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,882 +1,940 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- *\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- *\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0.0\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleData object\n-     */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Gps data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Gps data has been\n-     * subscribed.\n-     */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Gps data\n-     *\n-     * @param gps a boolean value\n-     */\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Speed data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Speed data has been\n-     * subscribed.\n-     */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes speed data\n-     *\n-     * @param speed a boolean value\n-     */\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the rpm data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the rpm data has been\n-     * subscribed.\n-     */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes rpm data\n-     *\n-     * @param rpm a boolean value\n-     */\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the FuelLevel data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-     * been subscribed.\n-     */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes FuelLevel data\n-     *\n-     * @param fuelLevel a boolean value\n-     */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     * has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     *\n-     * @param fuelLevel_State a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     *\n-     * @param fuelLevelState a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-     * has been subscribed.\n-     */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-     *\n-     * @param instantFuelConsumption a boolean value\n-     */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the externalTemperature data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-     * has been subscribed.\n-     */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes externalTemperature data\n-     *\n-     * @param externalTemperature a boolean value\n-     */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Currently selected gear data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-     * has been subscribed.\n-     */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Currently selected gear data\n-     *\n-     * @param prndl a boolean value\n-     */\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the tire pressure status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-     * has been subscribed.\n-     */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes tire pressure status data\n-     *\n-     * @param tirePressure a boolean value\n-     */\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the odometer data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the odometer data\n-     * has been subscribed.\n-     */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes odometer data\n-     *\n-     * @param odometer a boolean value\n-     */\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the belt Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the belt Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes belt Status data\n-     *\n-     * @param beltStatus a boolean value\n-     */\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the body Information data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the body Information data\n-     * has been subscribed.\n-     */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes body Information data\n-     *\n-     * @param bodyInformation a boolean value\n-     */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the device Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the device Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes device Status data\n-     *\n-     * @param deviceStatus a boolean value\n-     */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the driver Braking data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the driver Braking data\n-     * has been subscribed.\n-     */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes driver Braking data\n-     *\n-     * @param driverBraking a boolean value\n-     */\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the wiper Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the wiper Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes wiper Status data\n-     *\n-     * @param wiperStatus a boolean value\n-     */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Head Lamp Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Head Lamp Status data\n-     *\n-     * @param headLampStatus a boolean value\n-     */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Oil Life data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Oil Life data\n-     *\n-     * @param engineOilLife a boolean value\n-     */\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Torque data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Torque data\n-     *\n-     * @param engineTorque a boolean value\n-     */\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the accPedalPosition data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-     * has been subscribed.\n-     */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes accPedalPosition data\n-     *\n-     * @param accPedalPosition a boolean value\n-     */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Fuel Range data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelRange data\n-     *\n-     * @param fuelRange a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     *\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     *\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-     *\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ * \n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * \n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>SmartDeviceLink Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t    <tr>\n+ *        \t<td>stabilityControlsStatus</td>\n+ * \t\t    <td>Boolean</td>\n+ * \t\t    <td>See StabilityControlsStatus</td>\n+ * \t\t    <td>N</td>\n+ * \t\t    <td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ *   </table>\n+ *  \n+ * <p> <b>Response</b></p>\n+ *<p><b>Non-default Result Codes:</b></p>\n+ *<p>SUCCESS</p>\n+ *<p>WARNINGS </p>     \n+ *<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED </p>\n+ *\t<p>DISALLOWED</p>\n+ *\t<p>USER_DISALLOWED </p>\n+ * \n+ * @since SmartDeviceLink 2.0\n+ * @see UnsubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleData object\n+\t */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes rpm data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been subscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes accPedalPosition data\n+\t *\n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+  \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Fuel Range data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+\t *         has been subscribed.\n+\t *\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus(){\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value\n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxMjA5OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458312099", "body": "For all Methods in this class, to be consistent, will you add a space before { to look like:\r\n```\r\n public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n```", "bodyText": "For all Methods in this class, to be consistent, will you add a space before { to look like:\n public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {", "bodyHTML": "<p dir=\"auto\">For all Methods in this class, to be consistent, will you add a space before { to look like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n\"><pre><code> public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-21T18:43:13Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -582,21 +582,37 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a StabilityControlsStatus value\r\n+     */\r\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 2b56e7ed4..3e286b6c8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,618 +1,674 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Callback for the periodic and non periodic vehicle data read function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>GPSData</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Float</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Integer</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Float</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>ComponentVolumeStatus</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Float</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>List<FuelRange></td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Float</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>TurnSignal</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>String</td>\n+ *      <td>Vehicle identification number.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>PRNDL</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>TireStatus</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Integer</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>BeltStatus</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>BodyInformation</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>DeviceStatus</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>VehicleDataEventStatus</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>WiperStatus</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>HeadLampStatus</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Float</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Float</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Float</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Float</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>ElectronicParkBrakeStatus</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>String</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>StabilityControlsStatus</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>ECallInfo</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>AirbagStatus</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>EmergencyEvent</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>ClusterModeStatus</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>MyKey</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "8316ec6cfdf9b5f228765a8b1b8475950e54de61", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 3e286b6c8..e0a1dc013 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -671,4 +634,24 @@ public class OnVehicleData extends RPCNotification {\n     public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n         setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n     }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex e0a1dc013..d1572e3da 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,657 +1,657 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *  \n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ * \n+ * <p> <b>Note:</b></p>\n+ * \n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ * \n+ *\n+ * \n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+}\n", "next_change": {"commit": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex d1572e3da..a5cbb162c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -654,4 +754,23 @@ public class OnVehicleData extends RPCNotification {\n     public Boolean getHandsOffSteering() {\n         return getBoolean(KEY_HANDS_OFF_STEERING);\n     }\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n }\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "494fee526cfd274ccba47c8c9122a8db1e9b131c", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 2b56e7ed4..a5cbb162c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -601,18 +695,82 @@ public class OnVehicleData extends RPCNotification {\n     }\n \n     /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a StabilityControlsStatus value\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    public void setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n     }\n \n     /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n      */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n         return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n     }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n }\n", "next_change": {"commit": "8cc7bbcd38d811c45deb2fb3cacc2b32f10e81f4", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex a5cbb162c..6a064d8e6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -773,4 +875,26 @@ public class OnVehicleData extends RPCNotification {\n     public GearStatus getGearStatus() {\n         return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n     }\n+\n+\n+    /**\n+     * Sets the climateData.\n+     *\n+     * @param climateData See ClimateData\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public OnVehicleData setClimateData(Boolean climateData) {\n+        setParameters(KEY_CLIMATE_DATA, climateData);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the climateData.\n+     *\n+     * @return Boolean See ClimateData\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public Boolean getClimateData() {\n+        return getBoolean(KEY_CLIMATE_DATA);\n+    }\n }\n", "next_change": {"commit": "0fd82e67739d0110d5b641501993e8df63911145", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 6a064d8e6..fd624c385 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -891,10 +892,10 @@ public class OnVehicleData extends RPCNotification {\n     /**\n      * Gets the climateData.\n      *\n-     * @return Boolean See ClimateData\n+     * @return ClimateData See ClimateData\n      * @since SmartDeviceLink 7.1.0\n      */\n-    public Boolean getClimateData() {\n-        return getBoolean(KEY_CLIMATE_DATA);\n+    public ClimateData getClimateData() {\n+        return (ClimateData) getObject(ClimateData.class, KEY_CLIMATE_DATA);\n     }\n }\n", "next_change": {"commit": "e4d9170f69ece9dc2bb26a545d7e82bd3a7539e8", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex fd624c385..3a904e93b 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,901 +1,885 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Individual requested DID result and data.\n- *\n- *\n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- *\n- * <p> <b>Note:</b></p>\n- * <p>\n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- *\n- *\n- *\n- *\n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelRange</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>{\"array_min_size\": 0, \"array_max_size\": 100}</td>\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>gearStatus</td>\n- *          <td>GearStatus</td>\n- *          <td>See GearStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>gearStatus</td>\n- *          <td>GearStatus</td>\n- *          <td>See GearStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>prndl</td>\n- *          <td>PRNDL</td>\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvent</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- * \t\t\t\t<td>N</td>\n- * \t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>windowStatus</td>\n- *          <td>Boolean</td>\n- *          <td>See WindowStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  </table>\n- *\n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 1.0\n- */\n-public class OnVehicleData extends RPCNotification {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    /**\n-     * @since SmartDeviceLink 2.0.0\n-     * @deprecated in SmartDeviceLink 7.1.0\n-     */\n-    @Deprecated\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_VIN = \"vin\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n-    /**\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public static final String KEY_CLIMATE_DATA = \"climateData\";\n-    /**\n-     * @deprecated\n-     */\n-    @Deprecated\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    /**\n-     * @deprecated\n-     */\n-    @Deprecated\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public OnVehicleData setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-        return this;\n-    }\n-\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-\n-    public OnVehicleData setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-        return this;\n-    }\n-\n-    public Double getSpeed() {\n-        Object object = getParameters(KEY_SPEED);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-        return this;\n-    }\n-\n-    public Integer getRpm() {\n-        return getInteger(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets the fuelLevel.\n-     *\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n-     *                  7.0, please see fuelRange.\n-     */\n-    @Deprecated\n-    public OnVehicleData setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the fuelLevel.\n-     *\n-     * @return Float The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n-     * 7.0, please see fuelRange.\n-     */\n-    @Deprecated\n-    public Double getFuelLevel() {\n-        Object object = getParameters(KEY_FUEL_LEVEL);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    @Deprecated\n-    public OnVehicleData setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-        return this;\n-    }\n-\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public OnVehicleData setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-        return this;\n-    }\n-\n-    public Double getInstantFuelConsumption() {\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    /**\n-     * Sets the externalTemperature.\n-     *\n-     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n-     * Spec 7.1, please see climateData.\n-     * @since SmartDeviceLink 2.0.0\n-     * @deprecated in SmartDeviceLink 7.1.0\n-     */\n-    @Deprecated\n-    public OnVehicleData setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the externalTemperature.\n-     *\n-     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\n-     * Spec 7.1, please see climateData.\n-     * @since SmartDeviceLink 2.0.0\n-     * @deprecated in SmartDeviceLink 7.1.0\n-     */\n-    @Deprecated\n-    public Double getExternalTemperature() {\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-        return this;\n-    }\n-\n-    public String getVin() {\n-        return getString(KEY_VIN);\n-    }\n-\n-    /**\n-     * Sets the prndl.\n-     *\n-     * @param prndl See PRNDL. This parameter is deprecated since 7.0.0 and it is now covered in `gearStatus`\n-     * @deprecated in SmartDeviceLink 7.0.0\n-     */\n-    @Deprecated\n-    public OnVehicleData setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the prndl.\n-     *\n-     * @return PRNDL See PRNDL. This parameter since 7.0.0 is deprecated and it is now covered in `gearStatus`\n-     * @deprecated in SmartDeviceLink 7.0.0\n-     */\n-    @Deprecated\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets the tirePressure.\n-     *\n-     * @param tirePressure See TireStatus\n-     */\n-    public OnVehicleData setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-        return this;\n-    }\n-\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    public OnVehicleData setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-        return this;\n-    }\n-\n-    public Integer getOdometer() {\n-        return getInteger(KEY_ODOMETER);\n-    }\n-\n-    public OnVehicleData setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-        return this;\n-    }\n-\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-\n-    public OnVehicleData setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-        return this;\n-    }\n-\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    public OnVehicleData setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-        return this;\n-    }\n-\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    public OnVehicleData setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-        return this;\n-    }\n-\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    public OnVehicleData setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-        return this;\n-    }\n-\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-\n-    public OnVehicleData setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-        return this;\n-    }\n-\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public OnVehicleData setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-        return this;\n-    }\n-\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-        return this;\n-    }\n-\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public OnVehicleData setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-        return this;\n-    }\n-\n-    public Double getAccPedalPosition() {\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-        return this;\n-    }\n-\n-    public Double getSteeringWheelAngle() {\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-        return this;\n-    }\n-\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public OnVehicleData setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-        return this;\n-    }\n-\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public OnVehicleData setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-        return this;\n-    }\n-\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public OnVehicleData setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-        return this;\n-    }\n-\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public OnVehicleData setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-        return this;\n-    }\n-\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets the fuelRange.\n-     *\n-     * @param fuelRange The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n-     *                  vehicle. See struct FuelRange for details.\n-     *                  {\"array_min_size\": 0, \"array_max_size\": 100}\n-     * @since SmartDeviceLink 5.0.0\n-     */\n-    public OnVehicleData setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the fuelRange.\n-     *\n-     * @return List<FuelRange> The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n-     * vehicle. See struct FuelRange for details.\n-     * {\"array_min_size\": 0, \"array_max_size\": 100}\n-     * @since SmartDeviceLink 5.0.0\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal\n-     */\n-    public OnVehicleData setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return TurnSignal\n-     */\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus\n-     */\n-    public OnVehicleData setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     *\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public OnVehicleData setCloudAppVehicleID(String cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     *\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID() {\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public OnVehicleData setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     *\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the windowStatus.\n-     *\n-     * @param windowStatus See WindowStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setWindowStatus(List<WindowStatus> windowStatus) {\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the windowStatus.\n-     *\n-     * @return List<WindowStatus> See WindowStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus() {\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-\n-    /**\n-     * Sets the gearStatus.\n-     *\n-     * @param gearStatus See GearStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setGearStatus(GearStatus gearStatus) {\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the gearStatus.\n-     *\n-     * @return GearStatus See GearStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public GearStatus getGearStatus() {\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n-    }\n-\n-\n-    /**\n-     * Sets the climateData.\n-     *\n-     * @param climateData See ClimateData\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public OnVehicleData setClimateData(ClimateData climateData) {\n-        setParameters(KEY_CLIMATE_DATA, climateData);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the climateData.\n-     *\n-     * @return ClimateData See ClimateData\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public ClimateData getClimateData() {\n-        return (ClimateData) getObject(ClimateData.class, KEY_CLIMATE_DATA);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Individual requested DID result and data.\n+ *\n+ *\n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ *\n+ * <p> <b>Note:</b></p>\n+ * <p>\n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ *\n+ *\n+ *\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>{\"array_min_size\": 0, \"array_max_size\": 100}</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>GearStatus</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>GearStatus</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>prndl</td>\n+ *          <td>PRNDL</td>\n+ *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvent</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ * \t\t\t\t<td>N</td>\n+ * \t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>windowStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See WindowStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *          <td>seatOccupancy</td>\n+ *          <td>SeatOccupancy</td>\n+ *          <td>See SeatOccupancy</td>\n+ *          <td>N</td>\n+ *          <td></td>\n+ *          <td>\n+ *          @since SmartDeviceLink 7.1.0\n+ *          </td>\n+ *  </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_SEAT_OCCUPANCY = \"seatOccupancy\";\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public OnVehicleData setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public OnVehicleData setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public OnVehicleData setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Float The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    @Deprecated\n+    public OnVehicleData setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public OnVehicleData setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+        return this;\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    /**\n+     * Sets the prndl.\n+     *\n+     * @param prndl See PRNDL. This parameter is deprecated since 7.0.0 and it is now covered in `gearStatus`\n+     * @deprecated in SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public OnVehicleData setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the prndl.\n+     *\n+     * @return PRNDL See PRNDL. This parameter since 7.0.0 is deprecated and it is now covered in `gearStatus`\n+     * @deprecated in SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets the tirePressure.\n+     *\n+     * @param tirePressure See TireStatus\n+     */\n+    public OnVehicleData setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+        return this;\n+    }\n+\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public OnVehicleData setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+        return this;\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public OnVehicleData setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+        return this;\n+    }\n+\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public OnVehicleData setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+        return this;\n+    }\n+\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public OnVehicleData setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+        return this;\n+    }\n+\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public OnVehicleData setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+        return this;\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public OnVehicleData setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+        return this;\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public OnVehicleData setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+        return this;\n+    }\n+\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public OnVehicleData setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+        return this;\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+        return this;\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public OnVehicleData setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+        return this;\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+        return this;\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+        return this;\n+    }\n+\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public OnVehicleData setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+        return this;\n+    }\n+\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public OnVehicleData setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+        return this;\n+    }\n+\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public OnVehicleData setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+        return this;\n+    }\n+\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public OnVehicleData setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+        return this;\n+    }\n+\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets the fuelRange.\n+     *\n+     * @param fuelRange The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n+     *                  vehicle. See struct FuelRange for details.\n+     *                  {\"array_min_size\": 0, \"array_max_size\": 100}\n+     * @since SmartDeviceLink 5.0.0\n+     */\n+    public OnVehicleData setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelRange.\n+     *\n+     * @return List<FuelRange> The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n+     * vehicle. See struct FuelRange for details.\n+     * {\"array_min_size\": 0, \"array_max_size\": 100}\n+     * @since SmartDeviceLink 5.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public OnVehicleData setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public OnVehicleData setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public OnVehicleData setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public OnVehicleData setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n+    /**\n+     * Sets the seatOccupancy.\n+     *\n+     * @param seatOccupancy See SeatOccupancy\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public OnVehicleData setSeatOccupancy(SeatOccupancy seatOccupancy) {\n+        setParameters(KEY_SEAT_OCCUPANCY, seatOccupancy);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the seatOccupancy.\n+     *\n+     * @return SeatOccupancy See SeatOccupancy\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public SeatOccupancy getSeatOccupancy() {\n+        return (SeatOccupancy) getObject(SeatOccupancy.class, KEY_SEAT_OCCUPANCY);\n+    }\n+}\n", "next_change": {"commit": "bfb1e98de78502df75b8453a006a59a085b9a177", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 3a904e93b..8943d8581 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,885 +1,913 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Individual requested DID result and data.\n- *\n- *\n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- *\n- * <p> <b>Note:</b></p>\n- * <p>\n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- *\n- *\n- *\n- *\n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelRange</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>{\"array_min_size\": 0, \"array_max_size\": 100}</td>\n- * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>gearStatus</td>\n- *          <td>GearStatus</td>\n- *          <td>See GearStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>gearStatus</td>\n- *          <td>GearStatus</td>\n- *          <td>See GearStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>prndl</td>\n- *          <td>PRNDL</td>\n- *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvent</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- * \t\t\t\t<td>N</td>\n- * \t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>windowStatus</td>\n- *          <td>Boolean</td>\n- *          <td>See WindowStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *          <td>seatOccupancy</td>\n- *          <td>SeatOccupancy</td>\n- *          <td>See SeatOccupancy</td>\n- *          <td>N</td>\n- *          <td></td>\n- *          <td>\n- *          @since SmartDeviceLink 7.1.0\n- *          </td>\n- *  </table>\n- *\n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 1.0\n- */\n-public class OnVehicleData extends RPCNotification {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_VIN = \"vin\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n-    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n-    /**\n-     * @deprecated\n-     */\n-    @Deprecated\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    /**\n-     * @deprecated\n-     */\n-    @Deprecated\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public static final String KEY_SEAT_OCCUPANCY = \"seatOccupancy\";\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public OnVehicleData setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-        return this;\n-    }\n-\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-\n-    public OnVehicleData setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-        return this;\n-    }\n-\n-    public Double getSpeed() {\n-        Object object = getParameters(KEY_SPEED);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-        return this;\n-    }\n-\n-    public Integer getRpm() {\n-        return getInteger(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets the fuelLevel.\n-     *\n-     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n-     *                  7.0, please see fuelRange.\n-     */\n-    @Deprecated\n-    public OnVehicleData setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the fuelLevel.\n-     *\n-     * @return Float The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n-     * 7.0, please see fuelRange.\n-     */\n-    @Deprecated\n-    public Double getFuelLevel() {\n-        Object object = getParameters(KEY_FUEL_LEVEL);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    @Deprecated\n-    public OnVehicleData setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-        return this;\n-    }\n-\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public OnVehicleData setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-        return this;\n-    }\n-\n-    public Double getInstantFuelConsumption() {\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-        return this;\n-    }\n-\n-    public Double getExternalTemperature() {\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-        return this;\n-    }\n-\n-    public String getVin() {\n-        return getString(KEY_VIN);\n-    }\n-\n-    /**\n-     * Sets the prndl.\n-     *\n-     * @param prndl See PRNDL. This parameter is deprecated since 7.0.0 and it is now covered in `gearStatus`\n-     * @deprecated in SmartDeviceLink 7.0.0\n-     */\n-    @Deprecated\n-    public OnVehicleData setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the prndl.\n-     *\n-     * @return PRNDL See PRNDL. This parameter since 7.0.0 is deprecated and it is now covered in `gearStatus`\n-     * @deprecated in SmartDeviceLink 7.0.0\n-     */\n-    @Deprecated\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets the tirePressure.\n-     *\n-     * @param tirePressure See TireStatus\n-     */\n-    public OnVehicleData setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-        return this;\n-    }\n-\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    public OnVehicleData setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-        return this;\n-    }\n-\n-    public Integer getOdometer() {\n-        return getInteger(KEY_ODOMETER);\n-    }\n-\n-    public OnVehicleData setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-        return this;\n-    }\n-\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-\n-    public OnVehicleData setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-        return this;\n-    }\n-\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    public OnVehicleData setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-        return this;\n-    }\n-\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    public OnVehicleData setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-        return this;\n-    }\n-\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    public OnVehicleData setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-        return this;\n-    }\n-\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-\n-    public OnVehicleData setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-        return this;\n-    }\n-\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public OnVehicleData setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-        return this;\n-    }\n-\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-        return this;\n-    }\n-\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public OnVehicleData setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-        return this;\n-    }\n-\n-    public Double getAccPedalPosition() {\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-        return this;\n-    }\n-\n-    public Double getSteeringWheelAngle() {\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public OnVehicleData setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-        return this;\n-    }\n-\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public OnVehicleData setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-        return this;\n-    }\n-\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public OnVehicleData setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-        return this;\n-    }\n-\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public OnVehicleData setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-        return this;\n-    }\n-\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public OnVehicleData setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-        return this;\n-    }\n-\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets the fuelRange.\n-     *\n-     * @param fuelRange The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n-     *                  vehicle. See struct FuelRange for details.\n-     *                  {\"array_min_size\": 0, \"array_max_size\": 100}\n-     * @since SmartDeviceLink 5.0.0\n-     */\n-    public OnVehicleData setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the fuelRange.\n-     *\n-     * @return List<FuelRange> The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n-     * vehicle. See struct FuelRange for details.\n-     * {\"array_min_size\": 0, \"array_max_size\": 100}\n-     * @since SmartDeviceLink 5.0.0\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal\n-     */\n-    public OnVehicleData setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return TurnSignal\n-     */\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus\n-     */\n-    public OnVehicleData setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     *\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public OnVehicleData setCloudAppVehicleID(String cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     *\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID() {\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public OnVehicleData setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     *\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the windowStatus.\n-     *\n-     * @param windowStatus See WindowStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setWindowStatus(List<WindowStatus> windowStatus) {\n-        setParameters(KEY_WINDOW_STATUS, windowStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the windowStatus.\n-     *\n-     * @return List<WindowStatus> See WindowStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<WindowStatus> getWindowStatus() {\n-        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-\n-    /**\n-     * Sets the gearStatus.\n-     *\n-     * @param gearStatus See GearStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public OnVehicleData setGearStatus(GearStatus gearStatus) {\n-        setParameters(KEY_GEAR_STATUS, gearStatus);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the gearStatus.\n-     *\n-     * @return GearStatus See GearStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public GearStatus getGearStatus() {\n-        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n-    }\n-    /**\n-     * Sets the seatOccupancy.\n-     *\n-     * @param seatOccupancy See SeatOccupancy\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public OnVehicleData setSeatOccupancy(SeatOccupancy seatOccupancy) {\n-        setParameters(KEY_SEAT_OCCUPANCY, seatOccupancy);\n-        return this;\n-    }\n-\n-    /**\n-     * Gets the seatOccupancy.\n-     *\n-     * @return SeatOccupancy See SeatOccupancy\n-     * @since SmartDeviceLink 7.1.0\n-     */\n-    public SeatOccupancy getSeatOccupancy() {\n-        return (SeatOccupancy) getObject(SeatOccupancy.class, KEY_SEAT_OCCUPANCY);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Individual requested DID result and data.\n+ *\n+ *\n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ *\n+ * <p> <b>Note:</b></p>\n+ * <p>\n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ *\n+ *\n+ *\n+ *\n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state. This parameter is deprecated starting RPC Spec 7.0, please see fuelRange.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelRange</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the vehicle. See struct FuelRange for details.</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>{\"array_min_size\": 0, \"array_max_size\": 100}</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in micro litres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>GearStatus</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>gearStatus</td>\n+ *          <td>GearStatus</td>\n+ *          <td>See GearStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>prndl</td>\n+ *          <td>PRNDL</td>\n+ *          <td>See PRNDL. This parameter is deprecated and it is now covered in `gearStatus`</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvent</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ * \t\t\t\t<td>N</td>\n+ * \t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>windowStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See WindowStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>climateData</td>\n+ *          <td>ClimateData</td>\n+ *          <td>See ClimateData</td>\n+ *          <td>N</td>\n+ *          <td></td>\n+ *          <td>\n+     *          @since SmartDeviceLink 7.1.0\n+ *          </td>\n+ *          </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    /**\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_WINDOW_STATUS = \"windowStatus\";\n+    public static final String KEY_GEAR_STATUS = \"gearStatus\";\n+    /**\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public static final String KEY_CLIMATE_DATA = \"climateData\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    /**\n+     * @deprecated\n+     */\n+    @Deprecated\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public OnVehicleData setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+        return this;\n+    }\n+\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public OnVehicleData setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+        return this;\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+        return this;\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets the fuelLevel.\n+     *\n+     * @param fuelLevel The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     *                  7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public OnVehicleData setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelLevel.\n+     *\n+     * @return Float The fuel level in the tank (percentage). This parameter is deprecated starting RPC Spec\n+     * 7.0, please see fuelRange.\n+     */\n+    @Deprecated\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    @Deprecated\n+    public OnVehicleData setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+        return this;\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public OnVehicleData setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+        return this;\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    /**\n+     * Sets the externalTemperature.\n+     *\n+     * @param externalTemperature The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1.0, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public OnVehicleData setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the externalTemperature.\n+     *\n+     * @return Boolean The external temperature in degrees celsius. This parameter is deprecated starting RPC\n+     * Spec 7.1.0, please see climateData.\n+     * {\"num_min_value\": -40.0, \"num_max_value\": 100.0}\n+     * @since SmartDeviceLink 2.0.0\n+     * @deprecated in SmartDeviceLink 7.1.0\n+     */\n+    @Deprecated\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+        return this;\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    /**\n+     * Sets the prndl.\n+     *\n+     * @param prndl See PRNDL. This parameter is deprecated since 7.0.0 and it is now covered in `gearStatus`\n+     * @deprecated in SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public OnVehicleData setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the prndl.\n+     *\n+     * @return PRNDL See PRNDL. This parameter since 7.0.0 is deprecated and it is now covered in `gearStatus`\n+     * @deprecated in SmartDeviceLink 7.0.0\n+     */\n+    @Deprecated\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets the tirePressure.\n+     *\n+     * @param tirePressure See TireStatus\n+     */\n+    public OnVehicleData setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+        return this;\n+    }\n+\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public OnVehicleData setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+        return this;\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public OnVehicleData setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+        return this;\n+    }\n+\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public OnVehicleData setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+        return this;\n+    }\n+\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public OnVehicleData setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+        return this;\n+    }\n+\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public OnVehicleData setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+        return this;\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public OnVehicleData setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+        return this;\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public OnVehicleData setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+        return this;\n+    }\n+\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public OnVehicleData setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+        return this;\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+        return this;\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public OnVehicleData setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+        return this;\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+        return this;\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public OnVehicleData setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+        return this;\n+    }\n+\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public OnVehicleData setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+        return this;\n+    }\n+\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public OnVehicleData setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+        return this;\n+    }\n+\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public OnVehicleData setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+        return this;\n+    }\n+\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public OnVehicleData setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+        return this;\n+    }\n+\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets the fuelRange.\n+     *\n+     * @param fuelRange The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n+     *                  vehicle. See struct FuelRange for details.\n+     *                  {\"array_min_size\": 0, \"array_max_size\": 100}\n+     * @since SmartDeviceLink 5.0.0\n+     */\n+    public OnVehicleData setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the fuelRange.\n+     *\n+     * @return List<FuelRange> The fuel type, estimated range in KM, fuel level/capacity and fuel level state for the\n+     * vehicle. See struct FuelRange for details.\n+     * {\"array_min_size\": 0, \"array_max_size\": 100}\n+     * @since SmartDeviceLink 5.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public OnVehicleData setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public OnVehicleData setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public OnVehicleData setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public OnVehicleData setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the windowStatus.\n+     *\n+     * @param windowStatus See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setWindowStatus(List<WindowStatus> windowStatus) {\n+        setParameters(KEY_WINDOW_STATUS, windowStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the windowStatus.\n+     *\n+     * @return List<WindowStatus> See WindowStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<WindowStatus> getWindowStatus() {\n+        return (List<WindowStatus>) getObject(WindowStatus.class, KEY_WINDOW_STATUS);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public OnVehicleData setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n+\n+\n+    /**\n+     * Sets the climateData.\n+     *\n+     * @param climateData See ClimateData\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public OnVehicleData setClimateData(ClimateData climateData) {\n+        setParameters(KEY_CLIMATE_DATA, climateData);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the climateData.\n+     *\n+     * @return ClimateData See ClimateData\n+     * @since SmartDeviceLink 7.1.0\n+     */\n+    public ClimateData getClimateData() {\n+        return (ClimateData) getObject(ClimateData.class, KEY_CLIMATE_DATA);\n+    }\n+}\n", "next_change": {"commit": "1bb1ae0f82d8f4490412da25371e660930ffa503", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 8943d8581..f14705b0c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -888,26 +862,24 @@ public class OnVehicleData extends RPCNotification {\n     public GearStatus getGearStatus() {\n         return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n     }\n-\n-\n     /**\n-     * Sets the climateData.\n+     * Sets the seatOccupancy.\n      *\n-     * @param climateData See ClimateData\n+     * @param seatOccupancy See SeatOccupancy\n      * @since SmartDeviceLink 7.1.0\n      */\n-    public OnVehicleData setClimateData(ClimateData climateData) {\n-        setParameters(KEY_CLIMATE_DATA, climateData);\n+    public OnVehicleData setSeatOccupancy(SeatOccupancy seatOccupancy) {\n+        setParameters(KEY_SEAT_OCCUPANCY, seatOccupancy);\n         return this;\n     }\n \n     /**\n-     * Gets the climateData.\n+     * Gets the seatOccupancy.\n      *\n-     * @return ClimateData See ClimateData\n+     * @return SeatOccupancy See SeatOccupancy\n      * @since SmartDeviceLink 7.1.0\n      */\n-    public ClimateData getClimateData() {\n-        return (ClimateData) getObject(ClimateData.class, KEY_CLIMATE_DATA);\n+    public SeatOccupancy getSeatOccupancy() {\n+        return (SeatOccupancy) getObject(SeatOccupancy.class, KEY_SEAT_OCCUPANCY);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "494fee526cfd274ccba47c8c9122a8db1e9b131c", "message": "Merge commit", "committedDate": null}, {"oid": "0bb42e3275615049697228c323a84ae3124d75ab", "committedDate": "2020-09-03 16:32:00 -0400", "message": "[SDL 0311] Make RPC Setters Chainable (#1467)"}, {"oid": "41b3f274fa70d701747c7d0293cdf64a333bfb29", "committedDate": "2020-09-10 12:23:24 -0400", "message": "Remove SuppressWarnings from RPCs"}, {"oid": "bd3be0702931a6b440612795fc8c73c052a9acbb", "committedDate": "2020-09-10 14:23:58 -0400", "message": "Fix warnings in rpcs"}, {"oid": "e00f2c1f9310e7423be3a094aa77b1e84b1a0a80", "committedDate": "2020-09-17 16:31:17 -0400", "message": "Run the Reformat Code tool on the project"}, {"oid": "8cc7bbcd38d811c45deb2fb3cacc2b32f10e81f4", "committedDate": "2020-11-10 14:53:32 +0200", "message": "[0269] - Add generated structs and enums"}, {"oid": "0fd82e67739d0110d5b641501993e8df63911145", "committedDate": "2020-11-12 23:40:01 +0200", "message": "[0269] - Add tests - Fix DataTypes in Responses"}, {"oid": "e4d9170f69ece9dc2bb26a545d7e82bd3a7539e8", "committedDate": "2020-12-06 13:00:06 +0200", "message": "[0262] - Implement new structures and tests"}, {"oid": "bfb1e98de78502df75b8453a006a59a085b9a177", "committedDate": "2020-12-12 14:55:53 +0200", "message": "[0269] - Fix review comments"}, {"oid": "a505d8b19160204ca888cacca13d0e914e9519ab", "committedDate": "2020-12-20 11:14:54 +0200", "message": "[0269] - Fix pr comments"}, {"oid": "1bb1ae0f82d8f4490412da25371e660930ffa503", "committedDate": "2020-12-21 23:22:18 +0200", "message": "[0262] - Fix pr comments"}, {"oid": "304d7b85238c35db4d9ad40809a1a5aac6b05d9f", "committedDate": "2021-02-10 19:35:59 +0200", "message": "Merge branch 'develop' into feature/0269_new_vehicle_data_climate_data"}, {"oid": "9620f77c7959f142c812cf9a8c193aced0410780", "committedDate": "2022-04-25 16:22:08 -0400", "message": "Update OnVehicleData.java"}, {"oid": "5550702799209d7c37706c7eb651b3e2c9a180e2", "committedDate": "2022-06-22 16:25:51 -0400", "message": "Updates"}, {"oid": "e5d85378c522f48c720f85546ab13bab3ac30ecd", "committedDate": "2022-07-13 16:06:59 -0400", "message": "Update Javadoc tables to match code (#1820)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxMjk2OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458312969", "body": "For all Methods in this class, to be consistent, will you add a space before { to look like:\r\n```\r\npublic void setStabilityControlsStatus(StabilityControlsStatus status) {\r\n```\r\n\r\nAlso to be consistent with other classes that you've added this method can you change ``status``to ``stabilityControlsStatus``", "bodyText": "For all Methods in this class, to be consistent, will you add a space before { to look like:\npublic void setStabilityControlsStatus(StabilityControlsStatus status) {\n\nAlso to be consistent with other classes that you've added this method can you change statusto stabilityControlsStatus", "bodyHTML": "<p dir=\"auto\">For all Methods in this class, to be consistent, will you add a space before { to look like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void setStabilityControlsStatus(StabilityControlsStatus status) {\"><pre><code>public void setStabilityControlsStatus(StabilityControlsStatus status) {\n</code></pre></div>\n<p dir=\"auto\">Also to be consistent with other classes that you've added this method can you change <code>status</code>to <code>stabilityControlsStatus</code></p>", "author": "JulianKast", "createdAt": "2020-07-21T18:44:50Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -372,22 +373,38 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param status a StabilityControlsStatus value\r\n+     */\r\n+    public void setStabilityControlsStatus(StabilityControlsStatus status){\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 910a0e6c0..9846fed7b 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,410 +1,468 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/** \n-\t * Constructs a new GetVehicleDataResponse object\n-\t */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     * @param success whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-  \n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-        \n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }    \n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\t\n-\t\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\t\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange the range in KM left as well as fuel type\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param status a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus status){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange the range in KM left as well as fuel type\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 9846fed7b..56af64417 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,468 +1,435 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_VIN = \"vin\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Double getSpeed() {\n-        Object object = getParameters(KEY_SPEED);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Integer getRpm() {\n-        return getInteger(KEY_RPM);\n-    }\n-\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Double getFuelLevel() {\n-        Object object = getParameters(KEY_FUEL_LEVEL);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Double getInstantFuelConsumption() {\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Double getExternalTemperature() {\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public String getVin() {\n-        return getString(KEY_VIN);\n-    }\n-\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Integer getOdometer() {\n-        return getInteger(KEY_ODOMETER);\n-    }\n-\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Double getAccPedalPosition() {\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Double getSteeringWheelAngle() {\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     *\n-     * @return List<FuelRange>\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     *\n-     * @param fuelRange the range in KM left as well as fuel type\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return TurnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     *\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID() {\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     *\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     *\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/** \n+\t * Constructs a new GetVehicleDataResponse object\n+\t */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     * @param success whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+  \n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+        \n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }    \n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\t\n+\t\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\t\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange the range in KM left as well as fuel type\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMjIyNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458322225", "body": "For all Methods in this class, to be consistent, will you add a space before { to look like:\r\n```\r\n public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\r\n```", "bodyText": "For all Methods in this class, to be consistent, will you add a space before { to look like:\n public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {", "bodyHTML": "<p dir=\"auto\">For all Methods in this class, to be consistent, will you add a space before { to look like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\"><pre><code> public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-21T19:01:36Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -540,21 +541,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n     public Boolean getCloudAppVehicleID(){\r\n         return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a boolean value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a boolean value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for OEM Custom VehicleData.\r\n+     * @return a Boolean value.\r\n+     */\r\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getBoolean(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a boolean value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a boolean value\r\n+     */\r\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 5159d52ca..00026f192 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,577 +1,647 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Vehicle identification number</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- * \t\t</table>\n- *  \n- *  \n- *  <p><b>Response</b></p>\n- *  \n- * <p> <b>Non-default Result Codes:</b></p>\n- * <p> SUCCESS</p>\n- * <p> INVALID_DATA</p>\n- *  <p>OUT_OF_MEMORY</p>\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\n- *  <p>APPLICATION_NOT_REGISTERED</p>\n- * <p> GENERIC_ERROR</p>\n- * <p> REJECTED</p>\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n- * <p> USER_DISALLOWED</p>\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 2.0\n- * \n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t* \n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    \n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-    \n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-        \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }                \n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }    \n-    \n-    \n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-      *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus(){\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID(){\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a boolean value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a boolean value\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value for StabilityControlsStatus.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getStabilityControlsStatus(){\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>Boolean</td>\n+ *      <td>Vehicle identification number</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including ignition status and internal temp</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t*\n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+     *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 00026f192..bfb9e05b6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,647 +1,616 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>vin</td>\n- *      <td>Boolean</td>\n- *      <td>Vehicle identification number</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including ignition status and internal temp</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t*\n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-     *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</table>\n+ *  \n+ *  \n+ *  <p><b>Response</b></p>\n+ *  \n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ * \n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t* \n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    \n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+    \n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+        \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }                \n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }    \n+    \n+    \n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+      *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus(){\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID(){\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0MzkwOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458943909", "body": "Please include any copyright that is needed for this file", "bodyText": "Please include any copyright that is needed for this file", "bodyHTML": "<p dir=\"auto\">Please include any copyright that is needed for this file</p>", "author": "JulianKast", "createdAt": "2020-07-22T16:59:12Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -1,3 +1,34 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n package com.smartdevicelink.proxy.rpc;\n \n import com.smartdevicelink.proxy.RPCStruct;\n", "next_change": {"commit": "71077ab43a99eb4430e87c542a380694263e85d9", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..b72c681b9 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -37,6 +37,7 @@ import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n import java.util.Hashtable;\n \n /**\n+ *\n  * <p><b>Parameter List</b></p>\n  *\n  * <table border=\"1\" rules=\"all\">\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MTY0OQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458951649", "body": "```suggestion\r\n     * Sets the escSystem\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * sets EscSystem\n          \n          \n            \n                 * Sets the escSystem", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"x x-first\">sets </span><span class=\"pl-smi x x-last\">EscSystem</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi x x-first\">Sets</span><span class=\"x x-last\"> the escSystem</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:12:03Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MjQwMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458952402", "body": "```suggestion\r\n     *  @param escSystem true if vehicle stability control is ON, else false\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param status VehicleDataStatus\n          \n          \n            \n                 *  @param escSystem true if vehicle stability control is ON, else false", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> <span class=\"x x-first\">status </span><span class=\"pl-smi x x-last\">VehicleDataStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"x x-first x-last\"> </span><span class=\"pl-k\">@param</span> <span class=\"x x-first\">escSystem </span><span class=\"pl-c1 x\">true</span><span class=\"x\"> </span><span class=\"pl-k x\">if</span><span class=\"x\"> vehicle stability control is </span><span class=\"pl-c1 x\">ON</span><span class=\"x\">, </span><span class=\"pl-k x\">else</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">false</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:13:24Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MjYyNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458952624", "body": "```suggestion\r\n    public void setEscSystem(VehicleDataStatus escSystem){\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setEscSystem(VehicleDataStatus status){\n          \n          \n            \n                public void setEscSystem(VehicleDataStatus escSystem){", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setEscSystem(<span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">status</span>){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setEscSystem(<span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">escSystem</span>){</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:13:46Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus status){", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MjczMg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458952732", "body": "```suggestion\r\n        setValue(KEY_ESC_SYSTEM, escSystem);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    setValue(KEY_ESC_SYSTEM, status);\n          \n          \n            \n                    setValue(KEY_ESC_SYSTEM, escSystem);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        setValue(<span class=\"pl-c1\">KEY_ESC_SYSTEM</span>, <span class=\"x x-first x-last\">status</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        setValue(<span class=\"pl-c1\">KEY_ESC_SYSTEM</span>, <span class=\"x x-first x-last\">escSystem</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:13:55Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus status){\n+        setValue(KEY_ESC_SYSTEM, status);", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1MzY0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458953646", "body": "```suggestion\r\n  /**\r\n     * Gets the escSystem.\r\n     *\r\n     * @return VehicleDataStatus true if vehicle stability control is ON, else false\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /***\n          \n          \n            \n                 * @return VehicleDataStatus for escSystem\n          \n          \n            \n                 */\n          \n          \n            \n              /**\n          \n          \n            \n                 * Gets the escSystem.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return VehicleDataStatus true if vehicle stability control is ON, else false\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>**</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-k\">for</span> escSystem</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the escSystem.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle stability control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:15:24Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus status){\n+        setValue(KEY_ESC_SYSTEM, status);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1NDY5Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458954692", "body": "```suggestion\r\n    public void setTrailerSwayControl(VehicleDataStatus trailerSwayControl) {\r\n        setValue(KEY_TRAILER_SWAY_CONTROL, trailerSwayControl);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setTrailerSwayControl(VehicleDataStatus status){\n          \n          \n            \n                    setValue(KEY_TRAILER_SWAY_CONTROL, status);\n          \n          \n            \n                public void setTrailerSwayControl(VehicleDataStatus trailerSwayControl) {\n          \n          \n            \n                    setValue(KEY_TRAILER_SWAY_CONTROL, trailerSwayControl);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setTrailerSwayControl(<span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">status)</span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        setValue(<span class=\"pl-c1\">KEY_TRAILER_SWAY_CONTROL</span>, <span class=\"x x-first x-last\">status</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> setTrailerSwayControl(<span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">trailerSwayControl) </span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        setValue(<span class=\"pl-c1\">KEY_TRAILER_SWAY_CONTROL</span>, <span class=\"x x-first x-last\">trailerSwayControl</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:17:00Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {}\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus status){\n+        setValue(KEY_ESC_SYSTEM, status);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    }\n+\n+    /***\n+     * sets TrailerSwayControl\n+     * @param status VehicleDataStatus\n+     */\n+    public void setTrailerSwayControl(VehicleDataStatus status){\n+        setValue(KEY_TRAILER_SWAY_CONTROL, status);", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex e9fb55bed..f677ef909 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -26,25 +87,25 @@ public class StabilityControlsStatus extends RPCStruct {\n     }\n \n     /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+     * @return VehicleDataStatus for escSystem\n      */\n-    public void setEscSystem(VehicleDataStatus status){\n-        setValue(KEY_ESC_SYSTEM, status);\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n     /***\n-     * @return VehicleDataStatus for escSystem\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n      */\n-    public VehicleDataStatus getEscSystem() {\n-        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n     /***\n      * sets TrailerSwayControl\n      * @param status VehicleDataStatus\n      */\n-    public void setTrailerSwayControl(VehicleDataStatus status){\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n", "next_change": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk1OTMzMA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458959330", "body": "Add: \r\n```\r\n    /**\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n```", "bodyText": "Add:\n    /**\n     * @since SmartDeviceLink 7.0.0\n     */", "bodyHTML": "<p dir=\"auto\">Add:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    /**\n     * @since SmartDeviceLink 7.0.0\n     */\"><pre><code>    /**\n     * @since SmartDeviceLink 7.0.0\n     */\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-22T17:24:48Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "diffHunk": "@@ -167,6 +167,9 @@\n      * @since SmartDeviceLink 6.0\r\n      */\r\n     VEHICLEDATA_OEM_CUSTOM_DATA,\r\n+\r\n+\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 31fb4e8ba..4616bd744 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -1,188 +1,188 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc.enums;\n-\n-/**\n- * Defines the vehicle data types that can be published and subscribed to.\n- * \n- */\n-public enum VehicleDataType {\n-\t/**\n-\t * Notifies GPSData may be subscribed\n-\t */\n-\tVEHICLEDATA_GPS,\n-\t/**\n-\t * Notifies SPEED Data may be subscribed\n-\t */\n-    VEHICLEDATA_SPEED,\n-    /**\n-     * Notifies RPMData may be subscribed\n-     */\n-    VEHICLEDATA_RPM,\n-    /**\n-     * Notifies FUELLEVELData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL,\n-    /**\n-     * Notifies FUELLEVEL_STATEData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL_STATE,\n-/**\n- * Notifies FUELCONSUMPTIONData may be subscribed\n- */\n-    VEHICLEDATA_FUELCONSUMPTION,\n-    /**\n-     * Notifies EXTERNTEMPData may be subscribed\n-     */\n-    VEHICLEDATA_EXTERNTEMP,\n-    /**\n-     * Notifies VINData may be subscribed\n-     */\n-    VEHICLEDATA_VIN,\n-    /**\n-     * Notifies PRNDLData may be subscribed\n-     */\n-    VEHICLEDATA_PRNDL,\n-    /**\n-     * Notifies TIREPRESSUREData may be subscribed\n-     */\n-    VEHICLEDATA_TIREPRESSURE,\n-    /**\n-     * Notifies ODOMETERData may be subscribed\n-     */\n-    VEHICLEDATA_ODOMETER,   \n-    /**\n-     * Notifies BELTSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_BELTSTATUS,\n-    /**\n-     * Notifies BODYINFOData may be subscribed\n-     */\n-    VEHICLEDATA_BODYINFO,\n-    /**\n-     * Notifies DEVICESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_DEVICESTATUS,\n-    /**\n-     * Notifies BRAKINGData may be subscribed\n-     */\n-    VEHICLEDATA_BRAKING,\n-    /**\n-     * Notifies WIPERSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_WIPERSTATUS,\n-    /**\n-     * Notifies HEADLAMPSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_HEADLAMPSTATUS,\n-    /**\n-     * Notifies BATTVOLTAGEData may be subscribed\n-     */\n-    VEHICLEDATA_BATTVOLTAGE,\n-    /**\n-     * Notifies EGINETORQUEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINETORQUE,\n-    /**\n-     * Notifies ENGINEOILLIFEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINEOILLIFE,\n-    /**\n-     * Notifies ACCPEDALData may be subscribed\n-     */\n-    VEHICLEDATA_ACCPEDAL,\n-    /**\n-     * Notifies STEERINGWHEELData may be subscribed\n-     */\n-    VEHICLEDATA_STEERINGWHEEL,\n-    /**\n-     * Notifies ECALLINFOData may be subscribed\n-     */\n-    VEHICLEDATA_ECALLINFO,\n-    /**\n-     * Notifies AIRBAGSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_AIRBAGSTATUS,\n-    /**\n-     * Notifies EMERGENCYEVENTData may be subscribed\n-     */\n-    VEHICLEDATA_EMERGENCYEVENT,\n-    /**\n-     * Notifies CLUSTERMODESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_CLUSTERMODESTATUS,\n-    /**\n-     * Notifies MYKEYData may be subscribed\n-     */\n-    VEHICLEDATA_MYKEY,\n-\n-    VEHICLEDATA_FUELRANGE,\n-\n-    /**\n-     * Notifies TURNSIGNALData may be subscribed\n-     */\n-    VEHICLEDATA_TURNSIGNAL,\n-\n-    /**\n-     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n-\n-    /**\n-     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n-     */\n-    VEHICLEDATA_CLOUDAPPVEHICLEID,\n-    /**\n-     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n-     *\n-     * @since SmartDeviceLink 6.0\n-     */\n-    VEHICLEDATA_OEM_CUSTOM_DATA,\n-\n-\n-    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n-    ;\n-\n-     /**\n-     * Convert String to VehicleDataType\n-     * @param value String\n-     * @return VehicleDataType\n-     */\n-\n-    public static VehicleDataType valueForString(String value) {\n-        try{\n-            return valueOf(value);\n-        }catch(Exception e){\n-            return null;\n-        }\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc.enums;\n+\n+/**\n+ * Defines the vehicle data types that can be published and subscribed to.\n+ *\n+ */\n+public enum VehicleDataType {\n+\t/**\n+\t * Notifies GPSData may be subscribed\n+\t */\n+\tVEHICLEDATA_GPS,\n+\t/**\n+\t * Notifies SPEED Data may be subscribed\n+\t */\n+    VEHICLEDATA_SPEED,\n+    /**\n+     * Notifies RPMData may be subscribed\n+     */\n+    VEHICLEDATA_RPM,\n+    /**\n+     * Notifies FUELLEVELData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL,\n+    /**\n+     * Notifies FUELLEVEL_STATEData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL_STATE,\n+    /**\n+     * Notifies FUELCONSUMPTIONData may be subscribed\n+     */\n+    VEHICLEDATA_FUELCONSUMPTION,\n+    /**\n+     * Notifies EXTERNTEMPData may be subscribed\n+     */\n+    VEHICLEDATA_EXTERNTEMP,\n+    /**\n+     * Notifies VINData may be subscribed\n+     */\n+    VEHICLEDATA_VIN,\n+    /**\n+     * Notifies PRNDLData may be subscribed\n+     */\n+    VEHICLEDATA_PRNDL,\n+    /**\n+     * Notifies TIREPRESSUREData may be subscribed\n+     */\n+    VEHICLEDATA_TIREPRESSURE,\n+    /**\n+     * Notifies ODOMETERData may be subscribed\n+     */\n+    VEHICLEDATA_ODOMETER,\n+    /**\n+     * Notifies BELTSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_BELTSTATUS,\n+    /**\n+     * Notifies BODYINFOData may be subscribed\n+     */\n+    VEHICLEDATA_BODYINFO,\n+    /**\n+     * Notifies DEVICESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_DEVICESTATUS,\n+    /**\n+     * Notifies BRAKINGData may be subscribed\n+     */\n+    VEHICLEDATA_BRAKING,\n+    /**\n+     * Notifies WIPERSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_WIPERSTATUS,\n+    /**\n+     * Notifies HEADLAMPSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_HEADLAMPSTATUS,\n+    /**\n+     * Notifies BATTVOLTAGEData may be subscribed\n+     */\n+    VEHICLEDATA_BATTVOLTAGE,\n+    /**\n+     * Notifies EGINETORQUEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINETORQUE,\n+    /**\n+     * Notifies ENGINEOILLIFEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINEOILLIFE,\n+    /**\n+     * Notifies ACCPEDALData may be subscribed\n+     */\n+    VEHICLEDATA_ACCPEDAL,\n+    /**\n+     * Notifies STEERINGWHEELData may be subscribed\n+     */\n+    VEHICLEDATA_STEERINGWHEEL,\n+    /**\n+     * Notifies ECALLINFOData may be subscribed\n+     */\n+    VEHICLEDATA_ECALLINFO,\n+    /**\n+     * Notifies AIRBAGSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_AIRBAGSTATUS,\n+    /**\n+     * Notifies EMERGENCYEVENTData may be subscribed\n+     */\n+    VEHICLEDATA_EMERGENCYEVENT,\n+    /**\n+     * Notifies CLUSTERMODESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_CLUSTERMODESTATUS,\n+    /**\n+     * Notifies MYKEYData may be subscribed\n+     */\n+    VEHICLEDATA_MYKEY,\n+\n+    VEHICLEDATA_FUELRANGE,\n+\n+    /**\n+     * Notifies TURNSIGNALData may be subscribed\n+     */\n+    VEHICLEDATA_TURNSIGNAL,\n+\n+    /**\n+     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n+\n+    /**\n+     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n+     */\n+    VEHICLEDATA_CLOUDAPPVEHICLEID,\n+    /**\n+     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n+     *\n+     * @since SmartDeviceLink 6.0\n+     */\n+    VEHICLEDATA_OEM_CUSTOM_DATA,\n+    /**\n+     * @since SmartDeviceLink 6.2.0\n+     */\n+    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n+\n+     /**\n+     * Convert String to VehicleDataType\n+     * @param value String\n+     * @return VehicleDataType\n+     */\n+\n+    public static VehicleDataType valueForString(String value) {\n+        try {\n+            return valueOf(value);\n+        } catch (Exception e) {\n+            return null;\n+        }\n+    }\n+}\n", "next_change": {"commit": "56a2d97385ac35bede9b7edfd7570814fb8810ea", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 4616bd744..3393f0ed7 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -179,9 +179,9 @@ public enum VehicleDataType {\n      */\n \n     public static VehicleDataType valueForString(String value) {\n-        try {\n+        try{\n             return valueOf(value);\n-        } catch (Exception e) {\n+        }catch(Exception e){\n             return null;\n         }\n     }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\nindex 3393f0ed7..12b1ec5d2 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java\n", "chunk": "@@ -1,188 +1,194 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc.enums;\n-\n-/**\n- * Defines the vehicle data types that can be published and subscribed to.\n- * \n- */\n-public enum VehicleDataType {\n-\t/**\n-\t * Notifies GPSData may be subscribed\n-\t */\n-\tVEHICLEDATA_GPS,\n-\t/**\n-\t * Notifies SPEED Data may be subscribed\n-\t */\n-    VEHICLEDATA_SPEED,\n-    /**\n-     * Notifies RPMData may be subscribed\n-     */\n-    VEHICLEDATA_RPM,\n-    /**\n-     * Notifies FUELLEVELData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL,\n-    /**\n-     * Notifies FUELLEVEL_STATEData may be subscribed\n-     */\n-    VEHICLEDATA_FUELLEVEL_STATE,\n-/**\n- * Notifies FUELCONSUMPTIONData may be subscribed\n- */\n-    VEHICLEDATA_FUELCONSUMPTION,\n-    /**\n-     * Notifies EXTERNTEMPData may be subscribed\n-     */\n-    VEHICLEDATA_EXTERNTEMP,\n-    /**\n-     * Notifies VINData may be subscribed\n-     */\n-    VEHICLEDATA_VIN,\n-    /**\n-     * Notifies PRNDLData may be subscribed\n-     */\n-    VEHICLEDATA_PRNDL,\n-    /**\n-     * Notifies TIREPRESSUREData may be subscribed\n-     */\n-    VEHICLEDATA_TIREPRESSURE,\n-    /**\n-     * Notifies ODOMETERData may be subscribed\n-     */\n-    VEHICLEDATA_ODOMETER,   \n-    /**\n-     * Notifies BELTSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_BELTSTATUS,\n-    /**\n-     * Notifies BODYINFOData may be subscribed\n-     */\n-    VEHICLEDATA_BODYINFO,\n-    /**\n-     * Notifies DEVICESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_DEVICESTATUS,\n-    /**\n-     * Notifies BRAKINGData may be subscribed\n-     */\n-    VEHICLEDATA_BRAKING,\n-    /**\n-     * Notifies WIPERSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_WIPERSTATUS,\n-    /**\n-     * Notifies HEADLAMPSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_HEADLAMPSTATUS,\n-    /**\n-     * Notifies BATTVOLTAGEData may be subscribed\n-     */\n-    VEHICLEDATA_BATTVOLTAGE,\n-    /**\n-     * Notifies EGINETORQUEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINETORQUE,\n-    /**\n-     * Notifies ENGINEOILLIFEData may be subscribed\n-     */\n-    VEHICLEDATA_ENGINEOILLIFE,\n-    /**\n-     * Notifies ACCPEDALData may be subscribed\n-     */\n-    VEHICLEDATA_ACCPEDAL,\n-    /**\n-     * Notifies STEERINGWHEELData may be subscribed\n-     */\n-    VEHICLEDATA_STEERINGWHEEL,\n-    /**\n-     * Notifies ECALLINFOData may be subscribed\n-     */\n-    VEHICLEDATA_ECALLINFO,\n-    /**\n-     * Notifies AIRBAGSTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_AIRBAGSTATUS,\n-    /**\n-     * Notifies EMERGENCYEVENTData may be subscribed\n-     */\n-    VEHICLEDATA_EMERGENCYEVENT,\n-    /**\n-     * Notifies CLUSTERMODESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_CLUSTERMODESTATUS,\n-    /**\n-     * Notifies MYKEYData may be subscribed\n-     */\n-    VEHICLEDATA_MYKEY,\n-\n-    VEHICLEDATA_FUELRANGE,\n-\n-    /**\n-     * Notifies TURNSIGNALData may be subscribed\n-     */\n-    VEHICLEDATA_TURNSIGNAL,\n-\n-    /**\n-     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n-     */\n-    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n-\n-    /**\n-     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n-     */\n-    VEHICLEDATA_CLOUDAPPVEHICLEID,\n-    /**\n-     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n-     *\n-     * @since SmartDeviceLink 6.0\n-     */\n-    VEHICLEDATA_OEM_CUSTOM_DATA,\n-    /**\n-     * @since SmartDeviceLink 6.2.0\n-     */\n-    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n-\n-     /**\n-     * Convert String to VehicleDataType\n-     * @param value String\n-     * @return VehicleDataType\n-     */\n-\n-    public static VehicleDataType valueForString(String value) {\n-        try{\n-            return valueOf(value);\n-        }catch(Exception e){\n-            return null;\n-        }\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc.enums;\n+\n+/**\n+ * Defines the vehicle data types that can be published and subscribed to.\n+ * \n+ */\n+public enum VehicleDataType {\n+\t/**\n+\t * Notifies GPSData may be subscribed\n+\t */\n+\tVEHICLEDATA_GPS,\n+\t/**\n+\t * Notifies SPEED Data may be subscribed\n+\t */\n+    VEHICLEDATA_SPEED,\n+    /**\n+     * Notifies RPMData may be subscribed\n+     */\n+    VEHICLEDATA_RPM,\n+    /**\n+     * Notifies FUELLEVELData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL,\n+    /**\n+     * Notifies FUELLEVEL_STATEData may be subscribed\n+     */\n+    VEHICLEDATA_FUELLEVEL_STATE,\n+/**\n+ * Notifies FUELCONSUMPTIONData may be subscribed\n+ */\n+    VEHICLEDATA_FUELCONSUMPTION,\n+    /**\n+     * Notifies EXTERNTEMPData may be subscribed\n+     */\n+    VEHICLEDATA_EXTERNTEMP,\n+    /**\n+     * Notifies VINData may be subscribed\n+     */\n+    VEHICLEDATA_VIN,\n+    /**\n+     * Notifies PRNDLData may be subscribed\n+     */\n+    VEHICLEDATA_PRNDL,\n+    /**\n+     * Notifies TIREPRESSUREData may be subscribed\n+     */\n+    VEHICLEDATA_TIREPRESSURE,\n+    /**\n+     * Notifies ODOMETERData may be subscribed\n+     */\n+    VEHICLEDATA_ODOMETER,   \n+    /**\n+     * Notifies BELTSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_BELTSTATUS,\n+    /**\n+     * Notifies BODYINFOData may be subscribed\n+     */\n+    VEHICLEDATA_BODYINFO,\n+    /**\n+     * Notifies DEVICESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_DEVICESTATUS,\n+    /**\n+     * Notifies BRAKINGData may be subscribed\n+     */\n+    VEHICLEDATA_BRAKING,\n+    /**\n+     * Notifies WIPERSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_WIPERSTATUS,\n+    /**\n+     * Notifies HEADLAMPSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_HEADLAMPSTATUS,\n+    /**\n+     * Notifies BATTVOLTAGEData may be subscribed\n+     */\n+    VEHICLEDATA_BATTVOLTAGE,\n+    /**\n+     * Notifies EGINETORQUEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINETORQUE,\n+    /**\n+     * Notifies ENGINEOILLIFEData may be subscribed\n+     */\n+    VEHICLEDATA_ENGINEOILLIFE,\n+    /**\n+     * Notifies ACCPEDALData may be subscribed\n+     */\n+    VEHICLEDATA_ACCPEDAL,\n+    /**\n+     * Notifies STEERINGWHEELData may be subscribed\n+     */\n+    VEHICLEDATA_STEERINGWHEEL,\n+    /**\n+     * Notifies ECALLINFOData may be subscribed\n+     */\n+    VEHICLEDATA_ECALLINFO,\n+    /**\n+     * Notifies AIRBAGSTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_AIRBAGSTATUS,\n+    /**\n+     * Notifies EMERGENCYEVENTData may be subscribed\n+     */\n+    VEHICLEDATA_EMERGENCYEVENT,\n+    /**\n+     * Notifies CLUSTERMODESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_CLUSTERMODESTATUS,\n+    /**\n+     * Notifies MYKEYData may be subscribed\n+     */\n+    VEHICLEDATA_MYKEY,\n+\n+    VEHICLEDATA_FUELRANGE,\n+\n+    /**\n+     * Notifies TURNSIGNALData may be subscribed\n+     */\n+    VEHICLEDATA_TURNSIGNAL,\n+\n+    /**\n+     * Notifies ELECTRONICPARKBRAKESTATUSData may be subscribed\n+     */\n+    VEHICLEDATA_ELECTRONICPARKBRAKESTATUS,\n+\n+    /**\n+     * Notifies VEHICLEDATA_CLOUDAPPVEHICLEID may be subscribed\n+     */\n+    VEHICLEDATA_CLOUDAPPVEHICLEID,\n+    /**\n+     * Notifies VEHICLEDATA_OEM_CUSTOM_DATA may be subscribed\n+     *\n+     * @since SmartDeviceLink 6.0\n+     */\n+    VEHICLEDATA_OEM_CUSTOM_DATA,\n+\n+    /**\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    VEHICLEDATA_HANDSOFFSTEERING,\n+\n+    /**\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    VEHICLEDATA_STABILITYCONTROLSSTATUS;\n+\n+     /**\n+     * Convert String to VehicleDataType\n+     * @param value String\n+     * @return VehicleDataType\n+     */\n+\n+    public static VehicleDataType valueForString(String value) {\n+        try{\n+            return valueOf(value);\n+        }catch(Exception e){\n+            return null;\n+        }\n+    }\n+}\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzIxMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458967213", "body": "```suggestion\r\n    /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Sets a value for StabilityControlStatus.\n          \n          \n            \n                 * @param stabilityControlsStatus a VehicleDataResult value\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"557\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"558\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"559\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-smi\">VehicleDataResult</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"560\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"557\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"558\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"559\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"560\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"561\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"562\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:37:41Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -533,4 +534,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlStatus.\r\n+     * @param stabilityControlsStatus a VehicleDataResult value\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex bcd6144fd..a6aa68c92 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,553 +1,656 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class UnsubscribeVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object\n-\t */\n-\tpublic UnsubscribeVehicleDataResponse() {\n-\t\tsuper(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-\t}\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object\n-\t * @param success whether the request is successfully processed\n-\t * @param resultCode whether the request is successfully processed\n-\t */\n-\tpublic UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-\t\tthis();\n-\t\tsetSuccess(success);\n-\t\tsetResultCode(resultCode);\n-\t}\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t * \n-\t * @param hash The Hashtable to use to build this RPC\n-\t *\n-\t */\n-    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Sets Gps\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    /**\n-     * Gets Gps\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-    /**\n-     * Sets Speed\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    /**\n-     * Gets Speed\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-    /**\n-     * Sets rpm\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    /**\n-     * Gets rpm\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-    /**\n-     * Sets Fuel Level\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    /**\n-     * Gets Fuel Level\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    /**\n-     * Sets Instant Fuel Consumption\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    /**\n-     * Gets Instant Fuel Consumption\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    /**\n-     * Sets External Temperature\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    /**\n-     * Gets External Temperature\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-    /**\n-     * Sets Tire Pressure\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    /**\n-     * Gets Tire Pressure\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-    /**\n-     * Sets Odometer\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    /**\n-     * Gets Odometer\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-    /**\n-     * Sets Belt Status\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    /**\n-     * Gets Belt Status\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-    /**\n-     * Sets Body Information\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    /**\n-     * Gets Body Information\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-    /**\n-     * Sets Device Status\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    /**\n-     * Gets Device Status\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-    /**\n-     * Sets Driver Braking\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    /**\n-     * Gets Driver Braking\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-    /**\n-     * Sets Wiper Status\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    /**\n-     * Gets Wiper Status\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-    /**\n-     * Sets Head Lamp Status\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    /**\n-     * Gets Head Lamp Status\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    /**\n-     * Sets Engine Torque\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    /**\n-     * Gets Engine Torque\n-     * @return a VehicleDataResult related to the enginer's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-    /**\n-     * Sets Engine Oil Life\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    /**\n-     * Gets Engine Oil Life\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-    /**\n-     * Sets AccPedal Position\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    /**\n-     * Gets AccPedal Position\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }  \n-    \n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    \n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlStatus.\n-     * @param stabilityControlsStatus a VehicleDataResult value\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the Stability Control Status.\n-     * @return a VehicleDataResult related to the Stability Control Status\n-     */\n-    public VehicleDataResult getStabilityControlsStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class UnsubscribeVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object\n+     */\n+    public UnsubscribeVehicleDataResponse() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n+     * parameter\n+     * <p></p>\n+     *\n+     * @param hash The Hashtable to use to build this RPC\n+     */\n+    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets Gps\n+     *\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets Gps\n+     *\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets Speed\n+     *\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets Speed\n+     *\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets rpm\n+     *\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets rpm\n+     *\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets Fuel Level\n+     *\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets Fuel Level\n+     *\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets Instant Fuel Consumption\n+     *\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets Instant Fuel Consumption\n+     *\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets External Temperature\n+     *\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets External Temperature\n+     *\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets Tire Pressure\n+     *\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets Tire Pressure\n+     *\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets Odometer\n+     *\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets Odometer\n+     *\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets Belt Status\n+     *\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets Belt Status\n+     *\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets Body Information\n+     *\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets Body Information\n+     *\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets Device Status\n+     *\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets Device Status\n+     *\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets Driver Braking\n+     *\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets Driver Braking\n+     *\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets Wiper Status\n+     *\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets Wiper Status\n+     *\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets Head Lamp Status\n+     *\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets Head Lamp Status\n+     *\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets Engine Torque\n+     *\n+     * @return a VehicleDataResult related to the enginer's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets Engine Torque\n+     *\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets Engine Oil Life\n+     *\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets Engine Oil Life\n+     *\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets AccPedal Position\n+     *\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets AccPedal Position\n+     *\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     *\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     *\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     *\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex a6aa68c92..5cbad3455 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,656 +1,578 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class UnsubscribeVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object\n-     */\n-    public UnsubscribeVehicleDataResponse() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n-     * parameter\n-     * <p></p>\n-     *\n-     * @param hash The Hashtable to use to build this RPC\n-     */\n-    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets Gps\n-     *\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets Gps\n-     *\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets Speed\n-     *\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets Speed\n-     *\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets rpm\n-     *\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets rpm\n-     *\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets Fuel Level\n-     *\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets Fuel Level\n-     *\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets Instant Fuel Consumption\n-     *\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets Instant Fuel Consumption\n-     *\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets External Temperature\n-     *\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets External Temperature\n-     *\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets Tire Pressure\n-     *\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets Tire Pressure\n-     *\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets Odometer\n-     *\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets Odometer\n-     *\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets Belt Status\n-     *\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets Belt Status\n-     *\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets Body Information\n-     *\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets Body Information\n-     *\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets Device Status\n-     *\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets Device Status\n-     *\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets Driver Braking\n-     *\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets Driver Braking\n-     *\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets Wiper Status\n-     *\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets Wiper Status\n-     *\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets Head Lamp Status\n-     *\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets Head Lamp Status\n-     *\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets Engine Torque\n-     *\n-     * @return a VehicleDataResult related to the enginer's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets Engine Torque\n-     *\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets Engine Oil Life\n-     *\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets Engine Oil Life\n-     *\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets AccPedal Position\n-     *\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets AccPedal Position\n-     *\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     *\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     *\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     *\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return VehicleDataResult See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public VehicleDataResult getStabilityControlsStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class UnsubscribeVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object\n+\t */\n+\tpublic UnsubscribeVehicleDataResponse() {\n+\t\tsuper(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+\t}\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object\n+\t * @param success whether the request is successfully processed\n+\t * @param resultCode whether the request is successfully processed\n+\t */\n+\tpublic UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+\t\tthis();\n+\t\tsetSuccess(success);\n+\t\tsetResultCode(resultCode);\n+\t}\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n+\t * parameter\n+\t * <p></p>\n+\t * \n+\t * @param hash The Hashtable to use to build this RPC\n+\t *\n+\t */\n+    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Sets Gps\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    /**\n+     * Gets Gps\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+    /**\n+     * Sets Speed\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    /**\n+     * Gets Speed\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+    /**\n+     * Sets rpm\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    /**\n+     * Gets rpm\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+    /**\n+     * Sets Fuel Level\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    /**\n+     * Gets Fuel Level\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    /**\n+     * Sets Instant Fuel Consumption\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    /**\n+     * Gets Instant Fuel Consumption\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    /**\n+     * Sets External Temperature\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    /**\n+     * Gets External Temperature\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+    /**\n+     * Sets Tire Pressure\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    /**\n+     * Gets Tire Pressure\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+    /**\n+     * Sets Odometer\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    /**\n+     * Gets Odometer\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+    /**\n+     * Sets Belt Status\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    /**\n+     * Gets Belt Status\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+    /**\n+     * Sets Body Information\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    /**\n+     * Gets Body Information\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+    /**\n+     * Sets Device Status\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    /**\n+     * Gets Device Status\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+    /**\n+     * Sets Driver Braking\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    /**\n+     * Gets Driver Braking\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+    /**\n+     * Sets Wiper Status\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    /**\n+     * Gets Wiper Status\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+    /**\n+     * Sets Head Lamp Status\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    /**\n+     * Gets Head Lamp Status\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    /**\n+     * Sets Engine Torque\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    /**\n+     * Gets Engine Torque\n+     * @return a VehicleDataResult related to the enginer's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+    /**\n+     * Sets Engine Oil Life\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    /**\n+     * Gets Engine Oil Life\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+    /**\n+     * Sets AccPedal Position\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    /**\n+     * Gets AccPedal Position\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }  \n+    \n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    \n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(VehicleDataResult handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return VehicleDataResult To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getHandsOffSteering() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2NzU0Ng==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458967546", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return VehicleDataResult See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets a VehicleDataResult for the Stability Control Status.\n          \n          \n            \n                 * @return a VehicleDataResult related to the Stability Control Status\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return VehicleDataResult See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"567\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"568\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-smi\">VehicleDataResult</span> <span class=\"pl-k\">for</span> the <span class=\"pl-smi\">Stability</span> <span class=\"pl-smi\">Control</span> <span class=\"pl-smi\">Status</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"569\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">VehicleDataResult</span> related to the <span class=\"pl-smi\">Stability</span> <span class=\"pl-smi\">Control</span> <span class=\"pl-smi\">Status</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"570\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"567\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"568\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"569\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"570\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataResult</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"571\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"572\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"573\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:38:16Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java", "diffHunk": "@@ -533,4 +534,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlStatus.\r\n+     * @param stabilityControlsStatus a VehicleDataResult value\r\n+     */\r\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\r\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleDataResult for the Stability Control Status.\r\n+     * @return a VehicleDataResult related to the Stability Control Status\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex bcd6144fd..a6aa68c92 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,553 +1,656 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class UnsubscribeVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object\n-\t */\n-\tpublic UnsubscribeVehicleDataResponse() {\n-\t\tsuper(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-\t}\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object\n-\t * @param success whether the request is successfully processed\n-\t * @param resultCode whether the request is successfully processed\n-\t */\n-\tpublic UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-\t\tthis();\n-\t\tsetSuccess(success);\n-\t\tsetResultCode(resultCode);\n-\t}\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t * \n-\t * @param hash The Hashtable to use to build this RPC\n-\t *\n-\t */\n-    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Sets Gps\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    /**\n-     * Gets Gps\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-    /**\n-     * Sets Speed\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    /**\n-     * Gets Speed\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-    /**\n-     * Sets rpm\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    /**\n-     * Gets rpm\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-    /**\n-     * Sets Fuel Level\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    /**\n-     * Gets Fuel Level\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    /**\n-     * Sets Instant Fuel Consumption\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    /**\n-     * Gets Instant Fuel Consumption\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    /**\n-     * Sets External Temperature\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    /**\n-     * Gets External Temperature\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-    /**\n-     * Sets Tire Pressure\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    /**\n-     * Gets Tire Pressure\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-    /**\n-     * Sets Odometer\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    /**\n-     * Gets Odometer\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-    /**\n-     * Sets Belt Status\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    /**\n-     * Gets Belt Status\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-    /**\n-     * Sets Body Information\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    /**\n-     * Gets Body Information\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-    /**\n-     * Sets Device Status\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    /**\n-     * Gets Device Status\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-    /**\n-     * Sets Driver Braking\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    /**\n-     * Gets Driver Braking\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-    /**\n-     * Sets Wiper Status\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    /**\n-     * Gets Wiper Status\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-    /**\n-     * Sets Head Lamp Status\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    /**\n-     * Gets Head Lamp Status\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    /**\n-     * Sets Engine Torque\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    /**\n-     * Gets Engine Torque\n-     * @return a VehicleDataResult related to the enginer's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-    /**\n-     * Sets Engine Oil Life\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    /**\n-     * Gets Engine Oil Life\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-    /**\n-     * Sets AccPedal Position\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    /**\n-     * Gets AccPedal Position\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }  \n-    \n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    \n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlStatus.\n-     * @param stabilityControlsStatus a VehicleDataResult value\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the Stability Control Status.\n-     * @return a VehicleDataResult related to the Stability Control Status\n-     */\n-    public VehicleDataResult getStabilityControlsStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class UnsubscribeVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object\n+     */\n+    public UnsubscribeVehicleDataResponse() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n+     * parameter\n+     * <p></p>\n+     *\n+     * @param hash The Hashtable to use to build this RPC\n+     */\n+    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets Gps\n+     *\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets Gps\n+     *\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets Speed\n+     *\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets Speed\n+     *\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets rpm\n+     *\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets rpm\n+     *\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets Fuel Level\n+     *\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets Fuel Level\n+     *\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets Instant Fuel Consumption\n+     *\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets Instant Fuel Consumption\n+     *\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets External Temperature\n+     *\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets External Temperature\n+     *\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets Tire Pressure\n+     *\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets Tire Pressure\n+     *\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets Odometer\n+     *\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets Odometer\n+     *\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets Belt Status\n+     *\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets Belt Status\n+     *\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets Body Information\n+     *\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets Body Information\n+     *\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets Device Status\n+     *\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets Device Status\n+     *\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets Driver Braking\n+     *\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets Driver Braking\n+     *\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets Wiper Status\n+     *\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets Wiper Status\n+     *\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets Head Lamp Status\n+     *\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets Head Lamp Status\n+     *\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets Engine Torque\n+     *\n+     * @return a VehicleDataResult related to the enginer's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets Engine Torque\n+     *\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets Engine Oil Life\n+     *\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets Engine Oil Life\n+     *\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets AccPedal Position\n+     *\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets AccPedal Position\n+     *\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     *\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     *\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     *\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\nindex a6aa68c92..5cbad3455 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,656 +1,578 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class UnsubscribeVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object\n-     */\n-    public UnsubscribeVehicleDataResponse() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    /**\n-     * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n-     * parameter\n-     * <p></p>\n-     *\n-     * @param hash The Hashtable to use to build this RPC\n-     */\n-    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets Gps\n-     *\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets Gps\n-     *\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets Speed\n-     *\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets Speed\n-     *\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets rpm\n-     *\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets rpm\n-     *\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets Fuel Level\n-     *\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets Fuel Level\n-     *\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets Instant Fuel Consumption\n-     *\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets Instant Fuel Consumption\n-     *\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets External Temperature\n-     *\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets External Temperature\n-     *\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets Tire Pressure\n-     *\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets Tire Pressure\n-     *\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets Odometer\n-     *\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets Odometer\n-     *\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets Belt Status\n-     *\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets Belt Status\n-     *\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets Body Information\n-     *\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets Body Information\n-     *\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets Device Status\n-     *\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets Device Status\n-     *\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets Driver Braking\n-     *\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets Driver Braking\n-     *\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets Wiper Status\n-     *\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets Wiper Status\n-     *\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets Head Lamp Status\n-     *\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets Head Lamp Status\n-     *\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets Engine Torque\n-     *\n-     * @return a VehicleDataResult related to the enginer's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets Engine Torque\n-     *\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets Engine Oil Life\n-     *\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets Engine Oil Life\n-     *\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets AccPedal Position\n-     *\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets AccPedal Position\n-     *\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     *\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     *\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     *\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return VehicleDataResult See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public VehicleDataResult getStabilityControlsStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Unsubscribe Vehicle Data Response is sent, when UnsubscribeVehicleData has been called.\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class UnsubscribeVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object\n+\t */\n+\tpublic UnsubscribeVehicleDataResponse() {\n+\t\tsuper(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+\t}\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object\n+\t * @param success whether the request is successfully processed\n+\t * @param resultCode whether the request is successfully processed\n+\t */\n+\tpublic UnsubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+\t\tthis();\n+\t\tsetSuccess(success);\n+\t\tsetResultCode(resultCode);\n+\t}\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleDataResponse object indicated by the Hashtable\n+\t * parameter\n+\t * <p></p>\n+\t * \n+\t * @param hash The Hashtable to use to build this RPC\n+\t *\n+\t */\n+    public UnsubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Sets Gps\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    /**\n+     * Gets Gps\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+    /**\n+     * Sets Speed\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    /**\n+     * Gets Speed\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+    /**\n+     * Sets rpm\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    /**\n+     * Gets rpm\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+    /**\n+     * Sets Fuel Level\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    /**\n+     * Gets Fuel Level\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    /**\n+     * Sets Instant Fuel Consumption\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    /**\n+     * Gets Instant Fuel Consumption\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    /**\n+     * Sets External Temperature\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    /**\n+     * Gets External Temperature\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+    /**\n+     * Sets Tire Pressure\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    /**\n+     * Gets Tire Pressure\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+    /**\n+     * Sets Odometer\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    /**\n+     * Gets Odometer\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+    /**\n+     * Sets Belt Status\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    /**\n+     * Gets Belt Status\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+    /**\n+     * Sets Body Information\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    /**\n+     * Gets Body Information\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+    /**\n+     * Sets Device Status\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    /**\n+     * Gets Device Status\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+    /**\n+     * Sets Driver Braking\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    /**\n+     * Gets Driver Braking\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+    /**\n+     * Sets Wiper Status\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    /**\n+     * Gets Wiper Status\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+    /**\n+     * Sets Head Lamp Status\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    /**\n+     * Gets Head Lamp Status\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    /**\n+     * Sets Engine Torque\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    /**\n+     * Gets Engine Torque\n+     * @return a VehicleDataResult related to the enginer's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+    /**\n+     * Sets Engine Oil Life\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    /**\n+     * Gets Engine Oil Life\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+    /**\n+     * Sets AccPedal Position\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    /**\n+     * Gets AccPedal Position\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }  \n+    \n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    \n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the unsubscribe response of the CloudAppVehicleID vehicle data item.\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(VehicleDataResult handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return VehicleDataResult To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getHandsOffSteering() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3MTMwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458971301", "body": "At top of the file, you need to add what is below to the Parameter List\r\n```\r\n *  <tr>\r\n *      <td>stabilityControlsStatus</td>\r\n *      <td>Boolean</td>\r\n *      <td>See StabilityControlsStatus</td>\r\n *      <td>N</td>\r\n *      <td>SmartDeviceLink 7.0.0</td>\r\n *  </tr>\r\n``", "bodyText": "At top of the file, you need to add what is below to the Parameter List\n *  <tr>\n *      <td>stabilityControlsStatus</td>\n *      <td>Boolean</td>\n *      <td>See StabilityControlsStatus</td>\n *      <td>N</td>\n *      <td>SmartDeviceLink 7.0.0</td>\n *  </tr>\n``", "bodyHTML": "<p dir=\"auto\">At top of the file, you need to add what is below to the Parameter List</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n``\"><pre><code> *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n``\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-22T17:44:26Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -307,6 +307,7 @@\n \tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n \tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n \tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n+\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 046d8047b..2d6a1567d 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,887 +1,876 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the\n- * subscribeVehicleData function\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- *  </table>\n- * <p><b> Response</b></p>\n- * <p><b>Non-default Result Codes:</b></p>\n- *\t<p>SUCCESS</p>\n- *\t<p>WARNINGS</p>\n- *\t<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED</p>\n- *\t<p>DISALLOWED</p>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t * \n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-        \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value. \n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the subscribeVehicleData\n+ * function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object\n+     */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+     * parameter\n+     * <p></p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribe data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been unsubscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelRange data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelRange data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value.\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "3422e5053da6c21e778a092e66a32719eb12b6a1", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 2d6a1567d..6e49b3e57 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -863,14 +877,4 @@ public class UnsubscribeVehicleData extends RPCRequest {\n     public Boolean getStabilityControlsStatus() {\n         return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n     }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 6e49b3e57..1d903b094 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,880 +1,927 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the subscribeVehicleData\n- * function.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius.</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t *\n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t *\n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t *\n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t *\n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t *\n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     *\n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     *\n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t *\n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t *\n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t *\n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t *\n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t *\n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t *\n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t *\n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t *\n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t *\n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t *\n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t *\n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value.\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the\n+ * subscribeVehicleData function\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t      \t<td>stabilityControlsStatus</td>\n+ *        \t<td>Boolean</td>\n+ *        \t<td>See StabilityControlsStatus</td>\n+ *        \t<td>N</td>\n+ *        \t<td>SmartDeviceLink 7.0.0</td>\n+ *    \t</tr>\n+ *  *\n+ *  </table>\n+ * <p><b> Response</b></p>\n+ * <p><b>Non-default Result Codes:</b></p>\n+ *\t<p>SUCCESS</p>\n+ *\t<p>WARNINGS</p>\n+ *\t<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED</p>\n+ *\t<p>DISALLOWED</p>\n+ *\n+ * @since SmartDeviceLink 2.0\n+ * @see SubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object\n+\t */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+\t * parameter\n+\t * <p></p>\n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribe data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been unsubscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+\t * \n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+        \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the fuelRange data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus() {\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value. \n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3MTgzNA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458971834", "body": "```suggestion\r\n    /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/**\n          \n          \n            \n            \t * Sets a boolean value for StabilityControlsStatus.\n          \n          \n            \n            \t * @param stabilityControlsStatus a boolean value\n          \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-k\">boolean</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:45:19Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -867,4 +868,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataS\n \tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n \t\treturn getBoolean(vehicleDataName);\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Sets a boolean value for StabilityControlsStatus.\r\n+\t * @param stabilityControlsStatus a boolean value\r\n+\t */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 046d8047b..2d6a1567d 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,887 +1,876 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the\n- * subscribeVehicleData function\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- *  </table>\n- * <p><b> Response</b></p>\n- * <p><b>Non-default Result Codes:</b></p>\n- *\t<p>SUCCESS</p>\n- *\t<p>WARNINGS</p>\n- *\t<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED</p>\n- *\t<p>DISALLOWED</p>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t * \n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-        \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value. \n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the subscribeVehicleData\n+ * function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object\n+     */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+     * parameter\n+     * <p></p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribe data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been unsubscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelRange data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelRange data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value.\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "3422e5053da6c21e778a092e66a32719eb12b6a1", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 2d6a1567d..6e49b3e57 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -863,14 +877,4 @@ public class UnsubscribeVehicleData extends RPCRequest {\n     public Boolean getStabilityControlsStatus() {\n         return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n     }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 6e49b3e57..1d903b094 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,880 +1,927 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the subscribeVehicleData\n- * function.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius.</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t *\n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t *\n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t *\n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t *\n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t *\n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     *\n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     *\n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t *\n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t *\n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t *\n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t *\n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t *\n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t *\n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t *\n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t *\n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t *\n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t *\n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t *\n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value.\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the\n+ * subscribeVehicleData function\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t      \t<td>stabilityControlsStatus</td>\n+ *        \t<td>Boolean</td>\n+ *        \t<td>See StabilityControlsStatus</td>\n+ *        \t<td>N</td>\n+ *        \t<td>SmartDeviceLink 7.0.0</td>\n+ *    \t</tr>\n+ *  *\n+ *  </table>\n+ * <p><b> Response</b></p>\n+ * <p><b>Non-default Result Codes:</b></p>\n+ *\t<p>SUCCESS</p>\n+ *\t<p>WARNINGS</p>\n+ *\t<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED</p>\n+ *\t<p>DISALLOWED</p>\n+ *\n+ * @since SmartDeviceLink 2.0\n+ * @see SubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object\n+\t */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+\t * parameter\n+\t * <p></p>\n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribe data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been unsubscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+\t * \n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+        \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the fuelRange data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus() {\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value. \n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3MjEyOA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458972128", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return Boolean See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/**\n          \n          \n            \n            \t * Gets a boolean value for StabilityControlsStatus.\n          \n          \n            \n            \t * @return a Boolean value.\n          \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">Boolean</span> value.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">Boolean</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:45:45Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -867,4 +868,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataS\n \tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n \t\treturn getBoolean(vehicleDataName);\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Sets a boolean value for StabilityControlsStatus.\r\n+\t * @param stabilityControlsStatus a boolean value\r\n+\t */\r\n+\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\r\n+\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for StabilityControlsStatus.\r\n+\t * @return a Boolean value.\r\n+\t */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 046d8047b..2d6a1567d 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,887 +1,876 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the\n- * subscribeVehicleData function\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- *  </table>\n- * <p><b> Response</b></p>\n- * <p><b>Non-default Result Codes:</b></p>\n- *\t<p>SUCCESS</p>\n- *\t<p>WARNINGS</p>\n- *\t<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED</p>\n- *\t<p>DISALLOWED</p>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t * \n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-        \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value. \n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the subscribeVehicleData\n+ * function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object\n+     */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+     * parameter\n+     * <p></p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * unsubscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribe data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been unsubscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelRange data has been\n+     * unsubscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelRange data\n+     * has been unsubscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value.\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "3422e5053da6c21e778a092e66a32719eb12b6a1", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 2d6a1567d..6e49b3e57 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -863,14 +877,4 @@ public class UnsubscribeVehicleData extends RPCRequest {\n     public Boolean getStabilityControlsStatus() {\n         return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n     }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 6e49b3e57..1d903b094 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -1,880 +1,927 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * This function is used to unsubscribe the notifications from the subscribeVehicleData\n- * function.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius.</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0\n- * @see SubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class UnsubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object\n-\t */\n-    public UnsubscribeVehicleData() {\n-        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n-\t * parameter\n-\t * <p></p>\n-\t *\n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Gps data\n-\t *\n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from speed data\n-\t *\n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribe data\n-\t *\n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         unsubscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n-\t *\n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been unsubscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n-     *\n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been unsubscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n-     *\n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * unsubscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been unsubscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n-\t *\n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n-\t *\n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n-\t *\n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n-\t *\n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from odometer data\n-\t *\n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from belt Status data\n-\t *\n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from body Information data\n-\t *\n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from device Status data\n-\t *\n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n-\t *\n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n-\t *\n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n-\t *\n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been unsubscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the fuelRange data has been\n-\t * unsubscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n-\t *         has been unsubscribed.\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus() {\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value.\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * This function is used to unsubscribe the notifications from the\n+ * subscribeVehicleData function\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t<tr>\n+ * \t      \t<td>stabilityControlsStatus</td>\n+ *        \t<td>Boolean</td>\n+ *        \t<td>See StabilityControlsStatus</td>\n+ *        \t<td>N</td>\n+ *        \t<td>SmartDeviceLink 7.0.0</td>\n+ *    \t</tr>\n+ *  *\n+ *  </table>\n+ * <p><b> Response</b></p>\n+ * <p><b>Non-default Result Codes:</b></p>\n+ *\t<p>SUCCESS</p>\n+ *\t<p>WARNINGS</p>\n+ *\t<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED</p>\n+ *\t<p>DISALLOWED</p>\n+ *\n+ * @since SmartDeviceLink 2.0\n+ * @see SubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class UnsubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object\n+\t */\n+    public UnsubscribeVehicleData() {\n+        super(FunctionID.UNSUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * Constructs a new UnsubscribeVehicleData object indicated by the Hashtable\n+\t * parameter\n+\t * <p></p>\n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public UnsubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribe data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         unsubscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been unsubscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been unsubscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, unsubscribes from fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * unsubscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been unsubscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from accPedalPosition data\n+\t * \n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * unsubscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been unsubscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+        \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the fuelRange data has been\n+\t * unsubscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the fuelRange data\n+\t *         has been unsubscribed.\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus() {\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, unsubscribes from cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value. \n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleID data has been unsubscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean( KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3NTg1Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458975852", "body": "```suggestion\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Sets a value for StabilityControlsStatus.\n          \n          \n            \n                 * @param stabilityControlsStatus a VehicleDataResult value\n          \n          \n            \n                 */\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"556\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"557\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"558\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-smi\">VehicleDataResult</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"559\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"556\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"557\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"558\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"559\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"560\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"561\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:51:50Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -531,4 +532,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a VehicleDataResult value\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex c3103e573..5cec0d68d 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,551 +1,655 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class SubscribeVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleDataResponse object\n-\t */\n-    public SubscribeVehicleDataResponse() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash The Hashtable to use\n-\t */\n-    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\t/**\n-\t * Constructs a new SubscribeVehicleDataResponse object\n-\t * @param success whether the request is successfully processed\n-\t * @param resultCode whether the request is successfully processed\n-\t */\n-\tpublic SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-\t\tthis();\n-\t\tsetSuccess(success);\n-\t\tsetResultCode(resultCode);\n-\t}\n-    /**\n-     * Sets Gps\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    /**\n-     * Gets Gps\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-    /**\n-     * Sets Speed\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    /**\n-     * Gets Speed\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-    /**\n-     * Sets rpm\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    /**\n-     * Gets rpm\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-    /**\n-     * Sets Fuel Level\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    /**\n-     * Gets Fuel Level\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    /**\n-     * Sets Instant Fuel Consumption\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    /**\n-     * Gets Instant Fuel Consumption\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    /**\n-     * Sets External Temperature\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    /**\n-     * Gets External Temperature\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-    /**\n-     * Sets Tire Pressure\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    /**\n-     * Gets Tire Pressure\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-    /**\n-     * Sets Odometer\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    /**\n-     * Gets Odometer\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-    /**\n-     * Sets Belt Status\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    /**\n-     * Gets Belt Status\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-    /**\n-     * Sets Body Information\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    /**\n-     * Gets Body Information\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-    /**\n-     * Sets Device Status\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    /**\n-     * Gets Device Status\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-    /**\n-     * Sets Driver Braking\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    /**\n-     * Gets Driver Braking\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-    /**\n-     * Sets Wiper Status\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    /**\n-     * Gets Wiper Status\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-    /**\n-     * Sets Head Lamp Status\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    /**\n-     * Gets Head Lamp Status\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    /**\n-     * Sets Engine Torque\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    /**\n-     * Gets Engine Torque\n-     * @return a VehicleDataResult related to the engine's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-    /**\n-     * Sets Engine Oil Life\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    /**\n-     * Gets Engine Oil Life\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-    /**\n-     * Sets AccPedal Position\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    /**\n-     * Gets AccPedal Position\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a VehicleDataResult value\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus for the Stability Control Status.\n-     * @return a VehicleDataResult related to the StabilityControlsStatus\n-     */\n-    public VehicleDataResult getStabilityControlsStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class SubscribeVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleDataResponse object\n+     */\n+    public SubscribeVehicleDataResponse() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new SubscribeVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    /**\n+     * Gets Gps\n+     *\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets Gps\n+     *\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets Speed\n+     *\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets Speed\n+     *\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets rpm\n+     *\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets rpm\n+     *\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets Fuel Level\n+     *\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets Fuel Level\n+     *\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets Instant Fuel Consumption\n+     *\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets Instant Fuel Consumption\n+     *\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets External Temperature\n+     *\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets External Temperature\n+     *\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets Tire Pressure\n+     *\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets Tire Pressure\n+     *\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets Odometer\n+     *\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets Odometer\n+     *\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets Belt Status\n+     *\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets Belt Status\n+     *\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets Body Information\n+     *\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets Body Information\n+     *\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets Device Status\n+     *\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets Device Status\n+     *\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets Driver Braking\n+     *\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets Driver Braking\n+     *\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets Wiper Status\n+     *\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets Wiper Status\n+     *\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets Head Lamp Status\n+     *\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets Head Lamp Status\n+     *\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets Engine Torque\n+     *\n+     * @return a VehicleDataResult related to the engine's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets Engine Torque\n+     *\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets Engine Oil Life\n+     *\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets Engine Oil Life\n+     *\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets AccPedal Position\n+     *\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets AccPedal Position\n+     *\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     *\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     *\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     *\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex 5cec0d68d..f9190e556 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,655 +1,576 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class SubscribeVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleDataResponse object\n-     */\n-    public SubscribeVehicleDataResponse() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Constructs a new SubscribeVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    /**\n-     * Gets Gps\n-     *\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets Gps\n-     *\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets Speed\n-     *\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets Speed\n-     *\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets rpm\n-     *\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets rpm\n-     *\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets Fuel Level\n-     *\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets Fuel Level\n-     *\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets Instant Fuel Consumption\n-     *\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets Instant Fuel Consumption\n-     *\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets External Temperature\n-     *\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets External Temperature\n-     *\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets Tire Pressure\n-     *\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets Tire Pressure\n-     *\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets Odometer\n-     *\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets Odometer\n-     *\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets Belt Status\n-     *\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets Belt Status\n-     *\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets Body Information\n-     *\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets Body Information\n-     *\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets Device Status\n-     *\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets Device Status\n-     *\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets Driver Braking\n-     *\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets Driver Braking\n-     *\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets Wiper Status\n-     *\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets Wiper Status\n-     *\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets Head Lamp Status\n-     *\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets Head Lamp Status\n-     *\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets Engine Torque\n-     *\n-     * @return a VehicleDataResult related to the engine's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets Engine Torque\n-     *\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets Engine Oil Life\n-     *\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets Engine Oil Life\n-     *\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets AccPedal Position\n-     *\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets AccPedal Position\n-     *\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     *\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     *\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     *\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return VehicleDataResult See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public VehicleDataResult getStabilityControlsStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class SubscribeVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleDataResponse object\n+\t */\n+    public SubscribeVehicleDataResponse() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash The Hashtable to use\n+\t */\n+    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\t/**\n+\t * Constructs a new SubscribeVehicleDataResponse object\n+\t * @param success whether the request is successfully processed\n+\t * @param resultCode whether the request is successfully processed\n+\t */\n+\tpublic SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+\t\tthis();\n+\t\tsetSuccess(success);\n+\t\tsetResultCode(resultCode);\n+\t}\n+    /**\n+     * Sets Gps\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    /**\n+     * Gets Gps\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+    /**\n+     * Sets Speed\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    /**\n+     * Gets Speed\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+    /**\n+     * Sets rpm\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    /**\n+     * Gets rpm\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+    /**\n+     * Sets Fuel Level\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    /**\n+     * Gets Fuel Level\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    /**\n+     * Sets Instant Fuel Consumption\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    /**\n+     * Gets Instant Fuel Consumption\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    /**\n+     * Sets External Temperature\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    /**\n+     * Gets External Temperature\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+    /**\n+     * Sets Tire Pressure\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    /**\n+     * Gets Tire Pressure\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+    /**\n+     * Sets Odometer\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    /**\n+     * Gets Odometer\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+    /**\n+     * Sets Belt Status\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    /**\n+     * Gets Belt Status\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+    /**\n+     * Sets Body Information\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    /**\n+     * Gets Body Information\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+    /**\n+     * Sets Device Status\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    /**\n+     * Gets Device Status\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+    /**\n+     * Sets Driver Braking\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    /**\n+     * Gets Driver Braking\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+    /**\n+     * Sets Wiper Status\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    /**\n+     * Gets Wiper Status\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+    /**\n+     * Sets Head Lamp Status\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    /**\n+     * Gets Head Lamp Status\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    /**\n+     * Sets Engine Torque\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    /**\n+     * Gets Engine Torque\n+     * @return a VehicleDataResult related to the engine's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+    /**\n+     * Sets Engine Oil Life\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    /**\n+     * Gets Engine Oil Life\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+    /**\n+     * Sets AccPedal Position\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    /**\n+     * Gets AccPedal Position\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(VehicleDataResult handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return VehicleDataResult To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getHandsOffSteering() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3NjA3Nw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458976077", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return VehicleDataResult See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets a StabilityControlsStatus for the Stability Control Status.\n          \n          \n            \n                 * @return a VehicleDataResult related to the StabilityControlsStatus\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return VehicleDataResult See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"566\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"567\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-smi\">StabilityControlsStatus</span> <span class=\"pl-k\">for</span> the <span class=\"pl-smi\">Stability</span> <span class=\"pl-smi\">Control</span> <span class=\"pl-smi\">Status</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"568\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">VehicleDataResult</span> related to the <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"569\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"566\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"567\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"568\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"569\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataResult</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"570\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"571\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"572\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:52:12Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java", "diffHunk": "@@ -531,4 +532,20 @@ public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult ve\n     public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\r\n         return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\r\n     }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a VehicleDataResult value\r\n+     */\r\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\r\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a StabilityControlsStatus for the Stability Control Status.\r\n+     * @return a VehicleDataResult related to the StabilityControlsStatus\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex c3103e573..5cec0d68d 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,551 +1,655 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class SubscribeVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleDataResponse object\n-\t */\n-    public SubscribeVehicleDataResponse() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash The Hashtable to use\n-\t */\n-    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\t/**\n-\t * Constructs a new SubscribeVehicleDataResponse object\n-\t * @param success whether the request is successfully processed\n-\t * @param resultCode whether the request is successfully processed\n-\t */\n-\tpublic SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-\t\tthis();\n-\t\tsetSuccess(success);\n-\t\tsetResultCode(resultCode);\n-\t}\n-    /**\n-     * Sets Gps\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    /**\n-     * Gets Gps\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-    /**\n-     * Sets Speed\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    /**\n-     * Gets Speed\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-    /**\n-     * Sets rpm\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    /**\n-     * Gets rpm\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-    /**\n-     * Sets Fuel Level\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    /**\n-     * Gets Fuel Level\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    /**\n-     * Sets Fuel Level State\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    /**\n-     * Gets Fuel Level State\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    /**\n-     * Sets Instant Fuel Consumption\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    /**\n-     * Gets Instant Fuel Consumption\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    /**\n-     * Sets External Temperature\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    /**\n-     * Gets External Temperature\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    /**\n-     * Gets currently selected gear data\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-    /**\n-     * Sets Tire Pressure\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    /**\n-     * Gets Tire Pressure\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-    /**\n-     * Sets Odometer\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    /**\n-     * Gets Odometer\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-    /**\n-     * Sets Belt Status\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    /**\n-     * Gets Belt Status\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-    /**\n-     * Sets Body Information\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    /**\n-     * Gets Body Information\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-    /**\n-     * Sets Device Status\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    /**\n-     * Gets Device Status\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-    /**\n-     * Sets Driver Braking\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    /**\n-     * Gets Driver Braking\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-    /**\n-     * Sets Wiper Status\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    /**\n-     * Gets Wiper Status\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-    /**\n-     * Sets Head Lamp Status\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    /**\n-     * Gets Head Lamp Status\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    /**\n-     * Sets Engine Torque\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    /**\n-     * Gets Engine Torque\n-     * @return a VehicleDataResult related to the engine's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-    /**\n-     * Sets Engine Oil Life\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    /**\n-     * Gets Engine Oil Life\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-    /**\n-     * Sets AccPedal Position\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    /**\n-     * Gets AccPedal Position\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a VehicleDataResult value\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus for the Stability Control Status.\n-     * @return a VehicleDataResult related to the StabilityControlsStatus\n-     */\n-    public VehicleDataResult getStabilityControlsStatus(){\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class SubscribeVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleDataResponse object\n+     */\n+    public SubscribeVehicleDataResponse() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new SubscribeVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    /**\n+     * Gets Gps\n+     *\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets Gps\n+     *\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets Speed\n+     *\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets Speed\n+     *\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets rpm\n+     *\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets rpm\n+     *\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets Fuel Level\n+     *\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets Fuel Level\n+     *\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets Fuel Level State\n+     *\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets Fuel Level State\n+     *\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets Instant Fuel Consumption\n+     *\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets Instant Fuel Consumption\n+     *\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets External Temperature\n+     *\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets External Temperature\n+     *\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Gets currently selected gear data\n+     *\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets Tire Pressure\n+     *\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets Tire Pressure\n+     *\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets Odometer\n+     *\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets Odometer\n+     *\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets Belt Status\n+     *\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets Belt Status\n+     *\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets Body Information\n+     *\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets Body Information\n+     *\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets Device Status\n+     *\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets Device Status\n+     *\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets Driver Braking\n+     *\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets Driver Braking\n+     *\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets Wiper Status\n+     *\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets Wiper Status\n+     *\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets Head Lamp Status\n+     *\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets Head Lamp Status\n+     *\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets Engine Torque\n+     *\n+     * @return a VehicleDataResult related to the engine's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets Engine Torque\n+     *\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets Engine Oil Life\n+     *\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets Engine Oil Life\n+     *\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets AccPedal Position\n+     *\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets AccPedal Position\n+     *\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     *\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     *\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     *\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     *\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\nindex 5cec0d68d..f9190e556 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n", "chunk": "@@ -1,655 +1,576 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class SubscribeVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleDataResponse object\n-     */\n-    public SubscribeVehicleDataResponse() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Constructs a new SubscribeVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    /**\n-     * Gets Gps\n-     *\n-     * @return a VehicleDataResult related to GPS\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getGps() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets Gps\n-     *\n-     * @param gps a VehicleDataResult related to GPS\n-     */\n-    public void setGps(VehicleDataResult gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets Speed\n-     *\n-     * @return a VehicleDataResult related to speed\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSpeed() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets Speed\n-     *\n-     * @param speed a VehicleDataResult related to speed\n-     */\n-    public void setSpeed(VehicleDataResult speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets rpm\n-     *\n-     * @return a VehicleDataResult related to RPM\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getRpm() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets rpm\n-     *\n-     * @param rpm a VehicleDataResult related to RPM\n-     */\n-    public void setRpm(VehicleDataResult rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets Fuel Level\n-     *\n-     * @return a VehicleDataResult related to FuelLevel\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevel() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets Fuel Level\n-     *\n-     * @param fuelLevel a VehicleDataResult related to Fuel Level\n-     */\n-    public void setFuelLevel(VehicleDataResult fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public VehicleDataResult getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n-        setFuelLevel(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets Fuel Level State\n-     *\n-     * @return a VehicleDataResult related to FuelLevel State\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelLevelState() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets Fuel Level State\n-     *\n-     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n-     */\n-    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets Instant Fuel Consumption\n-     *\n-     * @return a VehicleDataResult related to instant fuel consumption\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getInstantFuelConsumption() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets Instant Fuel Consumption\n-     *\n-     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n-     */\n-    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets External Temperature\n-     *\n-     * @return a VehicleDataResult related to external temperature\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getExternalTemperature() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets External Temperature\n-     *\n-     * @param externalTemperature a VehicleDataResult related to external temperature\n-     */\n-    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getPrndl() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Gets currently selected gear data\n-     *\n-     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n-     */\n-    public void setPrndl(VehicleDataResult prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets Tire Pressure\n-     *\n-     * @return a VehicleDataResult related to tire pressure\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTirePressure() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets Tire Pressure\n-     *\n-     * @param tirePressure a VehicleDataResult related to tire pressure\n-     */\n-    public void setTirePressure(VehicleDataResult tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets Odometer\n-     *\n-     * @return a VehicleDataResult related to the odometer\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getOdometer() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets Odometer\n-     *\n-     * @param odometer a VehicleDataResult related to the odometer\n-     */\n-    public void setOdometer(VehicleDataResult odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets Belt Status\n-     *\n-     * @return a VehicleDataResult related to the seat belt status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBeltStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets Belt Status\n-     *\n-     * @param beltStatus a VehicleDataResult related to the seat belt status\n-     */\n-    public void setBeltStatus(VehicleDataResult beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets Body Information\n-     *\n-     * @return a VehicleDataResult related to the body info\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getBodyInformation() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets Body Information\n-     *\n-     * @param bodyInformation a VehicleDataResult related to the body info\n-     */\n-    public void setBodyInformation(VehicleDataResult bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets Device Status\n-     *\n-     * @return a VehicleDataResult related to the device status of the connected device\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDeviceStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets Device Status\n-     *\n-     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n-     */\n-    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets Driver Braking\n-     *\n-     * @return a VehicleDataResult related to the driver breaking status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getDriverBraking() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets Driver Braking\n-     *\n-     * @param driverBraking a VehicleDataResult related to the driver breaking status\n-     */\n-    public void setDriverBraking(VehicleDataResult driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets Wiper Status\n-     *\n-     * @return a VehicleDataResult related to the wiper status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getWiperStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets Wiper Status\n-     *\n-     * @param wiperStatus a VehicleDataResult related to the wiper status\n-     */\n-    public void setWiperStatus(VehicleDataResult wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets Head Lamp Status\n-     *\n-     * @return a VehicleDataResult related to the headlamp status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getHeadLampStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets Head Lamp Status\n-     *\n-     * @param headLampStatus a VehicleDataResult related to the headlamp status\n-     */\n-    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets Engine Torque\n-     *\n-     * @return a VehicleDataResult related to the engine's torque\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineTorque() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets Engine Torque\n-     *\n-     * @param engineTorque a VehicleDataResult related to the engine's torque\n-     */\n-    public void setEngineTorque(VehicleDataResult engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets Engine Oil Life\n-     *\n-     * @return a VehicleDataResult related to the engine's oil life\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEngineOilLife() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets Engine Oil Life\n-     *\n-     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n-     */\n-    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets AccPedal Position\n-     *\n-     * @return a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAccPedalPosition() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets AccPedal Position\n-     *\n-     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n-     */\n-    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getSteeringWheelAngle() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getECallInfo() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(VehicleDataResult eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getAirbagStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getEmergencyEvent() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getClusterModeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getMyKey() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(VehicleDataResult myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range\n-     *\n-     * @return a VehicleDataResult related to the fuel range\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getFuelRange() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range\n-     *\n-     * @param fuelRange a VehicleDataResult related to the fuel range\n-     */\n-    public void setFuelRange(VehicleDataResult fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return a VehicleDataResult related to the turn signal status\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public VehicleDataResult getTurnSignal() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal a VehicleDataResult related to the turn signal status\n-     */\n-    public void setTurnSignal(VehicleDataResult turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return a VehicleDataResult related to the electronic park brake status\n-     */\n-    public VehicleDataResult getElectronicParkBrakeStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n-     */\n-    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public VehicleDataResult getCloudAppVehicleID() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets cloudAppVehicleID\n-     *\n-     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n-     */\n-    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleDataResult for the vehicle data item.\n-     *\n-     * @return a VehicleDataResult related to the vehicle data\n-     */\n-    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName) {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return VehicleDataResult See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public VehicleDataResult getStabilityControlsStatus() {\n-        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribe Vehicle Data Response is sent, when SubscribeVehicleData has been called\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class SubscribeVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleDataResponse object\n+\t */\n+    public SubscribeVehicleDataResponse() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleDataResponse object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash The Hashtable to use\n+\t */\n+    public SubscribeVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\t/**\n+\t * Constructs a new SubscribeVehicleDataResponse object\n+\t * @param success whether the request is successfully processed\n+\t * @param resultCode whether the request is successfully processed\n+\t */\n+\tpublic SubscribeVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+\t\tthis();\n+\t\tsetSuccess(success);\n+\t\tsetResultCode(resultCode);\n+\t}\n+    /**\n+     * Sets Gps\n+     * @param gps a VehicleDataResult related to GPS\n+     */\n+    public void setGps(VehicleDataResult gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    /**\n+     * Gets Gps\n+     * @return a VehicleDataResult related to GPS\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getGps() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_GPS);\n+    }\n+    /**\n+     * Sets Speed\n+     * @param speed a VehicleDataResult related to speed\n+     */\n+    public void setSpeed(VehicleDataResult speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    /**\n+     * Gets Speed\n+     * @return a VehicleDataResult related to speed\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSpeed() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_SPEED);\n+    }\n+    /**\n+     * Sets rpm\n+     * @param rpm a VehicleDataResult related to RPM\n+     */\n+    public void setRpm(VehicleDataResult rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    /**\n+     * Gets rpm\n+     * @return a VehicleDataResult related to RPM\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getRpm() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_RPM);\n+    }\n+    /**\n+     * Sets Fuel Level\n+     * @param fuelLevel a VehicleDataResult related to Fuel Level\n+     */\n+    public void setFuelLevel(VehicleDataResult fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    /**\n+     * Gets Fuel Level\n+     * @return a VehicleDataResult related to FuelLevel\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevel() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL);\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevel_State a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(VehicleDataResult fuelLevel_State) {\n+        setFuelLevel(fuelLevel_State);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @Deprecated\n+    public VehicleDataResult getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    /**\n+     * Sets Fuel Level State\n+     * @param fuelLevelState a VehicleDataResult related to FuelLevel State\n+     */\n+    public void setFuelLevelState(VehicleDataResult fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    /**\n+     * Gets Fuel Level State\n+     * @return a VehicleDataResult related to FuelLevel State\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelLevelState() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    /**\n+     * Sets Instant Fuel Consumption\n+     * @param instantFuelConsumption a VehicleDataResult related to instant fuel consumption\n+     */\n+    public void setInstantFuelConsumption(VehicleDataResult instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    /**\n+     * Gets Instant Fuel Consumption\n+     * @return a VehicleDataResult related to instant fuel consumption\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getInstantFuelConsumption() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    /**\n+     * Sets External Temperature\n+     * @param externalTemperature a VehicleDataResult related to external temperature\n+     */\n+    public void setExternalTemperature(VehicleDataResult externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    /**\n+     * Gets External Temperature\n+     * @return a VehicleDataResult related to external temperature\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getExternalTemperature() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @param prndl a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    public void setPrndl(VehicleDataResult prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    /**\n+     * Gets currently selected gear data\n+     * @return a VehicleDataResult related to the PRNDL status (automatic transmission gear)\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getPrndl() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_PRNDL);\n+    }\n+    /**\n+     * Sets Tire Pressure\n+     * @param tirePressure a VehicleDataResult related to tire pressure\n+     */\n+    public void setTirePressure(VehicleDataResult tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    /**\n+     * Gets Tire Pressure\n+     * @return a VehicleDataResult related to tire pressure\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTirePressure() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TIRE_PRESSURE);\n+    }\n+    /**\n+     * Sets Odometer\n+     * @param odometer a VehicleDataResult related to the odometer\n+     */\n+    public void setOdometer(VehicleDataResult odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    /**\n+     * Gets Odometer\n+     * @return a VehicleDataResult related to the odometer\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getOdometer() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ODOMETER);\n+    }\n+    /**\n+     * Sets Belt Status\n+     * @param beltStatus a VehicleDataResult related to the seat belt status\n+     */\n+    public void setBeltStatus(VehicleDataResult beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    /**\n+     * Gets Belt Status\n+     * @return a VehicleDataResult related to the seat belt status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBeltStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BELT_STATUS);\n+    }\n+    /**\n+     * Sets Body Information\n+     * @param bodyInformation a VehicleDataResult related to the body info\n+     */\n+    public void setBodyInformation(VehicleDataResult bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    /**\n+     * Gets Body Information\n+     * @return a VehicleDataResult related to the body info\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getBodyInformation() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_BODY_INFORMATION);\n+    }\n+    /**\n+     * Sets Device Status\n+     * @param deviceStatus a VehicleDataResult related to the device status of the connected device\n+     */\n+    public void setDeviceStatus(VehicleDataResult deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    /**\n+     * Gets Device Status\n+     * @return a VehicleDataResult related to the device status of the connected device\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDeviceStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DEVICE_STATUS);\n+    }\n+    /**\n+     * Sets Driver Braking\n+     * @param driverBraking a VehicleDataResult related to the driver breaking status\n+     */\n+    public void setDriverBraking(VehicleDataResult driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    /**\n+     * Gets Driver Braking\n+     * @return a VehicleDataResult related to the driver breaking status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getDriverBraking() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_DRIVER_BRAKING);\n+    }\n+    /**\n+     * Sets Wiper Status\n+     * @param wiperStatus a VehicleDataResult related to the wiper status\n+     */\n+    public void setWiperStatus(VehicleDataResult wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    /**\n+     * Gets Wiper Status\n+     * @return a VehicleDataResult related to the wiper status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getWiperStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_WIPER_STATUS);\n+    }\n+    /**\n+     * Sets Head Lamp Status\n+     * @param headLampStatus a VehicleDataResult related to the headlamp status\n+     */\n+    public void setHeadLampStatus(VehicleDataResult headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    /**\n+     * Gets Head Lamp Status\n+     * @return a VehicleDataResult related to the headlamp status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getHeadLampStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    /**\n+     * Sets Engine Torque\n+     * @param engineTorque a VehicleDataResult related to the engine's torque\n+     */\n+    public void setEngineTorque(VehicleDataResult engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    /**\n+     * Gets Engine Torque\n+     * @return a VehicleDataResult related to the engine's torque\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineTorque() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_TORQUE);\n+    }\n+    /**\n+     * Sets Engine Oil Life\n+     * @param engineOilLife a VehicleDataResult related to the engine's oil life\n+     */\n+    public void setEngineOilLife(VehicleDataResult engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    /**\n+     * Gets Engine Oil Life\n+     * @return a VehicleDataResult related to the engine's oil life\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEngineOilLife() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ENGINE_OIL_LIFE);\n+    }\n+    /**\n+     * Sets AccPedal Position\n+     * @param accPedalPosition a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    public void setAccPedalPosition(VehicleDataResult accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    /**\n+     * Gets AccPedal Position\n+     * @return a VehicleDataResult related to the accelerator pedal's position\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAccPedalPosition() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(VehicleDataResult steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getSteeringWheelAngle() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(VehicleDataResult eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getECallInfo() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(VehicleDataResult airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getAirbagStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(VehicleDataResult emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getEmergencyEvent() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(VehicleDataResult clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getClusterModeStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(VehicleDataResult myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getMyKey() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range\n+     * @param fuelRange a VehicleDataResult related to the fuel range\n+     */\n+    public void setFuelRange(VehicleDataResult fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range\n+     * @return a VehicleDataResult related to the fuel range\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getFuelRange() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal a VehicleDataResult related to the turn signal status\n+     */\n+    public void setTurnSignal(VehicleDataResult turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return a VehicleDataResult related to the turn signal status\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public VehicleDataResult getTurnSignal() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus a VehicleDataResult related to the electronic park brake status\n+     */\n+    public void setElectronicParkBrakeStatus(VehicleDataResult electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return a VehicleDataResult related to the electronic park brake status\n+     */\n+    public VehicleDataResult getElectronicParkBrakeStatus(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets cloudAppVehicleID\n+     * @param cloudAppVehicleID a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public void setCloudAppVehicleID(VehicleDataResult cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the subscription response of the CloudAppVehicleID vehicle data item.\n+     * @return a VehicleDataResult related to the cloud app vehicle ID\n+     */\n+    public VehicleDataResult getCloudAppVehicleID(){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, VehicleDataResult vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleDataResult for the vehicle data item.\n+     * @return a VehicleDataResult related to the vehicle data\n+     */\n+    public VehicleDataResult getOEMCustomVehicleData(String vehicleDataName){\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(VehicleDataResult handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return VehicleDataResult To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getHandsOffSteering() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return VehicleDataResult See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public VehicleDataResult getStabilityControlsStatus() {\n+        return (VehicleDataResult) getObject(VehicleDataResult.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(VehicleDataResult stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3Nzg1MQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458977851", "body": "At top of the file, you need to add what is below to the Parameter List\r\n```\r\n *  <tr>\r\n *      <td>stabilityControlsStatus</td>\r\n *      <td>Boolean</td>\r\n *      <td>See StabilityControlsStatus</td>\r\n *      <td>N</td>\r\n *      <td>SmartDeviceLink 7.0.0</td>\r\n *  </tr>\r\n```", "bodyText": "At top of the file, you need to add what is below to the Parameter List\n *  <tr>\n *      <td>stabilityControlsStatus</td>\n *      <td>Boolean</td>\n *      <td>See StabilityControlsStatus</td>\n *      <td>N</td>\n *      <td>SmartDeviceLink 7.0.0</td>\n *  </tr>", "bodyHTML": "<p dir=\"auto\">At top of the file, you need to add what is below to the Parameter List</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\"><pre><code> *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-22T17:54:58Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -322,6 +322,7 @@\n \tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n \tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n \tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n+\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 01c8784ec..8ee514cbc 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,901 +1,882 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- * \n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * \n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>SmartDeviceLink Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *   </table>\n- *  \n- * <p> <b>Response</b></p>\n- *<p><b>Non-default Result Codes:</b></p>\n- *<p>SUCCESS</p>\n- *<p>WARNINGS </p>     \n- *<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED </p>\n- *\t<p>DISALLOWED</p>\n- *\t<p>USER_DISALLOWED </p>\n- * \n- * @since SmartDeviceLink 2.0\n- * @see UnsubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleData object\n-\t */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes rpm data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been subscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-  \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Fuel Range data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-\t *         has been subscribed.\n-\t *\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus(){\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a Boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ *\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ *\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleData object\n+     */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * subscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * subscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * subscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes rpm data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been subscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been subscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been subscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been subscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been subscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been subscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been subscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been subscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been subscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Fuel Range data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 8ee514cbc..69f8fbc32 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,882 +1,940 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- *\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- *\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0.0\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleData object\n-     */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Gps data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Gps data has been\n-     * subscribed.\n-     */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Gps data\n-     *\n-     * @param gps a boolean value\n-     */\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Speed data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Speed data has been\n-     * subscribed.\n-     */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes speed data\n-     *\n-     * @param speed a boolean value\n-     */\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the rpm data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the rpm data has been\n-     * subscribed.\n-     */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes rpm data\n-     *\n-     * @param rpm a boolean value\n-     */\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the FuelLevel data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-     * been subscribed.\n-     */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes FuelLevel data\n-     *\n-     * @param fuelLevel a boolean value\n-     */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     * has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     *\n-     * @param fuelLevel_State a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     *\n-     * @param fuelLevelState a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-     * has been subscribed.\n-     */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-     *\n-     * @param instantFuelConsumption a boolean value\n-     */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the externalTemperature data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-     * has been subscribed.\n-     */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes externalTemperature data\n-     *\n-     * @param externalTemperature a boolean value\n-     */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Currently selected gear data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-     * has been subscribed.\n-     */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Currently selected gear data\n-     *\n-     * @param prndl a boolean value\n-     */\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the tire pressure status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-     * has been subscribed.\n-     */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes tire pressure status data\n-     *\n-     * @param tirePressure a boolean value\n-     */\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the odometer data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the odometer data\n-     * has been subscribed.\n-     */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes odometer data\n-     *\n-     * @param odometer a boolean value\n-     */\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the belt Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the belt Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes belt Status data\n-     *\n-     * @param beltStatus a boolean value\n-     */\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the body Information data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the body Information data\n-     * has been subscribed.\n-     */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes body Information data\n-     *\n-     * @param bodyInformation a boolean value\n-     */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the device Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the device Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes device Status data\n-     *\n-     * @param deviceStatus a boolean value\n-     */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the driver Braking data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the driver Braking data\n-     * has been subscribed.\n-     */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes driver Braking data\n-     *\n-     * @param driverBraking a boolean value\n-     */\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the wiper Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the wiper Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes wiper Status data\n-     *\n-     * @param wiperStatus a boolean value\n-     */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Head Lamp Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Head Lamp Status data\n-     *\n-     * @param headLampStatus a boolean value\n-     */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Oil Life data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Oil Life data\n-     *\n-     * @param engineOilLife a boolean value\n-     */\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Torque data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Torque data\n-     *\n-     * @param engineTorque a boolean value\n-     */\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the accPedalPosition data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-     * has been subscribed.\n-     */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes accPedalPosition data\n-     *\n-     * @param accPedalPosition a boolean value\n-     */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Fuel Range data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelRange data\n-     *\n-     * @param fuelRange a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     *\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     *\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-     *\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ * \n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * \n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>SmartDeviceLink Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t    <tr>\n+ *        \t<td>stabilityControlsStatus</td>\n+ * \t\t    <td>Boolean</td>\n+ * \t\t    <td>See StabilityControlsStatus</td>\n+ * \t\t    <td>N</td>\n+ * \t\t    <td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ *   </table>\n+ *  \n+ * <p> <b>Response</b></p>\n+ *<p><b>Non-default Result Codes:</b></p>\n+ *<p>SUCCESS</p>\n+ *<p>WARNINGS </p>     \n+ *<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED </p>\n+ *\t<p>DISALLOWED</p>\n+ *\t<p>USER_DISALLOWED </p>\n+ * \n+ * @since SmartDeviceLink 2.0\n+ * @see UnsubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleData object\n+\t */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes rpm data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been subscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes accPedalPosition data\n+\t *\n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+  \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Fuel Range data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+\t *         has been subscribed.\n+\t *\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus(){\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value\n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3ODg0NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458978845", "body": "```suggestion\r\n    /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/**\n          \n          \n            \n            \t * Sets a boolean value for StabilityControlsStatus.\n          \n          \n            \n            \t * @param stabilityControlsStatus a Boolean value\n          \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-smi\">Boolean</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:56:40Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -864,21 +865,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n \tpublic Boolean getCloudAppVehicleID(){\r\n \t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n \t}\r\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-}\n+\r\n+\t/**\r\n+\t * Sets a boolean value for OEM Custom VehicleData.\r\n+\t * @param vehicleDataName a String value\r\n+\t * @param vehicleDataState a boolean value\r\n+\t */\r\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for OEM Custom VehicleData.\r\n+\t * @return a Boolean value.\r\n+\t */\r\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+\t\treturn getBoolean(vehicleDataName);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sets a boolean value for StabilityControlsStatus.\r\n+\t * @param stabilityControlsStatus a Boolean value\r\n+\t */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 01c8784ec..8ee514cbc 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,901 +1,882 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- * \n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * \n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>SmartDeviceLink Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *   </table>\n- *  \n- * <p> <b>Response</b></p>\n- *<p><b>Non-default Result Codes:</b></p>\n- *<p>SUCCESS</p>\n- *<p>WARNINGS </p>     \n- *<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED </p>\n- *\t<p>DISALLOWED</p>\n- *\t<p>USER_DISALLOWED </p>\n- * \n- * @since SmartDeviceLink 2.0\n- * @see UnsubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleData object\n-\t */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes rpm data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been subscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-  \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Fuel Range data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-\t *         has been subscribed.\n-\t *\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus(){\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a Boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ *\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ *\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleData object\n+     */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * subscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * subscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * subscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes rpm data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been subscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been subscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been subscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been subscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been subscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been subscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been subscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been subscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been subscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Fuel Range data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 8ee514cbc..69f8fbc32 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,882 +1,940 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- *\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- *\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0.0\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleData object\n-     */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Gps data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Gps data has been\n-     * subscribed.\n-     */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Gps data\n-     *\n-     * @param gps a boolean value\n-     */\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Speed data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Speed data has been\n-     * subscribed.\n-     */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes speed data\n-     *\n-     * @param speed a boolean value\n-     */\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the rpm data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the rpm data has been\n-     * subscribed.\n-     */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes rpm data\n-     *\n-     * @param rpm a boolean value\n-     */\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the FuelLevel data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-     * been subscribed.\n-     */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes FuelLevel data\n-     *\n-     * @param fuelLevel a boolean value\n-     */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     * has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     *\n-     * @param fuelLevel_State a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     *\n-     * @param fuelLevelState a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-     * has been subscribed.\n-     */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-     *\n-     * @param instantFuelConsumption a boolean value\n-     */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the externalTemperature data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-     * has been subscribed.\n-     */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes externalTemperature data\n-     *\n-     * @param externalTemperature a boolean value\n-     */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Currently selected gear data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-     * has been subscribed.\n-     */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Currently selected gear data\n-     *\n-     * @param prndl a boolean value\n-     */\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the tire pressure status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-     * has been subscribed.\n-     */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes tire pressure status data\n-     *\n-     * @param tirePressure a boolean value\n-     */\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the odometer data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the odometer data\n-     * has been subscribed.\n-     */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes odometer data\n-     *\n-     * @param odometer a boolean value\n-     */\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the belt Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the belt Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes belt Status data\n-     *\n-     * @param beltStatus a boolean value\n-     */\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the body Information data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the body Information data\n-     * has been subscribed.\n-     */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes body Information data\n-     *\n-     * @param bodyInformation a boolean value\n-     */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the device Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the device Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes device Status data\n-     *\n-     * @param deviceStatus a boolean value\n-     */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the driver Braking data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the driver Braking data\n-     * has been subscribed.\n-     */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes driver Braking data\n-     *\n-     * @param driverBraking a boolean value\n-     */\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the wiper Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the wiper Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes wiper Status data\n-     *\n-     * @param wiperStatus a boolean value\n-     */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Head Lamp Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Head Lamp Status data\n-     *\n-     * @param headLampStatus a boolean value\n-     */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Oil Life data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Oil Life data\n-     *\n-     * @param engineOilLife a boolean value\n-     */\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Torque data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Torque data\n-     *\n-     * @param engineTorque a boolean value\n-     */\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the accPedalPosition data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-     * has been subscribed.\n-     */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes accPedalPosition data\n-     *\n-     * @param accPedalPosition a boolean value\n-     */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Fuel Range data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelRange data\n-     *\n-     * @param fuelRange a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     *\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     *\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-     *\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ * \n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * \n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>SmartDeviceLink Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t    <tr>\n+ *        \t<td>stabilityControlsStatus</td>\n+ * \t\t    <td>Boolean</td>\n+ * \t\t    <td>See StabilityControlsStatus</td>\n+ * \t\t    <td>N</td>\n+ * \t\t    <td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ *   </table>\n+ *  \n+ * <p> <b>Response</b></p>\n+ *<p><b>Non-default Result Codes:</b></p>\n+ *<p>SUCCESS</p>\n+ *<p>WARNINGS </p>     \n+ *<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED </p>\n+ *\t<p>DISALLOWED</p>\n+ *\t<p>USER_DISALLOWED </p>\n+ * \n+ * @since SmartDeviceLink 2.0\n+ * @see UnsubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleData object\n+\t */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes rpm data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been subscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes accPedalPosition data\n+\t *\n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+  \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Fuel Range data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+\t *         has been subscribed.\n+\t *\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus(){\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value\n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk3OTEwOA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458979108", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return Boolean See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/**\n          \n          \n            \n            \t * Gets a boolean value for StabilityControlsStatus.\n          \n          \n            \n            \t * @return a Boolean value.\n          \n          \n            \n            \t */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">Boolean</span> value.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">Boolean</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T17:57:05Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java", "diffHunk": "@@ -864,21 +865,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n \tpublic Boolean getCloudAppVehicleID(){\r\n \t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n \t}\r\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-}\n+\r\n+\t/**\r\n+\t * Sets a boolean value for OEM Custom VehicleData.\r\n+\t * @param vehicleDataName a String value\r\n+\t * @param vehicleDataState a boolean value\r\n+\t */\r\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for OEM Custom VehicleData.\r\n+\t * @return a Boolean value.\r\n+\t */\r\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+\t\treturn getBoolean(vehicleDataName);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Sets a boolean value for StabilityControlsStatus.\r\n+\t * @param stabilityControlsStatus a Boolean value\r\n+\t */\r\n+\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\r\n+\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Gets a boolean value for StabilityControlsStatus.\r\n+\t * @return a Boolean value.\r\n+\t */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 01c8784ec..8ee514cbc 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,901 +1,882 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- * \n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- * \n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>SmartDeviceLink Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0 </td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *   </table>\n- *  \n- * <p> <b>Response</b></p>\n- *<p><b>Non-default Result Codes:</b></p>\n- *<p>SUCCESS</p>\n- *<p>WARNINGS </p>     \n- *<p>INVALID_DATA</p>\n- *\t<p>OUT_OF_MEMORY</p>\n- *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n- *\t<p>APPLICATION_NOT_REGISTERED</p>\n- *\t<p>GENERIC_ERROR</p>\n- *\t<p>IGNORED </p>\n- *\t<p>DISALLOWED</p>\n- *\t<p>USER_DISALLOWED </p>\n- * \n- * @since SmartDeviceLink 2.0\n- * @see UnsubscribeVehicleData\n- * @see GetVehicleData\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-\tpublic static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/**\n-\t * Constructs a new SubscribeVehicleData object\n-\t */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-\t/**\n-\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-\t * parameter</p>\n-\t * \n-\t * \n-\t * @param hash\n-\t *            The Hashtable to use\n-\t */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Gps data\n-\t * \n-\t * @param gps\n-\t *            a boolean value\n-\t */\n-    public void setGps(Boolean gps) {\n-\t\tsetParameters(KEY_GPS, gps);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes speed data\n-\t * \n-\t * @param speed\n-\t *            a boolean value\n-\t */\n-    public void setSpeed(Boolean speed) {\n-\t\tsetParameters(KEY_SPEED, speed);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes rpm data\n-\t * \n-\t * @param rpm\n-\t *            a boolean value\n-\t */\n-    public void setRpm(Boolean rpm) {\n-\t\tsetParameters(KEY_RPM, rpm);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n-\t *         subscribed.\n-\t */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes FuelLevel data\n-\t * \n-\t * @param fuelLevel\n-\t *            a boolean value\n-\t */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the FuelLevel data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-\t *         been subscribed.\n-\t */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     * \n-     * @param fuelLevel_State\n-     *            a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     *         has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     * \n-     * @param fuelLevelState\n-     *            a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     * \n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     *         has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-\t * \n-\t * @param instantFuelConsumption\n-\t *            a boolean value\n-\t */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes externalTemperature data\n-\t * \n-\t * @param externalTemperature\n-\t *            a boolean value\n-\t */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the externalTemperature data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Currently selected gear data\n-\t * \n-\t * @param prndl\n-\t *            a boolean value\n-\t */\n-    public void setPrndl(Boolean prndl) {\n-\t\tsetParameters(KEY_PRNDL, prndl);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Currently selected gear data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes tire pressure status data\n-\t * \n-\t * @param tirePressure\n-\t *            a boolean value\n-\t */\n-    public void setTirePressure(Boolean tirePressure) {\n-\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the tire pressure status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes odometer data\n-\t * \n-\t * @param odometer\n-\t *            a boolean value\n-\t */\n-    public void setOdometer(Boolean odometer) {\n-\t\tsetParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the odometer data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the odometer data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes belt Status data\n-\t * \n-\t * @param beltStatus\n-\t *            a boolean value\n-\t */\n-    public void setBeltStatus(Boolean beltStatus) {\n-\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the belt Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the belt Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes body Information data\n-\t * \n-\t * @param bodyInformation\n-\t *            a boolean value\n-\t */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the body Information data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the body Information data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes device Status data\n-\t * \n-\t * @param deviceStatus\n-\t *            a boolean value\n-\t */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the device Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the device Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes driver Braking data\n-\t * \n-\t * @param driverBraking\n-\t *            a boolean value\n-\t */\n-    public void setDriverBraking(Boolean driverBraking) {\n-\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the driver Braking data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes wiper Status data\n-\t * \n-\t * @param wiperStatus\n-\t *            a boolean value\n-\t */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the wiper Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n-\t * \n-\t * @param headLampStatus\n-\t *            a boolean value\n-\t */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Torque data\n-\t *\n-\t * @param engineTorque\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineTorque(Boolean engineTorque) {\n-\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineOilLife() {\n-\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n-\t *\n-\t * @param engineOilLife\n-\t *            a boolean value\n-\t */\n-\tpublic void setEngineOilLife(Boolean engineOilLife) {\n-\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Engine Torque data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-\t *         has been subscribed.\n-\t */\n-\tpublic Boolean getEngineTorque() {\n-\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes accPedalPosition data\n-\t *\n-\t * @param accPedalPosition\n-\t *            a boolean value\n-\t */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the accPedalPosition data has been\n-\t * subscribed.\n-\t * \n-\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-\t *         has been subscribed.\n-\t */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-  \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }    \n-    public void setECallInfo(Boolean eCallInfo) {\n-\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-\t\tsetParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes fuelRange data\n-\t *\n-\t * @param fuelRange\n-\t *            a boolean value\n-\t */\n-\tpublic void setFuelRange(Boolean fuelRange) {\n-\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the Fuel Range data has been\n-\t * subscribed.\n-\t *\n-\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-\t *         has been subscribed.\n-\t *\n-\t */\n-\tpublic Boolean getFuelRange() {\n-\t\treturn getBoolean(KEY_FUEL_RANGE);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes turnSignal data\n-\t * @param turnSignal a boolean value\n-\t */\n-\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-\t * @param electronicParkBrakeStatus a boolean value\n-\t */\n-\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n-\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getElectronicParkBrakeStatus(){\n-\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-\t * @param cloudAppVehicleID a boolean value\n-\t */\n-\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getCloudAppVehicleID(){\n-\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for OEM Custom VehicleData.\n-\t * @param vehicleDataName a String value\n-\t * @param vehicleDataState a boolean value\n-\t */\n-\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-\t\tsetParameters(vehicleDataName, vehicleDataState);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for OEM Custom VehicleData.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n-\t\treturn getBoolean(vehicleDataName);\n-\t}\n-\n-\t/**\n-\t * Sets a boolean value for StabilityControlsStatus.\n-\t * @param stabilityControlsStatus a Boolean value\n-\t */\n-\tpublic void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-\t\tsetParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-\t}\n-\n-\t/**\n-\t * Gets a boolean value for StabilityControlsStatus.\n-\t * @return a Boolean value.\n-\t */\n-\tpublic Boolean getStabilityControlsStatus(){\n-\t\treturn getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-\t}\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ *\n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ *\n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 2.0.0\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new SubscribeVehicleData object\n+     */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+    /**\n+     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+     * parameter</p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Gps data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Gps data has been\n+     * subscribed.\n+     */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Gps data\n+     *\n+     * @param gps a boolean value\n+     */\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Speed data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Speed data has been\n+     * subscribed.\n+     */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes speed data\n+     *\n+     * @param speed a boolean value\n+     */\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the rpm data has been subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the rpm data has been\n+     * subscribed.\n+     */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes rpm data\n+     *\n+     * @param rpm a boolean value\n+     */\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the FuelLevel data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+     * been subscribed.\n+     */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes FuelLevel data\n+     *\n+     * @param fuelLevel a boolean value\n+     */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     * has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     *\n+     * @param fuelLevel_State a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     *\n+     * @param fuelLevelState a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+     * has been subscribed.\n+     */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+     *\n+     * @param instantFuelConsumption a boolean value\n+     */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the externalTemperature data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+     * has been subscribed.\n+     */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes externalTemperature data\n+     *\n+     * @param externalTemperature a boolean value\n+     */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Currently selected gear data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+     * has been subscribed.\n+     */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Currently selected gear data\n+     *\n+     * @param prndl a boolean value\n+     */\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the tire pressure status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+     * has been subscribed.\n+     */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes tire pressure status data\n+     *\n+     * @param tirePressure a boolean value\n+     */\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the odometer data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the odometer data\n+     * has been subscribed.\n+     */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes odometer data\n+     *\n+     * @param odometer a boolean value\n+     */\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the belt Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the belt Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes belt Status data\n+     *\n+     * @param beltStatus a boolean value\n+     */\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the body Information data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the body Information data\n+     * has been subscribed.\n+     */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes body Information data\n+     *\n+     * @param bodyInformation a boolean value\n+     */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the device Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the device Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes device Status data\n+     *\n+     * @param deviceStatus a boolean value\n+     */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the driver Braking data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the driver Braking data\n+     * has been subscribed.\n+     */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes driver Braking data\n+     *\n+     * @param driverBraking a boolean value\n+     */\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the wiper Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the wiper Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes wiper Status data\n+     *\n+     * @param wiperStatus a boolean value\n+     */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Head Lamp Status data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+     * has been subscribed.\n+     */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Head Lamp Status data\n+     *\n+     * @param headLampStatus a boolean value\n+     */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Oil Life data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Oil Life data\n+     *\n+     * @param engineOilLife a boolean value\n+     */\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Engine Torque data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+     * has been subscribed.\n+     */\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes Engine Torque data\n+     *\n+     * @param engineTorque a boolean value\n+     */\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the accPedalPosition data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+     * has been subscribed.\n+     */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes accPedalPosition data\n+     *\n+     * @param accPedalPosition a boolean value\n+     */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the Fuel Range data has been\n+     * subscribed.\n+     *\n+     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+     * has been subscribed.\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelRange data\n+     *\n+     * @param fuelRange a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     *\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     *\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+     *\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     *\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\nindex 8ee514cbc..69f8fbc32 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n", "chunk": "@@ -1,882 +1,940 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Subscribes for specific published vehicle data items. The data will be only\n- * sent, if it has changed. The application will be notified by the\n- * onVehicleData notification whenever new data is available. The update rate is\n- * very much dependent on sensors, vehicle architecture and vehicle type. Be\n- * also prepared for the situation that a signal is not available on a vehicle\n- *\n- * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n- *\n- * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including power modes</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- * @since SmartDeviceLink 2.0.0\n- */\n-public class SubscribeVehicleData extends RPCRequest {\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new SubscribeVehicleData object\n-     */\n-    public SubscribeVehicleData() {\n-        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n-    }\n-\n-    /**\n-     * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n-     * parameter</p>\n-     *\n-     * @param hash The Hashtable to use\n-     */\n-    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Gps data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Gps data has been\n-     * subscribed.\n-     */\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Gps data\n-     *\n-     * @param gps a boolean value\n-     */\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Speed data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Speed data has been\n-     * subscribed.\n-     */\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes speed data\n-     *\n-     * @param speed a boolean value\n-     */\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the rpm data has been subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the rpm data has been\n-     * subscribed.\n-     */\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes rpm data\n-     *\n-     * @param rpm a boolean value\n-     */\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the FuelLevel data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n-     * been subscribed.\n-     */\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes FuelLevel data\n-     *\n-     * @param fuelLevel a boolean value\n-     */\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevel_State data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n-     * has been subscribed.\n-     */\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevel_State data\n-     *\n-     * @param fuelLevel_State a boolean value\n-     */\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the fuelLevelState data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelLevelState data\n-     *\n-     * @param fuelLevelState a boolean value\n-     */\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n-     * has been subscribed.\n-     */\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes instantFuelConsumption data\n-     *\n-     * @param instantFuelConsumption a boolean value\n-     */\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the externalTemperature data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the externalTemperature data\n-     * has been subscribed.\n-     */\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes externalTemperature data\n-     *\n-     * @param externalTemperature a boolean value\n-     */\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Currently selected gear data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n-     * has been subscribed.\n-     */\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Currently selected gear data\n-     *\n-     * @param prndl a boolean value\n-     */\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the tire pressure status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the tire pressure status data\n-     * has been subscribed.\n-     */\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes tire pressure status data\n-     *\n-     * @param tirePressure a boolean value\n-     */\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the odometer data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the odometer data\n-     * has been subscribed.\n-     */\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes odometer data\n-     *\n-     * @param odometer a boolean value\n-     */\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the belt Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the belt Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes belt Status data\n-     *\n-     * @param beltStatus a boolean value\n-     */\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the body Information data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the body Information data\n-     * has been subscribed.\n-     */\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes body Information data\n-     *\n-     * @param bodyInformation a boolean value\n-     */\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the device Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the device Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes device Status data\n-     *\n-     * @param deviceStatus a boolean value\n-     */\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the driver Braking data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the driver Braking data\n-     * has been subscribed.\n-     */\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes driver Braking data\n-     *\n-     * @param driverBraking a boolean value\n-     */\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the wiper Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the wiper Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes wiper Status data\n-     *\n-     * @param wiperStatus a boolean value\n-     */\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Head Lamp Status data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n-     * has been subscribed.\n-     */\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Head Lamp Status data\n-     *\n-     * @param headLampStatus a boolean value\n-     */\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Oil Life data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Oil Life data\n-     *\n-     * @param engineOilLife a boolean value\n-     */\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Engine Torque data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Engine Torque data\n-     * has been subscribed.\n-     */\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes Engine Torque data\n-     *\n-     * @param engineTorque a boolean value\n-     */\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the accPedalPosition data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n-     * has been subscribed.\n-     */\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes accPedalPosition data\n-     *\n-     * @param accPedalPosition a boolean value\n-     */\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the Fuel Range data has been\n-     * subscribed.\n-     *\n-     * @return Boolean -a Boolean value. If true, means the Fuel Range data\n-     * has been subscribed.\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes fuelRange data\n-     *\n-     * @param fuelRange a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     *\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     *\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n-     *\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     *\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Subscribes for specific published vehicle data items. The data will be only\n+ * sent, if it has changed. The application will be notified by the\n+ * onVehicleData notification whenever new data is available. The update rate is\n+ * very much dependent on sensors, vehicle architecture and vehicle type. Be\n+ * also prepared for the situation that a signal is not available on a vehicle\n+ * \n+ * <p>Function Group: Location, VehicleInfo and DrivingChara</p>\n+ * \n+ * <p><b>HMILevel needs to be FULL, LIMITED or BACKGROUND</b></p>\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>SmartDeviceLink Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain  GPSData}for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0 </td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t    <tr>\n+ *        \t<td>stabilityControlsStatus</td>\n+ * \t\t    <td>Boolean</td>\n+ * \t\t    <td>See StabilityControlsStatus</td>\n+ * \t\t    <td>N</td>\n+ * \t\t    <td>SmartDeviceLink 7.0.0</td>\n+ * \t\t</tr>\n+ *   </table>\n+ *  \n+ * <p> <b>Response</b></p>\n+ *<p><b>Non-default Result Codes:</b></p>\n+ *<p>SUCCESS</p>\n+ *<p>WARNINGS </p>     \n+ *<p>INVALID_DATA</p>\n+ *\t<p>OUT_OF_MEMORY</p>\n+ *\t<p>TOO_MANY_PENDING_REQUESTS</p>\n+ *\t<p>APPLICATION_NOT_REGISTERED</p>\n+ *\t<p>GENERIC_ERROR</p>\n+ *\t<p>IGNORED </p>\n+ *\t<p>DISALLOWED</p>\n+ *\t<p>USER_DISALLOWED </p>\n+ * \n+ * @since SmartDeviceLink 2.0\n+ * @see UnsubscribeVehicleData\n+ * @see GetVehicleData\n+ */\n+public class SubscribeVehicleData extends RPCRequest {\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+\tpublic static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+\tpublic static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new SubscribeVehicleData object\n+\t */\n+    public SubscribeVehicleData() {\n+        super(FunctionID.SUBSCRIBE_VEHICLE_DATA.toString());\n+    }\n+\n+\t/**\n+\t * <p>Constructs a new SubscribeVehicleData object indicated by the Hashtable\n+\t * parameter</p>\n+\t * \n+\t * \n+\t * @param hash\n+\t *            The Hashtable to use\n+\t */\n+    public SubscribeVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Gps data\n+\t * \n+\t * @param gps\n+\t *            a boolean value\n+\t */\n+    public void setGps(Boolean gps) {\n+\t\tsetParameters(KEY_GPS, gps);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Gps data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Gps data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes speed data\n+\t * \n+\t * @param speed\n+\t *            a boolean value\n+\t */\n+    public void setSpeed(Boolean speed) {\n+\t\tsetParameters(KEY_SPEED, speed);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Speed data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Speed data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes rpm data\n+\t * \n+\t * @param rpm\n+\t *            a boolean value\n+\t */\n+    public void setRpm(Boolean rpm) {\n+\t\tsetParameters(KEY_RPM, rpm);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the rpm data has been subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the rpm data has been\n+\t *         subscribed.\n+\t */\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes FuelLevel data\n+\t * \n+\t * @param fuelLevel\n+\t *            a boolean value\n+\t */\n+    public void setFuelLevel(Boolean fuelLevel) {\n+\t\tsetParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the FuelLevel data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the FuelLevel data has\n+\t *         been subscribed.\n+\t */\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevel_State data\n+     * \n+     * @param fuelLevel_State\n+     *            a boolean value\n+     */\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevel_State data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevel_State data\n+     *         has been subscribed.\n+     */\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes fuelLevelState data\n+     * \n+     * @param fuelLevelState\n+     *            a boolean value\n+     */\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+\t\tsetParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the fuelLevelState data has been\n+     * subscribed.\n+     * \n+     * @return Boolean -a Boolean value. If true, means the fuelLevelState data\n+     *         has been subscribed.\n+     */\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes instantFuelConsumption data\n+\t * \n+\t * @param instantFuelConsumption\n+\t *            a boolean value\n+\t */\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+\t\tsetParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the getInstantFuelConsumption data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the getInstantFuelConsumption data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes externalTemperature data\n+\t * \n+\t * @param externalTemperature\n+\t *            a boolean value\n+\t */\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+\t\tsetParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the externalTemperature data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the externalTemperature data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Currently selected gear data\n+\t * \n+\t * @param prndl\n+\t *            a boolean value\n+\t */\n+    public void setPrndl(Boolean prndl) {\n+\t\tsetParameters(KEY_PRNDL, prndl);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Currently selected gear data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Currently selected gear data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes tire pressure status data\n+\t * \n+\t * @param tirePressure\n+\t *            a boolean value\n+\t */\n+    public void setTirePressure(Boolean tirePressure) {\n+\t\tsetParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the tire pressure status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the tire pressure status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes odometer data\n+\t * \n+\t * @param odometer\n+\t *            a boolean value\n+\t */\n+    public void setOdometer(Boolean odometer) {\n+\t\tsetParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the odometer data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the odometer data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes belt Status data\n+\t * \n+\t * @param beltStatus\n+\t *            a boolean value\n+\t */\n+    public void setBeltStatus(Boolean beltStatus) {\n+\t\tsetParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the belt Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the belt Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes body Information data\n+\t * \n+\t * @param bodyInformation\n+\t *            a boolean value\n+\t */\n+    public void setBodyInformation(Boolean bodyInformation) {\n+\t\tsetParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the body Information data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the body Information data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes device Status data\n+\t * \n+\t * @param deviceStatus\n+\t *            a boolean value\n+\t */\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+\t\tsetParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the device Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the device Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes driver Braking data\n+\t * \n+\t * @param driverBraking\n+\t *            a boolean value\n+\t */\n+    public void setDriverBraking(Boolean driverBraking) {\n+\t\tsetParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the driver Braking data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the driver Braking data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes wiper Status data\n+\t * \n+\t * @param wiperStatus\n+\t *            a boolean value\n+\t */\n+    public void setWiperStatus(Boolean wiperStatus) {\n+\t\tsetParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the wiper Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the wiper Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Head Lamp Status data\n+\t * \n+\t * @param headLampStatus\n+\t *            a boolean value\n+\t */\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+\t\tsetParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Head Lamp Status data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the Head Lamp Status data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Torque data\n+\t *\n+\t * @param engineTorque\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineTorque(Boolean engineTorque) {\n+\t\tsetParameters(KEY_ENGINE_TORQUE, engineTorque);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Oil Life data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Oil Life data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineOilLife() {\n+\t\treturn getBoolean(KEY_ENGINE_OIL_LIFE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes Engine Oil Life data\n+\t *\n+\t * @param engineOilLife\n+\t *            a boolean value\n+\t */\n+\tpublic void setEngineOilLife(Boolean engineOilLife) {\n+\t\tsetParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Engine Torque data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Engine Torque data\n+\t *         has been subscribed.\n+\t */\n+\tpublic Boolean getEngineTorque() {\n+\t\treturn getBoolean(KEY_ENGINE_TORQUE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes accPedalPosition data\n+\t *\n+\t * @param accPedalPosition\n+\t *            a boolean value\n+\t */\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+\t\tsetParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the accPedalPosition data has been\n+\t * subscribed.\n+\t * \n+\t * @return Boolean -a Boolean value. If true, means the accPedalPosition data\n+\t *         has been subscribed.\n+\t */\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+  \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+\t\tsetParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }    \n+    public void setECallInfo(Boolean eCallInfo) {\n+\t\tsetParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+\t\tsetParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+\t\tsetParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+\t\tsetParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+\t\tsetParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes fuelRange data\n+\t *\n+\t * @param fuelRange\n+\t *            a boolean value\n+\t */\n+\tpublic void setFuelRange(Boolean fuelRange) {\n+\t\tsetParameters(KEY_FUEL_RANGE, fuelRange);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the Fuel Range data has been\n+\t * subscribed.\n+\t *\n+\t * @return Boolean -a Boolean value. If true, means the Fuel Range data\n+\t *         has been subscribed.\n+\t *\n+\t */\n+\tpublic Boolean getFuelRange() {\n+\t\treturn getBoolean(KEY_FUEL_RANGE);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes turnSignal data\n+\t * @param turnSignal a boolean value\n+\t */\n+\tpublic void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+\t * @param electronicParkBrakeStatus a boolean value\n+\t */\n+\tpublic void setElectronicParkBrakeStatus(boolean electronicParkBrakeStatus){\n+\t\tsetParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getElectronicParkBrakeStatus(){\n+\t\treturn getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value. If true, subscribes cloudAppVehicleID data\n+\t * @param cloudAppVehicleID a boolean value\n+\t */\n+\tpublic void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+\t\tsetParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been subscribed.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getCloudAppVehicleID(){\n+\t\treturn getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+\t}\n+\n+\t/**\n+\t * Sets a boolean value for OEM Custom VehicleData.\n+\t * @param vehicleDataName a String value\n+\t * @param vehicleDataState a boolean value\n+\t */\n+\tpublic void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+\t\tsetParameters(vehicleDataName, vehicleDataState);\n+\t}\n+\n+\t/**\n+\t * Gets a boolean value for OEM Custom VehicleData.\n+\t * @return a Boolean value.\n+\t */\n+\tpublic Boolean getOEMCustomVehicleData(String vehicleDataName){\n+\t\treturn getBoolean(vehicleDataName);\n+\t}\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDc2OA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r458980768", "body": "At top of file for parameter list add \r\n```\r\n *  <tr>\r\n *      <td>stabilityControlsStatus</td>\r\n *      <td>StabilityControlsStatus</td>\r\n *      <td>See StabilityControlsStatus</td>\r\n *      <td>N</td>\r\n *      <td>SmartDeviceLink 7.0.0</td>\r\n *  </tr>\r\n```", "bodyText": "At top of file for parameter list add\n *  <tr>\n *      <td>stabilityControlsStatus</td>\n *      <td>StabilityControlsStatus</td>\n *      <td>See StabilityControlsStatus</td>\n *      <td>N</td>\n *      <td>SmartDeviceLink 7.0.0</td>\n *  </tr>", "bodyHTML": "<p dir=\"auto\">At top of file for parameter list add</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\"><pre><code> *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-22T17:59:49Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -324,7 +324,7 @@\n \tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n \tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n     public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n-\r\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 2b56e7ed4..3e286b6c8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,618 +1,674 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Callback for the periodic and non periodic vehicle data read function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>GPSData</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Float</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Integer</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Float</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>ComponentVolumeStatus</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Float</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>List<FuelRange></td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Float</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>TurnSignal</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>String</td>\n+ *      <td>Vehicle identification number.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>PRNDL</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>TireStatus</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Integer</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>BeltStatus</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>BodyInformation</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>DeviceStatus</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>VehicleDataEventStatus</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>WiperStatus</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>HeadLampStatus</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Float</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Float</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Float</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Float</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>ElectronicParkBrakeStatus</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>String</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>StabilityControlsStatus</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>ECallInfo</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>AirbagStatus</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>EmergencyEvent</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>ClusterModeStatus</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>MyKey</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "8316ec6cfdf9b5f228765a8b1b8475950e54de61", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 3e286b6c8..e0a1dc013 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -671,4 +634,24 @@ public class OnVehicleData extends RPCNotification {\n     public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n         setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n     }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex e0a1dc013..d1572e3da 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,657 +1,657 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *  \n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ * \n+ * <p> <b>Note:</b></p>\n+ * \n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ * \n+ *\n+ * \n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+}\n", "next_change": {"commit": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex d1572e3da..a5cbb162c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -654,4 +754,23 @@ public class OnVehicleData extends RPCNotification {\n     public Boolean getHandsOffSteering() {\n         return getBoolean(KEY_HANDS_OFF_STEERING);\n     }\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwNzc5NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459007795", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return StabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets a StabilityControlsStatus value.\n          \n          \n            \n                 * @return a StabilityControlsStatus\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return StabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"712\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"713\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-smi\">StabilityControlsStatus</span> value.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"714\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"715\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"712\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"713\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"714\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"715\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">StabilityControlsStatus</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"716\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"717\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"718\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:46:12Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -582,21 +582,37 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a StabilityControlsStatus value\r\n+     */\r\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\r\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a StabilityControlsStatus value.\r\n+     * @return a StabilityControlsStatus\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 2b56e7ed4..3e286b6c8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,618 +1,674 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Callback for the periodic and non periodic vehicle data read function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>GPSData</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Float</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Integer</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Float</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>ComponentVolumeStatus</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Float</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>List<FuelRange></td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Float</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>TurnSignal</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>String</td>\n+ *      <td>Vehicle identification number.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>PRNDL</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>TireStatus</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Integer</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>BeltStatus</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>BodyInformation</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>DeviceStatus</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>VehicleDataEventStatus</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>WiperStatus</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>HeadLampStatus</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Float</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Float</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Float</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Float</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>ElectronicParkBrakeStatus</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>String</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>StabilityControlsStatus</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>ECallInfo</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>AirbagStatus</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>EmergencyEvent</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>ClusterModeStatus</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>MyKey</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "8316ec6cfdf9b5f228765a8b1b8475950e54de61", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 3e286b6c8..e0a1dc013 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -671,4 +634,24 @@ public class OnVehicleData extends RPCNotification {\n     public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n         setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n     }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex e0a1dc013..d1572e3da 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,657 +1,657 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *  \n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ * \n+ * <p> <b>Note:</b></p>\n+ * \n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ * \n+ *\n+ * \n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+}\n", "next_change": {"commit": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex d1572e3da..a5cbb162c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -654,4 +754,23 @@ public class OnVehicleData extends RPCNotification {\n     public Boolean getHandsOffSteering() {\n         return getBoolean(KEY_HANDS_OFF_STEERING);\n     }\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwODAxMw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459008013", "body": "```suggestion\r\n   /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Sets a value for StabilityControlsStatus.\n          \n          \n            \n                 * @param stabilityControlsStatus a StabilityControlsStatus value\n          \n          \n            \n                 */\n          \n          \n            \n               /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-smi\">StabilityControlsStatus</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"706\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"707\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"708\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:46:35Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java", "diffHunk": "@@ -582,21 +582,37 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a StabilityControlsStatus value\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 2b56e7ed4..3e286b6c8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,618 +1,674 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Callback for the periodic and non periodic vehicle data read function.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>GPSData</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Float</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Integer</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Float</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>ComponentVolumeStatus</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Float</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>List<FuelRange></td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Float</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>TurnSignal</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>String</td>\n+ *      <td>Vehicle identification number.</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>PRNDL</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>TireStatus</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Integer</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>BeltStatus</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>BodyInformation</td>\n+ *      <td>The body information including power modes</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>DeviceStatus</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>VehicleDataEventStatus</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>WiperStatus</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>HeadLampStatus</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Float</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Float</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Float</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Float</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>ElectronicParkBrakeStatus</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>String</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>StabilityControlsStatus</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>ECallInfo</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>AirbagStatus</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>EmergencyEvent</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>ClusterModeStatus</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>MyKey</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 1.0\n+ */\n+public class OnVehicleData extends RPCNotification {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "8316ec6cfdf9b5f228765a8b1b8475950e54de61", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex 3e286b6c8..e0a1dc013 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -671,4 +634,24 @@ public class OnVehicleData extends RPCNotification {\n     public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n         setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n     }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n }\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex e0a1dc013..d1572e3da 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -1,657 +1,657 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCNotification;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- *Individual requested DID result and data.\n- *\n- *  \n- * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n- * \n- * <p> <b>Note:</b></p>\n- * \n- * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n- * \n- *\n- * \n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Param Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th> Req.</th>\n- * \t\t\t<th>Notes</th>\n- * \t\t\t<th>Version Available</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>Speed</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>ComponentVolumeStatus</td>\n- * \t\t\t<td>The fuel level state (Ok/Low)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The external temperature in degrees celsius.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>Vehicle identification number.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>PRNDL</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>TireStatus</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Integer</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>BeltStatus</td>\n- * \t\t\t<td>The status of the seat belts.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>BodyInformation</td>\n- * \t\t\t<td>The body information including power modes.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>DeviceStatus</td>\n- * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>eCallInfo</td>\n- * \t\t\t<td>ECallInfo</td>\n- * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>airbagStatus</td>\n- * \t\t\t<td>AirBagStatus</td>\n- * \t\t\t<td>The status of the air bags.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>emergencyEvent</td>\n- * \t\t\t<td>EmergencyEvernt</td>\n- * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>clusterModeStatus</td>\n- * \t\t\t<td>ClusterModeStatus</td>\n- * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>myKey</td>\n- * \t\t\t<td>MyKey</td>\n- * \t\t\t<td>Information related to the MyKey feature.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- *\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>vehicleDataEventStatus</td>\n- * \t\t\t<td>The status of the brake pedal.</td>\n- *                 <td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>WiperStatus</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- * \t\t\t<td> </td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- * \t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue:0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Float</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>String</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td></td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- *      <tr>\n- *          <td>handsOffSteering</td>\n- *          <td>Boolean</td>\n- *          <td>To indicate whether driver hands are off the steering wheel</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *      </tr>\n- *      <tr>\n- *          <td>stabilityControlsStatus</td>\n- *          <td>StabilityControlsStatus</td>\n- *          <td>See StabilityControlsStatus</td>\n- *          <td>N</td>\n- *          <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  </table>\n- *\n- * @since SmartDeviceLink 1.0\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- *\n- *\n- */\n-public class OnVehicleData extends RPCNotification {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    public OnVehicleData() {\n-        super(FunctionID.ON_VEHICLE_DATA.toString());\n-    }\n-    public OnVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List.\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Sets the handsOffSteering.\n-     *\n-     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setHandsOffSteering(Boolean handsOffSteering) {\n-        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n-    }\n-\n-    /**\n-     * Gets the handsOffSteering.\n-     *\n-     * @return Boolean To indicate whether driver hands are off the steering wheel\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getHandsOffSteering() {\n-        return getBoolean(KEY_HANDS_OFF_STEERING);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCNotification;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ *Individual requested DID result and data.\n+ *\n+ *  \n+ * <p>Callback for the periodic and non periodic vehicle data read function.</p>\n+ * \n+ * <p> <b>Note:</b></p>\n+ * \n+ * Initially SDL sends SubscribeVehicleData for getting the periodic updates from HMI whenever each of subscribed data types changes. OnVehicleData is expected to bring such updated values to SDL\n+ * \n+ *\n+ * \n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Param Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th> Req.</th>\n+ * \t\t\t<th>Notes</th>\n+ * \t\t\t<th>Version Available</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData} for details</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>Speed</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>ComponentVolumeStatus</td>\n+ * \t\t\t<td>The fuel level state (Ok/Low)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The external temperature in degrees celsius.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>Vehicle identification number.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>PRNDL</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>TireStatus</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Integer</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>BeltStatus</td>\n+ * \t\t\t<td>The status of the seat belts.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>BodyInformation</td>\n+ * \t\t\t<td>The body information including power modes.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>DeviceStatus</td>\n+ * \t\t\t<td>The connected mobile device status including signal and battery strength.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>eCallInfo</td>\n+ * \t\t\t<td>ECallInfo</td>\n+ * \t\t\t<td>Emergency Call notification and confirmation data.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>airbagStatus</td>\n+ * \t\t\t<td>AirBagStatus</td>\n+ * \t\t\t<td>The status of the air bags.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>emergencyEvent</td>\n+ * \t\t\t<td>EmergencyEvernt</td>\n+ * \t\t\t<td>Information related to an emergency event (and if it occurred).</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>clusterModeStatus</td>\n+ * \t\t\t<td>ClusterModeStatus</td>\n+ * \t\t\t<td>The status modes of the instrument panel cluster.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>myKey</td>\n+ * \t\t\t<td>MyKey</td>\n+ * \t\t\t<td>Information related to the MyKey feature.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ *\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>vehicleDataEventStatus</td>\n+ * \t\t\t<td>The status of the brake pedal.</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>WiperStatus</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> </td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:-1000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue:0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td>minvalue: 0; maxvalue:100</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Float</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ * \t\t\t<td> minvalue: -2000; maxvalue:2000</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>String</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td></td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>StabilityControlsStatus</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  </table>\n+ *\n+ * @since SmartDeviceLink 1.0\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ *\n+ *\n+ */\n+public class OnVehicleData extends RPCNotification {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    public OnVehicleData() {\n+        super(FunctionID.ON_VEHICLE_DATA.toString());\n+    }\n+    public OnVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List.\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+}\n", "next_change": {"commit": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\nindex d1572e3da..a5cbb162c 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n", "chunk": "@@ -654,4 +754,23 @@ public class OnVehicleData extends RPCNotification {\n     public Boolean getHandsOffSteering() {\n         return getBoolean(KEY_HANDS_OFF_STEERING);\n     }\n+    /**\n+     * Sets the gearStatus.\n+     *\n+     * @param gearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setGearStatus(GearStatus gearStatus) {\n+        setParameters(KEY_GEAR_STATUS, gearStatus);\n+    }\n+\n+    /**\n+     * Gets the gearStatus.\n+     *\n+     * @return GearStatus See GearStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public GearStatus getGearStatus() {\n+        return (GearStatus) getObject(GearStatus.class, KEY_GEAR_STATUS);\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwODkzNw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459008937", "body": "```suggestion\r\n    /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Sets a value for StabilityControlsStatus.\n          \n          \n            \n                 * @param status a StabilityControlsStatus value\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"459\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"460\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"461\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> status a <span class=\"pl-smi\">StabilityControlsStatus</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"462\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"459\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"460\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"461\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"462\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"463\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"464\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"465\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:48:04Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -372,22 +373,38 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param status a StabilityControlsStatus value\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 910a0e6c0..9846fed7b 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,410 +1,468 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/** \n-\t * Constructs a new GetVehicleDataResponse object\n-\t */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     * @param success whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-  \n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-        \n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }    \n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\t\n-\t\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\t\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange the range in KM left as well as fuel type\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param status a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus status){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange the range in KM left as well as fuel type\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 9846fed7b..56af64417 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,468 +1,435 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_VIN = \"vin\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Double getSpeed() {\n-        Object object = getParameters(KEY_SPEED);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Integer getRpm() {\n-        return getInteger(KEY_RPM);\n-    }\n-\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Double getFuelLevel() {\n-        Object object = getParameters(KEY_FUEL_LEVEL);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Double getInstantFuelConsumption() {\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Double getExternalTemperature() {\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public String getVin() {\n-        return getString(KEY_VIN);\n-    }\n-\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Integer getOdometer() {\n-        return getInteger(KEY_ODOMETER);\n-    }\n-\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Double getAccPedalPosition() {\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Double getSteeringWheelAngle() {\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     *\n-     * @return List<FuelRange>\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     *\n-     * @param fuelRange the range in KM left as well as fuel type\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return TurnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     *\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID() {\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     *\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     *\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/** \n+\t * Constructs a new GetVehicleDataResponse object\n+\t */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     * @param success whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+  \n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+        \n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }    \n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\t\n+\t\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\t\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange the range in KM left as well as fuel type\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwOTMxOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459009319", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return StabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets a StabilityControlsStatus value.\n          \n          \n            \n                 * @return a StabilityControlsStatus\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return StabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"470\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"471\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-smi\">StabilityControlsStatus</span> value.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"472\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"473\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"470\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"471\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"472\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"473\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">StabilityControlsStatus</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"474\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"475\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"476\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:48:43Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java", "diffHunk": "@@ -372,22 +373,38 @@ public void setCloudAppVehicleID(String cloudAppVehicleID){\n     public String getCloudAppVehicleID(){\r\n         return getString(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-}\n+\r\n+\r\n+    /**\r\n+     * Sets a value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a VehicleDataResult value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a VehicleData value for the vehicle data item.\r\n+     * @return a Object related to the vehicle data\r\n+     */\r\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getParameters(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a value for StabilityControlsStatus.\r\n+     * @param status a StabilityControlsStatus value\r\n+     */\r\n+    public void setStabilityControlsStatus(StabilityControlsStatus status){\r\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, status);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a StabilityControlsStatus value.\r\n+     * @return a StabilityControlsStatus\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 910a0e6c0..9846fed7b 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,410 +1,468 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- * \n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-\t/** \n-\t * Constructs a new GetVehicleDataResponse object\n-\t */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     * @param success whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Double getSpeed() {\n-    \tObject object = getParameters(KEY_SPEED);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Integer getRpm() {\n-    \treturn getInteger(KEY_RPM);\n-    }\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Double getFuelLevel() {\n-    \tObject object = getParameters(KEY_FUEL_LEVEL);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Double getInstantFuelConsumption() {\n-    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Double getExternalTemperature() {\n-    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public String getVin() {\n-    \treturn getString(KEY_VIN);\n-    }\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Integer getOdometer() {\n-    \treturn getInteger(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-  \n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Double getAccPedalPosition() {\n-    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }\n-        \n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Double getSteeringWheelAngle() {\n-    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-    \treturn SdlDataTypeConverter.objectToDouble(object);\n-    }    \n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\t\n-\t\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\t\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     * @param fuelRange the range in KM left as well as fuel type\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     * @return List<FuelRange>\n-     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     * @param turnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     * @return TurnSignal status of the turn signals\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     *\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID(){\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName){\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a value for StabilityControlsStatus.\n-     * @param status a StabilityControlsStatus value\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus status){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, status);\n-    }\n-\n-    /**\n-     * Gets a StabilityControlsStatus value.\n-     * @return a StabilityControlsStatus\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus(){\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ *\n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+    public static final String KEY_SPEED = \"speed\";\n+    public static final String KEY_RPM = \"rpm\";\n+    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+    public static final String KEY_VIN = \"vin\";\n+    public static final String KEY_PRNDL = \"prndl\";\n+    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+    public static final String KEY_ODOMETER = \"odometer\";\n+    public static final String KEY_GPS = \"gps\";\n+    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+    public static final String KEY_BELT_STATUS = \"beltStatus\";\n+    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+    public static final String KEY_MY_KEY = \"myKey\";\n+    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n+    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     *\n+     * @param success    whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Double getSpeed() {\n+        Object object = getParameters(KEY_SPEED);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Integer getRpm() {\n+        return getInteger(KEY_RPM);\n+    }\n+\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Double getFuelLevel() {\n+        Object object = getParameters(KEY_FUEL_LEVEL);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Double getInstantFuelConsumption() {\n+        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Double getExternalTemperature() {\n+        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public String getVin() {\n+        return getString(KEY_VIN);\n+    }\n+\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Integer getOdometer() {\n+        return getInteger(KEY_ODOMETER);\n+    }\n+\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Double getAccPedalPosition() {\n+        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Double getSteeringWheelAngle() {\n+        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+\n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     *\n+     * @return List<FuelRange>\n+     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     *\n+     * @param fuelRange the range in KM left as well as fuel type\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     *\n+     * @return TurnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     *\n+     * @param turnSignal status of the turn signals\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     *\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     *\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     *\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID() {\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     *\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     *\n+     * @param vehicleDataName  a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     *\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName) {\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\nindex 9846fed7b..56af64417 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n", "chunk": "@@ -1,468 +1,435 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import android.support.annotation.NonNull;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCResponse;\n-import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n-import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n-import com.smartdevicelink.proxy.rpc.enums.Result;\n-import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n-import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n-import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n-import com.smartdevicelink.util.SdlDataTypeConverter;\n-\n-import java.util.Hashtable;\n-import java.util.List;\n-\n-/**\n- * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n- *\n- * @since SmartDeviceLink 2.0\n- */\n-public class GetVehicleDataResponse extends RPCResponse {\n-    public static final String KEY_SPEED = \"speed\";\n-    public static final String KEY_RPM = \"rpm\";\n-    public static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-    public static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-    public static final String KEY_VIN = \"vin\";\n-    public static final String KEY_PRNDL = \"prndl\";\n-    public static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-    public static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-    public static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-    public static final String KEY_ODOMETER = \"odometer\";\n-    public static final String KEY_GPS = \"gps\";\n-    public static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-    public static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-    public static final String KEY_BELT_STATUS = \"beltStatus\";\n-    public static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-    public static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-    public static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-    public static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-    public static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-    public static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-    public static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-    public static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-    public static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-    public static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-    public static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-    public static final String KEY_MY_KEY = \"myKey\";\n-    public static final String KEY_FUEL_RANGE = \"fuelRange\";\n-    public static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-    public static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     */\n-\n-    public GetVehicleDataResponse() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-\n-    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    /**\n-     * Constructs a new GetVehicleDataResponse object\n-     *\n-     * @param success    whether the request is successfully processed\n-     * @param resultCode whether the request is successfully processed\n-     */\n-    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n-        this();\n-        setSuccess(success);\n-        setResultCode(resultCode);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public GPSData getGps() {\n-        return (GPSData) getObject(GPSData.class, KEY_GPS);\n-    }\n-\n-    public void setGps(GPSData gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Double getSpeed() {\n-        Object object = getParameters(KEY_SPEED);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSpeed(Double speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Integer getRpm() {\n-        return getInteger(KEY_RPM);\n-    }\n-\n-    public void setRpm(Integer rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Double getFuelLevel() {\n-        Object object = getParameters(KEY_FUEL_LEVEL);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setFuelLevel(Double fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    @Deprecated\n-    public ComponentVolumeStatus getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    public ComponentVolumeStatus getFuelLevelState() {\n-        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Double getInstantFuelConsumption() {\n-        Object object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Double getExternalTemperature() {\n-        Object object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setExternalTemperature(Double externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public String getVin() {\n-        return getString(KEY_VIN);\n-    }\n-\n-    public void setVin(String vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public PRNDL getPrndl() {\n-        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n-    }\n-\n-    public void setPrndl(PRNDL prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public TireStatus getTirePressure() {\n-        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setTirePressure(TireStatus tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Integer getOdometer() {\n-        return getInteger(KEY_ODOMETER);\n-    }\n-\n-    public void setOdometer(Integer odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BeltStatus getBeltStatus() {\n-        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n-    }\n-\n-    public void setBeltStatus(BeltStatus beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public BodyInformation getBodyInformation() {\n-        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setBodyInformation(BodyInformation bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public DeviceStatus getDeviceStatus() {\n-        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDeviceStatus(DeviceStatus deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public VehicleDataEventStatus getDriverBraking() {\n-        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public WiperStatus getWiperStatus() {\n-        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n-    }\n-\n-    public void setWiperStatus(WiperStatus wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public HeadLampStatus getHeadLampStatus() {\n-        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Double getEngineTorque() {\n-        Object object = getParameters(KEY_ENGINE_TORQUE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setEngineTorque(Double engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Float getEngineOilLife() {\n-        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n-        return SdlDataTypeConverter.objectToFloat(object);\n-    }\n-\n-    public void setEngineOilLife(Float engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Double getAccPedalPosition() {\n-        Object object = getParameters(KEY_ACC_PEDAL_POSITION);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setAccPedalPosition(Double accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Double getSteeringWheelAngle() {\n-        Object object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n-        return SdlDataTypeConverter.objectToDouble(object);\n-    }\n-\n-    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ECallInfo getECallInfo() {\n-        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n-    }\n-\n-    public void setECallInfo(ECallInfo eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public AirbagStatus getAirbagStatus() {\n-        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setAirbagStatus(AirbagStatus airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public EmergencyEvent getEmergencyEvent() {\n-        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public ClusterModeStatus getClusterModeStatus() {\n-        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    @SuppressWarnings(\"unchecked\")\n-    public MyKey getMyKey() {\n-        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n-    }\n-\n-    public void setMyKey(MyKey myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    /**\n-     * Gets Fuel Range List\n-     *\n-     * @return List<FuelRange>\n-     * Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public List<FuelRange> getFuelRange() {\n-        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n-     *\n-     * @param fuelRange the range in KM left as well as fuel type\n-     * @see com.smartdevicelink.proxy.rpc.FuelRange\n-     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n-     */\n-    public void setFuelRange(List<FuelRange> fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets turnSignal\n-     *\n-     * @return TurnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public TurnSignal getTurnSignal() {\n-        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets turnSignal\n-     *\n-     * @param turnSignal status of the turn signals\n-     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n-     */\n-    public void setTurnSignal(TurnSignal turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets electronicParkBrakeStatus\n-     *\n-     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus() {\n-        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets electronicParkBrakeStatus\n-     *\n-     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n-     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n-     */\n-    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a String value of the returned cloud app vehicle ID\n-     *\n-     * @return a String value.\n-     */\n-    public String getCloudAppVehicleID() {\n-        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a string value for the cloud app vehicle ID\n-     *\n-     * @param cloudAppVehicleID a string value\n-     */\n-    public void setCloudAppVehicleID(String cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Sets a value for OEM Custom VehicleData.\n-     *\n-     * @param vehicleDataName  a String value\n-     * @param vehicleDataState a VehicleDataResult value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a VehicleData value for the vehicle data item.\n-     *\n-     * @return a Object related to the vehicle data\n-     */\n-    public Object getOEMCustomVehicleData(String vehicleDataName) {\n-        return getParameters(vehicleDataName);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return StabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public StabilityControlsStatus getStabilityControlsStatus() {\n-        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+\n+import android.support.annotation.NonNull;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCResponse;\n+import com.smartdevicelink.proxy.rpc.enums.ComponentVolumeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus;\n+import com.smartdevicelink.proxy.rpc.enums.PRNDL;\n+import com.smartdevicelink.proxy.rpc.enums.Result;\n+import com.smartdevicelink.proxy.rpc.enums.TurnSignal;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataEventStatus;\n+import com.smartdevicelink.proxy.rpc.enums.WiperStatus;\n+import com.smartdevicelink.util.SdlDataTypeConverter;\n+\n+import java.util.Hashtable;\n+import java.util.List;\n+\n+/**\n+ * Get Vehicle Data Response is sent, when GetVehicleData has been called.\n+ * \n+ * @since SmartDeviceLink 2.0\n+ */\n+public class GetVehicleDataResponse extends RPCResponse {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/** \n+\t * Constructs a new GetVehicleDataResponse object\n+\t */\n+\n+    public GetVehicleDataResponse() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    public GetVehicleDataResponse(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    /**\n+     * Constructs a new GetVehicleDataResponse object\n+     * @param success whether the request is successfully processed\n+     * @param resultCode whether the request is successfully processed\n+     */\n+    public GetVehicleDataResponse(@NonNull Boolean success, @NonNull Result resultCode) {\n+        this();\n+        setSuccess(success);\n+        setResultCode(resultCode);\n+    }\n+    public void setGps(GPSData gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public GPSData getGps() {\n+        return (GPSData) getObject(GPSData.class, KEY_GPS);\n+    }\n+    public void setSpeed(Double speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Double getSpeed() {\n+    \tObject object = getParameters(KEY_SPEED);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setRpm(Integer rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Integer getRpm() {\n+    \treturn getInteger(KEY_RPM);\n+    }\n+    public void setFuelLevel(Double fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Double getFuelLevel() {\n+    \tObject object = getParameters(KEY_FUEL_LEVEL);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(ComponentVolumeStatus fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public ComponentVolumeStatus getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(ComponentVolumeStatus fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public ComponentVolumeStatus getFuelLevelState() {\n+        return (ComponentVolumeStatus) getObject(ComponentVolumeStatus.class, KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Double instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Double getInstantFuelConsumption() {\n+    \tObject object = getParameters(KEY_INSTANT_FUEL_CONSUMPTION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setExternalTemperature(Double externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Double getExternalTemperature() {\n+    \tObject object = getParameters(KEY_EXTERNAL_TEMPERATURE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setVin(String vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public String getVin() {\n+    \treturn getString(KEY_VIN);\n+    }\n+    public void setPrndl(PRNDL prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public PRNDL getPrndl() {\n+        return (PRNDL) getObject(PRNDL.class, KEY_PRNDL);\n+    }\n+    public void setTirePressure(TireStatus tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public TireStatus getTirePressure() {\n+        return (TireStatus) getObject(TireStatus.class, KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Integer odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Integer getOdometer() {\n+    \treturn getInteger(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(BeltStatus beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BeltStatus getBeltStatus() {\n+        return (BeltStatus) getObject(BeltStatus.class, KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(BodyInformation bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public BodyInformation getBodyInformation() {\n+        return (BodyInformation) getObject(BodyInformation.class, KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(DeviceStatus deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public DeviceStatus getDeviceStatus() {\n+        return (DeviceStatus) getObject(DeviceStatus.class, KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(VehicleDataEventStatus driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public VehicleDataEventStatus getDriverBraking() {\n+        return (VehicleDataEventStatus) getObject(VehicleDataEventStatus.class, KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(WiperStatus wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public WiperStatus getWiperStatus() {\n+        return (WiperStatus) getObject(WiperStatus.class, KEY_WIPER_STATUS);\n+    }\n+  \n+    public void setHeadLampStatus(HeadLampStatus headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public HeadLampStatus getHeadLampStatus() {\n+        return (HeadLampStatus) getObject(HeadLampStatus.class, KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Double engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Double getEngineTorque() {\n+        Object object = getParameters(KEY_ENGINE_TORQUE);\n+        return SdlDataTypeConverter.objectToDouble(object);\n+    }\n+    public void setEngineOilLife(Float engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Float getEngineOilLife() {\n+        Object object = getParameters(KEY_ENGINE_OIL_LIFE);\n+        return SdlDataTypeConverter.objectToFloat(object);\n+    }\n+\n+    public void setAccPedalPosition(Double accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Double getAccPedalPosition() {\n+    \tObject object = getParameters(KEY_ACC_PEDAL_POSITION);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }\n+        \n+    public void setSteeringWheelAngle(Double steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Double getSteeringWheelAngle() {\n+    \tObject object = getParameters(KEY_STEERING_WHEEL_ANGLE);\n+    \treturn SdlDataTypeConverter.objectToDouble(object);\n+    }    \n+\n+    public void setECallInfo(ECallInfo eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ECallInfo getECallInfo() {\n+        return (ECallInfo) getObject(ECallInfo.class, KEY_E_CALL_INFO);\n+    }\t\n+\t\n+    public void setAirbagStatus(AirbagStatus airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public AirbagStatus getAirbagStatus() {\n+        return (AirbagStatus) getObject(AirbagStatus.class, KEY_AIRBAG_STATUS);\n+    }\t\n+\n+    public void setEmergencyEvent(EmergencyEvent emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public EmergencyEvent getEmergencyEvent() {\n+        return (EmergencyEvent) getObject(EmergencyEvent.class, KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(ClusterModeStatus clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public ClusterModeStatus getClusterModeStatus() {\n+        return (ClusterModeStatus) getObject(ClusterModeStatus.class, KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(MyKey myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    @SuppressWarnings(\"unchecked\")\n+    public MyKey getMyKey() {\n+        return (MyKey) getObject(MyKey.class, KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets Fuel Range List. Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     * @param fuelRange the range in KM left as well as fuel type\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.FuelRange\n+     * @see com.smartdevicelink.proxy.rpc.enums.FuelType\n+     */\n+    public void setFuelRange(List<FuelRange> fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets Fuel Range List\n+     * @return List<FuelRange>\n+     *     Fuel Range - The estimate range in KM the vehicle can travel based on fuel level and consumption.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public List<FuelRange> getFuelRange() {\n+        return (List<FuelRange>) getObject(FuelRange.class, KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets turnSignal\n+     * @param turnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    public void setTurnSignal(TurnSignal turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets turnSignal\n+     * @return TurnSignal status of the turn signals\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.TurnSignal\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public TurnSignal getTurnSignal() {\n+        return (TurnSignal) getObject(TurnSignal.class, KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets electronicParkBrakeStatus\n+     * @param electronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public void setElectronicParkBrakeStatus(ElectronicParkBrakeStatus electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets electronicParkBrakeStatus\n+     * @return ElectronicParkBrakeStatus status of the electronic park brake of the connected vehicle\n+     *\n+     * @see com.smartdevicelink.proxy.rpc.enums.ElectronicParkBrakeStatus\n+     */\n+    public ElectronicParkBrakeStatus getElectronicParkBrakeStatus(){\n+        return (ElectronicParkBrakeStatus) getObject(ElectronicParkBrakeStatus.class, KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a string value for the cloud app vehicle ID\n+     * @param cloudAppVehicleID a string value\n+     */\n+    public void setCloudAppVehicleID(String cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a String value of the returned cloud app vehicle ID\n+     * @return a String value.\n+     */\n+    public String getCloudAppVehicleID(){\n+        return getString(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+\n+    /**\n+     * Sets a value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a VehicleDataResult value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Object vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a VehicleData value for the vehicle data item.\n+     * @return a Object related to the vehicle data\n+     */\n+    public Object getOEMCustomVehicleData(String vehicleDataName){\n+        return getParameters(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return StabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public StabilityControlsStatus getStabilityControlsStatus() {\n+        return (StabilityControlsStatus) getObject(StabilityControlsStatus.class, KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMDc2Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459010762", "body": "Add stabilityControlsStatus to the parameter list at the top of the file,\r\n```\r\n *  <tr>\r\n *      <td>stabilityControlsStatus</td>\r\n *      <td>Boolean</td>\r\n *      <td>See StabilityControlsStatus</td>\r\n *      <td>N</td>\r\n *      <td>SmartDeviceLink 7.0.0</td>\r\n *  </tr>\r\n```", "bodyText": "Add stabilityControlsStatus to the parameter list at the top of the file,\n *  <tr>\n *      <td>stabilityControlsStatus</td>\n *      <td>Boolean</td>\n *      <td>See StabilityControlsStatus</td>\n *      <td>N</td>\n *      <td>SmartDeviceLink 7.0.0</td>\n *  </tr>", "bodyHTML": "<p dir=\"auto\">Add stabilityControlsStatus to the parameter list at the top of the file,</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n\"><pre><code> *  &lt;tr&gt;\n *      &lt;td&gt;stabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;Boolean&lt;/td&gt;\n *      &lt;td&gt;See StabilityControlsStatus&lt;/td&gt;\n *      &lt;td&gt;N&lt;/td&gt;\n *      &lt;td&gt;SmartDeviceLink 7.0.0&lt;/td&gt;\n *  &lt;/tr&gt;\n</code></pre></div>", "author": "JulianKast", "createdAt": "2020-07-22T18:51:01Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -287,8 +287,9 @@\n \tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\r\n \tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\r\n     public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\r\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 5159d52ca..00026f192 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,577 +1,647 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Vehicle identification number</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- * \t\t</table>\n- *  \n- *  \n- *  <p><b>Response</b></p>\n- *  \n- * <p> <b>Non-default Result Codes:</b></p>\n- * <p> SUCCESS</p>\n- * <p> INVALID_DATA</p>\n- *  <p>OUT_OF_MEMORY</p>\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\n- *  <p>APPLICATION_NOT_REGISTERED</p>\n- * <p> GENERIC_ERROR</p>\n- * <p> REJECTED</p>\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n- * <p> USER_DISALLOWED</p>\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 2.0\n- * \n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t* \n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    \n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-    \n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-        \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }                \n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }    \n-    \n-    \n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-      *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus(){\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID(){\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a boolean value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a boolean value\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value for StabilityControlsStatus.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getStabilityControlsStatus(){\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>Boolean</td>\n+ *      <td>Vehicle identification number</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including ignition status and internal temp</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t*\n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+     *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 00026f192..bfb9e05b6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,647 +1,616 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>vin</td>\n- *      <td>Boolean</td>\n- *      <td>Vehicle identification number</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including ignition status and internal temp</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t*\n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-     *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</table>\n+ *  \n+ *  \n+ *  <p><b>Response</b></p>\n+ *  \n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ * \n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t* \n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    \n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+    \n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+        \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }                \n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }    \n+    \n+    \n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+      *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus(){\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID(){\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMTMzOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459011339", "body": "```suggestion\r\n  /**\r\n     * Sets the stabilityControlsStatus.\r\n     *\r\n     * @param stabilityControlsStatus See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Sets a boolean value for StabilityControlsStatus.\n          \n          \n            \n                 * @param stabilityControlsStatus a boolean value\n          \n          \n            \n                 */\n          \n          \n            \n              /**\n          \n          \n            \n                 * Sets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param stabilityControlsStatus See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"672\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"673\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"674\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus a <span class=\"pl-k\">boolean</span> value</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"675\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"672\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"673\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"674\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"675\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> stabilityControlsStatus <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"676\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"677\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"678\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"679\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:52:02Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -540,21 +541,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n     public Boolean getCloudAppVehicleID(){\r\n         return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a boolean value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a boolean value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for OEM Custom VehicleData.\r\n+     * @return a Boolean value.\r\n+     */\r\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getBoolean(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a boolean value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a boolean value\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 5159d52ca..00026f192 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,577 +1,647 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Vehicle identification number</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- * \t\t</table>\n- *  \n- *  \n- *  <p><b>Response</b></p>\n- *  \n- * <p> <b>Non-default Result Codes:</b></p>\n- * <p> SUCCESS</p>\n- * <p> INVALID_DATA</p>\n- *  <p>OUT_OF_MEMORY</p>\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\n- *  <p>APPLICATION_NOT_REGISTERED</p>\n- * <p> GENERIC_ERROR</p>\n- * <p> REJECTED</p>\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n- * <p> USER_DISALLOWED</p>\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 2.0\n- * \n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t* \n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    \n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-    \n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-        \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }                \n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }    \n-    \n-    \n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-      *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus(){\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID(){\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a boolean value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a boolean value\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value for StabilityControlsStatus.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getStabilityControlsStatus(){\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>Boolean</td>\n+ *      <td>Vehicle identification number</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including ignition status and internal temp</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t*\n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+     *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 00026f192..bfb9e05b6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,647 +1,616 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>vin</td>\n- *      <td>Boolean</td>\n- *      <td>Vehicle identification number</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including ignition status and internal temp</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t*\n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-     *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</table>\n+ *  \n+ *  \n+ *  <p><b>Response</b></p>\n+ *  \n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ * \n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t* \n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    \n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+    \n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+        \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }                \n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }    \n+    \n+    \n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+      *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus(){\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID(){\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxMTYwOQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r459011609", "body": "```suggestion\r\n    /**\r\n     * Gets the stabilityControlsStatus.\r\n     *\r\n     * @return Boolean See StabilityControlsStatus\r\n     * @since SmartDeviceLink 7.0.0\r\n     */\r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Gets a boolean value for StabilityControlsStatus.\n          \n          \n            \n                 * @return a Boolean value.\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the stabilityControlsStatus.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return Boolean See StabilityControlsStatus\n          \n          \n            \n                 * @since SmartDeviceLink 7.0.0\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> a <span class=\"pl-k\">boolean</span> value <span class=\"pl-k\">for</span> <span class=\"pl-smi\">StabilityControlsStatus</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> a <span class=\"pl-smi\">Boolean</span> value.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"702\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"703\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the stabilityControlsStatus.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"704\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"705\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">Boolean</span> <span class=\"pl-smi\">See</span> <span class=\"pl-smi\">StabilityControlsStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"706\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"707\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"708\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-07-22T18:52:31Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java", "diffHunk": "@@ -540,21 +541,37 @@ public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n     public Boolean getCloudAppVehicleID(){\r\n         return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\r\n     }\r\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-}\n+\r\n+    /**\r\n+     * Sets a boolean value for OEM Custom VehicleData.\r\n+     * @param vehicleDataName a String value\r\n+     * @param vehicleDataState a boolean value\r\n+     */\r\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\r\n+        setParameters(vehicleDataName, vehicleDataState);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for OEM Custom VehicleData.\r\n+     * @return a Boolean value.\r\n+     */\r\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\r\n+        return getBoolean(vehicleDataName);\r\n+    }\r\n+\r\n+    /**\r\n+     * Sets a boolean value for StabilityControlsStatus.\r\n+     * @param stabilityControlsStatus a boolean value\r\n+     */\r\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\r\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets a boolean value for StabilityControlsStatus.\r\n+     * @return a Boolean value.\r\n+     */\r", "originalCommit": "c91b3d6dd54228fc3fd17773d577ca0857d34cee", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 5159d52ca..00026f192 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,577 +1,647 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this \n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- * \n- * <p><b>Parameter List</b></p>\n- * <table border=\"1\" rules=\"all\">\n- * \t\t<tr>\n- * \t\t\t<th>Name</th>\n- * \t\t\t<th>Type</th>\n- * \t\t\t<th>Description</th>\n- *                 <th>Reg.</th>\n- *               <th>Notes</th>\n- * \t\t\t<th>Version</th>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>gps</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>speed</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>rpm</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The number of revolutions per minute of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level in the tank (percentage)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>fuelLevel_State</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The fuel level state</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>instantFuelConsumption</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>externalTemperature</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The external temperature in degrees celsius</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>vin</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Vehicle identification number</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>prndl</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Currently selected gear.</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>tirePressure</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Tire pressure status</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>odometer</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Odometer in km</td>\n- *                 <td>N</td>\n- *                 <td>Max Length: 500</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>beltStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the seat belts</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>bodyInformation</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The body information including ignition status and internal temp</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0 </td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>deviceStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The device status including signal and battery strength</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>driverBraking</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the brake pedal</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>wiperStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The status of the wipers</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>headLampStatus</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Status of the head lamps</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineTorque</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>engineOilLife</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>accPedalPosition</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>steeringWheelAngle</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n- *                 <td>N</td>\n- *                 <td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 2.0</td>\n- * \t\t</tr>\n- * \t\t<tr>\n- * \t\t\t<td>turnSignal</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>@see TurnSignal</td>\n- * \t\t\t<td>N</td>\n- * \t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.0</td>\n- * \t\t</tr>\n- * \t     <tr>\n- * \t\t\t<td>cloudAppVehicleID</td>\n- * \t\t\t<td>Boolean</td>\n- * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n- *\t\t\t\t<td>N</td>\n- *\t\t\t\t<td>Subscribable</td>\n- * \t\t\t<td>SmartDeviceLink 5.1 </td>\n- * \t\t</tr>\n- * \t\t</table>\n- *  \n- *  \n- *  <p><b>Response</b></p>\n- *  \n- * <p> <b>Non-default Result Codes:</b></p>\n- * <p> SUCCESS</p>\n- * <p> INVALID_DATA</p>\n- *  <p>OUT_OF_MEMORY</p>\n- *  <p>TOO_MANY_PENDING_REQUESTS</p>\n- *  <p>APPLICATION_NOT_REGISTERED</p>\n- * <p> GENERIC_ERROR</p>\n- * <p> REJECTED</p>\n- * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n- *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n- * <p> USER_DISALLOWED</p>\n- * \n- * @see SubscribeVehicleData\n- * @see UnsubscribeVehicleData\n- * @since SmartDeviceLink 2.0\n- * \n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t* \n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-    \n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-    \n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-        \n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }                \n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }    \n-    \n-    \n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-      *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus(){\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID(){\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets a boolean value for StabilityControlsStatus.\n-     * @param stabilityControlsStatus a boolean value\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus){\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value for StabilityControlsStatus.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getStabilityControlsStatus(){\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this\n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ *\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>gps</td>\n+ *      <td>Boolean</td>\n+ *      <td>See GPSData</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>speed</td>\n+ *      <td>Boolean</td>\n+ *      <td>The vehicle speed in kilometers per hour</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>rpm</td>\n+ *      <td>Boolean</td>\n+ *      <td>The number of revolutions per minute of the engine</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level in the tank (percentage)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelLevel_State</td>\n+ *      <td>Boolean</td>\n+ *      <td>The fuel level state</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>instantFuelConsumption</td>\n+ *      <td>Boolean</td>\n+ *      <td>The instantaneous fuel consumption in microlitres</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>fuelRange</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>externalTemperature</td>\n+ *      <td>Boolean</td>\n+ *      <td>The external temperature in degrees celsius</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>turnSignal</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TurnSignal</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>vin</td>\n+ *      <td>Boolean</td>\n+ *      <td>Vehicle identification number</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>prndl</td>\n+ *      <td>Boolean</td>\n+ *      <td>See PRNDL</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>tirePressure</td>\n+ *      <td>Boolean</td>\n+ *      <td>See TireStatus</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>odometer</td>\n+ *      <td>Boolean</td>\n+ *      <td>Odometer in km</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>beltStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the seat belts</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>bodyInformation</td>\n+ *      <td>Boolean</td>\n+ *      <td>The body information including ignition status and internal temp</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>deviceStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The device status including signal and battery strength</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>driverBraking</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the brake pedal</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>wiperStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the wipers</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>headLampStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>Status of the head lamps</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineTorque</td>\n+ *      <td>Boolean</td>\n+ *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>accPedalPosition</td>\n+ *      <td>Boolean</td>\n+ *      <td>Accelerator pedal position (percentage depressed)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>steeringWheelAngle</td>\n+ *      <td>Boolean</td>\n+ *      <td>Current angle of the steering wheel (in deg)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>engineOilLife</td>\n+ *      <td>Boolean</td>\n+ *      <td>The estimated percentage of remaining oil life of the engine.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>electronicParkBrakeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>cloudAppVehicleID</td>\n+ *      <td>Boolean</td>\n+ *      <td>Parameter used by cloud apps to identify a head unit</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 5.1.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>stabilityControlsStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>See StabilityControlsStatus</td>\n+ *      <td>N</td>\n+ *      <td>SmartDeviceLink 7.0.0</td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>eCallInfo</td>\n+ *      <td>Boolean</td>\n+ *      <td>Emergency Call notification and confirmation data</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>airbagStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status of the air bags</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>emergencyEvent</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to an emergency event (and if it occurred)</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>clusterModeStatus</td>\n+ *      <td>Boolean</td>\n+ *      <td>The status modes of the cluster</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>myKey</td>\n+ *      <td>Boolean</td>\n+ *      <td>Information related to the MyKey feature</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+    /**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t*\n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+\n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+\n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+\n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }\n+\n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }\n+\n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+     *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) {\n+        setParameters(KEY_TURN_SIGNAL, turnSignal);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() {\n+        return getBoolean(KEY_TURN_SIGNAL);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus() {\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID() {\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": {"commit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\nindex 00026f192..bfb9e05b6 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n", "chunk": "@@ -1,647 +1,616 @@\n-/*\n- * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * Redistributions of source code must retain the above copyright notice, this\n- * list of conditions and the following disclaimer.\n- *\n- * Redistributions in binary form must reproduce the above copyright notice,\n- * this list of conditions and the following\n- * disclaimer in the documentation and/or other materials provided with the\n- * distribution.\n- *\n- * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n- * contributors may be used to endorse or promote products derived from this\n- * software without specific prior written permission.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n- * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n- * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n- * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n- * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n- * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n- * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n- * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n- * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n- * POSSIBILITY OF SUCH DAMAGE.\n- */\n-package com.smartdevicelink.proxy.rpc;\n-\n-import com.smartdevicelink.protocol.enums.FunctionID;\n-import com.smartdevicelink.proxy.RPCRequest;\n-\n-import java.util.Hashtable;\n-\n-/**\n- * Non periodic vehicle data read request.\n- *\n- * <p><b>Parameter List</b></p>\n- *\n- * <table border=\"1\" rules=\"all\">\n- *  <tr>\n- *      <th>Param Name</th>\n- *      <th>Type</th>\n- *      <th>Description</th>\n- *      <th>Required</th>\n- *      <th>Version Available</th>\n- *  </tr>\n- *  <tr>\n- *      <td>gps</td>\n- *      <td>Boolean</td>\n- *      <td>See GPSData</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>speed</td>\n- *      <td>Boolean</td>\n- *      <td>The vehicle speed in kilometers per hour</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>rpm</td>\n- *      <td>Boolean</td>\n- *      <td>The number of revolutions per minute of the engine</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level in the tank (percentage)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelLevel_State</td>\n- *      <td>Boolean</td>\n- *      <td>The fuel level state</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>instantFuelConsumption</td>\n- *      <td>Boolean</td>\n- *      <td>The instantaneous fuel consumption in microlitres</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>fuelRange</td>\n- *      <td>Boolean</td>\n- *      <td>The estimate range in KM the vehicle can travel based on fuel level and consumption</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>externalTemperature</td>\n- *      <td>Boolean</td>\n- *      <td>The external temperature in degrees celsius</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>turnSignal</td>\n- *      <td>Boolean</td>\n- *      <td>See TurnSignal</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>vin</td>\n- *      <td>Boolean</td>\n- *      <td>Vehicle identification number</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>prndl</td>\n- *      <td>Boolean</td>\n- *      <td>See PRNDL</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>tirePressure</td>\n- *      <td>Boolean</td>\n- *      <td>See TireStatus</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>odometer</td>\n- *      <td>Boolean</td>\n- *      <td>Odometer in km</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>beltStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the seat belts</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>bodyInformation</td>\n- *      <td>Boolean</td>\n- *      <td>The body information including ignition status and internal temp</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>deviceStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The device status including signal and battery strength</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>driverBraking</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the brake pedal</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>wiperStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the wipers</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>headLampStatus</td>\n- *      <td>Boolean</td>\n- *      <td>Status of the head lamps</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineTorque</td>\n- *      <td>Boolean</td>\n- *      <td>Torque value for engine (in Nm) on non-diesel variants</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>accPedalPosition</td>\n- *      <td>Boolean</td>\n- *      <td>Accelerator pedal position (percentage depressed)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>steeringWheelAngle</td>\n- *      <td>Boolean</td>\n- *      <td>Current angle of the steering wheel (in deg)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>engineOilLife</td>\n- *      <td>Boolean</td>\n- *      <td>The estimated percentage of remaining oil life of the engine.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>electronicParkBrakeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the park brake as provided by Electric Park Brake (EPB) system.</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>cloudAppVehicleID</td>\n- *      <td>Boolean</td>\n- *      <td>Parameter used by cloud apps to identify a head unit</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 5.1.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>stabilityControlsStatus</td>\n- *      <td>Boolean</td>\n- *      <td>See StabilityControlsStatus</td>\n- *      <td>N</td>\n- *      <td>SmartDeviceLink 7.0.0</td>\n- *  </tr>\n- *  <tr>\n- *      <td>eCallInfo</td>\n- *      <td>Boolean</td>\n- *      <td>Emergency Call notification and confirmation data</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>airbagStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status of the air bags</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>emergencyEvent</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to an emergency event (and if it occurred)</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>clusterModeStatus</td>\n- *      <td>Boolean</td>\n- *      <td>The status modes of the cluster</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- *  <tr>\n- *      <td>myKey</td>\n- *      <td>Boolean</td>\n- *      <td>Information related to the MyKey feature</td>\n- *      <td>N</td>\n- *      <td></td>\n- *  </tr>\n- * </table>\n- *\n- */\n-public class GetVehicleData extends RPCRequest {\n-\tpublic static final String KEY_SPEED = \"speed\";\n-\tpublic static final String KEY_RPM = \"rpm\";\n-\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n-\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n-\tpublic static final String KEY_VIN = \"vin\";\n-\tpublic static final String KEY_PRNDL = \"prndl\";\n-\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n-\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n-\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n-\tpublic static final String KEY_ODOMETER = \"odometer\";\n-\tpublic static final String KEY_GPS = \"gps\";\n-\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n-\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n-\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n-\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n-\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n-\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n-\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n-\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n-\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n-\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n-\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n-\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n-\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n-\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n-\tpublic static final String KEY_MY_KEY = \"myKey\";\n-\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n-\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n-\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n-    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n-    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n-\n-    /**\n-\t * Constructs a new GetVehicleData object\n-\t */\n-\n-    public GetVehicleData() {\n-        super(FunctionID.GET_VEHICLE_DATA.toString());\n-    }\n-    /**\n-\t* <p>\n-\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n-\t* parameter\n-\t* </p>\n-\t*\n-\t* @param hash\n-\t*            The Hashtable to use\n-\t*/\n-\n-    public GetVehicleData(Hashtable<String, Object> hash) {\n-        super(hash);\n-    }\n-\n-    public void setGps(Boolean gps) {\n-        setParameters(KEY_GPS, gps);\n-    }\n-\n-    public Boolean getGps() {\n-        return getBoolean(KEY_GPS);\n-    }\n-\n-    public void setSpeed(Boolean speed) {\n-        setParameters(KEY_SPEED, speed);\n-    }\n-\n-    public Boolean getSpeed() {\n-        return getBoolean(KEY_SPEED);\n-    }\n-\n-    public void setRpm(Boolean rpm) {\n-        setParameters(KEY_RPM, rpm);\n-    }\n-\n-    public Boolean getRpm() {\n-        return getBoolean(KEY_RPM);\n-    }\n-\n-    public void setFuelLevel(Boolean fuelLevel) {\n-        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n-    }\n-\n-    public Boolean getFuelLevel() {\n-        return getBoolean(KEY_FUEL_LEVEL);\n-    }\n-\n-    @Deprecated\n-    public void setFuelLevel_State(Boolean fuelLevel_State) {\n-        setFuelLevelState(fuelLevel_State);\n-    }\n-\n-    @Deprecated\n-    public Boolean getFuelLevel_State() {\n-        return getFuelLevelState();\n-    }\n-\n-    public void setFuelLevelState(Boolean fuelLevelState) {\n-        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n-    }\n-\n-    public Boolean getFuelLevelState() {\n-        return getBoolean(KEY_FUEL_LEVEL_STATE);\n-    }\n-\n-    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n-        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n-    }\n-\n-    public Boolean getInstantFuelConsumption() {\n-        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n-    }\n-\n-    public void setExternalTemperature(Boolean externalTemperature) {\n-        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n-    }\n-\n-    public Boolean getExternalTemperature() {\n-        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n-    }\n-\n-    public void setVin(Boolean vin) {\n-        setParameters(KEY_VIN, vin);\n-    }\n-\n-    public Boolean getVin() {\n-        return getBoolean(KEY_VIN);\n-    }\n-\n-    public void setPrndl(Boolean prndl) {\n-        setParameters(KEY_PRNDL, prndl);\n-    }\n-\n-    public Boolean getPrndl() {\n-        return getBoolean(KEY_PRNDL);\n-    }\n-\n-    public void setTirePressure(Boolean tirePressure) {\n-        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n-    }\n-\n-    public Boolean getTirePressure() {\n-        return getBoolean(KEY_TIRE_PRESSURE);\n-    }\n-\n-    public void setOdometer(Boolean odometer) {\n-        setParameters(KEY_ODOMETER, odometer);\n-    }\n-\n-    public Boolean getOdometer() {\n-        return getBoolean(KEY_ODOMETER);\n-    }\n-\n-    public void setBeltStatus(Boolean beltStatus) {\n-        setParameters(KEY_BELT_STATUS, beltStatus);\n-    }\n-\n-    public Boolean getBeltStatus() {\n-        return getBoolean(KEY_BELT_STATUS);\n-    }\n-\n-    public void setBodyInformation(Boolean bodyInformation) {\n-        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n-    }\n-\n-    public Boolean getBodyInformation() {\n-        return getBoolean(KEY_BODY_INFORMATION);\n-    }\n-\n-    public void setDeviceStatus(Boolean deviceStatus) {\n-        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n-    }\n-\n-    public Boolean getDeviceStatus() {\n-        return getBoolean(KEY_DEVICE_STATUS);\n-    }\n-\n-    public void setDriverBraking(Boolean driverBraking) {\n-        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n-    }\n-\n-    public Boolean getDriverBraking() {\n-        return getBoolean(KEY_DRIVER_BRAKING);\n-    }\n-\n-    public void setWiperStatus(Boolean wiperStatus) {\n-        setParameters(KEY_WIPER_STATUS, wiperStatus);\n-    }\n-\n-    public Boolean getWiperStatus() {\n-        return getBoolean(KEY_WIPER_STATUS);\n-    }\n-\n-    public void setHeadLampStatus(Boolean headLampStatus) {\n-        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n-    }\n-\n-    public Boolean getHeadLampStatus() {\n-        return getBoolean(KEY_HEAD_LAMP_STATUS);\n-    }\n-\n-    public void setEngineTorque(Boolean engineTorque) {\n-        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n-    }\n-\n-    public Boolean getEngineTorque() {\n-        return getBoolean(KEY_ENGINE_TORQUE);\n-    }\n-\n-    public void setEngineOilLife(Boolean engineOilLife) {\n-        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n-    }\n-\n-    public Boolean getEngineOilLife() {\n-        return getBoolean(KEY_ENGINE_OIL_LIFE);\n-    }\n-\n-    public void setAccPedalPosition(Boolean accPedalPosition) {\n-        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n-    }\n-\n-    public Boolean getAccPedalPosition() {\n-        return getBoolean(KEY_ACC_PEDAL_POSITION);\n-    }\n-\n-    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n-        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n-    }\n-\n-    public Boolean getSteeringWheelAngle() {\n-        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n-    }\n-\n-    public void setECallInfo(Boolean eCallInfo) {\n-        setParameters(KEY_E_CALL_INFO, eCallInfo);\n-    }\n-\n-    public Boolean getECallInfo() {\n-        return getBoolean(KEY_E_CALL_INFO);\n-    }\n-\n-    public void setAirbagStatus(Boolean airbagStatus) {\n-        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n-    }\n-\n-    public Boolean getAirbagStatus() {\n-        return getBoolean(KEY_AIRBAG_STATUS);\n-    }\n-\n-    public void setEmergencyEvent(Boolean emergencyEvent) {\n-        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n-    }\n-\n-    public Boolean getEmergencyEvent() {\n-        return getBoolean(KEY_EMERGENCY_EVENT);\n-    }\n-\n-    public void setClusterModeStatus(Boolean clusterModeStatus) {\n-        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n-    }\n-\n-    public Boolean getClusterModeStatus() {\n-        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n-    }\n-\n-    public void setMyKey(Boolean myKey) {\n-        setParameters(KEY_MY_KEY, myKey);\n-    }\n-\n-    public Boolean getMyKey() {\n-        return getBoolean(KEY_MY_KEY);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets fuelRange data\n-     * @param fuelRange\n-     *            a boolean value\n-     */\n-    public void setFuelRange(Boolean fuelRange) {\n-        setParameters(KEY_FUEL_RANGE, fuelRange);\n-    }\n-\n-    /**\n-     * Gets a boolean value.\n-     *\n-     * @return Boolean -a Boolean value.\n-     *\n-     */\n-    public Boolean getFuelRange() {\n-        return getBoolean(KEY_FUEL_RANGE);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes turnSignal data\n-     * @param turnSignal a boolean value\n-     */\n-    public void setTurnSignal(Boolean turnSignal) {\n-        setParameters(KEY_TURN_SIGNAL, turnSignal);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getTurnSignal() {\n-        return getBoolean(KEY_TURN_SIGNAL);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n-     * @param electronicParkBrakeStatus a boolean value\n-     */\n-    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus) {\n-        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getElectronicParkBrakeStatus() {\n-        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n-    }\n-\n-    /**\n-     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n-     * @param cloudAppVehicleID a boolean value\n-     */\n-    public void setCloudAppVehicleID(boolean cloudAppVehicleID) {\n-        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n-    }\n-\n-    /**\n-     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getCloudAppVehicleID() {\n-        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n-    }\n-\n-    /**\n-     * Sets a boolean value for OEM Custom VehicleData.\n-     * @param vehicleDataName a String value\n-     * @param vehicleDataState a boolean value\n-     */\n-    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState) {\n-        setParameters(vehicleDataName, vehicleDataState);\n-    }\n-\n-    /**\n-     * Gets a boolean value for OEM Custom VehicleData.\n-     * @return a Boolean value.\n-     */\n-    public Boolean getOEMCustomVehicleData(String vehicleDataName) {\n-        return getBoolean(vehicleDataName);\n-    }\n-\n-    /**\n-     * Sets the stabilityControlsStatus.\n-     *\n-     * @param stabilityControlsStatus See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n-        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n-    }\n-\n-    /**\n-     * Gets the stabilityControlsStatus.\n-     *\n-     * @return Boolean See StabilityControlsStatus\n-     * @since SmartDeviceLink 7.0.0\n-     */\n-    public Boolean getStabilityControlsStatus() {\n-        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n-    }\n-}\n+/*\n+ * Copyright (c) 2017 - 2019, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium, Inc. nor the names of its\n+ * contributors may be used to endorse or promote products derived from this \n+ * software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.protocol.enums.FunctionID;\n+import com.smartdevicelink.proxy.RPCRequest;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * Non periodic vehicle data read request.\n+ * \n+ * <p><b>Parameter List</b></p>\n+ * <table border=\"1\" rules=\"all\">\n+ * \t\t<tr>\n+ * \t\t\t<th>Name</th>\n+ * \t\t\t<th>Type</th>\n+ * \t\t\t<th>Description</th>\n+ *                 <th>Reg.</th>\n+ *               <th>Notes</th>\n+ * \t\t\t<th>Version</th>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>gps</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>GPS data. See {@linkplain com.smartdevicelink.proxy.rpc.GPSData }for details</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>speed</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The vehicle speed in kilometers per hour</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>rpm</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The number of revolutions per minute of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level in the tank (percentage)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>fuelLevel_State</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The fuel level state</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>instantFuelConsumption</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The instantaneous fuel consumption in microlitres</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>externalTemperature</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The external temperature in degrees celsius</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>vin</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Vehicle identification number</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>prndl</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Currently selected gear.</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>tirePressure</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Tire pressure status</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>odometer</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Odometer in km</td>\n+ *                 <td>N</td>\n+ *                 <td>Max Length: 500</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>beltStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the seat belts</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>bodyInformation</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The body information including ignition status and internal temp</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0 </td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>deviceStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The device status including signal and battery strength</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>driverBraking</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the brake pedal</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>wiperStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The status of the wipers</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>headLampStatus</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Status of the head lamps</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineTorque</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Torque value for engine (in Nm) on non-diesel variants</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>engineOilLife</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>The estimated percentage of remaining oil life of the engine</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>accPedalPosition</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Accelerator pedal position (percentage depressed)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>steeringWheelAngle</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>Current angle of the steering wheel (in deg)</td>\n+ *                 <td>N</td>\n+ *                 <td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 2.0</td>\n+ * \t\t</tr>\n+ * \t\t<tr>\n+ * \t\t\t<td>turnSignal</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>@see TurnSignal</td>\n+ * \t\t\t<td>N</td>\n+ * \t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.0</td>\n+ * \t\t</tr>\n+ * \t     <tr>\n+ * \t\t\t<td>cloudAppVehicleID</td>\n+ * \t\t\t<td>Boolean</td>\n+ * \t\t\t<td>ID for the vehicle when connecting to cloud applications</td>\n+ *\t\t\t\t<td>N</td>\n+ *\t\t\t\t<td>Subscribable</td>\n+ * \t\t\t<td>SmartDeviceLink 5.1 </td>\n+ *      <tr>\n+ *          <td>stabilityControlsStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See StabilityControlsStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</tr>\n+ *      <tr>\n+ *          <td>handsOffSteering</td>\n+ *          <td>Boolean</td>\n+ *          <td>To indicate whether driver hands are off the steering wheel</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n+ * \t\t</table>\n+ *  \n+ *  \n+ *  <p><b>Response</b></p>\n+ *  \n+ * <p> <b>Non-default Result Codes:</b></p>\n+ * <p> SUCCESS</p>\n+ * <p> INVALID_DATA</p>\n+ *  <p>OUT_OF_MEMORY</p>\n+ *  <p>TOO_MANY_PENDING_REQUESTS</p>\n+ *  <p>APPLICATION_NOT_REGISTERED</p>\n+ * <p> GENERIC_ERROR</p>\n+ * <p> REJECTED</p>\n+ * <p> VEHICLE_DATA_NOT_ALLOWED</p>\n+ *  <p>VEHICLE_DATA_NOT_AVAILABLE</p>\n+ * <p> USER_DISALLOWED</p>\n+ * \n+ * @see SubscribeVehicleData\n+ * @see UnsubscribeVehicleData\n+ * @since SmartDeviceLink 2.0\n+ * \n+ *\n+ */\n+public class GetVehicleData extends RPCRequest {\n+\tpublic static final String KEY_SPEED = \"speed\";\n+\tpublic static final String KEY_RPM = \"rpm\";\n+\tpublic static final String KEY_EXTERNAL_TEMPERATURE = \"externalTemperature\";\n+\tpublic static final String KEY_FUEL_LEVEL = \"fuelLevel\";\n+\tpublic static final String KEY_VIN = \"vin\";\n+\tpublic static final String KEY_PRNDL = \"prndl\";\n+\tpublic static final String KEY_TIRE_PRESSURE = \"tirePressure\";\n+\tpublic static final String KEY_ENGINE_TORQUE = \"engineTorque\";\n+\tpublic static final String KEY_ENGINE_OIL_LIFE = \"engineOilLife\";\n+\tpublic static final String KEY_ODOMETER = \"odometer\";\n+\tpublic static final String KEY_GPS = \"gps\";\n+\tpublic static final String KEY_FUEL_LEVEL_STATE = \"fuelLevel_State\";\n+\tpublic static final String KEY_INSTANT_FUEL_CONSUMPTION = \"instantFuelConsumption\";\n+\tpublic static final String KEY_BELT_STATUS = \"beltStatus\";\n+\tpublic static final String KEY_BODY_INFORMATION = \"bodyInformation\";\n+\tpublic static final String KEY_DEVICE_STATUS = \"deviceStatus\";\n+\tpublic static final String KEY_DRIVER_BRAKING = \"driverBraking\";\n+\tpublic static final String KEY_WIPER_STATUS = \"wiperStatus\";\n+\tpublic static final String KEY_HEAD_LAMP_STATUS = \"headLampStatus\";\n+\tpublic static final String KEY_ACC_PEDAL_POSITION = \"accPedalPosition\";\n+\tpublic static final String KEY_STEERING_WHEEL_ANGLE = \"steeringWheelAngle\";\n+\tpublic static final String KEY_E_CALL_INFO = \"eCallInfo\";\n+\tpublic static final String KEY_AIRBAG_STATUS = \"airbagStatus\";\n+\tpublic static final String KEY_EMERGENCY_EVENT = \"emergencyEvent\";\n+\tpublic static final String KEY_CLUSTER_MODE_STATUS = \"clusterModeStatus\";\n+\tpublic static final String KEY_MY_KEY = \"myKey\";\n+\tpublic static final String KEY_FUEL_RANGE = \"fuelRange\";\n+\tpublic static final String KEY_TURN_SIGNAL = \"turnSignal\";\n+\tpublic static final String KEY_ELECTRONIC_PARK_BRAKE_STATUS = \"electronicParkBrakeStatus\";\n+    public static final String KEY_CLOUD_APP_VEHICLE_ID = \"cloudAppVehicleID\";\n+    public static final String KEY_HANDS_OFF_STEERING = \"handsOffSteering\";\n+    public static final String KEY_STABILITY_CONTROLS_STATUS = \"stabilityControlsStatus\";\n+\n+\t/**\n+\t * Constructs a new GetVehicleData object\n+\t */\n+\n+    public GetVehicleData() {\n+        super(FunctionID.GET_VEHICLE_DATA.toString());\n+    }\n+    /**\n+\t* <p>\n+\t* Constructs a new GetVehicleDta object indicated by the Hashtable\n+\t* parameter\n+\t* </p>\n+\t* \n+\t* @param hash\n+\t*            The Hashtable to use\n+\t*/\n+\n+    public GetVehicleData(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+    public void setGps(Boolean gps) {\n+        setParameters(KEY_GPS, gps);\n+    }\n+    public Boolean getGps() {\n+        return getBoolean(KEY_GPS);\n+    }\n+    public void setSpeed(Boolean speed) {\n+        setParameters(KEY_SPEED, speed);\n+    }\n+    public Boolean getSpeed() {\n+        return getBoolean(KEY_SPEED);\n+    }\n+    public void setRpm(Boolean rpm) {\n+        setParameters(KEY_RPM, rpm);\n+    }\n+    public Boolean getRpm() {\n+        return getBoolean(KEY_RPM);\n+    }\n+    public void setFuelLevel(Boolean fuelLevel) {\n+        setParameters(KEY_FUEL_LEVEL, fuelLevel);\n+    }\n+    public Boolean getFuelLevel() {\n+        return getBoolean(KEY_FUEL_LEVEL);\n+    }\n+    @Deprecated\n+    public void setFuelLevel_State(Boolean fuelLevel_State) {\n+        setFuelLevelState(fuelLevel_State);\n+    }\n+    @Deprecated\n+    public Boolean getFuelLevel_State() {\n+        return getFuelLevelState();\n+    }\n+    public void setFuelLevelState(Boolean fuelLevelState) {\n+        setParameters(KEY_FUEL_LEVEL_STATE, fuelLevelState);\n+    }\n+    public Boolean getFuelLevelState() {\n+        return getBoolean(KEY_FUEL_LEVEL_STATE);\n+    }\n+    public void setInstantFuelConsumption(Boolean instantFuelConsumption) {\n+        setParameters(KEY_INSTANT_FUEL_CONSUMPTION, instantFuelConsumption);\n+    }\n+    public Boolean getInstantFuelConsumption() {\n+        return getBoolean(KEY_INSTANT_FUEL_CONSUMPTION);\n+    }\n+    public void setExternalTemperature(Boolean externalTemperature) {\n+        setParameters(KEY_EXTERNAL_TEMPERATURE, externalTemperature);\n+    }\n+    public Boolean getExternalTemperature() {\n+        return getBoolean(KEY_EXTERNAL_TEMPERATURE);\n+    }\n+    \n+    public void setVin(Boolean vin) {\n+        setParameters(KEY_VIN, vin);\n+    }\n+    public Boolean getVin() {\n+        return getBoolean(KEY_VIN);\n+    }\n+    \n+    public void setPrndl(Boolean prndl) {\n+        setParameters(KEY_PRNDL, prndl);\n+    }\n+    public Boolean getPrndl() {\n+        return getBoolean(KEY_PRNDL);\n+    }\n+    public void setTirePressure(Boolean tirePressure) {\n+        setParameters(KEY_TIRE_PRESSURE, tirePressure);\n+    }\n+    public Boolean getTirePressure() {\n+        return getBoolean(KEY_TIRE_PRESSURE);\n+    }\n+    public void setOdometer(Boolean odometer) {\n+        setParameters(KEY_ODOMETER, odometer);\n+    }\n+    public Boolean getOdometer() {\n+        return getBoolean(KEY_ODOMETER);\n+    }\n+    public void setBeltStatus(Boolean beltStatus) {\n+        setParameters(KEY_BELT_STATUS, beltStatus);\n+    }\n+    public Boolean getBeltStatus() {\n+        return getBoolean(KEY_BELT_STATUS);\n+    }\n+    public void setBodyInformation(Boolean bodyInformation) {\n+        setParameters(KEY_BODY_INFORMATION, bodyInformation);\n+    }\n+    public Boolean getBodyInformation() {\n+        return getBoolean(KEY_BODY_INFORMATION);\n+    }\n+    public void setDeviceStatus(Boolean deviceStatus) {\n+        setParameters(KEY_DEVICE_STATUS, deviceStatus);\n+    }\n+    public Boolean getDeviceStatus() {\n+        return getBoolean(KEY_DEVICE_STATUS);\n+    }\n+    public void setDriverBraking(Boolean driverBraking) {\n+        setParameters(KEY_DRIVER_BRAKING, driverBraking);\n+    }\n+    public Boolean getDriverBraking() {\n+        return getBoolean(KEY_DRIVER_BRAKING);\n+    }\n+    public void setWiperStatus(Boolean wiperStatus) {\n+        setParameters(KEY_WIPER_STATUS, wiperStatus);\n+    }\n+    public Boolean getWiperStatus() {\n+        return getBoolean(KEY_WIPER_STATUS);\n+    }\n+    public void setHeadLampStatus(Boolean headLampStatus) {\n+        setParameters(KEY_HEAD_LAMP_STATUS, headLampStatus);\n+    }\n+    public Boolean getHeadLampStatus() {\n+        return getBoolean(KEY_HEAD_LAMP_STATUS);\n+    }\n+    public void setEngineTorque(Boolean engineTorque) {\n+        setParameters(KEY_ENGINE_TORQUE, engineTorque);\n+    }\n+    public Boolean getEngineTorque() {\n+        return getBoolean(KEY_ENGINE_TORQUE);\n+    }\n+    public void setEngineOilLife(Boolean engineOilLife) {\n+        setParameters(KEY_ENGINE_OIL_LIFE, engineOilLife);\n+    }\n+    public Boolean getEngineOilLife() {\n+        return getBoolean(KEY_ENGINE_OIL_LIFE);\n+    }\n+    public void setAccPedalPosition(Boolean accPedalPosition) {\n+        setParameters(KEY_ACC_PEDAL_POSITION, accPedalPosition);\n+    }\n+    public Boolean getAccPedalPosition() {\n+        return getBoolean(KEY_ACC_PEDAL_POSITION);\n+    }\n+        \n+    public void setSteeringWheelAngle(Boolean steeringWheelAngle) {\n+        setParameters(KEY_STEERING_WHEEL_ANGLE, steeringWheelAngle);\n+    }\n+    public Boolean getSteeringWheelAngle() {\n+        return getBoolean(KEY_STEERING_WHEEL_ANGLE);\n+    }                \n+    public void setECallInfo(Boolean eCallInfo) {\n+        setParameters(KEY_E_CALL_INFO, eCallInfo);\n+    }\n+    public Boolean getECallInfo() {\n+        return getBoolean(KEY_E_CALL_INFO);\n+    }    \n+    \n+    \n+    public void setAirbagStatus(Boolean airbagStatus) {\n+        setParameters(KEY_AIRBAG_STATUS, airbagStatus);\n+    }\n+    public Boolean getAirbagStatus() {\n+        return getBoolean(KEY_AIRBAG_STATUS);\n+    }\n+    public void setEmergencyEvent(Boolean emergencyEvent) {\n+        setParameters(KEY_EMERGENCY_EVENT, emergencyEvent);\n+    }\n+    public Boolean getEmergencyEvent() {\n+        return getBoolean(KEY_EMERGENCY_EVENT);\n+    }\n+    public void setClusterModeStatus(Boolean clusterModeStatus) {\n+        setParameters(KEY_CLUSTER_MODE_STATUS, clusterModeStatus);\n+    }\n+    public Boolean getClusterModeStatus() {\n+        return getBoolean(KEY_CLUSTER_MODE_STATUS);\n+    }\n+    public void setMyKey(Boolean myKey) {\n+        setParameters(KEY_MY_KEY, myKey);\n+    }\n+    public Boolean getMyKey() {\n+        return getBoolean(KEY_MY_KEY);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets fuelRange data\n+     * @param fuelRange\n+      *            a boolean value\n+     */\n+    public void setFuelRange(Boolean fuelRange) {\n+        setParameters(KEY_FUEL_RANGE, fuelRange);\n+    }\n+\n+    /**\n+     * Gets a boolean value.\n+     *\n+     * @return Boolean -a Boolean value.\n+     *\n+     */\n+    public Boolean getFuelRange() {\n+        return getBoolean(KEY_FUEL_RANGE);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes turnSignal data\n+     * @param turnSignal a boolean value\n+     */\n+    public void setTurnSignal(Boolean turnSignal) { setParameters(KEY_TURN_SIGNAL, turnSignal); }\n+\n+    /**\n+     * Gets a boolean value. If true, means the turnSignal data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getTurnSignal() { return getBoolean(KEY_TURN_SIGNAL); }\n+\n+    /**\n+     * Sets a boolean value. If true, subscribes electronicParkBrakeStatus data\n+     * @param electronicParkBrakeStatus a boolean value\n+     */\n+    public void setElectronicParkBrakeStatus(Boolean electronicParkBrakeStatus){\n+        setParameters(KEY_ELECTRONIC_PARK_BRAKE_STATUS, electronicParkBrakeStatus);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the electronicParkBrakeStatus data has been subscribed.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getElectronicParkBrakeStatus(){\n+        return getBoolean(KEY_ELECTRONIC_PARK_BRAKE_STATUS);\n+    }\n+\n+    /**\n+     * Sets a boolean value. If true, gets the cloudAppVehicleID data\n+     * @param cloudAppVehicleID a boolean value\n+     */\n+    public void setCloudAppVehicleID(boolean cloudAppVehicleID){\n+        setParameters(KEY_CLOUD_APP_VEHICLE_ID, cloudAppVehicleID);\n+    }\n+\n+    /**\n+     * Gets a boolean value. If true, means the cloudAppVehicleDataID data has been set to retrieve.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getCloudAppVehicleID(){\n+        return getBoolean(KEY_CLOUD_APP_VEHICLE_ID);\n+    }\n+\n+    /**\n+     * Sets a boolean value for OEM Custom VehicleData.\n+     * @param vehicleDataName a String value\n+     * @param vehicleDataState a boolean value\n+     */\n+    public void setOEMCustomVehicleData(String vehicleDataName, Boolean vehicleDataState){\n+        setParameters(vehicleDataName, vehicleDataState);\n+    }\n+\n+    /**\n+     * Gets a boolean value for OEM Custom VehicleData.\n+     * @return a Boolean value.\n+     */\n+    public Boolean getOEMCustomVehicleData(String vehicleDataName){\n+        return getBoolean(vehicleDataName);\n+    }\n+\n+    /**\n+     * Sets the handsOffSteering.\n+     *\n+     * @param handsOffSteering To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setHandsOffSteering(Boolean handsOffSteering) {\n+        setParameters(KEY_HANDS_OFF_STEERING, handsOffSteering);\n+    }\n+\n+    /**\n+     * Gets the handsOffSteering.\n+     *\n+     * @return Boolean To indicate whether driver hands are off the steering wheel\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getHandsOffSteering() {\n+        return getBoolean(KEY_HANDS_OFF_STEERING);\n+    }\n+\n+    /**\n+     * Sets the stabilityControlsStatus.\n+     *\n+     * @param stabilityControlsStatus See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public void setStabilityControlsStatus(Boolean stabilityControlsStatus) {\n+        setParameters(KEY_STABILITY_CONTROLS_STATUS, stabilityControlsStatus);\n+    }\n+\n+    /**\n+     * Gets the stabilityControlsStatus.\n+     *\n+     * @return Boolean See StabilityControlsStatus\n+     * @since SmartDeviceLink 7.0.0\n+     */\n+    public Boolean getStabilityControlsStatus() {\n+        return getBoolean(KEY_STABILITY_CONTROLS_STATUS);\n+    }\n+}\n", "next_change": null}]}}]}}, {"oid": "06cac6d50ca172b39774d7a378d1c09ce474f0eb", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/06cac6d50ca172b39774d7a378d1c09ce474f0eb", "message": "[0253]\n    - Regenerate using generator\n    - Fix formatting", "committedDate": "2020-07-23T20:19:58Z", "type": "commit"}, {"oid": "3422e5053da6c21e778a092e66a32719eb12b6a1", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/3422e5053da6c21e778a092e66a32719eb12b6a1", "message": "[0253]\n    - Rollback formatting changes\n    - Change order of methods to make the diff clear", "committedDate": "2020-07-28T10:30:23Z", "type": "commit"}, {"oid": "558d5272908b4982e57d325d0846f8c24f00bf01", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/558d5272908b4982e57d325d0846f8c24f00bf01", "message": "[0253]\n    - Rollback of UnsubscribeVehicleDataResponse", "committedDate": "2020-08-03T07:55:19Z", "type": "commit"}, {"oid": "7e932306ed8f05b42456833435f93d9bcaebc705", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/7e932306ed8f05b42456833435f93d9bcaebc705", "message": "[0253]\n    - Rollback of UnsubscribeVehicleData", "committedDate": "2020-08-03T08:09:06Z", "type": "commit"}, {"oid": "f371ad4dc899169c18166d63949f0ec85c2d341d", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/f371ad4dc899169c18166d63949f0ec85c2d341d", "message": "[0253]\n    - Rollback of SubscribeVehicleDataResponse", "committedDate": "2020-08-03T08:11:07Z", "type": "commit"}, {"oid": "5d963151b3ac02acff370389faecfc860f40850b", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5d963151b3ac02acff370389faecfc860f40850b", "message": "[0253]\n    - Rollback of SubscribeVehicleData", "committedDate": "2020-08-03T08:23:36Z", "type": "commit"}, {"oid": "81c14f022949b1fe525613b3cda0b21dc3277575", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/81c14f022949b1fe525613b3cda0b21dc3277575", "message": "[0253]\n    - Rollback of OnVehicleData", "committedDate": "2020-08-03T08:34:16Z", "type": "commit"}, {"oid": "5023e76e54aa6433dd9c98f42929f8cf2b45bc05", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5023e76e54aa6433dd9c98f42929f8cf2b45bc05", "message": "[0253]\n    - Rollback of GetVehicleDataResponse", "committedDate": "2020-08-03T08:37:12Z", "type": "commit"}, {"oid": "abbf3566b3ab00aee4739ef3de1325c7f2eb28dd", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/abbf3566b3ab00aee4739ef3de1325c7f2eb28dd", "message": "[0253]\n    - Rollback of GetVehicleData", "committedDate": "2020-08-03T08:43:53Z", "type": "commit"}, {"oid": "56a2d97385ac35bede9b7edfd7570814fb8810ea", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/56a2d97385ac35bede9b7edfd7570814fb8810ea", "message": "[0253]\n    - Rollback of VehicleDataType", "committedDate": "2020-08-03T08:46:08Z", "type": "commit"}, {"oid": "524b3d8d71c727d553e01bf99ac715989a8e8398", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/524b3d8d71c727d553e01bf99ac715989a8e8398", "message": "[0253]\n    - Rollback of UnsubscribeVehicleData", "committedDate": "2020-08-03T08:47:50Z", "type": "commit"}, {"oid": "8316ec6cfdf9b5f228765a8b1b8475950e54de61", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/8316ec6cfdf9b5f228765a8b1b8475950e54de61", "message": "Merge branch 'develop' into fork/0253_new_vehicle_data_stability_control_status\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/assets/json/SubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/assets/json/UnsubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/enums/VehicleDataTypeTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/notifications/OnVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/GetVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/SubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/SubscribeVehicleDataResponseTest.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "committedDate": "2020-08-07T12:20:20Z", "type": "commit"}, {"oid": "72acd3a5544effbba7074349f0e6e2ca772a7b91", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/72acd3a5544effbba7074349f0e6e2ca772a7b91", "message": "[0253]\n    - Fix VehicleDataType", "committedDate": "2020-08-07T12:22:32Z", "type": "commit"}, {"oid": "dd54e47aeb1a0b0eb18445e22e04350334572c06", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/dd54e47aeb1a0b0eb18445e22e04350334572c06", "message": "[0253]\n    - Fix compilation errors on merge", "committedDate": "2020-08-07T12:54:58Z", "type": "commit"}, {"oid": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "message": "Revert LF to CRLF line separators", "committedDate": "2020-08-10T12:38:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1NDQzNQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r468754435", "body": "```suggestion\r\n    public VehicleDataStatus getTrailerSwayControl() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public VehicleDataStatus getTrailerSWayControl() {\n          \n          \n            \n                public VehicleDataStatus getTrailerSwayControl() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">getTrailerSWayControl</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"x x-first x-last\">getTrailerSwayControl</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-11T17:43:04Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n+    }\n+\n+    /***\n+     * sets TrailerSwayControl\n+     * @param status VehicleDataStatus\n+     */\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n+        setValue(KEY_TRAILER_SWAY_CONTROL, status);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for trailerSwayControl\n+     */\n+    public VehicleDataStatus getTrailerSWayControl() {", "originalCommit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2MzQ3MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r469263470", "bodyText": "Also, fix all calls of this methods in the test files", "author": "JulianKast", "createdAt": "2020-08-12T13:35:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1NDQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0OTU4Mg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479149582", "bodyText": "@JulianKast I didn't understand what should be updated", "author": "kboskin", "createdAt": "2020-08-28T11:18:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1NDQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzc2NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823765", "bodyText": "The W in Sway should not be capitalized.", "author": "JulianKast", "createdAt": "2020-08-30T22:27:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1NDQzNQ=="}], "type": "inlineReview", "revised_code": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -86,31 +88,37 @@ public class StabilityControlsStatus extends RPCStruct {\n         super(hash);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for escSystem\n+    /**\n+     * Gets the escSystem.\n+     *\n+     * @return VehicleDataStatus true if vehicle stability control is ON, else false\n      */\n     public VehicleDataStatus getEscSystem() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n-    /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the escSystem.\n+     *\n+     * @param escSystem true if vehicle stability control is ON, else false\n      */\n     public void setEscSystem(VehicleDataStatus escSystem) {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI1ODgyNg==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r469258826", "body": "```suggestion\r\n *  \r\n\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             *  *\n          \n          \n            \n             *", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k x x-first x-last\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-12T13:28:10Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java", "diffHunk": "@@ -267,6 +267,14 @@\n  *          <td>N</td>\r\n  *          <td>SmartDeviceLink 7.0.0</td>\r\n  *      </tr>\r\n+ * \t\t<tr>\r\n+ * \t      \t<td>stabilityControlsStatus</td>\r\n+ *        \t<td>Boolean</td>\r\n+ *        \t<td>See StabilityControlsStatus</td>\r\n+ *        \t<td>N</td>\r\n+ *        \t<td>SmartDeviceLink 7.0.0</td>\r\n+ *    \t</tr>\r\n+ *  *\r", "originalCommit": "5da3ca233f48b7cc6369c19b03c2c94d33eeb437", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 1d903b094..214a28d47 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -267,6 +281,13 @@ import java.util.Hashtable;\n  *          <td>N</td>\n  *          <td>SmartDeviceLink 7.0.0</td>\n  *      </tr>\n+ *      <tr>\n+ *          <td>windowStatus</td>\n+ *          <td>Boolean</td>\n+ *          <td>See WindowStatus</td>\n+ *          <td>N</td>\n+ *          <td>SmartDeviceLink 7.0.0</td>\n+ *      </tr>\n  * \t\t<tr>\n  * \t      \t<td>stabilityControlsStatus</td>\n  *        \t<td>Boolean</td>\n", "next_change": {"commit": "28579a3565b5f171667f30539f8885e0c425ed42", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\nindex 214a28d47..663f8fbf8 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n", "chunk": "@@ -295,7 +295,8 @@ import java.util.Hashtable;\n  *        \t<td>N</td>\n  *        \t<td>SmartDeviceLink 7.0.0</td>\n  *    \t</tr>\n- *  *\n+ *  \n+\n  *  </table>\n  * <p><b> Response</b></p>\n  * <p><b>Non-default Result Codes:</b></p>\n", "next_change": null}]}}]}}, {"oid": "e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/e21e7c4fd9bdbf7c455223c011dccf7a650a5a7b", "message": "Merge branch 'develop' into fork/0253_new_vehicle_data_stability_control_status\n\n# Conflicts:\n#\tandroid/sdl_android/src/androidTest/assets/json/GetVehicleData.json\n#\tandroid/sdl_android/src/androidTest/assets/json/SubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/assets/json/UnsubscribeVehicleData.json\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/TestValues.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/Validator.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/VehicleDataHelper.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/enums/VehicleDataTypeTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/notifications/OnVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/GetVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/SubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/requests/UnsubscribeVehicleDataTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/GetVehicleDataResponseTests.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/SubscribeVehicleDataResponseTest.java\n#\tandroid/sdl_android/src/androidTest/java/com/smartdevicelink/test/rpc/responses/UnsubscribeVehicleDataResponseTest.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "committedDate": "2020-08-28T09:09:24Z", "type": "commit"}, {"oid": "38a251938996fe42750d99ef8968ebc7117907ac", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/38a251938996fe42750d99ef8968ebc7117907ac", "message": "[0253]\n    - Fix errors after merging dev", "committedDate": "2020-08-28T09:13:09Z", "type": "commit"}, {"oid": "91199c0e9f0b65c82723042c220cba2daf0eedc1", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/91199c0e9f0b65c82723042c220cba2daf0eedc1", "message": "Merge remote-tracking branch 'origin/fork/0253_new_vehicle_data_stability_control_status' into fork/0253_new_vehicle_data_stability_control_status\n\n# Conflicts:\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/GetVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/OnVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/SubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleDataResponse.java\n#\tbase/src/main/java/com/smartdevicelink/proxy/rpc/enums/VehicleDataType.java", "committedDate": "2020-08-28T09:15:50Z", "type": "commit"}, {"oid": "28579a3565b5f171667f30539f8885e0c425ed42", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/28579a3565b5f171667f30539f8885e0c425ed42", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/UnsubscribeVehicleData.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-28T09:34:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzIzNw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823237", "body": "```suggestion\r\n/**\r\n *\r\n * <p><b>Parameter List</b></p>\r\n *\r\n * <table border=\"1\" rules=\"all\">\r\n *  <tr>\r\n *      <th>Param Name</th>\r\n *      <th>Type</th>\r\n *      <th>Description</th>\r\n *      <th>Required</th>\r\n *      <th>Notes</th>\r\n *      <th>Version Available</th>\r\n *  </tr>\r\n *  <tr>\r\n *      <td>escSystem</td>\r\n *      <td>VehicleDataStatus</td>\r\n *      <td>true if vehicle stability control is ON, else false</td>\r\n *      <td>N</td>\r\n *      <td></td>\r\n *      <td></td>\r\n *  </tr>\r\n *  <tr>\r\n *      <td>trailerSwayControl</td>\r\n *      <td>VehicleDataStatus</td>\r\n *      <td>true if vehicle trailer sway control is ON, else false</td>\r\n *      <td>N</td>\r\n *      <td></td>\r\n *      <td></td>\r\n *  </tr>\r\n * </table>\r\n * @since SmartDeviceLink 7.0.0\r\n */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /**\n          \n          \n            \n             * <p><b>Parameter List</b></p>\n          \n          \n            \n             *\n          \n          \n            \n             * <table border=\"1\" rules=\"all\">\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <th>Param Name</th>\n          \n          \n            \n             *      <th>Type</th>\n          \n          \n            \n             *      <th>Description</th>\n          \n          \n            \n             *      <th>Required</th>\n          \n          \n            \n             *      <th>Version Available</th>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>escSystem</td>\n          \n          \n            \n             *      <td>VehicleDataStatus</td>\n          \n          \n            \n             *      <td>true if vehicle stability control is ON, else false</td>\n          \n          \n            \n             *      <td>N</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>trailerSwayControl</td>\n          \n          \n            \n             *      <td>VehicleDataStatus</td>\n          \n          \n            \n             *      <td>true if vehicle trailer sway control is ON, else false</td>\n          \n          \n            \n             *      <td>N</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             * </table>\n          \n          \n            \n             *\n          \n          \n            \n             * @since SmartDeviceLink 6.2.0\n          \n          \n            \n             */\n          \n          \n            \n            /**\n          \n          \n            \n             *\n          \n          \n            \n             * <p><b>Parameter List</b></p>\n          \n          \n            \n             *\n          \n          \n            \n             * <table border=\"1\" rules=\"all\">\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <th>Param Name</th>\n          \n          \n            \n             *      <th>Type</th>\n          \n          \n            \n             *      <th>Description</th>\n          \n          \n            \n             *      <th>Required</th>\n          \n          \n            \n             *      <th>Notes</th>\n          \n          \n            \n             *      <th>Version Available</th>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>escSystem</td>\n          \n          \n            \n             *      <td>VehicleDataStatus</td>\n          \n          \n            \n             *      <td>true if vehicle stability control is ON, else false</td>\n          \n          \n            \n             *      <td>N</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             *  <tr>\n          \n          \n            \n             *      <td>trailerSwayControl</td>\n          \n          \n            \n             *      <td>VehicleDataStatus</td>\n          \n          \n            \n             *      <td>true if vehicle trailer sway control is ON, else false</td>\n          \n          \n            \n             *      <td>N</td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *      <td></td>\n          \n          \n            \n             *  </tr>\n          \n          \n            \n             * </table>\n          \n          \n            \n             * @since SmartDeviceLink 7.0.0\n          \n          \n            \n             */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;&lt;</span>b<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Parameter</span> <span class=\"pl-k\">List&lt;/</span>b<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>p<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>table border<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span></span> rules<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Param</span> <span class=\"pl-k\">Name&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Type&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Description&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Required&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Version</span> <span class=\"pl-k\">Available&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span>escSystem<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">VehicleDataStatus&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle stability control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">N&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span>trailerSwayControl<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">VehicleDataStatus&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle trailer sway control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">N&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>table<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">6.2</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;&lt;</span>b<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Parameter</span> <span class=\"pl-k\">List&lt;/</span>b<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>p<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>table border<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span></span> rules<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>all<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Param</span> <span class=\"pl-k\">Name&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"77\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Type&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"78\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Description&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Required&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"80\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">Notes&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"81\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>th<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Version</span> <span class=\"pl-k\">Available&lt;/</span>th<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"82\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"83\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"84\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span>escSystem<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">VehicleDataStatus&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle stability control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">N&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"91\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span>trailerSwayControl<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">VehicleDataStatus&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle trailer sway control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span><span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;</span><span class=\"pl-k\">N&lt;/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>      <span class=\"pl-k\">&lt;</span>td<span class=\"pl-k\">&gt;&lt;</span><span class=\"pl-k\">/</span>td<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span>  <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>tr<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"99\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>table<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"100\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@since</span> <span class=\"pl-smi\">SmartDeviceLink</span> <span class=\"pl-c1\">7.0</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">0</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"101\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:22:32Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "71077ab43a99eb4430e87c542a380694263e85d9", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..b72c681b9 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -60,10 +63,10 @@ import java.util.Hashtable;\n  *      <td>true if vehicle trailer sway control is ON, else false</td>\n  *      <td>N</td>\n  *      <td></td>\n+ *      <td></td>\n  *  </tr>\n  * </table>\n- *\n- * @since SmartDeviceLink 6.2.0\n+ * @since SmartDeviceLink 7.0.0\n  */\n public class StabilityControlsStatus extends RPCStruct {\n     public static final String KEY_ESC_SYSTEM = \"escSystem\";\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzM2MQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823361", "body": "```suggestion\r\n    public StabilityControlsStatus() { }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public StabilityControlsStatus() {\n          \n          \n            \n                }\n          \n          \n            \n                public StabilityControlsStatus() { }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> StabilityControlsStatus() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> StabilityControlsStatus() { }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:24:09Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "2e0e673b90ef30b132d8333bd9e5bedbcfc92ad5", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..ddf5228ab 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -73,8 +76,7 @@ public class StabilityControlsStatus extends RPCStruct {\n     /**\n      * Constructs a new StabilityControlsStatus object\n      */\n-    public StabilityControlsStatus() {\n-    }\n+    public StabilityControlsStatus() { }\n \n     /**\n      * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n", "next_change": {"commit": "130dff787acfc3771308c1ce72f026cec42d05e3", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex ddf5228ab..277275c52 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -79,8 +79,7 @@ public class StabilityControlsStatus extends RPCStruct {\n     public StabilityControlsStatus() { }\n \n     /**\n-     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n-     * </p>\n+     * Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n      *\n      * @param hash The Hashtable to use\n      */\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzU1Mw==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823553", "body": "```suggestion\r\n    /**\r\n     * Sets the escSystem.\r\n     *\r\n     * @param escSystem true if vehicle stability control is ON, else false\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /***\n          \n          \n            \n                 * sets EscSystem\n          \n          \n            \n                 * @param status VehicleDataStatus\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the escSystem.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param escSystem true if vehicle stability control is ON, else false\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>**</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> sets <span class=\"pl-smi\">EscSystem</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> status <span class=\"pl-smi\">VehicleDataStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the escSystem.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> escSystem <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle stability control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:25:32Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzYwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823601", "body": "```suggestion\r\n    /**\r\n     * Gets the escSystem.\r\n     *\r\n     * @return VehicleDataStatus true if vehicle stability control is ON, else false\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /***\n          \n          \n            \n                 * @return VehicleDataStatus for escSystem\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the escSystem.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return VehicleDataStatus true if vehicle stability control is ON, else false\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>**</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-k\">for</span> escSystem</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the escSystem.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle stability control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:26:07Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10853904e07fe5ce75aa3b4e6e7d4163a72b9be0", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..dd1bb1091 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -86,8 +89,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         super(hash);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for escSystem\n+    /**\n+     * Gets the escSystem.\n+     *\n+     * @return VehicleDataStatus true if vehicle stability control is ON, else false\n      */\n     public VehicleDataStatus getEscSystem() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n", "next_change": {"commit": "040c34ee5c604836db1e57ecfbde124f8379d6b3", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex dd1bb1091..2bf0b3043 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -98,9 +97,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n-    /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the escSystem.\n+     *\n+     * @param escSystem true if vehicle stability control is ON, else false\n      */\n     public void setEscSystem(VehicleDataStatus escSystem) {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyMzk2NQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479823965", "body": "```suggestion\r\n    /**\r\n     * Sets the trailerSwayControl.\r\n     *\r\n     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /***\n          \n          \n            \n                 * sets TrailerSwayControl\n          \n          \n            \n                 * @param status VehicleDataStatus\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Sets the trailerSwayControl.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>**</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"113\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> sets <span class=\"pl-smi\">TrailerSwayControl</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> status <span class=\"pl-smi\">VehicleDataStatus</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"115\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"113\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Sets</span> the trailerSwayControl.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"114\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"115\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> trailerSwayControl <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle trailer sway control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"116\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:30:17Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n+    }\n+\n+    /***\n+     * sets TrailerSwayControl\n+     * @param status VehicleDataStatus\n+     */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyNDEwMQ==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479824101", "body": "```suggestion\r\n    /**\r\n     * Gets the trailerSwayControl.\r\n     *\r\n     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /***\n          \n          \n            \n                 * @return VehicleDataStatus for trailerSwayControl\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Gets the trailerSwayControl.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"121\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/*</span>**</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"122\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-k\">for</span> trailerSwayControl</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"123\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"121\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"122\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Gets</span> the trailerSwayControl.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"123\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"124\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">VehicleDataStatus</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> vehicle trailer sway control is <span class=\"pl-c1\">ON</span>, <span class=\"pl-k\">else</span> <span class=\"pl-c1\">false</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"125\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:31:18Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */\n+    public StabilityControlsStatus(Hashtable<String, Object> hash) {\n+        super(hash);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for escSystem\n+     */\n+    public VehicleDataStatus getEscSystem() {\n+        return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n+    }\n+\n+    /***\n+     * sets EscSystem\n+     * @param status VehicleDataStatus\n+     */\n+    public void setEscSystem(VehicleDataStatus escSystem) {\n+        setValue(KEY_ESC_SYSTEM, escSystem);\n+    }\n+\n+    /***\n+     * sets TrailerSwayControl\n+     * @param status VehicleDataStatus\n+     */\n+    public void setTrailerSwayControl(VehicleDataStatus status) {\n+        setValue(KEY_TRAILER_SWAY_CONTROL, status);\n+    }\n+\n+    /***\n+     * @return VehicleDataStatus for trailerSwayControl\n+     */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "76559923f40c9a85f335a9d78546c2be6ae96370", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..485ecc557 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -101,9 +104,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n     }\n \n-    /***\n-     * sets TrailerSwayControl\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the trailerSwayControl.\n+     *\n+     * @param trailerSwayControl true if vehicle trailer sway control is ON, else false\n      */\n     public void setTrailerSwayControl(VehicleDataStatus status) {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n", "next_change": {"commit": "1b1d34d0d145044221ffbbe448b512852bee08bd", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 485ecc557..35cd47b6a 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -113,8 +115,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         setValue(KEY_TRAILER_SWAY_CONTROL, status);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for trailerSwayControl\n+    /**\n+     * Gets the trailerSwayControl.\n+     *\n+     * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n     public VehicleDataStatus getTrailerSWayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n", "next_change": {"commit": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex 35cd47b6a..5ee5eb0b4 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -120,7 +119,7 @@ public class StabilityControlsStatus extends RPCStruct {\n      *\n      * @return VehicleDataStatus true if vehicle trailer sway control is ON, else false\n      */\n-    public VehicleDataStatus getTrailerSWayControl() {\n+    public VehicleDataStatus getTrailerSwayControl() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_TRAILER_SWAY_CONTROL);\n     }\n }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgyNDE4MA==", "url": "https://github.com/smartdevicelink/sdl_java_suite/pull/1394#discussion_r479824180", "body": "```suggestion\r\n    /**\r\n     * Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\r\n     *\r\n     * @param hash The Hashtable to use\r\n     */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n          \n          \n            \n                 * </p>\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param hash The Hashtable to use\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param hash The Hashtable to use\n          \n          \n            \n                 */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">Constructs</span> a <span class=\"pl-k\">new</span> StabilityControlsStatus object indicated by the Hashtable parameter</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">/</span>p<span class=\"pl-k\">&gt;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> hash <span class=\"pl-smi\">The</span> <span class=\"pl-smi\">Hashtable</span> to use</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"90\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"85\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"86\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Constructs</span> a <span class=\"pl-k\">new</span> StabilityControlsStatus object indicated by the Hashtable parameter</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"88\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> hash <span class=\"pl-smi\">The</span> <span class=\"pl-smi\">Hashtable</span> to use</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"89\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "JulianKast", "createdAt": "2020-08-30T22:32:37Z", "path": "base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Copyright (c) 2017 - 2020, SmartDeviceLink Consortium, Inc.\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * Redistributions of source code must retain the above copyright notice, this\n+ * list of conditions and the following disclaimer.\n+ *\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following\n+ * disclaimer in the documentation and/or other materials provided with the\n+ * distribution.\n+ *\n+ * Neither the name of the SmartDeviceLink Consortium Inc. nor the names of\n+ * its contributors may be used to endorse or promote products derived\n+ * from this software without specific prior written permission.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+ * POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package com.smartdevicelink.proxy.rpc;\n+\n+import com.smartdevicelink.proxy.RPCStruct;\n+import com.smartdevicelink.proxy.rpc.enums.VehicleDataStatus;\n+\n+import java.util.Hashtable;\n+\n+/**\n+ * <p><b>Parameter List</b></p>\n+ *\n+ * <table border=\"1\" rules=\"all\">\n+ *  <tr>\n+ *      <th>Param Name</th>\n+ *      <th>Type</th>\n+ *      <th>Description</th>\n+ *      <th>Required</th>\n+ *      <th>Version Available</th>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>escSystem</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle stability control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ *  <tr>\n+ *      <td>trailerSwayControl</td>\n+ *      <td>VehicleDataStatus</td>\n+ *      <td>true if vehicle trailer sway control is ON, else false</td>\n+ *      <td>N</td>\n+ *      <td></td>\n+ *  </tr>\n+ * </table>\n+ *\n+ * @since SmartDeviceLink 6.2.0\n+ */\n+public class StabilityControlsStatus extends RPCStruct {\n+    public static final String KEY_ESC_SYSTEM = \"escSystem\";\n+    public static final String KEY_TRAILER_SWAY_CONTROL = \"trailerSwayControl\";\n+\n+\n+    /**\n+     * Constructs a new StabilityControlsStatus object\n+     */\n+    public StabilityControlsStatus() {\n+    }\n+\n+    /**\n+     * <p>Constructs a new StabilityControlsStatus object indicated by the Hashtable parameter\n+     * </p>\n+     *\n+     * @param hash The Hashtable to use\n+     */", "originalCommit": "28579a3565b5f171667f30539f8885e0c425ed42", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "10853904e07fe5ce75aa3b4e6e7d4163a72b9be0", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex f677ef909..dd1bb1091 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -86,8 +89,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         super(hash);\n     }\n \n-    /***\n-     * @return VehicleDataStatus for escSystem\n+    /**\n+     * Gets the escSystem.\n+     *\n+     * @return VehicleDataStatus true if vehicle stability control is ON, else false\n      */\n     public VehicleDataStatus getEscSystem() {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n", "next_change": {"commit": "040c34ee5c604836db1e57ecfbde124f8379d6b3", "changed_code": [{"header": "diff --git a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\nindex dd1bb1091..2bf0b3043 100644\n--- a/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n+++ b/base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n", "chunk": "@@ -98,9 +97,10 @@ public class StabilityControlsStatus extends RPCStruct {\n         return (VehicleDataStatus) getObject(VehicleDataStatus.class, KEY_ESC_SYSTEM);\n     }\n \n-    /***\n-     * sets EscSystem\n-     * @param status VehicleDataStatus\n+    /**\n+     * Sets the escSystem.\n+     *\n+     * @param escSystem true if vehicle stability control is ON, else false\n      */\n     public void setEscSystem(VehicleDataStatus escSystem) {\n         setValue(KEY_ESC_SYSTEM, escSystem);\n", "next_change": null}]}}]}}, {"oid": "71077ab43a99eb4430e87c542a380694263e85d9", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/71077ab43a99eb4430e87c542a380694263e85d9", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:27:51Z", "type": "commit"}, {"oid": "76559923f40c9a85f335a9d78546c2be6ae96370", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/76559923f40c9a85f335a9d78546c2be6ae96370", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:28:02Z", "type": "commit"}, {"oid": "10853904e07fe5ce75aa3b4e6e7d4163a72b9be0", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/10853904e07fe5ce75aa3b4e6e7d4163a72b9be0", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:28:12Z", "type": "commit"}, {"oid": "2e0e673b90ef30b132d8333bd9e5bedbcfc92ad5", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/2e0e673b90ef30b132d8333bd9e5bedbcfc92ad5", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:28:56Z", "type": "commit"}, {"oid": "040c34ee5c604836db1e57ecfbde124f8379d6b3", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/040c34ee5c604836db1e57ecfbde124f8379d6b3", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:29:05Z", "type": "commit"}, {"oid": "1b1d34d0d145044221ffbbe448b512852bee08bd", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1b1d34d0d145044221ffbbe448b512852bee08bd", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:29:58Z", "type": "commit"}, {"oid": "130dff787acfc3771308c1ce72f026cec42d05e3", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/130dff787acfc3771308c1ce72f026cec42d05e3", "message": "Update base/src/main/java/com/smartdevicelink/proxy/rpc/StabilityControlsStatus.java\n\nCo-authored-by: Julian Kast <Julian.kast@livio.io>", "committedDate": "2020-08-31T07:30:09Z", "type": "commit"}, {"oid": "1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "url": "https://github.com/smartdevicelink/sdl_java_suite/commit/1b91f6aa0d4ea8470fec851c692c59ca502a3abf", "message": "[0253]\n    - Rename trailerSWayControl -> trailersWayControl", "committedDate": "2020-08-31T07:32:42Z", "type": "commit"}]}