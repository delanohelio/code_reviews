{"pr_number": 3885, "pr_title": "NXP-26704: allow storing fulltext in blobs", "pr_author": "efge", "pr_createdAt": "2020-04-02T17:40:22Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3885", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyMjU4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402822584", "body": "Since 11.1.", "bodyText": "Since 11.1.", "bodyHTML": "<p dir=\"auto\">Since 11.1.</p>", "author": "troger", "createdAt": "2020-04-03T08:19:30Z", "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSRepositoryDescriptor.java", "diffHunk": "@@ -70,6 +70,11 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDescriptor.setFulltextDisabled(disabled);\n     }\n \n+    @XNode(\"fulltext@storedInBlob\")\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgyNDQxMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402824410", "body": "What about:\r\n```java\r\nif (fulltextStoredInBlob && fulltext != null)\r\n```", "bodyText": "What about:\nif (fulltextStoredInBlob && fulltext != null)", "bodyHTML": "<p dir=\"auto\">What about:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (fulltextStoredInBlob &amp;&amp; fulltext != null)\"><pre><span class=\"pl-k\">if</span> (fulltextStoredInBlob <span class=\"pl-k\">&amp;&amp;</span> fulltext <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>)</pre></div>", "author": "troger", "createdAt": "2020-04-03T08:21:34Z", "path": "modules/core/nuxeo-core-storage-dbs/src/main/java/org/nuxeo/ecm/core/storage/dbs/DBSSession.java", "diffHunk": "@@ -1547,10 +1554,29 @@ protected static ACP memToAcp(Serializable acpSer) {\n         return acp;\n     }\n \n+    @Override\n+    public boolean isFulltextStoredInBlob() {\n+        return fulltextStoredInBlob;\n+    }\n+\n     @Override\n     public Map<String, String> getBinaryFulltext(String id) {\n         State state = transaction.getStateForRead(id);\n         String fulltext = (String) state.get(KEY_FULLTEXT_BINARY);\n+        if (fulltextStoredInBlob) {\n+            String key = fulltext;\n+            if (key != null) {", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMTQ4Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402901482", "body": "Since 11.1", "bodyText": "Since 11.1", "bodyHTML": "<p dir=\"auto\">Since 11.1</p>", "author": "troger", "createdAt": "2020-04-03T10:11:10Z", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/RepositoryDescriptor.java", "diffHunk": "@@ -318,6 +318,11 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDescriptor.setFulltextDisabled(disabled);\n     }\n \n+    @XNode(\"indexing/fulltext@storedInBlob\")\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMzM4NA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402903384", "body": "```suggestion\r\n        String key = map.get(\"binarytext\");\r\n        if (fulltextDescriptor.getFulltextStoredInBlob() && key != null) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fulltextDescriptor.getFulltextStoredInBlob()) {\n          \n          \n            \n                        String key = map.get(\"binarytext\");\n          \n          \n            \n                        if (key != null) {\n          \n          \n            \n                    String key = map.get(\"binarytext\");\n          \n          \n            \n                    if (fulltextDescriptor.getFulltextStoredInBlob() && key != null) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (fulltextDescriptor<span class=\"pl-k\">.</span>getFulltextStoredInBlob()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> key <span class=\"pl-k\">=</span> map<span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binarytext<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (key <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> key <span class=\"pl-k\">=</span> map<span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>binarytext<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (fulltextDescriptor<span class=\"pl-k\">.</span>getFulltextStoredInBlob() <span class=\"pl-k\">&amp;&amp;</span> key <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "troger", "createdAt": "2020-04-03T10:14:58Z", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/SessionImpl.java", "diffHunk": "@@ -1475,13 +1484,34 @@ public long getCacheSelectionSize() {\n         return context.getCacheSelectionSize();\n     }\n \n+    @Override\n+    public boolean isFulltextStoredInBlob() {\n+        return fulltextDescriptor.getFulltextStoredInBlob();\n+    }\n+\n     @Override\n     public Map<String, String> getBinaryFulltext(Serializable id) {\n-        if (repository.getRepositoryDescriptor().getFulltextDescriptor().getFulltextDisabled()) {\n+        if (fulltextDescriptor.getFulltextDisabled()) {\n             return null;\n         }\n         RowId rowId = new RowId(Model.FULLTEXT_TABLE_NAME, id);\n-        return mapper.getBinaryFulltext(rowId);\n+        Map<String, String> map = mapper.getBinaryFulltext(rowId);\n+        if (fulltextDescriptor.getFulltextStoredInBlob()) {\n+            String key = map.get(\"binarytext\");\n+            if (key != null) {", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMzgzNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402903834", "body": "Worth updating the class to log4j 2, nop?", "bodyText": "Worth updating the class to log4j 2, nop?", "bodyHTML": "<p dir=\"auto\">Worth updating the class to log4j 2, nop?</p>", "author": "troger", "createdAt": "2020-04-03T10:15:52Z", "path": "modules/core/nuxeo-core-storage-sql/nuxeo-core-storage-sql/src/main/java/org/nuxeo/ecm/core/storage/sql/jdbc/JDBCBackend.java", "diffHunk": "@@ -126,8 +126,9 @@ public Model initialize(RepositoryImpl repository) {\n         }\n         if (log.isDebugEnabled()) {\n             FulltextDescriptor fulltextDescriptor = repositoryDescriptor.getFulltextDescriptor();\n-            log.debug(String.format(\"Database ready, fulltext: disabled=%b searchDisabled=%b.\",\n-                    fulltextDescriptor.getFulltextDisabled(), fulltextDescriptor.getFulltextSearchDisabled()));\n+            log.debug(String.format(\"Database ready, fulltext: disabled=%b storedInBlob=%b searchDisabled=%b.\",\n+                    fulltextDescriptor.getFulltextDisabled(), fulltextDescriptor.getFulltextStoredInBlob(),\n+                    fulltextDescriptor.getFulltextSearchDisabled()));", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk3MTg1MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402971850", "bodyText": "Sure but later :)\nNote that this debug log is only seen once at startup so no performance-critical.", "author": "efge", "createdAt": "2020-04-03T12:33:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwMzgzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNjM1MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402906350", "body": "Since 11.1.", "bodyText": "Since 11.1.", "bodyHTML": "<p dir=\"auto\">Since 11.1.</p>", "author": "troger", "createdAt": "2020-04-03T10:20:37Z", "path": "modules/core/nuxeo-core-storage/src/main/java/org/nuxeo/ecm/core/storage/FulltextDescriptor.java", "diffHunk": "@@ -111,10 +111,20 @@ public void setFulltextDisabled(boolean disabled) {\n         fulltextDisabled = Boolean.valueOf(disabled);\n     }\n \n+    private Boolean fulltextStoredInBlob;\n+\n+    public boolean getFulltextStoredInBlob() {\n+        return defaultFalse(fulltextStoredInBlob);\n+    }\n+\n+    public void setFulltextStoredInBlob(boolean storedInBlob) {", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkwNzM0MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402907340", "body": "Missing blank line?", "bodyText": "Missing blank line?", "bodyHTML": "<p dir=\"auto\">Missing blank line?</p>", "author": "troger", "createdAt": "2020-04-03T10:22:36Z", "path": "modules/core/nuxeo-core-test/src/main/java/org/nuxeo/ecm/core/test/FulltextStoredInBlobFeature.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * (C) Copyright 2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.ecm.core.test;\n+\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+import org.nuxeo.runtime.test.runner.RunnerFeature;\n+\n+public class FulltextStoredInBlobFeature implements RunnerFeature {\n+    private static final String KEY = \"nuxeo.test.fulltext.storedInBlob\";", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkyMzY0NQ==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402923645", "body": "```suggestion\r\n        assertEquals(1, esRet.totalSize());\r\n```\r\nThere's another one in the class.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(1, esRet.totalSize());\n          \n          \n            \n                    assertEquals(1, esRet.totalSize());\n          \n      \n    \n    \n  \n\nThere's another one in the class.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi x x-first\">Assert</span><span class=\"pl-k x x-last\">.</span>assertEquals(<span class=\"pl-c1\">1</span>, esRet<span class=\"pl-k\">.</span>totalSize());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertEquals(<span class=\"pl-c1\">1</span>, esRet<span class=\"pl-k\">.</span>totalSize());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">There's another one in the class.</p>", "author": "kevinleturc", "createdAt": "2020-04-03T10:54:54Z", "path": "modules/platform/nuxeo-elasticsearch/nuxeo-elasticsearch-core/src/test/java/org/nuxeo/elasticsearch/test/TestFulltextStoredInBlob.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * (C) Copyright 2015-2020 Nuxeo (http://nuxeo.com/) and others.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ * Contributors:\n+ *     Benoit Delbosc\n+ *     Florent Guillaume\n+ */\n+package org.nuxeo.elasticsearch.test;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.nuxeo.ecm.core.api.DocumentModel;\n+import org.nuxeo.ecm.core.api.DocumentModelList;\n+import org.nuxeo.ecm.core.query.QueryParseException;\n+import org.nuxeo.ecm.core.test.FulltextStoredInBlobFeature;\n+import org.nuxeo.elasticsearch.query.NxQueryBuilder;\n+import org.nuxeo.runtime.test.runner.Deploy;\n+import org.nuxeo.runtime.test.runner.Features;\n+import org.nuxeo.runtime.test.runner.FeaturesRunner;\n+\n+@RunWith(FeaturesRunner.class)\n+@Features({ FulltextStoredInBlobFeature.class, RepositoryElasticSearchFeature.class })\n+@Deploy(\"org.nuxeo.elasticsearch.core:elasticsearch-test-contrib.xml\")\n+public class TestFulltextStoredInBlob extends TestFulltextEnabled {\n+\n+    @Override\n+    @Test\n+    public void testFulltext() throws Exception {\n+        createFileWithBlob();\n+        // binary fulltext extraction is done\n+        String nxql = \"SELECT * FROM Document WHERE ecm:fulltext='search'\";\n+        DocumentModelList esRet = ess.query(new NxQueryBuilder(session).nxql(nxql));\n+        Assert.assertEquals(1, esRet.totalSize());", "originalCommit": "e9a2b2dc0bda2dbd0fe2c9f2f2ebfd316b657f8b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk3MjY4Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3885#discussion_r402972682", "bodyText": "This class is actually essentially a copy of an existing one but you're right, I'll clean it up.", "author": "efge", "createdAt": "2020-04-03T12:34:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkyMzY0NQ=="}], "type": "inlineReview"}, {"oid": "be8c5e5f9ab9b4d0abba77e3c0ff7189e7d5d84d", "url": "https://github.com/nuxeo/nuxeo/commit/be8c5e5f9ab9b4d0abba77e3c0ff7189e7d5d84d", "message": "NXP-26704: move fulltext-related test features to nuxeo-core-test", "committedDate": "2020-04-03T12:36:41Z", "type": "commit"}, {"oid": "c607f41fc2814bec77380f1f9e8c49efa81673f5", "url": "https://github.com/nuxeo/nuxeo/commit/c607f41fc2814bec77380f1f9e8c49efa81673f5", "message": "NXP-26704: align internal property names in VCS and DBS, for simpler blob dispatcher config", "committedDate": "2020-04-03T12:36:41Z", "type": "commit"}, {"oid": "a19e2826ed843387ed1c586a95631cca82813a30", "url": "https://github.com/nuxeo/nuxeo/commit/a19e2826ed843387ed1c586a95631cca82813a30", "message": "NXP-26704: allow storing fulltext in blobs", "committedDate": "2020-04-03T12:36:41Z", "type": "commit"}, {"oid": "a19e2826ed843387ed1c586a95631cca82813a30", "url": "https://github.com/nuxeo/nuxeo/commit/a19e2826ed843387ed1c586a95631cca82813a30", "message": "NXP-26704: allow storing fulltext in blobs", "committedDate": "2020-04-03T12:36:41Z", "type": "forcePushed"}, {"oid": "b846e4ce35bb673096a7a357eb9859788a8d9b56", "url": "https://github.com/nuxeo/nuxeo/commit/b846e4ce35bb673096a7a357eb9859788a8d9b56", "message": "NXP-26704: use constant for binarytext key in map", "committedDate": "2020-04-03T12:57:58Z", "type": "commit"}]}