{"pr_number": 3687, "pr_title": "feature-NXP-28537-upgrade-dependencies", "pr_author": "nuxeojenkins", "pr_createdAt": "2020-01-22T18:23:00Z", "pr_url": "https://github.com/nuxeo/nuxeo/pull/3687", "timeline": [{"oid": "ea7ef3b42e28847728d73ab4aaa13f6615ff8fd4", "url": "https://github.com/nuxeo/nuxeo/commit/ea7ef3b42e28847728d73ab4aaa13f6615ff8fd4", "message": "NXP-28537: upgrade various dependencies", "committedDate": "2020-01-22T14:29:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MDgxMw==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369760813", "body": "```suggestion\r\n        // bad padding\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // bad badding\n          \n          \n            \n                    // bad padding", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> bad <span class=\"x x-first x-last\">badding</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> bad <span class=\"x x-first x-last\">padding</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ataillefer", "createdAt": "2020-01-22T19:33:29Z", "path": "nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java", "diffHunk": "@@ -98,18 +98,22 @@ public void testDecryptionFailSilently() throws Exception {\n         assertFalse(Crypto.isEncrypted(\"\"));\n         assertFalse(Crypto.isEncrypted(\"{$$}\"));\n \n+        // bad padding\n         String encryptedString = \"{$$xoWODkBtRXnsdzIBdosUFA==}\";\n         String decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // last block FB== is not valid (B is not a possible value)\n         encryptedString = \"{$$xoWODkCtRXnSuqIBdosUFB==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // illegal block size\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoGsasskNaEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // bad badding", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjExNA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369762114", "body": "What's the point of logging the beginning of the content?", "bodyText": "What's the point of logging the beginning of the content?", "bodyHTML": "<p dir=\"auto\">What's the point of logging the beginning of the content?</p>", "author": "ataillefer", "createdAt": "2020-01-22T19:36:25Z", "path": "nuxeo-core/nuxeo-core-io/src/main/java/org/nuxeo/ecm/core/io/impl/AbstractDocumentModelWriter.java", "diffHunk": "@@ -382,7 +383,18 @@ private static Object getElementData(ExportedDocument xdoc, Element element, Typ\n                 }\n                 if (blob == null) { // maybe the blob is embedded in Base64\n                     // encoded data\n-                    byte[] bytes = Base64.decodeBase64(content);\n+                    byte[] bytes;\n+                    try {\n+                        bytes = Base64.decodeBase64(content);\n+                    } catch (IllegalArgumentException e) {\n+                        // example invalid base64: fd7b9e4.blob\n+                        if (log.isDebugEnabled()) {\n+                            log.warn(\"Invalid blob base64 in document: \" + xdoc.getId() + \": \" + StringUtils.abbreviate(content, 50));", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3MzE5MA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369773190", "bodyText": "It allows for better debugging, to find out where the invalid content comes from.", "author": "efge", "createdAt": "2020-01-22T19:59:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2MjExNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2Mjg2Nw==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369762867", "body": "Isn't `false` the default value?\r\nAnd why this change? Maybe add a comment to explain the semantics.", "bodyText": "Isn't false the default value?\nAnd why this change? Maybe add a comment to explain the semantics.", "bodyHTML": "<p dir=\"auto\">Isn't <code>false</code> the default value?<br>\nAnd why this change? Maybe add a comment to explain the semantics.</p>", "author": "ataillefer", "createdAt": "2020-01-22T19:38:02Z", "path": "nuxeo-core/nuxeo-core-test/src/test/java/org/nuxeo/ecm/core/io/transform/BaseExport.java", "diffHunk": "@@ -36,7 +36,7 @@\n \n     String uuid;\n \n-    protected boolean skipBlobs = true;\n+    protected boolean skipBlobs = false;", "originalCommit": "df975063024e49cadbd45202264031a192b33e10", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc3NTU3Mg==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369775572", "bodyText": "I'm leaving the false for emphasis, although nothing ever changes it in the rest of the tests (maybe some code was removed at some point). Adding the following comment to explain:\n // don't skip blobs because otherwise when reimporting documents the\n // \"data\" field is interpreted as (invalid) base64 instead of a filename", "author": "efge", "createdAt": "2020-01-22T20:04:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2Mjg2Nw=="}], "type": "inlineReview"}, {"oid": "5f57f666a95722fb259906d635190bd1841af476", "url": "https://github.com/nuxeo/nuxeo/commit/5f57f666a95722fb259906d635190bd1841af476", "message": "NXP-28537: upgrade commons-codec", "committedDate": "2020-01-22T20:05:04Z", "type": "commit"}, {"oid": "c951666abb28c32cbd38ca8ffa48b054e421f00f", "url": "https://github.com/nuxeo/nuxeo/commit/c951666abb28c32cbd38ca8ffa48b054e421f00f", "message": "NXP-28537: upgrade javax.mail", "committedDate": "2020-01-22T20:05:04Z", "type": "commit"}, {"oid": "c951666abb28c32cbd38ca8ffa48b054e421f00f", "url": "https://github.com/nuxeo/nuxeo/commit/c951666abb28c32cbd38ca8ffa48b054e421f00f", "message": "NXP-28537: upgrade javax.mail", "committedDate": "2020-01-22T20:05:04Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyNzk2Ng==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369827966", "body": "Why doing several bad padding cases ? Maybe the answer should be in the comments ?\r\nHow about extracting the error message in a local variable ?", "bodyText": "Why doing several bad padding cases ? Maybe the answer should be in the comments ?\nHow about extracting the error message in a local variable ?", "bodyHTML": "<p dir=\"auto\">Why doing several bad padding cases ? Maybe the answer should be in the comments ?<br>\nHow about extracting the error message in a local variable ?</p>", "author": "NourNuxeo", "createdAt": "2020-01-22T22:01:19Z", "path": "nuxeo-common/src/test/java/org/nuxeo/common/codec/CryptoTest.java", "diffHunk": "@@ -98,18 +98,22 @@ public void testDecryptionFailSilently() throws Exception {\n         assertFalse(Crypto.isEncrypted(\"\"));\n         assertFalse(Crypto.isEncrypted(\"{$$}\"));\n \n+        // bad padding\n         String encryptedString = \"{$$xoWODkBtRXnsdzIBdosUFA==}\";\n         String decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // last block FB== is not valid (B is not a possible value)\n         encryptedString = \"{$$xoWODkCtRXnSuqIBdosUFB==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // illegal block size\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoGsasskNaEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);\n \n+        // bad padding\n         encryptedString = \"{$REVTL0VDQi9QS0NTNVBhZGRpbmc=$w/wCDLXoG5VFkNbEpMt0wg==}\";\n         decryptedString = new String(crypto.decrypt(encryptedString));\n         assertEquals(\"Decryption must fail silently\", decryptedString, encryptedString);", "originalCommit": "5f57f666a95722fb259906d635190bd1841af476", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMTQyMA==", "url": "https://github.com/nuxeo/nuxeo/pull/3687#discussion_r369831420", "bodyText": "These are not my tests, I just added a small bit of doc about the error cases while resolving a related issue.\nAlso this is a test, putting common error messages in variables or constants doesn't bring anything. In tests it's ok to repeat things sometimes.", "author": "efge", "createdAt": "2020-01-22T22:09:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgyNzk2Ng=="}], "type": "inlineReview"}]}