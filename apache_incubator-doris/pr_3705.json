{"pr_number": 3705, "pr_title": "Serialize origin stmt in Rollup Job and MV Meta", "pr_author": "EmmyMiao87", "pr_createdAt": "2020-05-27T12:14:08Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3705", "timeline": [{"oid": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "url": "https://github.com/apache/incubator-doris/commit/9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "message": "Serialize origin stmt in Rollup Job and MV Meta\n\nIn materialized view 2.0, the define expr is serialized in column.\nThe method is that doris serialzie the origin stmt of Create Materialzied View Stmt in RollupJobV2 and MVMeta.\nThe define expr will be extract from the origin stmt after meta is deserialized.\n\nThe define expr is necessary for bitmap and hll materialized view.\nFor example:\nMV meta: __doris_mv_bitmap_k1, bitmap_union, to_bitmap(k1)\nOrigin stmt: select bitmap_union(to_bitmap(k1)) from table\nDeserialize meta: __doris_mv_bitmap_k1, bitmap_union, null\nAfter extract: the define expr `to_bitmap(k1)` from origin stmt should be extracted.\n               __doris_mv_bitmap_v1, bitmap_union, to_bitmap(k1) (which comes from the origin stmt)\n\nChange-Id: Ic2da093188d8985f5e97be5bd094e5d60d82c9a7", "committedDate": "2020-05-27T12:12:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzOTgzMQ==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431539831", "body": "This is not match with what `write` writes. We should make them consistent.", "bodyText": "This is not match with what write writes. We should make them consistent.", "bodyHTML": "<p dir=\"auto\">This is not match with what <code>write</code> writes. We should make them consistent.</p>", "author": "imay", "createdAt": "2020-05-28T01:57:34Z", "path": "fe/src/main/java/org/apache/doris/alter/RollupJobV2.java", "diffHunk": "@@ -770,4 +714,85 @@ public void setJobState(JobState jobState) {\n         this.jobState = jobState;\n     }\n \n+    private void setColumnsDefineExpr(List<MVColumnItem> items) {\n+        for (MVColumnItem item : items) {\n+            for (Column column : rollupSchema) {\n+                if (column.getName().equals(item.getName())) {\n+                    column.setDefineExpr(item.getDefineExpr());\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void write(DataOutput out) throws IOException {\n+        String json = GsonUtils.GSON.toJson(this, AlterJobV2.class);\n+        Text.writeString(out, json);\n+    }\n+\n+    public static RollupJobV2 read(DataInput in) throws IOException {", "originalCommit": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0OTQyOA==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431549428", "bodyText": "This is also used by the Meta <85. If the Meta is more then 86, the read of AlterJobV2 wil be used.", "author": "EmmyMiao87", "createdAt": "2020-05-28T02:36:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzOTgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0MDU3NQ==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431540575", "body": "write don't match with readFields", "bodyText": "write don't match with readFields", "bodyHTML": "<p dir=\"auto\">write don't match with readFields</p>", "author": "imay", "createdAt": "2020-05-28T02:00:34Z", "path": "fe/src/main/java/org/apache/doris/alter/SchemaChangeJobV2.java", "diffHunk": "@@ -1081,14 +969,8 @@ private void readJobFinishedData(DataInput in) throws IOException {\n \n     @Override\n     public void write(DataOutput out) throws IOException {\n-        super.write(out);\n-\n-        out.writeBoolean(isMetaPruned);\n-        if (isMetaPruned) {\n-            writeJobFinishedData(out);\n-        } else {\n-            writeJobNotFinishData(out);\n-        }\n+        String json = GsonUtils.GSON.toJson(this, AlterJobV2.class);", "originalCommit": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0OTk3MA==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431549970", "bodyText": "I have conducted a compatibility test. The read of AlterJobV2 match the write of RollupJobV2 and SchemaChangeV2", "author": "EmmyMiao87", "createdAt": "2020-05-28T02:38:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU0MDU3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1MTM1MA==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431551350", "body": "NULL should be judged in set, it may be too late to judge in get function", "bodyText": "NULL should be judged in set, it may be too late to judge in get function", "bodyHTML": "<p dir=\"auto\">NULL should be judged in set, it may be too late to judge in get function</p>", "author": "HangyuanLiu", "createdAt": "2020-05-28T02:44:21Z", "path": "fe/src/main/java/org/apache/doris/analysis/StatementBase.java", "diffHunk": "@@ -153,7 +156,17 @@ public String getClusterName() {\n \n     public void setClusterName(String clusterName) {\n         this.clusterName = clusterName;\n-    } \n+    }\n+\n+    public void setOrigStmt(OriginStatement origStmt) {\n+        this.origStmt = origStmt;\n+    }\n+\n+    public OriginStatement getOrigStmt() {\n+        Preconditions.checkState(origStmt != null);", "originalCommit": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1NDAyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431554029", "body": "The name defineStmt can easily cause ambiguity with DefineExpr. But this statement may not only parse the semantics of defineExpr in the future\u3002MaterializedViewStmt is a better name ?", "bodyText": "The name defineStmt can easily cause ambiguity with DefineExpr. But this statement may not only parse the semantics of defineExpr in the future\u3002MaterializedViewStmt is a better name ?", "bodyHTML": "<p dir=\"auto\">The name defineStmt can easily cause ambiguity with DefineExpr. But this statement may not only parse the semantics of defineExpr in the future\u3002MaterializedViewStmt is a better name ?</p>", "author": "HangyuanLiu", "createdAt": "2020-05-28T02:55:42Z", "path": "fe/src/main/java/org/apache/doris/catalog/MaterializedIndexMeta.java", "diffHunk": "@@ -46,9 +55,11 @@\n     private TStorageType storageType;\n     @SerializedName(value = \"keysType\")\n     private KeysType keysType;\n+    @SerializedName(value = \"defineStmt\")\n+    private OriginStatement defineStmt;", "originalCommit": "9a13bc3d286e70794d78d1421cb8778a43c9ffb4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MTg2Mg==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431651862", "bodyText": "The define stmt means that this is the definition of materialized views.", "author": "EmmyMiao87", "createdAt": "2020-05-28T08:00:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1NDAyOQ=="}], "type": "inlineReview"}, {"oid": "2534204b0e96eb98317487ef590e1b9cfe28e2c4", "url": "https://github.com/apache/incubator-doris/commit/2534204b0e96eb98317487ef590e1b9cfe28e2c4", "message": "Add comment of read method\n\nChange-Id: I4e1e0f4ad0f6e76cdc43e49938de768ec3b0a0e8", "committedDate": "2020-05-28T04:02:14Z", "type": "commit"}, {"oid": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "url": "https://github.com/apache/incubator-doris/commit/48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "message": "Fix ut\n\nChange-Id: I2be257d512bf541f00912a374a2e07a039fc42b4", "committedDate": "2020-05-28T06:27:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYxNDAyMA==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431614020", "body": "Add `else` to make logic more explict", "bodyText": "Add else to make logic more explict", "bodyHTML": "<p dir=\"auto\">Add <code>else</code> to make logic more explict</p>", "author": "morningman", "createdAt": "2020-05-28T06:43:12Z", "path": "fe/src/main/java/org/apache/doris/alter/AlterJobV2.java", "diffHunk": "@@ -220,16 +233,20 @@ protected boolean checkTableStable(Database db) throws AlterCancelException {\n     public abstract void replay(AlterJobV2 replayedJob);\n \n     public static AlterJobV2 read(DataInput in) throws IOException {\n-        JobType type = JobType.valueOf(Text.readString(in));\n-        switch (type) {\n-            case ROLLUP:\n-                return RollupJobV2.read(in);\n-            case SCHEMA_CHANGE:\n-                return SchemaChangeJobV2.read(in);\n-            default:\n-                Preconditions.checkState(false);\n-                return null;\n+        if (Catalog.getCurrentCatalogJournalVersion() < FeMetaVersion.VERSION_86) {\n+            JobType type = JobType.valueOf(Text.readString(in));\n+            switch (type) {\n+                case ROLLUP:\n+                    return RollupJobV2.read(in);\n+                case SCHEMA_CHANGE:\n+                    return SchemaChangeJobV2.read(in);\n+                default:\n+                    Preconditions.checkState(false);\n+                    return null;\n+            }\n         }", "originalCommit": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MTI1Ng==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431651256", "bodyText": "Added", "author": "EmmyMiao87", "createdAt": "2020-05-28T07:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYxNDAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyODM3NQ==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431628375", "body": "```suggestion\r\n            throw new AnalysisException(\"The materialized view is disabled\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new AnalysisException(\"The materialized view is disable\");\n          \n          \n            \n                        throw new AnalysisException(\"The materialized view is disabled\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AnalysisException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The materialized view is <span class=\"x x-first x-last\">disable</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AnalysisException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>The materialized view is <span class=\"x x-first x-last\">disabled</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-05-28T07:15:09Z", "path": "fe/src/main/java/org/apache/doris/analysis/CreateMaterializedViewStmt.java", "diffHunk": "@@ -100,9 +102,8 @@ public KeysType getMVKeysType() {\n \n     @Override\n     public void analyze(Analyzer analyzer) throws UserException {\n-        // TODO(ml): remove it\n         if (!Config.enable_materialized_view) {\n-            throw new AnalysisException(\"The materialized view is coming soon\");\n+            throw new AnalysisException(\"The materialized view is disable\");", "originalCommit": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyODg0OA==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431628848", "body": "```suggestion\r\n    private void readFields(DataInput in) throws IOException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void readFields(DataInput in) throws IOException {\n          \n          \n            \n                private void readFields(DataInput in) throws IOException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first x-last\">public</span> <span class=\"pl-k\">void</span> readFields(<span class=\"pl-smi\">DataInput</span> in) throws <span class=\"pl-smi\">IOException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first x-last\">private</span> <span class=\"pl-k\">void</span> readFields(<span class=\"pl-smi\">DataInput</span> in) throws <span class=\"pl-smi\">IOException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-05-28T07:16:09Z", "path": "fe/src/main/java/org/apache/doris/catalog/Column.java", "diffHunk": "@@ -411,28 +412,8 @@ public boolean equals(Object obj) {\n \n     @Override\n     public void write(DataOutput out) throws IOException {\n-        Text.writeString(out, name);\n-        ColumnType.write(out, type);\n-        if (null == aggregationType) {\n-            out.writeBoolean(false);\n-        } else {\n-            out.writeBoolean(true);\n-            Text.writeString(out, aggregationType.name());\n-            out.writeBoolean(isAggregationTypeImplicit);\n-        }\n-\n-        out.writeBoolean(isKey);\n-        out.writeBoolean(isAllowNull);\n-\n-        if (defaultValue == null) {\n-            out.writeBoolean(false);\n-        } else {\n-            out.writeBoolean(true);\n-            Text.writeString(out, defaultValue);\n-        }\n-        stats.write(out);\n-\n-        Text.writeString(out, comment);\n+        String json = GsonUtils.GSON.toJson(this);\n+        Text.writeString(out, json);\n     }\n \n     public void readFields(DataInput in) throws IOException {", "originalCommit": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYzMDQyOQ==", "url": "https://github.com/apache/incubator-doris/pull/3705#discussion_r431630429", "body": "Parameter `ddlStmt.getOrigStmt()` is no longer needed, it can be got from `loadStmt`", "bodyText": "Parameter ddlStmt.getOrigStmt() is no longer needed, it can be got from loadStmt", "bodyHTML": "<p dir=\"auto\">Parameter <code>ddlStmt.getOrigStmt()</code> is no longer needed, it can be got from <code>loadStmt</code></p>", "author": "morningman", "createdAt": "2020-05-28T07:19:31Z", "path": "fe/src/main/java/org/apache/doris/qe/DdlExecutor.java", "diffHunk": "@@ -132,7 +131,7 @@ public static void execute(Catalog catalog, DdlStmt ddlStmt, OriginStatement ori\n             if (loadStmt.getVersion().equals(Load.VERSION) || jobType == EtlJobType.HADOOP) {\n                 catalog.getLoadManager().createLoadJobV1FromStmt(loadStmt, jobType, System.currentTimeMillis());\n             } else {\n-                catalog.getLoadManager().createLoadJobFromStmt(loadStmt, origStmt);\n+                catalog.getLoadManager().createLoadJobFromStmt(loadStmt, ddlStmt.getOrigStmt());", "originalCommit": "48ffb10d0982a0ecd3aecb2b3b7c662d8340b1c6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d2b70198d14166f7765194da867b354b91573c8d", "url": "https://github.com/apache/incubator-doris/commit/d2b70198d14166f7765194da867b354b91573c8d", "message": "Change code style\n\nChange-Id: I3ab23f5c94ae781167f498fefde2d96e42e05bf9", "committedDate": "2020-05-28T07:56:44Z", "type": "commit"}]}