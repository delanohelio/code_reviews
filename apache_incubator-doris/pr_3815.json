{"pr_number": 3815, "pr_title": "Optimize the logic for getting TabletMeta from TabletInvertedIndex to reduce frequency of getting read lock ", "pr_author": "caiconghui", "pr_createdAt": "2020-06-10T05:56:13Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3815", "timeline": [{"oid": "703ebb4e1b686c22093820d53bf8a1a0873397e7", "url": "https://github.com/apache/incubator-doris/commit/703ebb4e1b686c22093820d53bf8a1a0873397e7", "message": "Reduce frequency to get read lock", "committedDate": "2020-06-09T12:45:29Z", "type": "commit"}, {"oid": "acaffd986dbc714d30aeb393859be71e1cc13d30", "url": "https://github.com/apache/incubator-doris/commit/acaffd986dbc714d30aeb393859be71e1cc13d30", "message": "Reduce frequency to get read lock in TabletInvertIndex", "committedDate": "2020-06-10T05:53:27Z", "type": "commit"}, {"oid": "e8555ee95ddba7cff3926b5d1a6de51aaf26f469", "url": "https://github.com/apache/incubator-doris/commit/e8555ee95ddba7cff3926b5d1a6de51aaf26f469", "message": "fix", "committedDate": "2020-06-10T06:08:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438034697", "body": "Have you tested its performance? There may be millions of tablet in `tabletIds`. I am not sure how long it will take to process that much of tablets.", "bodyText": "Have you tested its performance? There may be millions of tablet in tabletIds. I am not sure how long it will take to process that much of tablets.", "bodyHTML": "<p dir=\"auto\">Have you tested its performance? There may be millions of tablet in <code>tabletIds</code>. I am not sure how long it will take to process that much of tablets.</p>", "author": "morningman", "createdAt": "2020-06-10T10:53:05Z", "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);", "originalCommit": "e8555ee95ddba7cff3926b5d1a6de51aaf26f469", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1Nzk5NA==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438057994", "bodyText": "cost for getting a list of size for 1000000 from map  is about 40 ~ 50ms, here we only process tablets in one be and which need to sync, so i think  1000000 for testing is large enough", "author": "caiconghui", "createdAt": "2020-06-10T11:40:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2NzE0Mw==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438767143", "bodyText": "OK", "author": "morningman", "createdAt": "2020-06-11T13:07:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAzNDY5Nw=="}], "type": "inlineReview"}, {"oid": "a8f3189fee2098abb176e6b332a616fa8d0e9d29", "url": "https://github.com/apache/incubator-doris/commit/a8f3189fee2098abb176e6b332a616fa8d0e9d29", "message": "fix", "committedDate": "2020-06-11T03:53:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTI1OQ==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438769259", "body": "It is very error-prone to result a list will null in it.\r\nHow about using `getOrDefault()` method, and return an `NonExistTabletMeta` is not found?\r\nAnd `NonExistTabletMeta` can be a `final static` member with all id as `NON_EXIST_VALUE` in it.\r\n\r\nIn this way, we don't have to check null each time we visit the returned list.", "bodyText": "It is very error-prone to result a list will null in it.\nHow about using getOrDefault() method, and return an NonExistTabletMeta is not found?\nAnd NonExistTabletMeta can be a final static member with all id as NON_EXIST_VALUE in it.\nIn this way, we don't have to check null each time we visit the returned list.", "bodyHTML": "<p dir=\"auto\">It is very error-prone to result a list will null in it.<br>\nHow about using <code>getOrDefault()</code> method, and return an <code>NonExistTabletMeta</code> is not found?<br>\nAnd <code>NonExistTabletMeta</code> can be a <code>final static</code> member with all id as <code>NON_EXIST_VALUE</code> in it.</p>\n<p dir=\"auto\">In this way, we don't have to check null each time we visit the returned list.</p>", "author": "morningman", "createdAt": "2020-06-11T13:10:42Z", "path": "fe/src/main/java/org/apache/doris/catalog/TabletInvertedIndex.java", "diffHunk": "@@ -298,57 +262,28 @@ public Long getTabletIdByReplica(long replicaId) {\n         }\n     }\n \n-    public long getPartitionId(long tabletId) {\n-        readLock();\n-        try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getPartitionId();\n-            }\n-            return NOT_EXIST_VALUE;\n-        } finally {\n-            readUnlock();\n-        }\n-    }\n-\n-    public long getIndexId(long tabletId) {\n+    public TabletMeta getTabletMeta(long tabletId) {\n         readLock();\n         try {\n-            if (tabletMetaMap.containsKey(tabletId)) {\n-                return tabletMetaMap.get(tabletId).getIndexId();\n-            }\n-            return NOT_EXIST_VALUE;\n+            return tabletMetaMap.get(tabletId);\n         } finally {\n             readUnlock();\n         }\n     }\n \n-    public int getEffectiveSchemaHash(long tabletId) {\n-        // always get old schema hash(as effective one)\n+    public List<TabletMeta> getTabletMetaList(List<Long> tabletIdList) {", "originalCommit": "a8f3189fee2098abb176e6b332a616fa8d0e9d29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MjM0NA==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438852344", "bodyText": "ok", "author": "caiconghui", "createdAt": "2020-06-11T15:02:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTI1OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MzE3OQ==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438773179", "body": "```suggestion\r\n                    long indexId = tabletMeta.getIndexId();\r\n```\r\n\r\nPlease double check again for similar errors.\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                long indexId = tabletMeta.getPartitionId();\n          \n          \n            \n                                long indexId = tabletMeta.getIndexId();\n          \n      \n    \n    \n  \n\nPlease double check again for similar errors.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">long</span> indexId <span class=\"pl-k\">=</span> tabletMeta<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getPartitionId</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">long</span> indexId <span class=\"pl-k\">=</span> tabletMeta<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getIndexId</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Please double check again for similar errors.</p>", "author": "morningman", "createdAt": "2020-06-11T13:16:54Z", "path": "fe/src/main/java/org/apache/doris/master/ReportHandler.java", "diffHunk": "@@ -388,21 +389,26 @@ private static void sync(Map<Long, TTablet> backendTablets, ListMultimap<Long, L\n                 List<Long> tabletIds = tabletSyncMap.get(dbId);\n                 LOG.info(\"before sync tablets in db[{}]. report num: {}. backend[{}]\",\n                          dbId, tabletIds.size(), backendId);\n-\n-                for (Long tabletId : tabletIds) {\n-                    long tableId = invertedIndex.getTableId(tabletId);\n+                List<TabletMeta> tabletMetaList = invertedIndex.getTabletMetaList(tabletIds);\n+                for (int i = 0; i < tabletMetaList.size(); i++) {\n+                    TabletMeta tabletMeta = tabletMetaList.get(i);\n+                    if (tabletMeta == null) {\n+                        continue;\n+                    }\n+                    long tabletId = tabletIds.get(i);\n+                    long tableId = tabletMeta.getTableId();\n                     OlapTable olapTable = (OlapTable) db.getTable(tableId);\n                     if (olapTable == null) {\n                         continue;\n                     }\n \n-                    long partitionId = invertedIndex.getPartitionId(tabletId);\n+                    long partitionId = tabletMeta.getPartitionId();\n                     Partition partition = olapTable.getPartition(partitionId);\n                     if (partition == null) {\n                         continue;\n                     }\n \n-                    long indexId = invertedIndex.getIndexId(tabletId);\n+                    long indexId = tabletMeta.getPartitionId();", "originalCommit": "a8f3189fee2098abb176e6b332a616fa8d0e9d29", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg1MjQ3MA==", "url": "https://github.com/apache/incubator-doris/pull/3815#discussion_r438852470", "bodyText": "fix", "author": "caiconghui", "createdAt": "2020-06-11T15:02:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MzE3OQ=="}], "type": "inlineReview"}, {"oid": "38d543c2f64c50e60f22e8d59bf22517c261cdaf", "url": "https://github.com/apache/incubator-doris/commit/38d543c2f64c50e60f22e8d59bf22517c261cdaf", "message": "fix by review", "committedDate": "2020-06-11T14:57:16Z", "type": "commit"}]}