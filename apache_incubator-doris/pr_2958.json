{"pr_number": 2958, "pr_title": "Auto Resume RoutineLoadJob", "pr_author": "worker24h", "pr_createdAt": "2020-02-20T12:57:31Z", "pr_url": "https://github.com/apache/incubator-doris/pull/2958", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382045606", "body": "Better in English", "bodyText": "Better in English", "bodyHTML": "<p dir=\"auto\">Better in English</p>", "author": "morningman", "createdAt": "2020-02-20T14:48:06Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEwMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403102", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:25:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NTYwNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382052529", "body": "Code style, `{` should be after the last line", "bodyText": "Code style, { should be after the last line", "bodyHTML": "<p dir=\"auto\">Code style, <code>{</code> should be after the last line</p>", "author": "morningman", "createdAt": "2020-02-20T14:58:22Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;\n+\n+    // for common error\n+    public static long IMPOSSIBLE_ERROR_ERR = 1; // \u7528\u4e8e\u4e0d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u7684\u5730\u65b9 \u51fa\u73b0\u4e86\u4e00\u4e2a\u9519\u8bef\n+    public static long INTERNAL_ERR = 2;\n+    public static long REPLICA_FEW_ERR = 3;\n+    public static long PARTITIONS_ERR = 4;\n+    public static long DB_ERR = 5;\n+    public static long TABLE_ERR = 6;\n+    public static long META_NOT_FOUND_ERR = 7;\n+\n+    // for load job error\n+    public static long MANUAL_PAUSE_ERR = 100;\n+    public static long MANUAL_STOP_ERR = 101;\n+    public static long TOO_MANY_FAILURE_ROWS_ERR = 102;\n+    public static long CREATE_TASKS_ERR = 103;\n+    public static long TASKS_ABORT_ERR = 104;\n+\n+    public InternalErrorCode()\n+    {", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzEzOA==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403138", "bodyText": "I changed", "author": "worker24h", "createdAt": "2020-02-21T05:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382059620", "body": "only `replicationNum` of BE alive is not enough. Consider we have 100 BEs in a cluster, only 3 alive is not enough. \r\nAnd the `replicationNum` will because 0 once FE restart or Master changing, cause you don't persist it.\r\n\r\nI didn't think about how many BE alive would be more suitable. Consider we have 100 BEs in a cluster\uff0c97 is alive, but the job may still fail because all replicas of a table may be on that 3 dead BE.\r\n\r\nMaybe we can add a config like `min_alive_be_num_for_auto_resume` ?\r\ndefault is 0. And here we judge like: \r\n`max(quorum of BE, min_alive_be_num_for_auto_resume)` ?", "bodyText": "only replicationNum of BE alive is not enough. Consider we have 100 BEs in a cluster, only 3 alive is not enough.\nAnd the replicationNum will because 0 once FE restart or Master changing, cause you don't persist it.\nI didn't think about how many BE alive would be more suitable. Consider we have 100 BEs in a cluster\uff0c97 is alive, but the job may still fail because all replicas of a table may be on that 3 dead BE.\nMaybe we can add a config like min_alive_be_num_for_auto_resume ?\ndefault is 0. And here we judge like:\nmax(quorum of BE, min_alive_be_num_for_auto_resume) ?", "bodyHTML": "<p dir=\"auto\">only <code>replicationNum</code> of BE alive is not enough. Consider we have 100 BEs in a cluster, only 3 alive is not enough.<br>\nAnd the <code>replicationNum</code> will because 0 once FE restart or Master changing, cause you don't persist it.</p>\n<p dir=\"auto\">I didn't think about how many BE alive would be more suitable. Consider we have 100 BEs in a cluster\uff0c97 is alive, but the job may still fail because all replicas of a table may be on that 3 dead BE.</p>\n<p dir=\"auto\">Maybe we can add a config like <code>min_alive_be_num_for_auto_resume</code> ?<br>\ndefault is 0. And here we judge like:<br>\n<code>max(quorum of BE, min_alive_be_num_for_auto_resume)</code> ?</p>", "author": "morningman", "createdAt": "2020-02-20T15:09:07Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzIxMQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403211", "bodyText": "Good idea", "author": "worker24h", "createdAt": "2020-02-21T05:25:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1OTYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382060571", "body": "Make the `5min` configuration. Add it to `Config.java`.\r\nAnd I think we should add another config to disable this `auto resume` feature, in case we've got some bad cases.", "bodyText": "Make the 5min configuration. Add it to Config.java.\nAnd I think we should add another config to disable this auto resume feature, in case we've got some bad cases.", "bodyHTML": "<p dir=\"auto\">Make the <code>5min</code> configuration. Add it to <code>Config.java</code>.<br>\nAnd I think we should add another config to disable this <code>auto resume</code> feature, in case we've got some bad cases.</p>", "author": "morningman", "createdAt": "2020-02-20T15:10:28Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,78 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+    /**\n+     * \u662f\u5426\u5f00\u542f\u81ea\u52a8\u8c03\u5ea6\n+     * \u53ea\u9488\u5bf9\u72b6\u6001\u662fPAUSED JOB \u624d\u9700\u8981\u8fdb\u884c\u5224\u65ad \u5176\u4ed6\u90fd\u8fd4\u56defalse\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//\u8868\u793a\u53ea\u80fd\u624b\u52a8\u6062\u590d\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f\n+         * \u589e\u52a0\u8ba1\u6570\u5668\u3001\u6062\u590d\u9501\u5b9a\u529f\u80fd\u4e3b\u8981\u662f\u4e3a\u4e86\u907f\u514d\u65e0\u9650\u5236\u7684\u6062\u590d\n+         */\n+        if (jobRoutine.pauseReason.getCode() == InternalErrorCode.REPLICA_FEW_ERR) {\n+            int alive =  aliveBeCount(jobRoutine.clusterName);\n+            if (alive < jobRoutine.replicationNum) {// be\u5b58\u6d3b\u4e2a\u6570\u5c0f\u4e8e\u6700\u5c0f\u526f\u672c\u6570\n+                return false;\n+            }\n+            if (jobRoutine.firstResumeTimestamp == 0) {//\u8bf4\u660e\u7b2c\u4e00\u6b21\u81ea\u52a8\u6062\u590d\n+                jobRoutine.firstResumeTimestamp = System.currentTimeMillis();\n+                jobRoutine.autoResumeCount = 1;\n+                return true;\n+            } else {\n+                long current = System.currentTimeMillis();\n+                if (current - jobRoutine.firstResumeTimestamp < 5*60*1000) {//\u57285\u5206\u949f\u4e4b\u5185", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzI2OQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403269", "bodyText": "I add a configuration for the time", "author": "worker24h", "createdAt": "2020-02-21T05:26:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MDU3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382063037", "body": "Code style", "bodyText": "Code style", "bodyHTML": "<p dir=\"auto\">Code style</p>", "author": "morningman", "createdAt": "2020-02-20T15:13:55Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/KafkaRoutineLoadJob.java", "diffHunk": "@@ -299,7 +306,11 @@ protected boolean unprotectNeedReschedule() throws UserException {\n                     return true;\n                 }\n             }\n-        } else {\n+        }", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzMxMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403312", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:26:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2MzAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382067831", "body": "It is strange to define a \"ErrorCode\" class with a `msg` in it.\r\nHow about just leave the \"code\" in `InternalErrorCode`, without the `msg`.\r\n\r\nAnd you can put the `InternalErrorCode` into an `Exception` class.\r\n\r\nAnd in routine load, you can also define a new class named `ErrorReason` with an `InternalErrorCode` and a `msg` in it.\r\n\r\nIf so, it would be more flexible to use the code everywhere we like.\r\n", "bodyText": "It is strange to define a \"ErrorCode\" class with a msg in it.\nHow about just leave the \"code\" in InternalErrorCode, without the msg.\nAnd you can put the InternalErrorCode into an Exception class.\nAnd in routine load, you can also define a new class named ErrorReason with an InternalErrorCode and a msg in it.\nIf so, it would be more flexible to use the code everywhere we like.", "bodyHTML": "<p dir=\"auto\">It is strange to define a \"ErrorCode\" class with a <code>msg</code> in it.<br>\nHow about just leave the \"code\" in <code>InternalErrorCode</code>, without the <code>msg</code>.</p>\n<p dir=\"auto\">And you can put the <code>InternalErrorCode</code> into an <code>Exception</code> class.</p>\n<p dir=\"auto\">And in routine load, you can also define a new class named <code>ErrorReason</code> with an <code>InternalErrorCode</code> and a <code>msg</code> in it.</p>\n<p dir=\"auto\">If so, it would be more flexible to use the code everywhere we like.</p>", "author": "morningman", "createdAt": "2020-02-20T15:20:53Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTcyOQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585729", "bodyText": "Why not just using Enum?", "author": "morningman", "createdAt": "2020-02-21T13:40:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382068262", "body": "```suggestion\r\n    public static long OK = 0;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static long NORMAL = 0;\n          \n          \n            \n                public static long OK = 0;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">long</span> <span class=\"pl-c1 x x-first x-last\">NORMAL</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">long</span> <span class=\"pl-c1 x x-first x-last\">OK</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-02-20T15:21:35Z", "path": "fe/src/main/java/org/apache/doris/common/InternalErrorCode.java", "diffHunk": "@@ -0,0 +1,72 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.common;\n+\n+public class InternalErrorCode {\n+    private long code;\n+    private String msg;\n+    public static long NORMAL = 0;", "originalCommit": "1cf05c8768351ceb28096be9e250374d9e0eec41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzM2MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382403361", "bodyText": "ok", "author": "worker24h", "createdAt": "2020-02-21T05:26:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2ODI2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382584927", "body": "```suggestion\r\n    @ConfField(mutable = true, masterOnly = true)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @ConfField(mutable = true)\n          \n          \n            \n                @ConfField(mutable = true, masterOnly = true)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@ConfField</span>(<span class=\"pl-c1\">mutable</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@ConfField</span>(<span class=\"pl-c1\">mutable</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span><span class=\"x x-first\">, </span><span class=\"pl-c1 x\">masterOnly</span><span class=\"x\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">true</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-02-21T13:38:50Z", "path": "fe/src/main/java/org/apache/doris/common/Config.java", "diffHunk": "@@ -999,5 +999,16 @@\n      */\n     @ConfField\n     public static boolean check_java_version = true;\n+\n+    \n+    @ConfField(mutable = true)", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NTAyMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382585022", "bodyText": "Also add comment for this config. Better to tell the user the best practice to set its value.", "author": "morningman", "createdAt": "2020-02-21T13:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NDkyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NjE2MQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382586161", "body": "English", "bodyText": "English", "bodyHTML": "<p dir=\"auto\">English</p>", "author": "morningman", "createdAt": "2020-02-21T13:41:32Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadJob.java", "diffHunk": "@@ -173,8 +175,12 @@ public boolean isFinalState() {\n     protected int currentTaskConcurrentNum;\n     protected RoutineLoadProgress progress;\n \n-    protected String pauseReason = \"\";\n-    protected String cancelReason = \"\";\n+    protected long firstResumeTimestamp; //\u7b2c\u4e00\u6b21\u6062\u590d\u65f6\u95f4\u6233", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzAzMg==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587032", "body": "```suggestion\r\n        } catch (Exception e) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }catch (Exception e) {\n          \n          \n            \n                    } catch (Exception e) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }<span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }<span class=\"x x-first x-last\"> </span><span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-02-21T13:43:25Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/RoutineLoadTaskScheduler.java", "diffHunk": "@@ -130,10 +131,15 @@ private void scheduleOneTask(RoutineLoadTaskInfo routineLoadTaskInfo) throws Exc\n                 // allocate failed, push it back to the queue to wait next scheduling\n                 needScheduleTasksQueue.put(routineLoadTaskInfo);\n             }\n-        } catch (Exception e) {\n+        } catch (UserException e) {\n+            routineLoadManager.getJob(routineLoadTaskInfo.getJobId()).\n+                    updateState(JobState.PAUSED,\n+                    new ErrorReason(e.getErrorCode().getCode(), e.getMessage()), false);\n+            throw e;\n+        }catch (Exception e) {", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzI2OQ==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587269", "body": "Add some comments for this class", "bodyText": "Add some comments for this class", "bodyHTML": "<p dir=\"auto\">Add some comments for this class</p>", "author": "morningman", "createdAt": "2020-02-21T13:43:50Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU4NzM0Nw==", "url": "https://github.com/apache/incubator-doris/pull/2958#discussion_r382587347", "body": "English", "bodyText": "English", "bodyHTML": "<p dir=\"auto\">English</p>", "author": "morningman", "createdAt": "2020-02-21T13:44:01Z", "path": "fe/src/main/java/org/apache/doris/load/routineload/ScheduleRule.java", "diffHunk": "@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+package org.apache.doris.load.routineload;\n+\n+import org.apache.doris.catalog.Catalog;\n+import org.apache.doris.common.Config;\n+import org.apache.doris.common.InternalErrorCode;\n+import org.apache.doris.system.SystemInfoService;\n+\n+public class ScheduleRule {\n+\n+    private static int aliveBeCount(String clusterName) {\n+        SystemInfoService systemInfoService = Catalog.getCurrentSystemInfo();\n+        return systemInfoService.getClusterBackendIds(clusterName, true).size();\n+    }\n+\n+    /**\n+     * check if RoutineLoadJob is auto schedule\n+     * @param jobRoutine\n+     * @return\n+     */\n+    public static boolean isNeedAutoSchedule(RoutineLoadJob jobRoutine) {\n+        if (jobRoutine.state != RoutineLoadJob.JobState.PAUSED) {\n+            return false;\n+        }\n+        if (jobRoutine.autoResumeLock) {//only manual resume for unlock\n+            return false;\n+        }\n+        /**\n+         * \u8fd9\u79cd\u9519\u8bef\u662f BE\u6302\u6389\u624d\u4f1a\u51fa\u73b0\u7684\u573a\u666f", "originalCommit": "d00fb67bb5a6caee35bf9f1472e4d3fd2eafc4cd", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8d3cfa005587c1bc943a1b26383cbbfeae935465", "url": "https://github.com/apache/incubator-doris/commit/8d3cfa005587c1bc943a1b26383cbbfeae935465", "message": "Auto Resume RoutineLoadJob", "committedDate": "2020-02-27T14:43:42Z", "type": "commit"}]}