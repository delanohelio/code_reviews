{"pr_number": 3597, "pr_title": "[Bug] fix OrCompoundPredicate predicate fold bug #3596", "pr_author": "wutiangan", "pr_createdAt": "2020-05-15T02:37:26Z", "pr_url": "https://github.com/apache/incubator-doris/pull/3597", "timeline": [{"oid": "091940709240c00c78a53bb73e88548704bfc6bb", "url": "https://github.com/apache/incubator-doris/commit/091940709240c00c78a53bb73e88548704bfc6bb", "message": "[Bug] fix OrCompoundPredicate predicate fold bug", "committedDate": "2020-05-15T02:20:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzODAyMA==", "url": "https://github.com/apache/incubator-doris/pull/3597#discussion_r425538020", "body": "```suggestion\r\n            // rebuild CompoundPredicate if found duplicate predicate will build (predicate) and (.. or ..)  predicate in\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // rebuild CompoundPredicate if found duplicate predicate will build \uff08predcate) and (.. or ..)  predicate in\n          \n          \n            \n                        // rebuild CompoundPredicate if found duplicate predicate will build (predicate) and (.. or ..)  predicate in", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> rebuild CompoundPredicate if found duplicate predicate will build <span class=\"x x-first x-last\">\uff08predcate</span>) and (.. or ..)  predicate in</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> rebuild CompoundPredicate if found duplicate predicate will build <span class=\"x x-first x-last\">(predicate</span>) and (.. or ..)  predicate in</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "morningman", "createdAt": "2020-05-15T02:54:52Z", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -618,16 +618,33 @@ private Expr processDuplicateOrs(List<List<Expr>> exprs) {\n             temp.add(makeCompound(cloneExprs, CompoundPredicate.Operator.AND));\n         }\n \n+        Expr result;\n+        boolean isReturnCommonFactorExpr = false;\n         for (List<Expr> exprList : clearExprs) {\n             exprList.removeAll(cloneExprs);\n+            if (exprList.size() == 0) {\n+                // For example, the sql is \"where (a = 1) or (a = 1 and B = 2)\"\n+                // if \"(a = 1)\" is extracted as a common factor expression, then the first expression \"(a = 1)\" has no expression\n+                // other than a common factor expression, and the second expression \"(a = 1 and B = 2)\" has an expression of \"(B = 2)\"\n+                //\n+                // In this case, the common factor expression (\"a = 1\") can be directly used to replace the whole CompoundOrPredicate.\n+                // In Fact, the common factor expression is actually the parent set of expression \"(a = 1)\" and expression \"(a = 1 and B = 2)\"\n+                //\n+                // exprList.size() == 0 means one child of CompoundOrPredicate has no expression other than a common factor expression.\n+                isReturnCommonFactorExpr = true;\n+                break;\n+            }\n             temp.add(makeCompound(exprList, CompoundPredicate.Operator.AND));\n         }\n-\n-        // rebuild CompoundPredicate if found duplicate predicate will build \uff08predcate) and (.. or ..)  predicate in\n-        // step 1: will build (.. or ..)\n-        Expr result = CollectionUtils.isNotEmpty(cloneExprs) ? new CompoundPredicate(CompoundPredicate.Operator.AND,\n-                temp.get(0), makeCompound(temp.subList(1, temp.size()), CompoundPredicate.Operator.OR))\n-                : makeCompound(temp, CompoundPredicate.Operator.OR);\n+        if (isReturnCommonFactorExpr) {\n+            result = temp.get(0);\n+        } else {\n+            // rebuild CompoundPredicate if found duplicate predicate will build \uff08predcate) and (.. or ..)  predicate in", "originalCommit": "091940709240c00c78a53bb73e88548704bfc6bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUzOTA5NQ==", "url": "https://github.com/apache/incubator-doris/pull/3597#discussion_r425539095", "body": "```suggestion\r\n     if (LOG.isDebugEnabled) {\r\n          LOG.debug(\"rewrite ors: \" + result.toSql());\r\n     }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.debug(\"rewrite ors: \" + result.toSql());\n          \n          \n            \n                 if (LOG.isDebugEnabled) {\n          \n          \n            \n                      LOG.debug(\"rewrite ors: \" + result.toSql());\n          \n          \n            \n                 }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"x x-first x-last\">   </span><span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first\">debug(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">rewrite ors: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> result</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toSql());</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k x x-first\">if</span><span class=\"x x-last\"> (</span><span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isDebugEnabled) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-c1\">LOG</span><span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rewrite ors: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> result<span class=\"pl-k\">.</span>toSql());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wuyunfeng", "createdAt": "2020-05-15T02:58:58Z", "path": "fe/src/main/java/org/apache/doris/analysis/SelectStmt.java", "diffHunk": "@@ -618,16 +618,33 @@ private Expr processDuplicateOrs(List<List<Expr>> exprs) {\n             temp.add(makeCompound(cloneExprs, CompoundPredicate.Operator.AND));\n         }\n \n+        Expr result;\n+        boolean isReturnCommonFactorExpr = false;\n         for (List<Expr> exprList : clearExprs) {\n             exprList.removeAll(cloneExprs);\n+            if (exprList.size() == 0) {\n+                // For example, the sql is \"where (a = 1) or (a = 1 and B = 2)\"\n+                // if \"(a = 1)\" is extracted as a common factor expression, then the first expression \"(a = 1)\" has no expression\n+                // other than a common factor expression, and the second expression \"(a = 1 and B = 2)\" has an expression of \"(B = 2)\"\n+                //\n+                // In this case, the common factor expression (\"a = 1\") can be directly used to replace the whole CompoundOrPredicate.\n+                // In Fact, the common factor expression is actually the parent set of expression \"(a = 1)\" and expression \"(a = 1 and B = 2)\"\n+                //\n+                // exprList.size() == 0 means one child of CompoundOrPredicate has no expression other than a common factor expression.\n+                isReturnCommonFactorExpr = true;\n+                break;\n+            }\n             temp.add(makeCompound(exprList, CompoundPredicate.Operator.AND));\n         }\n-\n-        // rebuild CompoundPredicate if found duplicate predicate will build \uff08predcate) and (.. or ..)  predicate in\n-        // step 1: will build (.. or ..)\n-        Expr result = CollectionUtils.isNotEmpty(cloneExprs) ? new CompoundPredicate(CompoundPredicate.Operator.AND,\n-                temp.get(0), makeCompound(temp.subList(1, temp.size()), CompoundPredicate.Operator.OR))\n-                : makeCompound(temp, CompoundPredicate.Operator.OR);\n+        if (isReturnCommonFactorExpr) {\n+            result = temp.get(0);\n+        } else {\n+            // rebuild CompoundPredicate if found duplicate predicate will build \uff08predcate) and (.. or ..)  predicate in\n+            // step 1: will build (.. or ..)\n+            result = CollectionUtils.isNotEmpty(cloneExprs) ? new CompoundPredicate(CompoundPredicate.Operator.AND,\n+                    temp.get(0), makeCompound(temp.subList(1, temp.size()), CompoundPredicate.Operator.OR))\n+                    : makeCompound(temp, CompoundPredicate.Operator.OR);\n+        }\n         LOG.debug(\"rewrite ors: \" + result.toSql());", "originalCommit": "091940709240c00c78a53bb73e88548704bfc6bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8be10dca05ac43f90ebb5069aa306356127448e8", "url": "https://github.com/apache/incubator-doris/commit/8be10dca05ac43f90ebb5069aa306356127448e8", "message": "fix code style", "committedDate": "2020-05-15T04:10:19Z", "type": "commit"}]}