{"pr_number": 4699, "pr_title": "Support Alter Table Clause For External Table", "pr_author": "HappenLee", "pr_createdAt": "2020-10-06T02:30:28Z", "pr_url": "https://github.com/apache/incubator-doris/pull/4699", "merge_commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMjkwMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500402902", "body": "use `return` instead of `break` is more clear", "bodyText": "use return instead of break is more clear", "bodyHTML": "<p dir=\"auto\">use <code>return</code> instead of <code>break</code> is more clear</p>", "author": "morningman", "createdAt": "2020-10-06T15:42:02Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -172,71 +256,18 @@ public void processAlterTable(AlterTableStmt stmt) throws UserException {\n                 ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n             }\n \n-            if (table.getType() != TableType.OLAP) {\n-                throw new DdlException(\"Do not support alter non-OLAP table[\" + tableName + \"]\");\n-            }\n-            OlapTable olapTable = (OlapTable) table;\n-            stmt.rewriteAlterClause(olapTable);\n-\n-            // check conflict alter ops first\n-            alterClauses = stmt.getOps();\n-            AlterOperations currentAlterOps = new AlterOperations();\n-            currentAlterOps.checkConflict(alterClauses);\n-\n-            // check cluster capacity and db quota, only need to check once.\n-            if (currentAlterOps.needCheckCapacity()) {\n-                Catalog.getCurrentSystemInfo().checkClusterCapacity(clusterName);\n-                db.checkQuota();\n-            }\n-\n-            if (olapTable.getState() != OlapTableState.NORMAL) {\n-                throw new DdlException(\n-                        \"Table[\" + table.getName() + \"]'s state is not NORMAL. Do not allow doing ALTER ops\");\n-            }\n-\n-            if (currentAlterOps.hasSchemaChangeOp()) {\n-                // if modify storage type to v2, do schema change to convert all related tablets to segment v2 format\n-                schemaChangeHandler.process(alterClauses, clusterName, db, olapTable);\n-            } else if (currentAlterOps.hasRollupOp()) {\n-                materializedViewHandler.process(alterClauses, clusterName, db, olapTable);\n-            } else if (currentAlterOps.hasPartitionOp()) {\n-                Preconditions.checkState(alterClauses.size() == 1);\n-                AlterClause alterClause = alterClauses.get(0);\n-                if (alterClause instanceof DropPartitionClause) {\n-                    if (!((DropPartitionClause) alterClause).isTempPartition()) {\n-                        DynamicPartitionUtil.checkAlterAllowed((OlapTable) db.getTable(tableName));\n-                    }\n-                    Catalog.getCurrentCatalog().dropPartition(db, olapTable, ((DropPartitionClause) alterClause));\n-                } else if (alterClause instanceof ReplacePartitionClause) {\n-                    Catalog.getCurrentCatalog().replaceTempPartition(db, tableName, (ReplacePartitionClause) alterClause);\n-                } else if (alterClause instanceof ModifyPartitionClause) {\n-                    ModifyPartitionClause clause = ((ModifyPartitionClause) alterClause);\n-                    // expand the partition names if it is 'Modify Partition(*)'\n-                    if (clause.isNeedExpand()) {\n-                        List<String> partitionNames = clause.getPartitionNames();\n-                        partitionNames.clear();\n-                        for (Partition partition : olapTable.getPartitions()) {\n-                            partitionNames.add(partition.getName());\n-                        }\n-                    }\n-                    Map<String, String> properties = clause.getProperties();\n-                    if (properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY)) {\n-                        needProcessOutsideDatabaseLock = true;\n-                    } else {\n-                        List<String> partitionNames = clause.getPartitionNames();\n-                        modifyPartitionsProperty(db, olapTable, partitionNames, properties);\n-                    }\n-                } else if (alterClause instanceof AddPartitionClause) {\n-                    needProcessOutsideDatabaseLock = true;\n-                } else {\n-                    throw new DdlException(\"Invalid alter operation: \" + alterClause.getOpType());\n-                }\n-            } else if (currentAlterOps.hasRenameOp()) {\n-                processRename(db, olapTable, alterClauses);\n-            } else if (currentAlterOps.contains(AlterOpType.MODIFY_TABLE_PROPERTY_SYNC)) {\n-                needProcessOutsideDatabaseLock = true;\n-            } else {\n-                throw new DdlException(\"Invalid alter operations: \" + currentAlterOps);\n+            switch (table.getType()) {\n+                case OLAP:\n+                    OlapTable olapTable = (OlapTable) table;\n+                    needProcessOutsideDatabaseLock = processAlterOlapTable(stmt, olapTable, alterClauses, clusterName, db);\n+                    break;\n+                case ODBC:\n+                case MYSQL:\n+                case ELASTICSEARCH:\n+                    processAlterExternalTable(stmt, table, db);\n+                    break;", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 90678d1996..94d1bb2fe0 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -265,7 +270,7 @@ public class Alter {\n                 case MYSQL:\n                 case ELASTICSEARCH:\n                     processAlterExternalTable(stmt, table, db);\n-                    break;\n+                    return;\n                 default:\n                     throw new DdlException(\"Do not support alter \" + table.getType().toString() + \" table[\" + tableName + \"]\");\n             }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 90678d1996..94d1bb2fe0 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -265,7 +270,7 @@ public class Alter {\n                 case MYSQL:\n                 case ELASTICSEARCH:\n                     processAlterExternalTable(stmt, table, db);\n-                    break;\n+                    return;\n                 default:\n                     throw new DdlException(\"Do not support alter \" + table.getType().toString() + \" table[\" + tableName + \"]\");\n             }\n", "next_change": {"commit": "f7730031b8eca90c150c400c8d67e008290a6f70", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 94d1bb2fe0..0cb6ab58d1 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -243,43 +216,46 @@ public class Alter {\n     public void processAlterTable(AlterTableStmt stmt) throws UserException {\n         TableName dbTableName = stmt.getTbl();\n         String dbName = dbTableName.getDb();\n+        String tableName = dbTableName.getTbl();\n         final String clusterName = stmt.getClusterName();\n \n         Database db = Catalog.getCurrentCatalog().getDb(dbName);\n         if (db == null) {\n             ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n         }\n+        Table table = db.getTable(tableName);\n+        if (table == null) {\n+            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n+        }\n         List<AlterClause> alterClauses = Lists.newArrayList();\n+        // some operations will take long time to process, need to be done outside the table lock\n+        boolean needProcessOutsideTableLock = false;\n \n-        // some operations will take long time to process, need to be done outside the database lock\n-        boolean needProcessOutsideDatabaseLock = false;\n-        String tableName = dbTableName.getTbl();\n-        db.writeLock();\n-        try {\n-            Table table = db.getTable(tableName);\n-            if (table == null) {\n-                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n-            }\n+        // check conflict alter ops first\n+        AlterOperations currentAlterOps = new AlterOperations();\n+        currentAlterOps.checkConflict(alterClauses);\n+        // check cluster capacity and db quota outside table lock to escape dead lock, only need to check once.\n+        if (currentAlterOps.needCheckCapacity()) {\n+            Catalog.getCurrentSystemInfo().checkClusterCapacity(clusterName);\n+            db.checkQuota();\n+        }\n \n-            switch (table.getType()) {\n-                case OLAP:\n-                    OlapTable olapTable = (OlapTable) table;\n-                    needProcessOutsideDatabaseLock = processAlterOlapTable(stmt, olapTable, alterClauses, clusterName, db);\n-                    break;\n-                case ODBC:\n-                case MYSQL:\n-                case ELASTICSEARCH:\n-                    processAlterExternalTable(stmt, table, db);\n-                    return;\n-                default:\n-                    throw new DdlException(\"Do not support alter \" + table.getType().toString() + \" table[\" + tableName + \"]\");\n-            }\n-        } finally {\n-            db.writeUnlock();\n+        switch (table.getType()) {\n+            case OLAP:\n+                OlapTable olapTable = (OlapTable) table;\n+                needProcessOutsideTableLock = processAlterOlapTable(stmt, olapTable, alterClauses, clusterName, db);\n+                break;\n+            case ODBC:\n+            case MYSQL:\n+            case ELASTICSEARCH:\n+                processAlterExternalTable(stmt, table, db);\n+                return;\n+            default:\n+                throw new DdlException(\"Do not support alter \" + table.getType().toString() + \" table[\" + tableName + \"]\");\n         }\n \n-        // the following ops should done outside db lock. because it contain synchronized create operation\n-        if (needProcessOutsideDatabaseLock) {\n+        // the following ops should done outside table lock. because it contain synchronized create operation\n+        if (needProcessOutsideTableLock) {\n             Preconditions.checkState(alterClauses.size() == 1);\n             AlterClause alterClause = alterClauses.get(0);\n             if (alterClause instanceof AddPartitionClause) {\n", "next_change": {"commit": "df54b34f9843adf80d5fa753383797690e9458dd", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 0cb6ab58d1..fe3537af0c 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -260,7 +321,7 @@ public class Alter {\n             AlterClause alterClause = alterClauses.get(0);\n             if (alterClause instanceof AddPartitionClause) {\n                 if (!((AddPartitionClause) alterClause).isTempPartition()) {\n-                    DynamicPartitionUtil.checkAlterAllowed((OlapTable) db.getTable(tableName));\n+                    DynamicPartitionUtil.checkAlterAllowed((OlapTable) db.getTableOrMetaException(tableName, TableType.OLAP));\n                 }\n                 Catalog.getCurrentCatalog().addPartition(db, tableName, (AddPartitionClause) alterClause);\n             } else if (alterClause instanceof ModifyPartitionClause) {\n", "next_change": {"commit": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex fe3537af0c..a11537eb33 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -321,7 +407,8 @@ public class Alter {\n             AlterClause alterClause = alterClauses.get(0);\n             if (alterClause instanceof AddPartitionClause) {\n                 if (!((AddPartitionClause) alterClause).isTempPartition()) {\n-                    DynamicPartitionUtil.checkAlterAllowed((OlapTable) db.getTableOrMetaException(tableName, TableType.OLAP));\n+                    DynamicPartitionUtil.checkAlterAllowed(\n+                            (OlapTable) db.getTableOrMetaException(tableName, TableType.OLAP));\n                 }\n                 Catalog.getCurrentCatalog().addPartition(db, tableName, (AddPartitionClause) alterClause);\n             } else if (alterClause instanceof ModifyPartitionClause) {\n", "next_change": {"commit": "401203da6ad6b1427c1d82f5cb40601044e79a36", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex a11537eb33..659a550be4 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -415,8 +429,9 @@ public class Alter {\n                 ModifyPartitionClause clause = ((ModifyPartitionClause) alterClause);\n                 Map<String, String> properties = clause.getProperties();\n                 List<String> partitionNames = clause.getPartitionNames();\n-                // currently, only in memory property could reach here\n-                Preconditions.checkState(properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY));\n+                // currently, only in memory and storage policy property could reach here\n+                Preconditions.checkState(properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY)\n+                        || properties.containsKey(PropertyAnalyzer.PROPERTIES_STORAGE_POLICY));\n                 ((SchemaChangeHandler) schemaChangeHandler).updatePartitionsInMemoryMeta(\n                         db, tableName, partitionNames, properties);\n                 OlapTable olapTable = (OlapTable) table;\n", "next_change": {"commit": "00a598a8391d055e304e4231c8fc44885ad3c800", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 659a550be4..5bb3323d82 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -432,7 +475,7 @@ public class Alter {\n                 // currently, only in memory and storage policy property could reach here\n                 Preconditions.checkState(properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY)\n                         || properties.containsKey(PropertyAnalyzer.PROPERTIES_STORAGE_POLICY));\n-                ((SchemaChangeHandler) schemaChangeHandler).updatePartitionsInMemoryMeta(\n+                ((SchemaChangeHandler) schemaChangeHandler).updatePartitionsProperties(\n                         db, tableName, partitionNames, properties);\n                 OlapTable olapTable = (OlapTable) table;\n                 olapTable.writeLockOrDdlException();\n", "next_change": {"commit": "e2e6a0dd8387801f9a9c951a710bc29277db318f", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 5bb3323d82..16298fff41 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -480,7 +491,7 @@ public class Alter {\n                 OlapTable olapTable = (OlapTable) table;\n                 olapTable.writeLockOrDdlException();\n                 try {\n-                    modifyPartitionsProperty(db, olapTable, partitionNames, properties);\n+                    modifyPartitionsProperty(db, olapTable, partitionNames, properties, clause.isTempPartition());\n                 } finally {\n                     olapTable.writeUnlock();\n                 }\n", "next_change": {"commit": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 16298fff41..b89cb0b733 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -499,7 +521,8 @@ public class Alter {\n                 Map<String, String> properties = alterClause.getProperties();\n                 // currently, only in memory and storage policy property could reach here\n                 Preconditions.checkState(properties.containsKey(PropertyAnalyzer.PROPERTIES_INMEMORY)\n-                        || properties.containsKey(PropertyAnalyzer.PROPERTIES_STORAGE_POLICY));\n+                        || properties.containsKey(PropertyAnalyzer.PROPERTIES_STORAGE_POLICY)\n+                        || properties.containsKey(PropertyAnalyzer.PROPERTIES_CCR_ENABLE));\n                 ((SchemaChangeHandler) schemaChangeHandler).updateTableProperties(db, tableName, properties);\n             } else {\n                 throw new DdlException(\"Invalid alter operation: \" + alterClause.getOpType());\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "5a6be411da45d641ddf680edc93f3e6baf6399e4", "committedDate": "2021-03-04 21:53:31 +0800", "message": "[Ut] Add drop meta unit test and remove some redundant code in Alter (#5395)"}, {"oid": "6be03f339cec5fdeeee185557ab7f6d612f416a8", "committedDate": "2021-04-19 09:26:19 +0800", "message": "[Bug] Fix bug that tablets are not dropped when replacing tables (#5627)"}, {"oid": "f0c5fb9f3819e700396a641ad6c5a3157d8c8f1b", "committedDate": "2021-07-02 19:24:13 +0800", "message": "[Bug] Fix bug of NPE caused by the absence of table in replay process. (#6136)"}, {"oid": "76e148988ac201829cee796c444aa8c671897e36", "committedDate": "2021-07-12 20:28:40 +0800", "message": "Support alter default bucket_num of partitioned olap table (#6023)"}, {"oid": "7e93405df39ddc3f230ffafb09156bcb0264f972", "committedDate": "2021-08-11 16:37:42 +0800", "message": "[Alter] Support alter table and column's comment (#6387)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "3d8166504af9e91d51be59f812577d0377b7d0b3", "committedDate": "2021-11-12 15:12:41 +0800", "message": "[Alter] Support alter table engine type from MySQL to ODBC (#6993)"}, {"oid": "dd36ccc3bf2f04d01cb6a4f5014fa605a412786a", "committedDate": "2021-12-02 11:39:51 +0800", "message": "[feature](storage-format) Z-Order Implement (#7149)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "bca121333e40c6f63fbf8405f4dc5addf4ed1606", "committedDate": "2022-04-13 09:52:03 +0800", "message": "[feature](cold-hot) support s3 resource (#8808)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "c18f7a31f1d1d55ba7975552a3b45d301dfe9ea5", "committedDate": "2022-06-05 13:09:14 +0800", "message": "remove redundant this (#9878)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "2a1d1b951aeaadad4b0e1a8c265d196d89070012", "committedDate": "2022-06-17 08:49:15 +0800", "message": "[data lake]Add HMS external data source. (#10088)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "2a0ac05ce7e23bc0788ee5fcbf98b7f11ed62de4", "committedDate": "2022-06-22 15:28:04 +0800", "message": "[fix] Fix duplicate code for PropertyAnalyzer.analyzeDataProperty() (#10190)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "7bdce8f57276f23452db075597be61ca4ccccfaf", "committedDate": "2022-07-20 16:20:59 +0800", "message": "[refactor](policy) refactor some policy create and check logic (#11007)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "ff8a4ec2f2c734b2dd7b267cb9cee20b016b8470", "committedDate": "2022-08-02 16:03:36 +0800", "message": "[WIP][feature] support `create`,`alter`,`refresh`,`drop` stmt syntax for multi table materialized view (#11218)"}, {"oid": "2cadf85988b9de1ae42a2c7926bb261e0b935bec", "committedDate": "2022-08-09 14:09:38 +0800", "message": "[improvement](alter) modify table's default replica if table is unpartitioned (#11550)"}, {"oid": "81c5732dc7af361227d304153a3153fb07df4b22", "committedDate": "2022-09-02 14:51:56 +0800", "message": "[feature-wip](MTMV) Support creating materialized view for multiple tables (#11646)"}, {"oid": "b7eea72d1dc59da58907c3e902541342a5eea83e", "committedDate": "2022-09-23 10:36:40 +0800", "message": "[feature-wip](MTMV) Support showing and dropping materialized view for multiple tables (#12762)"}, {"oid": "c9f26183b05e1598cb804b62d99cdeb1c577cb27", "committedDate": "2022-12-22 11:46:41 +0800", "message": "[feature-wip](MTMV) Support importing data to materialized view with multiple tables (#14944)"}, {"oid": "e31847e92599f26eb04acc2b11b9befc59409ff5", "committedDate": "2022-12-23 21:04:37 +0800", "message": "support rename hive/jdbc engine external table (#15308)"}, {"oid": "69d95c857a55e0f58e603226b8071c9644e1ce3f", "committedDate": "2022-12-28 16:09:06 +0800", "message": "[feature](remote)Add alter storage policy (#15381)"}, {"oid": "61d538c71315e35115aedab08ddeb7030c776884", "committedDate": "2023-01-04 22:24:49 +0800", "message": "[improvement](storage-policy) Add check validity when create storage policy. (#14405)"}, {"oid": "1888aba3014eff3617382f0929022fffc4c35fb2", "committedDate": "2023-01-10 11:36:17 +0800", "message": "[fix](MTMV) fix replayReplaceTable error when restart fe (#15564)"}, {"oid": "82e2102e18df5fddc62984e61815cc28a08fedaa", "committedDate": "2023-01-17 15:29:39 +0800", "message": "[fix](MTMV) Exceptions occur when dropping meterialized view with if exists (#15568)"}, {"oid": "388d6235069eacafa8ea8ebe3b41eb42730805fe", "committedDate": "2023-01-17 23:08:12 +0800", "message": "[fix](MTMV) Refine the process of refreshing data (#16006)"}, {"oid": "00a598a8391d055e304e4231c8fc44885ad3c800", "committedDate": "2023-01-31 14:13:47 +0800", "message": "[feature](cooldown) Decouple storage policy and resource (#15873)"}, {"oid": "1146bde695fbe7224ced2910b863d9fa18834ce9", "committedDate": "2023-02-04 20:17:45 +0800", "message": "[feature-wip](MTMV) Support refresh mtmv (#16218)"}, {"oid": "e2e6a0dd8387801f9a9c951a710bc29277db318f", "committedDate": "2023-02-18 23:09:34 +0800", "message": "[Feature](load) Support mutable property for partition (#16036)"}, {"oid": "96a3c60d3b9c415cad263fcdfc95dc0ca30db848", "committedDate": "2023-02-19 12:15:17 +0800", "message": "[feature-wip](MTMV) Support alter statement (#16817)"}, {"oid": "5021c0f91ae7ae7b5b16572c82bb17cdd2a63677", "committedDate": "2023-03-22 23:21:50 +0800", "message": "[feature-wip](MTMV) Support joining tables with views (#18026)"}, {"oid": "e56201780143af7e7af718125cce3baca305dc96", "committedDate": "2023-04-11 11:09:43 +0800", "message": "[feature](table-metadata) support altering the property \"light_schema_change\" for the tables which created before 1.2 (#17704)"}, {"oid": "5d1abe4507a33f51439346e11f96c16e775ad103", "committedDate": "2023-04-14 16:29:18 +0800", "message": "[Bugfix](Mtmv)Fix mtmv meta load failed (#18605)"}, {"oid": "f7651d8dfbcb27b45d788b6acdc2f754f4da55df", "committedDate": "2023-04-21 21:55:37 +0800", "message": "(fix)[olap] not support in_memory=true now (#18731)"}, {"oid": "da4de37dec5c7a0e720dea93a7769eebed24b6d1", "committedDate": "2023-04-30 17:42:02 +0800", "message": "[feature-wip](mv lifecycle) separate life cycle of base table and its materialized views (#19210)"}, {"oid": "0068828a943b33cfe78b1a5f918486eb5443afb1", "committedDate": "2023-05-14 20:01:30 +0800", "message": "[Feature](insert) support insert overwrite stmt (#19616)"}, {"oid": "e45bc160c9e0565d722f6084ed75a45f577e0794", "committedDate": "2023-05-18 13:34:05 +0800", "message": "[fix](mtmv) fix bug that should not write edit log when replaying alter mv (#19781)"}, {"oid": "a7f3bfec89a8228d25590f2d4e5276e0a1ffbb20", "committedDate": "2023-05-21 09:00:35 +0800", "message": "[refactor](cluster)(step-2) remove cluster related to Backend  (#19842)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNTE1OA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500405158", "body": "`processExternalTable` is more clear", "bodyText": "processExternalTable is more clear", "bodyHTML": "<p dir=\"auto\"><code>processExternalTable</code> is more clear</p>", "author": "morningman", "createdAt": "2020-10-06T15:45:03Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java", "diffHunk": "@@ -380,6 +381,12 @@ public void start() {\n     public abstract void process(List<AlterClause> alterClauses, String clusterName, Database db, OlapTable olapTable)\n             throws UserException;\n \n+    /*\n+     * entry function. handle alter ops for external table\n+     */\n+    public void process(List<AlterClause> alterClauses, Database db, Table externalTable)", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 41a48992b4..65b92463e7 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -384,7 +384,7 @@ public abstract class AlterHandler extends MasterDaemon {\n     /*\n      * entry function. handle alter ops for external table\n      */\n-    public void process(List<AlterClause> alterClauses, Database db, Table externalTable)\n+    public void processExternalTable(List<AlterClause> alterClauses, Database db, Table externalTable)\n             throws UserException {};\n \n     /*\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 41a48992b4..65b92463e7 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -384,7 +384,7 @@ public abstract class AlterHandler extends MasterDaemon {\n     /*\n      * entry function. handle alter ops for external table\n      */\n-    public void process(List<AlterClause> alterClauses, Database db, Table externalTable)\n+    public void processExternalTable(List<AlterClause> alterClauses, Database db, Table externalTable)\n             throws UserException {};\n \n     /*\n", "next_change": {"commit": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 65b92463e7..909d6784a2 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -392,17 +177,6 @@ public abstract class AlterHandler extends MasterDaemon {\n      */\n     public abstract void cancel(CancelStmt stmt) throws DdlException;\n \n-    @Deprecated\n-    public Integer getAlterJobNumByState(JobState state) {\n-        int jobNum = 0;\n-        for (AlterJob alterJob : alterJobs.values()) {\n-            if (alterJob.getState() == state) {\n-                ++jobNum;\n-            }\n-        }\n-        return jobNum;\n-    }\n-\n     /*\n      * Handle the finish report of alter task.\n      * If task is success, which means the history data before specified version has been transformed successfully.\n", "next_change": {"commit": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 909d6784a2..347aa36747 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -184,12 +184,14 @@ public abstract class AlterHandler extends MasterDaemon {\n      * We assume that the specified version is X.\n      * Case 1:\n      *      After alter table process starts, there is no new load job being submitted. So the new replica\n-     *      should be with version (0-1). So we just modify the replica's version to partition's visible version, which is X.\n+     *      should be with version (0-1). So we just modify the replica's version to\n+     *      partition's visible version, which is X.\n      * Case 2:\n      *      After alter table process starts, there are some load job being processed.\n      * Case 2.1:\n-     *      None of them succeed on this replica. so the version is still 1. We should modify the replica's version to X.\n-     * Case 2.2 \n+     *      None of them succeed on this replica. so the version is still 1.\n+     *      We should modify the replica's version to X.\n+     * Case 2.2\n      *      There are new load jobs after alter task, and at least one of them is succeed on this replica.\n      *      So the replica's version should be larger than X. So we don't need to modify the replica version\n      *      because its already looks like normal.\n", "next_change": {"commit": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 347aa36747..473229dd1e 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -198,7 +198,7 @@ public abstract class AlterHandler extends MasterDaemon {\n      * In summary, we only need to update replica's version when replica's version is smaller than X\n      */\n     public void handleFinishAlterTask(AlterReplicaTask task) throws MetaNotFoundException {\n-        Database db = Catalog.getCurrentCatalog().getDbOrMetaException(task.getDbId());\n+        Database db = Catalog.getCurrentInternalCatalog().getDbOrMetaException(task.getDbId());\n \n         OlapTable tbl = (OlapTable) db.getTableOrMetaException(task.getTableId(), Table.TableType.OLAP);\n         tbl.writeLockOrMetaException();\n", "next_change": {"commit": "09224d7c7410605dfdb0afccdc67065c713815c8", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\nindex 473229dd1e..c0d31cab9d 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/AlterHandler.java\n", "chunk": "@@ -198,7 +198,7 @@ public abstract class AlterHandler extends MasterDaemon {\n      * In summary, we only need to update replica's version when replica's version is smaller than X\n      */\n     public void handleFinishAlterTask(AlterReplicaTask task) throws MetaNotFoundException {\n-        Database db = Catalog.getCurrentInternalCatalog().getDbOrMetaException(task.getDbId());\n+        Database db = Env.getCurrentInternalCatalog().getDbOrMetaException(task.getDbId());\n \n         OlapTable tbl = (OlapTable) db.getTableOrMetaException(task.getTableId(), Table.TableType.OLAP);\n         tbl.writeLockOrMetaException();\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "b6c0767754f8723da20d1fde961eb54fcd75f167", "committedDate": "2021-04-15 15:55:57 +0800", "message": "[Bug] Fix alter table failed when none of new load jobs succeed on alter replica (#5617)"}, {"oid": "827f5c086775c54e5cbe84ca0268ba595fd2601d", "committedDate": "2021-04-27 09:40:17 +0800", "message": "[Bug-fix] Ignore modified table log when table has been dropped (#5688)"}, {"oid": "a2a13dadba57dac8d3960334501acc8722f6c11c", "committedDate": "2021-08-29 09:41:56 +0800", "message": "[Optimize] Make light schema change complete more faster under concurrent conditions (#6292)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "committedDate": "2022-02-14 09:29:50 +0800", "message": "[refactor] Remove old schema change rollup backend decommission code (#8030)"}, {"oid": "ddf08cc207dec9d46d2d1c084ae39d2c892a376f", "committedDate": "2022-02-25 11:08:29 +0800", "message": "[refactor](fe) Remove version hash on FE side (#8099)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "235d586f11965bde9f07a5a7a6b80191ea04cad1", "committedDate": "2022-05-19 16:36:03 +0800", "message": "[style](fe) code correct rules and name rules (#9670)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "558a21d7de608c8282d31551aa7caacbf17a3eb5", "committedDate": "2022-07-01 15:40:34 +0800", "message": "[style](*): fix declarationOrder error by rearrange code (#10347)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "9b5b411112d1b712ec201f8c3395d030e5cf79bf", "committedDate": "2022-11-10 16:17:25 +0800", "message": "[fix](schemeChange) fe oom because replicas too many when schema change (#12850)"}, {"oid": "50bf02024add54cd284f018c5e6ff711aad2c9e6", "committedDate": "2023-03-07 08:57:55 +0800", "message": "[Improvement](meta) support return total statistics of all databases for command show proc '/jobs (#17342)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzY5Nw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500407697", "body": "Should not set new schema to `externalTable` here directly.\r\nThe other alter clause may throw exception and the entire alter operation will fail, and you have to rollback all changes to the table.\r\n\r\nA correct way to to modify a \"copied\" schema of external table, and set the new schema at the end of all alter clauses.", "bodyText": "Should not set new schema to externalTable here directly.\nThe other alter clause may throw exception and the entire alter operation will fail, and you have to rollback all changes to the table.\nA correct way to to modify a \"copied\" schema of external table, and set the new schema at the end of all alter clauses.", "bodyHTML": "<p dir=\"auto\">Should not set new schema to <code>externalTable</code> here directly.<br>\nThe other alter clause may throw exception and the entire alter operation will fail, and you have to rollback all changes to the table.</p>\n<p dir=\"auto\">A correct way to to modify a \"copied\" schema of external table, and set the new schema at the end of all alter clauses.</p>", "author": "morningman", "createdAt": "2020-10-06T15:48:28Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java", "diffHunk": "@@ -132,6 +132,30 @@ private void processAddColumn(AddColumnClause alterClause, OlapTable olapTable,\n                           indexSchemaMap, newColNameSet);\n     }\n \n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n+        Column column = alterClause.getColumn();\n+        ColumnPosition columnPos = alterClause.getColPos();\n+        Set<String> newColNameSet = Sets.newHashSet(column.getName());\n+\n+        List<Column> modIndexSchema = externalTable.getBaseSchema();\n+        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n+        externalTable.setNewFullSchema(modIndexSchema);", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDcyMzExOA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500723118", "bodyText": "yes\uff0c it is a problem\u3002I will set the new schema at the end of alter external table.", "author": "HappenLee", "createdAt": "2020-10-07T03:56:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwNzY5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 3b757e115e..ff0ccf7b6b 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -132,28 +132,24 @@ public class SchemaChangeHandler extends AlterHandler {\n                           indexSchemaMap, newColNameSet);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n-        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n-        externalTable.setNewFullSchema(modIndexSchema);\n+        addColumnInternal(column, columnPos, newSchema, newColNameSet);\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumns(AddColumnsClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         Set<String> newColNameSet = Sets.newHashSet();\n         for (Column column : alterClause.getColumns()) {\n             newColNameSet.add(column.getName());\n         }\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n         for (Column newColumn : columns) {\n-            addColumnInternal(externalTable, newColumn, null, modIndexSchema, newColNameSet);\n+            addColumnInternal(newColumn, null, newSchema, newColNameSet);\n         }\n-        externalTable.setNewFullSchema(modIndexSchema);\n     }\n \n     private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 3b757e115e..1801007410 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -132,28 +132,24 @@ public class SchemaChangeHandler extends AlterHandler {\n                           indexSchemaMap, newColNameSet);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n-        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n-        externalTable.setNewFullSchema(modIndexSchema);\n+        addColumnInternal(column, columnPos, newSchema, newColNameSet);\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumns(AddColumnsClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         Set<String> newColNameSet = Sets.newHashSet();\n         for (Column column : alterClause.getColumns()) {\n             newColNameSet.add(column.getName());\n         }\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n         for (Column newColumn : columns) {\n-            addColumnInternal(externalTable, newColumn, null, modIndexSchema, newColNameSet);\n+            addColumnInternal(newColumn, null, newSchema, newColNameSet);\n         }\n-        externalTable.setNewFullSchema(modIndexSchema);\n     }\n \n     private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n", "next_change": {"commit": "baa5d6089ff8699c945c40240d265e394ede4e02", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 1801007410..4e839db39f 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -153,7 +167,7 @@ public class SchemaChangeHandler extends AlterHandler {\n     }\n \n     private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n-                                  Map<Long, LinkedList<Column>> indexSchemaMap) throws DdlException {\n+                                   Map<Long, LinkedList<Column>> indexSchemaMap) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         String targetIndexName = alterClause.getRollupName();\n         checkIndexExists(olapTable, targetIndexName);\n", "next_change": {"commit": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 4e839db39f..c5b5151882 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -166,8 +185,18 @@ public class SchemaChangeHandler extends AlterHandler {\n         }\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n-                                   Map<Long, LinkedList<Column>> indexSchemaMap) throws DdlException {\n+    /**\n+     * @param alterClause\n+     * @param olapTable\n+     * @param indexSchemaMap\n+     * @param ignoreSameColumn\n+     * @param colUniqueIdSupplier for multi add columns clause, we need stash middle state of maxColUniqueId\n+     * @return true: can light schema change, false: cannot light schema change\n+     * @throws DdlException\n+     */\n+    public boolean processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n+            Map<Long, LinkedList<Column>> indexSchemaMap, boolean ignoreSameColumn, IntSupplier colUniqueIdSupplier)\n+            throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         String targetIndexName = alterClause.getRollupName();\n         checkIndexExists(olapTable, targetIndexName);\n", "next_change": {"commit": "d2d4423c8825b058649b5e91dd0d55aad8fbc2ae", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex c5b5151882..685cda5d02 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -190,13 +188,13 @@ public class SchemaChangeHandler extends AlterHandler {\n      * @param olapTable\n      * @param indexSchemaMap\n      * @param ignoreSameColumn\n-     * @param colUniqueIdSupplier for multi add columns clause, we need stash middle state of maxColUniqueId\n+     * @param colUniqueIdSupplierMap for multi add columns clause, we need stash middle state of maxColUniqueId\n      * @return true: can light schema change, false: cannot light schema change\n      * @throws DdlException\n      */\n     public boolean processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n-            Map<Long, LinkedList<Column>> indexSchemaMap, boolean ignoreSameColumn, IntSupplier colUniqueIdSupplier)\n-            throws DdlException {\n+            Map<Long, LinkedList<Column>> indexSchemaMap, boolean ignoreSameColumn,\n+            Map<Long, IntSupplier> colUniqueIdSupplierMap) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         String targetIndexName = alterClause.getRollupName();\n         checkIndexExists(olapTable, targetIndexName);\n", "next_change": {"commit": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 685cda5d02..91c8d13150 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -193,8 +203,8 @@ public class SchemaChangeHandler extends AlterHandler {\n      * @throws DdlException\n      */\n     public boolean processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n-            Map<Long, LinkedList<Column>> indexSchemaMap, boolean ignoreSameColumn,\n-            Map<Long, IntSupplier> colUniqueIdSupplierMap) throws DdlException {\n+                                     Map<Long, LinkedList<Column>> indexSchemaMap, boolean ignoreSameColumn,\n+                                     Map<Long, IntSupplier> colUniqueIdSupplierMap) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         String targetIndexName = alterClause.getRollupName();\n         checkIndexExists(olapTable, targetIndexName);\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "47e33c79873f4277fd39da05a8532dcaa211a4d3", "committedDate": "2021-02-03 13:22:00 +0800", "message": "Support create index on unique value column (#5305)"}, {"oid": "2a2cec91f9c98db1e6ee4663ca08cfa4a92e61be", "committedDate": "2021-02-05 18:50:04 +0800", "message": "Adding a column with SUM aggregation to table should restrict the default value (#5315)"}, {"oid": "de87f4ae840c1a527379c046d7f01afb2e2d7dcc", "committedDate": "2021-04-24 17:42:27 +0800", "message": "[Feature] Add list partition support (#5529)"}, {"oid": "ad365b3b64ec4be6fb72f04b0b7df6c6a8ab5989", "committedDate": "2021-06-09 15:00:17 +0800", "message": "[Bug] Fix bug that cannot cancel alter table operation when table is unstable (#5998)"}, {"oid": "a2a13dadba57dac8d3960334501acc8722f6c11c", "committedDate": "2021-08-29 09:41:56 +0800", "message": "[Optimize] Make light schema change complete more faster under concurrent conditions (#6292)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "4f744333c209080f20419c2c7a0ef60ca87275f2", "committedDate": "2021-09-10 09:52:03 +0800", "message": "fix some core in local test: (#6594)"}, {"oid": "b2f1e21a3bc1689fa144084de96a1ccb7de5484a", "committedDate": "2021-09-10 09:53:30 +0800", "message": "[Bugs] Fix some bugs (#6586)"}, {"oid": "32f6dec80fbe52b8e11a12e6d268e8cdaabfaf47", "committedDate": "2021-10-13 11:37:39 +0800", "message": "fix dup table don't schema schange (#6791)"}, {"oid": "bc069eac8bd12afd04c4a86443dcbd3cec7214f5", "committedDate": "2021-10-17 22:53:28 +0800", "message": "[BUG] fix bug for schema schange (#6839)"}, {"oid": "4170aabf8328ca99831e42860ea45fe39b57f442", "committedDate": "2021-10-27 18:03:12 +0800", "message": "[Optimize] optimize some session variable and profile (#6920)"}, {"oid": "baa5d6089ff8699c945c40240d265e394ede4e02", "committedDate": "2021-11-26 10:16:01 +0800", "message": "[fix](alter) Fix bug that partition column of a unique key table can be modified (#7217)"}, {"oid": "8b7d7e4dac7ae3af5d27166cd68ca88fa73ee816", "committedDate": "2022-01-16 10:40:44 +0800", "message": "[improvement] create/drop index support if [not] exist (#7748)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "committedDate": "2022-02-14 09:29:50 +0800", "message": "[refactor] Remove old schema change rollup backend decommission code (#8030)"}, {"oid": "ddf08cc207dec9d46d2d1c084ae39d2c892a376f", "committedDate": "2022-02-25 11:08:29 +0800", "message": "[refactor](fe) Remove version hash on FE side (#8099)"}, {"oid": "3baf6cefc347ce5acba43ee7fee9aa9e9204e368", "committedDate": "2022-05-03 22:36:36 +0800", "message": "[fix](alter-job) Missing alter job when doing checkpoint image (#9329)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "e701c057dc675babe7a859e151287fea7cd5c850", "committedDate": "2022-05-26 16:56:20 +0800", "message": "[style](fe) wrap and whitespace rules (#9764)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "44082317659ccd81355029d9cc9e7caef29ca641", "committedDate": "2022-06-26 09:52:16 +0800", "message": "[fix](random-distribution) Make aggregate keys table with replace type columns and unique keys table can only have hash distribution to make data computing correctly (#10414)"}, {"oid": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "committedDate": "2022-07-12 19:41:06 +0800", "message": "[Feature] Lightweight schema change of add/drop column (#10136)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "e54b57107a146f94e8f83b38b3600baac49916c2", "committedDate": "2022-07-26 11:49:14 +0800", "message": "[bug](FE): Fix show alter column return incorrect job progress (#11184)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "3070318f95ad486466be3021019d9b7eeebcd1ad", "committedDate": "2022-08-05 23:27:29 +0800", "message": "[Enhancement](IdGenerator) Use IdGeneratorBuffer to get better performance for creating tablet in fe when do alter table job (#11524)"}, {"oid": "d2d4423c8825b058649b5e91dd0d55aad8fbc2ae", "committedDate": "2022-08-15 21:39:27 +0800", "message": "[feature](schema change) Light schema change support rollup (#11494)"}, {"oid": "56574b59484fff16723b6871609f150f2c3ddbf6", "committedDate": "2022-08-16 11:45:49 +0800", "message": "[refactor] rename data source to catalog (#11243)"}, {"oid": "adfef85c0ca0093927c9bf447a2f42e7fbabd08e", "committedDate": "2022-08-22 08:27:40 +0800", "message": "[improve](fe): use `Pair.of` to replace `new Pair<>()` (#11945)"}, {"oid": "e5bfbbe7611376a1b35541bfb048fc422b14f661", "committedDate": "2022-08-26 09:40:11 +0800", "message": "[feature-wip](unique-key-merge-on-write) support alter table column for MoW (#12052)"}, {"oid": "e01986b8b9f1030103bc6bf4278a7ec8e3f8c893", "committedDate": "2022-09-17 11:29:36 +0800", "message": "[feature](light-schema-change) fix light-schema-change and add more cases (#12160)"}, {"oid": "9b5b411112d1b712ec201f8c3395d030e5cf79bf", "committedDate": "2022-11-10 16:17:25 +0800", "message": "[fix](schemeChange) fe oom because replicas too many when schema change (#12850)"}, {"oid": "fb140d018059cd3e30f81e98b065a5b2f1fa4f78", "committedDate": "2022-11-17 22:39:09 +0800", "message": "[Enhancement](sequence-column) optimize the use of sequence column (#13872)"}, {"oid": "ca90253b09ddaa49e45f3d5a12d4709bc03e91ed", "committedDate": "2022-11-30 10:04:33 +0800", "message": "[config](storage-policy) add a FE config to disable storage policy by default (#14655)"}, {"oid": "c0b764e419b45f268f759814202d204861e0c30a", "committedDate": "2022-12-08 17:36:54 +0800", "message": "[fix](schemachange) fix the schema change that causes the be core dump. (#14804)"}, {"oid": "a291cb17beb8e7dd47c91654fa08ec9e21ceaf45", "committedDate": "2022-12-25 10:09:40 +0800", "message": "[fix](information-schema) fix bug that query tables in information_schema db will return error #15336"}, {"oid": "75aa00d3d02ee5e361f05365c7c430917be0aee8", "committedDate": "2022-12-28 18:01:50 +0800", "message": "[Feature](NGram BloomFilter Index) add new ngram bloom filter index to speed up like query (#11579)"}, {"oid": "bb28144c7603e6f6f1b99900c6526c1915424a19", "committedDate": "2023-01-10 19:03:06 +0800", "message": "[fix](schema change) bugfix for light schema change while with rollup (#15681)"}, {"oid": "58c520dbfde1ce09c0a23a5ec2276ca687f6c0db", "committedDate": "2023-01-14 23:58:00 +0800", "message": "[Feature](remote) Cooldown cold data to object storage only one replica (#15832)"}, {"oid": "00a598a8391d055e304e4231c8fc44885ad3c800", "committedDate": "2023-01-31 14:13:47 +0800", "message": "[feature](cooldown) Decouple storage policy and resource (#15873)"}, {"oid": "e1f13863950237d96e8488dd42fa288cc6df94b7", "committedDate": "2023-02-09 09:12:55 +0800", "message": "[fix](cooldown) Rewrite update cooldown conf (#16488)"}, {"oid": "43eca4f209c03a011f541b0b6ba6ad97935d3adf", "committedDate": "2023-02-10 17:56:17 +0800", "message": "[Feature-WIP](inverted index) Implementation for alter inverted index. (#16371)"}, {"oid": "69c70d27bd67ace69570f65b1784a71ac003f52b", "committedDate": "2023-02-15 11:40:44 +0800", "message": "[Refactor](auth) Add AccessController to support customized authorization (#16679)"}, {"oid": "76ef4af29dc5236aaef7892fe8157e2024f6da84", "committedDate": "2023-02-21 22:36:56 +0800", "message": "[fix](alter inverted index) fix write edit log in replaymodifyTableAddOrDropInvertedIndices function (#16977)"}, {"oid": "edead494cb76b38b8d5e9ce46d3659da9b16f579", "committedDate": "2023-02-23 15:47:17 +0800", "message": "[Enhancement](storage) add a new hidden column __DORIS_VERSION_COL__ for unique key table (#16509)"}, {"oid": "a12b3c3f0c5019b978890a4e4bf8702c567b0bcb", "committedDate": "2023-02-24 10:25:48 +0800", "message": "[fix](alter inverted index) fix incorrect CreateTime of 'show alter' query result after fe restart (#17043)"}, {"oid": "e8de07a6a5df6c1c0187fa346d1e9cf6a6b77752", "committedDate": "2023-02-27 18:42:31 +0800", "message": "[feature](cooldown) Forbid storage policy for MoW tables (#17148)"}, {"oid": "b839353c2dd2f8f72b15eea82e4a86f486ba58ae", "committedDate": "2023-03-01 19:32:39 +0800", "message": "[fix](inverted index) fix BE coredump because of not ignore case ensitivity for column name when create index (#17276)"}, {"oid": "50bf02024add54cd284f018c5e6ff711aad2c9e6", "committedDate": "2023-03-07 08:57:55 +0800", "message": "[Improvement](meta) support return total statistics of all databases for command show proc '/jobs (#17342)"}, {"oid": "4a0361914b9ce11c654d1a8d8375b264ee629abd", "committedDate": "2023-03-09 16:33:46 +0800", "message": "[fix](alter inverted index) add or drop inverted index also need change table state to SCHEMA_CHANGE (#17471)"}, {"oid": "3593b82498e83cb2b16febe5723c858dd4133715", "committedDate": "2023-03-17 20:54:50 +0800", "message": "[fix](schema change) Fix fe restart failed because of replay schema change alter job failed (#17825)"}, {"oid": "410907c940a185a00b8c3c975ff5a799c9303eac", "committedDate": "2023-03-22 17:47:30 +0800", "message": "[improvement](inverted index)UNIQUE_KEYS table only supports inverted index when merge_on_write is enabled. (#17827)"}, {"oid": "df0eca4003f38bfac949b47b1a056aee0efe8b02", "committedDate": "2023-03-25 22:38:19 +0800", "message": "[improvement] (schema change) Lightweight schema change of modify column with varchar length (#17207)"}, {"oid": "7d49d9cf99e231adf09c77bf2bfb89b08b52cbc8", "committedDate": "2023-04-02 15:51:21 +0800", "message": "[improvement](dynamic partition) Fix dynamic partition no bucket (#18300)"}, {"oid": "591f76a6a41eb53b736336aec1acdc82f4d9fb3f", "committedDate": "2023-04-06 15:07:37 +0800", "message": "[fix](alter inverted index) Temporary deal with add or drop inverted index by directly schema change (#18378)"}, {"oid": "7631a8fb399ff9cad581688e455a888cda8363dd", "committedDate": "2023-04-07 11:11:55 +0800", "message": "[Bug](materialized-view) fix mv define expr persistence replay incorrect after schema change (#18418)"}, {"oid": "e56201780143af7e7af718125cce3baca305dc96", "committedDate": "2023-04-11 11:09:43 +0800", "message": "[feature](table-metadata) support altering the property \"light_schema_change\" for the tables which created before 1.2 (#17704)"}, {"oid": "94509e51af6d959d70cd0cf9375ef4da5044ba40", "committedDate": "2023-04-20 19:20:03 +0800", "message": "[fix](editLog) add sufficient replay logic and edit log for altering light schema change (#18746)"}, {"oid": "f9f5bbde6f0d59422c5dbe0b955345d8baa164af", "committedDate": "2023-04-27 09:59:56 +0800", "message": "[feature-wip](duplicate_no_keys) add create duplicate table without keys (#18758)"}, {"oid": "a978be32a6c8cd96d01f1b9e728648e68f89dcbd", "committedDate": "2023-04-30 22:46:36 +0800", "message": "[fix](schema_change) remove shadow prefix of schema for tablesink (#18822)"}, {"oid": "2596d68424c9ff6787cf027dac43c161ae855c65", "committedDate": "2023-05-23 18:23:12 +0800", "message": "[fix](schema change) Change table state to NORMAL by SchemaChangeJob instead of SchemaChangeHandler (#19838)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}, {"oid": "ae352997b46036342cd229e4fa57d0f77e6d0f57", "committedDate": "2023-05-28 11:23:07 +0800", "message": "[Enhancement](alter inverted index) Improve alter inverted index performance with light weight add or drop inverted index (#19063)"}, {"oid": "ecdc5124bed42a4fd33007a77d9ed3ab93497584", "committedDate": "2023-06-02 09:22:41 +0800", "message": "[feature-wip](duplicate-no-keys) schame change support for duplicate no keys (#19326)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500408670", "body": "This is not a good way to alter external table.\r\nYou write 2 edit logs here, which will make this operation non-atomic\u3002", "bodyText": "This is not a good way to alter external table.\nYou write 2 edit logs here, which will make this operation non-atomic\u3002", "bodyHTML": "<p dir=\"auto\">This is not a good way to alter external table.<br>\nYou write 2 edit logs here, which will make this operation non-atomic\u3002</p>", "author": "morningman", "createdAt": "2020-10-06T15:49:48Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -5045,6 +5046,36 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n+        String tableName = table.getName();\n+        String newTableName = tableRenameClause.getNewTableName();\n+        if (tableName.equals(newTableName)) {\n+            throw new DdlException(\"Same table name\");\n+        }\n+\n+        // check if name is already used\n+        if (db.getTable(newTableName) != null) {\n+            throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+        }\n+\n+        table.setName(newTableName);\n+\n+        db.dropTable(tableName);\n+        db.createTable(table);\n+\n+        TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n+        editLog.logTableRename(tableInfo);\n+        LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n+    }\n+\n+    public void reflushTable(Database db, Table table) throws DdlException {", "originalCommit": "b5550aac38c32f9dabed2ab5535bf2b2ca03a5af", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNjQ4NA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r500816484", "bodyText": "yes\uff0cto make sure it is atomic. We may need add a new OperationType in edit log.", "author": "HappenLee", "createdAt": "2020-10-07T08:06:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA=="}], "type": "inlineReview", "revised_code": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex 443616cdbd..d7dbb5f7a1 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5068,12 +5120,11 @@ public class Catalog {\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n-    public void reflushTable(Database db, Table table) throws DdlException {\n-        DropInfo dropInfo = new DropInfo(db.getId(), table.getId(), -1, true);\n-        editLog.logDropTable(dropInfo);\n-        CreateTableInfo createTableInfo = new CreateTableInfo(db.getFullName(), table);\n-        editLog.logCreateTable(createTableInfo);\n-        LOG.info(\"reflush db[{}] table[{}] for schema change\", db.getFullName(), table.getName());\n+    public void refreshExternalTableSchema(Database db, Table table, List<Column> newSchema) {\n+        RefreshExternalTableInfo refreshExternalTableInfo = new RefreshExternalTableInfo(db.getFullName(),\n+                table.getName(), newSchema);\n+        editLog.logRefreshExternalTableSchema(refreshExternalTableInfo);\n+        LOG.info(\"refresh db[{}] table[{}] for schema change\", db.getFullName(), table.getName());\n     }\n \n     public void replayRenameTable(TableInfo tableInfo) throws DdlException {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex 443616cdbd..2b73e27ccd 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5068,12 +5101,11 @@ public class Catalog {\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n-    public void reflushTable(Database db, Table table) throws DdlException {\n-        DropInfo dropInfo = new DropInfo(db.getId(), table.getId(), -1, true);\n-        editLog.logDropTable(dropInfo);\n-        CreateTableInfo createTableInfo = new CreateTableInfo(db.getFullName(), table);\n-        editLog.logCreateTable(createTableInfo);\n-        LOG.info(\"reflush db[{}] table[{}] for schema change\", db.getFullName(), table.getName());\n+    public void refreshExternalTableSchema(Database db, Table table, List<Column> newSchema) {\n+        RefreshExternalTableInfo refreshExternalTableInfo = new RefreshExternalTableInfo(db.getFullName(),\n+                table.getName(), newSchema);\n+        editLog.logRefreshExternalTableSchema(refreshExternalTableInfo);\n+        LOG.info(\"refresh db[{}] table[{}] for schema change\", db.getFullName(), table.getName());\n     }\n \n     public void replayRenameTable(TableInfo tableInfo) throws DdlException {\n", "next_change": {"commit": "df54b34f9843adf80d5fa753383797690e9458dd", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex 2b73e27ccd..a5d102a208 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5108,27 +5251,31 @@ public class Catalog {\n         LOG.info(\"refresh db[{}] table[{}] for schema change\", db.getFullName(), table.getName());\n     }\n \n-    public void replayRenameTable(TableInfo tableInfo) throws DdlException {\n+    public void replayRenameTable(TableInfo tableInfo) throws MetaNotFoundException {\n         long dbId = tableInfo.getDbId();\n         long tableId = tableInfo.getTableId();\n         String newTableName = tableInfo.getNewTableName();\n \n-        Database db = getDb(dbId);\n+        Database db = this.getDbOrMetaException(dbId);\n         db.writeLock();\n         try {\n-            Table table = db.getTable(tableId);\n+            Table table = db.getTableOrMetaException(tableId);\n             String tableName = table.getName();\n             db.dropTable(tableName);\n-            table.setName(newTableName);\n+            table.writeLock();\n+            try {\n+                table.setName(newTableName);\n+            } finally {\n+                table.writeUnlock();\n+            }\n             db.createTable(table);\n-\n             LOG.info(\"replay rename table[{}] to {}\", tableName, newTableName);\n         } finally {\n             db.writeUnlock();\n         }\n     }\n \n-    // the invoker should keep db write lock\n+    // the invoker should keep table's write lock\n     public void modifyTableColocate(Database db, OlapTable table, String colocateGroup, boolean isReplay,\n             GroupId assignedGroupId)\n             throws DdlException {\n", "next_change": {"commit": "e4d999274fbfdfe64c7a07877d73eb18ee6746ca", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex a5d102a208..5e4005a453 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5284,6 +5336,14 @@ public class Catalog {\n         GroupId groupId = null;\n         if (!Strings.isNullOrEmpty(colocateGroup)) {\n             String fullGroupName = db.getId() + \"_\" + colocateGroup;\n+            //When the new name is the same as the old name, we return it to prevent npe\n+            if (!Strings.isNullOrEmpty(oldGroup)) {\n+                String oldFullGroupName = db.getId() + \"_\" + oldGroup;\n+                if (oldFullGroupName.equals(fullGroupName)) {\n+                    LOG.warn(\"modify table[{}] group name same as old group name,skip.\", table.getName());\n+                    return;\n+                }\n+            }\n             ColocateGroupSchema groupSchema = colocateTableIndex.getGroupSchema(fullGroupName);\n             if (groupSchema == null) {\n                 // user set a new colocate group,\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "4204a878c895c6ccfb3d188ec84a1c42e83b290c", "committedDate": "2020-11-10 10:50:31 +0800", "message": "[Bug] Fix some bugs of load job scheduler (#4869)"}, {"oid": "4ccd7b84ade17ab251022a16c5eddb722d6d1e16", "committedDate": "2020-11-11 21:22:10 +0800", "message": "[Bug] Rename table logic error (#4870)"}, {"oid": "74bfd695957c23d7a1bfec1b926dbd0c4997b564", "committedDate": "2020-12-16 23:44:20 +0800", "message": "[Bug] Forbidden creating table with dynamic partition when FE.config dynamic_partition_enable=false (#5043)"}, {"oid": "d7a584ac59481b9281b6bbab04d0fc27de6e9851", "committedDate": "2020-12-31 09:41:38 +0800", "message": "[Rebalancer] support partition rebalancer (#5010)"}, {"oid": "d5768cf7d907565d5c9410ccde3c8160ab927d8c", "committedDate": "2021-01-04 09:32:05 +0800", "message": "[Bug] Fix create colocate table bug (#5139)"}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "78b84594e6e727899afcbca6bfe216ad102b2565", "committedDate": "2021-01-15 09:46:44 +0800", "message": "[Feature] Support Create Dynamic Partition Immediately FirstTime Without Wating Schedule. (#5209)"}, {"oid": "b25bcee5d332387d351c800dd6f38df49eb7ec08", "committedDate": "2021-01-20 21:38:06 +0800", "message": "[Bug] Remove schema hash and fix bug of calculating table signature (#5254)"}, {"oid": "d3f1b49faa9f73b9f52cefe5ceebe5a8b38e1153", "committedDate": "2021-01-23 21:09:54 +0800", "message": "[Bug] Fix bug that recover table throw NPE (#5279)"}, {"oid": "6bd22bc573c3f68fe9f874ad212bfabb19e3d8c0", "committedDate": "2021-01-28 18:50:18 +0800", "message": "[BackupAndRestore] Support backup and restore view and external odbc table (#5299)"}, {"oid": "de57667d6dc7ddc32fabd0f5c3299623ab9895d1", "committedDate": "2021-01-30 20:33:34 +0800", "message": "[Delete] Support delete with multi partitions (#5252)"}, {"oid": "be0b0f930cef08229d407e680fd949d1d1c44484", "committedDate": "2021-02-01 00:10:24 +0800", "message": "[Load] Load job should not begin transaction when task queue in loadingLoadTaskScheduler is full to avoid txn timeout (#5205)"}, {"oid": "47e33c79873f4277fd39da05a8532dcaa211a4d3", "committedDate": "2021-02-03 13:22:00 +0800", "message": "Support create index on unique value column (#5305)"}, {"oid": "059791c6acf45483204c406b852fe7aa18b087a2", "committedDate": "2021-02-03 13:22:38 +0800", "message": "[Config] Change some defualt value of Doris config (#5348)"}, {"oid": "77b756fb87ce42986271d67080fb0cacadc8b903", "committedDate": "2021-02-03 22:19:20 +0800", "message": "[Refactor] Remove redundant code of mini load and insert (#4966)"}, {"oid": "c283bb3677d1738dcb0d16f2aa7ee14eaa21c4cc", "committedDate": "2021-02-07 22:37:18 +0800", "message": " [Bug] Fix bug that not erase meta such as tablet when force drop db, table, partition (#5329)"}, {"oid": "f77b8ce8e4ca8cfc2edc25d6e11d57f49d5b0636", "committedDate": "2021-02-07 22:39:45 +0800", "message": "[UT] Modify to avoid some UT failure accidentally (#5359)"}, {"oid": "f12f32da11642c663f0f34f04a8d170f55849d26", "committedDate": "2021-02-07 22:41:55 +0800", "message": "[Bug] Support if not exists in create table like stmt (#5368)"}, {"oid": "99e1a97822ebfd12aedf74e7a2b311ebd66cd5e1", "committedDate": "2021-02-16 22:34:48 +0800", "message": "[Bug] Fix NPE when replaying modify table property (#5378)"}, {"oid": "c95f00d5081082d328fa857b49a8bd0b58404611", "committedDate": "2021-03-05 10:50:54 +0800", "message": "[Bug] Fix bug that the image cannot be pulled after the new fe nodes added (#5418)"}, {"oid": "a1160bcd99ec527827a1a03177343ea775670ae6", "committedDate": "2021-03-08 09:32:16 +0800", "message": "[Bug] Fix bug that data lost when doing backup job  (#5473)"}, {"oid": "543ed46bc3d65bc9c050dd346ff72f5cad9e27ad", "committedDate": "2021-03-12 14:24:34 +0800", "message": "(#5390)fix NPE when replay colocate group (#5391)"}, {"oid": "a25e3afa5b43051a3f2ca9faae679b01481b0c0b", "committedDate": "2021-04-11 22:02:03 +0800", "message": "[Colocate plan][Step1] Colocate join covers more situations (#5521)"}, {"oid": "75db273b9358d95ea5bc402a04a77424abf39754", "committedDate": "2021-04-12 11:23:49 +0800", "message": "[Doris On ES][WIP] Support external ES  table with `SSL` secured and configurable node sniffing (#5325)"}, {"oid": "a4f81941118d7e5f7d4e000d12298d8fecca2194", "committedDate": "2021-04-21 16:36:12 +0800", "message": "[Audit][Stream Load] Support audit function for stream load (#5452)"}, {"oid": "b93e8416885ac440e9c294c4bb2089e33bde788b", "committedDate": "2021-04-23 09:47:30 +0800", "message": "[Optimize] Remove expired txns in batch to avoid holding lock for too long (#5675)"}, {"oid": "de87f4ae840c1a527379c046d7f01afb2e2d7dcc", "committedDate": "2021-04-24 17:42:27 +0800", "message": "[Feature] Add list partition support (#5529)"}, {"oid": "827f5c086775c54e5cbe84ca0268ba595fd2601d", "committedDate": "2021-04-27 09:40:17 +0800", "message": "[Bug-fix] Ignore modified table log when table has been dropped (#5688)"}, {"oid": "efd51b47e51bb8e008f6ab6105f86dd6bf5abc02", "committedDate": "2021-05-08 10:56:10 +0800", "message": "[Bug] Fix some little bugs in FE (#5758)"}, {"oid": "55ca52a42d34047ed39bcc8edaa0ddccd8548989", "committedDate": "2021-05-12 10:38:23 +0800", "message": "[Bug] Fix bug that Drop olap table may introduce some problems when table's state is not normal (#5712)"}, {"oid": "e7a6d659a9525a1ac4a403d9fc07d3b7addadf70", "committedDate": "2021-05-13 22:34:23 +0800", "message": "[Optimize] Use BufferedOutputStream to speed up checkpoint (#5802)"}, {"oid": "c95bebfa5cbd11a0b92701a9dd674d0148d23c30", "committedDate": "2021-06-09 13:00:16 +0800", "message": "[Bug] Ignore drop table log when table has been dropped (#5973)"}, {"oid": "ff47dc750d7270b968980e19d89f195d1d812ff7", "committedDate": "2021-06-18 10:50:47 +0800", "message": "[Bug] Fix problem for thread safety issues and setting the status of non-existent replica does not prompt any error message (#6019)"}, {"oid": "ce49fa5968842287093eb9b4760b44c84833401a", "committedDate": "2021-06-30 09:28:26 +0800", "message": "[Bug][DynamicPartition] Take table_id as key of runtimeInfo (#6053)"}, {"oid": "f0c5fb9f3819e700396a641ad6c5a3157d8c8f1b", "committedDate": "2021-07-02 19:24:13 +0800", "message": "[Bug] Fix bug of NPE caused by the absence of table in replay process. (#6136)"}, {"oid": "56112c47180680857c76e8d6d115afdc32932738", "committedDate": "2021-07-12 13:32:44 +0800", "message": "[Bug] Fix bug that adding conflicting partition doesn't report errors (#6109)"}, {"oid": "dd15da4e12c40d26d749a08a056075f93eefdbe0", "committedDate": "2021-07-12 15:31:33 +0800", "message": "[DynamicPartition] Fix UT and add more tests for dynamic partition (#6198)"}, {"oid": "76e148988ac201829cee796c444aa8c671897e36", "committedDate": "2021-07-12 20:28:40 +0800", "message": "Support alter default bucket_num of partitioned olap table (#6023)"}, {"oid": "f93a272956e385f91a70b4f66d7ecd2111fb9f3f", "committedDate": "2021-07-13 11:35:35 +0800", "message": "[Bug] Fix bug that nondeterministic functions should not be rewrote in create view stmt (#6096)"}, {"oid": "68f988b78a0f652b9853049b424f2ac5639a5486", "committedDate": "2021-07-15 11:15:11 +0800", "message": "[Optimize] Use flat_hash_set to replace unorderd_set in InPredicate (#6216)"}, {"oid": "94c50012b2d60228861aaac0877decd550901ed2", "committedDate": "2021-07-19 20:26:14 +0800", "message": "[Performance] Optimize the performance of tabletReport (#6200)"}, {"oid": "b1f597910338af09cf762f95d98d734b25c2685c", "committedDate": "2021-07-27 13:36:53 +0800", "message": "[New Feature][Meta][Image] Add file header and footer for image (#6207)"}, {"oid": "b3a52a05d535bbf1f6d644fe46e71901d55d4482", "committedDate": "2021-07-27 13:38:15 +0800", "message": "[Update] Support update syntax (#6230)"}, {"oid": "c8c571af37193ee10b5437fd9b47b30c4b917d60", "committedDate": "2021-08-08 21:39:34 +0800", "message": "[New Feature] Support synchronizing MySQL binlog in real time [stage 1] (#6289)"}, {"oid": "9216735cfa30ae2ee06f962ee457bebdb51eed76", "committedDate": "2021-08-11 14:54:06 +0800", "message": "[New Featrue] Support Vectorization Execution Engine Interface For Doris (#6329)"}, {"oid": "8a267f1ac55a4215633e489f8283f11c8e585715", "committedDate": "2021-08-12 10:07:51 +0800", "message": "[Feature] Support for cleaning the trash actively (#6323)"}, {"oid": "5e6f1b89da8abe27327833243242ed94555a5349", "committedDate": "2021-08-13 21:56:34 +0800", "message": "[Feature] Support sql block rule (#6192)"}, {"oid": "63a0d9d23a3ce4e5c6413648bfcf9e67b57fd200", "committedDate": "2021-08-16 17:20:05 +0800", "message": "Add statistics struct and Support manually inject statistics (#6420)"}, {"oid": "6c23f8d4138ad3af46f5b19618d732d78114e8d6", "committedDate": "2021-08-19 14:17:57 +0800", "message": "[Bug] Fix bug that check point load image failed in some circumstance (#6465)"}, {"oid": "92e50504e5b299200408f916e8742dc8772c0263", "committedDate": "2021-08-25 22:34:45 +0800", "message": "[Feature] Supports case-insensitive table names. (#6403)"}, {"oid": "7324f4b0ae5e7a0442a32d9b1bf75af35223089d", "committedDate": "2021-08-30 18:52:18 +0800", "message": "[Bug] Regularly clean up old DeleteInfos in the DeleteHandler (#6448)"}, {"oid": "a949dcd9f6e4e2a87be8c61302d080f78b390ee9", "committedDate": "2021-08-31 20:33:26 +0800", "message": "[Feature] Create table like clause support copy rollup (#6475)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "80cb22c880394a4c7d5b3ada4251c6b2e49a297b", "committedDate": "2021-09-07 11:54:15 +0800", "message": "[Bug] [Truncate] Fix tablet number is different between the new partition and base partition after truncate operation (#6552)"}, {"oid": "bf6d043a7ec545efe8660cb80aeeed13cd973c3b", "committedDate": "2021-09-07 11:55:23 +0800", "message": "[Bug] Fix bug that can not repair replica in DECOMMISSION state (#6560)"}, {"oid": "de66312a1a0cce9094b7c514ff90c84528d9b450", "committedDate": "2021-09-07 16:57:45 +0800", "message": "[Job Clean] Sort out the cleanup logic of historical jobs (#6553)"}, {"oid": "b2f1e21a3bc1689fa144084de96a1ccb7de5484a", "committedDate": "2021-09-10 09:53:30 +0800", "message": "[Bugs] Fix some bugs (#6586)"}, {"oid": "2c58724c84021ae5c9fdd5ba304808b1e79191d4", "committedDate": "2021-09-10 09:54:44 +0800", "message": "Support create table as select (#6102)"}, {"oid": "67472f35182eadb8920f0929b26fe05c6bbb40e7", "committedDate": "2021-09-16 10:28:40 +0800", "message": "[Meta][Refactor] Use lambda expressions to save Image (#6646)"}, {"oid": "95cdb7cc0caba77d2a16cbff5d4717b8354bb7a1", "committedDate": "2021-09-17 10:01:27 +0800", "message": "[Enhance] [Binlog] Reduce thread number of SyncJob to save resources (#6418)"}, {"oid": "537a542dba5604a5ad55ddfc959404cccc6dd8b4", "committedDate": "2021-09-25 12:24:29 +0800", "message": "[Bugs] Fix the bugs list of sync job (#6705)"}, {"oid": "e4d999274fbfdfe64c7a07877d73eb18ee6746ca", "committedDate": "2021-09-27 10:34:41 +0800", "message": "[BUG] Fix a bug when modify table's colocate group with same name (#6695)"}, {"oid": "ad3c9390a26c9f5792f6992d4a0f1123c8d8594e", "committedDate": "2021-09-29 11:11:28 +0800", "message": "[Bug] Fix bdbje getDatabaseNames() bug and scan node close bug (#6769)"}, {"oid": "e7707c8180fbc6b8e02c4cc8b9f32e2e99ecb156", "committedDate": "2021-09-30 18:26:21 +0800", "message": "[FOLLOWUP] create table like clause support copy rollup (#6580)"}, {"oid": "6a058792af8d9120eb85633844fa6f178bbb7a05", "committedDate": "2021-10-13 11:37:12 +0800", "message": "[Feature][Step1] Support lateral view FE part (#6745)"}, {"oid": "e547e77f860c63879703959567ac38cc1f58b09c", "committedDate": "2021-10-13 11:37:58 +0800", "message": "Fix variable dbName that is never used (#6802)"}, {"oid": "fcd15edbf92556d7566355b8562c6420cb75901e", "committedDate": "2021-10-15 10:18:11 +0800", "message": "[Export] Support export job with label (#6835)"}, {"oid": "adb6bfdf7492b2d0a8a5b4a07c4a3a2cf5fc0622", "committedDate": "2021-10-25 10:07:27 +0800", "message": "[Bug] Fix bug that truncate table may change the storage medium property (#6905)"}, {"oid": "58804d35701d7caf145d4f9997bd35a7cf272d2e", "committedDate": "2021-11-11 15:41:49 +0800", "message": "[Colocate] Fix bug that colocate group can not be redistributed after dropping a backend (#7020)"}, {"oid": "5b01f7bba2462daf818fc956f650527d51e8be97", "committedDate": "2021-11-16 11:59:07 +0800", "message": "[Feature] Support query hive table (#6569)"}, {"oid": "52ebb3d8f56cf6fcd0df2f9cdbb056bafd136c6d", "committedDate": "2021-11-20 21:39:37 +0800", "message": "[feat](mysql-compatibility) Increase compatibility with mysql (#7041)"}, {"oid": "d3c020b3cb131d765018a168c1b8c6e304bf1626", "committedDate": "2021-11-24 10:37:54 +0800", "message": "[feat-opt](fe-config) Add tablets number limit to void wrong usage (#7025)"}, {"oid": "dd36ccc3bf2f04d01cb6a4f5014fa605a412786a", "committedDate": "2021-12-02 11:39:51 +0800", "message": "[feature](storage-format) Z-Order Implement (#7149)"}, {"oid": "2b90967c4c8c0659deb981c08d3e6ce784460b02", "committedDate": "2021-12-16 10:39:22 +0800", "message": "[fix][refactor](broker load) refactor the scheduling logic of broker load (#7371)"}, {"oid": "bf4a867e855c2cf717a3cbd9fb6115f97cead639", "committedDate": "2022-01-04 10:28:14 +0800", "message": "[improvement](tablet-repair) add a config repair_slow_replica (#7423)"}, {"oid": "902ab9304357b65a9e085b340b661da869a6833a", "committedDate": "2022-01-14 09:25:10 +0800", "message": "[fix](session-variable) fix bug that checkpoint may overwrite the global variables (#7526)"}, {"oid": "e1d7233e9ca6addf4967c7df10a7c7c5728716d9", "committedDate": "2022-01-18 10:07:15 +0800", "message": "[feature](vectorization) Support Vectorized Exec Engine In Doris (#7785)"}, {"oid": "ed39ff1500a853df08053180cead0a8a282e0f8c", "committedDate": "2022-01-21 09:27:06 +0800", "message": "[feature](compaction) Support triggering compaction for a specific partition manually (#7521)"}, {"oid": "3b8d48f08b7c53abd236e41a16791c38a6aa847d", "committedDate": "2022-01-27 10:22:47 +0800", "message": "[feature-wip](iceberg) Step1: Support create Iceberg external table (#7391)"}, {"oid": "8c179bb09f77b9fb353c610172db373251c1a47c", "committedDate": "2022-01-31 22:16:08 +0800", "message": "[fix](alter) fix sql analyzed failed after increase the default bucket num of the table. (#7932)"}, {"oid": "c0e59e59aa704debccbea2df6ec7dc04b40983da", "committedDate": "2022-02-01 14:31:14 +0800", "message": "[fix][refactor] fix bugs and refactor some code by lint (#7871)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "92b690f3eb2d351255ccbdf0c6bfafc6a7d6aae6", "committedDate": "2022-02-10 15:08:04 +0800", "message": "[feature-wip](iceberg) Step2: add table creation strict mode and support refresh iceberg table or db. (#7981)"}, {"oid": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "committedDate": "2022-02-14 09:29:50 +0800", "message": "[refactor] Remove old schema change rollup backend decommission code (#8030)"}, {"oid": "6ccf9dbc563a7edc7eb2a0f2a377c516665b467b", "committedDate": "2022-02-16 11:08:48 +0800", "message": "[feature-wip](statistics) Step1: Statistics collection framework (#7880)"}, {"oid": "a46af29051e561b4578cba35c149302f1a53f684", "committedDate": "2022-02-16 11:58:40 +0800", "message": "[fix](meta) fix bug that FE can't start due to wrong image reading (#8045)"}, {"oid": "ddf08cc207dec9d46d2d1c084ae39d2c892a376f", "committedDate": "2022-02-25 11:08:29 +0800", "message": "[refactor](fe) Remove version hash on FE side (#8099)"}, {"oid": "83521a826a07693246bdb6e7834d7de2500d00d5", "committedDate": "2022-02-26 10:38:55 +0800", "message": "[Feature](create_table) Support create table with random distribution to avoid data skew (#8041)"}, {"oid": "27d2e3e9498090a81f157da3093085f0f0c37299", "committedDate": "2022-02-28 17:47:01 +0800", "message": "[refactor](fe) Remove old fe meta version (#8246)"}, {"oid": "46ca23f2161767b2d9aff27da7621183175145a8", "committedDate": "2022-03-04 09:05:23 +0800", "message": "[Feature] Support Changing the bucketing mode of the table from Hash Distribution to Random Distribution (#8259)"}, {"oid": "22bafef875edacaad6aec7a1b13f0380972c65ed", "committedDate": "2022-03-08 18:53:45 +0800", "message": "[fix](broker-load) fix bug that a cancelled job's state is LOADING (#8363)"}, {"oid": "826467e116f0300cacf47903d61fff87b339dc7c", "committedDate": "2022-03-09 13:03:22 +0800", "message": "[fix](replica) handle replica version missing info to avoid -214 error (#8209)"}, {"oid": "ffddebfd1d26b9eec44ed5a0bae5a227e5862b51", "committedDate": "2022-03-11 17:24:20 +0800", "message": "[fix](report) fix bug that tablet may already be delete when reporting (#8444)"}, {"oid": "a58e56f0b466797ce1779ba1325a31697799efac", "committedDate": "2022-03-24 09:13:54 +0800", "message": "[fix](load) fix another bug that BE may crash when calling `mark_as_failed` (#8607)"}, {"oid": "319f1f634a53f99deb2d2ee50d12defe17995516", "committedDate": "2022-04-06 15:23:49 +0800", "message": "[fix](ut) fix fe run CreateTableAsSelectStmtTest ,UserPropertyTest,  ProjectPlannerFunctionTest and AggregateTest failed (#8838)"}, {"oid": "e72ccfd80c0b7f00f971d20e0c3f27ea12196f87", "committedDate": "2022-04-07 08:38:29 +0800", "message": "[Refactor][httpv2]remove http v1 code (#8848)"}, {"oid": "318feb01f35efc72d447d326576250cba03fdbe1", "committedDate": "2022-04-08 09:08:08 +0800", "message": "[improvement](account) support to account management sql (#8849)"}, {"oid": "bca121333e40c6f63fbf8405f4dc5addf4ed1606", "committedDate": "2022-04-13 09:52:03 +0800", "message": "[feature](cold-hot) support s3 resource (#8808)"}, {"oid": "5b9a1a2a5dd7c2216452864e9cf17d5534523837", "committedDate": "2022-04-25 17:01:01 +0800", "message": "avoiding a corrupt image file when there is image.ckpt with non-zero \u2026 (#9180)"}, {"oid": "687421b43f0c22588b56929df375ef77af43349f", "committedDate": "2022-04-25 19:32:43 +0800", "message": "keep at least one validated image file (#9192)"}, {"oid": "bdf915abd4e0d65e913d4caf9a8ea3ced88e85ab", "committedDate": "2022-04-25 19:35:41 +0800", "message": "[Enhancement] (image) check image validity as soon as generated (#9011)"}, {"oid": "7cfebd05fd656aec3cb2b7f0835ff9052ad84d93", "committedDate": "2022-04-26 10:15:19 +0800", "message": "[fix](hierarchical-storage) Fix bug that storage medium property change back to SSD (#9158)"}, {"oid": "f5f629304b8f58738c51fbdca00a68f9098771e7", "committedDate": "2022-05-01 18:26:56 +0800", "message": "[fix](truncate) fix bug that truncate partition throw NPE (#9339)"}, {"oid": "dcf5f784d8681a3aa0665fd8200d761a08015cd4", "committedDate": "2022-05-03 17:54:19 +0800", "message": "[fix](catalog) fix bug that replica missing version cause query -214 error (#9266)"}, {"oid": "3baf6cefc347ce5acba43ee7fee9aa9e9204e368", "committedDate": "2022-05-03 22:36:36 +0800", "message": "[fix](alter-job) Missing alter job when doing checkpoint image (#9329)"}, {"oid": "0604ecba177e3c203821e023c5a0544d73ef01d0", "committedDate": "2022-05-05 09:58:01 +0800", "message": "[fixbug][metadata] catalog could not load from image (#9364)"}, {"oid": "6f0c8fb69840fb0f73d0f1dec2cf3ad440482f0d", "committedDate": "2022-05-07 08:51:54 +0800", "message": "[Feature] CTAS support insert data (#9271)"}, {"oid": "b6a74cfea5ddf3c66dcf3b4d31ec9a5131d66590", "committedDate": "2022-05-07 19:17:39 +0800", "message": "[Bug][CTAS] create table by partition list (#9412)"}, {"oid": "375c1bf5c0fbe742c6a16f92dbce847c756acef0", "committedDate": "2022-05-11 09:39:23 +0800", "message": "[feature](mysql-table) support utf8mb4 for mysql external table (#9402)"}, {"oid": "8fa0122ed054369a6d570d2ff9848449ff269ed7", "committedDate": "2022-05-11 09:40:57 +0800", "message": "[refactor](backend) Refactor the logic of selecting Backend in FE. (#9478)"}, {"oid": "f11d32021392efa0b1f464b75718b151e665c565", "committedDate": "2022-05-11 22:11:10 +0800", "message": "[feature] support row policy filter (#9206)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "72e0042efb675debafb66cfed5f41ca990c88d92", "committedDate": "2022-05-17 11:30:23 +0800", "message": "[feature-wip](hudi) Step1: Support create hudi external table (#9559)"}, {"oid": "235d586f11965bde9f07a5a7a6b80191ea04cad1", "committedDate": "2022-05-19 16:36:03 +0800", "message": "[style](fe) code correct rules and name rules (#9670)"}, {"oid": "e701c057dc675babe7a859e151287fea7cd5c850", "committedDate": "2022-05-26 16:56:20 +0800", "message": "[style](fe) wrap and whitespace rules (#9764)"}, {"oid": "b2c2cdb122b608c6391932ce5ef7b233ea9dc6bb", "committedDate": "2022-05-27 21:52:05 +0800", "message": "[feature] Support compression prop (#8923)"}, {"oid": "c5369d32200cf317b44425bc0af0b946afdeb8ee", "committedDate": "2022-05-29 18:02:16 +0800", "message": "[bugfix] Fix create table like when having hidden columns (#9694)"}, {"oid": "8092439634af22f59b73e4029bed9bce770cbd73", "committedDate": "2022-05-30 09:43:36 +0800", "message": "[feature](hudi) Step2: Support query hudi external table(include cow and mor table) (#9752)"}, {"oid": "e2b93a41655e47670173150a9f09dac0cb09d6f8", "committedDate": "2022-05-31 11:32:44 +0800", "message": "[feature-wip](multi-catalog) Add basic class and interface for multi catalog support"}, {"oid": "5f56e17ef215e932990da880182d8ad421bc62c1", "committedDate": "2022-06-08 22:02:22 +0800", "message": "[feature-wip](multi-catalog)(step2) Introduce Internal Data Source (#9953)"}, {"oid": "81a92843051f7a2a4102a1e1f95bca3b42513115", "committedDate": "2022-06-10 14:56:14 +0800", "message": "[improvement][refactor](image) refactor the read and load method of meta image #10005"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "f4e2f78a1a911b907ba8e73156a67dadb9193acc", "committedDate": "2022-06-15 09:52:56 +0800", "message": "[fix] Fix the bug that data balance causes tablet loss (#9971)"}, {"oid": "2a1d1b951aeaadad4b0e1a8c265d196d89070012", "committedDate": "2022-06-17 08:49:15 +0800", "message": "[data lake]Add HMS external data source. (#10088)"}, {"oid": "6baa694bc1b7681fb227dc926db732ff127c64a4", "committedDate": "2022-06-17 17:50:31 +0800", "message": "[feature-wip](multi-catalog) Catalog operation syntax  (#10033)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "815ea35578601e9b6dcde61b39349972f668cdfb", "committedDate": "2022-06-23 10:59:12 +0800", "message": "[fix](multi-catalog) should load datasource before loading cluster (#10330)"}, {"oid": "516f5b17894233771e86e17e6a950296b1ac596e", "committedDate": "2022-06-24 10:42:13 +0800", "message": "[feature-wip](multi-catalog) support to switch catalog (#10381)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "79ad05eec687b0f925d1d217e1389b2a6532ac56", "committedDate": "2022-06-26 09:51:29 +0800", "message": "[fix](doe) fix doe on es v8 (#10391)"}, {"oid": "44082317659ccd81355029d9cc9e7caef29ca641", "committedDate": "2022-06-26 09:52:16 +0800", "message": "[fix](random-distribution) Make aggregate keys table with replace type columns and unique keys table can only have hash distribution to make data computing correctly (#10414)"}, {"oid": "d43d3fc35f728e0cf4170c4195a40dec182d553b", "committedDate": "2022-07-01 08:59:29 +0800", "message": "[improvement] modify comment \" to ', to be compatible with mysql. (#10327)"}, {"oid": "d0b757c03a04b38150aa5b050cc4c2cd2367b373", "committedDate": "2022-07-01 11:12:36 +0800", "message": "[bugfix](fe) fix add follower failed due to conflict socket . (#10429)"}, {"oid": "078cb3b4dbc69736521749e779c4947d83591bd7", "committedDate": "2022-07-02 20:43:10 +0800", "message": "[feature-wip](multi-catalog) end to end to support multi-catalog (#10521)"}, {"oid": "8b6c46cfd1654b4f75def4f9f39e65cb99440e87", "committedDate": "2022-07-03 23:19:46 +0800", "message": "[fix] fix create table like when having sequence column (#10464)"}, {"oid": "c936abd2a37b2dd4213c0240b32df98ddd4b4017", "committedDate": "2022-07-06 10:29:16 +0800", "message": "[fix](fe) when bdbje adding follower, master write op may failed. (#10376)"}, {"oid": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "committedDate": "2022-07-12 19:41:06 +0800", "message": "[Feature] Lightweight schema change of add/drop column (#10136)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "8c544b6e13dc2a666b4a910db304d1a08896a55b", "committedDate": "2022-07-18 14:08:54 +0800", "message": "fix show storage policy null pointer and redundant log (#10906)"}, {"oid": "b037aca4fd7606077f1cef4280dde30976aa7135", "committedDate": "2022-07-18 18:02:33 +0800", "message": "[improvement](dynamic-partition) add replication allocation check for dynamic partition when creating table(#10892)"}, {"oid": "68b9a2936aeb749d344495f6eea4afc1d759bd28", "committedDate": "2022-07-18 23:20:58 +0800", "message": "[improvement](doe) Step1: Fe generates the DSL and is used to explain (#9895)"}, {"oid": "2acd5efcd8b2ef9085f5cdeeb61048f82f6b3476", "committedDate": "2022-07-19 08:29:58 +0800", "message": "[improvement-log]print a log when got a lower image version (#10910)"}, {"oid": "7bdce8f57276f23452db075597be61ca4ccccfaf", "committedDate": "2022-07-20 16:20:59 +0800", "message": "[refactor](policy) refactor some policy create and check logic (#11007)"}, {"oid": "d36b927fdbc44492f45c28747bbdc7cfd473f23b", "committedDate": "2022-07-21 09:12:21 +0800", "message": "[improvement](fe-ut) use local journal to make FE ut run fast (#11038)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjE2Nw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762167", "body": "```suggestion\r\n    private void processRenameAlterOperation(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {\n          \n          \n            \n                private void processRenameAlterOperation(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"496\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">processRename</span>(<span class=\"pl-smi\">Database</span> db, <span class=\"pl-smi\">Table</span> table, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">AlterClause</span>&gt;</span> alterClauses) throws <span class=\"pl-smi\">DdlException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"496\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">processRenameAlterOperation</span>(<span class=\"pl-smi\">Database</span> db, <span class=\"pl-smi\">Table</span> table, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">AlterClause</span>&gt;</span> alterClauses) throws <span class=\"pl-smi\">DdlException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wuyunfeng", "createdAt": "2020-10-10T08:06:15Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java", "diffHunk": "@@ -377,6 +408,17 @@ private void processRename(Database db, OlapTable table, List<AlterClause> alter\n         }\n     }\n \n+    private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc4NDE3Mw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502784173", "bodyText": "@wuyunfeng hi\uff0cyunfeng. I just want keep the function name same to the olaptable alter function name.", "author": "HappenLee", "createdAt": "2020-10-10T12:12:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjE2Nw=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "f7730031b8eca90c150c400c8d67e008290a6f70", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 8191ecbca4..0cb6ab58d1 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -393,17 +444,19 @@ public class Alter {\n             if (alterClause instanceof TableRenameClause) {\n                 Catalog.getCurrentCatalog().renameTable(db, table, (TableRenameClause) alterClause);\n                 break;\n-            } else if (alterClause instanceof RollupRenameClause) {\n-                Catalog.getCurrentCatalog().renameRollup(db, table, (RollupRenameClause) alterClause);\n-                break;\n-            } else if (alterClause instanceof PartitionRenameClause) {\n-                Catalog.getCurrentCatalog().renamePartition(db, table, (PartitionRenameClause) alterClause);\n-                break;\n-            } else if (alterClause instanceof ColumnRenameClause) {\n-                Catalog.getCurrentCatalog().renameColumn(db, table, (ColumnRenameClause) alterClause);\n-                break;\n             } else {\n-                Preconditions.checkState(false);\n+                if (alterClause instanceof RollupRenameClause) {\n+                    Catalog.getCurrentCatalog().renameRollup(db, table, (RollupRenameClause) alterClause);\n+                    break;\n+                } else if (alterClause instanceof PartitionRenameClause) {\n+                    Catalog.getCurrentCatalog().renamePartition(db, table, (PartitionRenameClause) alterClause);\n+                    break;\n+                } else if (alterClause instanceof ColumnRenameClause) {\n+                    Catalog.getCurrentCatalog().renameColumn(db, table, (ColumnRenameClause) alterClause);\n+                    break;\n+                } else {\n+                    Preconditions.checkState(false);\n+                }\n             }\n         }\n     }\n", "next_change": {"commit": "09224d7c7410605dfdb0afccdc67065c713815c8", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 0cb6ab58d1..da8987cf36 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -442,17 +622,17 @@ public class Alter {\n     private void processRename(Database db, OlapTable table, List<AlterClause> alterClauses) throws DdlException {\n         for (AlterClause alterClause : alterClauses) {\n             if (alterClause instanceof TableRenameClause) {\n-                Catalog.getCurrentCatalog().renameTable(db, table, (TableRenameClause) alterClause);\n+                Env.getCurrentEnv().renameTable(db, table, (TableRenameClause) alterClause);\n                 break;\n             } else {\n                 if (alterClause instanceof RollupRenameClause) {\n-                    Catalog.getCurrentCatalog().renameRollup(db, table, (RollupRenameClause) alterClause);\n+                    Env.getCurrentEnv().renameRollup(db, table, (RollupRenameClause) alterClause);\n                     break;\n                 } else if (alterClause instanceof PartitionRenameClause) {\n-                    Catalog.getCurrentCatalog().renamePartition(db, table, (PartitionRenameClause) alterClause);\n+                    Env.getCurrentEnv().renamePartition(db, table, (PartitionRenameClause) alterClause);\n                     break;\n                 } else if (alterClause instanceof ColumnRenameClause) {\n-                    Catalog.getCurrentCatalog().renameColumn(db, table, (ColumnRenameClause) alterClause);\n+                    Env.getCurrentEnv().renameColumn(db, table, (ColumnRenameClause) alterClause);\n                     break;\n                 } else {\n                     Preconditions.checkState(false);\n", "next_change": null}, {"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\nindex 0cb6ab58d1..da8987cf36 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/Alter.java\n", "chunk": "@@ -464,7 +644,7 @@ public class Alter {\n     private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {\n         for (AlterClause alterClause : alterClauses) {\n             if (alterClause instanceof TableRenameClause) {\n-                Catalog.getCurrentCatalog().renameTable(db, table, (TableRenameClause) alterClause);\n+                Env.getCurrentEnv().renameTable(db, table, (TableRenameClause) alterClause);\n                 break;\n             } else {\n                 Preconditions.checkState(false);\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "5a6be411da45d641ddf680edc93f3e6baf6399e4", "committedDate": "2021-03-04 21:53:31 +0800", "message": "[Ut] Add drop meta unit test and remove some redundant code in Alter (#5395)"}, {"oid": "6be03f339cec5fdeeee185557ab7f6d612f416a8", "committedDate": "2021-04-19 09:26:19 +0800", "message": "[Bug] Fix bug that tablets are not dropped when replacing tables (#5627)"}, {"oid": "f0c5fb9f3819e700396a641ad6c5a3157d8c8f1b", "committedDate": "2021-07-02 19:24:13 +0800", "message": "[Bug] Fix bug of NPE caused by the absence of table in replay process. (#6136)"}, {"oid": "76e148988ac201829cee796c444aa8c671897e36", "committedDate": "2021-07-12 20:28:40 +0800", "message": "Support alter default bucket_num of partitioned olap table (#6023)"}, {"oid": "7e93405df39ddc3f230ffafb09156bcb0264f972", "committedDate": "2021-08-11 16:37:42 +0800", "message": "[Alter] Support alter table and column's comment (#6387)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "3d8166504af9e91d51be59f812577d0377b7d0b3", "committedDate": "2021-11-12 15:12:41 +0800", "message": "[Alter] Support alter table engine type from MySQL to ODBC (#6993)"}, {"oid": "dd36ccc3bf2f04d01cb6a4f5014fa605a412786a", "committedDate": "2021-12-02 11:39:51 +0800", "message": "[feature](storage-format) Z-Order Implement (#7149)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "bca121333e40c6f63fbf8405f4dc5addf4ed1606", "committedDate": "2022-04-13 09:52:03 +0800", "message": "[feature](cold-hot) support s3 resource (#8808)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "c18f7a31f1d1d55ba7975552a3b45d301dfe9ea5", "committedDate": "2022-06-05 13:09:14 +0800", "message": "remove redundant this (#9878)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "2a1d1b951aeaadad4b0e1a8c265d196d89070012", "committedDate": "2022-06-17 08:49:15 +0800", "message": "[data lake]Add HMS external data source. (#10088)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "2a0ac05ce7e23bc0788ee5fcbf98b7f11ed62de4", "committedDate": "2022-06-22 15:28:04 +0800", "message": "[fix] Fix duplicate code for PropertyAnalyzer.analyzeDataProperty() (#10190)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "7bdce8f57276f23452db075597be61ca4ccccfaf", "committedDate": "2022-07-20 16:20:59 +0800", "message": "[refactor](policy) refactor some policy create and check logic (#11007)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "ff8a4ec2f2c734b2dd7b267cb9cee20b016b8470", "committedDate": "2022-08-02 16:03:36 +0800", "message": "[WIP][feature] support `create`,`alter`,`refresh`,`drop` stmt syntax for multi table materialized view (#11218)"}, {"oid": "2cadf85988b9de1ae42a2c7926bb261e0b935bec", "committedDate": "2022-08-09 14:09:38 +0800", "message": "[improvement](alter) modify table's default replica if table is unpartitioned (#11550)"}, {"oid": "81c5732dc7af361227d304153a3153fb07df4b22", "committedDate": "2022-09-02 14:51:56 +0800", "message": "[feature-wip](MTMV) Support creating materialized view for multiple tables (#11646)"}, {"oid": "b7eea72d1dc59da58907c3e902541342a5eea83e", "committedDate": "2022-09-23 10:36:40 +0800", "message": "[feature-wip](MTMV) Support showing and dropping materialized view for multiple tables (#12762)"}, {"oid": "c9f26183b05e1598cb804b62d99cdeb1c577cb27", "committedDate": "2022-12-22 11:46:41 +0800", "message": "[feature-wip](MTMV) Support importing data to materialized view with multiple tables (#14944)"}, {"oid": "e31847e92599f26eb04acc2b11b9befc59409ff5", "committedDate": "2022-12-23 21:04:37 +0800", "message": "support rename hive/jdbc engine external table (#15308)"}, {"oid": "69d95c857a55e0f58e603226b8071c9644e1ce3f", "committedDate": "2022-12-28 16:09:06 +0800", "message": "[feature](remote)Add alter storage policy (#15381)"}, {"oid": "61d538c71315e35115aedab08ddeb7030c776884", "committedDate": "2023-01-04 22:24:49 +0800", "message": "[improvement](storage-policy) Add check validity when create storage policy. (#14405)"}, {"oid": "1888aba3014eff3617382f0929022fffc4c35fb2", "committedDate": "2023-01-10 11:36:17 +0800", "message": "[fix](MTMV) fix replayReplaceTable error when restart fe (#15564)"}, {"oid": "82e2102e18df5fddc62984e61815cc28a08fedaa", "committedDate": "2023-01-17 15:29:39 +0800", "message": "[fix](MTMV) Exceptions occur when dropping meterialized view with if exists (#15568)"}, {"oid": "388d6235069eacafa8ea8ebe3b41eb42730805fe", "committedDate": "2023-01-17 23:08:12 +0800", "message": "[fix](MTMV) Refine the process of refreshing data (#16006)"}, {"oid": "00a598a8391d055e304e4231c8fc44885ad3c800", "committedDate": "2023-01-31 14:13:47 +0800", "message": "[feature](cooldown) Decouple storage policy and resource (#15873)"}, {"oid": "1146bde695fbe7224ced2910b863d9fa18834ce9", "committedDate": "2023-02-04 20:17:45 +0800", "message": "[feature-wip](MTMV) Support refresh mtmv (#16218)"}, {"oid": "e2e6a0dd8387801f9a9c951a710bc29277db318f", "committedDate": "2023-02-18 23:09:34 +0800", "message": "[Feature](load) Support mutable property for partition (#16036)"}, {"oid": "96a3c60d3b9c415cad263fcdfc95dc0ca30db848", "committedDate": "2023-02-19 12:15:17 +0800", "message": "[feature-wip](MTMV) Support alter statement (#16817)"}, {"oid": "5021c0f91ae7ae7b5b16572c82bb17cdd2a63677", "committedDate": "2023-03-22 23:21:50 +0800", "message": "[feature-wip](MTMV) Support joining tables with views (#18026)"}, {"oid": "e56201780143af7e7af718125cce3baca305dc96", "committedDate": "2023-04-11 11:09:43 +0800", "message": "[feature](table-metadata) support altering the property \"light_schema_change\" for the tables which created before 1.2 (#17704)"}, {"oid": "5d1abe4507a33f51439346e11f96c16e775ad103", "committedDate": "2023-04-14 16:29:18 +0800", "message": "[Bugfix](Mtmv)Fix mtmv meta load failed (#18605)"}, {"oid": "f7651d8dfbcb27b45d788b6acdc2f754f4da55df", "committedDate": "2023-04-21 21:55:37 +0800", "message": "(fix)[olap] not support in_memory=true now (#18731)"}, {"oid": "da4de37dec5c7a0e720dea93a7769eebed24b6d1", "committedDate": "2023-04-30 17:42:02 +0800", "message": "[feature-wip](mv lifecycle) separate life cycle of base table and its materialized views (#19210)"}, {"oid": "0068828a943b33cfe78b1a5f918486eb5443afb1", "committedDate": "2023-05-14 20:01:30 +0800", "message": "[Feature](insert) support insert overwrite stmt (#19616)"}, {"oid": "e45bc160c9e0565d722f6084ed75a45f577e0794", "committedDate": "2023-05-18 13:34:05 +0800", "message": "[fix](mtmv) fix bug that should not write edit log when replaying alter mv (#19781)"}, {"oid": "a7f3bfec89a8228d25590f2d4e5276e0a1ffbb20", "committedDate": "2023-05-21 09:00:35 +0800", "message": "[refactor](cluster)(step-2) remove cluster related to Backend  (#19842)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjMzOQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762339", "body": "just puzzled with the `refresh`?", "bodyText": "just puzzled with the refresh?", "bodyHTML": "<p dir=\"auto\">just puzzled with the <code>refresh</code>?</p>", "author": "wuyunfeng", "createdAt": "2020-10-10T08:08:03Z", "path": "fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java", "diffHunk": "@@ -182,4 +182,7 @@\n     // resource 276~290\n     public static final short OP_CREATE_RESOURCE = 276;\n     public static final short OP_DROP_RESOURCE = 277;\n+\n+    // alter external table\n+    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2OTU3OA==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502769578", "bodyText": "OK\uff0cI will change the name of this operationType", "author": "HappenLee", "createdAt": "2020-10-10T09:28:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjMzOQ=="}], "type": "inlineReview", "revised_code": {"commit": "1959144eede1fa35cde5b723cfd6186dd322dd9a", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\nindex 71eff92f4c..2455df197c 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n", "chunk": "@@ -182,7 +183,4 @@ public class OperationType {\n     // resource 276~290\n     public static final short OP_CREATE_RESOURCE = 276;\n     public static final short OP_DROP_RESOURCE = 277;\n-\n-    // alter external table\n-    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;\n }\n", "next_change": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\nindex 2455df197c..057975d500 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n", "chunk": "@@ -183,4 +183,7 @@ public class OperationType {\n     // resource 276~290\n     public static final short OP_CREATE_RESOURCE = 276;\n     public static final short OP_DROP_RESOURCE = 277;\n+\n+    // alter external table\n+    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;\n }\n", "next_change": {"commit": "609e85d32f22d29125bcc375d92ae50f0a296d76", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\nindex 057975d500..53bb587cc5 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n", "chunk": "@@ -185,5 +185,5 @@ public class OperationType {\n     public static final short OP_DROP_RESOURCE = 277;\n \n     // alter external table\n-    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;\n+    public static final short OP_ALTER_EXTERNAL_TABLE_SCHEMA = 280;\n }\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\nindex 71eff92f4c..53bb587cc5 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n", "chunk": "@@ -184,5 +185,5 @@ public class OperationType {\n     public static final short OP_DROP_RESOURCE = 277;\n \n     // alter external table\n-    public static final short OP_REFRESH_EXTERNAL_TABLE_SCHEMA = 280;\n+    public static final short OP_ALTER_EXTERNAL_TABLE_SCHEMA = 280;\n }\n", "next_change": {"commit": "66f1ddaa7220f3dc53d6544d6b0a73e827a1cf98", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\nindex 53bb587cc5..e32e287625 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/OperationType.java\n", "chunk": "@@ -186,4 +199,24 @@ public class OperationType {\n \n     // alter external table\n     public static final short OP_ALTER_EXTERNAL_TABLE_SCHEMA = 280;\n+\n+    // get opcode name by op codeStri\n+    public static String getOpName(short opCode) {\n+        try {\n+            Field[] fields = OperationType.class.getDeclaredFields();\n+            for (Field field : fields) {\n+                if (!Modifier.isStatic(field.getModifiers())) {\n+                    continue;\n+                }\n+                short s = field.getShort(null);\n+                if (s != opCode) {\n+                    continue;\n+                }\n+                return field.getName();\n+            }\n+        } catch (Exception e) {\n+            return \"Not Found: \" + e.getMessage();\n+        }\n+        return \"Not Found\";\n+    }\n }\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "de57667d6dc7ddc32fabd0f5c3299623ab9895d1", "committedDate": "2021-01-30 20:33:34 +0800", "message": "[Delete] Support delete with multi partitions (#5252)"}, {"oid": "a4f81941118d7e5f7d4e000d12298d8fecca2194", "committedDate": "2021-04-21 16:36:12 +0800", "message": "[Audit][Stream Load] Support audit function for stream load (#5452)"}, {"oid": "b93e8416885ac440e9c294c4bb2089e33bde788b", "committedDate": "2021-04-23 09:47:30 +0800", "message": "[Optimize] Remove expired txns in batch to avoid holding lock for too long (#5675)"}, {"oid": "76e148988ac201829cee796c444aa8c671897e36", "committedDate": "2021-07-12 20:28:40 +0800", "message": "Support alter default bucket_num of partitioned olap table (#6023)"}, {"oid": "66f1ddaa7220f3dc53d6544d6b0a73e827a1cf98", "committedDate": "2021-07-17 10:45:51 +0800", "message": "[BDBJE] Add a tool to view the data in BEBJE (#6209)"}, {"oid": "5de79ec3f0c6d9835e07381565b83b4f2d89deb3", "committedDate": "2021-07-19 09:27:08 +0800", "message": "[Feature] Support data encrypt/decrypt (#6115)"}, {"oid": "9ca369aa58ef6215e2c79b14fc1b4edfc2e2d720", "committedDate": "2021-07-30 09:24:50 +0800", "message": "[Feature][LDAP] Add LDAP authentication login and LDAP group authorization support. (#6333)"}, {"oid": "c8c571af37193ee10b5437fd9b47b30c4b917d60", "committedDate": "2021-08-08 21:39:34 +0800", "message": "[New Feature] Support synchronizing MySQL binlog in real time [stage 1] (#6289)"}, {"oid": "7e93405df39ddc3f230ffafb09156bcb0264f972", "committedDate": "2021-08-11 16:37:42 +0800", "message": "[Alter] Support alter table and column's comment (#6387)"}, {"oid": "5e6f1b89da8abe27327833243242ed94555a5349", "committedDate": "2021-08-13 21:56:34 +0800", "message": "[Feature] Support sql block rule (#6192)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "3d8166504af9e91d51be59f812577d0377b7d0b3", "committedDate": "2021-11-12 15:12:41 +0800", "message": "[Alter] Support alter table engine type from MySQL to ODBC (#6993)"}, {"oid": "826467e116f0300cacf47903d61fff87b339dc7c", "committedDate": "2022-03-09 13:03:22 +0800", "message": "[fix](replica) handle replica version missing info to avoid -214 error (#8209)"}, {"oid": "bca121333e40c6f63fbf8405f4dc5addf4ed1606", "committedDate": "2022-04-13 09:52:03 +0800", "message": "[feature](cold-hot) support s3 resource (#8808)"}, {"oid": "f11d32021392efa0b1f464b75718b151e665c565", "committedDate": "2022-05-11 22:11:10 +0800", "message": "[feature] support row policy filter (#9206)"}, {"oid": "235d586f11965bde9f07a5a7a6b80191ea04cad1", "committedDate": "2022-05-19 16:36:03 +0800", "message": "[style](fe) code correct rules and name rules (#9670)"}, {"oid": "6baa694bc1b7681fb227dc926db732ff127c64a4", "committedDate": "2022-06-17 17:50:31 +0800", "message": "[feature-wip](multi-catalog) Catalog operation syntax  (#10033)"}, {"oid": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "committedDate": "2022-07-12 19:41:06 +0800", "message": "[Feature] Lightweight schema change of add/drop column (#10136)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "d36b927fdbc44492f45c28747bbdc7cfd473f23b", "committedDate": "2022-07-21 09:12:21 +0800", "message": "[improvement](fe-ut) use local journal to make FE ut run fast (#11038)"}, {"oid": "547c18d28b45bcf4388dab9c3206c30206404dc9", "committedDate": "2022-08-01 10:43:33 +0800", "message": "[feature](load) support CLEAN LABEL stmt (#11362)"}, {"oid": "aa24c8f973b544e71ef5f2f4b3fe305e3185ca61", "committedDate": "2022-08-11 15:14:05 +0800", "message": "[Feature](multi-catalog) Support refresh catalog metadata (#11656)"}, {"oid": "5af14399340a32a451917271d2e910e53055b9d0", "committedDate": "2022-10-11 16:37:35 +0800", "message": "[feature](auth) support user password policy and alter user stmt (#13051)"}, {"oid": "27d84eafc5b549d5e07b2bf0ff6566a5126a75ba", "committedDate": "2022-10-21 08:45:34 +0800", "message": "[feature](alter) support rename column for table with unique column id (#13410)"}, {"oid": "ec86e9c9b2efc1d6394d3c6d93fe77c4cc7427fc", "committedDate": "2022-10-27 11:37:24 +0800", "message": "[feature-wip][MTMV] The schedule framework for the MTMV (#13147)"}, {"oid": "f2d84d81e651d3de8e4c67a0adbf927a7ca04268", "committedDate": "2022-11-04 09:04:00 +0800", "message": "[feature-wip][refactor](multi-catalog) Persist external catalog related metadata. (#13746)"}, {"oid": "7eed5a292c71a5ff67dce8333e58e4aa49ddb276", "committedDate": "2022-11-14 14:12:40 +0800", "message": "[feature-wip](multi-catalog) Support hive partition cache (#14134)"}, {"oid": "893f5f93455883d3fab681e95afc47363eeeee25", "committedDate": "2023-01-03 13:59:14 +0800", "message": "[feature-wip](multi-catalog) support automatic sync hive metastore events (#15401)"}, {"oid": "58c520dbfde1ce09c0a23a5ec2276ca687f6c0db", "committedDate": "2023-01-14 23:58:00 +0800", "message": "[Feature](remote) Cooldown cold data to object storage only one replica (#15832)"}, {"oid": "899f5f5cf5acf007081aea19590d3dab75ebd34e", "committedDate": "2023-01-16 14:16:12 +0800", "message": "[feature](multi-catalog) support hive metastore more events (#15702)"}, {"oid": "0842aa29478462a6d0a304875c42222428c296fc", "committedDate": "2023-02-01 20:02:46 +0800", "message": "[Fix](MTMV)Support master and follow change in multi fe for mtmv (#16149)"}, {"oid": "e1f13863950237d96e8488dd42fa288cc6df94b7", "committedDate": "2023-02-09 09:12:55 +0800", "message": "[fix](cooldown) Rewrite update cooldown conf (#16488)"}, {"oid": "43eca4f209c03a011f541b0b6ba6ad97935d3adf", "committedDate": "2023-02-10 17:56:17 +0800", "message": "[Feature-WIP](inverted index) Implementation for alter inverted index. (#16371)"}, {"oid": "5014ad03e70a9d2f456d7eddbf91fe8710784917", "committedDate": "2023-02-13 23:59:39 +0800", "message": "[feature](cooldown) Auto delete unused remote files (#16588)"}, {"oid": "96a3c60d3b9c415cad263fcdfc95dc0ca30db848", "committedDate": "2023-02-19 12:15:17 +0800", "message": "[feature-wip](MTMV) Support alter statement (#16817)"}, {"oid": "48afd77e37d63e2989cd85ab12b39a273fcd284e", "committedDate": "2023-03-01 10:54:39 +0800", "message": "[enhancement](k8s) Support fqdn mode for fe in k8s enviroment (#16315)"}, {"oid": "201cf9c8df0a0c5e3b5113db8577aea2b64fc22e", "committedDate": "2023-03-02 00:44:54 +0800", "message": "Revert \"[enhancement](k8s) Support fqdn mode for fe in k8s enviroment (#16315)\" (#17278)"}, {"oid": "627b5ee30298133542ae9394274cb48ef0324ba3", "committedDate": "2023-03-05 10:18:56 +0800", "message": "[enhancement](k8s) Support fqdn mode for fe in k8s enviroment (#17329)"}, {"oid": "0ad638f9fe5217182c9c10cfb118a1ac46191208", "committedDate": "2023-03-06 11:32:21 +0800", "message": "[enhancement](transaction) Reduce hold writeLock time for DatabaseTransactionMgr to clear transaction (#17414)"}, {"oid": "c95eb8a67f6afdb0bc1f05531249835d68fdd1c4", "committedDate": "2023-03-18 22:06:48 +0800", "message": "[enhancement] Function(create/drop) support the global operation (#16973) (#17608)"}, {"oid": "df0eca4003f38bfac949b47b1a056aee0efe8b02", "committedDate": "2023-03-25 22:38:19 +0800", "message": "[improvement] (schema change) Lightweight schema change of modify column with varchar length (#17207)"}, {"oid": "97007219828fc82d045a0be866bb821d8f169043", "committedDate": "2023-04-10 15:18:48 +0800", "message": "[feature-wip](resource-group) Support create and show resource groups (#18184)"}, {"oid": "e56201780143af7e7af718125cce3baca305dc96", "committedDate": "2023-04-11 11:09:43 +0800", "message": "[feature](table-metadata) support altering the property \"light_schema_change\" for the tables which created before 1.2 (#17704)"}, {"oid": "17e206c538d1ccb011dca8c1ee64177a8ca9bb13", "committedDate": "2023-04-24 14:00:00 +0800", "message": "[Feature](resource-group) Support drop resource group (#18873)"}, {"oid": "908518915dc7a1934f817cc52af14e64c87d5186", "committedDate": "2023-04-27 10:48:17 +0800", "message": "[Feature](resource-group) Support alter resource group (#18990)"}, {"oid": "6748ae4a5766db2fbee5d605b9d90a7d228c80f7", "committedDate": "2023-05-15 10:56:34 +0800", "message": "[Feature] Collect the information statistics of the query hit (#18805)"}, {"oid": "73be97f8d8d86110ed61488c813c5ab9d24019de", "committedDate": "2023-05-17 20:48:58 +0800", "message": "[fix](meta) fix upgrade failed on FE meta from 1.2 (#19674)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}, {"oid": "ae352997b46036342cd229e4fa57d0f77e6d0f57", "committedDate": "2023-05-28 11:23:07 +0800", "message": "[Enhancement](alter inverted index) Improve alter inverted index performance with light weight add or drop inverted index (#19063)"}, {"oid": "f9dfcb923d392fc7f1c74f15c698422322596655", "committedDate": "2023-05-31 15:23:24 +0800", "message": "[Enhancement] Change Create Resource Group Grammar (#20249)"}, {"oid": "e32eba8fdf42ac13aa978e14d3bd2ad6f120294f", "committedDate": "2023-06-02 12:33:31 +0800", "message": "[refactor](stats) Persist status of analyze task to FE meta data (#20264)"}, {"oid": "46c68d11aaa8ca9b8d129a2ff509f82e428f5208", "committedDate": "2023-06-08 10:46:25 +0800", "message": "[feature-wip](MTMV) Sync finish status only for tasks (#20441)"}, {"oid": "70819fae228eaccaa3831530f23e5d9917b9cf12", "committedDate": "2023-06-09 17:29:21 +0800", "message": "[feature](alter) Add AlterDatabasePropertyStmt binlog impl (#20550)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502762622", "body": "```suggestion\r\n    private void processAddCol{Alter}Operation(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n          \n          \n            \n                private void processAddCol{Alter}Operation(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"135\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">processAddColumn</span>(<span class=\"pl-smi\">AddColumnClause</span> alterClause, <span class=\"pl-smi\">Table</span> externalTable, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Column</span>&gt;</span> newSchema) throws <span class=\"pl-smi\">DdlException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"135\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first\">processAddCol{</span><span class=\"pl-smi x\">Alter</span><span class=\"x x-last\">}Operation</span>(<span class=\"pl-smi\">AddColumnClause</span> alterClause, <span class=\"pl-smi\">Table</span> externalTable, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Column</span>&gt;</span> newSchema) throws <span class=\"pl-smi\">DdlException</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wuyunfeng", "createdAt": "2020-10-10T08:10:47Z", "path": "fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java", "diffHunk": "@@ -132,6 +132,26 @@ private void processAddColumn(AddColumnClause alterClause, OlapTable olapTable,\n                           indexSchemaMap, newColNameSet);\n     }\n \n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {", "originalCommit": "d21ea632bd9bb9f3ca2c4b7d12d54fe5d25ae2d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc4NDE4NQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r502784185", "bodyText": "hi\uff0cyunfeng. I just want keep the function name same to the olaptable alter function name.", "author": "HappenLee", "createdAt": "2020-10-10T12:12:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzc3MTYxMQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r503771611", "bodyText": "That's ok", "author": "wuyunfeng", "createdAt": "2020-10-13T08:40:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjc2MjYyMg=="}], "type": "inlineReview", "revised_code": {"commit": "1959144eede1fa35cde5b723cfd6186dd322dd9a", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex da50619cda..339a2074cb 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -132,24 +132,28 @@ public class SchemaChangeHandler extends AlterHandler {\n                           indexSchemaMap, newColNameSet);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n \n-        addColumnInternal(column, columnPos, newSchema, newColNameSet);\n+        List<Column> modIndexSchema = externalTable.getBaseSchema();\n+        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n+        externalTable.setNewFullSchema(modIndexSchema);\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n+    private void processAddColumns(AddColumnsClause alterClause, Table externalTable) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         Set<String> newColNameSet = Sets.newHashSet();\n         for (Column column : alterClause.getColumns()) {\n             newColNameSet.add(column.getName());\n         }\n \n+        List<Column> modIndexSchema = externalTable.getBaseSchema();\n         for (Column newColumn : columns) {\n-            addColumnInternal(newColumn, null, newSchema, newColNameSet);\n+            addColumnInternal(externalTable, newColumn, null, modIndexSchema, newColNameSet);\n         }\n+        externalTable.setNewFullSchema(modIndexSchema);\n     }\n \n     private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n", "next_change": {"commit": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 339a2074cb..ff0ccf7b6b 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -132,28 +132,24 @@ public class SchemaChangeHandler extends AlterHandler {\n                           indexSchemaMap, newColNameSet);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n-        addColumnInternal(externalTable, column, columnPos, modIndexSchema, newColNameSet);\n-        externalTable.setNewFullSchema(modIndexSchema);\n+        addColumnInternal(column, columnPos, newSchema, newColNameSet);\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause, Table externalTable) throws DdlException {\n+    private void processAddColumns(AddColumnsClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         Set<String> newColNameSet = Sets.newHashSet();\n         for (Column column : alterClause.getColumns()) {\n             newColNameSet.add(column.getName());\n         }\n \n-        List<Column> modIndexSchema = externalTable.getBaseSchema();\n         for (Column newColumn : columns) {\n-            addColumnInternal(externalTable, newColumn, null, modIndexSchema, newColNameSet);\n+            addColumnInternal(newColumn, null, newSchema, newColNameSet);\n         }\n-        externalTable.setNewFullSchema(modIndexSchema);\n     }\n \n     private void processAddColumns(AddColumnsClause alterClause, OlapTable olapTable,\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "baa5d6089ff8699c945c40240d265e394ede4e02", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex da50619cda..4e839db39f 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -129,7 +143,7 @@ public class SchemaChangeHandler extends AlterHandler {\n \n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n         addColumnInternal(olapTable, column, columnPos, targetIndexId, baseIndexId,\n-                          indexSchemaMap, newColNameSet);\n+                indexSchemaMap, newColNameSet);\n     }\n \n     private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n", "next_change": {"commit": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 4e839db39f..6329834d59 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -146,7 +145,8 @@ public class SchemaChangeHandler extends AlterHandler {\n                 indexSchemaMap, newColNameSet);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause,\n+            Table externalTable, List<Column> newSchema) throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n", "next_change": {"commit": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 6329834d59..c5b5151882 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -141,12 +153,18 @@ public class SchemaChangeHandler extends AlterHandler {\n         }\n \n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n-        addColumnInternal(olapTable, column, columnPos, targetIndexId, baseIndexId,\n-                indexSchemaMap, newColNameSet);\n+\n+        //only new table generate ColUniqueId, exist table do not.\n+        if (olapTable.getMaxColUniqueId() > Column.COLUMN_UNIQUE_ID_INIT_VALUE) {\n+            column.setUniqueId(colUniqueIdSupplier.getAsInt());\n+        }\n+\n+        return addColumnInternal(olapTable, column, columnPos, targetIndexId, baseIndexId, indexSchemaMap,\n+                newColNameSet, false);\n     }\n \n-    private void processAddColumn(AddColumnClause alterClause,\n-            Table externalTable, List<Column> newSchema) throws DdlException {\n+    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema)\n+            throws DdlException {\n         Column column = alterClause.getColumn();\n         ColumnPosition columnPos = alterClause.getColPos();\n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n", "next_change": {"commit": "d2d4423c8825b058649b5e91dd0d55aad8fbc2ae", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex c5b5151882..685cda5d02 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -154,13 +157,8 @@ public class SchemaChangeHandler extends AlterHandler {\n \n         Set<String> newColNameSet = Sets.newHashSet(column.getName());\n \n-        //only new table generate ColUniqueId, exist table do not.\n-        if (olapTable.getMaxColUniqueId() > Column.COLUMN_UNIQUE_ID_INIT_VALUE) {\n-            column.setUniqueId(colUniqueIdSupplier.getAsInt());\n-        }\n-\n         return addColumnInternal(olapTable, column, columnPos, targetIndexId, baseIndexId, indexSchemaMap,\n-                newColNameSet, false);\n+                newColNameSet, false, colUniqueIdSupplierMap);\n     }\n \n     private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema)\n", "next_change": null}]}}, {"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\nindex 6329834d59..c5b5151882 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java\n", "chunk": "@@ -154,8 +172,8 @@ public class SchemaChangeHandler extends AlterHandler {\n         addColumnInternal(column, columnPos, newSchema, newColNameSet);\n     }\n \n-    private void processAddColumns(AddColumnsClause alterClause,\n-            Table externalTable, List<Column> newSchema) throws DdlException {\n+    private void processAddColumns(AddColumnsClause alterClause, Table externalTable, List<Column> newSchema)\n+            throws DdlException {\n         List<Column> columns = alterClause.getColumns();\n         Set<String> newColNameSet = Sets.newHashSet();\n         for (Column column : alterClause.getColumns()) {\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "47e33c79873f4277fd39da05a8532dcaa211a4d3", "committedDate": "2021-02-03 13:22:00 +0800", "message": "Support create index on unique value column (#5305)"}, {"oid": "2a2cec91f9c98db1e6ee4663ca08cfa4a92e61be", "committedDate": "2021-02-05 18:50:04 +0800", "message": "Adding a column with SUM aggregation to table should restrict the default value (#5315)"}, {"oid": "de87f4ae840c1a527379c046d7f01afb2e2d7dcc", "committedDate": "2021-04-24 17:42:27 +0800", "message": "[Feature] Add list partition support (#5529)"}, {"oid": "ad365b3b64ec4be6fb72f04b0b7df6c6a8ab5989", "committedDate": "2021-06-09 15:00:17 +0800", "message": "[Bug] Fix bug that cannot cancel alter table operation when table is unstable (#5998)"}, {"oid": "a2a13dadba57dac8d3960334501acc8722f6c11c", "committedDate": "2021-08-29 09:41:56 +0800", "message": "[Optimize] Make light schema change complete more faster under concurrent conditions (#6292)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "4f744333c209080f20419c2c7a0ef60ca87275f2", "committedDate": "2021-09-10 09:52:03 +0800", "message": "fix some core in local test: (#6594)"}, {"oid": "b2f1e21a3bc1689fa144084de96a1ccb7de5484a", "committedDate": "2021-09-10 09:53:30 +0800", "message": "[Bugs] Fix some bugs (#6586)"}, {"oid": "32f6dec80fbe52b8e11a12e6d268e8cdaabfaf47", "committedDate": "2021-10-13 11:37:39 +0800", "message": "fix dup table don't schema schange (#6791)"}, {"oid": "bc069eac8bd12afd04c4a86443dcbd3cec7214f5", "committedDate": "2021-10-17 22:53:28 +0800", "message": "[BUG] fix bug for schema schange (#6839)"}, {"oid": "4170aabf8328ca99831e42860ea45fe39b57f442", "committedDate": "2021-10-27 18:03:12 +0800", "message": "[Optimize] optimize some session variable and profile (#6920)"}, {"oid": "baa5d6089ff8699c945c40240d265e394ede4e02", "committedDate": "2021-11-26 10:16:01 +0800", "message": "[fix](alter) Fix bug that partition column of a unique key table can be modified (#7217)"}, {"oid": "8b7d7e4dac7ae3af5d27166cd68ca88fa73ee816", "committedDate": "2022-01-16 10:40:44 +0800", "message": "[improvement] create/drop index support if [not] exist (#7748)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "committedDate": "2022-02-14 09:29:50 +0800", "message": "[refactor] Remove old schema change rollup backend decommission code (#8030)"}, {"oid": "ddf08cc207dec9d46d2d1c084ae39d2c892a376f", "committedDate": "2022-02-25 11:08:29 +0800", "message": "[refactor](fe) Remove version hash on FE side (#8099)"}, {"oid": "3baf6cefc347ce5acba43ee7fee9aa9e9204e368", "committedDate": "2022-05-03 22:36:36 +0800", "message": "[fix](alter-job) Missing alter job when doing checkpoint image (#9329)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "e701c057dc675babe7a859e151287fea7cd5c850", "committedDate": "2022-05-26 16:56:20 +0800", "message": "[style](fe) wrap and whitespace rules (#9764)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "44082317659ccd81355029d9cc9e7caef29ca641", "committedDate": "2022-06-26 09:52:16 +0800", "message": "[fix](random-distribution) Make aggregate keys table with replace type columns and unique keys table can only have hash distribution to make data computing correctly (#10414)"}, {"oid": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "committedDate": "2022-07-12 19:41:06 +0800", "message": "[Feature] Lightweight schema change of add/drop column (#10136)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "e54b57107a146f94e8f83b38b3600baac49916c2", "committedDate": "2022-07-26 11:49:14 +0800", "message": "[bug](FE): Fix show alter column return incorrect job progress (#11184)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "3070318f95ad486466be3021019d9b7eeebcd1ad", "committedDate": "2022-08-05 23:27:29 +0800", "message": "[Enhancement](IdGenerator) Use IdGeneratorBuffer to get better performance for creating tablet in fe when do alter table job (#11524)"}, {"oid": "d2d4423c8825b058649b5e91dd0d55aad8fbc2ae", "committedDate": "2022-08-15 21:39:27 +0800", "message": "[feature](schema change) Light schema change support rollup (#11494)"}, {"oid": "56574b59484fff16723b6871609f150f2c3ddbf6", "committedDate": "2022-08-16 11:45:49 +0800", "message": "[refactor] rename data source to catalog (#11243)"}, {"oid": "adfef85c0ca0093927c9bf447a2f42e7fbabd08e", "committedDate": "2022-08-22 08:27:40 +0800", "message": "[improve](fe): use `Pair.of` to replace `new Pair<>()` (#11945)"}, {"oid": "e5bfbbe7611376a1b35541bfb048fc422b14f661", "committedDate": "2022-08-26 09:40:11 +0800", "message": "[feature-wip](unique-key-merge-on-write) support alter table column for MoW (#12052)"}, {"oid": "e01986b8b9f1030103bc6bf4278a7ec8e3f8c893", "committedDate": "2022-09-17 11:29:36 +0800", "message": "[feature](light-schema-change) fix light-schema-change and add more cases (#12160)"}, {"oid": "9b5b411112d1b712ec201f8c3395d030e5cf79bf", "committedDate": "2022-11-10 16:17:25 +0800", "message": "[fix](schemeChange) fe oom because replicas too many when schema change (#12850)"}, {"oid": "fb140d018059cd3e30f81e98b065a5b2f1fa4f78", "committedDate": "2022-11-17 22:39:09 +0800", "message": "[Enhancement](sequence-column) optimize the use of sequence column (#13872)"}, {"oid": "ca90253b09ddaa49e45f3d5a12d4709bc03e91ed", "committedDate": "2022-11-30 10:04:33 +0800", "message": "[config](storage-policy) add a FE config to disable storage policy by default (#14655)"}, {"oid": "c0b764e419b45f268f759814202d204861e0c30a", "committedDate": "2022-12-08 17:36:54 +0800", "message": "[fix](schemachange) fix the schema change that causes the be core dump. (#14804)"}, {"oid": "a291cb17beb8e7dd47c91654fa08ec9e21ceaf45", "committedDate": "2022-12-25 10:09:40 +0800", "message": "[fix](information-schema) fix bug that query tables in information_schema db will return error #15336"}, {"oid": "75aa00d3d02ee5e361f05365c7c430917be0aee8", "committedDate": "2022-12-28 18:01:50 +0800", "message": "[Feature](NGram BloomFilter Index) add new ngram bloom filter index to speed up like query (#11579)"}, {"oid": "bb28144c7603e6f6f1b99900c6526c1915424a19", "committedDate": "2023-01-10 19:03:06 +0800", "message": "[fix](schema change) bugfix for light schema change while with rollup (#15681)"}, {"oid": "58c520dbfde1ce09c0a23a5ec2276ca687f6c0db", "committedDate": "2023-01-14 23:58:00 +0800", "message": "[Feature](remote) Cooldown cold data to object storage only one replica (#15832)"}, {"oid": "00a598a8391d055e304e4231c8fc44885ad3c800", "committedDate": "2023-01-31 14:13:47 +0800", "message": "[feature](cooldown) Decouple storage policy and resource (#15873)"}, {"oid": "e1f13863950237d96e8488dd42fa288cc6df94b7", "committedDate": "2023-02-09 09:12:55 +0800", "message": "[fix](cooldown) Rewrite update cooldown conf (#16488)"}, {"oid": "43eca4f209c03a011f541b0b6ba6ad97935d3adf", "committedDate": "2023-02-10 17:56:17 +0800", "message": "[Feature-WIP](inverted index) Implementation for alter inverted index. (#16371)"}, {"oid": "69c70d27bd67ace69570f65b1784a71ac003f52b", "committedDate": "2023-02-15 11:40:44 +0800", "message": "[Refactor](auth) Add AccessController to support customized authorization (#16679)"}, {"oid": "76ef4af29dc5236aaef7892fe8157e2024f6da84", "committedDate": "2023-02-21 22:36:56 +0800", "message": "[fix](alter inverted index) fix write edit log in replaymodifyTableAddOrDropInvertedIndices function (#16977)"}, {"oid": "edead494cb76b38b8d5e9ce46d3659da9b16f579", "committedDate": "2023-02-23 15:47:17 +0800", "message": "[Enhancement](storage) add a new hidden column __DORIS_VERSION_COL__ for unique key table (#16509)"}, {"oid": "a12b3c3f0c5019b978890a4e4bf8702c567b0bcb", "committedDate": "2023-02-24 10:25:48 +0800", "message": "[fix](alter inverted index) fix incorrect CreateTime of 'show alter' query result after fe restart (#17043)"}, {"oid": "e8de07a6a5df6c1c0187fa346d1e9cf6a6b77752", "committedDate": "2023-02-27 18:42:31 +0800", "message": "[feature](cooldown) Forbid storage policy for MoW tables (#17148)"}, {"oid": "b839353c2dd2f8f72b15eea82e4a86f486ba58ae", "committedDate": "2023-03-01 19:32:39 +0800", "message": "[fix](inverted index) fix BE coredump because of not ignore case ensitivity for column name when create index (#17276)"}, {"oid": "50bf02024add54cd284f018c5e6ff711aad2c9e6", "committedDate": "2023-03-07 08:57:55 +0800", "message": "[Improvement](meta) support return total statistics of all databases for command show proc '/jobs (#17342)"}, {"oid": "4a0361914b9ce11c654d1a8d8375b264ee629abd", "committedDate": "2023-03-09 16:33:46 +0800", "message": "[fix](alter inverted index) add or drop inverted index also need change table state to SCHEMA_CHANGE (#17471)"}, {"oid": "3593b82498e83cb2b16febe5723c858dd4133715", "committedDate": "2023-03-17 20:54:50 +0800", "message": "[fix](schema change) Fix fe restart failed because of replay schema change alter job failed (#17825)"}, {"oid": "410907c940a185a00b8c3c975ff5a799c9303eac", "committedDate": "2023-03-22 17:47:30 +0800", "message": "[improvement](inverted index)UNIQUE_KEYS table only supports inverted index when merge_on_write is enabled. (#17827)"}, {"oid": "df0eca4003f38bfac949b47b1a056aee0efe8b02", "committedDate": "2023-03-25 22:38:19 +0800", "message": "[improvement] (schema change) Lightweight schema change of modify column with varchar length (#17207)"}, {"oid": "7d49d9cf99e231adf09c77bf2bfb89b08b52cbc8", "committedDate": "2023-04-02 15:51:21 +0800", "message": "[improvement](dynamic partition) Fix dynamic partition no bucket (#18300)"}, {"oid": "591f76a6a41eb53b736336aec1acdc82f4d9fb3f", "committedDate": "2023-04-06 15:07:37 +0800", "message": "[fix](alter inverted index) Temporary deal with add or drop inverted index by directly schema change (#18378)"}, {"oid": "7631a8fb399ff9cad581688e455a888cda8363dd", "committedDate": "2023-04-07 11:11:55 +0800", "message": "[Bug](materialized-view) fix mv define expr persistence replay incorrect after schema change (#18418)"}, {"oid": "e56201780143af7e7af718125cce3baca305dc96", "committedDate": "2023-04-11 11:09:43 +0800", "message": "[feature](table-metadata) support altering the property \"light_schema_change\" for the tables which created before 1.2 (#17704)"}, {"oid": "94509e51af6d959d70cd0cf9375ef4da5044ba40", "committedDate": "2023-04-20 19:20:03 +0800", "message": "[fix](editLog) add sufficient replay logic and edit log for altering light schema change (#18746)"}, {"oid": "f9f5bbde6f0d59422c5dbe0b955345d8baa164af", "committedDate": "2023-04-27 09:59:56 +0800", "message": "[feature-wip](duplicate_no_keys) add create duplicate table without keys (#18758)"}, {"oid": "a978be32a6c8cd96d01f1b9e728648e68f89dcbd", "committedDate": "2023-04-30 22:46:36 +0800", "message": "[fix](schema_change) remove shadow prefix of schema for tablesink (#18822)"}, {"oid": "2596d68424c9ff6787cf027dac43c161ae855c65", "committedDate": "2023-05-23 18:23:12 +0800", "message": "[fix](schema change) Change table state to NORMAL by SchemaChangeJob instead of SchemaChangeHandler (#19838)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}, {"oid": "ae352997b46036342cd229e4fa57d0f77e6d0f57", "committedDate": "2023-05-28 11:23:07 +0800", "message": "[Enhancement](alter inverted index) Improve alter inverted index performance with light weight add or drop inverted index (#19063)"}, {"oid": "ecdc5124bed42a4fd33007a77d9ed3ab93497584", "committedDate": "2023-06-02 09:22:41 +0800", "message": "[feature-wip](duplicate-no-keys) schame change support for duplicate no keys (#19326)"}]}, {"oid": "1959144eede1fa35cde5b723cfd6186dd322dd9a", "url": "https://github.com/apache/incubator-doris/commit/1959144eede1fa35cde5b723cfd6186dd322dd9a", "message": "Support Alter Table Clause For External Table\n5 alter operation be supported:\n\n* RENAME\n* ADD COLUMN\n* DROP COLUMN\n* MODIFY COLUMN\n* REORDER COLUMN", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "url": "https://github.com/apache/incubator-doris/commit/95b09439b6c1ef136849f8d98fd44235c0cbf5e5", "message": "fix some problem\n\n1. copy old schema to new schema before external table schema change\n2. add new operation of OP_REFRESH_EXTERNAL_TABLE_SCHEMA", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "fb59c88edb1d26987a764c4ace41989d3fd256f5", "url": "https://github.com/apache/incubator-doris/commit/fb59c88edb1d26987a764c4ace41989d3fd256f5", "message": "change some code", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "609e85d32f22d29125bcc375d92ae50f0a296d76", "url": "https://github.com/apache/incubator-doris/commit/609e85d32f22d29125bcc375d92ae50f0a296d76", "message": "change OP_REFRESH_EXTERNAL_TABLE_SCHEMA to OP_ALTER_EXTERNAL_TABLE_SCHEMA", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "673ab758bc90cac42a7b90c0c880d9a46613e315", "url": "https://github.com/apache/incubator-doris/commit/673ab758bc90cac42a7b90c0c880d9a46613e315", "message": "Added a forbidden of delete the last column", "committedDate": "2020-10-13T03:07:30Z", "type": "commit"}, {"oid": "673ab758bc90cac42a7b90c0c880d9a46613e315", "url": "https://github.com/apache/incubator-doris/commit/673ab758bc90cac42a7b90c0c880d9a46613e315", "message": "Added a forbidden of delete the last column", "committedDate": "2020-10-13T03:07:30Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzODUyNQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506438525", "body": "the param `isReplay` seems always true.", "bodyText": "the param isReplay seems always true.", "bodyHTML": "<p dir=\"auto\">the param <code>isReplay</code> seems always true.</p>", "author": "morningman", "createdAt": "2020-10-16T13:45:04Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java", "diffHunk": "@@ -305,6 +306,26 @@ public boolean createTableWithLock(Table table, boolean isReplay, boolean setIfN\n         }\n     }\n \n+    public void refreshTableSchemaWithLock(String tableName, List<Column> newSchema, boolean isReplay) throws DdlException{", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NDEzMw==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507154133", "bodyText": "yes, so I will del it.", "author": "HappenLee", "createdAt": "2020-10-18T13:42:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzODUyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "8b6daa14547fbb2510e2349a302921ac41a2cb47", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\nindex fa03e55ec5..d2067f2566 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n", "chunk": "@@ -306,7 +305,7 @@ public class Database extends MetaObject implements Writable {\n         }\n     }\n \n-    public void refreshTableSchemaWithLock(String tableName, List<Column> newSchema, boolean isReplay) throws DdlException{\n+    public void allterExternalTableSchemaWithLock(String tableName, List<Column> newSchema) throws DdlException{\n         writeLock();\n         try {\n             if (!nameToTable.containsKey(tableName)) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\nindex fa03e55ec5..d2067f2566 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n", "chunk": "@@ -306,7 +305,7 @@ public class Database extends MetaObject implements Writable {\n         }\n     }\n \n-    public void refreshTableSchemaWithLock(String tableName, List<Column> newSchema, boolean isReplay) throws DdlException{\n+    public void allterExternalTableSchemaWithLock(String tableName, List<Column> newSchema) throws DdlException{\n         writeLock();\n         try {\n             if (!nameToTable.containsKey(tableName)) {\n", "next_change": {"commit": "f7730031b8eca90c150c400c8d67e008290a6f70", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\nindex d2067f2566..d9fe637c60 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n", "chunk": "@@ -305,20 +307,6 @@ public class Database extends MetaObject implements Writable {\n         }\n     }\n \n-    public void allterExternalTableSchemaWithLock(String tableName, List<Column> newSchema) throws DdlException{\n-        writeLock();\n-        try {\n-            if (!nameToTable.containsKey(tableName)) {\n-                throw new DdlException(\"Do not contain proper table \" + tableName + \" in refresh table\");\n-            } else {\n-                Table table = nameToTable.get(tableName);\n-                table.setNewFullSchema(newSchema);\n-            }\n-        } finally {\n-            writeUnlock();\n-        }\n-    }\n-\n     public boolean createTable(Table table) {\n         boolean result = true;\n         String tableName = table.getName();\n", "next_change": {"commit": "92e50504e5b299200408f916e8742dc8772c0263", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\nindex d9fe637c60..c3ad35a91c 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n", "chunk": "@@ -310,11 +334,15 @@ public class Database extends MetaObject implements Writable {\n     public boolean createTable(Table table) {\n         boolean result = true;\n         String tableName = table.getName();\n-        if (nameToTable.containsKey(tableName)) {\n+        if (Catalog.isStoredTableNamesLowerCase()) {\n+            tableName = tableName.toLowerCase();\n+        }\n+        if (isTableExist(tableName)) {\n             result = false;\n         } else {\n             idToTable.put(table.getId(), table);\n             nameToTable.put(table.getName(), table);\n+            lowerCaseToTableName.put(tableName.toLowerCase(), tableName);\n         }\n         return result;\n     }\n", "next_change": {"commit": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\nindex c3ad35a91c..3817c34614 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Database.java\n", "chunk": "@@ -344,27 +369,20 @@ public class Database extends MetaObject implements Writable {\n             nameToTable.put(table.getName(), table);\n             lowerCaseToTableName.put(tableName.toLowerCase(), tableName);\n         }\n+        table.unmarkDropped();\n         return result;\n     }\n \n-    public void dropTableWithLock(String tableName) {\n-        writeLock();\n-        try {\n-            dropTable(tableName);\n-        } finally {\n-            writeUnlock();\n-        }\n-    }\n-\n     public void dropTable(String tableName) {\n         if (Catalog.isStoredTableNamesLowerCase()) {\n             tableName = tableName.toLowerCase();\n         }\n-        Table table = getTable(tableName);\n+        Table table = getTableNullable(tableName);\n         if (table != null) {\n             this.nameToTable.remove(tableName);\n             this.idToTable.remove(table.getId());\n             this.lowerCaseToTableName.remove(tableName.toLowerCase());\n+            table.markDropped();\n         }\n     }\n \n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "44498a1ae2f6303a8765e2b537f2bf0a8e848864", "committedDate": "2020-10-30 11:44:44 +0800", "message": "[Compatibility] Add table \"views\" in information_schema database (#4778)"}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "ca10205137134c4971e0f8a658d739d84bf150fc", "committedDate": "2021-01-28 10:52:37 +0800", "message": "[Function] Support show create function statement (#5197)"}, {"oid": "6bd22bc573c3f68fe9f874ad212bfabb19e3d8c0", "committedDate": "2021-01-28 18:50:18 +0800", "message": "[BackupAndRestore] Support backup and restore view and external odbc table (#5299)"}, {"oid": "543ed46bc3d65bc9c050dd346ff72f5cad9e27ad", "committedDate": "2021-03-12 14:24:34 +0800", "message": "(#5390)fix NPE when replay colocate group (#5391)"}, {"oid": "827f5c086775c54e5cbe84ca0268ba595fd2601d", "committedDate": "2021-04-27 09:40:17 +0800", "message": "[Bug-fix] Ignore modified table log when table has been dropped (#5688)"}, {"oid": "7e77b5ed7f29bf26e66509ba16342a6fa2d98341", "committedDate": "2021-07-15 11:13:51 +0800", "message": "[Optimize] Using custom conf dir to save log config of Spring (#6205)"}, {"oid": "5de79ec3f0c6d9835e07381565b83b4f2d89deb3", "committedDate": "2021-07-19 09:27:08 +0800", "message": "[Feature] Support data encrypt/decrypt (#6115)"}, {"oid": "92e50504e5b299200408f916e8742dc8772c0263", "committedDate": "2021-08-25 22:34:45 +0800", "message": "[Feature] Supports case-insensitive table names. (#6403)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "696790b3972ab5dfd6521b8dbc19a48f9628106f", "committedDate": "2021-10-23 16:47:10 +0800", "message": "[Refactor] remove unused code (#6879)"}, {"oid": "c55e7221dcc1e6553f8ab0f8b249ea941fa7030f", "committedDate": "2021-11-12 10:56:33 +0800", "message": "[Bug] Fix bug with use tableId to get table in publish version (#7091)"}, {"oid": "52ebb3d8f56cf6fcd0df2f9cdbb056bafd136c6d", "committedDate": "2021-11-20 21:39:37 +0800", "message": "[feat](mysql-compatibility) Increase compatibility with mysql (#7041)"}, {"oid": "d3c020b3cb131d765018a168c1b8c6e304bf1626", "committedDate": "2021-11-24 10:37:54 +0800", "message": "[feat-opt](fe-config) Add tablets number limit to void wrong usage (#7025)"}, {"oid": "3b8d48f08b7c53abd236e41a16791c38a6aa847d", "committedDate": "2022-01-27 10:22:47 +0800", "message": "[feature-wip](iceberg) Step1: Support create Iceberg external table (#7391)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "92b690f3eb2d351255ccbdf0c6bfafc6a7d6aae6", "committedDate": "2022-02-10 15:08:04 +0800", "message": "[feature-wip](iceberg) Step2: add table creation strict mode and support refresh iceberg table or db. (#7981)"}, {"oid": "27d2e3e9498090a81f157da3093085f0f0c37299", "committedDate": "2022-02-28 17:47:01 +0800", "message": "[refactor](fe) Remove old fe meta version (#8246)"}, {"oid": "4a38f2d8a19ad47e0c08702065de1ab428eaf596", "committedDate": "2022-03-11 17:36:23 +0800", "message": "[fix](transaction) Fix committed transaction couldn't be finished when table is dropped (#8423)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "235d586f11965bde9f07a5a7a6b80191ea04cad1", "committedDate": "2022-05-19 16:36:03 +0800", "message": "[style](fe) code correct rules and name rules (#9670)"}, {"oid": "5f56e17ef215e932990da880182d8ad421bc62c1", "committedDate": "2022-06-08 22:02:22 +0800", "message": "[feature-wip](multi-catalog)(step2) Introduce Internal Data Source (#9953)"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "2a1d1b951aeaadad4b0e1a8c265d196d89070012", "committedDate": "2022-06-17 08:49:15 +0800", "message": "[data lake]Add HMS external data source. (#10088)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "6c2e76e39f06dd7fd7d6ab6ae6092dab735a23e8", "committedDate": "2022-07-01 10:27:38 +0800", "message": "[enhancement](proc) Support showing more details in show proc \"/dbs\" (#10471)"}, {"oid": "f40ae7c654e5c5e49a916fc628846413f7b5577f", "committedDate": "2022-07-05 13:40:24 +0800", "message": "[feature-wip](multi-catalog) support \"show proc 'catalogs/'\" (#10596)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}, {"oid": "c2efa9c3b526e7cca1c88a4a445223e1cfb8d47a", "committedDate": "2022-08-21 10:01:57 +0800", "message": "[refactor](planner): refactor equals code in Catalog dir. (#11903)"}, {"oid": "adfef85c0ca0093927c9bf447a2f42e7fbabd08e", "committedDate": "2022-08-22 08:27:40 +0800", "message": "[improve](fe): use `Pair.of` to replace `new Pair<>()` (#11945)"}, {"oid": "2398cd3bb6e17d2bf28088a3fb106acfbc5b8920", "committedDate": "2022-09-05 11:31:35 +0800", "message": "[enhancement](Nereids)print slot name in explain string (#12272)"}, {"oid": "847b80ebfaad621289d0e0bd7809703614aa284b", "committedDate": "2022-10-21 15:29:27 +0800", "message": "[test](jdbc) add jdbc and hive regression test (#13143)"}, {"oid": "efe813ba60bfacf2d8c60a11f6688cb66ee3af87", "committedDate": "2022-10-30 13:24:48 +0800", "message": "[fix](test)(explain) add full qualified name for scan node explain string (#13777)"}, {"oid": "c5eb8ab0846055573e3b7f0ac5b15df0277f3c09", "committedDate": "2022-11-29 08:55:18 +0800", "message": "[fix](persiste) make ArithmeticExpr wriable (#14615)"}, {"oid": "bb334de00ff79cfed2834401fc5b3e2000289605", "committedDate": "2023-02-08 18:04:26 +0800", "message": "[enhancement](load) Change transaction limit from global level to db level (#15830)"}, {"oid": "c95eb8a67f6afdb0bc1f05531249835d68fdd1c4", "committedDate": "2023-03-18 22:06:48 +0800", "message": "[enhancement] Function(create/drop) support the global operation (#16973) (#17608)"}, {"oid": "362b5a34ae802cda1234e1f01bb73daa84f5eb15", "committedDate": "2023-04-14 17:32:51 +0800", "message": "[feat](stats) Support to delete expired stats periodically (#18614)"}, {"oid": "7c539575c747b7dea440f19625baa4421fb70a9e", "committedDate": "2023-05-22 09:02:34 +0800", "message": "[refactor](hudi) remove hudi external table (#19908)"}, {"oid": "93933308e6af3aa2b5c2dc8a65ab69f1a4f206af", "committedDate": "2023-05-26 23:40:49 +0800", "message": "[Feature-WIP](CCR): Add ccr doris interface (WIP) (#17881)"}, {"oid": "70819fae228eaccaa3831530f23e5d9917b9cf12", "committedDate": "2023-06-09 17:29:21 +0800", "message": "[feature](alter) Add AlterDatabasePropertyStmt binlog impl (#20550)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MDkyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506440922", "body": "Use GSON", "bodyText": "Use GSON", "bodyHTML": "<p dir=\"auto\">Use GSON</p>", "author": "morningman", "createdAt": "2020-10-16T13:47:39Z", "path": "fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java", "diffHunk": "@@ -0,0 +1,102 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package org.apache.doris.persist;\n+\n+import com.clearspring.analytics.util.Lists;\n+import org.apache.doris.catalog.Column;\n+import org.apache.doris.common.io.Writable;\n+import org.apache.doris.common.io.Text;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+import java.util.List;\n+\n+public class RefreshExternalTableInfo implements Writable {\n+    public static final Logger LOG = LoggerFactory.getLogger(RefreshExternalTableInfo.class);\n+\n+    private String dbName;", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NjQyMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507156422", "bodyText": "Sorry, Firstly I try use GSON to do serialization. But failed when I need to deserialize the newSchema. It seems Column cause the problem.", "author": "HappenLee", "createdAt": "2020-10-18T13:50:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MDkyMg=="}], "type": "inlineReview", "revised_code": {"commit": "5a3ee73fe76186ec00694977ce1299f92cffce59", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java b/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\nindex 75c279ceea..a2e327df5d 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\n", "chunk": "@@ -33,8 +34,11 @@ import java.util.List;\n public class RefreshExternalTableInfo implements Writable {\n     public static final Logger LOG = LoggerFactory.getLogger(RefreshExternalTableInfo.class);\n \n+    @SerializedName(value = \"dbName\")\n     private String dbName;\n+    @SerializedName(value = \"tableName\")\n     private String tableName;\n+    @SerializedName(value = \"newSchema\")\n     private List<Column> newSchema;\n \n     public RefreshExternalTableInfo() {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java b/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\nindex 75c279ceea..a2e327df5d 100644\n--- a/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/persist/RefreshExternalTableInfo.java\n", "chunk": "@@ -33,8 +34,11 @@ import java.util.List;\n public class RefreshExternalTableInfo implements Writable {\n     public static final Logger LOG = LoggerFactory.getLogger(RefreshExternalTableInfo.class);\n \n+    @SerializedName(value = \"dbName\")\n     private String dbName;\n+    @SerializedName(value = \"tableName\")\n     private String tableName;\n+    @SerializedName(value = \"newSchema\")\n     private List<Column> newSchema;\n \n     public RefreshExternalTableInfo() {\n", "next_change": null}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "c5941fd16613ccfe3bacd3ee06a61c29165d9f65", "committedDate": "2022-05-04 23:34:55 +0800", "message": "[FE Code Style][sub] Adjust some check rules (#9345)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MzAyOQ==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r506443029", "body": "This method is just same as `renameTable` above?", "bodyText": "This method is just same as renameTable above?", "bodyHTML": "<p dir=\"auto\">This method is just same as <code>renameTable</code> above?</p>", "author": "morningman", "createdAt": "2020-10-16T13:49:17Z", "path": "fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java", "diffHunk": "@@ -5092,6 +5098,35 @@ public void renameTable(Database db, OlapTable table, TableRenameClause tableRen\n         LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n     }\n \n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {", "originalCommit": "673ab758bc90cac42a7b90c0c880d9a46613e315", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE1NTIxMg==", "url": "https://github.com/apache/incubator-doris/pull/4699#discussion_r507155212", "bodyText": "yes, but the param is different. one is the olaptable, this is table", "author": "HappenLee", "createdAt": "2020-10-18T13:45:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0MzAyOQ=="}], "type": "inlineReview", "revised_code": {"commit": "8b6daa14547fbb2510e2349a302921ac41a2cb47", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex d7dbb5f7a1..2b73e27ccd 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5072,33 +5072,14 @@ public class Catalog {\n     }\n \n     // entry of rename table operation\n-    public void renameTable(Database db, OlapTable table, TableRenameClause tableRenameClause) throws DdlException {\n-        if (table.getState() != OlapTableState.NORMAL) {\n-            throw new DdlException(\"Table[\" + table.getName() + \"] is under \" + table.getState());\n-        }\n-\n-        String tableName = table.getName();\n-        String newTableName = tableRenameClause.getNewTableName();\n-        if (tableName.equals(newTableName)) {\n-            throw new DdlException(\"Same table name\");\n-        }\n-\n-        // check if name is already used\n-        if (db.getTable(newTableName) != null) {\n-            throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n+        if (table instanceof OlapTable) {\n+            OlapTable olapTable = (OlapTable) table;\n+            if ( olapTable.getState() != OlapTableState.NORMAL) {\n+                throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+            }\n         }\n \n-        table.checkAndSetName(newTableName, false);\n-\n-        db.dropTable(table.getName());\n-        db.createTable(table);\n-\n-        TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n-        editLog.logTableRename(tableInfo);\n-        LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n-    }\n-\n-    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n         String tableName = table.getName();\n         String newTableName = tableRenameClause.getNewTableName();\n         if (tableName.equals(newTableName)) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex d7dbb5f7a1..2b73e27ccd 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5072,33 +5072,14 @@ public class Catalog {\n     }\n \n     // entry of rename table operation\n-    public void renameTable(Database db, OlapTable table, TableRenameClause tableRenameClause) throws DdlException {\n-        if (table.getState() != OlapTableState.NORMAL) {\n-            throw new DdlException(\"Table[\" + table.getName() + \"] is under \" + table.getState());\n-        }\n-\n-        String tableName = table.getName();\n-        String newTableName = tableRenameClause.getNewTableName();\n-        if (tableName.equals(newTableName)) {\n-            throw new DdlException(\"Same table name\");\n-        }\n-\n-        // check if name is already used\n-        if (db.getTable(newTableName) != null) {\n-            throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n+        if (table instanceof OlapTable) {\n+            OlapTable olapTable = (OlapTable) table;\n+            if ( olapTable.getState() != OlapTableState.NORMAL) {\n+                throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+            }\n         }\n \n-        table.checkAndSetName(newTableName, false);\n-\n-        db.dropTable(table.getName());\n-        db.createTable(table);\n-\n-        TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n-        editLog.logTableRename(tableInfo);\n-        LOG.info(\"rename table[{}] to {}\", tableName, newTableName);\n-    }\n-\n-    public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n         String tableName = table.getName();\n         String newTableName = tableRenameClause.getNewTableName();\n         if (tableName.equals(newTableName)) {\n", "next_change": {"commit": "4ccd7b84ade17ab251022a16c5eddb722d6d1e16", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex 2b73e27ccd..51760a45d3 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5080,9 +5087,9 @@ public class Catalog {\n             }\n         }\n \n-        String tableName = table.getName();\n+        String oldTableName = table.getName();\n         String newTableName = tableRenameClause.getNewTableName();\n-        if (tableName.equals(newTableName)) {\n+        if (oldTableName.equals(newTableName)) {\n             throw new DdlException(\"Same table name\");\n         }\n \n", "next_change": {"commit": "f7730031b8eca90c150c400c8d67e008290a6f70", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex 51760a45d3..ae87e89119 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5080,37 +5078,44 @@ public class Catalog {\n \n     // entry of rename table operation\n     public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n-        if (table instanceof OlapTable) {\n-            OlapTable olapTable = (OlapTable) table;\n-            if ( olapTable.getState() != OlapTableState.NORMAL) {\n-                throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+        db.writeLock();\n+        table.writeLock();\n+        try {\n+            if (table instanceof OlapTable) {\n+                OlapTable olapTable = (OlapTable) table;\n+                if ( olapTable.getState() != OlapTableState.NORMAL) {\n+                    throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+                }\n             }\n-        }\n \n-        String oldTableName = table.getName();\n-        String newTableName = tableRenameClause.getNewTableName();\n-        if (oldTableName.equals(newTableName)) {\n-            throw new DdlException(\"Same table name\");\n-        }\n+            String oldTableName = table.getName();\n+            String newTableName = tableRenameClause.getNewTableName();\n+            if (oldTableName.equals(newTableName)) {\n+                throw new DdlException(\"Same table name\");\n+            }\n \n-        // check if name is already used\n-        if (db.getTable(newTableName) != null) {\n-            throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n-        }\n+            // check if name is already used\n+            if (db.getTable(newTableName) != null) {\n+                throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+            }\n \n-        if (table.getType() == TableType.OLAP) {\n-            // olap table should also check if any rollup has same name as \"newTableName\"\n-            ((OlapTable) table).checkAndSetName(newTableName, false);\n-        } else {\n-            table.setName(newTableName);\n-        }\n+            if (table.getType() == TableType.OLAP) {\n+                // olap table should also check if any rollup has same name as \"newTableName\"\n+                ((OlapTable) table).checkAndSetName(newTableName, false);\n+            } else {\n+                table.setName(newTableName);\n+            }\n \n-        db.dropTable(oldTableName);\n-        db.createTable(table);\n+            db.dropTable(oldTableName);\n+            db.createTable(table);\n \n-        TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n-        editLog.logTableRename(tableInfo);\n-        LOG.info(\"rename table[{}] to {}\", oldTableName, newTableName);\n+            TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n+            editLog.logTableRename(tableInfo);\n+            LOG.info(\"rename table[{}] to {}\", oldTableName, newTableName);\n+        } finally {\n+            table.writeUnlock();\n+            db.writeUnlock();\n+        }\n     }\n \n     public void refreshExternalTableSchema(Database db, Table table, List<Column> newSchema) {\n", "next_change": {"commit": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "changed_code": [{"header": "diff --git a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\nindex ae87e89119..304c04bec3 100755\n--- a/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n+++ b/fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java\n", "chunk": "@@ -5078,42 +5394,45 @@ public class Catalog {\n \n     // entry of rename table operation\n     public void renameTable(Database db, Table table, TableRenameClause tableRenameClause) throws DdlException {\n-        db.writeLock();\n-        table.writeLock();\n+        db.writeLockOrDdlException();\n         try {\n-            if (table instanceof OlapTable) {\n-                OlapTable olapTable = (OlapTable) table;\n-                if ( olapTable.getState() != OlapTableState.NORMAL) {\n-                    throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+            table.writeLockOrDdlException();\n+            try {\n+                if (table instanceof OlapTable) {\n+                    OlapTable olapTable = (OlapTable) table;\n+                    if (olapTable.getState() != OlapTableState.NORMAL) {\n+                        throw new DdlException(\"Table[\" + olapTable.getName() + \"] is under \" + olapTable.getState());\n+                    }\n                 }\n-            }\n \n-            String oldTableName = table.getName();\n-            String newTableName = tableRenameClause.getNewTableName();\n-            if (oldTableName.equals(newTableName)) {\n-                throw new DdlException(\"Same table name\");\n-            }\n+                String oldTableName = table.getName();\n+                String newTableName = tableRenameClause.getNewTableName();\n+                if (oldTableName.equals(newTableName)) {\n+                    throw new DdlException(\"Same table name\");\n+                }\n \n-            // check if name is already used\n-            if (db.getTable(newTableName) != null) {\n-                throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n-            }\n+                // check if name is already used\n+                if (db.getTable(newTableName).isPresent()) {\n+                    throw new DdlException(\"Table name[\" + newTableName + \"] is already used\");\n+                }\n \n-            if (table.getType() == TableType.OLAP) {\n-                // olap table should also check if any rollup has same name as \"newTableName\"\n-                ((OlapTable) table).checkAndSetName(newTableName, false);\n-            } else {\n-                table.setName(newTableName);\n-            }\n+                if (table.getType() == TableType.OLAP) {\n+                    // olap table should also check if any rollup has same name as \"newTableName\"\n+                    ((OlapTable) table).checkAndSetName(newTableName, false);\n+                } else {\n+                    table.setName(newTableName);\n+                }\n \n-            db.dropTable(oldTableName);\n-            db.createTable(table);\n+                db.dropTable(oldTableName);\n+                db.createTable(table);\n \n-            TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n-            editLog.logTableRename(tableInfo);\n-            LOG.info(\"rename table[{}] to {}\", oldTableName, newTableName);\n+                TableInfo tableInfo = TableInfo.createForTableRename(db.getId(), table.getId(), newTableName);\n+                editLog.logTableRename(tableInfo);\n+                LOG.info(\"rename table[{}] to {}\", oldTableName, newTableName);\n+            } finally {\n+                table.writeUnlock();\n+            }\n         } finally {\n-            table.writeUnlock();\n             db.writeUnlock();\n         }\n     }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "f89b660c94ca5ad69093a37af005b2ec2e59a7c6", "message": "Merge commit", "committedDate": null}, {"oid": "4204a878c895c6ccfb3d188ec84a1c42e83b290c", "committedDate": "2020-11-10 10:50:31 +0800", "message": "[Bug] Fix some bugs of load job scheduler (#4869)"}, {"oid": "4ccd7b84ade17ab251022a16c5eddb722d6d1e16", "committedDate": "2020-11-11 21:22:10 +0800", "message": "[Bug] Rename table logic error (#4870)"}, {"oid": "74bfd695957c23d7a1bfec1b926dbd0c4997b564", "committedDate": "2020-12-16 23:44:20 +0800", "message": "[Bug] Forbidden creating table with dynamic partition when FE.config dynamic_partition_enable=false (#5043)"}, {"oid": "d7a584ac59481b9281b6bbab04d0fc27de6e9851", "committedDate": "2020-12-31 09:41:38 +0800", "message": "[Rebalancer] support partition rebalancer (#5010)"}, {"oid": "d5768cf7d907565d5c9410ccde3c8160ab927d8c", "committedDate": "2021-01-04 09:32:05 +0800", "message": "[Bug] Fix create colocate table bug (#5139)"}, {"oid": "f7730031b8eca90c150c400c8d67e008290a6f70", "committedDate": "2021-01-13 10:27:58 +0800", "message": "Support read and write lock in table level to reduce lock competition (#3775)"}, {"oid": "78b84594e6e727899afcbca6bfe216ad102b2565", "committedDate": "2021-01-15 09:46:44 +0800", "message": "[Feature] Support Create Dynamic Partition Immediately FirstTime Without Wating Schedule. (#5209)"}, {"oid": "b25bcee5d332387d351c800dd6f38df49eb7ec08", "committedDate": "2021-01-20 21:38:06 +0800", "message": "[Bug] Remove schema hash and fix bug of calculating table signature (#5254)"}, {"oid": "d3f1b49faa9f73b9f52cefe5ceebe5a8b38e1153", "committedDate": "2021-01-23 21:09:54 +0800", "message": "[Bug] Fix bug that recover table throw NPE (#5279)"}, {"oid": "6bd22bc573c3f68fe9f874ad212bfabb19e3d8c0", "committedDate": "2021-01-28 18:50:18 +0800", "message": "[BackupAndRestore] Support backup and restore view and external odbc table (#5299)"}, {"oid": "de57667d6dc7ddc32fabd0f5c3299623ab9895d1", "committedDate": "2021-01-30 20:33:34 +0800", "message": "[Delete] Support delete with multi partitions (#5252)"}, {"oid": "be0b0f930cef08229d407e680fd949d1d1c44484", "committedDate": "2021-02-01 00:10:24 +0800", "message": "[Load] Load job should not begin transaction when task queue in loadingLoadTaskScheduler is full to avoid txn timeout (#5205)"}, {"oid": "47e33c79873f4277fd39da05a8532dcaa211a4d3", "committedDate": "2021-02-03 13:22:00 +0800", "message": "Support create index on unique value column (#5305)"}, {"oid": "059791c6acf45483204c406b852fe7aa18b087a2", "committedDate": "2021-02-03 13:22:38 +0800", "message": "[Config] Change some defualt value of Doris config (#5348)"}, {"oid": "77b756fb87ce42986271d67080fb0cacadc8b903", "committedDate": "2021-02-03 22:19:20 +0800", "message": "[Refactor] Remove redundant code of mini load and insert (#4966)"}, {"oid": "c283bb3677d1738dcb0d16f2aa7ee14eaa21c4cc", "committedDate": "2021-02-07 22:37:18 +0800", "message": " [Bug] Fix bug that not erase meta such as tablet when force drop db, table, partition (#5329)"}, {"oid": "f77b8ce8e4ca8cfc2edc25d6e11d57f49d5b0636", "committedDate": "2021-02-07 22:39:45 +0800", "message": "[UT] Modify to avoid some UT failure accidentally (#5359)"}, {"oid": "f12f32da11642c663f0f34f04a8d170f55849d26", "committedDate": "2021-02-07 22:41:55 +0800", "message": "[Bug] Support if not exists in create table like stmt (#5368)"}, {"oid": "99e1a97822ebfd12aedf74e7a2b311ebd66cd5e1", "committedDate": "2021-02-16 22:34:48 +0800", "message": "[Bug] Fix NPE when replaying modify table property (#5378)"}, {"oid": "c95f00d5081082d328fa857b49a8bd0b58404611", "committedDate": "2021-03-05 10:50:54 +0800", "message": "[Bug] Fix bug that the image cannot be pulled after the new fe nodes added (#5418)"}, {"oid": "a1160bcd99ec527827a1a03177343ea775670ae6", "committedDate": "2021-03-08 09:32:16 +0800", "message": "[Bug] Fix bug that data lost when doing backup job  (#5473)"}, {"oid": "543ed46bc3d65bc9c050dd346ff72f5cad9e27ad", "committedDate": "2021-03-12 14:24:34 +0800", "message": "(#5390)fix NPE when replay colocate group (#5391)"}, {"oid": "a25e3afa5b43051a3f2ca9faae679b01481b0c0b", "committedDate": "2021-04-11 22:02:03 +0800", "message": "[Colocate plan][Step1] Colocate join covers more situations (#5521)"}, {"oid": "75db273b9358d95ea5bc402a04a77424abf39754", "committedDate": "2021-04-12 11:23:49 +0800", "message": "[Doris On ES][WIP] Support external ES  table with `SSL` secured and configurable node sniffing (#5325)"}, {"oid": "a4f81941118d7e5f7d4e000d12298d8fecca2194", "committedDate": "2021-04-21 16:36:12 +0800", "message": "[Audit][Stream Load] Support audit function for stream load (#5452)"}, {"oid": "b93e8416885ac440e9c294c4bb2089e33bde788b", "committedDate": "2021-04-23 09:47:30 +0800", "message": "[Optimize] Remove expired txns in batch to avoid holding lock for too long (#5675)"}, {"oid": "de87f4ae840c1a527379c046d7f01afb2e2d7dcc", "committedDate": "2021-04-24 17:42:27 +0800", "message": "[Feature] Add list partition support (#5529)"}, {"oid": "827f5c086775c54e5cbe84ca0268ba595fd2601d", "committedDate": "2021-04-27 09:40:17 +0800", "message": "[Bug-fix] Ignore modified table log when table has been dropped (#5688)"}, {"oid": "efd51b47e51bb8e008f6ab6105f86dd6bf5abc02", "committedDate": "2021-05-08 10:56:10 +0800", "message": "[Bug] Fix some little bugs in FE (#5758)"}, {"oid": "55ca52a42d34047ed39bcc8edaa0ddccd8548989", "committedDate": "2021-05-12 10:38:23 +0800", "message": "[Bug] Fix bug that Drop olap table may introduce some problems when table's state is not normal (#5712)"}, {"oid": "e7a6d659a9525a1ac4a403d9fc07d3b7addadf70", "committedDate": "2021-05-13 22:34:23 +0800", "message": "[Optimize] Use BufferedOutputStream to speed up checkpoint (#5802)"}, {"oid": "c95bebfa5cbd11a0b92701a9dd674d0148d23c30", "committedDate": "2021-06-09 13:00:16 +0800", "message": "[Bug] Ignore drop table log when table has been dropped (#5973)"}, {"oid": "ff47dc750d7270b968980e19d89f195d1d812ff7", "committedDate": "2021-06-18 10:50:47 +0800", "message": "[Bug] Fix problem for thread safety issues and setting the status of non-existent replica does not prompt any error message (#6019)"}, {"oid": "ce49fa5968842287093eb9b4760b44c84833401a", "committedDate": "2021-06-30 09:28:26 +0800", "message": "[Bug][DynamicPartition] Take table_id as key of runtimeInfo (#6053)"}, {"oid": "f0c5fb9f3819e700396a641ad6c5a3157d8c8f1b", "committedDate": "2021-07-02 19:24:13 +0800", "message": "[Bug] Fix bug of NPE caused by the absence of table in replay process. (#6136)"}, {"oid": "56112c47180680857c76e8d6d115afdc32932738", "committedDate": "2021-07-12 13:32:44 +0800", "message": "[Bug] Fix bug that adding conflicting partition doesn't report errors (#6109)"}, {"oid": "dd15da4e12c40d26d749a08a056075f93eefdbe0", "committedDate": "2021-07-12 15:31:33 +0800", "message": "[DynamicPartition] Fix UT and add more tests for dynamic partition (#6198)"}, {"oid": "76e148988ac201829cee796c444aa8c671897e36", "committedDate": "2021-07-12 20:28:40 +0800", "message": "Support alter default bucket_num of partitioned olap table (#6023)"}, {"oid": "f93a272956e385f91a70b4f66d7ecd2111fb9f3f", "committedDate": "2021-07-13 11:35:35 +0800", "message": "[Bug] Fix bug that nondeterministic functions should not be rewrote in create view stmt (#6096)"}, {"oid": "68f988b78a0f652b9853049b424f2ac5639a5486", "committedDate": "2021-07-15 11:15:11 +0800", "message": "[Optimize] Use flat_hash_set to replace unorderd_set in InPredicate (#6216)"}, {"oid": "94c50012b2d60228861aaac0877decd550901ed2", "committedDate": "2021-07-19 20:26:14 +0800", "message": "[Performance] Optimize the performance of tabletReport (#6200)"}, {"oid": "b1f597910338af09cf762f95d98d734b25c2685c", "committedDate": "2021-07-27 13:36:53 +0800", "message": "[New Feature][Meta][Image] Add file header and footer for image (#6207)"}, {"oid": "b3a52a05d535bbf1f6d644fe46e71901d55d4482", "committedDate": "2021-07-27 13:38:15 +0800", "message": "[Update] Support update syntax (#6230)"}, {"oid": "c8c571af37193ee10b5437fd9b47b30c4b917d60", "committedDate": "2021-08-08 21:39:34 +0800", "message": "[New Feature] Support synchronizing MySQL binlog in real time [stage 1] (#6289)"}, {"oid": "9216735cfa30ae2ee06f962ee457bebdb51eed76", "committedDate": "2021-08-11 14:54:06 +0800", "message": "[New Featrue] Support Vectorization Execution Engine Interface For Doris (#6329)"}, {"oid": "8a267f1ac55a4215633e489f8283f11c8e585715", "committedDate": "2021-08-12 10:07:51 +0800", "message": "[Feature] Support for cleaning the trash actively (#6323)"}, {"oid": "5e6f1b89da8abe27327833243242ed94555a5349", "committedDate": "2021-08-13 21:56:34 +0800", "message": "[Feature] Support sql block rule (#6192)"}, {"oid": "63a0d9d23a3ce4e5c6413648bfcf9e67b57fd200", "committedDate": "2021-08-16 17:20:05 +0800", "message": "Add statistics struct and Support manually inject statistics (#6420)"}, {"oid": "6c23f8d4138ad3af46f5b19618d732d78114e8d6", "committedDate": "2021-08-19 14:17:57 +0800", "message": "[Bug] Fix bug that check point load image failed in some circumstance (#6465)"}, {"oid": "92e50504e5b299200408f916e8742dc8772c0263", "committedDate": "2021-08-25 22:34:45 +0800", "message": "[Feature] Supports case-insensitive table names. (#6403)"}, {"oid": "7324f4b0ae5e7a0442a32d9b1bf75af35223089d", "committedDate": "2021-08-30 18:52:18 +0800", "message": "[Bug] Regularly clean up old DeleteInfos in the DeleteHandler (#6448)"}, {"oid": "a949dcd9f6e4e2a87be8c61302d080f78b390ee9", "committedDate": "2021-08-31 20:33:26 +0800", "message": "[Feature] Create table like clause support copy rollup (#6475)"}, {"oid": "df54b34f9843adf80d5fa753383797690e9458dd", "committedDate": "2021-09-03 13:34:49 +0800", "message": "[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)"}, {"oid": "7db8841ae264012f37bb929b0f7ba6ffefe703c8", "committedDate": "2021-09-04 10:59:35 +0800", "message": "[Feature][ResourceTag] Support Resource Tag (#6203)"}, {"oid": "80cb22c880394a4c7d5b3ada4251c6b2e49a297b", "committedDate": "2021-09-07 11:54:15 +0800", "message": "[Bug] [Truncate] Fix tablet number is different between the new partition and base partition after truncate operation (#6552)"}, {"oid": "bf6d043a7ec545efe8660cb80aeeed13cd973c3b", "committedDate": "2021-09-07 11:55:23 +0800", "message": "[Bug] Fix bug that can not repair replica in DECOMMISSION state (#6560)"}, {"oid": "de66312a1a0cce9094b7c514ff90c84528d9b450", "committedDate": "2021-09-07 16:57:45 +0800", "message": "[Job Clean] Sort out the cleanup logic of historical jobs (#6553)"}, {"oid": "b2f1e21a3bc1689fa144084de96a1ccb7de5484a", "committedDate": "2021-09-10 09:53:30 +0800", "message": "[Bugs] Fix some bugs (#6586)"}, {"oid": "2c58724c84021ae5c9fdd5ba304808b1e79191d4", "committedDate": "2021-09-10 09:54:44 +0800", "message": "Support create table as select (#6102)"}, {"oid": "67472f35182eadb8920f0929b26fe05c6bbb40e7", "committedDate": "2021-09-16 10:28:40 +0800", "message": "[Meta][Refactor] Use lambda expressions to save Image (#6646)"}, {"oid": "95cdb7cc0caba77d2a16cbff5d4717b8354bb7a1", "committedDate": "2021-09-17 10:01:27 +0800", "message": "[Enhance] [Binlog] Reduce thread number of SyncJob to save resources (#6418)"}, {"oid": "537a542dba5604a5ad55ddfc959404cccc6dd8b4", "committedDate": "2021-09-25 12:24:29 +0800", "message": "[Bugs] Fix the bugs list of sync job (#6705)"}, {"oid": "e4d999274fbfdfe64c7a07877d73eb18ee6746ca", "committedDate": "2021-09-27 10:34:41 +0800", "message": "[BUG] Fix a bug when modify table's colocate group with same name (#6695)"}, {"oid": "ad3c9390a26c9f5792f6992d4a0f1123c8d8594e", "committedDate": "2021-09-29 11:11:28 +0800", "message": "[Bug] Fix bdbje getDatabaseNames() bug and scan node close bug (#6769)"}, {"oid": "e7707c8180fbc6b8e02c4cc8b9f32e2e99ecb156", "committedDate": "2021-09-30 18:26:21 +0800", "message": "[FOLLOWUP] create table like clause support copy rollup (#6580)"}, {"oid": "6a058792af8d9120eb85633844fa6f178bbb7a05", "committedDate": "2021-10-13 11:37:12 +0800", "message": "[Feature][Step1] Support lateral view FE part (#6745)"}, {"oid": "e547e77f860c63879703959567ac38cc1f58b09c", "committedDate": "2021-10-13 11:37:58 +0800", "message": "Fix variable dbName that is never used (#6802)"}, {"oid": "fcd15edbf92556d7566355b8562c6420cb75901e", "committedDate": "2021-10-15 10:18:11 +0800", "message": "[Export] Support export job with label (#6835)"}, {"oid": "adb6bfdf7492b2d0a8a5b4a07c4a3a2cf5fc0622", "committedDate": "2021-10-25 10:07:27 +0800", "message": "[Bug] Fix bug that truncate table may change the storage medium property (#6905)"}, {"oid": "58804d35701d7caf145d4f9997bd35a7cf272d2e", "committedDate": "2021-11-11 15:41:49 +0800", "message": "[Colocate] Fix bug that colocate group can not be redistributed after dropping a backend (#7020)"}, {"oid": "5b01f7bba2462daf818fc956f650527d51e8be97", "committedDate": "2021-11-16 11:59:07 +0800", "message": "[Feature] Support query hive table (#6569)"}, {"oid": "52ebb3d8f56cf6fcd0df2f9cdbb056bafd136c6d", "committedDate": "2021-11-20 21:39:37 +0800", "message": "[feat](mysql-compatibility) Increase compatibility with mysql (#7041)"}, {"oid": "d3c020b3cb131d765018a168c1b8c6e304bf1626", "committedDate": "2021-11-24 10:37:54 +0800", "message": "[feat-opt](fe-config) Add tablets number limit to void wrong usage (#7025)"}, {"oid": "dd36ccc3bf2f04d01cb6a4f5014fa605a412786a", "committedDate": "2021-12-02 11:39:51 +0800", "message": "[feature](storage-format) Z-Order Implement (#7149)"}, {"oid": "2b90967c4c8c0659deb981c08d3e6ce784460b02", "committedDate": "2021-12-16 10:39:22 +0800", "message": "[fix][refactor](broker load) refactor the scheduling logic of broker load (#7371)"}, {"oid": "bf4a867e855c2cf717a3cbd9fb6115f97cead639", "committedDate": "2022-01-04 10:28:14 +0800", "message": "[improvement](tablet-repair) add a config repair_slow_replica (#7423)"}, {"oid": "902ab9304357b65a9e085b340b661da869a6833a", "committedDate": "2022-01-14 09:25:10 +0800", "message": "[fix](session-variable) fix bug that checkpoint may overwrite the global variables (#7526)"}, {"oid": "e1d7233e9ca6addf4967c7df10a7c7c5728716d9", "committedDate": "2022-01-18 10:07:15 +0800", "message": "[feature](vectorization) Support Vectorized Exec Engine In Doris (#7785)"}, {"oid": "ed39ff1500a853df08053180cead0a8a282e0f8c", "committedDate": "2022-01-21 09:27:06 +0800", "message": "[feature](compaction) Support triggering compaction for a specific partition manually (#7521)"}, {"oid": "3b8d48f08b7c53abd236e41a16791c38a6aa847d", "committedDate": "2022-01-27 10:22:47 +0800", "message": "[feature-wip](iceberg) Step1: Support create Iceberg external table (#7391)"}, {"oid": "8c179bb09f77b9fb353c610172db373251c1a47c", "committedDate": "2022-01-31 22:16:08 +0800", "message": "[fix](alter) fix sql analyzed failed after increase the default bucket num of the table. (#7932)"}, {"oid": "c0e59e59aa704debccbea2df6ec7dc04b40983da", "committedDate": "2022-02-01 14:31:14 +0800", "message": "[fix][refactor] fix bugs and refactor some code by lint (#7871)"}, {"oid": "ecbd4bcae06c3c154139dce52995caab8c3a2ac7", "committedDate": "2022-02-08 10:01:52 +0800", "message": "[fix](catalog) Fix bug that The MetaObject lock design of fe would cause some problems with consistent meta when catalog do replay operation (#6650)"}, {"oid": "92b690f3eb2d351255ccbdf0c6bfafc6a7d6aae6", "committedDate": "2022-02-10 15:08:04 +0800", "message": "[feature-wip](iceberg) Step2: add table creation strict mode and support refresh iceberg table or db. (#7981)"}, {"oid": "1ff0df9f5498caacba5f15fa5cf5a5e1100ac68c", "committedDate": "2022-02-14 09:29:50 +0800", "message": "[refactor] Remove old schema change rollup backend decommission code (#8030)"}, {"oid": "6ccf9dbc563a7edc7eb2a0f2a377c516665b467b", "committedDate": "2022-02-16 11:08:48 +0800", "message": "[feature-wip](statistics) Step1: Statistics collection framework (#7880)"}, {"oid": "a46af29051e561b4578cba35c149302f1a53f684", "committedDate": "2022-02-16 11:58:40 +0800", "message": "[fix](meta) fix bug that FE can't start due to wrong image reading (#8045)"}, {"oid": "ddf08cc207dec9d46d2d1c084ae39d2c892a376f", "committedDate": "2022-02-25 11:08:29 +0800", "message": "[refactor](fe) Remove version hash on FE side (#8099)"}, {"oid": "83521a826a07693246bdb6e7834d7de2500d00d5", "committedDate": "2022-02-26 10:38:55 +0800", "message": "[Feature](create_table) Support create table with random distribution to avoid data skew (#8041)"}, {"oid": "27d2e3e9498090a81f157da3093085f0f0c37299", "committedDate": "2022-02-28 17:47:01 +0800", "message": "[refactor](fe) Remove old fe meta version (#8246)"}, {"oid": "46ca23f2161767b2d9aff27da7621183175145a8", "committedDate": "2022-03-04 09:05:23 +0800", "message": "[Feature] Support Changing the bucketing mode of the table from Hash Distribution to Random Distribution (#8259)"}, {"oid": "22bafef875edacaad6aec7a1b13f0380972c65ed", "committedDate": "2022-03-08 18:53:45 +0800", "message": "[fix](broker-load) fix bug that a cancelled job's state is LOADING (#8363)"}, {"oid": "826467e116f0300cacf47903d61fff87b339dc7c", "committedDate": "2022-03-09 13:03:22 +0800", "message": "[fix](replica) handle replica version missing info to avoid -214 error (#8209)"}, {"oid": "ffddebfd1d26b9eec44ed5a0bae5a227e5862b51", "committedDate": "2022-03-11 17:24:20 +0800", "message": "[fix](report) fix bug that tablet may already be delete when reporting (#8444)"}, {"oid": "a58e56f0b466797ce1779ba1325a31697799efac", "committedDate": "2022-03-24 09:13:54 +0800", "message": "[fix](load) fix another bug that BE may crash when calling `mark_as_failed` (#8607)"}, {"oid": "319f1f634a53f99deb2d2ee50d12defe17995516", "committedDate": "2022-04-06 15:23:49 +0800", "message": "[fix](ut) fix fe run CreateTableAsSelectStmtTest ,UserPropertyTest,  ProjectPlannerFunctionTest and AggregateTest failed (#8838)"}, {"oid": "e72ccfd80c0b7f00f971d20e0c3f27ea12196f87", "committedDate": "2022-04-07 08:38:29 +0800", "message": "[Refactor][httpv2]remove http v1 code (#8848)"}, {"oid": "318feb01f35efc72d447d326576250cba03fdbe1", "committedDate": "2022-04-08 09:08:08 +0800", "message": "[improvement](account) support to account management sql (#8849)"}, {"oid": "bca121333e40c6f63fbf8405f4dc5addf4ed1606", "committedDate": "2022-04-13 09:52:03 +0800", "message": "[feature](cold-hot) support s3 resource (#8808)"}, {"oid": "5b9a1a2a5dd7c2216452864e9cf17d5534523837", "committedDate": "2022-04-25 17:01:01 +0800", "message": "avoiding a corrupt image file when there is image.ckpt with non-zero \u2026 (#9180)"}, {"oid": "687421b43f0c22588b56929df375ef77af43349f", "committedDate": "2022-04-25 19:32:43 +0800", "message": "keep at least one validated image file (#9192)"}, {"oid": "bdf915abd4e0d65e913d4caf9a8ea3ced88e85ab", "committedDate": "2022-04-25 19:35:41 +0800", "message": "[Enhancement] (image) check image validity as soon as generated (#9011)"}, {"oid": "7cfebd05fd656aec3cb2b7f0835ff9052ad84d93", "committedDate": "2022-04-26 10:15:19 +0800", "message": "[fix](hierarchical-storage) Fix bug that storage medium property change back to SSD (#9158)"}, {"oid": "f5f629304b8f58738c51fbdca00a68f9098771e7", "committedDate": "2022-05-01 18:26:56 +0800", "message": "[fix](truncate) fix bug that truncate partition throw NPE (#9339)"}, {"oid": "dcf5f784d8681a3aa0665fd8200d761a08015cd4", "committedDate": "2022-05-03 17:54:19 +0800", "message": "[fix](catalog) fix bug that replica missing version cause query -214 error (#9266)"}, {"oid": "3baf6cefc347ce5acba43ee7fee9aa9e9204e368", "committedDate": "2022-05-03 22:36:36 +0800", "message": "[fix](alter-job) Missing alter job when doing checkpoint image (#9329)"}, {"oid": "0604ecba177e3c203821e023c5a0544d73ef01d0", "committedDate": "2022-05-05 09:58:01 +0800", "message": "[fixbug][metadata] catalog could not load from image (#9364)"}, {"oid": "6f0c8fb69840fb0f73d0f1dec2cf3ad440482f0d", "committedDate": "2022-05-07 08:51:54 +0800", "message": "[Feature] CTAS support insert data (#9271)"}, {"oid": "b6a74cfea5ddf3c66dcf3b4d31ec9a5131d66590", "committedDate": "2022-05-07 19:17:39 +0800", "message": "[Bug][CTAS] create table by partition list (#9412)"}, {"oid": "375c1bf5c0fbe742c6a16f92dbce847c756acef0", "committedDate": "2022-05-11 09:39:23 +0800", "message": "[feature](mysql-table) support utf8mb4 for mysql external table (#9402)"}, {"oid": "8fa0122ed054369a6d570d2ff9848449ff269ed7", "committedDate": "2022-05-11 09:40:57 +0800", "message": "[refactor](backend) Refactor the logic of selecting Backend in FE. (#9478)"}, {"oid": "f11d32021392efa0b1f464b75718b151e665c565", "committedDate": "2022-05-11 22:11:10 +0800", "message": "[feature] support row policy filter (#9206)"}, {"oid": "8a0097cfb932c0ff480ff1472009d597036a938b", "committedDate": "2022-05-12 20:14:38 +0800", "message": "[style](java) format fe code with some check rules (#9460)"}, {"oid": "72e0042efb675debafb66cfed5f41ca990c88d92", "committedDate": "2022-05-17 11:30:23 +0800", "message": "[feature-wip](hudi) Step1: Support create hudi external table (#9559)"}, {"oid": "235d586f11965bde9f07a5a7a6b80191ea04cad1", "committedDate": "2022-05-19 16:36:03 +0800", "message": "[style](fe) code correct rules and name rules (#9670)"}, {"oid": "e701c057dc675babe7a859e151287fea7cd5c850", "committedDate": "2022-05-26 16:56:20 +0800", "message": "[style](fe) wrap and whitespace rules (#9764)"}, {"oid": "b2c2cdb122b608c6391932ce5ef7b233ea9dc6bb", "committedDate": "2022-05-27 21:52:05 +0800", "message": "[feature] Support compression prop (#8923)"}, {"oid": "c5369d32200cf317b44425bc0af0b946afdeb8ee", "committedDate": "2022-05-29 18:02:16 +0800", "message": "[bugfix] Fix create table like when having hidden columns (#9694)"}, {"oid": "8092439634af22f59b73e4029bed9bce770cbd73", "committedDate": "2022-05-30 09:43:36 +0800", "message": "[feature](hudi) Step2: Support query hudi external table(include cow and mor table) (#9752)"}, {"oid": "e2b93a41655e47670173150a9f09dac0cb09d6f8", "committedDate": "2022-05-31 11:32:44 +0800", "message": "[feature-wip](multi-catalog) Add basic class and interface for multi catalog support"}, {"oid": "5f56e17ef215e932990da880182d8ad421bc62c1", "committedDate": "2022-06-08 22:02:22 +0800", "message": "[feature-wip](multi-catalog)(step2) Introduce Internal Data Source (#9953)"}, {"oid": "81a92843051f7a2a4102a1e1f95bca3b42513115", "committedDate": "2022-06-10 14:56:14 +0800", "message": "[improvement][refactor](image) refactor the read and load method of meta image #10005"}, {"oid": "f26b81e4dd6482c304d221fc85e8410a695c1309", "committedDate": "2022-06-13 10:55:44 +0800", "message": "[feature](multi-catalog) Change DatabaseIf APIs' return type to TableIf. (#10044)"}, {"oid": "f4e2f78a1a911b907ba8e73156a67dadb9193acc", "committedDate": "2022-06-15 09:52:56 +0800", "message": "[fix] Fix the bug that data balance causes tablet loss (#9971)"}, {"oid": "2a1d1b951aeaadad4b0e1a8c265d196d89070012", "committedDate": "2022-06-17 08:49:15 +0800", "message": "[data lake]Add HMS external data source. (#10088)"}, {"oid": "6baa694bc1b7681fb227dc926db732ff127c64a4", "committedDate": "2022-06-17 17:50:31 +0800", "message": "[feature-wip](multi-catalog) Catalog operation syntax  (#10033)"}, {"oid": "b7b78ae7079a61eadab0e78d9e9c9792dd0af1b3", "committedDate": "2022-06-17 21:02:45 +0800", "message": "[style](fe)the last step of fe CheckStyle (#10134)"}, {"oid": "087fc596b111ebeab38726841c2bdc7733961e1e", "committedDate": "2022-06-20 12:42:23 +0800", "message": "[feature] add remote storage policy config for create table properties (#10159)"}, {"oid": "815ea35578601e9b6dcde61b39349972f668cdfb", "committedDate": "2022-06-23 10:59:12 +0800", "message": "[fix](multi-catalog) should load datasource before loading cluster (#10330)"}, {"oid": "516f5b17894233771e86e17e6a950296b1ac596e", "committedDate": "2022-06-24 10:42:13 +0800", "message": "[feature-wip](multi-catalog) support to switch catalog (#10381)"}, {"oid": "7fe4b20da3abe0110b9694aff9a9be3215fe775d", "committedDate": "2022-06-25 21:51:54 +0800", "message": "[feature-wip](multi-catalog) refactor catalog interface (#10320)"}, {"oid": "79ad05eec687b0f925d1d217e1389b2a6532ac56", "committedDate": "2022-06-26 09:51:29 +0800", "message": "[fix](doe) fix doe on es v8 (#10391)"}, {"oid": "44082317659ccd81355029d9cc9e7caef29ca641", "committedDate": "2022-06-26 09:52:16 +0800", "message": "[fix](random-distribution) Make aggregate keys table with replace type columns and unique keys table can only have hash distribution to make data computing correctly (#10414)"}, {"oid": "d43d3fc35f728e0cf4170c4195a40dec182d553b", "committedDate": "2022-07-01 08:59:29 +0800", "message": "[improvement] modify comment \" to ', to be compatible with mysql. (#10327)"}, {"oid": "d0b757c03a04b38150aa5b050cc4c2cd2367b373", "committedDate": "2022-07-01 11:12:36 +0800", "message": "[bugfix](fe) fix add follower failed due to conflict socket . (#10429)"}, {"oid": "078cb3b4dbc69736521749e779c4947d83591bd7", "committedDate": "2022-07-02 20:43:10 +0800", "message": "[feature-wip](multi-catalog) end to end to support multi-catalog (#10521)"}, {"oid": "8b6c46cfd1654b4f75def4f9f39e65cb99440e87", "committedDate": "2022-07-03 23:19:46 +0800", "message": "[fix] fix create table like when having sequence column (#10464)"}, {"oid": "c936abd2a37b2dd4213c0240b32df98ddd4b4017", "committedDate": "2022-07-06 10:29:16 +0800", "message": "[fix](fe) when bdbje adding follower, master write op may failed. (#10376)"}, {"oid": "486cf0ebd4f5c216ecbe7deeaabba978f1dac54c", "committedDate": "2022-07-12 19:41:06 +0800", "message": "[Feature] Lightweight schema change of add/drop column (#10136)"}, {"oid": "401203da6ad6b1427c1d82f5cb40601044e79a36", "committedDate": "2022-07-15 18:00:48 +0800", "message": "[feature](code-data) move cold data to object storage without losing any feature(FE) (#10693)"}, {"oid": "8c544b6e13dc2a666b4a910db304d1a08896a55b", "committedDate": "2022-07-18 14:08:54 +0800", "message": "fix show storage policy null pointer and redundant log (#10906)"}, {"oid": "b037aca4fd7606077f1cef4280dde30976aa7135", "committedDate": "2022-07-18 18:02:33 +0800", "message": "[improvement](dynamic-partition) add replication allocation check for dynamic partition when creating table(#10892)"}, {"oid": "68b9a2936aeb749d344495f6eea4afc1d759bd28", "committedDate": "2022-07-18 23:20:58 +0800", "message": "[improvement](doe) Step1: Fe generates the DSL and is used to explain (#9895)"}, {"oid": "2acd5efcd8b2ef9085f5cdeeb61048f82f6b3476", "committedDate": "2022-07-19 08:29:58 +0800", "message": "[improvement-log]print a log when got a lower image version (#10910)"}, {"oid": "7bdce8f57276f23452db075597be61ca4ccccfaf", "committedDate": "2022-07-20 16:20:59 +0800", "message": "[refactor](policy) refactor some policy create and check logic (#11007)"}, {"oid": "d36b927fdbc44492f45c28747bbdc7cfd473f23b", "committedDate": "2022-07-21 09:12:21 +0800", "message": "[improvement](fe-ut) use local journal to make FE ut run fast (#11038)"}, {"oid": "09224d7c7410605dfdb0afccdc67065c713815c8", "committedDate": "2022-07-26 15:49:08 +0800", "message": "[refactor] Rename Catalog to Env (#10702)"}]}, {"oid": "8b6daa14547fbb2510e2349a302921ac41a2cb47", "url": "https://github.com/apache/incubator-doris/commit/8b6daa14547fbb2510e2349a302921ac41a2cb47", "message": "fix some mistake", "committedDate": "2020-10-18T14:42:27Z", "type": "commit"}, {"oid": "5a3ee73fe76186ec00694977ce1299f92cffce59", "url": "https://github.com/apache/incubator-doris/commit/5a3ee73fe76186ec00694977ce1299f92cffce59", "message": "use GJSON to do Serialize", "committedDate": "2020-10-20T03:38:23Z", "type": "commit"}]}