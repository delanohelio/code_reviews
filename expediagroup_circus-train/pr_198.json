{"pr_number": 198, "pr_title": "[WIP] Added source table and partitions to CopierContext", "pr_author": "nvitucci", "pr_createdAt": "2020-09-07T12:46:21Z", "pr_url": "https://github.com/ExpediaGroup/circus-train/pull/198", "timeline": [{"oid": "414684e64013967b478ac0ff873d10246637961a", "url": "https://github.com/ExpediaGroup/circus-train/commit/414684e64013967b478ac0ff873d10246637961a", "message": "Added source table and partitions to CopierContext", "committedDate": "2020-09-07T12:35:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ0ODg3Mg==", "url": "https://github.com/ExpediaGroup/circus-train/pull/198#discussion_r484448872", "body": "Can we just remove these three constructors and stick with changing this one. It's very confusing what you need to actually make. We're not using all of the really are we", "bodyText": "Can we just remove these three constructors and stick with changing this one. It's very confusing what you need to actually make. We're not using all of the really are we", "bodyHTML": "<p dir=\"auto\">Can we just remove these three constructors and stick with changing this one. It's very confusing what you need to actually make. We're not using all of the really are we</p>", "author": "patduin", "createdAt": "2020-09-07T14:00:22Z", "path": "circus-train-api/src/main/java/com/hotels/bdp/circustrain/api/copier/CopierContext.java", "diffHunk": "@@ -50,6 +56,40 @@ public CopierContext(\n     }\n     this.replicaLocation = replicaLocation;\n     this.copierOptions = ImmutableMap.copyOf(copierOptions);\n+    this.sourceTable = sourceTable;\n+    this.sourcePartitions = sourcePartitions;\n+  }\n+\n+  public CopierContext(", "originalCommit": "414684e64013967b478ac0ff873d10246637961a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "39df12ae66d52f202d8c3297fc98c7911ef8fbf1", "url": "https://github.com/ExpediaGroup/circus-train/commit/39df12ae66d52f202d8c3297fc98c7911ef8fbf1", "message": "Added CopierContext unit test", "committedDate": "2020-09-09T13:48:11Z", "type": "commit"}, {"oid": "8ef7ea4ae7e20cc6eb95885f5d1a9140e937f13b", "url": "https://github.com/ExpediaGroup/circus-train/commit/8ef7ea4ae7e20cc6eb95885f5d1a9140e937f13b", "message": "Deleted unused CopierContext constructors", "committedDate": "2020-09-09T14:21:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMxMDEzMg==", "url": "https://github.com/ExpediaGroup/circus-train/pull/198#discussion_r486310132", "body": "```suggestion\r\n    assertThat(copierContext.getEventId(), is(eventId));\r\n```\r\n^ maybe better to re-use the actual objects for the assertions? That way if we ever change them we only need to change them in on place instead of two.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(copierContext.getEventId(), is(\"1\"));\n          \n          \n            \n                assertThat(copierContext.getEventId(), is(eventId));\n          \n      \n    \n    \n  \n\n^ maybe better to re-use the actual objects for the assertions? That way if we ever change them we only need to change them in on place instead of two.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(copierContext<span class=\"pl-k\">.</span>getEventId(), is(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">1</span><span class=\"pl-pds x x-last\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(copierContext<span class=\"pl-k\">.</span>getEventId(), is(<span class=\"x x-first x-last\">eventId</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">^ maybe better to re-use the actual objects for the assertions? That way if we ever change them we only need to change them in on place instead of two.</p>", "author": "massdosage", "createdAt": "2020-09-10T12:51:41Z", "path": "circus-train-api/src/test/java/com/hotels/bdp/circustrain/api/copier/CopierContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (C) 2016-2020 Expedia, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hotels.bdp.circustrain.api.copier;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hive.metastore.api.Partition;\n+import org.apache.hadoop.hive.metastore.api.Table;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import com.hotels.bdp.circustrain.api.conf.TableReplication;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CopierContextTest {\n+\n+  private @Mock TableReplication tableReplication;\n+  private @Mock Map<String, Object> copierOptions;\n+  private @Mock Table sourceTable;\n+  private @Mock List<Partition> sourcePartitions;\n+\n+  private final String eventId = \"1\";\n+  private final Path sourceLocation = new Path(\"source\");\n+  private final List<Path> sourceSubLocations = new ArrayList<>();\n+  private final Path replicaLocation = new Path(\"replica\");\n+\n+  private CopierContext copierContext;\n+\n+  @Before\n+  public void init() {\n+    copierContext = new CopierContext(tableReplication, eventId, sourceLocation, sourceSubLocations,\n+        replicaLocation, copierOptions, sourceTable, sourcePartitions);\n+  }\n+\n+  @Test\n+  public void getters() {\n+    assertThat(copierContext.getEventId(), is(\"1\"));", "originalCommit": "8ef7ea4ae7e20cc6eb95885f5d1a9140e937f13b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMxMTAxMw==", "url": "https://github.com/ExpediaGroup/circus-train/pull/198#discussion_r486311013", "body": "```suggestion\r\n  private Map<String, Object> copierOptions = new HashMap();\r\n```\r\nReally minor, but since we're not actually using any of the mock functionality and it's a simple one liner, might as well use a real object here.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private @Mock Map<String, Object> copierOptions;\n          \n          \n            \n              private Map<String, Object> copierOptions = new HashMap();\n          \n      \n    \n    \n  \n\nReally minor, but since we're not actually using any of the mock functionality and it's a simple one liner, might as well use a real object here.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">@Mock</span><span class=\"x x-last\"> </span><span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> copierOptions;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> copierOptions<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">HashMap</span><span class=\"x x-last\">()</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Really minor, but since we're not actually using any of the mock functionality and it's a simple one liner, might as well use a real object here.</p>", "author": "massdosage", "createdAt": "2020-09-10T12:52:54Z", "path": "circus-train-api/src/test/java/com/hotels/bdp/circustrain/api/copier/CopierContextTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (C) 2016-2020 Expedia, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.hotels.bdp.circustrain.api.copier;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.junit.Assert.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hive.metastore.api.Partition;\n+import org.apache.hadoop.hive.metastore.api.Table;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+import com.hotels.bdp.circustrain.api.conf.TableReplication;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CopierContextTest {\n+\n+  private @Mock TableReplication tableReplication;\n+  private @Mock Map<String, Object> copierOptions;", "originalCommit": "8ef7ea4ae7e20cc6eb95885f5d1a9140e937f13b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe4fd960a7c65cc2783697aa343fb6406a951a12", "url": "https://github.com/ExpediaGroup/circus-train/commit/fe4fd960a7c65cc2783697aa343fb6406a951a12", "message": "Updated changelog", "committedDate": "2020-09-10T13:08:09Z", "type": "commit"}, {"oid": "e75f201beeb0156cd7abd7b2acfde9e18bc3331c", "url": "https://github.com/ExpediaGroup/circus-train/commit/e75f201beeb0156cd7abd7b2acfde9e18bc3331c", "message": "Simplified CopierContext test class", "committedDate": "2020-09-10T13:08:45Z", "type": "commit"}, {"oid": "fe19b0c9187c54303f11c427cde7f7e916b12382", "url": "https://github.com/ExpediaGroup/circus-train/commit/fe19b0c9187c54303f11c427cde7f7e916b12382", "message": "Fixed test", "committedDate": "2020-09-10T13:16:44Z", "type": "commit"}]}