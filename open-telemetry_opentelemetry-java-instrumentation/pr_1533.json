{"pr_number": 1533, "pr_title": "Simplify JDBC span names", "pr_author": "mateuszrzeszutek", "pr_createdAt": "2020-10-30T14:43:21Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1533", "timeline": [{"oid": "d69c6a3db69452fe8ee31e11d968d3188cb1d5a6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d69c6a3db69452fe8ee31e11d968d3188cb1d5a6", "message": "Use SqlStatementInfo to generate JDBC span name", "committedDate": "2020-11-09T15:30:42Z", "type": "forcePushed"}, {"oid": "b4d836fe2ce31fc00c58ccc7306a3ca9a8912129", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b4d836fe2ce31fc00c58ccc7306a3ca9a8912129", "message": "Use SqlStatementInfo to generate JDBC span name", "committedDate": "2020-11-09T15:31:55Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1NjUzNA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1533#discussion_r520156534", "body": "can `query.getOperation()` be `null` here?\r\n\r\nmaybe a unit test for this method to test the different combinations?", "bodyText": "can query.getOperation() be null here?\nmaybe a unit test for this method to test the different combinations?", "bodyHTML": "<p dir=\"auto\">can <code>query.getOperation()</code> be <code>null</code> here?</p>\n<p dir=\"auto\">maybe a unit test for this method to test the different combinations?</p>", "author": "trask", "createdAt": "2020-11-09T22:18:10Z", "path": "instrumentation/jdbc/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcTracer.java", "diffHunk": "@@ -69,19 +71,44 @@ public Span startSpan(PreparedStatement statement) {\n   }\n \n   public Span startSpan(Statement statement, String query) {\n+    return startSpan(statement, normalizeAndExtractInfo(query));\n+  }\n+\n+  public Span startSpan(Statement statement, SqlStatementInfo queryInfo) {\n     Connection connection = connectionFromStatement(statement);\n     if (connection == null) {\n       return null;\n     }\n \n     DBInfo dbInfo = extractDbInfo(connection);\n \n-    return startSpan(dbInfo, query);\n+    return startSpan(dbInfo, queryInfo);\n+  }\n+\n+  @Override\n+  protected String normalizeQuery(SqlStatementInfo query) {\n+    return query.getFullStatement();\n   }\n \n   @Override\n-  protected String normalizeQuery(String query) {\n-    return JDBCUtils.normalizeSql(query);\n+  protected String spanName(DBInfo connection, SqlStatementInfo query, String normalizedQuery) {\n+    String dbName = dbName(connection);\n+    if (query.getOperation() == null && query.getTable() == null) {\n+      return dbName == null ? DB_QUERY : dbName;\n+    }\n+\n+    StringBuilder name = new StringBuilder();\n+    name.append(query.getOperation()).append(' ');", "originalCommit": "9974a9c95ba3970b95ecfa28d0687cae105f379a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4NDc3NA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1533#discussion_r520484774", "bodyText": "It can't - the only possible options are null, null, operation, null, operation, table.\nI'll add more unit tests anyway.", "author": "mateuszrzeszutek", "createdAt": "2020-11-10T11:16:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1NjUzNA=="}], "type": "inlineReview"}, {"oid": "b02af97eecb87b1c12c99ad3f78251619e0b7b25", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b02af97eecb87b1c12c99ad3f78251619e0b7b25", "message": "Simplify JDBC span names", "committedDate": "2020-11-10T11:08:24Z", "type": "commit"}, {"oid": "d9f4148a96a3be2af7d1fb271bd6b024a50dae96", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/d9f4148a96a3be2af7d1fb271bd6b024a50dae96", "message": "Simplify JDBC span names", "committedDate": "2020-11-10T11:08:24Z", "type": "commit"}, {"oid": "987b786f354151d79c177f32943662c3326edfcc", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/987b786f354151d79c177f32943662c3326edfcc", "message": "Updated to reflect spec discussion", "committedDate": "2020-11-10T11:08:24Z", "type": "commit"}, {"oid": "283808eaa60de0013c88933f716e054b2c49fa14", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/283808eaa60de0013c88933f716e054b2c49fa14", "message": "Simplify JDBC span names\n\n* Refactor to state machine\n* Implement accurate db.sql.table", "committedDate": "2020-11-10T11:08:24Z", "type": "commit"}, {"oid": "94f90906beb254f4641aad99af5c50fe13465585", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/94f90906beb254f4641aad99af5c50fe13465585", "message": "Use SqlStatementInfo to generate JDBC span name", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "531dffed9aa674332d5d67836e6a3338e0dcf517", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/531dffed9aa674332d5d67836e6a3338e0dcf517", "message": "fix tests", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "fa551e5fe97761389218d1c2483fcde3c6858c8c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fa551e5fe97761389218d1c2483fcde3c6858c8c", "message": "Fix Hibernate tests", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "3302748bb752991a5efaa1c1755ef469ac8bf770", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3302748bb752991a5efaa1c1755ef469ac8bf770", "message": "Fix spring-data tests", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "afd0fb2f02e6c019fe5ce32ed055f8523d45d681", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/afd0fb2f02e6c019fe5ce32ed055f8523d45d681", "message": "spotless", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "01146aa9712335685e9206df9af089caf362856d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/01146aa9712335685e9206df9af089caf362856d", "message": "Fix comments & parens edge case, add test cases", "committedDate": "2020-11-10T11:09:02Z", "type": "commit"}, {"oid": "8e48efac99207694d7af05591e5b19b466c7936a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8e48efac99207694d7af05591e5b19b466c7936a", "message": "Add span name test case", "committedDate": "2020-11-10T13:01:21Z", "type": "commit"}, {"oid": "8e48efac99207694d7af05591e5b19b466c7936a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/8e48efac99207694d7af05591e5b19b466c7936a", "message": "Add span name test case", "committedDate": "2020-11-10T13:01:21Z", "type": "forcePushed"}, {"oid": "0526c6565b4861e13be508e23506d69a6143160a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0526c6565b4861e13be508e23506d69a6143160a", "message": "Fixed tests", "committedDate": "2020-11-10T13:52:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0MzI3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1533#discussion_r520743271", "body": "I think this makes more clear that query.getOperation() can't be null below\r\n```suggestion\r\n    if (query.getOperation() == null) {\r\n```", "bodyText": "I think this makes more clear that query.getOperation() can't be null below\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (query.getOperation() == null && query.getTable() == null) {\n          \n          \n            \n                if (query.getOperation() == null) {", "bodyHTML": "<p dir=\"auto\">I think this makes more clear that query.getOperation() can't be null below</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (query<span class=\"pl-k\">.</span>getOperation() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> query</span><span class=\"pl-k x\">.</span><span class=\"x\">getTable() </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (query<span class=\"pl-k\">.</span>getOperation() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-11-10T17:31:38Z", "path": "instrumentation/jdbc/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcTracer.java", "diffHunk": "@@ -69,19 +71,44 @@ public Span startSpan(PreparedStatement statement) {\n   }\n \n   public Span startSpan(Statement statement, String query) {\n+    return startSpan(statement, normalizeAndExtractInfo(query));\n+  }\n+\n+  public Span startSpan(Statement statement, SqlStatementInfo queryInfo) {\n     Connection connection = connectionFromStatement(statement);\n     if (connection == null) {\n       return null;\n     }\n \n     DBInfo dbInfo = extractDbInfo(connection);\n \n-    return startSpan(dbInfo, query);\n+    return startSpan(dbInfo, queryInfo);\n+  }\n+\n+  @Override\n+  protected String normalizeQuery(SqlStatementInfo query) {\n+    return query.getFullStatement();\n   }\n \n   @Override\n-  protected String normalizeQuery(String query) {\n-    return JDBCUtils.normalizeSql(query);\n+  protected String spanName(DBInfo connection, SqlStatementInfo query, String normalizedQuery) {\n+    String dbName = dbName(connection);\n+    if (query.getOperation() == null && query.getTable() == null) {", "originalCommit": "0526c6565b4861e13be508e23506d69a6143160a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "9823a719d009bbc3606e23bd0333b7a7cb3487b2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9823a719d009bbc3606e23bd0333b7a7cb3487b2", "message": "Update instrumentation/jdbc/src/main/java/io/opentelemetry/javaagent/instrumentation/jdbc/JdbcTracer.java\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-11-10T17:38:42Z", "type": "commit"}]}