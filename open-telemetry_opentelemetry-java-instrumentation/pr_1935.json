{"pr_number": 1935, "pr_title": "end to end latency benchmark", "pr_author": "bhautikpip", "pr_createdAt": "2020-12-18T04:07:44Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935", "timeline": [{"oid": "5503986fb91ecab64ab6308a741cc697e2429aaf", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5503986fb91ecab64ab6308a741cc697e2429aaf", "message": "end to end latency benchmark", "committedDate": "2020-12-18T04:06:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzQyMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545563420", "body": "```suggestion\r\n  private static final String APP_NAME = System.getenv(\"APP_IMAGE\", \"ghcr.io/open-telemetry/java-test-containers:smoke-springboot-jdk8-20201204.400701583\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static String app = System.getenv(\"APP_IMAGE\");\n          \n          \n            \n              private static final String APP_NAME = System.getenv(\"APP_IMAGE\", \"ghcr.io/open-telemetry/java-test-containers:smoke-springboot-jdk8-20201204.400701583\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">app</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>getenv(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>APP_IMAGE<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">APP_NAME</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>getenv(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>APP_IMAGE<span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">ghcr.io/open-telemetry/java-test-containers:smoke-springboot-jdk8-20201204.400701583</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "anuraaga", "createdAt": "2020-12-18T04:19:01Z", "path": "benchmark-e2e/src/main/java/io/opentelemetry/e2ebenchmark/E2EAgentBenchmark.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.e2ebenchmark;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class E2EAgentBenchmark {\n+  private static String app = System.getenv(\"APP_IMAGE\");", "originalCommit": "5503986fb91ecab64ab6308a741cc697e2429aaf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2NzE4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545567187", "bodyText": "Sorry I did not understand this suggestion. System.gentenv() accepts 1 String param right?", "author": "bhautikpip", "createdAt": "2020-12-18T04:34:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzQyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2NzM0Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545567343", "bodyText": "Oops - sorry System.getenv().getOrDefault", "author": "anuraaga", "createdAt": "2020-12-18T04:35:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzQyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU2MzU1OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1935#discussion_r545563558", "body": "Can remove these lines with above suggestion", "bodyText": "Can remove these lines with above suggestion", "bodyHTML": "<p dir=\"auto\">Can remove these lines with above suggestion</p>", "author": "anuraaga", "createdAt": "2020-12-18T04:19:26Z", "path": "benchmark-e2e/src/main/java/io/opentelemetry/e2ebenchmark/E2EAgentBenchmark.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package io.opentelemetry.e2ebenchmark;\n+\n+import java.util.AbstractMap;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.lifecycle.Startables;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.MountableFile;\n+\n+public class E2EAgentBenchmark {\n+  private static String app = System.getenv(\"APP_IMAGE\");\n+\n+  private List<GenericContainer<?>> containers;\n+  private static final Logger LOG = LoggerFactory.getLogger(E2EAgentBenchmark.class);\n+\n+  // docker images\n+  private static final DockerImageName APP_IMAGE = DockerImageName.parse(app);\n+  private static final DockerImageName OTLP_COLLECTOR_IMAGE =\n+      DockerImageName.parse(\"otel/opentelemetry-collector-dev:latest\");\n+  private static final DockerImageName WRK_IMAGE = DockerImageName.parse(\"quay.io/dim/wrk:stable\");\n+\n+  @BeforeEach\n+  void setUp() {\n+    containers = new ArrayList<>();\n+  }\n+\n+  @AfterEach\n+  void tearDown() {\n+    containers.forEach(GenericContainer::stop);\n+  }\n+\n+  @Test\n+  void run() throws Exception {\n+    runBenchmark();\n+  }\n+\n+  private void runBenchmark() throws Exception {\n+    if (app == null || app.equals(\"\")) {", "originalCommit": "5503986fb91ecab64ab6308a741cc697e2429aaf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "604077460f453c29d56f664ac738d7aa36bfdacd", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/604077460f453c29d56f664ac738d7aa36bfdacd", "message": "minor changes", "committedDate": "2020-12-18T04:44:53Z", "type": "commit"}, {"oid": "0bf38b8ddcc53141ca4601e9d2c550138c4624bd", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0bf38b8ddcc53141ca4601e9d2c550138c4624bd", "message": "added final", "committedDate": "2020-12-18T04:45:56Z", "type": "commit"}, {"oid": "1042e4d225a91105076af5a5cd3e063bdcd46215", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1042e4d225a91105076af5a5cd3e063bdcd46215", "message": "fix spotless check", "committedDate": "2020-12-18T05:17:03Z", "type": "commit"}]}