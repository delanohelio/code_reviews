{"pr_number": 1442, "pr_title": "Proper scope handling for Resteasy instrumentations.", "pr_author": "iNikem", "pr_createdAt": "2020-10-21T14:39:30Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442", "timeline": [{"oid": "3feb6a6c3959d2a91fe1a6768c6627a89f0dd97c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3feb6a6c3959d2a91fe1a6768c6627a89f0dd97c", "message": "Proper scope handling for Resteasy instrumentations.", "committedDate": "2020-10-21T16:00:05Z", "type": "commit"}, {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6788213e200a1b39e7feeb10c65813c9aa9d91d", "message": "Format", "committedDate": "2020-10-21T16:00:05Z", "type": "commit"}, {"oid": "f6788213e200a1b39e7feeb10c65813c9aa9d91d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f6788213e200a1b39e7feeb10c65813c9aa9d91d", "message": "Format", "committedDate": "2020-10-21T16:00:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4NjM2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1442#discussion_r509886365", "body": "```suggestion\r\n * all requests through single point. Both sync AND async! This allows for easy instrumentation and\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * all requests through single point. Both sync ADN async! This allows for easy instrumentation and\n          \n          \n            \n             * all requests through single point. Both sync AND async! This allows for easy instrumentation and", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"29\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> all requests through single point. <span class=\"pl-smi\">Both</span> sync <span class=\"pl-c1 x x-first x-last\">ADN</span> async<span class=\"pl-k\">!</span> <span class=\"pl-smi\">This</span> allows <span class=\"pl-k\">for</span> easy instrumentation and</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"29\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> all requests through single point. <span class=\"pl-smi\">Both</span> sync <span class=\"pl-c1 x x-first x-last\">AND</span> async<span class=\"pl-k\">!</span> <span class=\"pl-smi\">This</span> allows <span class=\"pl-k\">for</span> easy instrumentation and</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-10-22T05:21:42Z", "path": "instrumentation/jaxrs-client/jaxrs-client-2.0/jaxrs-client-2.0-resteasy-2.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrsclient/v2_0/ResteasyClientConnectionErrorInstrumentation.java", "diffHunk": "@@ -5,30 +5,32 @@\n \n package io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0;\n \n-import static io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.JaxRsClientTracer.TRACER;\n+import static io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.ResteasyClientTracer.TRACER;\n import static net.bytebuddy.matcher.ElementMatchers.isMethod;\n import static net.bytebuddy.matcher.ElementMatchers.isPublic;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n-import static net.bytebuddy.matcher.ElementMatchers.returns;\n+import static net.bytebuddy.matcher.ElementMatchers.takesArguments;\n \n import com.google.auto.service.AutoService;\n+import io.opentelemetry.context.Scope;\n import io.opentelemetry.javaagent.tooling.Instrumenter;\n import io.opentelemetry.trace.Span;\n import java.util.HashMap;\n import java.util.Map;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.Future;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.TimeoutException;\n+import javax.ws.rs.core.Response;\n import net.bytebuddy.asm.Advice;\n import net.bytebuddy.description.method.MethodDescription;\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n-import org.jboss.resteasy.client.jaxrs.internal.ClientConfiguration;\n+import org.jboss.resteasy.client.jaxrs.internal.ClientInvocation;\n \n /**\n- * JAX-RS Client API doesn't define a good point where we can handle connection failures, so we must\n- * handle these errors at the implementation level.\n+ * Unlike other supported JAX-RS Client implementations, Resteasy's one is very simple and passes\n+ * all requests through single point. Both sync ADN async! This allows for easy instrumentation and", "originalCommit": "f6788213e200a1b39e7feeb10c65813c9aa9d91d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}