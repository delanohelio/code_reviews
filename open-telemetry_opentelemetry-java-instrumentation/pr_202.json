{"pr_number": 202, "pr_title": "Made gRPC instrumenter compliant with semantic conventions", "pr_author": "prydin", "pr_createdAt": "2020-03-02T22:26:08Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202", "timeline": [{"oid": "f42b3cfcd0a54538fd3a7846dc3a4e8d4509dd4e", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f42b3cfcd0a54538fd3a7846dc3a4e8d4509dd4e", "message": "Added service name and corrected span name", "committedDate": "2020-03-02T16:32:14Z", "type": "commit"}, {"oid": "179545e344498696d409e0916292ee17db9175b1", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/179545e344498696d409e0916292ee17db9175b1", "message": "Support peer address for clients", "committedDate": "2020-03-02T20:50:21Z", "type": "commit"}, {"oid": "86eb6a938f7c09d8991056122ad04604c00814ab", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/86eb6a938f7c09d8991056122ad04604c00814ab", "message": "Added server peer address resolution", "committedDate": "2020-03-02T21:56:43Z", "type": "commit"}, {"oid": "4253e94c1b326e69a7c37f3b578d76a5e9515b0a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/4253e94c1b326e69a7c37f3b578d76a5e9515b0a", "message": "Added constants for new tag names", "committedDate": "2020-03-02T22:17:47Z", "type": "commit"}, {"oid": "47f8a02f790c94a4aa4d4bee8b8dd75f1116a20c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/47f8a02f790c94a4aa4d4bee8b8dd75f1116a20c", "message": "Cosmetic change", "committedDate": "2020-03-02T22:23:37Z", "type": "commit"}, {"oid": "72697a11a221252c2be2d01dc26a578dbcd09b70", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/72697a11a221252c2be2d01dc26a578dbcd09b70", "message": "Fixed muzzle issue", "committedDate": "2020-03-02T22:42:46Z", "type": "commit"}, {"oid": "e224b263d84123fdc3f320b92616ee56be4332e5", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e224b263d84123fdc3f320b92616ee56be4332e5", "message": "Better handling of addresses", "committedDate": "2020-03-03T03:20:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNjIxMA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r386826210", "body": "```suggestion\r\n    return safeHasSuperType(named(\"io.grpc.ManagedChannelBuilder\"));\r\n```\r\n\r\n`safeHasSuperType` includes itself already", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return safeHasSuperType(named(\"io.grpc.ManagedChannelBuilder\"))\n          \n          \n            \n                    .or(named(\"io.grpc.ManagedChannelBuilder\"));\n          \n          \n            \n                return safeHasSuperType(named(\"io.grpc.ManagedChannelBuilder\"));\n          \n      \n    \n    \n  \n\nsafeHasSuperType includes itself already", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> safeHasSuperType(named(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.grpc.ManagedChannelBuilder<span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        .or(named(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.grpc.ManagedChannelBuilder<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> safeHasSuperType(named(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.grpc.ManagedChannelBuilder<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\"><code>safeHasSuperType</code> includes itself already</p>", "author": "trask", "createdAt": "2020-03-03T06:48:42Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/GrpcClientBuilderInstrumentation.java", "diffHunk": "@@ -38,7 +43,8 @@ public GrpcClientBuilderInstrumentation() {\n \n   @Override\n   public ElementMatcher<TypeDescription> typeMatcher() {\n-    return named(\"io.grpc.internal.AbstractManagedChannelImplBuilder\");\n+    return safeHasSuperType(named(\"io.grpc.ManagedChannelBuilder\"))\n+        .or(named(\"io.grpc.ManagedChannelBuilder\"));", "originalCommit": "e224b263d84123fdc3f320b92616ee56be4332e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAxODc5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r387018798", "bodyText": "Done!", "author": "prydin", "createdAt": "2020-03-03T13:30:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNjIxMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNzg2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r386827866", "body": "```suggestion\r\n```\r\nlet's remove RESOURCE_NAME here. @tylerbenson has mentioned previously that in general RESOURCE_NAME should be migrated to span name", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                span.setAttribute(MoreTags.RESOURCE_NAME, methodName);\n          \n      \n    \n    \n  \n\nlet's remove RESOURCE_NAME here. @tylerbenson has mentioned previously that in general RESOURCE_NAME should be migrated to span name", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">    span</span><span class=\"pl-k x\">.</span><span class=\"x\">setAttribute(</span><span class=\"pl-smi x\">MoreTags</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">RESOURCE_NAME</span></span><span class=\"x x-last\">, methodName);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">let's remove RESOURCE_NAME here. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/tylerbenson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tylerbenson\">@tylerbenson</a> has mentioned previously that in general RESOURCE_NAME should be migrated to span name</p>", "author": "trask", "createdAt": "2020-03-03T06:54:40Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/client/TracingClientInterceptor.java", "diffHunk": "@@ -30,27 +30,34 @@\n import io.grpc.MethodDescriptor;\n import io.grpc.Status;\n import io.opentelemetry.auto.instrumentation.api.MoreTags;\n+import io.opentelemetry.auto.instrumentation.grpc.common.GrpcHelper;\n import io.opentelemetry.context.Scope;\n import io.opentelemetry.trace.AttributeValue;\n import io.opentelemetry.trace.Span;\n+import java.net.InetSocketAddress;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.concurrent.atomic.AtomicInteger;\n \n public class TracingClientInterceptor implements ClientInterceptor {\n+  private final InetSocketAddress peerAddress;\n \n-  public static final TracingClientInterceptor INSTANCE = new TracingClientInterceptor();\n+  public TracingClientInterceptor(final InetSocketAddress peerAddress) {\n+    this.peerAddress = peerAddress;\n+  }\n \n   @Override\n   public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(\n       final MethodDescriptor<ReqT, RespT> method,\n       final CallOptions callOptions,\n       final Channel next) {\n \n-    final Span span = TRACER.spanBuilder(\"grpc.client\").setSpanKind(CLIENT).startSpan();\n-    span.setAttribute(MoreTags.RESOURCE_NAME, method.getFullMethodName());\n+    final String methodName = method.getFullMethodName();\n+    final Span span = TRACER.spanBuilder(methodName).setSpanKind(CLIENT).startSpan();\n+    span.setAttribute(MoreTags.RESOURCE_NAME, methodName);", "originalCommit": "e224b263d84123fdc3f320b92616ee56be4332e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA0Nzk4MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r387047981", "bodyText": "Done!", "author": "prydin", "createdAt": "2020-03-03T14:18:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNzg2Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyOTA1MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r386829051", "body": "There's a fancy (and more efficient) way to do this.\r\n\r\nCheck out the context store functionality, e.g. [here](https://github.com/open-telemetry/opentelemetry-auto-instr-java/blob/master/instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java#L58-L61) and [here](https://github.com/open-telemetry/opentelemetry-auto-instr-java/blob/master/instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java#L99-L100)\r\n\r\nUsing this will inject a field into `ManagedChannelBuilder` to track the `InetSocketAddress` if possible (and if not it will fall back to using `WeakMap`)", "bodyText": "There's a fancy (and more efficient) way to do this.\nCheck out the context store functionality, e.g. here and here\nUsing this will inject a field into ManagedChannelBuilder to track the InetSocketAddress if possible (and if not it will fall back to using WeakMap)", "bodyHTML": "<p dir=\"auto\">There's a fancy (and more efficient) way to do this.</p>\n<p dir=\"auto\">Check out the context store functionality, e.g. <a href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java/blob/master/instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java#L58-L61\">here</a> and <a href=\"https://github.com/open-telemetry/opentelemetry-auto-instr-java/blob/master/instrumentation/google-http-client-1.19/src/main/java/io/opentelemetry/auto/instrumentation/googlehttpclient/GoogleHttpClientInstrumentation.java#L99-L100\">here</a></p>\n<p dir=\"auto\">Using this will inject a field into <code>ManagedChannelBuilder</code> to track the <code>InetSocketAddress</code> if possible (and if not it will fall back to using <code>WeakMap</code>)</p>", "author": "trask", "createdAt": "2020-03-03T06:58:54Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/common/GrpcHelper.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020, OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.opentelemetry.auto.instrumentation.grpc.common;\n+\n+import io.grpc.ManagedChannelBuilder;\n+import io.opentelemetry.auto.bootstrap.WeakMap;\n+import io.opentelemetry.auto.instrumentation.api.MoreTags;\n+import io.opentelemetry.trace.Span;\n+import java.net.InetSocketAddress;\n+\n+public class GrpcHelper {\n+  private static final WeakMap<ManagedChannelBuilder, InetSocketAddress> builderToAddress =\n+      WeakMap.Provider.newWeakMap();", "originalCommit": "e224b263d84123fdc3f320b92616ee56be4332e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA0NTI2Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r387045262", "bodyText": "Done!", "author": "prydin", "createdAt": "2020-03-03T14:14:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyOTA1MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyOTg4Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r386829887", "body": "```suggestion\r\n```\r\nsame comment as above", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                span.setAttribute(MoreTags.RESOURCE_NAME, methodName);\n          \n      \n    \n    \n  \n\nsame comment as above", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">    span</span><span class=\"pl-k x\">.</span><span class=\"x\">setAttribute(</span><span class=\"pl-smi x\">MoreTags</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">RESOURCE_NAME</span></span><span class=\"x x-last\">, methodName);</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">same comment as above</p>", "author": "trask", "createdAt": "2020-03-03T07:01:48Z", "path": "instrumentation/grpc-1.5/src/main/java/io/opentelemetry/auto/instrumentation/grpc/server/TracingServerInterceptor.java", "diffHunk": "@@ -57,7 +62,11 @@ private TracingServerInterceptor() {}\n       spanBuilder.setNoParent();\n     }\n     final Span span = spanBuilder.startSpan();\n-    span.setAttribute(MoreTags.RESOURCE_NAME, call.getMethodDescriptor().getFullMethodName());\n+    span.setAttribute(MoreTags.RESOURCE_NAME, methodName);", "originalCommit": "e224b263d84123fdc3f320b92616ee56be4332e5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA0ODE1NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/202#discussion_r387048155", "bodyText": "Done", "author": "prydin", "createdAt": "2020-03-03T14:18:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyOTg4Nw=="}], "type": "inlineReview"}, {"oid": "b1f79c595fd94df82df0fa595400a5719ad360b3", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/b1f79c595fd94df82df0fa595400a5719ad360b3", "message": "Merge branch 'master' of https://github.com/open-telemetry/opentelemetry-auto-instr-java into prydin-grpc-semantics", "committedDate": "2020-03-03T13:21:17Z", "type": "commit"}, {"oid": "c3b50db1465e4ade50e8f8748a78cbed5c725522", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c3b50db1465e4ade50e8f8748a78cbed5c725522", "message": "Addressed PR comments", "committedDate": "2020-03-03T14:20:39Z", "type": "commit"}]}