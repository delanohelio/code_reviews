{"pr_number": 1447, "pr_title": "Replace `print` with log messages.", "pr_author": "vadeg", "pr_createdAt": "2020-10-21T20:52:37Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447", "timeline": [{"oid": "069397e4ef3594beaf955aa702bce5c71674bfbb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/069397e4ef3594beaf955aa702bce5c71674bfbb", "message": "Replace `print` with log messages.\n\n* Add `slf4j` compile time dependency to the `javaagent-exporters.logging` module\n* Replace `System.out.println` with log.debug messages\n\nFixes: #1328", "committedDate": "2020-10-21T21:03:40Z", "type": "commit"}, {"oid": "069397e4ef3594beaf955aa702bce5c71674bfbb", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/069397e4ef3594beaf955aa702bce5c71674bfbb", "message": "Replace `print` with log messages.\n\n* Add `slf4j` compile time dependency to the `javaagent-exporters.logging` module\n* Replace `System.out.println` with log.debug messages\n\nFixes: #1328", "committedDate": "2020-10-21T21:03:40Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc4NzU2Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447#discussion_r509787566", "body": "```suggestion\r\n                  stringBuilder.append(key.getKey()).append('=');\r\n```\r\n\r\nThanks for bringing up the issue about toString, I think getKey should solve that", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              stringBuilder.append(key).append('=');\n          \n          \n            \n                              stringBuilder.append(key.getKey()).append('=');\n          \n      \n    \n    \n  \n\nThanks for bringing up the issue about toString, I think getKey should solve that", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  stringBuilder<span class=\"pl-k\">.</span>append(key)<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>=<span class=\"pl-pds\">'</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  stringBuilder<span class=\"pl-k\">.</span>append(key<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getKey()</span>)<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>=<span class=\"pl-pds\">'</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Thanks for bringing up the issue about toString, I think getKey should solve that</p>", "author": "anuraaga", "createdAt": "2020-10-21T23:13:16Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -21,28 +25,37 @@ public LoggingExporter(String prefix) {\n \n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n+    StringBuilder stringBuilder = new StringBuilder();\n     for (SpanData span : list) {\n-      System.out.print(\n-          prefix + \" \" + span.getName() + \" \" + span.getTraceId() + \" \" + span.getSpanId() + \" \");\n+\n+      stringBuilder\n+          .append(prefix)\n+          .append(\" \")\n+          .append(span.getName())\n+          .append(\" \")\n+          .append(span.getTraceId())\n+          .append(\" \")\n+          .append(span.getSpanId())\n+          .append(\" \");\n+\n       span.getAttributes()\n           .forEach(\n               new AttributeConsumer() {\n                 @Override\n                 public <T> void consume(AttributeKey<T> key, T value) {\n-                  System.out.print(key + \"=\");\n-                  switch (key.getType()) {\n-                    case STRING:\n-                      System.out.print('\"' + String.valueOf(value) + '\"');\n-                      break;\n-                    default:\n-                      System.out.print(value);\n-                      break;\n+\n+                  stringBuilder.append(key).append('=');", "originalCommit": "069397e4ef3594beaf955aa702bce5c71674bfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc4Nzc0Ng==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1447#discussion_r509787746", "body": "```suggestion\r\n    log.info(stringBuilder.toString());\r\n```\r\n\r\nThis exporter needs to be explicitly enabled so I think by default it should log something :)", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log.debug(stringBuilder.toString());\n          \n          \n            \n                log.info(stringBuilder.toString());\n          \n      \n    \n    \n  \n\nThis exporter needs to be explicitly enabled so I think by default it should log something :)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    log<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">debug</span>(stringBuilder<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    log<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">info</span>(stringBuilder<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This exporter needs to be explicitly enabled so I think by default it should log something :)</p>", "author": "anuraaga", "createdAt": "2020-10-21T23:13:48Z", "path": "javaagent-exporters/logging/src/main/java/io/opentelemetry/javaagent/exporters/logging/LoggingExporter.java", "diffHunk": "@@ -21,28 +25,37 @@ public LoggingExporter(String prefix) {\n \n   @Override\n   public CompletableResultCode export(Collection<SpanData> list) {\n+    StringBuilder stringBuilder = new StringBuilder();\n     for (SpanData span : list) {\n-      System.out.print(\n-          prefix + \" \" + span.getName() + \" \" + span.getTraceId() + \" \" + span.getSpanId() + \" \");\n+\n+      stringBuilder\n+          .append(prefix)\n+          .append(\" \")\n+          .append(span.getName())\n+          .append(\" \")\n+          .append(span.getTraceId())\n+          .append(\" \")\n+          .append(span.getSpanId())\n+          .append(\" \");\n+\n       span.getAttributes()\n           .forEach(\n               new AttributeConsumer() {\n                 @Override\n                 public <T> void consume(AttributeKey<T> key, T value) {\n-                  System.out.print(key + \"=\");\n-                  switch (key.getType()) {\n-                    case STRING:\n-                      System.out.print('\"' + String.valueOf(value) + '\"');\n-                      break;\n-                    default:\n-                      System.out.print(value);\n-                      break;\n+\n+                  stringBuilder.append(key).append('=');\n+\n+                  if (key.getType() == AttributeType.STRING) {\n+                    stringBuilder.append('\"').append(value).append('\"');\n+                  } else {\n+                    stringBuilder.append(value);\n                   }\n-                  System.out.print(\" \");\n+                  stringBuilder.append(' ');\n                 }\n               });\n     }\n-    System.out.println();\n+    log.debug(stringBuilder.toString());", "originalCommit": "069397e4ef3594beaf955aa702bce5c71674bfbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "918fa4906f1ab97f9e7eafc599836e858c915e1d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/918fa4906f1ab97f9e7eafc599836e858c915e1d", "message": "Replace `debug` with `info`\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-10-22T20:26:07Z", "type": "commit"}, {"oid": "dd878b1621523341729fa0865e2d421bc37a2d95", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/dd878b1621523341729fa0865e2d421bc37a2d95", "message": "Use `getKey` to log key.\n\nCo-authored-by: Anuraag Agrawal <anuraaga@gmail.com>", "committedDate": "2020-10-22T20:26:30Z", "type": "commit"}]}