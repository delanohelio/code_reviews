{"pr_number": 1562, "pr_title": "Refactor Instrumenters into InstrumentationModules - J", "pr_author": "mateuszrzeszutek", "pr_createdAt": "2020-11-05T12:43:21Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTczMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518541733", "body": "```suggestion\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // this is required to make sure instrumentation won't apply to jax-rs 2", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first\">  </span><span class=\"pl-c\"><span class=\"pl-c x\">//</span><span class=\"x x-last\"> this is required to make sure instrumentation won't apply to jax-rs 2</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-11-06T06:08:16Z", "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "diffHunk": "@@ -30,19 +28,12 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class JaxRsAnnotationsInstrumentation extends Instrumenter.Default {\n-\n-  public JaxRsAnnotationsInstrumentation() {\n-    super(\"jax-rs\", \"jaxrs\", \"jax-rs-annotations\");\n-  }\n+final class JaxRsAnnotationsInstrumentation implements TypeInstrumentation {\n \n   // this is required to make sure instrumentation won't apply to jax-rs 2", "originalCommit": "5c1d36953e034711c53abe55a9f90a7741582104", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0NzY0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518647649", "bodyText": "Nice catch!", "author": "mateuszrzeszutek", "createdAt": "2020-11-06T10:06:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTczMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU0MTg3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1562#discussion_r518541870", "body": "```suggestion\r\n    // Optimization for expensive typeMatcher.\r\n    return hasClassesNamed(\"javax.ws.rs.Path\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return hasClassesNamed(\"javax.ws.rs.Path\");\n          \n          \n            \n                // Optimization for expensive typeMatcher.\n          \n          \n            \n                return hasClassesNamed(\"javax.ws.rs.Path\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"36\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">return</span><span class=\"x\"> hasClassesNamed(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">javax.ws.rs.Path</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"36\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> Optimization for expensive typeMatcher.</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"37\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">return</span> hasClassesNamed(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>javax.ws.rs.Path<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-11-06T06:08:46Z", "path": "instrumentation/jaxrs/jaxrs-1.0/src/main/java/io/opentelemetry/javaagent/instrumentation/jaxrs/v1_0/JaxRsAnnotationsInstrumentation.java", "diffHunk": "@@ -30,19 +28,12 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-@AutoService(Instrumenter.class)\n-public final class JaxRsAnnotationsInstrumentation extends Instrumenter.Default {\n-\n-  public JaxRsAnnotationsInstrumentation() {\n-    super(\"jax-rs\", \"jaxrs\", \"jax-rs-annotations\");\n-  }\n+final class JaxRsAnnotationsInstrumentation implements TypeInstrumentation {\n \n   // this is required to make sure instrumentation won't apply to jax-rs 2\n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n-    return not(hasClassesNamed(\"javax.ws.rs.container.AsyncResponse\"))\n-        // Optimization for expensive typeMatcher.\n-        .and(hasClassesNamed(\"javax.ws.rs.Path\"));\n+    return hasClassesNamed(\"javax.ws.rs.Path\");", "originalCommit": "5c1d36953e034711c53abe55a9f90a7741582104", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f029762a9db714ed8fea90f4bc585c8d7fe43a4a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/f029762a9db714ed8fea90f4bc585c8d7fe43a4a", "message": "Refactor Instrumenters into InstrumentationModules - J", "committedDate": "2020-11-09T10:39:03Z", "type": "commit"}, {"oid": "88232eeef76d00bcc78821d7a61b018f0a3de28a", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/88232eeef76d00bcc78821d7a61b018f0a3de28a", "message": "Apply suggestions from code review\n\nCo-authored-by: Trask Stalnaker <trask.stalnaker@gmail.com>", "committedDate": "2020-11-09T10:39:03Z", "type": "commit"}, {"oid": "e498a433dba9ed82f79c10c0e278e4592237e666", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e498a433dba9ed82f79c10c0e278e4592237e666", "message": "Add missing instrumentation (classloader)", "committedDate": "2020-11-09T10:40:20Z", "type": "commit"}, {"oid": "e498a433dba9ed82f79c10c0e278e4592237e666", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/e498a433dba9ed82f79c10c0e278e4592237e666", "message": "Add missing instrumentation (classloader)", "committedDate": "2020-11-09T10:40:20Z", "type": "forcePushed"}, {"oid": "99a03f4501256337117aa201594533d4ed126085", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/99a03f4501256337117aa201594533d4ed126085", "message": "spotless", "committedDate": "2020-11-09T11:25:16Z", "type": "commit"}]}