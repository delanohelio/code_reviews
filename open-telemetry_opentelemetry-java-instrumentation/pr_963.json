{"pr_number": 963, "pr_title": "add some JMS attributes", "pr_author": "malafeev", "pr_createdAt": "2020-08-13T15:36:20Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963", "timeline": [{"oid": "0391a06e0d9f6a24f5ed5fb8404f3f4715ca309c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0391a06e0d9f6a24f5ed5fb8404f3f4715ca309c", "message": "add some JMS attributes\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-08-13T15:35:57Z", "type": "commit"}, {"oid": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/11d3e435bf71d8e0c2006019b71a26b11f6a169b", "message": "remove semicolon\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-08-13T15:48:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODIzOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470208239", "body": "i think good to narrow down the try/catch, and log exception at debug level\r\n```suggestion\r\n      String messageID = null;\r\n      try {\r\n        messageID = message.getJMSMessageID();\r\n      } catch (JMSException e) {\r\n        log.debug(e.getMessage(), e);\r\n      }\r\n      if (messageID != null) {\r\n        SemanticAttributes.MESSAGING_MESSAGE_ID.set(span, messageID);\r\n      }\r\n```", "bodyText": "i think good to narrow down the try/catch, and log exception at debug level\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  try {\n          \n          \n            \n                    String messageID = message.getJMSMessageID();\n          \n          \n            \n                    if (messageID != null) {\n          \n          \n            \n                      SemanticAttributes.MESSAGING_MESSAGE_ID.set(span, messageID);\n          \n          \n            \n                    }\n          \n          \n            \n                  } catch (JMSException e) {\n          \n          \n            \n                  }\n          \n          \n            \n                  String messageID = null;\n          \n          \n            \n                  try {\n          \n          \n            \n                    messageID = message.getJMSMessageID();\n          \n          \n            \n                  } catch (JMSException e) {\n          \n          \n            \n                    log.debug(e.getMessage(), e);\n          \n          \n            \n                  }\n          \n          \n            \n                  if (messageID != null) {\n          \n          \n            \n                    SemanticAttributes.MESSAGING_MESSAGE_ID.set(span, messageID);\n          \n          \n            \n                  }", "bodyHTML": "<p dir=\"auto\">i think good to narrow down the try/catch, and log exception at debug level</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> messageID <span class=\"pl-k\">=</span> message<span class=\"pl-k\">.</span>getJMSMessageID();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (messageID <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">SemanticAttributes</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MESSAGING_MESSAGE_ID</span><span class=\"pl-k\">.</span>set(span, messageID);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">JMSException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">String</span> messageID <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        messageID <span class=\"pl-k\">=</span> message<span class=\"pl-k\">.</span>getJMSMessageID();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">JMSException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        log<span class=\"pl-k\">.</span>debug(e<span class=\"pl-k\">.</span>getMessage(), e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (messageID <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">SemanticAttributes</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MESSAGING_MESSAGE_ID</span><span class=\"pl-k\">.</span>set(span, messageID);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-08-13T19:51:01Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -80,4 +83,35 @@ public static String toSpanName(Destination destination) {\n     }\n     return \"destination\";\n   }\n+\n+  public void afterStart(Span span, String spanName, Message message) {\n+    if (spanName.startsWith(\"queue/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"queue\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"queue/\", \"\"));\n+    } else if (spanName.startsWith(\"topic/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"topic\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"topic/\", \"\"));\n+    }\n+    if (spanName.equals(\"queue/<temporary>\") || spanName.equals(\"topic/<temporary>\")) {\n+      SemanticAttributes.MESSAGING_TEMP_DESTINATION.set(span, true);\n+    }\n+\n+    if (message != null) {\n+      try {\n+        String messageID = message.getJMSMessageID();\n+        if (messageID != null) {\n+          SemanticAttributes.MESSAGING_MESSAGE_ID.set(span, messageID);\n+        }\n+      } catch (JMSException e) {\n+      }", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzMjI0OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470532249", "bodyText": "done", "author": "malafeev", "createdAt": "2020-08-14T10:02:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODIzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODM1Nw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470208357", "body": "same here", "bodyText": "same here", "bodyHTML": "<p dir=\"auto\">same here</p>", "author": "trask", "createdAt": "2020-08-13T19:51:14Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -80,4 +83,35 @@ public static String toSpanName(Destination destination) {\n     }\n     return \"destination\";\n   }\n+\n+  public void afterStart(Span span, String spanName, Message message) {\n+    if (spanName.startsWith(\"queue/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"queue\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"queue/\", \"\"));\n+    } else if (spanName.startsWith(\"topic/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"topic\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"topic/\", \"\"));\n+    }\n+    if (spanName.equals(\"queue/<temporary>\") || spanName.equals(\"topic/<temporary>\")) {\n+      SemanticAttributes.MESSAGING_TEMP_DESTINATION.set(span, true);\n+    }\n+\n+    if (message != null) {\n+      try {\n+        String messageID = message.getJMSMessageID();\n+        if (messageID != null) {\n+          SemanticAttributes.MESSAGING_MESSAGE_ID.set(span, messageID);\n+        }\n+      } catch (JMSException e) {\n+      }\n+\n+      try {\n+        String correlationID = message.getJMSCorrelationID();\n+        if (correlationID != null) {\n+          SemanticAttributes.MESSAGING_CONVERSATION_ID.set(span, correlationID);\n+        }\n+      } catch (JMSException e) {\n+      }", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODkyOA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470208928", "body": "and call `super.afterStart(span)` from inside `afterStart(Span, String, Message)`\r\n```suggestion\r\n      DECORATE.afterStart(span, spanName, message);\r\n```", "bodyText": "and call super.afterStart(span) from inside afterStart(Span, String, Message)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  DECORATE.afterStart(span);\n          \n          \n            \n                  DECORATE.afterStart(span, spanName, message);\n          \n          \n            \n                  DECORATE.afterStart(span, spanName, message);", "bodyHTML": "<p dir=\"auto\">and call <code>super.afterStart(span)</code> from inside <code>afterStart(Span, String, Message)</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">DECORATE</span><span class=\"pl-k\">.</span>afterStart(span);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-c1\">DECORATE</span><span class=\"pl-k\">.</span>afterStart(span, spanName, message);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-c1\">DECORATE</span><span class=\"pl-k\">.</span>afterStart(span, spanName, message);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-08-13T19:52:29Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSMessageListenerInstrumentation.java", "diffHunk": "@@ -79,12 +79,13 @@ public JMSMessageListenerInstrumentation() {\n     @Advice.OnMethodEnter(suppress = Throwable.class)\n     public static SpanWithScope onEnter(@Advice.Argument(0) final Message message) {\n \n-      Span.Builder spanBuilder =\n-          TRACER.spanBuilder(DECORATE.spanNameForConsumer(message)).setSpanKind(CONSUMER);\n+      final String spanName = DECORATE.spanNameForConsumer(message);\n+      Span.Builder spanBuilder = TRACER.spanBuilder(spanName).setSpanKind(CONSUMER);\n       spanBuilder.setParent(extract(message, GETTER));\n \n       Span span = spanBuilder.startSpan();\n       DECORATE.afterStart(span);\n+      DECORATE.afterStart(span, spanName, message);", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzMjMxMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470532311", "bodyText": "done", "author": "malafeev", "createdAt": "2020-08-14T10:02:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwODkyOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTA2OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470209068", "body": "same", "bodyText": "same", "bodyHTML": "<p dir=\"auto\">same</p>", "author": "trask", "createdAt": "2020-08-13T19:52:43Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSMessageProducerInstrumentation.java", "diffHunk": "@@ -105,12 +105,10 @@ public static SpanWithScope onEnter(\n         defaultDestination = null;\n       }\n \n-      Span span =\n-          TRACER\n-              .spanBuilder(DECORATE.spanNameForProducer(message, defaultDestination))\n-              .setSpanKind(PRODUCER)\n-              .startSpan();\n+      final String spanName = DECORATE.spanNameForProducer(message, defaultDestination);\n+      Span span = TRACER.spanBuilder(spanName).setSpanKind(PRODUCER).startSpan();\n       DECORATE.afterStart(span);\n+      DECORATE.afterStart(span, spanName, message);", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzMjM3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470532370", "bodyText": "done", "author": "malafeev", "createdAt": "2020-08-14T10:02:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTA2OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTE3MQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470209171", "body": "same", "bodyText": "same", "bodyHTML": "<p dir=\"auto\">same</p>", "author": "trask", "createdAt": "2020-08-13T19:52:51Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSMessageProducerInstrumentation.java", "diffHunk": "@@ -146,12 +144,11 @@ public static SpanWithScope onEnter(\n         return null;\n       }\n \n-      Span span =\n-          TRACER\n-              .spanBuilder(DECORATE.spanNameForProducer(message, destination))\n-              .setSpanKind(PRODUCER)\n-              .startSpan();\n+      final String spanName = DECORATE.spanNameForProducer(message, destination);\n+\n+      Span span = TRACER.spanBuilder(spanName).setSpanKind(PRODUCER).startSpan();\n       DECORATE.afterStart(span);\n+      DECORATE.afterStart(span, spanName, message);", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzMjQ3MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470532470", "bodyText": "done", "author": "malafeev", "createdAt": "2020-08-14T10:02:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIwOTE3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNzE2NQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470237165", "body": "when we move to the new `Tracer` design, and do both `JMSDecorator.toSpanName()` and `afterStart()` inside of `startSpan`, we can consolidate the conditionals between these two methods (and remove the `startsWith` logic)", "bodyText": "when we move to the new Tracer design, and do both JMSDecorator.toSpanName() and afterStart() inside of startSpan, we can consolidate the conditionals between these two methods (and remove the startsWith logic)", "bodyHTML": "<p dir=\"auto\">when we move to the new <code>Tracer</code> design, and do both <code>JMSDecorator.toSpanName()</code> and <code>afterStart()</code> inside of <code>startSpan</code>, we can consolidate the conditionals between these two methods (and remove the <code>startsWith</code> logic)</p>", "author": "trask", "createdAt": "2020-08-13T20:44:35Z", "path": "instrumentation/jms-1.1/src/main/java/io/opentelemetry/auto/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -80,4 +83,35 @@ public static String toSpanName(Destination destination) {\n     }\n     return \"destination\";\n   }\n+\n+  public void afterStart(Span span, String spanName, Message message) {\n+    if (spanName.startsWith(\"queue/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"queue\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"queue/\", \"\"));\n+    } else if (spanName.startsWith(\"topic/\")) {\n+      SemanticAttributes.MESSAGING_DESTINATION_KIND.set(span, \"topic\");\n+      SemanticAttributes.MESSAGING_DESTINATION.set(span, spanName.replaceFirst(\"topic/\", \"\"));\n+    }\n+    if (spanName.equals(\"queue/<temporary>\") || spanName.equals(\"topic/<temporary>\")) {\n+      SemanticAttributes.MESSAGING_TEMP_DESTINATION.set(span, true);\n+    }", "originalCommit": "11d3e435bf71d8e0c2006019b71a26b11f6a169b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUzMjgzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/963#discussion_r470532833", "bodyText": "yeah", "author": "malafeev", "createdAt": "2020-08-14T10:03:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDIzNzE2NQ=="}], "type": "inlineReview"}, {"oid": "7c3814dc88381ac7bc5dffdbac4f1c444459791c", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7c3814dc88381ac7bc5dffdbac4f1c444459791c", "message": "Merge remote-tracking branch 'upstream/master' into malafeev-merge", "committedDate": "2020-08-14T06:26:27Z", "type": "commit"}, {"oid": "0e1b4048007603408ae5e97eb11c229648384865", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/0e1b4048007603408ae5e97eb11c229648384865", "message": "fix review comments\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-08-14T10:02:06Z", "type": "commit"}, {"oid": "9171eb07f7747a32001a79f8f69ff03ce8c3b9a2", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/9171eb07f7747a32001a79f8f69ff03ce8c3b9a2", "message": "get rid of unused imports\n\nSigned-off-by: Sergei Malafeev <sergei@malafeev.org>", "committedDate": "2020-08-14T10:17:42Z", "type": "commit"}]}