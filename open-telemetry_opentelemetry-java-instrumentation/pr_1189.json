{"pr_number": 1189, "pr_title": "Reactor bugs", "pr_author": "iNikem", "pr_createdAt": "2020-09-10T13:26:11Z", "pr_url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189", "timeline": [{"oid": "c15e00d91876364c5571a5180a0fbcac85c85d04", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/c15e00d91876364c5571a5180a0fbcac85c85d04", "message": "Demonstrating bugs with Project Reactor and Reactor Netty support", "committedDate": "2020-09-10T09:12:23Z", "type": "commit"}, {"oid": "5d98938e836a5ccf5942107f33412ad907b3d3ee", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5d98938e836a5ccf5942107f33412ad907b3d3ee", "message": "Intermediate kinda working state", "committedDate": "2020-09-10T09:12:23Z", "type": "commit"}, {"oid": "3faf38050e80a1a73c630c140c300e997a8f5268", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/3faf38050e80a1a73c630c140c300e997a8f5268", "message": "Seems to work", "committedDate": "2020-09-10T11:36:15Z", "type": "commit"}, {"oid": "97bc8a48bae861850646baeed0d3c504bce2ecee", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/97bc8a48bae861850646baeed0d3c504bce2ecee", "message": "Format", "committedDate": "2020-09-10T13:24:43Z", "type": "commit"}, {"oid": "259c56a383ae43b84699053d46cc960235b31797", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/259c56a383ae43b84699053d46cc960235b31797", "message": "Always use context active during subscription", "committedDate": "2020-09-10T16:40:58Z", "type": "commit"}, {"oid": "fc8d38185b024d3fe2858b46610e586697e57eb6", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fc8d38185b024d3fe2858b46610e586697e57eb6", "message": "Fix muzzle", "committedDate": "2020-09-10T17:45:19Z", "type": "commit"}, {"oid": "fe6eecf8307a4ade93e8024d7281779fc815bf23", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/fe6eecf8307a4ade93e8024d7281779fc815bf23", "message": "Format", "committedDate": "2020-09-10T18:28:28Z", "type": "commit"}, {"oid": "094c83c1901a62f01955971355c38ffd98df4521", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/094c83c1901a62f01955971355c38ffd98df4521", "message": "Test fix", "committedDate": "2020-09-11T05:56:06Z", "type": "commit"}, {"oid": "1867995a1f4fb3d19325fa76bae6f265b290b089", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/1867995a1f4fb3d19325fa76bae6f265b290b089", "message": "Ignore failing test for now", "committedDate": "2020-09-11T07:21:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODcyNw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486828727", "body": "I think this needs to return the same reference for `reset` to work", "bodyText": "I think this needs to return the same reference for reset to work", "bodyHTML": "<p dir=\"auto\">I think this needs to return the same reference for <code>reset</code> to work</p>", "author": "anuraaga", "createdAt": "2020-09-11T07:33:01Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingOperator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.reactor;\n+\n+import io.grpc.Context;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+import org.reactivestreams.Publisher;\n+import reactor.core.CoreSubscriber;\n+import reactor.core.Fuseable;\n+import reactor.core.Scannable;\n+import reactor.core.publisher.Hooks;\n+import reactor.core.publisher.Operators;\n+\n+/** @author Based on Spring Sleuth's Reactor instrumentation. */\n+public class TracingOperator {\n+\n+  /**\n+   * Registers a hook that applies to every operator, propagating {@link Context} to downstream\n+   * callbacks to ensure spans in the {@link Context} are available throughout the lifetime of a\n+   * reactive stream. This should generally be called in a static initializer block in your\n+   * application.\n+   */\n+  public static void registerOnEachOperator() {\n+    Hooks.onEachOperator(tracingLift());\n+  }\n+\n+  /** Unregisters the hook registered by {@link #registerOnEachOperator()}. */\n+  public static void resetOnEachOperator() {\n+    Hooks.onEachOperator(tracingLift());\n+  }\n+\n+  private static <T> Function<? super Publisher<T>, ? extends Publisher<T>> tracingLift() {\n+    return Operators.lift(new Lifter<>());", "originalCommit": "1867995a1f4fb3d19325fa76bae6f265b290b089", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2MjE4OQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486862189", "bodyText": "I don't quite understand. You mean cache the result of lift? This is copy-pasted from OpenTracing: https://github.com/opentracing-contrib/java-reactor/blob/master/src/main/java/io/opentracing/contrib/reactor/TracedSubscriber.java", "author": "iNikem", "createdAt": "2020-09-11T08:36:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkyMTczOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486921739", "bodyText": "Yeah like private static final Function<? super Publisher<T>, ? extends Publisher<T>>  TRACING_LIFTER = Operators.lift(new Lifter<>()); and return TRACING_LIFTER;. I didn't look at the implementation of reset in detail but I can't conceive it's possible without it being the same reference.", "author": "anuraaga", "createdAt": "2020-09-11T09:43:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODcyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzAwNzAzMw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r487007033", "bodyText": "That was actual bug, thank you :) Solved now", "author": "iNikem", "createdAt": "2020-09-11T12:20:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODcyNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODk5OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486828998", "body": "/cc @minwoox do you mind providing any thoughts on this instrumentation? I guess you've already experienced all the corner cases since LINE uses reactor a lot. It will affect Armeria users too if they start using OpenTelemetry :)", "bodyText": "/cc @minwoox do you mind providing any thoughts on this instrumentation? I guess you've already experienced all the corner cases since LINE uses reactor a lot. It will affect Armeria users too if they start using OpenTelemetry :)", "bodyHTML": "<p dir=\"auto\">/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/minwoox/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/minwoox\">@minwoox</a> do you mind providing any thoughts on this instrumentation? I guess you've already experienced all the corner cases since LINE uses reactor a lot. It will affect Armeria users too if they start using OpenTelemetry :)</p>", "author": "anuraaga", "createdAt": "2020-09-11T07:33:39Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingOperator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.reactor;\n+\n+import io.grpc.Context;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+import org.reactivestreams.Publisher;\n+import reactor.core.CoreSubscriber;\n+import reactor.core.Fuseable;\n+import reactor.core.Scannable;\n+import reactor.core.publisher.Hooks;\n+import reactor.core.publisher.Operators;\n+\n+/** @author Based on Spring Sleuth's Reactor instrumentation. */\n+public class TracingOperator {", "originalCommit": "1867995a1f4fb3d19325fa76bae6f265b290b089", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg4MzMzMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486883331", "bodyText": "Well, LINE uses RxJava a lot. \ud83e\udd23\nRecently we got a few customers who use Reactor with Armeria, so I guess I didn't experience all the corner cases yet.\nThis implementation looks good and if I found something I will leave comments though. \ud83d\ude04", "author": "minwoox", "createdAt": "2020-09-11T09:04:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyODk5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyOTgyOQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486829829", "body": "Since we don't have `@author` anywhere else I would recommend not including it here too even for copied files.\r\n\r\nIdeally we fix spotless to allow us to have two copyright headers on a file. In the meantime, I took a NOTICE approach to referencing copied code which I think is the bare minimum legally (`@author` doesn't help at all legally)\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/logback/logback-1.0.0/library/NOTICE.txt", "bodyText": "Since we don't have @author anywhere else I would recommend not including it here too even for copied files.\nIdeally we fix spotless to allow us to have two copyright headers on a file. In the meantime, I took a NOTICE approach to referencing copied code which I think is the bare minimum legally (@author doesn't help at all legally)\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/logback/logback-1.0.0/library/NOTICE.txt", "bodyHTML": "<p dir=\"auto\">Since we don't have <code>@author</code> anywhere else I would recommend not including it here too even for copied files.</p>\n<p dir=\"auto\">Ideally we fix spotless to allow us to have two copyright headers on a file. In the meantime, I took a NOTICE approach to referencing copied code which I think is the bare minimum legally (<code>@author</code> doesn't help at all legally)</p>\n<p dir=\"auto\"><a href=\"https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/logback/logback-1.0.0/library/NOTICE.txt\">https://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/master/instrumentation/logback/logback-1.0.0/library/NOTICE.txt</a></p>", "author": "anuraaga", "createdAt": "2020-09-11T07:35:19Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingSubscriber.java", "diffHunk": "@@ -18,132 +18,65 @@\n \n import io.opentelemetry.context.ContextUtils;\n import io.opentelemetry.context.Scope;\n+import org.reactivestreams.Subscriber;\n import org.reactivestreams.Subscription;\n import reactor.core.CoreSubscriber;\n-import reactor.core.Fuseable;\n-import reactor.core.Scannable;\n import reactor.util.context.Context;\n \n-public class TracingSubscriber<T>\n-    implements Subscription, CoreSubscriber<T>, Fuseable.QueueSubscription<T>, Scannable {\n-\n-  private final io.grpc.Context upstreamContext;\n-  private final CoreSubscriber<T> delegate;\n+/**\n+ * Based on Spring Sleuth's Reactor instrumentation. A trace representation of the {@link\n+ * Subscriber}\n+ *\n+ * @author Jose Montoya", "originalCommit": "1867995a1f4fb3d19325fa76bae6f265b290b089", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgzNDAwMQ==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486834001", "body": "Can you add permalinks to original of all copied classes?", "bodyText": "Can you add permalinks to original of all copied classes?", "bodyHTML": "<p dir=\"auto\">Can you add permalinks to original of all copied classes?</p>", "author": "anuraaga", "createdAt": "2020-09-11T07:43:40Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingSubscriber.java", "diffHunk": "@@ -18,132 +18,65 @@\n \n import io.opentelemetry.context.ContextUtils;\n import io.opentelemetry.context.Scope;\n+import org.reactivestreams.Subscriber;\n import org.reactivestreams.Subscription;\n import reactor.core.CoreSubscriber;\n-import reactor.core.Fuseable;\n-import reactor.core.Scannable;\n import reactor.util.context.Context;\n \n-public class TracingSubscriber<T>\n-    implements Subscription, CoreSubscriber<T>, Fuseable.QueueSubscription<T>, Scannable {\n-\n-  private final io.grpc.Context upstreamContext;\n-  private final CoreSubscriber<T> delegate;\n+/**\n+ * Based on Spring Sleuth's Reactor instrumentation. A trace representation of the {@link", "originalCommit": "1867995a1f4fb3d19325fa76bae6f265b290b089", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "df7b781fcb5403a4973d75ee48052ec56d23ee1f", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/df7b781fcb5403a4973d75ee48052ec56d23ee1f", "message": "Add attribution and links to borrowed code", "committedDate": "2020-09-11T08:38:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkyMTk4Mw==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r486921983", "body": "```suggestion\r\n    Hooks.resetOnEachOperator(tracingLift());\r\n```\r\n\r\nCan you add a test for reset?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Hooks.onEachOperator(tracingLift());\n          \n          \n            \n                Hooks.resetOnEachOperator(tracingLift());\n          \n      \n    \n    \n  \n\nCan you add a test for reset?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-smi\">Hooks</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">onEachOperator</span>(tracingLift());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-smi\">Hooks</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">resetOnEachOperator</span>(tracingLift());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Can you add a test for reset?</p>", "author": "anuraaga", "createdAt": "2020-09-11T09:43:30Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingOperator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.reactor;\n+\n+import io.grpc.Context;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+import org.reactivestreams.Publisher;\n+import reactor.core.CoreSubscriber;\n+import reactor.core.Fuseable;\n+import reactor.core.Scannable;\n+import reactor.core.publisher.Hooks;\n+import reactor.core.publisher.Operators;\n+\n+/** @author Based on Spring Sleuth's Reactor instrumentation. */\n+public class TracingOperator {\n+\n+  /**\n+   * Registers a hook that applies to every operator, propagating {@link Context} to downstream\n+   * callbacks to ensure spans in the {@link Context} are available throughout the lifetime of a\n+   * reactive stream. This should generally be called in a static initializer block in your\n+   * application.\n+   */\n+  public static void registerOnEachOperator() {\n+    Hooks.onEachOperator(tracingLift());\n+  }\n+\n+  /** Unregisters the hook registered by {@link #registerOnEachOperator()}. */\n+  public static void resetOnEachOperator() {\n+    Hooks.onEachOperator(tracingLift());", "originalCommit": "df7b781fcb5403a4973d75ee48052ec56d23ee1f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5cf47321cfe244095b58cb2a8c338b04a09d6394", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/5cf47321cfe244095b58cb2a8c338b04a09d6394", "message": "Fix hook reset", "committedDate": "2020-09-11T12:19:23Z", "type": "commit"}, {"oid": "7e6feedb1acef99360c99ae13befe6b49032df8b", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/7e6feedb1acef99360c99ae13befe6b49032df8b", "message": "Polish", "committedDate": "2020-09-11T12:26:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0NDA4Mg==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r487344082", "body": "can you revert this change, in favor of #1194?", "bodyText": "can you revert this change, in favor of #1194?", "bodyHTML": "<p dir=\"auto\">can you revert this change, in favor of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"699895156\" data-permission-text=\"Title is private\" data-url=\"https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/1194\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/open-telemetry/opentelemetry-java-instrumentation/pull/1194/hovercard\" href=\"https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1194\">#1194</a>?</p>", "author": "trask", "createdAt": "2020-09-12T00:36:33Z", "path": "testing-common/src/main/groovy/io/opentelemetry/auto/test/AgentTestRunner.java", "diffHunk": "@@ -104,7 +104,7 @@\n     INSTRUMENTATION = ByteBuddyAgent.getInstrumentation();\n \n     ((Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME)).setLevel(Level.WARN);\n-    ((Logger) LoggerFactory.getLogger(\"io.opentelemetry.auto\")).setLevel(Level.DEBUG);\n+    ((Logger) LoggerFactory.getLogger(\"io.opentelemetry.javaagent\")).setLevel(Level.DEBUG);", "originalCommit": "7e6feedb1acef99360c99ae13befe6b49032df8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0NTA2MA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r487345060", "body": "we don't use the `@author` tag anywhere else (in favor of git history/blame). maybe permalink(s) to the source file(s) in order to effectively cite the author via that repo's git history/blame?\r\n```suggestion\r\n * Based on Spring Sleuth's Reactor instrumentation.\r\n```", "bodyText": "we don't use the @author tag anywhere else (in favor of git history/blame). maybe permalink(s) to the source file(s) in order to effectively cite the author via that repo's git history/blame?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @author Based on Spring Sleuth's Reactor instrumentation.\n          \n          \n            \n             * @author Marcin Grzejszczak\n          \n          \n            \n             * Based on Spring Sleuth's Reactor instrumentation.", "bodyHTML": "<p dir=\"auto\">we don't use the <code>@author</code> tag anywhere else (in favor of git history/blame). maybe permalink(s) to the source file(s) in order to effectively cite the author via that repo's git history/blame?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@author</span> <span class=\"pl-smi\">Based</span> on <span class=\"pl-smi\">Spring</span> <span class=\"pl-smi\">Sleuth</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>s Reactor instrumentation.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@author</span> <span class=\"pl-smi\">Marcin</span> <span class=\"pl-smi\">Grzejszczak</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Based</span> on <span class=\"pl-smi\">Spring</span> <span class=\"pl-smi\">Sleuth</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>s Reactor instrumentation.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-09-12T00:43:41Z", "path": "instrumentation/spring/spring-webflux-5.0/library/src/main/java/io/opentelemetry/instrumentation/spring/webflux/client/WebClientTracingFilter.java", "diffHunk": "@@ -20,51 +20,53 @@\n \n import io.opentelemetry.context.Scope;\n import io.opentelemetry.trace.Span;\n-import io.opentelemetry.trace.Tracer;\n import java.util.List;\n import org.springframework.web.reactive.function.client.ClientRequest;\n import org.springframework.web.reactive.function.client.ClientResponse;\n import org.springframework.web.reactive.function.client.ExchangeFilterFunction;\n import org.springframework.web.reactive.function.client.ExchangeFunction;\n+import reactor.core.CoreSubscriber;\n import reactor.core.publisher.Mono;\n \n+/**\n+ * @author Based on Spring Sleuth's Reactor instrumentation.\n+ * @author Marcin Grzejszczak", "originalCommit": "7e6feedb1acef99360c99ae13befe6b49032df8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM0NTA4OA==", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/pull/1189#discussion_r487345088", "body": "```suggestion\r\n/** Based on Spring Sleuth's Reactor instrumentation. */\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /** @author Based on Spring Sleuth's Reactor instrumentation. */\n          \n          \n            \n            /** Based on Spring Sleuth's Reactor instrumentation. */", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>* <span class=\"x x-first x-last\">@author </span>Based on Spring Sleuth's Reactor instrumentation. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span>* Based on Spring Sleuth's Reactor instrumentation. <span class=\"pl-c\">*/</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "trask", "createdAt": "2020-09-12T00:43:58Z", "path": "instrumentation-core/reactor-3.1/src/main/java/io/opentelemetry/instrumentation/reactor/TracingOperator.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright The OpenTelemetry Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.opentelemetry.instrumentation.reactor;\n+\n+import io.grpc.Context;\n+import java.util.function.BiFunction;\n+import java.util.function.Function;\n+import org.reactivestreams.Publisher;\n+import reactor.core.CoreSubscriber;\n+import reactor.core.Fuseable;\n+import reactor.core.Scannable;\n+import reactor.core.publisher.Hooks;\n+import reactor.core.publisher.Operators;\n+\n+/** @author Based on Spring Sleuth's Reactor instrumentation. */", "originalCommit": "7e6feedb1acef99360c99ae13befe6b49032df8b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be0e5a2e4c2e8edfa73f760e3ddea972d8e74de0", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/be0e5a2e4c2e8edfa73f760e3ddea972d8e74de0", "message": "Merge remote-tracking branch 'upstream/master' into reactor-bugs", "committedDate": "2020-09-14T11:15:02Z", "type": "commit"}, {"oid": "489536e466810c7586c2991acce19db9aded9500", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/489536e466810c7586c2991acce19db9aded9500", "message": "Revert \"Ignore failing test for now\"\n\nThis reverts commit 1867995a", "committedDate": "2020-09-14T11:36:21Z", "type": "commit"}, {"oid": "106b2c0a8c4a317d733a5095d0eeaaf35098f88d", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/106b2c0a8c4a317d733a5095d0eeaaf35098f88d", "message": "Polish", "committedDate": "2020-09-14T11:43:08Z", "type": "commit"}, {"oid": "20396f810738bcc3fdf926f38fb7a47a1e2e28ba", "url": "https://github.com/open-telemetry/opentelemetry-java-instrumentation/commit/20396f810738bcc3fdf926f38fb7a47a1e2e28ba", "message": "Fixes #1103", "committedDate": "2020-09-14T17:17:21Z", "type": "commit"}]}