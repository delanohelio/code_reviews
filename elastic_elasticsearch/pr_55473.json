{"pr_number": 55473, "pr_title": "[ML] Return assigned node in start/open job/datafeed response", "pr_author": "droberts195", "pr_createdAt": "2020-04-20T16:27:07Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/55473", "timeline": [{"oid": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "url": "https://github.com/elastic/elasticsearch/commit/80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "message": "[ML] Return assigned node in start/open job/datafeed response\n\nAdds a \"node\" field to the response from the following endpoints:\n\n1. Open anomaly detection job\n2. Start datafeed\n3. Start data frame analytics job\n\nIf the job or datafeed is assigned to a node immediately then\nthis field will return the ID of that node.\n\nIn the case where a job or datafeed is opened or started lazily\nthe node field will contain an empty string.  Clients that want\nto test whether a job or datafeed was opened or started lazily\ncan therefore check for this.\n\nFixes #54067", "committedDate": "2020-04-20T16:25:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4ODQzNg==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411588436", "body": "nit: might be cool to use `AbstractBWCWireSerializationTestCase` instead. ", "bodyText": "nit: might be cool to use AbstractBWCWireSerializationTestCase instead.", "bodyHTML": "<p dir=\"auto\">nit: might be cool to use <code>AbstractBWCWireSerializationTestCase</code> instead.</p>", "author": "benwtrent", "createdAt": "2020-04-20T18:13:32Z", "path": "x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/NodeAcknowledgedResponseTests.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.core.ml.action;\n+\n+import org.elasticsearch.common.io.stream.Writeable;\n+import org.elasticsearch.test.AbstractWireSerializingTestCase;\n+\n+public class NodeAcknowledgedResponseTests extends AbstractWireSerializingTestCase<NodeAcknowledgedResponse> {", "originalCommit": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4OTk5OA==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411589998", "body": "```suggestion\r\n                            // This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"started\"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        // This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"opened\"\n          \n          \n            \n                                        // This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"started\"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"<span class=\"x x-first x-last\">opened</span>\"</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-c\"><span class=\"pl-c\">//</span> This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"<span class=\"x x-first x-last\">started</span>\"</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-04-20T18:16:05Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/rest/datafeeds/RestStartDatafeedAction.java", "diffHunk": "@@ -71,12 +71,14 @@ protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient\n         }\n         return channel -> {\n             client.execute(StartDatafeedAction.INSTANCE, jobDatafeedRequest,\n-                    new RestBuilderListener<AcknowledgedResponse>(channel) {\n+                    new RestBuilderListener<NodeAcknowledgedResponse>(channel) {\n \n                         @Override\n-                        public RestResponse buildResponse(AcknowledgedResponse r, XContentBuilder builder) throws Exception {\n+                        public RestResponse buildResponse(NodeAcknowledgedResponse r, XContentBuilder builder) throws Exception {\n+                            // This doesn't use the toXContent of the response object because we rename \"acknowledged\" to \"opened\"", "originalCommit": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MDM5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411890395", "body": "I think the fields in this class can be `final`.", "bodyText": "I think the fields in this class can be final.", "bodyHTML": "<p dir=\"auto\">I think the fields in this class can be <code>final</code>.</p>", "author": "przemekwitek", "createdAt": "2020-04-21T05:55:51Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/OpenJobResponse.java", "diffHunk": "@@ -33,18 +33,23 @@\n public class OpenJobResponse implements ToXContentObject {\n \n     private static final ParseField OPENED = new ParseField(\"opened\");\n+    private static final ParseField NODE = new ParseField(\"node\");\n \n     public static final ConstructingObjectParser<OpenJobResponse, Void> PARSER =\n-        new ConstructingObjectParser<>(\"open_job_response\", true, (a) -> new OpenJobResponse((Boolean)a[0]));\n+        new ConstructingObjectParser<>(\"open_job_response\", true,\n+            (a) -> new OpenJobResponse((Boolean) a[0], (String) a[1]));\n \n     static {\n         PARSER.declareBoolean(ConstructingObjectParser.constructorArg(), OPENED);\n+        PARSER.declareString(ConstructingObjectParser.optionalConstructorArg(), NODE);\n     }\n \n     private boolean opened;", "originalCommit": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTE2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411891162", "body": "nit: It feels inconsistent that we compare one field using the accessor and the other one directly. Could you stick to one of those styles in `equals` and `hashCode`?\r\n\r\nOr maybe it would be possible to derive from `AcknowledgedResponse` (it would have to become configurable wrt `acknowledged` field name though...).", "bodyText": "nit: It feels inconsistent that we compare one field using the accessor and the other one directly. Could you stick to one of those styles in equals and hashCode?\nOr maybe it would be possible to derive from AcknowledgedResponse (it would have to become configurable wrt acknowledged field name though...).", "bodyHTML": "<p dir=\"auto\">nit: It feels inconsistent that we compare one field using the accessor and the other one directly. Could you stick to one of those styles in <code>equals</code> and <code>hashCode</code>?</p>\n<p dir=\"auto\">Or maybe it would be possible to derive from <code>AcknowledgedResponse</code> (it would have to become configurable wrt <code>acknowledged</code> field name though...).</p>", "author": "przemekwitek", "createdAt": "2020-04-21T05:57:33Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/OpenJobResponse.java", "diffHunk": "@@ -71,18 +88,22 @@ public boolean equals(Object other) {\n         }\n \n         OpenJobResponse that = (OpenJobResponse) other;\n-        return isOpened() == that.isOpened();\n+        return isOpened() == that.isOpened()", "originalCommit": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk2ODIwMA==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411968200", "bodyText": "it would have to become configurable wrt acknowledged field name though\n\nI don't think this would be a good idea.  We made a mistake really in not using acknowledged as the field in this class back in 2016.  We stuck to the Prelert heritage instead of making things consistent with the Elastic way.  Unfortunately now making it consistent would be breaking change, and it doesn't seem like it's a big enough problem to warrant the break.  But making it easier for others to be inconsistent in the future doesn't seem like a good idea.", "author": "droberts195", "createdAt": "2020-04-21T08:09:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5MTE2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg5Mjg5OA==", "url": "https://github.com/elastic/elasticsearch/pull/55473#discussion_r411892898", "body": "Similar remark here.", "bodyText": "Similar remark here.", "bodyHTML": "<p dir=\"auto\">Similar remark here.</p>", "author": "przemekwitek", "createdAt": "2020-04-21T06:01:28Z", "path": "client/rest-high-level/src/main/java/org/elasticsearch/client/ml/StartDatafeedResponse.java", "diffHunk": "@@ -74,18 +90,22 @@ public boolean equals(Object other) {\n         }\n \n         StartDatafeedResponse that = (StartDatafeedResponse) other;\n-        return isStarted() == that.isStarted();\n+        return isStarted() == that.isStarted()", "originalCommit": "80400f904e3d2a6531e8ad5d0f7c14f5ae3b9e38", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3d3e3077993f80294ad972a77a068b4964c32dc4", "url": "https://github.com/elastic/elasticsearch/commit/3d3e3077993f80294ad972a77a068b4964c32dc4", "message": "Apply suggestions from code review\n\nCo-Authored-By: Lisa Cawley <lcawley@elastic.co>\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-04-21T08:04:11Z", "type": "commit"}, {"oid": "5421890737f5a3fc12fd251b59d05814d30f8d0c", "url": "https://github.com/elastic/elasticsearch/commit/5421890737f5a3fc12fd251b59d05814d30f8d0c", "message": "Address more review comments", "committedDate": "2020-04-21T08:37:59Z", "type": "commit"}, {"oid": "96f32db6f79ee103307e64f45b1443fab860728a", "url": "https://github.com/elastic/elasticsearch/commit/96f32db6f79ee103307e64f45b1443fab860728a", "message": "Merge branch 'master' into add_node_to_start_open_response", "committedDate": "2020-04-21T08:38:31Z", "type": "commit"}, {"oid": "ddaccd940fa44d81690954adeb3e9ec21ebb6641", "url": "https://github.com/elastic/elasticsearch/commit/ddaccd940fa44d81690954adeb3e9ec21ebb6641", "message": "Fix expected test result", "committedDate": "2020-04-21T09:31:03Z", "type": "commit"}, {"oid": "9bfc256a54829f88aff982ef60b60c100dc0c03a", "url": "https://github.com/elastic/elasticsearch/commit/9bfc256a54829f88aff982ef60b60c100dc0c03a", "message": "Fix more tests", "committedDate": "2020-04-21T10:34:44Z", "type": "commit"}, {"oid": "19b7bb109687c2aba953780736926a76aef2e83a", "url": "https://github.com/elastic/elasticsearch/commit/19b7bb109687c2aba953780736926a76aef2e83a", "message": "More test fixes", "committedDate": "2020-04-21T12:11:43Z", "type": "commit"}, {"oid": "c9bfd8e990c4ccbf461f97b60889756378cd77c9", "url": "https://github.com/elastic/elasticsearch/commit/c9bfd8e990c4ccbf461f97b60889756378cd77c9", "message": "One more", "committedDate": "2020-04-21T15:24:34Z", "type": "commit"}]}