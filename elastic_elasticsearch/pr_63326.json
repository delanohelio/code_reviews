{"pr_number": 63326, "pr_title": "[ML] adding result_type and mlcategory fields to category definitions", "pr_author": "benwtrent", "pr_createdAt": "2020-10-06T13:36:37Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63326", "timeline": [{"oid": "008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "url": "https://github.com/elastic/elasticsearch/commit/008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "message": "[ML] adding result_type and mlcategory fields to category definitions", "committedDate": "2020-10-06T13:33:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MDQ0NA==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500290444", "body": "I think it's best if it's a string in the JSON.  The mapping on the index will be `keyword` and the JSON docs storing the field in results will have the field as a string, so for all round consistency it will be best if this is a string too.\r\n\r\n```suggestion\r\n        parser.declareString((cd, mc) -> { /*Ignore as it is always equal to category_id*/ }, MLCATEGORY);\r\n```", "bodyText": "I think it's best if it's a string in the JSON.  The mapping on the index will be keyword and the JSON docs storing the field in results will have the field as a string, so for all round consistency it will be best if this is a string too.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    parser.declareLong((cd, mc) -> { /*Ignore as it is always equal to category_id*/ }, MLCATEGORY);\n          \n          \n            \n                    parser.declareString((cd, mc) -> { /*Ignore as it is always equal to category_id*/ }, MLCATEGORY);", "bodyHTML": "<p dir=\"auto\">I think it's best if it's a string in the JSON.  The mapping on the index will be <code>keyword</code> and the JSON docs storing the field in results will have the field as a string, so for all round consistency it will be best if this is a string too.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        parser<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">declareLong</span>((cd, mc) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> { <span class=\"pl-c\"><span class=\"pl-c\">/*</span>Ignore as it is always equal to category_id<span class=\"pl-c\">*/</span></span> }, <span class=\"pl-c1\">MLCATEGORY</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        parser<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">declareString</span>((cd, mc) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> { <span class=\"pl-c\"><span class=\"pl-c\">/*</span>Ignore as it is always equal to category_id<span class=\"pl-c\">*/</span></span> }, <span class=\"pl-c1\">MLCATEGORY</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-10-06T13:44:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -62,6 +63,8 @@\n         parser.declareString(CategoryDefinition::setGrokPattern, GROK_PATTERN);\n         parser.declareLongArray(CategoryDefinition::setPreferredToCategories, PREFERRED_TO_CATEGORIES);\n         parser.declareLong(CategoryDefinition::setNumMatches, NUM_MATCHES);\n+        parser.declareString((cd, rt) -> { /*Ignore as it is always category_definition*/ }, Result.RESULT_TYPE);\n+        parser.declareLong((cd, mc) -> { /*Ignore as it is always equal to category_id*/ }, MLCATEGORY);", "originalCommit": "008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MTgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500291834", "body": "As above, actually store it as a string for complete consistency with the results documents.\r\n\r\n```suggestion\r\n        builder.field(MLCATEGORY.getPreferredName(), Long.toString(categoryId));\r\n```", "bodyText": "As above, actually store it as a string for complete consistency with the results documents.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    builder.field(MLCATEGORY.getPreferredName(), categoryId);\n          \n          \n            \n                    builder.field(MLCATEGORY.getPreferredName(), Long.toString(categoryId));", "bodyHTML": "<p dir=\"auto\">As above, actually store it as a string for complete consistency with the results documents.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        builder<span class=\"pl-k\">.</span>field(<span class=\"pl-c1\">MLCATEGORY</span><span class=\"pl-k\">.</span>getPreferredName(), categoryId);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        builder<span class=\"pl-k\">.</span>field(<span class=\"pl-c1\">MLCATEGORY</span><span class=\"pl-k\">.</span>getPreferredName(), <span class=\"pl-smi x x-first\">Long</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">toString(</span>categoryId<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-10-06T13:46:03Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -246,6 +249,8 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (partitionFieldName != null && partitionFieldValue != null && ReservedFieldNames.isValidFieldName(partitionFieldName)) {\n             builder.field(partitionFieldName, partitionFieldValue);\n         }\n+        builder.field(Result.RESULT_TYPE.getPreferredName(), TYPE.getPreferredName());\n+        builder.field(MLCATEGORY.getPreferredName(), categoryId);", "originalCommit": "008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MzgzNg==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500293836", "body": "I think this will stop the field getting written into anomaly records, which would be very bad.  It will still get written as `\"blah_field_name\": \"mlcategory\"`, `\"blah_field_value\": \"42\"`, but won't get written as `\"mlcategory\": \"42\"`.  So this line needs to be removed.", "bodyText": "I think this will stop the field getting written into anomaly records, which would be very bad.  It will still get written as \"blah_field_name\": \"mlcategory\", \"blah_field_value\": \"42\", but won't get written as \"mlcategory\": \"42\".  So this line needs to be removed.", "bodyHTML": "<p dir=\"auto\">I think this will stop the field getting written into anomaly records, which would be very bad.  It will still get written as <code>\"blah_field_name\": \"mlcategory\"</code>, <code>\"blah_field_value\": \"42\"</code>, but won't get written as <code>\"mlcategory\": \"42\"</code>.  So this line needs to be removed.</p>", "author": "droberts195", "createdAt": "2020-10-06T13:48:10Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/ReservedFieldNames.java", "diffHunk": "@@ -121,6 +121,7 @@\n             CategoryDefinition.EXAMPLES.getPreferredName(),\n             CategoryDefinition.NUM_MATCHES.getPreferredName(),\n             CategoryDefinition.PREFERRED_TO_CATEGORIES.getPreferredName(),\n+            CategoryDefinition.MLCATEGORY.getPreferredName(),", "originalCommit": "008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ3NTIyOA==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500475228", "bodyText": "\ud83e\udd14 When I ran this manually, it worked just fine. We don't validate the reserved field names ahead of time anywhere?", "author": "benwtrent", "createdAt": "2020-10-06T17:31:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MzgzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4NjE5MA==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500486190", "bodyText": "Ah, I see, we don't fail the job or anything. The field is just not written.", "author": "benwtrent", "createdAt": "2020-10-06T17:50:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI5MzgzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwMzQwMw==", "url": "https://github.com/elastic/elasticsearch/pull/63326#discussion_r500303403", "body": "It would be good to add a comment here (or somewhere) to say that `result_type` cannot be relied upon to find category definitions.  We still need to get them by checking for the existence of a `category_id` field until results generated in versions that don't have this are several years old.", "bodyText": "It would be good to add a comment here (or somewhere) to say that result_type cannot be relied upon to find category definitions.  We still need to get them by checking for the existence of a category_id field until results generated in versions that don't have this are several years old.", "bodyHTML": "<p dir=\"auto\">It would be good to add a comment here (or somewhere) to say that <code>result_type</code> cannot be relied upon to find category definitions.  We still need to get them by checking for the existence of a <code>category_id</code> field until results generated in versions that don't have this are several years old.</p>", "author": "droberts195", "createdAt": "2020-10-06T13:57:56Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/job/results/CategoryDefinition.java", "diffHunk": "@@ -246,6 +249,8 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (partitionFieldName != null && partitionFieldValue != null && ReservedFieldNames.isValidFieldName(partitionFieldName)) {\n             builder.field(partitionFieldName, partitionFieldValue);\n         }\n+        builder.field(Result.RESULT_TYPE.getPreferredName(), TYPE.getPreferredName());", "originalCommit": "008a77e3effbd83984b0ee55d2d1d4ee53e72b51", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1e50280fedca1cf2dc6ab998c0f7acde49aa7d88", "url": "https://github.com/elastic/elasticsearch/commit/1e50280fedca1cf2dc6ab998c0f7acde49aa7d88", "message": "addressing PR comments", "committedDate": "2020-10-06T18:14:37Z", "type": "commit"}]}