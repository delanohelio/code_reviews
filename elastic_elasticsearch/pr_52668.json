{"pr_number": 52668, "pr_title": "Allow sha512 checksum without filename for maven plugins", "pr_author": "rjernst", "pr_createdAt": "2020-02-21T23:34:45Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52668", "timeline": [{"oid": "70e61bd3d51f9ff4a139ed3c9521ab93c68051b4", "url": "https://github.com/elastic/elasticsearch/commit/70e61bd3d51f9ff4a139ed3c9521ab93c68051b4", "message": "Allow sha512 checksum without filename for maven plugins\n\nWhen installing plugins from remote sources, either the Elastic download\nservice, or maven, a checksum file is downloaded and checked against the\ndownloaded zip. The current format for official plugins is to use a\nsha512 checksum which includes the zip filename. This format matches\nthat from sha512sum, and allows using the --check argument there to\nverify the checksum manually. However, when generating checksum files\nwith maven and gradle, the filename is not included.\n\nThis commit relaxes the requirement the filename existing within the\nsha512 checksum file for maven plugins. We continue to strictly enforce\nofficial plugins have the existing format of the file.\n\ncloses #52413", "committedDate": "2020-02-21T23:28:15Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4OTAxOA==", "url": "https://github.com/elastic/elasticsearch/pull/52668#discussion_r383189018", "body": "Tiny nit that we could use `Matchers.startsWith()`, feel free to ignore:\r\n\r\n```suggestion\r\n        assertThat(e.getMessage(), startsWith(\"Invalid checksum file\"));\r\n```", "bodyText": "Tiny nit that we could use Matchers.startsWith(), feel free to ignore:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(e.getMessage(), e.getMessage().startsWith(\"Invalid checksum file\"));\n          \n          \n            \n                    assertThat(e.getMessage(), startsWith(\"Invalid checksum file\"));", "bodyHTML": "<p dir=\"auto\">Tiny nit that we could use <code>Matchers.startsWith()</code>, feel free to ignore:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">assertTrue</span>(e<span class=\"pl-k\">.</span>getMessage(), <span class=\"x x-first\">e</span><span class=\"pl-k x\">.</span><span class=\"x\">getMessage()</span><span class=\"pl-k x x-last\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Invalid checksum file<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertThat</span>(e<span class=\"pl-k\">.</span>getMessage(), startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Invalid checksum file<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "pugnascotia", "createdAt": "2020-02-24T10:37:03Z", "path": "distribution/tools/plugin-cli/src/test/java/org/elasticsearch/plugins/InstallPluginCommandTests.java", "diffHunk": "@@ -1109,6 +1109,35 @@ public void testMavenSha1Backcompat() throws Exception {\n         assertTrue(terminal.getOutput(), terminal.getOutput().contains(\"sha512 not found, falling back to sha1\"));\n     }\n \n+    public void testMavenChecksumWithoutFilename() throws Exception {\n+        String url = \"https://repo1.maven.org/maven2/mygroup/myplugin/1.0.0/myplugin-1.0.0.zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        assertInstallPluginFromUrl(\"mygroup:myplugin:1.0.0\", \"myplugin\", url, null, false, \".sha512\", checksum(digest), null, (b, p) -> null);\n+    }\n+\n+    public void testOfficialChecksumWithoutFilename() throws Exception {\n+        String url = \"https://artifacts.elastic.co/downloads/elasticsearch-plugins/analysis-icu/analysis-icu-\"\n+            + Build.CURRENT.getQualifiedVersion()\n+            + \".zip\";\n+        MessageDigest digest = MessageDigest.getInstance(\"SHA-512\");\n+        UserException e = expectThrows(\n+            UserException.class,\n+            () -> assertInstallPluginFromUrl(\n+                \"analysis-icu\",\n+                \"analysis-icu\",\n+                url,\n+                null,\n+                false,\n+                \".sha512\",\n+                checksum(digest),\n+                null,\n+                (b, p) -> null\n+            )\n+        );\n+        assertEquals(ExitCodes.IO_ERROR, e.exitCode);\n+        assertTrue(e.getMessage(), e.getMessage().startsWith(\"Invalid checksum file\"));", "originalCommit": "70e61bd3d51f9ff4a139ed3c9521ab93c68051b4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE5MTY4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/52668#discussion_r383191685", "bodyText": "assertTrue is evil in almost all cases. \ud83d\ude07", "author": "jasontedor", "createdAt": "2020-02-24T10:42:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4OTAxOA=="}], "type": "inlineReview"}, {"oid": "381a511b3a9249387a663d298544642817871608", "url": "https://github.com/elastic/elasticsearch/commit/381a511b3a9249387a663d298544642817871608", "message": "use startsWith and format lines", "committedDate": "2020-02-24T19:11:22Z", "type": "commit"}]}