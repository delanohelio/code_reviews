{"pr_number": 62960, "pr_title": "[ML] Delete dest index and reindex if incompatible", "pr_author": "dimitris-athanasiou", "pr_createdAt": "2020-09-28T14:24:43Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62960", "timeline": [{"oid": "2cd58ab0f6d84f5070afee8e158ef712012da42c", "url": "https://github.com/elastic/elasticsearch/commit/2cd58ab0f6d84f5070afee8e158ef712012da42c", "message": "[ML] Delete dest index and reindex if incompatible\n\nData frame analytics results format changed in version `7.10.0`.\nIf existing jobs that were not completed are restarted, it is\npossible the destination index had already been created. That index's\nmappings are not suitable for the new results format.\n\nThis commit checks the version of the destination index and deletes\nit when the version is outdated. The job will then continue by\nrecreating the destination index and reindexing.", "committedDate": "2020-09-28T14:23:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk4OTgwNA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r495989804", "body": "```suggestion\r\n```\r\nSeems unused?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ImmutableOpenMap<String, MappingMetadata> mappings = indexResponse.mappings();\n          \n          \n            \n                            Map<String, Object> sourceAsMap = mappings.valuesIt().next().getSourceAsMap();\n          \n      \n    \n    \n  \n\nSeems unused?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">ImmutableOpenMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">MappingMetadata</span>&gt;</span> mappings <span class=\"pl-k\">=</span> indexResponse<span class=\"pl-k\">.</span>mappings();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;</span> sourceAsMap <span class=\"pl-k\">=</span> mappings<span class=\"pl-k\">.</span>valuesIt()<span class=\"pl-k\">.</span>next()<span class=\"pl-k\">.</span>getSourceAsMap();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Seems unused?</p>", "author": "benwtrent", "createdAt": "2020-09-28T14:38:44Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -304,6 +326,8 @@ private void reindexDataframeAndStartAnalysis(DataFrameAnalyticsTask task, DataF\n         // Create destination index if it does not exist\n         ActionListener<GetIndexResponse> destIndexListener = ActionListener.wrap(\n             indexResponse -> {\n+                ImmutableOpenMap<String, MappingMetadata> mappings = indexResponse.mappings();\n+                Map<String, Object> sourceAsMap = mappings.valuesIt().next().getSourceAsMap();", "originalCommit": "2cd58ab0f6d84f5070afee8e158ef712012da42c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAwODkyNA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496008924", "bodyText": "Ah, leftover I forgot to delete. Thanks for catching!", "author": "dimitris-athanasiou", "createdAt": "2020-09-28T14:59:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk4OTgwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDU2MA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r495990560", "body": "```suggestion\r\n            logger.debug(() -> new ParameterizedMessage(\"[{}] Destination index version [{}]\", jobId, destIndexVersion));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.debug(\"[{}] Destination index version [{}]\", jobId, destIndexVersion);\n          \n          \n            \n                        logger.debug(() -> new ParameterizedMessage(\"[{}] Destination index version [{}]\", jobId, destIndexVersion));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            logger<span class=\"pl-k\">.</span>debug(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[{}] Destination index version [{}]<span class=\"pl-pds\">\"</span></span>, jobId, destIndexVersion);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            logger<span class=\"pl-k\">.</span>debug(<span class=\"x x-first\">() </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">ParameterizedMessage</span><span class=\"x x-last\">(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>[{}] Destination index version [{}]<span class=\"pl-pds\">\"</span></span>, jobId, destIndexVersion<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-09-28T14:39:48Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DestinationIndex.java", "diffHunk": "@@ -220,4 +233,24 @@ private static void checkResultsFieldIsNotPresentInProperties(DataFrameAnalytics\n                 DataFrameAnalyticsDest.RESULTS_FIELD.getPreferredName());\n         }\n     }\n+\n+    public static boolean isCompatible(String jobId, MappingMetadata mappingMetadata) {\n+        try {\n+            Version destIndexVersion = getVersion(mappingMetadata);\n+            logger.debug(\"[{}] Destination index version [{}]\", jobId, destIndexVersion);", "originalCommit": "2cd58ab0f6d84f5070afee8e158ef712012da42c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5NzA5MA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r495997090", "body": "In my opinion (loosely held) it would be good to say \"index was created in version X, but minimum supported version is version Y. Starting from scratch\" or something. ", "bodyText": "In my opinion (loosely held) it would be good to say \"index was created in version X, but minimum supported version is version Y. Starting from scratch\" or something.", "bodyHTML": "<p dir=\"auto\">In my opinion (loosely held) it would be good to say \"index was created in version X, but minimum supported version is version Y. Starting from scratch\" or something.</p>", "author": "benwtrent", "createdAt": "2020-09-28T14:48:32Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -90,6 +93,25 @@ public void execute(DataFrameAnalyticsTask task, DataFrameAnalyticsState current\n         // With config in hand, determine action to take\n         ActionListener<DataFrameAnalyticsConfig> configListener = ActionListener.wrap(\n             config -> {\n+                // Check if existing destination index is incompatible.\n+                // If it is, we delete it and start from reindexing.\n+                IndexMetadata destIndex = clusterState.getMetadata().index(config.getDest().getIndex());\n+                if (destIndex != null) {\n+                    MappingMetadata destIndexMapping = clusterState.getMetadata().index(config.getDest().getIndex()).mapping();\n+                    if (DestinationIndex.isCompatible(config.getId(), destIndexMapping) == false) {\n+                        LOGGER.info(\"[{}] Destination index is out of date; will delete and reindex from scratch\", config.getId());", "originalCommit": "2cd58ab0f6d84f5070afee8e158ef712012da42c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAxMDM0MA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496010340", "bodyText": "Yeah, I agree. It just makes the code a bit uglier as I have to get the version separately. But it's probably worth it. I'll do that which means I can remove entirely the other debug message about the version.", "author": "dimitris-athanasiou", "createdAt": "2020-09-28T15:00:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5NzA5MA=="}], "type": "inlineReview"}, {"oid": "a9226fe41c67e7d552b71128e3717c637fd3deb3", "url": "https://github.com/elastic/elasticsearch/commit/a9226fe41c67e7d552b71128e3717c637fd3deb3", "message": "Address review comments", "committedDate": "2020-09-28T15:24:14Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2ODEwOA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496568108", "body": "As an aside, the created version is in index settings  (`GET myindex/_settings`) as far as I can tell that happens automatically. \r\n\r\nhttps://github.com/elastic/elasticsearch/blob/0ec40a0abeb85077285f585263b785a33a66ae39/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetadata.java#L386\r\n\r\nIs there a reason to prefer this usage?\r\n", "bodyText": "As an aside, the created version is in index settings  (GET myindex/_settings) as far as I can tell that happens automatically.\n\n  \n    \n      elasticsearch/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetadata.java\n    \n    \n         Line 386\n      in\n      0ec40a0\n    \n    \n    \n    \n\n        \n          \n           private final Version indexCreatedVersion; \n        \n    \n  \n\n\nIs there a reason to prefer this usage?", "bodyHTML": "<p dir=\"auto\">As an aside, the created version is in index settings  (<code>GET myindex/_settings</code>) as far as I can tell that happens automatically.</p>\n<p dir=\"auto\"><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/elastic/elasticsearch/blob/0ec40a0abeb85077285f585263b785a33a66ae39/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetadata.java#L386\">elasticsearch/server/src/main/java/org/elasticsearch/cluster/metadata/IndexMetadata.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 386\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/elastic/elasticsearch/commit/0ec40a0abeb85077285f585263b785a33a66ae39\">0ec40a0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L386\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"386\"></td>\n          <td id=\"LC386\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Version</span> indexCreatedVersion; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">Is there a reason to prefer this usage?</p>", "author": "davidkyle", "createdAt": "2020-09-29T09:20:30Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DestinationIndex.java", "diffHunk": "@@ -164,11 +176,12 @@ private static Integer findMaxSettingValue(GetSettingsResponse settingsResponse,\n         return properties;\n     }\n \n-    private static Map<String, Object> createMetadata(String analyticsId, Clock clock) {\n+    // Visible for testing\n+    static Map<String, Object> createMetadata(String analyticsId, Clock clock, Version version) {\n         Map<String, Object> metadata = new HashMap<>();\n         metadata.put(CREATION_DATE_MILLIS, clock.millis());\n         metadata.put(CREATED_BY, \"data-frame-analytics\");\n-        metadata.put(VERSION, Map.of(CREATED, Version.CURRENT));\n+        metadata.put(VERSION, Map.of(CREATED, version.toString()));", "originalCommit": "2cd58ab0f6d84f5070afee8e158ef712012da42c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjgxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496606819", "bodyText": "I think it was originally added not realizing version was already available.\nThinking about it though, I wonder if there is a benefit reading the version from _meta. Unlike the index settings, we can overwrite _meta. That would leave an open option if in the feature we had to manually upgrade an index and tag it so by updating the version in _meta. Does that make sense or am I just sugar coating it? :-)", "author": "dimitris-athanasiou", "createdAt": "2020-09-29T10:22:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2ODEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxNTg5OA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496615898", "bodyText": "That would leave an open option if in the feature we had to manually upgrade an index and tag it so by updating the version in _meta.\n\nThis is what we do with most ML indices.  The version in _meta refers not to the version the index was created in, but to the version that the mappings were last updated in.  So there's definitely a benefit in us storing a version that's not constrained to be the same as the creation version.  But in this case the field that stores the version is called created.  It's really a schema version that we want.", "author": "droberts195", "createdAt": "2020-09-29T10:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2ODEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NTQyMA==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496655420", "bodyText": "Right, agreed, the fact that the version is keys as created is not ideal. We could change this though it'll come with some BWC code.", "author": "dimitris-athanasiou", "createdAt": "2020-09-29T11:53:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2ODEwOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjczNTAwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496735005", "bodyText": "It is consistent with the other ml indices we should stick to this pattern", "author": "davidkyle", "createdAt": "2020-09-29T13:52:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2ODEwOA=="}], "type": "inlineReview"}, {"oid": "d5ab73f3834795c3133d67ef092a6bfe7ac32982", "url": "https://github.com/elastic/elasticsearch/commit/d5ab73f3834795c3133d67ef092a6bfe7ac32982", "message": "Rework to ensure we don't delete a custom dest index", "committedDate": "2020-09-29T10:18:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjYxNg==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496652616", "body": "Isn't interface with subclasses an overkill here?\r\nHow about turning `Metadata` into a POJO class with 2 fields: `boolean hasMetadata` and `Version version`?", "bodyText": "Isn't interface with subclasses an overkill here?\nHow about turning Metadata into a POJO class with 2 fields: boolean hasMetadata and Version version?", "bodyHTML": "<p dir=\"auto\">Isn't interface with subclasses an overkill here?<br>\nHow about turning <code>Metadata</code> into a POJO class with 2 fields: <code>boolean hasMetadata</code> and <code>Version version</code>?</p>", "author": "przemekwitek", "createdAt": "2020-09-29T11:48:06Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DestinationIndex.java", "diffHunk": "@@ -220,4 +235,77 @@ private static void checkResultsFieldIsNotPresentInProperties(DataFrameAnalytics\n                 DataFrameAnalyticsDest.RESULTS_FIELD.getPreferredName());\n         }\n     }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static Metadata readMetadata(String jobId, MappingMetadata mappingMetadata) {\n+        Map<String, Object> mappings = mappingMetadata.getSourceAsMap();\n+        Map<String, Object> meta = (Map<String, Object>) mappings.get(META);\n+        if (meta == null || DFA_CREATOR.equals(meta.get(CREATED_BY)) == false) {\n+            return new NoMetadata();\n+        }\n+        return new DestMetadata(getVersion(jobId, meta));\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private static Version getVersion(String jobId, Map<String, Object> meta) {\n+        try {\n+            Map<String, Object> version = (Map<String, Object>) meta.get(VERSION);\n+            String createdVersionString = (String) version.get(CREATED);\n+            return Version.fromString(createdVersionString);\n+        } catch (Exception e) {\n+            logger.error(new ParameterizedMessage(\"[{}] Could not retrieve destination index version\", jobId), e);\n+            return null;\n+        }\n+    }\n+\n+    public interface Metadata {", "originalCommit": "d5ab73f3834795c3133d67ef092a6bfe7ac32982", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxNTYwNg==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496715606", "bodyText": "I've tried this out and we end up with a single Metadata class that looks like this:\n    private static class Metadata {\n\n        private final boolean hasMetadata;\n        private final Version version;\n\n        private Metadata(boolean hasMetadata, @Nullable Version version) {\n            this.hasMetadata = hasMetadata;\n            this.version = version;\n        }\n\n        public boolean hasMetadata() {\n            return hasMetadata;\n        }\n\n        public boolean isCompatible() {\n            if (hasMetadata) {\n                return version == null ? false : version.onOrAfter(MIN_COMPATIBLE_VERSION);\n            }\n            throw new UnsupportedOperationException();\n        }\n\n        public String getVersion() {\n            if (hasMetadata) {\n                return version == null ? \"unknown\" : version.toString();\n            }\n            throw new UnsupportedOperationException();\n        }\n    }\n\nWhile this results to fewer lines of code, I feel the interface approach results into easier to understand and follow code. The NoMetadata implementation is straightforward and it frees up the other one not to worry about those unsupported operation exceptions.", "author": "dimitris-athanasiou", "createdAt": "2020-09-29T13:27:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjYxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1Mjk0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496652943", "body": "```suggestion\r\n        if ((meta == null) || (DFA_CREATOR.equals(meta.get(CREATED_BY)) == false)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (meta == null || DFA_CREATOR.equals(meta.get(CREATED_BY)) == false) {\n          \n          \n            \n                    if ((meta == null) || (DFA_CREATOR.equals(meta.get(CREATED_BY)) == false)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (meta <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> <span class=\"pl-c1\">DFA_CREATOR</span><span class=\"pl-k\">.</span>equals(meta<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">CREATED_BY</span>)) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">false</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (<span class=\"x x-first x-last\">(</span>meta <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span><span class=\"x x-first x-last\">)</span> <span class=\"pl-k\">||</span> <span class=\"x x-first x-last\">(</span><span class=\"pl-c1\">DFA_CREATOR</span><span class=\"pl-k\">.</span>equals(meta<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">CREATED_BY</span>)) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">false</span><span class=\"x x-first x-last\">)</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "przemekwitek", "createdAt": "2020-09-29T11:48:46Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DestinationIndex.java", "diffHunk": "@@ -220,4 +235,77 @@ private static void checkResultsFieldIsNotPresentInProperties(DataFrameAnalytics\n                 DataFrameAnalyticsDest.RESULTS_FIELD.getPreferredName());\n         }\n     }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static Metadata readMetadata(String jobId, MappingMetadata mappingMetadata) {\n+        Map<String, Object> mappings = mappingMetadata.getSourceAsMap();\n+        Map<String, Object> meta = (Map<String, Object>) mappings.get(META);\n+        if (meta == null || DFA_CREATOR.equals(meta.get(CREATED_BY)) == false) {", "originalCommit": "d5ab73f3834795c3133d67ef092a6bfe7ac32982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MzYwNw==", "url": "https://github.com/elastic/elasticsearch/pull/62960#discussion_r496653607", "body": "```suggestion\r\n                    if (metadata.hasMetadata() && (metadata.isCompatible() == false)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (metadata.hasMetadata() && metadata.isCompatible() == false) {\n          \n          \n            \n                                if (metadata.hasMetadata() && (metadata.isCompatible() == false)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">if</span> (metadata<span class=\"pl-k\">.</span>hasMetadata() <span class=\"pl-k\">&amp;&amp;</span> metadata<span class=\"pl-k\">.</span>isCompatible() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">false</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">if</span> (metadata<span class=\"pl-k\">.</span>hasMetadata() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first x-last\">(</span>metadata<span class=\"pl-k\">.</span>isCompatible() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">false</span><span class=\"x x-first x-last\">)</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "przemekwitek", "createdAt": "2020-09-29T11:50:00Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java", "diffHunk": "@@ -90,6 +92,28 @@ public void execute(DataFrameAnalyticsTask task, DataFrameAnalyticsState current\n         // With config in hand, determine action to take\n         ActionListener<DataFrameAnalyticsConfig> configListener = ActionListener.wrap(\n             config -> {\n+                // Check if existing destination index is incompatible.\n+                // If it is, we delete it and start from reindexing.\n+                IndexMetadata destIndex = clusterState.getMetadata().index(config.getDest().getIndex());\n+                if (destIndex != null) {\n+                    MappingMetadata destIndexMapping = clusterState.getMetadata().index(config.getDest().getIndex()).mapping();\n+                    DestinationIndex.Metadata metadata = DestinationIndex.readMetadata(config.getId(), destIndexMapping);\n+                    if (metadata.hasMetadata() && metadata.isCompatible() == false) {", "originalCommit": "d5ab73f3834795c3133d67ef092a6bfe7ac32982", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2b8ac35f3ef2104ce5b7f9e77d3066ff113fdcdb", "url": "https://github.com/elastic/elasticsearch/commit/2b8ac35f3ef2104ce5b7f9e77d3066ff113fdcdb", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DestinationIndex.java\n\nCo-authored-by: Przemys\u0142aw Witek <przemyslaw.witek@elastic.co>", "committedDate": "2020-09-29T13:28:41Z", "type": "commit"}, {"oid": "cdc183ffba3c3c5e3b6eabcf8e2ca4c48306d196", "url": "https://github.com/elastic/elasticsearch/commit/cdc183ffba3c3c5e3b6eabcf8e2ca4c48306d196", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/dataframe/DataFrameAnalyticsManager.java\n\nCo-authored-by: Przemys\u0142aw Witek <przemyslaw.witek@elastic.co>", "committedDate": "2020-09-29T13:28:48Z", "type": "commit"}]}