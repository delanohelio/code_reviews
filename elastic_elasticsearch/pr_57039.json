{"pr_number": 57039, "pr_title": "Add http proxy support for OIDC realm", "pr_author": "jkakavas", "pr_createdAt": "2020-05-21T13:24:41Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57039", "timeline": [{"oid": "11fbefdf6825e788226e543f2b1628ffe62a1212", "url": "https://github.com/elastic/elasticsearch/commit/11fbefdf6825e788226e543f2b1628ffe62a1212", "message": "Add http proxy support for OIDC realm\n\nThis change introduces support for using an http proxy for egress\ncommunication of the OpenID Connect realm.", "committedDate": "2020-05-21T13:14:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYxOTMyMA==", "url": "https://github.com/elastic/elasticsearch/pull/57039#discussion_r429619320", "body": "```suggestion\r\n        key -> Setting.intSetting(key, 80, 1, 65535, Setting.Property.NodeScope), () -> HTTP_PROXY_HOST);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    key -> Setting.intSetting(key, 80, Setting.Property.NodeScope));\n          \n          \n            \n                    key -> Setting.intSetting(key, 80, 1, 65535, Setting.Property.NodeScope), () -> HTTP_PROXY_HOST);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>intSetting(key, <span class=\"pl-c1\">80</span>, <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>intSetting(key, <span class=\"pl-c1\">80</span>, <span class=\"pl-c1 x x-first\">1</span><span class=\"x\">, </span><span class=\"pl-c1 x\">65535</span><span class=\"x x-last\">, </span><span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>)<span class=\"x x-first\">, () </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">HTTP_PROXY_HOST</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "albertzaharovits", "createdAt": "2020-05-24T09:57:42Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/oidc/OpenIdConnectRealmSettings.java", "diffHunk": "@@ -139,6 +139,15 @@ private OpenIdConnectRealmSettings() {\n     public static final Setting.AffixSetting<Integer> HTTP_MAX_ENDPOINT_CONNECTIONS\n         = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.max_endpoint_connections\",\n         key -> Setting.intSetting(key, 200, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\n+        key -> Setting.simpleString(key, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<Integer> HTTP_PROXY_PORT\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.port\",\n+        key -> Setting.intSetting(key, 80, Setting.Property.NodeScope));", "originalCommit": "11fbefdf6825e788226e543f2b1628ffe62a1212", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzNzU5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57039#discussion_r429637596", "body": "The value validation for hostname is probably overkill in this form, it might be more pragmatic to use smth similar to `TextUtils.containsBlanks(argument)`, but I prefer it like this because it doesn't require assuming anything about the validations that `HttpHost` may do internally.\r\n\r\n```suggestion\r\n    public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\r\n        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\r\n        key -> Setting.simpleString(key, \"\", new Setting.Validator<String>() {\r\n\r\n            @Override\r\n            public void validate(final String value) {\r\n            }\r\n\r\n            @Override\r\n            public void validate(final String value, final Map<Setting<?>, Object> settings) {\r\n                switch (value) {\r\n                    case \"\":\r\n                        break;\r\n                    default:\r\n                        final String namespace = HTTP_PROXY_HOST.getNamespace(HTTP_PROXY_HOST.getConcreteSetting(key));\r\n                        final Integer port = (Integer) settings.get(HTTP_PROXY_PORT.getConcreteSettingForNamespace(namespace));\r\n                        final String scheme = (String) settings.get(HTTP_PROXY_SCHEME.getConcreteSettingForNamespace(namespace));\r\n                        try {\r\n                            new HttpHost(value, port, scheme);\r\n                        } catch (Exception e) {\r\n                            throw new SettingsException(\"host [\" + value + \"] for key [\" + key + \"] is invalid\", e);\r\n                        }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public Iterator<Setting<?>> settings() {\r\n                final String namespace = HTTP_PROXY_HOST.getNamespace(HTTP_PROXY_HOST.getConcreteSetting(key));\r\n                final List<Setting<?>> settings = List.of(HTTP_PROXY_PORT.getConcreteSettingForNamespace(namespace),\r\n                        HTTP_PROXY_SCHEME.getConcreteSettingForNamespace(namespace));\r\n                return settings.iterator();\r\n            }\r\n\r\n        }, Setting.Property.NodeScope));\r\n```", "bodyText": "The value validation for hostname is probably overkill in this form, it might be more pragmatic to use smth similar to TextUtils.containsBlanks(argument), but I prefer it like this because it doesn't require assuming anything about the validations that HttpHost may do internally.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\n          \n          \n            \n                    = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\n          \n          \n            \n                    key -> Setting.simpleString(key, Setting.Property.NodeScope));\n          \n          \n            \n                public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\n          \n          \n            \n                    = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\n          \n          \n            \n                    key -> Setting.simpleString(key, \"\", new Setting.Validator<String>() {\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void validate(final String value) {\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public void validate(final String value, final Map<Setting<?>, Object> settings) {\n          \n          \n            \n                            switch (value) {\n          \n          \n            \n                                case \"\":\n          \n          \n            \n                                    break;\n          \n          \n            \n                                default:\n          \n          \n            \n                                    final String namespace = HTTP_PROXY_HOST.getNamespace(HTTP_PROXY_HOST.getConcreteSetting(key));\n          \n          \n            \n                                    final Integer port = (Integer) settings.get(HTTP_PROXY_PORT.getConcreteSettingForNamespace(namespace));\n          \n          \n            \n                                    final String scheme = (String) settings.get(HTTP_PROXY_SCHEME.getConcreteSettingForNamespace(namespace));\n          \n          \n            \n                                    try {\n          \n          \n            \n                                        new HttpHost(value, port, scheme);\n          \n          \n            \n                                    } catch (Exception e) {\n          \n          \n            \n                                        throw new SettingsException(\"host [\" + value + \"] for key [\" + key + \"] is invalid\", e);\n          \n          \n            \n                                    }\n          \n          \n            \n                            }\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        @Override\n          \n          \n            \n                        public Iterator<Setting<?>> settings() {\n          \n          \n            \n                            final String namespace = HTTP_PROXY_HOST.getNamespace(HTTP_PROXY_HOST.getConcreteSetting(key));\n          \n          \n            \n                            final List<Setting<?>> settings = List.of(HTTP_PROXY_PORT.getConcreteSettingForNamespace(namespace),\n          \n          \n            \n                                    HTTP_PROXY_SCHEME.getConcreteSettingForNamespace(namespace));\n          \n          \n            \n                            return settings.iterator();\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                    }, Setting.Property.NodeScope));", "bodyHTML": "<p dir=\"auto\">The value validation for hostname is probably overkill in this form, it might be more pragmatic to use smth similar to <code>TextUtils.containsBlanks(argument)</code>, but I prefer it like this because it doesn't require assuming anything about the validations that <code>HttpHost</code> may do internally.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-k\">AffixSetting&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">HTTP_PROXY_HOST</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>affixKeySetting(<span class=\"pl-smi\">RealmSettings</span><span class=\"pl-k\">.</span>realmSettingPrefix(<span class=\"pl-c1\">TYPE</span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http.proxy.host<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>simpleString(key, <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-k\">AffixSetting&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">HTTP_PROXY_HOST</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>affixKeySetting(<span class=\"pl-smi\">RealmSettings</span><span class=\"pl-k\">.</span>realmSettingPrefix(<span class=\"pl-c1\">TYPE</span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http.proxy.host<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>simpleString(key, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Setting</span>.<span class=\"pl-k\">Validator&lt;<span class=\"pl-smi\">String</span>&gt;</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> validate(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> value) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> validate(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> value, <span class=\"pl-k\">final</span> <span class=\"pl-k\">Map&lt;<span class=\"pl-k\">Setting&lt;?&gt;</span>, <span class=\"pl-smi\">Object</span>&gt;</span> settings) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">switch</span> (value) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">break</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">default</span><span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> namespace <span class=\"pl-k\">=</span> <span class=\"pl-c1\">HTTP_PROXY_HOST</span><span class=\"pl-k\">.</span>getNamespace(<span class=\"pl-c1\">HTTP_PROXY_HOST</span><span class=\"pl-k\">.</span>getConcreteSetting(key));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Integer</span> port <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">Integer</span>) settings<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">HTTP_PROXY_PORT</span><span class=\"pl-k\">.</span>getConcreteSettingForNamespace(namespace));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> scheme <span class=\"pl-k\">=</span> (<span class=\"pl-smi\">String</span>) settings<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">HTTP_PROXY_SCHEME</span><span class=\"pl-k\">.</span>getConcreteSettingForNamespace(namespace));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpHost</span>(value, port, scheme);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SettingsException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>host [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> value <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] for key [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> key <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] is invalid<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">@Override</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">public</span> <span class=\"pl-k\">Iterator&lt;<span class=\"pl-k\">Setting&lt;?&gt;</span>&gt;</span> settings() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> namespace <span class=\"pl-k\">=</span> <span class=\"pl-c1\">HTTP_PROXY_HOST</span><span class=\"pl-k\">.</span>getNamespace(<span class=\"pl-c1\">HTTP_PROXY_HOST</span><span class=\"pl-k\">.</span>getConcreteSetting(key));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">final</span> <span class=\"pl-k\">List&lt;<span class=\"pl-k\">Setting&lt;?&gt;</span>&gt;</span> settings <span class=\"pl-k\">=</span> <span class=\"pl-smi\">List</span><span class=\"pl-k\">.</span>of(<span class=\"pl-c1\">HTTP_PROXY_PORT</span><span class=\"pl-k\">.</span>getConcreteSettingForNamespace(namespace),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-c1\">HTTP_PROXY_SCHEME</span><span class=\"pl-k\">.</span>getConcreteSettingForNamespace(namespace));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> settings<span class=\"pl-k\">.</span>iterator();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }, <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "albertzaharovits", "createdAt": "2020-05-24T13:36:46Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/oidc/OpenIdConnectRealmSettings.java", "diffHunk": "@@ -139,6 +139,15 @@ private OpenIdConnectRealmSettings() {\n     public static final Setting.AffixSetting<Integer> HTTP_MAX_ENDPOINT_CONNECTIONS\n         = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.max_endpoint_connections\",\n         key -> Setting.intSetting(key, 200, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\n+        key -> Setting.simpleString(key, Setting.Property.NodeScope));", "originalCommit": "11fbefdf6825e788226e543f2b1628ffe62a1212", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0NjQ0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/57039#discussion_r429646446", "bodyText": "The value validation for hostname is probably overkill in this form\n\nNah, I like delegating the validation to the class that would actually do it in runtime too, +1", "author": "jkakavas", "createdAt": "2020-05-24T15:11:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzNzU5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYzNzYxMA==", "url": "https://github.com/elastic/elasticsearch/pull/57039#discussion_r429637610", "body": "```suggestion\r\n    public static final Setting.AffixSetting<String> HTTP_PROXY_SCHEME\r\n        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.scheme\",\r\n        key -> Setting.simpleString(key, \"http\", scheme -> {\r\n            String normalizedScheme = scheme.toLowerCase(Locale.ROOT);\r\n            if (false == (\"https\".equals(normalizedScheme) || \"http\".equals(normalizedScheme))) {\r\n                throw new SettingsException(\"scheme [\" + scheme + \"] for key [\" + key + \"] is invalid, not http or https\");\r\n            }\r\n        }, Setting.Property.NodeScope), () -> HTTP_PROXY_HOST);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final Setting.AffixSetting<String> HTTP_PROXY_SCHEME\n          \n          \n            \n                    = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.scheme\",\n          \n          \n            \n                    key -> Setting.simpleString(key, \"http\", Setting.Property.NodeScope));\n          \n          \n            \n                public static final Setting.AffixSetting<String> HTTP_PROXY_SCHEME\n          \n          \n            \n                    = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.scheme\",\n          \n          \n            \n                    key -> Setting.simpleString(key, \"http\", scheme -> {\n          \n          \n            \n                        String normalizedScheme = scheme.toLowerCase(Locale.ROOT);\n          \n          \n            \n                        if (false == (\"https\".equals(normalizedScheme) || \"http\".equals(normalizedScheme))) {\n          \n          \n            \n                            throw new SettingsException(\"scheme [\" + scheme + \"] for key [\" + key + \"] is invalid, not http or https\");\n          \n          \n            \n                        }\n          \n          \n            \n                    }, Setting.Property.NodeScope), () -> HTTP_PROXY_HOST);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-k\">AffixSetting&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">HTTP_PROXY_SCHEME</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>affixKeySetting(<span class=\"pl-smi\">RealmSettings</span><span class=\"pl-k\">.</span>realmSettingPrefix(<span class=\"pl-c1\">TYPE</span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http.proxy.scheme<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>simpleString(key, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-k\">AffixSetting&lt;<span class=\"pl-smi\">String</span>&gt;</span> <span class=\"pl-c1\">HTTP_PROXY_SCHEME</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>affixKeySetting(<span class=\"pl-smi\">RealmSettings</span><span class=\"pl-k\">.</span>realmSettingPrefix(<span class=\"pl-c1\">TYPE</span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http.proxy.scheme<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        key <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span>simpleString(key, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http<span class=\"pl-pds\">\"</span></span>, scheme <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> normalizedScheme <span class=\"pl-k\">=</span> scheme<span class=\"pl-k\">.</span>toLowerCase(<span class=\"pl-smi\">Locale</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>ROOT</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">false</span> <span class=\"pl-k\">==</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">.</span>equals(normalizedScheme) <span class=\"pl-k\">||</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">.</span>equals(normalizedScheme))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SettingsException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>scheme [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> scheme <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] for key [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> key <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] is invalid, not http or https<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }, <span class=\"pl-smi\">Setting</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">NodeScope</span>), () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">HTTP_PROXY_HOST</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "albertzaharovits", "createdAt": "2020-05-24T13:36:53Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/oidc/OpenIdConnectRealmSettings.java", "diffHunk": "@@ -139,6 +139,15 @@ private OpenIdConnectRealmSettings() {\n     public static final Setting.AffixSetting<Integer> HTTP_MAX_ENDPOINT_CONNECTIONS\n         = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.max_endpoint_connections\",\n         key -> Setting.intSetting(key, 200, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<String> HTTP_PROXY_HOST\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.host\",\n+        key -> Setting.simpleString(key, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<Integer> HTTP_PROXY_PORT\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.port\",\n+        key -> Setting.intSetting(key, 80, Setting.Property.NodeScope));\n+    public static final Setting.AffixSetting<String> HTTP_PROXY_SCHEME\n+        = Setting.affixKeySetting(RealmSettings.realmSettingPrefix(TYPE), \"http.proxy.scheme\",\n+        key -> Setting.simpleString(key, \"http\", Setting.Property.NodeScope));", "originalCommit": "11fbefdf6825e788226e543f2b1628ffe62a1212", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "71b74fd1bd8fbbb78b671cb0c9105e401a5ef2f4", "url": "https://github.com/elastic/elasticsearch/commit/71b74fd1bd8fbbb78b671cb0c9105e401a5ef2f4", "message": "address feedback", "committedDate": "2020-05-26T09:34:44Z", "type": "commit"}, {"oid": "702ae5a28cd6612c34c0fc3a74bcf8a712c351a5", "url": "https://github.com/elastic/elasticsearch/commit/702ae5a28cd6612c34c0fc3a74bcf8a712c351a5", "message": "Merge remote-tracking branch 'origin/master' into oidc-proxy-support", "committedDate": "2020-05-26T09:35:17Z", "type": "commit"}, {"oid": "a0558ff3ee4beb8b604b9dbc57a90f42252b3347", "url": "https://github.com/elastic/elasticsearch/commit/a0558ff3ee4beb8b604b9dbc57a90f42252b3347", "message": "Remove auto-import mess", "committedDate": "2020-05-26T11:29:03Z", "type": "commit"}, {"oid": "aa5df032e9a66266c85b3ba97a446277f36b53dc", "url": "https://github.com/elastic/elasticsearch/commit/aa5df032e9a66266c85b3ba97a446277f36b53dc", "message": "Merge branch 'master' into oidc-proxy-support", "committedDate": "2020-06-02T08:19:30Z", "type": "commit"}, {"oid": "2ea8d297c81bd4052a5c26bccf648abd3df67f10", "url": "https://github.com/elastic/elasticsearch/commit/2ea8d297c81bd4052a5c26bccf648abd3df67f10", "message": "address feedback", "committedDate": "2020-06-03T05:51:51Z", "type": "commit"}, {"oid": "c1dbfc2fb052d2b5122aca9661529cd6c209eaf3", "url": "https://github.com/elastic/elasticsearch/commit/c1dbfc2fb052d2b5122aca9661529cd6c209eaf3", "message": "Merge remote-tracking branch 'origin/master' into oidc-proxy-support", "committedDate": "2020-06-03T05:51:56Z", "type": "commit"}]}