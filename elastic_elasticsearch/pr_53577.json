{"pr_number": 53577, "pr_title": "Improve performance of shards limits decider", "pr_author": "jasontedor", "pr_createdAt": "2020-03-14T18:31:52Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53577", "timeline": [{"oid": "74593557772eab9d4f754567a29366aa97a1bcd4", "url": "https://github.com/elastic/elasticsearch/commit/74593557772eab9d4f754567a29366aa97a1bcd4", "message": "Improve performance of shards limits decider\n\nOn clusters with a large number of shards, the shards limits allocation\ndecider can exhibit poor performance leading to timeouts applying\ncluster state updates. This occurs because for every shard, we do a loop\nto count the number of shards on the node, and the number of shards for\nthe index of the shard. This is roughly quadratic in the number of\nshards. This loop is not necessary, since we already have a O(1) method\nto count the number of non-relocating shards on a node, and with this\ncommit we add some infrastructure to RoutingNode to make counting the\nnumber of shards per index O(1).", "committedDate": "2020-03-14T18:30:08Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NDU4OA==", "url": "https://github.com/elastic/elasticsearch/pull/53577#discussion_r394594588", "body": "Could we make this simpler by:\r\n\r\n```suggestion\r\n            shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index, Collectors.toSet()));\r\n        assert shardRoutingsByIndex.equals(shardsByIndex);\r\n```", "bodyText": "Could we make this simpler by:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index));\n          \n          \n            \n                    assert shardsByIndex.size() == shardRoutingsByIndex.size();\n          \n          \n            \n                    assert shardsByIndex.keySet().containsAll(shardRoutingsByIndex.keySet());\n          \n          \n            \n                    assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().size() == shardRoutingsByIndex.get(e.getKey()).size());\n          \n          \n            \n                    assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().containsAll(shardRoutingsByIndex.get(e.getKey())));\n          \n          \n            \n                        shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index, Collectors.toSet()));\n          \n          \n            \n                    assert shardRoutingsByIndex.equals(shardsByIndex);", "bodyHTML": "<p dir=\"auto\">Could we make this simpler by:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            shards<span class=\"pl-k\">.</span>values()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>groupingBy(<span class=\"pl-smi\">ShardRouting</span><span class=\"pl-k\">::</span>index));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">assert</span> shardsByIndex<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">==</span> shardRoutingsByIndex<span class=\"pl-k\">.</span>size();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">assert</span> shardsByIndex<span class=\"pl-k\">.</span>keySet()<span class=\"pl-k\">.</span>containsAll(shardRoutingsByIndex<span class=\"pl-k\">.</span>keySet());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">assert</span> shardsByIndex<span class=\"pl-k\">.</span>entrySet()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>allMatch(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> e<span class=\"pl-k\">.</span>getValue()<span class=\"pl-k\">.</span>size() <span class=\"pl-k\">==</span> shardRoutingsByIndex<span class=\"pl-k\">.</span>get(e<span class=\"pl-k\">.</span>getKey())<span class=\"pl-k\">.</span>size());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">assert</span> shardsByIndex<span class=\"pl-k\">.</span>entrySet()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>allMatch(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> e<span class=\"pl-k\">.</span>getValue()<span class=\"pl-k\">.</span>containsAll(shardRoutingsByIndex<span class=\"pl-k\">.</span>get(e<span class=\"pl-k\">.</span>getKey())));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            shards<span class=\"pl-k\">.</span>values()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>groupingBy(<span class=\"pl-smi\">ShardRouting</span><span class=\"pl-k\">::</span>index, <span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toSet()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">assert</span> shardRoutingsByIndex<span class=\"pl-k\">.</span>equals(shardsByIndex);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "henningandersen", "createdAt": "2020-03-18T19:39:05Z", "path": "server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java", "diffHunk": "@@ -316,6 +343,13 @@ private boolean invariant() {\n         assert relocatingShards.size() == shardRoutingsRelocating.size();\n         assert relocatingShards.containsAll(shardRoutingsRelocating);\n \n+        final Map<Index, List<ShardRouting>> shardRoutingsByIndex =\n+            shards.values().stream().collect(Collectors.groupingBy(ShardRouting::index));\n+        assert shardsByIndex.size() == shardRoutingsByIndex.size();\n+        assert shardsByIndex.keySet().containsAll(shardRoutingsByIndex.keySet());\n+        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().size() == shardRoutingsByIndex.get(e.getKey()).size());\n+        assert shardsByIndex.entrySet().stream().allMatch(e -> e.getValue().containsAll(shardRoutingsByIndex.get(e.getKey())));", "originalCommit": "74593557772eab9d4f754567a29366aa97a1bcd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5ODgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/53577#discussion_r394598834", "body": "nit: missing space\r\n\r\n```suggestion\r\n            TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\", false, ShardRoutingState.RELOCATING);\r\n```", "bodyText": "nit: missing space\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\",false, ShardRoutingState.RELOCATING);\n          \n          \n            \n                        TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\", false, ShardRoutingState.RELOCATING);", "bodyHTML": "<p dir=\"auto\">nit: missing space</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">TestShardRouting</span><span class=\"pl-k\">.</span>newShardRouting(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test2<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node-1<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node-2<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-c1\">false</span>, <span class=\"pl-smi\">ShardRoutingState</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>RELOCATING</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">TestShardRouting</span><span class=\"pl-k\">.</span>newShardRouting(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test2<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node-1<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node-2<span class=\"pl-pds\">\"</span></span>,<span class=\"x x-first x-last\"> </span><span class=\"pl-c1\">false</span>, <span class=\"pl-smi\">ShardRoutingState</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>RELOCATING</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "henningandersen", "createdAt": "2020-03-18T19:47:38Z", "path": "server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java", "diffHunk": "@@ -115,4 +116,17 @@ public void testNumberOfOwningShards() {\n         assertThat(routingNode.numberOfOwningShards(), equalTo(2));\n     }\n \n+    public void testNumberOfOwningShardsForIndex() {\n+        final ShardRouting test1Shard0 =\n+            TestShardRouting.newShardRouting(\"test1\", 0, \"node-1\", false, ShardRoutingState.STARTED);\n+        final ShardRouting test2Shard0 =\n+            TestShardRouting.newShardRouting(\"test2\", 0, \"node-1\", \"node-2\",false, ShardRoutingState.RELOCATING);", "originalCommit": "74593557772eab9d4f754567a29366aa97a1bcd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f1a1cd184705f0cb076657d6794f96761900d616", "url": "https://github.com/elastic/elasticsearch/commit/f1a1cd184705f0cb076657d6794f96761900d616", "message": "Update server/src/main/java/org/elasticsearch/cluster/routing/RoutingNode.java\n\nCo-Authored-By: Henning Andersen <33268011+henningandersen@users.noreply.github.com>", "committedDate": "2020-03-18T20:15:12Z", "type": "commit"}, {"oid": "08c989428d54bc85eb691a2849bd90a61fd8b1c8", "url": "https://github.com/elastic/elasticsearch/commit/08c989428d54bc85eb691a2849bd90a61fd8b1c8", "message": "Update server/src/test/java/org/elasticsearch/cluster/routing/RoutingNodeTests.java\n\nCo-Authored-By: Henning Andersen <33268011+henningandersen@users.noreply.github.com>", "committedDate": "2020-03-18T20:15:19Z", "type": "commit"}, {"oid": "92507c0b55127d17a52c86025f7e5e26720f109a", "url": "https://github.com/elastic/elasticsearch/commit/92507c0b55127d17a52c86025f7e5e26720f109a", "message": "Merge branch 'master' into shard-limits-allocation-decider-performance", "committedDate": "2020-03-18T20:18:47Z", "type": "commit"}, {"oid": "209504bc55d51597c48585716b9c97b945ca63f4", "url": "https://github.com/elastic/elasticsearch/commit/209504bc55d51597c48585716b9c97b945ca63f4", "message": "Fix compilation", "committedDate": "2020-03-18T20:28:48Z", "type": "commit"}]}