{"pr_number": 66827, "pr_title": "Add a deprecation message if a REST wrapper implementing plugin presents", "pr_author": "BigPandaToo", "pr_createdAt": "2020-12-27T17:09:00Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66827", "timeline": [{"oid": "bc6b9626c4d6acdf8e7e43f1ab7afbffd63fd4af", "url": "https://github.com/elastic/elasticsearch/commit/bc6b9626c4d6acdf8e7e43f1ab7afbffd63fd4af", "message": "Warn user if security is disabled\n\nAdding warnings if credentials are provided to a cluster that does not\nhave security enabled.", "committedDate": "2020-12-27T16:44:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MjIwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r557872201", "body": "I am not aware of anything that would replace this string with an autodetected version number.\r\n\r\nI think you'll need to use `Version.CURRENT.major + \".\" + Version.CURRENT.minor`", "bodyText": "I am not aware of anything that would replace this string with an autodetected version number.\nI think you'll need to use Version.CURRENT.major + \".\" + Version.CURRENT.minor", "bodyHTML": "<p dir=\"auto\">I am not aware of anything that would replace this string with an autodetected version number.</p>\n<p dir=\"auto\">I think you'll need to use <code>Version.CURRENT.major + \".\" + Version.CURRENT.minor</code></p>", "author": "tvernum", "createdAt": "2021-01-15T05:35:16Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/rest/SecurityRestFilter.java", "diffHunk": "@@ -89,6 +95,11 @@ public void handleRequest(RestRequest request, RestChannel channel, NodeClient c\n                         e -> handleException(\"Secondary authentication\", request, channel, e)));\n                 }, e -> handleException(\"Authentication\", request, channel, e)));\n         } else {\n+            if (request.getHeaders() != null && request.getHeaders().containsKey(\"Authorization\")) {\n+                HeaderWarning.addWarning(\"Elasticsearch security features are not enabled, anyone can access your cluster without \" +\n+                    \"authentication. Read https://www.elastic.co/guide/en/elasticsearch/reference/<autodetected version number>/\" +\n+                    \"get-started-enable-security.html for more information.\");", "originalCommit": "bc6b9626c4d6acdf8e7e43f1ab7afbffd63fd4af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MzI1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r557873259", "body": "```suggestion\r\n            assertThat(warningHeaders, Matchers.empty());\r\n```\r\n\r\nUsing the more explicit matchers means we get more meaningful error messages when they fail.\r\nInstead of a simple \r\n\r\n> expected true but was false\r\n\r\n(which tells us almost nothing), we'd get\r\n\r\n> Expected: an empty collection\r\n     but: <[foo]>\r\n", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat (warningHeaders.isEmpty(), equalTo(true));\n          \n          \n            \n                        assertThat(warningHeaders, Matchers.empty());\n          \n      \n    \n    \n  \n\nUsing the more explicit matchers means we get more meaningful error messages when they fail.\nInstead of a simple\n\nexpected true but was false\n\n(which tells us almost nothing), we'd get\n\nExpected: an empty collection\nbut: <[foo]>", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            assertThat<span class=\"x x-first x-last\"> </span>(warningHeaders<span class=\"pl-k x x-first\">.</span><span class=\"x\">isEmpty(), equalTo(</span><span class=\"pl-c1 x x-last\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertThat(warningHeaders<span class=\"x x-first\">, </span><span class=\"pl-smi x\">Matchers</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">empty(</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Using the more explicit matchers means we get more meaningful error messages when they fail.<br>\nInstead of a simple</p>\n<blockquote>\n<p dir=\"auto\">expected true but was false</p>\n</blockquote>\n<p dir=\"auto\">(which tells us almost nothing), we'd get</p>\n<blockquote>\n<p dir=\"auto\">Expected: an empty collection<br>\nbut: &lt;[foo]&gt;</p>\n</blockquote>", "author": "tvernum", "createdAt": "2021-01-15T05:39:10Z", "path": "x-pack/plugin/security/qa/basic-enable-security/src/javaRestTest/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java", "diffHunk": "@@ -85,6 +97,21 @@ public void testSecuritySetup() throws Exception {\n         }\n     }\n \n+    public void testSecurityDisabledWarning() throws Exception {\n+        final Request request = new Request(\"GET\", \"/_cat/indices\");\n+        Response response = client().performRequest(request);\n+        List<String> warningHeaders = response.getWarnings();\n+        if (securityEnabled) {\n+            assertThat (warningHeaders.isEmpty(), equalTo(true));", "originalCommit": "bc6b9626c4d6acdf8e7e43f1ab7afbffd63fd4af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzg3MzQ0NA==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r557873444", "body": "```suggestion\r\n            assertThat(warningHeaders, hasSize(1));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat (warningHeaders.size(), equalTo(1));\n          \n          \n            \n                        assertThat(warningHeaders, hasSize(1));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            assertThat<span class=\"x x-first x-last\"> </span>(warningHeaders<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">size(), equalTo</span>(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertThat(warningHeaders<span class=\"x x-first x-last\">, hasSize</span>(<span class=\"pl-c1\">1</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2021-01-15T05:39:59Z", "path": "x-pack/plugin/security/qa/basic-enable-security/src/javaRestTest/java/org/elasticsearch/xpack/security/EnableSecurityOnBasicLicenseIT.java", "diffHunk": "@@ -85,6 +97,21 @@ public void testSecuritySetup() throws Exception {\n         }\n     }\n \n+    public void testSecurityDisabledWarning() throws Exception {\n+        final Request request = new Request(\"GET\", \"/_cat/indices\");\n+        Response response = client().performRequest(request);\n+        List<String> warningHeaders = response.getWarnings();\n+        if (securityEnabled) {\n+            assertThat (warningHeaders.isEmpty(), equalTo(true));\n+        } else {\n+            assertThat (warningHeaders.size(), equalTo(1));", "originalCommit": "bc6b9626c4d6acdf8e7e43f1ab7afbffd63fd4af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d8442aac5157fd318570601951289813e0782419", "url": "https://github.com/elastic/elasticsearch/commit/d8442aac5157fd318570601951289813e0782419", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-01-20T14:12:08Z", "type": "commit"}, {"oid": "cccce3a01f841149187c7a295a12b23ff747e903", "url": "https://github.com/elastic/elasticsearch/commit/cccce3a01f841149187c7a295a12b23ff747e903", "message": "- Using explicit matchers in test asserts\n- Fixing version number placeholder", "committedDate": "2021-01-20T19:26:35Z", "type": "commit"}, {"oid": "7adb14a72e0ff1701b5195c3fdb434c2d9f820cf", "url": "https://github.com/elastic/elasticsearch/commit/7adb14a72e0ff1701b5195c3fdb434c2d9f820cf", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-01-20T20:05:34Z", "type": "commit"}, {"oid": "bb4667ba0e0762041cedd5f02ad841706d579b37", "url": "https://github.com/elastic/elasticsearch/commit/bb4667ba0e0762041cedd5f02ad841706d579b37", "message": "- Fixing the problem with non deterministic test execution order causing\n sporadic failures", "committedDate": "2021-01-21T19:13:15Z", "type": "commit"}, {"oid": "c9609b3e718bd9fef7e0dd486495c61ba76b7b9a", "url": "https://github.com/elastic/elasticsearch/commit/c9609b3e718bd9fef7e0dd486495c61ba76b7b9a", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-01-22T18:12:03Z", "type": "commit"}, {"oid": "3d8bfaff7e01956f5a0fa381dc6a0f21af2c3893", "url": "https://github.com/elastic/elasticsearch/commit/3d8bfaff7e01956f5a0fa381dc6a0f21af2c3893", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-02-10T19:29:04Z", "type": "commit"}, {"oid": "6b2f231a38aab3526290601af9bee5cdb2c63e96", "url": "https://github.com/elastic/elasticsearch/commit/6b2f231a38aab3526290601af9bee5cdb2c63e96", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-02-10T19:29:36Z", "type": "commit"}, {"oid": "16e6af7ddbf91f7802529e1f977fd47175aaf475", "url": "https://github.com/elastic/elasticsearch/commit/16e6af7ddbf91f7802529e1f977fd47175aaf475", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-03-10T20:28:50Z", "type": "commit"}, {"oid": "47f1cc73b017df927794f5e5c877ac494587351e", "url": "https://github.com/elastic/elasticsearch/commit/47f1cc73b017df927794f5e5c877ac494587351e", "message": "Addressing review comments", "committedDate": "2021-03-10T21:09:17Z", "type": "commit"}, {"oid": "e346cabfb44074ad880642a98a7cbacc268e3b31", "url": "https://github.com/elastic/elasticsearch/commit/e346cabfb44074ad880642a98a7cbacc268e3b31", "message": "Addressing review comments", "committedDate": "2021-03-10T21:22:14Z", "type": "commit"}, {"oid": "9e282484483daee49d84974edcbf1b91f0ec97d4", "url": "https://github.com/elastic/elasticsearch/commit/9e282484483daee49d84974edcbf1b91f0ec97d4", "message": "Fixing potential NullPointerException", "committedDate": "2021-03-11T20:22:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDAwNjU4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r594006585", "body": "I am concerned that the message is exclusively about \"third party security\" when it's only detecting a rest wrapper.\r\n\r\nI think we need to be more clear than that. Anyone who is using the plugin API to install a rest wrapper is going to be affected, and we need to be clear about that.\r\n \r\nI would propose a message like:\r\n\r\n> The {plugin-name} plugin installs a custom REST wrapper. This functionality is deprecated and will not be possible in Elasticsearch 8.0. If this plugin is intended to provide security features for Elasticsearch then you should switch to using the built-in Elasticsearch features instead.\r\n   ", "bodyText": "I am concerned that the message is exclusively about \"third party security\" when it's only detecting a rest wrapper.\nI think we need to be more clear than that. Anyone who is using the plugin API to install a rest wrapper is going to be affected, and we need to be clear about that.\nI would propose a message like:\n\nThe {plugin-name} plugin installs a custom REST wrapper. This functionality is deprecated and will not be possible in Elasticsearch 8.0. If this plugin is intended to provide security features for Elasticsearch then you should switch to using the built-in Elasticsearch features instead.", "bodyHTML": "<p dir=\"auto\">I am concerned that the message is exclusively about \"third party security\" when it's only detecting a rest wrapper.</p>\n<p dir=\"auto\">I think we need to be more clear than that. Anyone who is using the plugin API to install a rest wrapper is going to be affected, and we need to be clear about that.</p>\n<p dir=\"auto\">I would propose a message like:</p>\n<blockquote>\n<p dir=\"auto\">The {plugin-name} plugin installs a custom REST wrapper. This functionality is deprecated and will not be possible in Elasticsearch 8.0. If this plugin is intended to provide security features for Elasticsearch then you should switch to using the built-in Elasticsearch features instead.</p>\n</blockquote>", "author": "tvernum", "createdAt": "2021-03-15T02:06:18Z", "path": "server/src/main/java/org/elasticsearch/action/ActionModule.java", "diffHunk": "@@ -436,6 +440,13 @@ public ActionModule(Settings settings, IndexNameExpressionResolver indexNameExpr\n                     throw new IllegalArgumentException(\"Cannot have more than one plugin implementing a REST wrapper\");\n                 }\n                 restWrapper = newRestWrapper;\n+                if (restWrapper.getClass().getCanonicalName() == null ||\n+                    restWrapper.getClass().getCanonicalName().startsWith(\"org.elasticsearch\") == false) {\n+                    deprecationLogger.deprecate(DeprecationCategory.SECURITY, \"3rd_party_sec_deprecation\", \"Use of third-party \" +\n+                        \"security plugins is deprecated and will not be possible in 8.0. You can use built-in Elasticsearch features \" +", "originalCommit": "9e282484483daee49d84974edcbf1b91f0ec97d4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7496d14629d224c42052e3bbd32ee6e329f1007c", "url": "https://github.com/elastic/elasticsearch/commit/7496d14629d224c42052e3bbd32ee6e329f1007c", "message": "Fixing potential the message phrasing", "committedDate": "2021-03-15T16:50:56Z", "type": "commit"}, {"oid": "e488d11ebe5e7f37b4ded27dd98e09192f2479ab", "url": "https://github.com/elastic/elasticsearch/commit/e488d11ebe5e7f37b4ded27dd98e09192f2479ab", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-03-15T18:02:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDc3ODY4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r594778686", "body": "I think `DeprecationCategory.PLUGINS` is more appropriate than `DeprecationCategory.SECURITY`, since as Tim pointed out, this isn't a security feature directly.", "bodyText": "I think DeprecationCategory.PLUGINS is more appropriate than DeprecationCategory.SECURITY, since as Tim pointed out, this isn't a security feature directly.", "bodyHTML": "<p dir=\"auto\">I think <code>DeprecationCategory.PLUGINS</code> is more appropriate than <code>DeprecationCategory.SECURITY</code>, since as Tim pointed out, this isn't a security feature directly.</p>", "author": "rjernst", "createdAt": "2021-03-16T00:25:32Z", "path": "server/src/main/java/org/elasticsearch/action/ActionModule.java", "diffHunk": "@@ -436,6 +440,15 @@ public ActionModule(Settings settings, IndexNameExpressionResolver indexNameExpr\n                     throw new IllegalArgumentException(\"Cannot have more than one plugin implementing a REST wrapper\");\n                 }\n                 restWrapper = newRestWrapper;\n+                if (restWrapper.getClass().getCanonicalName() == null ||\n+                    restWrapper.getClass().getCanonicalName().startsWith(\"org.elasticsearch\") == false) {\n+                    deprecationLogger.deprecate(DeprecationCategory.SECURITY, \"3rd_party_rest_deprecation\", \"The \" +", "originalCommit": "e488d11ebe5e7f37b4ded27dd98e09192f2479ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDc3OTA3MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66827#discussion_r594779071", "body": "We have avoided putting URLs in deprecation messages as they break too easily. In fact, I cannot find any other occurrence of one. Can we remove this?", "bodyText": "We have avoided putting URLs in deprecation messages as they break too easily. In fact, I cannot find any other occurrence of one. Can we remove this?", "bodyHTML": "<p dir=\"auto\">We have avoided putting URLs in deprecation messages as they break too easily. In fact, I cannot find any other occurrence of one. Can we remove this?</p>", "author": "rjernst", "createdAt": "2021-03-16T00:26:43Z", "path": "server/src/main/java/org/elasticsearch/action/ActionModule.java", "diffHunk": "@@ -436,6 +440,15 @@ public ActionModule(Settings settings, IndexNameExpressionResolver indexNameExpr\n                     throw new IllegalArgumentException(\"Cannot have more than one plugin implementing a REST wrapper\");\n                 }\n                 restWrapper = newRestWrapper;\n+                if (restWrapper.getClass().getCanonicalName() == null ||\n+                    restWrapper.getClass().getCanonicalName().startsWith(\"org.elasticsearch\") == false) {\n+                    deprecationLogger.deprecate(DeprecationCategory.SECURITY, \"3rd_party_rest_deprecation\", \"The \" +\n+                        plugin.getClass().getName() + \"plugin installs a custom REST wrapper. This functionality is deprecated and will \" +\n+                        \"not be possible in Elasticsearch 8.0. If this plugin is intended to provide security features for Elasticsearch \" +\n+                        \"then you should switch to using the built-in Elasticsearch features instead. \" +\n+                        \"Read https://www.elastic.co/guide/en/elasticsearch/reference/\" + Version.CURRENT.major + \".\" +", "originalCommit": "e488d11ebe5e7f37b4ded27dd98e09192f2479ab", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4f3de7cf7f635d7059348ce766fbb64802ae5f59", "url": "https://github.com/elastic/elasticsearch/commit/4f3de7cf7f635d7059348ce766fbb64802ae5f59", "message": "Add a deprecation message\n\nif a REST wrapper\nimplementing plugin presents", "committedDate": "2021-03-16T11:58:52Z", "type": "commit"}, {"oid": "2a0fa28aad2dbc9fefacdc4cfc6bac36fe0b4274", "url": "https://github.com/elastic/elasticsearch/commit/2a0fa28aad2dbc9fefacdc4cfc6bac36fe0b4274", "message": "Add a deprecation message if a REST wrapper implementing plugin presents", "committedDate": "2021-03-16T15:32:43Z", "type": "commit"}, {"oid": "bee1b3760a1167442d49d1af65eb2201e5d37f17", "url": "https://github.com/elastic/elasticsearch/commit/bee1b3760a1167442d49d1af65eb2201e5d37f17", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-03-16T15:42:14Z", "type": "commit"}, {"oid": "7aff68523e0a80b4d0414a4fb5550efa6061cf6c", "url": "https://github.com/elastic/elasticsearch/commit/7aff68523e0a80b4d0414a4fb5550efa6061cf6c", "message": "Merge branch 'master' into No_sec_warning", "committedDate": "2021-03-16T16:07:13Z", "type": "commit"}]}