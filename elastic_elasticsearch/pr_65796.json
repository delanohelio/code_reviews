{"pr_number": 65796, "pr_title": "SQL: Fix SUM(all zeroes) to return 0 instead of NULL", "pr_author": "palesz", "pr_createdAt": "2020-12-03T00:40:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65796", "timeline": [{"oid": "d2ba958dab02c599527308be755fc0c89c9283e3", "url": "https://github.com/elastic/elasticsearch/commit/d2ba958dab02c599527308be755fc0c89c9283e3", "message": "SQL: Fix SUM(all zeroes)\n\nPreviously the SUM(all zeroes) was `NULL`, but after this change the SUM\nSQL function call is automatically upgraded into a `stats` aggregation\ninstead of a `sum` aggregation. The `stats` aggregation only results in\n`NULL` if the there were no rows, no values to aggregate, which is the\nexpected behaviour across different SQL implementations.\n\nThis is a workaround for #45251 .", "committedDate": "2020-12-03T00:12:55Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxNDYxMg==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534914612", "body": "`@Override` goes on a separate line.", "bodyText": "@Override goes on a separate line.", "bodyHTML": "<p dir=\"auto\"><code>@Override</code> goes on a separate line.</p>", "author": "astefan", "createdAt": "2020-12-03T08:30:51Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -983,6 +984,37 @@ public LogicalPlan apply(LogicalPlan p) {\n         }\n     }\n \n+    static class ReplaceSumWithStats extends OptimizerBasicRule {\n+        // this is a workaround for the https://github.com/elastic/elasticsearch/issues/45251 issue\n+        // should be removed as soon as the issue is fixed\n+        // NOTE: this rule should always be applied AFTER the ReplaceAggsWithStats rule\n+\n+        @Override public LogicalPlan apply(LogicalPlan plan) {", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMjI3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534922279", "body": "```suggestion\r\n        assertTrue(p.aggregates().get(0) instanceof Alias);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(Alias.class, p.aggregates().get(0).getClass());\n          \n          \n            \n                    assertTrue(p.aggregates().get(0) instanceof Alias);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">assertEquals(</span><span class=\"pl-smi x\">Alias</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class, </span>p<span class=\"pl-k\">.</span>aggregates()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getClass()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertTrue(</span>p<span class=\"pl-k\">.</span>aggregates()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)<span class=\"x x-first\"> </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x x-last\">Alias</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "astefan", "createdAt": "2020-12-03T08:35:20Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());\n+        Aggregate p = (Aggregate) optimizedPlan; \n+        assertEquals(1, p.aggregates().size());\n+        assertEquals(Alias.class, p.aggregates().get(0).getClass());", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMjgzMw==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534922833", "body": "```suggestion\r\n        assertTrue(alias.child() instanceof InnerAggregate);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(InnerAggregate.class, alias.child().getClass());\n          \n          \n            \n                    assertTrue(alias.child() instanceof InnerAggregate);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">assertEquals(</span><span class=\"pl-smi x\">InnerAggregate</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class, </span>alias<span class=\"pl-k\">.</span>child()<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getClass()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertTrue(</span>alias<span class=\"pl-k\">.</span>child()<span class=\"x x-first\"> </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x x-last\">InnerAggregate</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "astefan", "createdAt": "2020-12-03T08:35:39Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());\n+        Aggregate p = (Aggregate) optimizedPlan; \n+        assertEquals(1, p.aggregates().size());\n+        assertEquals(Alias.class, p.aggregates().get(0).getClass());\n+        Alias alias = (Alias) p.aggregates().get(0);\n+        assertEquals(InnerAggregate.class, alias.child().getClass());", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDc5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534924799", "body": "```suggestion\r\n        assertTrue(optimizedPlan instanceof Aggregate);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(Aggregate.class, optimizedPlan.getClass());\n          \n          \n            \n                    assertTrue(optimizedPlan instanceof Aggregate);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">assertEquals(</span><span class=\"pl-smi x\">Aggregate</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class, </span>optimizedPlan<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getClass()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertTrue(</span>optimizedPlan<span class=\"x x-first\"> </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x x-last\">Aggregate</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "astefan", "createdAt": "2020-12-03T08:36:47Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI1MzQ3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r535253476", "bodyText": "We have a mix of those assertions, I wouldn't mind keeping it as is.", "author": "matriv", "createdAt": "2020-12-03T14:05:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNDc5OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNTUxNw==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534925517", "body": "```suggestion\r\n        assertEquals(sum, ((InnerAggregate) alias.child()).inner());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(sum, ((InnerAggregate)alias.child()).inner());\n          \n          \n            \n                    assertEquals(sum, ((InnerAggregate) alias.child()).inner());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertEquals(sum, ((<span class=\"pl-smi\">InnerAggregate</span>)alias<span class=\"pl-k\">.</span>child())<span class=\"pl-k\">.</span>inner());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertEquals(sum, ((<span class=\"pl-smi\">InnerAggregate</span>)<span class=\"x x-first x-last\"> </span>alias<span class=\"pl-k\">.</span>child())<span class=\"pl-k\">.</span>inner());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "astefan", "createdAt": "2020-12-03T08:37:21Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());\n+        Aggregate p = (Aggregate) optimizedPlan; \n+        assertEquals(1, p.aggregates().size());\n+        assertEquals(Alias.class, p.aggregates().get(0).getClass());\n+        Alias alias = (Alias) p.aggregates().get(0);\n+        assertEquals(InnerAggregate.class, alias.child().getClass());\n+        assertEquals(sum, ((InnerAggregate)alias.child()).inner());", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNjI1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r534926256", "body": "```suggestion\r\n        assertTrue(optimizedPlan instanceof Aggregate);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(Aggregate.class, optimizedPlan.getClass());\n          \n          \n            \n                    assertTrue(optimizedPlan instanceof Aggregate);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first\">assertEquals(</span><span class=\"pl-smi x\">Aggregate</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">class, </span>optimizedPlan<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getClass()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertTrue(</span>optimizedPlan<span class=\"x x-first\"> </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x x-last\">Aggregate</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "astefan", "createdAt": "2020-12-03T08:37:56Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());\n+        Aggregate p = (Aggregate) optimizedPlan; \n+        assertEquals(1, p.aggregates().size());\n+        assertEquals(Alias.class, p.aggregates().get(0).getClass());\n+        Alias alias = (Alias) p.aggregates().get(0);\n+        assertEquals(InnerAggregate.class, alias.child().getClass());\n+        assertEquals(sum, ((InnerAggregate)alias.child()).inner());\n+    }\n+\n+    /**\n+     * Once the bug is fixed, the above {@link OptimizerTests#testSumIsReplacedWithStats()} should be\n+     * invalid and should be deleted, and the test below should apply.\n+     */\n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/45251\")\n+    public void testSumIsNotReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+\n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+\n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertEquals(Aggregate.class, optimizedPlan.getClass());", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQxNzQ3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r535417473", "body": "Class comment sound sit before the class declaration", "bodyText": "Class comment sound sit before the class declaration", "bodyHTML": "<p dir=\"auto\">Class comment sound sit before the class declaration</p>", "author": "costin", "createdAt": "2020-12-03T17:03:45Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -983,6 +984,37 @@ public LogicalPlan apply(LogicalPlan p) {\n         }\n     }\n \n+    static class ReplaceSumWithStats extends OptimizerBasicRule {\n+        // this is a workaround for the https://github.com/elastic/elasticsearch/issues/45251 issue", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyMDM4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r535420382", "body": "Minor adjustment - to avoid having two return staments do the transformation if the list is non-empty and assign that to the plan\n\n```\nif (statsPerField.isEmpty() == false) {\n   plan = plan.transformExpression()\n}\n\nreturn plan;\n```", "bodyText": "Minor adjustment - to avoid having two return staments do the transformation if the list is non-empty and assign that to the plan\nif (statsPerField.isEmpty() == false) {\n   plan = plan.transformExpression()\n}\n\nreturn plan;", "bodyHTML": "<p dir=\"auto\">Minor adjustment - to avoid having two return staments do the transformation if the list is non-empty and assign that to the plan</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (statsPerField.isEmpty() == false) {\n   plan = plan.transformExpression()\n}\n\nreturn plan;\n\"><pre><code>if (statsPerField.isEmpty() == false) {\n   plan = plan.transformExpression()\n}\n\nreturn plan;\n</code></pre></div>", "author": "costin", "createdAt": "2020-12-03T17:06:38Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -983,6 +984,37 @@ public LogicalPlan apply(LogicalPlan p) {\n         }\n     }\n \n+    static class ReplaceSumWithStats extends OptimizerBasicRule {\n+        // this is a workaround for the https://github.com/elastic/elasticsearch/issues/45251 issue\n+        // should be removed as soon as the issue is fixed\n+        // NOTE: this rule should always be applied AFTER the ReplaceAggsWithStats rule\n+\n+        @Override public LogicalPlan apply(LogicalPlan plan) {\n+            final Map<Expression, Stats> statsPerField = new LinkedHashMap<>();\n+            \n+            plan.forEachExpressionsUp(e -> {\n+                if (e instanceof Sum) {\n+                    statsPerField.computeIfAbsent(((Sum) e).field(), field -> {\n+                        Source source = new Source(field.sourceLocation(), \"STATS(\" + field.sourceText() + \")\");\n+                        return new Stats(source, field);\n+                    });\n+                }\n+            });\n+            \n+            if (statsPerField.isEmpty()) {", "originalCommit": "d2ba958dab02c599527308be755fc0c89c9283e3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2381ca0b75817895c97c55572bbc053fbd573cd1", "url": "https://github.com/elastic/elasticsearch/commit/2381ca0b75817895c97c55572bbc053fbd573cd1", "message": "PR suggestions", "committedDate": "2020-12-07T22:03:29Z", "type": "commit"}, {"oid": "25fd2f036be25c03b0e1f32778682a653e32ef97", "url": "https://github.com/elastic/elasticsearch/commit/25fd2f036be25c03b0e1f32778682a653e32ef97", "message": "Merge remote-tracking branch 'origin/master' into fix/sum-null", "committedDate": "2020-12-07T22:04:39Z", "type": "commit"}, {"oid": "ebe06e8ba86d7ab7ec567108da31207578972591", "url": "https://github.com/elastic/elasticsearch/commit/ebe06e8ba86d7ab7ec567108da31207578972591", "message": "Minor test fixes", "committedDate": "2020-12-07T22:30:15Z", "type": "commit"}, {"oid": "89987b13ed981098bddff7d7968a05448172280a", "url": "https://github.com/elastic/elasticsearch/commit/89987b13ed981098bddff7d7968a05448172280a", "message": "Merge remote-tracking branch 'origin/master' into fix/sum-null", "committedDate": "2020-12-07T22:32:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyOTc4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r538229782", "body": "I find this comment confusing.\r\nThis PR is a fix for https://github.com/elastic/elasticsearch/issues/45251 itself due to an issue in Elasticsearch not SQL.\r\nOnce the issue in Elasticsearch is fixed the workaround in QL won't be needed. Pointing to the SQL issue itself asking for the workaround is incorrect.", "bodyText": "I find this comment confusing.\nThis PR is a fix for #45251 itself due to an issue in Elasticsearch not SQL.\nOnce the issue in Elasticsearch is fixed the workaround in QL won't be needed. Pointing to the SQL issue itself asking for the workaround is incorrect.", "bodyHTML": "<p dir=\"auto\">I find this comment confusing.<br>\nThis PR is a fix for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"477490690\" data-permission-text=\"Title is private\" data-url=\"https://github.com/elastic/elasticsearch/issues/45251\" data-hovercard-type=\"issue\" data-hovercard-url=\"/elastic/elasticsearch/issues/45251/hovercard\" href=\"https://github.com/elastic/elasticsearch/issues/45251\">#45251</a> itself due to an issue in Elasticsearch not SQL.<br>\nOnce the issue in Elasticsearch is fixed the workaround in QL won't be needed. Pointing to the SQL issue itself asking for the workaround is incorrect.</p>", "author": "costin", "createdAt": "2020-12-08T10:40:43Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -983,6 +984,38 @@ public LogicalPlan apply(LogicalPlan p) {\n         }\n     }\n \n+    // This is a workaround for the https://github.com/elastic/elasticsearch/issues/45251 issue\n+    // Should be removed as soon as the above issue is fixed\n+    // NOTE: this rule should always be applied AFTER the ReplaceAggsWithStats rule", "originalCommit": "89987b13ed981098bddff7d7968a05448172280a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU2MDI2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r538560262", "bodyText": "I intended to keep #45251 open after this PR and only close it after the sum aggregations can differentiate between SUM(all zeroes) and SUM(all nulls). Reworded the comment to make this more obvious.", "author": "palesz", "createdAt": "2020-12-08T16:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIyOTc4Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIzMzQwMA==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r538233400", "body": "Incorrect issue referenced - this PR provides the workaround in SQL for ES. Once the issue in ES gets solved, this test can be enabled.", "bodyText": "Incorrect issue referenced - this PR provides the workaround in SQL for ES. Once the issue in ES gets solved, this test can be enabled.", "bodyHTML": "<p dir=\"auto\">Incorrect issue referenced - this PR provides the workaround in SQL for ES. Once the issue in ES gets solved, this test can be enabled.</p>", "author": "costin", "createdAt": "2020-12-08T10:45:26Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/optimizer/OptimizerTests.java", "diffHunk": "@@ -1023,4 +1022,43 @@ public void testReplaceAttributesWithTarget() {\n         gt = (GreaterThan) and.left();\n         assertEquals(a, gt.left());\n     }\n+\n+    //\n+    // ReplaceSumWithStats rule\n+    //\n+    public void testSumIsReplacedWithStats() {\n+        FieldAttribute fa = getFieldAttribute();\n+        Sum sum = new Sum(EMPTY, fa);\n+        \n+        Alias sumAlias = new Alias(EMPTY, \"sum\", sum);\n+        \n+        Aggregate aggregate = new Aggregate(EMPTY, FROM(), emptyList(), asList(sumAlias));\n+        LogicalPlan optimizedPlan = new Optimizer().optimize(aggregate);\n+        assertTrue(optimizedPlan instanceof Aggregate);\n+        Aggregate p = (Aggregate) optimizedPlan; \n+        assertEquals(1, p.aggregates().size());\n+        assertTrue(p.aggregates().get(0) instanceof Alias);\n+        Alias alias = (Alias) p.aggregates().get(0);\n+        assertTrue(alias.child() instanceof InnerAggregate);\n+        assertEquals(sum, ((InnerAggregate) alias.child()).inner());\n+    }\n+\n+    /**\n+     * Once the bug is fixed, the above {@link OptimizerTests#testSumIsReplacedWithStats()} should be\n+     * invalid and should be deleted, and the test below should apply.\n+     */\n+    @AwaitsFix(bugUrl = \"https://github.com/elastic/elasticsearch/issues/45251\")", "originalCommit": "89987b13ed981098bddff7d7968a05448172280a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODIzMzc1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r538233759", "body": "Same comment here regarding the Github issue.", "bodyText": "Same comment here regarding the Github issue.", "bodyHTML": "<p dir=\"auto\">Same comment here regarding the Github issue.</p>", "author": "costin", "createdAt": "2020-12-08T10:45:54Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/planner/QueryTranslatorTests.java", "diffHunk": "@@ -2443,4 +2443,19 @@ public void testPercentileOptimization() {\n         test.accept(\"PERCENTILE\", p -> ((PercentilesAggregationBuilder)p).percentiles());\n         test.accept(\"PERCENTILE_RANK\", p -> ((PercentileRanksAggregationBuilder)p).values());\n     }\n+\n+    // workaround for the https://github.com/elastic/elasticsearch/issues/45251 issue", "originalCommit": "89987b13ed981098bddff7d7968a05448172280a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "051d11cac05342dce4170c4a7180a3fe050c2d95", "url": "https://github.com/elastic/elasticsearch/commit/051d11cac05342dce4170c4a7180a3fe050c2d95", "message": "PR suggestions", "committedDate": "2020-12-08T16:17:05Z", "type": "commit"}, {"oid": "92c348287bbb1b3b268840ae0b2a9d5996acc13d", "url": "https://github.com/elastic/elasticsearch/commit/92c348287bbb1b3b268840ae0b2a9d5996acc13d", "message": "Merge remote-tracking branch 'origin/master' into fix/sum-null", "committedDate": "2020-12-08T16:17:18Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwODgyOA==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r539108828", "body": "Not related to this PR, but I was wondering: most `forEachExpressionsUp/Down` methods invocations do pattern matching as first thing. Wouldn't an alternative method similar to `Node#forEachUp/Down` taking a type token make sense?", "bodyText": "Not related to this PR, but I was wondering: most forEachExpressionsUp/Down methods invocations do pattern matching as first thing. Wouldn't an alternative method similar to Node#forEachUp/Down taking a type token make sense?", "bodyHTML": "<p dir=\"auto\">Not related to this PR, but I was wondering: most <code>forEachExpressionsUp/Down</code> methods invocations do pattern matching as first thing. Wouldn't an alternative method similar to <code>Node#forEachUp/Down</code> taking a type token make sense?</p>", "author": "bpintea", "createdAt": "2020-12-09T08:36:59Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/optimizer/Optimizer.java", "diffHunk": "@@ -983,6 +984,39 @@ public LogicalPlan apply(LogicalPlan p) {\n         }\n     }\n \n+    // This class is a workaround for the SUM(all zeros) = NULL issue raised in https://github.com/elastic/elasticsearch/issues/45251 and\n+    // should be removed as soon as root cause is fixed and the sum aggregation results can differentiate between SUM(all zeroes) \n+    // and SUM(all nulls)\n+    // NOTE: this rule should always be applied AFTER the ReplaceAggsWithStats rule\n+    static class ReplaceSumWithStats extends OptimizerBasicRule {\n+        \n+        @Override \n+        public LogicalPlan apply(LogicalPlan plan) {\n+            final Map<Expression, Stats> statsPerField = new LinkedHashMap<>();\n+            \n+            plan.forEachExpressionsUp(e -> {", "originalCommit": "92c348287bbb1b3b268840ae0b2a9d5996acc13d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIxMzQyNw==", "url": "https://github.com/elastic/elasticsearch/pull/65796#discussion_r539213427", "bodyText": "The issue lays with collections. Expressions are not just used as individual nodes but also as properties. Take Project(List<NamedExpression> projections) - this led to issues in not only filtering but in reconstructing said collections with the new expressions while preserving their types. See the comment in LogicalPlan.doTransformExpression\nIt would be nicer to do:\nplan.forEachExpressionsUp(s -> , Sum.class) instead of doing the instanceof check however the issue right now is preserving the type information before and after transformation without causing a CCE.\nThat said, I plan to take another look at this to see whether it can be sorted out.", "author": "costin", "createdAt": "2020-12-09T11:05:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwODgyOA=="}], "type": "inlineReview"}]}