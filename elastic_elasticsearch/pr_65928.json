{"pr_number": 65928, "pr_title": "[Transform] Always apply range query in continuous mode.", "pr_author": "przemekwitek", "pr_createdAt": "2020-12-07T09:51:42Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65928", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5ODUzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65928#discussion_r537398531", "body": "`config.getSyncConfig()` is `null` for batch mode. Seems to make sense to\r\n\r\n- branch based on batch vs. continuous\r\n- add filter `changeCollector.buildFilterQuery` only if `nextCheckpoint.getCheckpoint() > 1`", "bodyText": "config.getSyncConfig() is null for batch mode. Seems to make sense to\n\nbranch based on batch vs. continuous\nadd filter changeCollector.buildFilterQuery only if nextCheckpoint.getCheckpoint() > 1", "bodyHTML": "<p dir=\"auto\"><code>config.getSyncConfig()</code> is <code>null</code> for batch mode. Seems to make sense to</p>\n<ul dir=\"auto\">\n<li>branch based on batch vs. continuous</li>\n<li>add filter <code>changeCollector.buildFilterQuery</code> only if <code>nextCheckpoint.getCheckpoint() &gt; 1</code></li>\n</ul>", "author": "hendrikmuhs", "createdAt": "2020-12-07T10:34:34Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -875,23 +875,14 @@ private SearchSourceBuilder buildUpdateQuery(SearchSourceBuilder sourceBuilder)\n \n         function.buildSearchQuery(sourceBuilder, position != null ? position.getIndexerPosition() : null, pageSize);\n \n-        // if its either the 1st run or not continuous, do not apply extra filters\n-        if (nextCheckpoint.getCheckpoint() == 1 || isContinuous() == false) {\n-            sourceBuilder.query(queryBuilder);\n-            logger.debug(() -> new ParameterizedMessage(\"[{}] Querying for data: {}\", getJobId(), sourceBuilder));\n-\n-            return sourceBuilder;\n-        }\n-\n-        BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder)\n-            .filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));\n-\n-        QueryBuilder filter = changeCollector != null\n-            ? changeCollector.buildFilterQuery(lastCheckpoint.getTimeUpperBound(), nextCheckpoint.getTimeUpperBound())\n-            : null;\n-\n-        if (filter != null) {\n-            filteredQuery.filter(filter);\n+        BoolQueryBuilder filteredQuery =\n+            new BoolQueryBuilder()\n+                .filter(queryBuilder)\n+                .filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));", "originalCommit": "252dc4ec1e916d4c6723eefc9d4485070353dd64", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODExNDgwNA==", "url": "https://github.com/elastic/elasticsearch/pull/65928#discussion_r538114804", "bodyText": "Argh, this PR is missing one local commit :/\nOf course, that's how it should work.", "author": "przemekwitek", "createdAt": "2020-12-08T07:58:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5ODUzMQ=="}], "type": "inlineReview"}, {"oid": "7bb46df4d119b35bcb267eaddfb3ad786a2e008c", "url": "https://github.com/elastic/elasticsearch/commit/7bb46df4d119b35bcb267eaddfb3ad786a2e008c", "message": "Always apply range query in continuous mode.", "committedDate": "2020-12-08T07:59:27Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyNDU4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/65928#discussion_r538124585", "body": "for batch transforms this creates an unnecessary bool clause.\r\n\r\nwhat about:\r\n\r\n```\r\nQueryBuilder queryBuilder = config.getSource().getQueryConfig().getQuery();\r\n\r\nif (isContinuous()) {\r\n    BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder).filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));\r\n\r\n    // Only apply extra filter if its the subsequent run of the continuous transform\r\n    if (nextCheckpoint.getCheckpoint() > 1 && changeCollector != null) {\r\n        filteredQuery.filter(changeCollector.buildFilterQuery(lastCheckpoint.getTimeUpperBound(), nextCheckpoint.getTimeUpperBound()));\r\n    }\r\n    \r\n    queryBuilder = filteredQuery;\r\n}\r\n\r\n...\r\n\r\nsourceBuilder.query(queryBuilder);\r\n```", "bodyText": "for batch transforms this creates an unnecessary bool clause.\nwhat about:\nQueryBuilder queryBuilder = config.getSource().getQueryConfig().getQuery();\n\nif (isContinuous()) {\n    BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder).filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));\n\n    // Only apply extra filter if its the subsequent run of the continuous transform\n    if (nextCheckpoint.getCheckpoint() > 1 && changeCollector != null) {\n        filteredQuery.filter(changeCollector.buildFilterQuery(lastCheckpoint.getTimeUpperBound(), nextCheckpoint.getTimeUpperBound()));\n    }\n    \n    queryBuilder = filteredQuery;\n}\n\n...\n\nsourceBuilder.query(queryBuilder);", "bodyHTML": "<p dir=\"auto\">for batch transforms this creates an unnecessary bool clause.</p>\n<p dir=\"auto\">what about:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"QueryBuilder queryBuilder = config.getSource().getQueryConfig().getQuery();\n\nif (isContinuous()) {\n    BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder).filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));\n\n    // Only apply extra filter if its the subsequent run of the continuous transform\n    if (nextCheckpoint.getCheckpoint() &gt; 1 &amp;&amp; changeCollector != null) {\n        filteredQuery.filter(changeCollector.buildFilterQuery(lastCheckpoint.getTimeUpperBound(), nextCheckpoint.getTimeUpperBound()));\n    }\n    \n    queryBuilder = filteredQuery;\n}\n\n...\n\nsourceBuilder.query(queryBuilder);\"><pre><code>QueryBuilder queryBuilder = config.getSource().getQueryConfig().getQuery();\n\nif (isContinuous()) {\n    BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder).filter(config.getSyncConfig().getRangeQuery(nextCheckpoint));\n\n    // Only apply extra filter if its the subsequent run of the continuous transform\n    if (nextCheckpoint.getCheckpoint() &gt; 1 &amp;&amp; changeCollector != null) {\n        filteredQuery.filter(changeCollector.buildFilterQuery(lastCheckpoint.getTimeUpperBound(), nextCheckpoint.getTimeUpperBound()));\n    }\n    \n    queryBuilder = filteredQuery;\n}\n\n...\n\nsourceBuilder.query(queryBuilder);\n</code></pre></div>", "author": "hendrikmuhs", "createdAt": "2020-12-08T08:14:18Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/TransformIndexer.java", "diffHunk": "@@ -875,23 +875,15 @@ private SearchSourceBuilder buildUpdateQuery(SearchSourceBuilder sourceBuilder)\n \n         function.buildSearchQuery(sourceBuilder, position != null ? position.getIndexerPosition() : null, pageSize);\n \n-        // if its either the 1st run or not continuous, do not apply extra filters\n-        if (nextCheckpoint.getCheckpoint() == 1 || isContinuous() == false) {\n-            sourceBuilder.query(queryBuilder);\n-            logger.debug(() -> new ParameterizedMessage(\"[{}] Querying for data: {}\", getJobId(), sourceBuilder));\n+        BoolQueryBuilder filteredQuery = new BoolQueryBuilder().filter(queryBuilder);", "originalCommit": "7bb46df4d119b35bcb267eaddfb3ad786a2e008c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMzNDcxMA==", "url": "https://github.com/elastic/elasticsearch/pull/65928#discussion_r538334710", "bodyText": "Good spot!\nDone.", "author": "przemekwitek", "createdAt": "2020-12-08T12:54:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODEyNDU4NQ=="}], "type": "inlineReview"}, {"oid": "4410a046dcece8f0434f722f02ac277c84a58a83", "url": "https://github.com/elastic/elasticsearch/commit/4410a046dcece8f0434f722f02ac277c84a58a83", "message": "Always apply range query in continuous mode.", "committedDate": "2020-12-08T12:46:07Z", "type": "commit"}, {"oid": "5b43c4a771a65eff032fac7408e9b8742020a6b6", "url": "https://github.com/elastic/elasticsearch/commit/5b43c4a771a65eff032fac7408e9b8742020a6b6", "message": "Apply review comment", "committedDate": "2020-12-08T12:54:18Z", "type": "commit"}, {"oid": "5b43c4a771a65eff032fac7408e9b8742020a6b6", "url": "https://github.com/elastic/elasticsearch/commit/5b43c4a771a65eff032fac7408e9b8742020a6b6", "message": "Apply review comment", "committedDate": "2020-12-08T12:54:18Z", "type": "forcePushed"}, {"oid": "ddcf4765877cf0b268410d8aa7cccff4a4c6f049", "url": "https://github.com/elastic/elasticsearch/commit/ddcf4765877cf0b268410d8aa7cccff4a4c6f049", "message": "Make sure filter query is not null before adding it to bool query", "committedDate": "2020-12-08T14:10:14Z", "type": "commit"}]}