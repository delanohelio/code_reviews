{"pr_number": 54264, "pr_title": "assertBusy in XPackRestIT#awaitCallApi", "pr_author": "DaveCTurner", "pr_createdAt": "2020-03-26T12:13:13Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54264", "timeline": [{"oid": "4c2f527fb60a362e7af61896818e7f9ed0ac55ca", "url": "https://github.com/elastic/elasticsearch/commit/4c2f527fb60a362e7af61896818e7f9ed0ac55ca", "message": "assertBusy in XPackRestIT#awaitCallApi\n\nRetries in this method were lost in #45794. This commit reinstates them.", "committedDate": "2020-03-26T12:11:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyODA2OA==", "url": "https://github.com/elastic/elasticsearch/pull/54264#discussion_r398528068", "body": "Would it work to just do the following, since `assertBusy` only re-runs the block if it throws an exception?\r\n\r\n```java\r\nassertBusy(() -> {\r\n    // The actual method call that sends the API requests returns a Future, but we immediately\r\n    // call .get() on it so there's no need for this method to do any other awaiting.\r\n    ClientYamlTestResponse response = callApi(apiName, params, bodies, getApiCallHeaders());\r\n    assertEquals(HttpStatus.SC_OK, response.get().getStatusCode());\r\n    success.apply(response);\r\n});\r\n```", "bodyText": "Would it work to just do the following, since assertBusy only re-runs the block if it throws an exception?\nassertBusy(() -> {\n    // The actual method call that sends the API requests returns a Future, but we immediately\n    // call .get() on it so there's no need for this method to do any other awaiting.\n    ClientYamlTestResponse response = callApi(apiName, params, bodies, getApiCallHeaders());\n    assertEquals(HttpStatus.SC_OK, response.get().getStatusCode());\n    success.apply(response);\n});", "bodyHTML": "<p dir=\"auto\">Would it work to just do the following, since <code>assertBusy</code> only re-runs the block if it throws an exception?</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"assertBusy(() -&gt; {\n    // The actual method call that sends the API requests returns a Future, but we immediately\n    // call .get() on it so there's no need for this method to do any other awaiting.\n    ClientYamlTestResponse response = callApi(apiName, params, bodies, getApiCallHeaders());\n    assertEquals(HttpStatus.SC_OK, response.get().getStatusCode());\n    success.apply(response);\n});\n\"><pre>assertBusy(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> The actual method call that sends the API requests returns a Future, but we immediately</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> call .get() on it so there's no need for this method to do any other awaiting.</span>\n    <span class=\"pl-smi\">ClientYamlTestResponse</span> response <span class=\"pl-k\">=</span> callApi(apiName, params, bodies, getApiCallHeaders());\n    assertEquals(<span class=\"pl-smi\">HttpStatus</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SC_OK</span>, response<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getStatusCode());\n    success<span class=\"pl-k\">.</span>apply(response);\n});</pre></div>", "author": "pugnascotia", "createdAt": "2020-03-26T12:20:10Z", "path": "x-pack/plugin/src/test/java/org/elasticsearch/xpack/test/rest/XPackRestIT.java", "diffHunk": "@@ -229,11 +230,14 @@ private void awaitCallApi(String apiName,\n                               CheckedFunction<ClientYamlTestResponse, Boolean, IOException> success,\n                               Supplier<String> error) {\n         try {\n-            // The actual method call that sends the API requests returns a Future, but we immediately\n-            // call .get() on it so there's no need for this method to do any other awaiting.\n-            ClientYamlTestResponse response = callApi(apiName, params, bodies, getApiCallHeaders());\n-            assertEquals(response.getStatusCode(), HttpStatus.SC_OK);\n-            success.apply(response);\n+            final AtomicReference<ClientYamlTestResponse> response = new AtomicReference<>();\n+            assertBusy(() -> {\n+                // The actual method call that sends the API requests returns a Future, but we immediately\n+                // call .get() on it so there's no need for this method to do any other awaiting.\n+                response.set(callApi(apiName, params, bodies, getApiCallHeaders()));\n+                assertEquals(HttpStatus.SC_OK, response.get().getStatusCode());\n+            });\n+            success.apply(response.get());", "originalCommit": "4c2f527fb60a362e7af61896818e7f9ed0ac55ca", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcwMTMxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54264#discussion_r398701319", "bodyText": "I considered that, but I didn't want to swallow any assertion errors thrown by success.apply(), which today may call ObjectPath#evaluate which could well assert things in future even if it doesn't today.", "author": "DaveCTurner", "createdAt": "2020-03-26T16:15:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyODA2OA=="}], "type": "inlineReview"}]}