{"pr_number": 66167, "pr_title": "[ML] Report cause when datafeed extraction encounters error", "pr_author": "dimitris-athanasiou", "pr_createdAt": "2020-12-10T13:37:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66167", "timeline": [{"oid": "c72a8dd490b594997cee05b0525f86ce77a04843", "url": "https://github.com/elastic/elasticsearch/commit/c72a8dd490b594997cee05b0525f86ce77a04843", "message": "[ML] Report cause when datafeed extraction encounters error\n\nWhen a datafeed encounters errors extracting data, often\nthe error is an instance of `SearchPhaseExecutionException`.\nIn that case the top level error message is `Partial shards failure`\nwhich is not very informative.\n\nThis commit refactors a transform util method from\n`ExceptionRootCauseFinder`, which unwraps exceptions with special\nhandling for `SearchPhaseExecutionException`, and makes use of\nit from datafeed `ProblemTracker` in order to provide a more\nuseful error message.", "committedDate": "2020-12-10T12:57:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE4ODc0NA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540188744", "body": "```suggestion\r\n                LOGGER.error(new ParameterizedMessage(\"[{}] error while extracting data\", jobId), e);\r\n```\r\nGreat to log the full trace now!!!", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.error(\"[\" + jobId + \"] error while extracting data\", e);\n          \n          \n            \n                            LOGGER.error(new ParameterizedMessage(\"[{}] error while extracting data\", jobId), e);\n          \n      \n    \n    \n  \n\nGreat to log the full trace now!!!", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">[</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> jobId </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>] error while extracting data<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">ParameterizedMessage</span><span class=\"x\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">[{}</span>] error while extracting data<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, jobId)</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Great to log the full trace now!!!</p>", "author": "benwtrent", "createdAt": "2020-12-10T13:57:36Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -318,7 +320,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n             try {\n                 extractedData = dataExtractor.next();\n             } catch (Exception e) {\n-                LOGGER.debug(\"[\" + jobId + \"] error while extracting data\", e);\n+                LOGGER.error(\"[\" + jobId + \"] error while extracting data\", e);", "originalCommit": "c72a8dd490b594997cee05b0525f86ce77a04843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE4ODg5OA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540188898", "body": "```suggestion\r\n                LOGGER.error(new ParameterizedMessage(\"[{}] error while posting data\", jobId), e);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.error(\"[\" + jobId + \"] error while posting data\", e);\n          \n          \n            \n                            LOGGER.error(new ParameterizedMessage(\"[{}] error while posting data\", jobId), e);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"x x-first x-last\">    </span><span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">[</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> jobId </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x x-last\">\"</span>] error while posting data<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">ParameterizedMessage</span><span class=\"x\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\">[{}</span>] error while posting data<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, jobId)</span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-12-10T13:57:50Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -350,7 +352,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n                     if (isIsolated) {\n                         return;\n                     }\n-                    LOGGER.debug(\"[\" + jobId + \"] error while posting data\", e);\n+                    LOGGER.error(\"[\" + jobId + \"] error while posting data\", e);", "originalCommit": "c72a8dd490b594997cee05b0525f86ce77a04843", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540190219", "body": "Anyway to add the rest of the shard failures as suppressed?", "bodyText": "Anyway to add the rest of the shard failures as suppressed?", "bodyHTML": "<p dir=\"auto\">Anyway to add the rest of the shard failures as suppressed?</p>", "author": "benwtrent", "createdAt": "2020-12-10T13:59:35Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/ExceptionsHelper.java", "diffHunk": "@@ -112,7 +113,29 @@ public static String shardFailuresToErrorMsg(String jobId, ShardSearchFailure[]\n         return requireNonNull(obj, paramName.getPreferredName());\n     }\n \n+    /**\n+     * Unwrap the exception stack and return the most likely cause.\n+     * This method has special handling for {@link SearchPhaseExecutionException}\n+     * where it returns the cause of the first shard failure.\n+     *\n+     * @param t raw Throwable\n+     * @return unwrapped throwable if possible\n+     */\n     public static Throwable unwrapCause(Throwable t) {\n-       return org.elasticsearch.ExceptionsHelper.unwrapCause(t);\n+        // circuit breaking exceptions are at the bottom\n+        Throwable unwrappedThrowable = org.elasticsearch.ExceptionsHelper.unwrapCause(t);\n+\n+        if (unwrappedThrowable instanceof SearchPhaseExecutionException) {\n+            SearchPhaseExecutionException searchPhaseException = (SearchPhaseExecutionException) unwrappedThrowable;\n+            for (ShardSearchFailure shardFailure : searchPhaseException.shardFailures()) {\n+                Throwable unwrappedShardFailure = org.elasticsearch.ExceptionsHelper.unwrapCause(shardFailure.getCause());\n+\n+                if (unwrappedShardFailure instanceof ElasticsearchException) {\n+                    return unwrappedShardFailure;\n+                }\n+            }", "originalCommit": "c72a8dd490b594997cee05b0525f86ce77a04843", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5NDIyMg==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540194222", "bodyText": "Trying something like that can make the message unreadable. Note we're already logging the SearchPhaseExecutionException.\nI think there are 2 scenarios:\n\nthe search fails because of some user error (e.g. time field doesn't exist in some index). In this scenario there will be a single cause and we'll bubble it up.\nthe search fails due to the cluster being unstable. Here, we will have many shard failures. I think in this scenario we'd have to look at the logs anyhow to debug what's happening.\n\nHaving said that, I'm open to suggestions if you see another way.", "author": "dimitris-athanasiou", "createdAt": "2020-12-10T14:05:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDIxOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIyMTk1Nw==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540221957", "bodyText": "I haven't explored this for search, but for indexing I use a similar method that tries to get the most important error. That means you could loop through the shard failures and get the most problematic one, e.g. IllegalArgumentException > RuntimeException, because the IAE is irrecoverable, the RE might just be a 429 (too manu requests).\nHaving that said: \"it depends\" on what you are aiming for with this", "author": "hendrikmuhs", "createdAt": "2020-12-10T14:41:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDIxOQ=="}], "type": "inlineReview"}, {"oid": "a28233a3ff5b8ae1c610bbed2eb4f15986778ac7", "url": "https://github.com/elastic/elasticsearch/commit/a28233a3ff5b8ae1c610bbed2eb4f15986778ac7", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-12-10T14:02:06Z", "type": "commit"}, {"oid": "0df275d681dd7222ad6c827178879efa1cc753bb", "url": "https://github.com/elastic/elasticsearch/commit/0df275d681dd7222ad6c827178879efa1cc753bb", "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java\n\nCo-authored-by: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-12-10T14:02:12Z", "type": "commit"}, {"oid": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "url": "https://github.com/elastic/elasticsearch/commit/944d19cf230c78f5b3b59efed86de3a4bad9abc5", "message": "Add missing import", "committedDate": "2020-12-10T14:08:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMDEzNA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540210134", "body": "I think this is a bad name as it collides with `org.elasticsearch.ExceptionsHelper.unwrapCause`\r\n\r\nNot saying `getRootCauseException` is a good one, maybe something that indicates the intent: unwrapping _search responses_, e.g. `unwrapSearchException` or `findSearchExceptionRootCause`.\r\n\r\nI think this method should _not_ become a general exception handling method, but _only_ for handling search errors. Otherwise the chances are high that code sharing lead to undesired bugs.\r\n\r\nFor that reason I think it would be good to move it out of the ml subpackage (despite this is just a logical but not technically limiting) into a more common area.\r\n\r\nTransform should use this without indirection.", "bodyText": "I think this is a bad name as it collides with org.elasticsearch.ExceptionsHelper.unwrapCause\nNot saying getRootCauseException is a good one, maybe something that indicates the intent: unwrapping search responses, e.g. unwrapSearchException or findSearchExceptionRootCause.\nI think this method should not become a general exception handling method, but only for handling search errors. Otherwise the chances are high that code sharing lead to undesired bugs.\nFor that reason I think it would be good to move it out of the ml subpackage (despite this is just a logical but not technically limiting) into a more common area.\nTransform should use this without indirection.", "bodyHTML": "<p dir=\"auto\">I think this is a bad name as it collides with <code>org.elasticsearch.ExceptionsHelper.unwrapCause</code></p>\n<p dir=\"auto\">Not saying <code>getRootCauseException</code> is a good one, maybe something that indicates the intent: unwrapping <em>search responses</em>, e.g. <code>unwrapSearchException</code> or <code>findSearchExceptionRootCause</code>.</p>\n<p dir=\"auto\">I think this method should <em>not</em> become a general exception handling method, but <em>only</em> for handling search errors. Otherwise the chances are high that code sharing lead to undesired bugs.</p>\n<p dir=\"auto\">For that reason I think it would be good to move it out of the ml subpackage (despite this is just a logical but not technically limiting) into a more common area.</p>\n<p dir=\"auto\">Transform should use this without indirection.</p>", "author": "hendrikmuhs", "createdAt": "2020-12-10T14:25:58Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/utils/ExceptionsHelper.java", "diffHunk": "@@ -112,7 +113,29 @@ public static String shardFailuresToErrorMsg(String jobId, ShardSearchFailure[]\n         return requireNonNull(obj, paramName.getPreferredName());\n     }\n \n+    /**\n+     * Unwrap the exception stack and return the most likely cause.\n+     * This method has special handling for {@link SearchPhaseExecutionException}\n+     * where it returns the cause of the first shard failure.\n+     *\n+     * @param t raw Throwable\n+     * @return unwrapped throwable if possible\n+     */\n     public static Throwable unwrapCause(Throwable t) {", "originalCommit": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxODkyNw==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540218927", "bodyText": "It is basically an unwrapCause that also handles SearchPhaseExecutionException. The problem with SearchPhaseExecutionException is that it doesn't implement ElasticsearchWrapperException. Let's discuss this further offline.", "author": "dimitris-athanasiou", "createdAt": "2020-12-10T14:37:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMDEzNA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MzU1NA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r542473554", "bodyText": "OK, I have refactored the code to keep a method named findSearchExceptionRootCause instead of replacing unwrapCause.", "author": "dimitris-athanasiou", "createdAt": "2020-12-14T15:27:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMDEzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxMjEwOA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540212108", "body": "see my 1st comment, this makes no sense to me", "bodyText": "see my 1st comment, this makes no sense to me", "bodyHTML": "<p dir=\"auto\">see my 1st comment, this makes no sense to me</p>", "author": "hendrikmuhs", "createdAt": "2020-12-10T14:28:27Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/utils/ExceptionsHelper.java", "diffHunk": "@@ -19,4 +19,11 @@\n         }\n         return obj;\n     }\n+\n+    /**\n+     * @see org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper#unwrapCause(Throwable)\n+     */\n+    public static Throwable unwrapCause(Throwable t) {\n+        return org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper.unwrapCause(t);", "originalCommit": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDA3OA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540214078", "body": "now that you made it an error: should it be audited as well?", "bodyText": "now that you made it an error: should it be audited as well?", "bodyHTML": "<p dir=\"auto\">now that you made it an error: should it be audited as well?</p>", "author": "hendrikmuhs", "createdAt": "2020-12-10T14:30:57Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -318,7 +321,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n             try {\n                 extractedData = dataExtractor.next();\n             } catch (Exception e) {\n-                LOGGER.debug(\"[\" + jobId + \"] error while extracting data\", e);\n+                LOGGER.error(new ParameterizedMessage(\"[{}] error while extracting data\", jobId), e);", "originalCommit": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNjk3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540216976", "bodyText": "ProblemTracker makes sure this is audited", "author": "dimitris-athanasiou", "createdAt": "2020-12-10T14:34:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDA3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDIzNA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540214234", "body": "audit, too?", "bodyText": "audit, too?", "bodyHTML": "<p dir=\"auto\">audit, too?</p>", "author": "hendrikmuhs", "createdAt": "2020-12-10T14:31:09Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/datafeed/DatafeedJob.java", "diffHunk": "@@ -350,7 +353,7 @@ private void run(long start, long end, FlushJobAction.Request flushRequest) thro\n                     if (isIsolated) {\n                         return;\n                     }\n-                    LOGGER.debug(\"[\" + jobId + \"] error while posting data\", e);\n+                LOGGER.error(new ParameterizedMessage(\"[{}] error while posting data\", jobId), e);", "originalCommit": "944d19cf230c78f5b3b59efed86de3a4bad9abc5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNzAyNw==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r540217027", "bodyText": "ProblemTracker makes sure this is audited", "author": "dimitris-athanasiou", "createdAt": "2020-12-10T14:34:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIxNDIzNA=="}], "type": "inlineReview"}, {"oid": "3894a4951e84aa837beba089463174b3fa28b30d", "url": "https://github.com/elastic/elasticsearch/commit/3894a4951e84aa837beba089463174b3fa28b30d", "message": "Address review comments", "committedDate": "2020-12-14T15:26:17Z", "type": "commit"}, {"oid": "d2ed15141dbd38acce6bcb6737b05130acf78e78", "url": "https://github.com/elastic/elasticsearch/commit/d2ed15141dbd38acce6bcb6737b05130acf78e78", "message": "Merge branch 'master' into report-cause-when-datafeed-extraction-encounters-error", "committedDate": "2020-12-14T15:38:06Z", "type": "commit"}, {"oid": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60", "url": "https://github.com/elastic/elasticsearch/commit/33c8a7806a75d7a5cae4855b8a4a259f341f5e60", "message": "Fix failing tests", "committedDate": "2020-12-14T16:25:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNDA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r543134051", "body": "Is this cross-package dependency ok?\r\nI'd consider introducing `ExceptionsHelper` class under `org.elasticsearch.xpack.core.common` instead.", "bodyText": "Is this cross-package dependency ok?\nI'd consider introducing ExceptionsHelper class under org.elasticsearch.xpack.core.common instead.", "bodyHTML": "<p dir=\"auto\">Is this cross-package dependency ok?<br>\nI'd consider introducing <code>ExceptionsHelper</code> class under <code>org.elasticsearch.xpack.core.common</code> instead.</p>", "author": "przemekwitek", "createdAt": "2020-12-15T08:17:24Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/utils/ExceptionsHelper.java", "diffHunk": "@@ -19,4 +19,11 @@\n         }\n         return obj;\n     }\n+\n+    /**\n+     * @see org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper#findSearchExceptionRootCause(Throwable)\n+     */\n+    public static Throwable findSearchExceptionRootCause(Throwable t) {\n+        return org.elasticsearch.xpack.core.ml.utils.ExceptionsHelper.findSearchExceptionRootCause(t);", "originalCommit": "33c8a7806a75d7a5cae4855b8a4a259f341f5e60", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE0NzczMA==", "url": "https://github.com/elastic/elasticsearch/pull/66167#discussion_r543147730", "bodyText": "We discussed this with Hendrik. It's not great but harmless otherwise. Adding another ExceptionsHelper class is marginally worse. There is much to improve in our exceptions handling framework. I am going to raise an issue that once fixed should make this method unnecessary.", "author": "dimitris-athanasiou", "createdAt": "2020-12-15T08:38:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzNDA1MQ=="}], "type": "inlineReview"}]}