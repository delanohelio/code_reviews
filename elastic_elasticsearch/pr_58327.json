{"pr_number": 58327, "pr_title": "Validate alias operations don't target data streams", "pr_author": "andreidan", "pr_createdAt": "2020-06-18T13:51:24Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58327", "timeline": [{"oid": "72bef663465998b3e5c47cce86a043762023afd4", "url": "https://github.com/elastic/elasticsearch/commit/72bef663465998b3e5c47cce86a043762023afd4", "message": "Validate alias operations don't target data streams\n\nThis adds validation to make sure alias operations (add, remove, remove index)\ndon't target data streams or the backing indices.", "committedDate": "2020-06-18T13:50:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0OTI0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442249242", "body": "Minor error message suggestion -- I think \"aliases driven operations\" should be either \"alias-driven operations\" or just \"alias operations.\" I prefer the latter as it's simple and clear.\r\n", "bodyText": "Minor error message suggestion -- I think \"aliases driven operations\" should be either \"alias-driven operations\" or just \"alias operations.\" I prefer the latter as it's simple and clear.", "bodyHTML": "<p dir=\"auto\">Minor error message suggestion -- I think \"aliases driven operations\" should be either \"alias-driven operations\" or just \"alias operations.\" I prefer the latter as it's simple and clear.</p>", "author": "danhermann", "createdAt": "2020-06-18T14:01:05Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "diffHunk": "@@ -187,4 +189,13 @@ public ClusterState applyAliasActions(ClusterState currentState, Iterable<AliasA\n         }\n     }\n \n+    private void validateAliasTargetIsNotDSBackingIndex(ClusterState currentState, AliasAction action) {\n+        IndexAbstraction indexAbstraction = currentState.metadata().getIndicesLookup().get(action.getIndex());\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + action.getIndex() + \"] was not found\";\n+        if (indexAbstraction.getParentDataStream() != null) {\n+            throw new IllegalArgumentException(\"The provided index [ \" + action.getIndex()\n+                + \"] is a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                + \"]. data streams and their backing indices don't support aliases driven operations.\");", "originalCommit": "72bef663465998b3e5c47cce86a043762023afd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MTA2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442251063", "body": "Minor: We're inconsistent across the codebase in whether we capitalize our error messages, but I think we should be consistent within a single error message. In other words, either make \"The provided...\" lowercase or capitalize the second sentence:\r\n\r\n```suggestion\r\n                        + \"]. Data streams and their backing indices don't support aliases.\");\r\n```", "bodyText": "Minor: We're inconsistent across the codebase in whether we capitalize our error messages, but I think we should be consistent within a single error message. In other words, either make \"The provided...\" lowercase or capitalize the second sentence:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"]. data streams and their backing indices don't support aliases.\");\n          \n          \n            \n                                    + \"]. Data streams and their backing indices don't support aliases.\");", "bodyHTML": "<p dir=\"auto\">Minor: We're inconsistent across the codebase in whether we capitalize our error messages, but I think we should be consistent within a single error message. In other words, either make \"The provided...\" lowercase or capitalize the second sentence:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]. <span class=\"x x-first x-last\">data</span> streams and their backing indices don't support aliases.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]. <span class=\"x x-first x-last\">Data</span> streams and their backing indices don't support aliases.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-06-18T14:03:41Z", "path": "server/src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java", "diffHunk": "@@ -110,16 +111,26 @@ protected void masterOperation(Task task, final IndicesAliasesRequest request, f\n         //Expand the indices names\n         List<AliasActions> actions = request.aliasActions();\n         List<AliasAction> finalActions = new ArrayList<>();\n-\n         // Resolve all the AliasActions into AliasAction instances and gather all the aliases\n         Set<String> aliases = new HashSet<>();\n         for (AliasActions action : actions) {\n-            final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request.indicesOptions(), action.indices());\n+            final Index[] concreteIndices = indexNameExpressionResolver.concreteIndices(state, request.indicesOptions(), false,\n+                action.indices());\n+            for (Index concreteIndex : concreteIndices) {\n+                IndexAbstraction indexAbstraction = state.metadata().getIndicesLookup().get(concreteIndex.getName());\n+                assert indexAbstraction != null : \"invalid cluster metadata. index [\" + concreteIndex.getName() + \"] was not found\";\n+                if (indexAbstraction.getParentDataStream() != null) {\n+                    throw new IllegalArgumentException(\"The provided expressions [\" + String.join(\",\", action.indices())\n+                        + \"] match a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                        + \"]. data streams and their backing indices don't support aliases.\");", "originalCommit": "72bef663465998b3e5c47cce86a043762023afd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1MTM5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58327#discussion_r442251392", "body": "Same thing about capitalization here.", "bodyText": "Same thing about capitalization here.", "bodyHTML": "<p dir=\"auto\">Same thing about capitalization here.</p>", "author": "danhermann", "createdAt": "2020-06-18T14:04:06Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesService.java", "diffHunk": "@@ -187,4 +189,13 @@ public ClusterState applyAliasActions(ClusterState currentState, Iterable<AliasA\n         }\n     }\n \n+    private void validateAliasTargetIsNotDSBackingIndex(ClusterState currentState, AliasAction action) {\n+        IndexAbstraction indexAbstraction = currentState.metadata().getIndicesLookup().get(action.getIndex());\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + action.getIndex() + \"] was not found\";\n+        if (indexAbstraction.getParentDataStream() != null) {\n+            throw new IllegalArgumentException(\"The provided index [ \" + action.getIndex()\n+                + \"] is a backing index belonging to data stream [\" + indexAbstraction.getParentDataStream().getName()\n+                + \"]. data streams and their backing indices don't support aliases driven operations.\");", "originalCommit": "72bef663465998b3e5c47cce86a043762023afd4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe6572292d6ad4f99346d2a4167e73ce790705b7", "url": "https://github.com/elastic/elasticsearch/commit/fe6572292d6ad4f99346d2a4167e73ce790705b7", "message": "Update exception messages", "committedDate": "2020-06-18T15:11:31Z", "type": "commit"}]}