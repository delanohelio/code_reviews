{"pr_number": 60809, "pr_title": "Improve error message for non append-only writes that target data stream", "pr_author": "martijnvg", "pr_createdAt": "2020-08-06T09:27:25Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/60809", "timeline": [{"oid": "1a79d026a3dc78ca74aa59fa42ceac33c35dc5cc", "url": "https://github.com/elastic/elasticsearch/commit/1a79d026a3dc78ca74aa59fa42ceac33c35dc5cc", "message": "Improve error message for non append-only writes that target data stream\n\nCloses #60581", "committedDate": "2020-08-06T09:20:46Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjMzNzcwMw==", "url": "https://github.com/elastic/elasticsearch/pull/60809#discussion_r466337703", "body": "Maybe refactor `es.excluded_ds` to named constant?", "bodyText": "Maybe refactor es.excluded_ds to named constant?", "bodyHTML": "<p dir=\"auto\">Maybe refactor <code>es.excluded_ds</code> to named constant?</p>", "author": "probakowski", "createdAt": "2020-08-06T11:09:36Z", "path": "server/src/main/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolver.java", "diffHunk": "@@ -272,6 +274,10 @@\n         if (options.allowNoIndices() == false && concreteIndices.isEmpty()) {\n             IndexNotFoundException infe = new IndexNotFoundException((String)null);\n             infe.setResources(\"index_expression\", indexExpressions);\n+            if (excludedDataStreams) {\n+                // Allows callers to handle IndexNotFoundException differently based on whether data streams were excluded.\n+                infe.addMetadata(\"es.excluded_ds\", \"true\");", "originalCommit": "1a79d026a3dc78ca74aa59fa42ceac33c35dc5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NTA4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/60809#discussion_r466385086", "body": "```suggestion\r\n                        throw new IllegalArgumentException(\"only write ops with an op_type of create are allowed in data streams\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    throw new IllegalArgumentException(\"only write ops with op_type=create are allowed in data streams\");\n          \n          \n            \n                                    throw new IllegalArgumentException(\"only write ops with an op_type of create are allowed in data streams\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>only write ops with op_type<span class=\"x x-first x-last\">=</span>create are allowed in data streams<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>only write ops with <span class=\"x x-first x-last\">an </span>op_type<span class=\"x x-first x-last\"> of </span>create are allowed in data streams<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-08-06T12:45:19Z", "path": "server/src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java", "diffHunk": "@@ -143,7 +144,15 @@ protected void doStart(ClusterState clusterState) {\n                         throw blockException;\n                     }\n                 }\n-                request.concreteIndex(indexNameExpressionResolver.concreteWriteIndex(clusterState, request).getName());\n+                try {\n+                    request.concreteIndex(indexNameExpressionResolver.concreteWriteIndex(clusterState, request).getName());\n+                } catch (IndexNotFoundException e) {\n+                    if (request.includeDataStreams() == false && e.getMetadataKeys().contains(\"es.excluded_ds\")) {\n+                        throw new IllegalArgumentException(\"only write ops with op_type=create are allowed in data streams\");", "originalCommit": "1a79d026a3dc78ca74aa59fa42ceac33c35dc5cc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NzEyNg==", "url": "https://github.com/elastic/elasticsearch/pull/60809#discussion_r466387126", "body": "Just a question -- I don't understand why `includeDataStreams == false` is here. I would have thought it would be the opposite if it were addressing the case of indexing into data streams though it does seem to work according to the tests you added.\r\n", "bodyText": "Just a question -- I don't understand why includeDataStreams == false is here. I would have thought it would be the opposite if it were addressing the case of indexing into data streams though it does seem to work according to the tests you added.", "bodyHTML": "<p dir=\"auto\">Just a question -- I don't understand why <code>includeDataStreams == false</code> is here. I would have thought it would be the opposite if it were addressing the case of indexing into data streams though it does seem to work according to the tests you added.</p>", "author": "danhermann", "createdAt": "2020-08-06T12:49:03Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -636,8 +636,16 @@ Index resolveIfAbsent(DocWriteRequest<?> request) {\n             Index concreteIndex = indices.get(request.index());\n             if (concreteIndex == null) {\n                 boolean includeDataStreams = request.opType() == DocWriteRequest.OpType.CREATE;\n-                concreteIndex = indexNameExpressionResolver.concreteWriteIndex(state, request.indicesOptions(), request.indices()[0],\n-                    false, includeDataStreams);\n+                try {\n+                    concreteIndex = indexNameExpressionResolver.concreteWriteIndex(state, request.indicesOptions(),\n+                        request.indices()[0], false, includeDataStreams);\n+                } catch (IndexNotFoundException e) {\n+                    if (includeDataStreams == false && e.getMetadataKeys().contains(\"es.excluded_ds\")) {", "originalCommit": "1a79d026a3dc78ca74aa59fa42ceac33c35dc5cc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQyNjkwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/60809#discussion_r466426901", "bodyText": "I don't think it is needed (because es.excluded_ds is only set if includeDataStreams is false), but I like to keep it here to highlight that this check is only needed for op types other than create.  If includeDataStreams is false then request.opType() is not CREATE.", "author": "martijnvg", "createdAt": "2020-08-06T13:50:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NzEyNg=="}], "type": "inlineReview"}, {"oid": "64270008f0bd80b7736d4d2bf9e342ecd67b1db3", "url": "https://github.com/elastic/elasticsearch/commit/64270008f0bd80b7736d4d2bf9e342ecd67b1db3", "message": "Merge remote-tracking branch 'es/master' into better_error_message_for_non_append_only_writes_targeting_ds", "committedDate": "2020-08-10T07:23:48Z", "type": "commit"}, {"oid": "3774960d390d331c07d645663e9006f1e974f0f2", "url": "https://github.com/elastic/elasticsearch/commit/3774960d390d331c07d645663e9006f1e974f0f2", "message": "iter", "committedDate": "2020-08-10T07:45:26Z", "type": "commit"}]}