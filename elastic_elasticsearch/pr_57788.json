{"pr_number": 57788, "pr_title": "Prohibit append-only writes targeting backing indices directly.", "pr_author": "martijnvg", "pr_createdAt": "2020-06-08T06:39:31Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/57788", "timeline": [{"oid": "adf2a9cccf5106c5a60c738ba903e98a14e4061f", "url": "https://github.com/elastic/elasticsearch/commit/adf2a9cccf5106c5a60c738ba903e98a14e4061f", "message": "Prohibit append-only writes targeting backing indices directly.\n\nAppend-only writes can only target the corresponding data stream.\n\nRelates to #53100", "committedDate": "2020-06-08T06:58:29Z", "type": "commit"}, {"oid": "adf2a9cccf5106c5a60c738ba903e98a14e4061f", "url": "https://github.com/elastic/elasticsearch/commit/adf2a9cccf5106c5a60c738ba903e98a14e4061f", "message": "Prohibit append-only writes targeting backing indices directly.\n\nAppend-only writes can only target the corresponding data stream.\n\nRelates to #53100", "committedDate": "2020-06-08T06:58:29Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1MDYyMA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r436550620", "body": "I would prefer to lookup the index and check if it is part of a data-stream.\r\n\r\nOnce we can adopt indices this check will no longer be sufficient.", "bodyText": "I would prefer to lookup the index and check if it is part of a data-stream.\nOnce we can adopt indices this check will no longer be sufficient.", "bodyHTML": "<p dir=\"auto\">I would prefer to lookup the index and check if it is part of a data-stream.</p>\n<p dir=\"auto\">Once we can adopt indices this check will no longer be sufficient.</p>", "author": "henningandersen", "createdAt": "2020-06-08T08:59:43Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +276,44 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n+        if (writeRequest.index().startsWith(\".ds-\") == false) {", "originalCommit": "adf2a9cccf5106c5a60c738ba903e98a14e4061f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU2NDYyNA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r436564624", "bodyText": "I will make that change \ud83d\udc4d", "author": "martijnvg", "createdAt": "2020-06-08T09:23:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1MDYyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1MTg3NA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r436551874", "body": "Using the lookup instead, we can also find the data-stream directly here.\r\n\r\nAlso, I think that if the index does not yet exist, there is no reason for special handling and thus no reason to look for a template?", "bodyText": "Using the lookup instead, we can also find the data-stream directly here.\nAlso, I think that if the index does not yet exist, there is no reason for special handling and thus no reason to look for a template?", "bodyHTML": "<p dir=\"auto\">Using the lookup instead, we can also find the data-stream directly here.</p>\n<p dir=\"auto\">Also, I think that if the index does not yet exist, there is no reason for special handling and thus no reason to look for a template?</p>", "author": "henningandersen", "createdAt": "2020-06-08T09:01:37Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +276,44 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n+        if (writeRequest.index().startsWith(\".ds-\") == false) {\n+            // This is definitively not a backing index of data stream, skip further checking\n+            return;\n+        }\n+\n+        // Extract data stream name and check if a composable template with a data stream definition would match with it:\n+        int indexOfLastDash = writeRequest.index().lastIndexOf('-');", "originalCommit": "adf2a9cccf5106c5a60c738ba903e98a14e4061f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU2NDQwOA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r436564408", "bodyText": "The reason I was concerned about using the lookup was, backing indices that don't yet exist. But thinking more about it, I don't I have to be concerned about it. (given that in security should only apply a privilege from a data stream to a backing index if that backing index exists.)", "author": "martijnvg", "createdAt": "2020-06-08T09:23:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1MTg3NA=="}], "type": "inlineReview"}, {"oid": "646ee88f3c417acea166dd52d0e1613606c6fa6a", "url": "https://github.com/elastic/elasticsearch/commit/646ee88f3c417acea166dd52d0e1613606c6fa6a", "message": "Merge remote-tracking branch 'es/master' into prohibit_append_only_writes_to_backing_indices", "committedDate": "2020-06-09T07:01:55Z", "type": "commit"}, {"oid": "952a9fd32b610799502b25985bcc53bf64b71426", "url": "https://github.com/elastic/elasticsearch/commit/952a9fd32b610799502b25985bcc53bf64b71426", "message": "chekc indices lookup instead of checking composable template", "committedDate": "2020-06-09T07:11:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxMDc0NA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r437410744", "body": "I think at this point it's targeting a backing index of a data stream directly?", "bodyText": "I think at this point it's targeting a backing index of a data stream directly?", "bodyHTML": "<p dir=\"auto\">I think at this point it's targeting a backing index of a data stream directly?</p>", "author": "danhermann", "createdAt": "2020-06-09T13:20:21Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +275,35 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n+        IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(writeRequest.index());\n+        if (indexAbstraction == null) {\n+            return;\n+        }\n+        if (indexAbstraction.getType() != IndexAbstraction.Type.CONCRETE_INDEX) {\n+            return;\n+        }\n+        if (indexAbstraction.getParentDataStream() == null) {\n+            return;\n+        }\n+\n+        // At this point with write op is targeting a data stream directly,so", "originalCommit": "952a9fd32b610799502b25985bcc53bf64b71426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQxMjEyMA==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r437412120", "body": "Minor: added space in error message\r\n```suggestion\r\n            throw new IllegalArgumentException(\"append-only write targeting backing indices is disallowed, \" +\r\n                \"target corresponding data stream instead\");\r\n```", "bodyText": "Minor: added space in error message\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"append-only write targeting backing indices is disallowed,\" +\n          \n          \n            \n                            \"target corresponding data stream instead\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"append-only write targeting backing indices is disallowed, \" +\n          \n          \n            \n                            \"target corresponding data stream instead\");", "bodyHTML": "<p dir=\"auto\">Minor: added space in error message</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>append-only write targeting backing indices is disallowed,<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>target corresponding data stream instead<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>append-only write targeting backing indices is disallowed,<span class=\"x x-first x-last\"> </span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>target corresponding data stream instead<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-06-09T13:22:26Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +275,35 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n+        IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(writeRequest.index());\n+        if (indexAbstraction == null) {\n+            return;\n+        }\n+        if (indexAbstraction.getType() != IndexAbstraction.Type.CONCRETE_INDEX) {\n+            return;\n+        }\n+        if (indexAbstraction.getParentDataStream() == null) {\n+            return;\n+        }\n+\n+        // At this point with write op is targeting a data stream directly,so\n+        // checking if write op is append-only and if so fail.\n+        // (Updates and deletes are allowed to target a backing index)\n+\n+        DocWriteRequest.OpType opType = writeRequest.opType();\n+        // CREATE op_type is considered append-only and\n+        // INDEX op_type is considered append-only when no if_primary_term and if_seq_no is specified.\n+        // (the latter maybe an update, but at this stage we can't determine that. In order to determine\n+        // that an engine level change is needed and for now this check is sufficient.)\n+        if (opType == DocWriteRequest.OpType.CREATE ||\n+            (opType == DocWriteRequest.OpType.INDEX && writeRequest.ifPrimaryTerm() == UNASSIGNED_PRIMARY_TERM &&\n+                writeRequest.ifSeqNo() == UNASSIGNED_SEQ_NO)) {\n+            throw new IllegalArgumentException(\"append-only write targeting backing indices is disallowed,\" +\n+                \"target corresponding data stream instead\");", "originalCommit": "952a9fd32b610799502b25985bcc53bf64b71426", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1a7a42413137f6d5601aa51020e5202cc25bf3a4", "url": "https://github.com/elastic/elasticsearch/commit/1a7a42413137f6d5601aa51020e5202cc25bf3a4", "message": "Merge remote-tracking branch 'es/master' into prohibit_append_only_writes_to_backing_indices", "committedDate": "2020-06-11T06:43:47Z", "type": "commit"}, {"oid": "0db125b9de2d7bb2c93459853ddff346db7efaeb", "url": "https://github.com/elastic/elasticsearch/commit/0db125b9de2d7bb2c93459853ddff346db7efaeb", "message": "small tweaks", "committedDate": "2020-06-11T06:52:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5MTA0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r438591041", "body": "nit: I think\r\n\r\n```suggestion\r\n    static void prohibitAppendWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\r\n```\r\n\r\nis more precise in that we try to prohibit any direct append into background indices?", "bodyText": "nit: I think\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n          \n          \n            \n                static void prohibitAppendWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n          \n      \n    \n    \n  \n\nis more precise in that we try to prohibit any direct append into background indices?", "bodyHTML": "<p dir=\"auto\">nit: I think</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">prohibitAppendOnlyWritesInBackingIndices</span>(<span class=\"pl-k\">DocWriteRequest&lt;?&gt;</span> writeRequest, <span class=\"pl-smi\">Metadata</span> metadata) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">prohibitAppendWritesInBackingIndices</span>(<span class=\"pl-k\">DocWriteRequest&lt;?&gt;</span> writeRequest, <span class=\"pl-smi\">Metadata</span> metadata) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">is more precise in that we try to prohibit any direct append into background indices?</p>", "author": "henningandersen", "createdAt": "2020-06-11T07:21:30Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +275,35 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {", "originalCommit": "0db125b9de2d7bb2c93459853ddff346db7efaeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NTMxMg==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r438595312", "body": "\"append-only\" in this message could cause some confusion. In principle, the user could be doing an index operation that he expects to update an existing document. We just cannot determine that up front without having him be explicit in the request.\r\n\r\nI suggest to turn this into two messages, one for the `op_type` create case and one for the `op_type` index case to make this clearer.", "bodyText": "\"append-only\" in this message could cause some confusion. In principle, the user could be doing an index operation that he expects to update an existing document. We just cannot determine that up front without having him be explicit in the request.\nI suggest to turn this into two messages, one for the op_type create case and one for the op_type index case to make this clearer.", "bodyHTML": "<p dir=\"auto\">\"append-only\" in this message could cause some confusion. In principle, the user could be doing an index operation that he expects to update an existing document. We just cannot determine that up front without having him be explicit in the request.</p>\n<p dir=\"auto\">I suggest to turn this into two messages, one for the <code>op_type</code> create case and one for the <code>op_type</code> index case to make this clearer.</p>", "author": "henningandersen", "createdAt": "2020-06-11T07:30:41Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -271,6 +275,35 @@ public void onFailure(Exception e) {\n         }\n     }\n \n+    static void prohibitAppendOnlyWritesInBackingIndices(DocWriteRequest<?> writeRequest, Metadata metadata) {\n+        IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(writeRequest.index());\n+        if (indexAbstraction == null) {\n+            return;\n+        }\n+        if (indexAbstraction.getType() != IndexAbstraction.Type.CONCRETE_INDEX) {\n+            return;\n+        }\n+        if (indexAbstraction.getParentDataStream() == null) {\n+            return;\n+        }\n+\n+        // At this point with write op is targeting a backing index of a data stream directly,\n+        // so checking if write op is append-only and if so fail.\n+        // (Updates and deletes are allowed to target a backing index)\n+\n+        DocWriteRequest.OpType opType = writeRequest.opType();\n+        // CREATE op_type is considered append-only and\n+        // INDEX op_type is considered append-only when no if_primary_term and if_seq_no is specified.\n+        // (the latter maybe an update, but at this stage we can't determine that. In order to determine\n+        // that an engine level change is needed and for now this check is sufficient.)\n+        if (opType == DocWriteRequest.OpType.CREATE ||\n+            (opType == DocWriteRequest.OpType.INDEX && writeRequest.ifPrimaryTerm() == UNASSIGNED_PRIMARY_TERM &&\n+                writeRequest.ifSeqNo() == UNASSIGNED_SEQ_NO)) {\n+            throw new IllegalArgumentException(\"append-only write targeting backing indices is disallowed, \" +", "originalCommit": "0db125b9de2d7bb2c93459853ddff346db7efaeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NTc3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r438595775", "body": "nit: this seems unrelated now.", "bodyText": "nit: this seems unrelated now.", "bodyHTML": "<p dir=\"auto\">nit: this seems unrelated now.</p>", "author": "henningandersen", "createdAt": "2020-06-11T07:31:31Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -310,7 +343,7 @@ static boolean resolvePipelines(final DocWriteRequest<?> originalRequest, final\n                 // the index does not exist yet (and this is a valid request), so match index\n                 // templates to look for pipelines in either a matching V2 template (which takes\n                 // precedence), or if a V2 template does not match, any V1 templates\n-                String v2Template = MetadataIndexTemplateService.findV2Template(metadata, indexRequest.index(), false);\n+                String v2Template = findV2Template(metadata, indexRequest.index(), false);", "originalCommit": "0db125b9de2d7bb2c93459853ddff346db7efaeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMTQyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/57788#discussion_r438601425", "body": "I think the exception thrown will terminate the entire bulk request. Normally, only errors around the bulk structure itself will cause the entire bulk request to fail. Individual item problems are reported back per item instead. I would think this should be per item too.\r\n\r\nI think moving the check into [here in `BulkOperation`](https://github.com/elastic/elasticsearch/blob/4f2f0b5ace82681d9a8f8cd9c457d929f15cd29c/server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java#L457) would fix this.\r\n", "bodyText": "I think the exception thrown will terminate the entire bulk request. Normally, only errors around the bulk structure itself will cause the entire bulk request to fail. Individual item problems are reported back per item instead. I would think this should be per item too.\nI think moving the check into here in BulkOperation would fix this.", "bodyHTML": "<p dir=\"auto\">I think the exception thrown will terminate the entire bulk request. Normally, only errors around the bulk structure itself will cause the entire bulk request to fail. Individual item problems are reported back per item instead. I would think this should be per item too.</p>\n<p dir=\"auto\">I think moving the check into <a href=\"https://github.com/elastic/elasticsearch/blob/4f2f0b5ace82681d9a8f8cd9c457d929f15cd29c/server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java#L457\">here in <code>BulkOperation</code></a> would fix this.</p>", "author": "henningandersen", "createdAt": "2020-06-11T07:42:39Z", "path": "server/src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java", "diffHunk": "@@ -162,6 +165,7 @@ protected void doExecute(Task task, BulkRequest bulkRequest, ActionListener<Bulk\n         final Metadata metadata = clusterService.state().getMetadata();\n         final Version minNodeVersion = clusterService.state().getNodes().getMinNodeVersion();\n         for (DocWriteRequest<?> actionRequest : bulkRequest.requests) {\n+            prohibitAppendOnlyWritesInBackingIndices(actionRequest, metadata);", "originalCommit": "0db125b9de2d7bb2c93459853ddff346db7efaeb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1937a13bb9e29931446f5e1a5f497ec49543a5e5", "url": "https://github.com/elastic/elasticsearch/commit/1937a13bb9e29931446f5e1a5f497ec49543a5e5", "message": "iter", "committedDate": "2020-06-11T08:06:00Z", "type": "commit"}, {"oid": "57e87832142261470b26f63231ee44c3bcc219d1", "url": "https://github.com/elastic/elasticsearch/commit/57e87832142261470b26f63231ee44c3bcc219d1", "message": "fail bulk request items, not the entire request", "committedDate": "2020-06-11T08:18:39Z", "type": "commit"}, {"oid": "38c363999b9f6c540145b75abc7a453b2ac3d29e", "url": "https://github.com/elastic/elasticsearch/commit/38c363999b9f6c540145b75abc7a453b2ac3d29e", "message": "improve error message", "committedDate": "2020-06-11T08:37:53Z", "type": "commit"}]}