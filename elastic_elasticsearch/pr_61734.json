{"pr_number": 61734, "pr_title": "Update authc failure headers on license change", "pr_author": "BigPandaToo", "pr_createdAt": "2020-08-31T14:49:24Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61734", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY3ODIxOA==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r481678218", "body": "Is there a reason you opted to update the failure handler in the authentication service rather than update the headers inside the failure handler?\r\n\r\nI was expecting something more like:\r\n```suggestion\r\n            getLicenseState().addListener(() -> {\r\n                failureHeandler.setHeaders(headersSupplier.get());\r\n            });\r\n```\r\n", "bodyText": "Is there a reason you opted to update the failure handler in the authentication service rather than update the headers inside the failure handler?\nI was expecting something more like:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        getLicenseState().addListener(() -> {\n          \n          \n            \n                            authcService.get().setFailureHeandler(new DefaultAuthenticationFailureHandler(headersSupplier.get()));\n          \n          \n            \n                        });\n          \n          \n            \n                        getLicenseState().addListener(() -> {\n          \n          \n            \n                            failureHeandler.setHeaders(headersSupplier.get());\n          \n          \n            \n                        });", "bodyHTML": "<p dir=\"auto\">Is there a reason you opted to update the failure handler in the authentication service rather than update the headers inside the failure handler?</p>\n<p dir=\"auto\">I was expecting something more like:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"578\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            getLicenseState()<span class=\"pl-k\">.</span>addListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"579\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"x x-first\">authcService</span><span class=\"pl-k x\">.</span><span class=\"x\">get()</span><span class=\"pl-k x\">.</span><span class=\"x\">setFailureHeandler(</span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">DefaultAuthenticationFailureHandler</span><span class=\"x x-last\">(</span>headersSupplier<span class=\"pl-k\">.</span>get(<span class=\"x x-first x-last\">)</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"580\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"578\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            getLicenseState()<span class=\"pl-k\">.</span>addListener(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"579\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"x x-first\">failureHeandler</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">setHeaders(</span>headersSupplier<span class=\"pl-k\">.</span>get());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"580\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            });</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-09-02T04:42:53Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/Security.java", "diffHunk": "@@ -542,32 +542,39 @@ private AuthenticationFailureHandler createAuthenticationFailureHandler(final Re\n         }\n         if (failureHandler == null) {\n             logger.debug(\"Using default authentication failure handler\");\n-            final Map<String, List<String>> defaultFailureResponseHeaders = new HashMap<>();\n-            realms.asList().stream().forEach((realm) -> {\n-                Map<String, List<String>> realmFailureHeaders = realm.getAuthenticationFailureHeaders();\n-                realmFailureHeaders.entrySet().stream().forEach((e) -> {\n-                    String key = e.getKey();\n-                    e.getValue().stream()\n-                            .filter(v -> defaultFailureResponseHeaders.computeIfAbsent(key, x -> new ArrayList<>()).contains(v) == false)\n-                            .forEach(v -> defaultFailureResponseHeaders.get(key).add(v));\n+            Supplier<Map<String, List<String>>> headersSupplier = () -> {\n+                final Map<String, List<String>> defaultFailureResponseHeaders = new HashMap<>();\n+                realms.asList().stream().forEach((realm) -> {\n+                    Map<String, List<String>> realmFailureHeaders = realm.getAuthenticationFailureHeaders();\n+                    realmFailureHeaders.entrySet().stream().forEach((e) -> {\n+                        String key = e.getKey();\n+                        e.getValue().stream()\n+                                .filter(v -> defaultFailureResponseHeaders.computeIfAbsent(key, x -> new ArrayList<>()).contains(v)\n+                                    == false)\n+                                .forEach(v -> defaultFailureResponseHeaders.get(key).add(v));\n+                    });\n                 });\n-            });\n \n-            if (TokenService.isTokenServiceEnabled(settings)) {\n-                String bearerScheme = \"Bearer realm=\\\"\" + XPackField.SECURITY + \"\\\"\";\n-                if (defaultFailureResponseHeaders.computeIfAbsent(\"WWW-Authenticate\", x -> new ArrayList<>())\n-                        .contains(bearerScheme) == false) {\n-                    defaultFailureResponseHeaders.get(\"WWW-Authenticate\").add(bearerScheme);\n+                if (TokenService.isTokenServiceEnabled(settings)) {\n+                    String bearerScheme = \"Bearer realm=\\\"\" + XPackField.SECURITY + \"\\\"\";\n+                    if (defaultFailureResponseHeaders.computeIfAbsent(\"WWW-Authenticate\", x -> new ArrayList<>())\n+                            .contains(bearerScheme) == false) {\n+                        defaultFailureResponseHeaders.get(\"WWW-Authenticate\").add(bearerScheme);\n+                    }\n                 }\n-            }\n-            if (API_KEY_SERVICE_ENABLED_SETTING.get(settings)) {\n-                final String apiKeyScheme = \"ApiKey\";\n-                if (defaultFailureResponseHeaders.computeIfAbsent(\"WWW-Authenticate\", x -> new ArrayList<>())\n-                    .contains(apiKeyScheme) == false) {\n-                    defaultFailureResponseHeaders.get(\"WWW-Authenticate\").add(apiKeyScheme);\n+                if (API_KEY_SERVICE_ENABLED_SETTING.get(settings)) {\n+                    final String apiKeyScheme = \"ApiKey\";\n+                    if (defaultFailureResponseHeaders.computeIfAbsent(\"WWW-Authenticate\", x -> new ArrayList<>())\n+                        .contains(apiKeyScheme) == false) {\n+                        defaultFailureResponseHeaders.get(\"WWW-Authenticate\").add(apiKeyScheme);\n+                    }\n                 }\n-            }\n-            failureHandler = new DefaultAuthenticationFailureHandler(defaultFailureResponseHeaders);\n+                return defaultFailureResponseHeaders;\n+            };\n+            failureHandler = new DefaultAuthenticationFailureHandler(headersSupplier.get());\n+            getLicenseState().addListener(() -> {\n+                authcService.get().setFailureHeandler(new DefaultAuthenticationFailureHandler(headersSupplier.get()));\n+            });", "originalCommit": "1fdec7000c67a07a7dfd607b546bd766c480047e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY2NjYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r483666605", "bodyText": "Just updated and added test", "author": "BigPandaToo", "createdAt": "2020-09-04T14:51:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY3ODIxOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY3ODU1Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r481678553", "body": "```suggestion\r\n    public void setFailureHandler(AuthenticationFailureHandler failureHandler) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setFailureHeandler(AuthenticationFailureHandler failureHandler){\n          \n          \n            \n                public void setFailureHandler(AuthenticationFailureHandler failureHandler) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">setFailureHeandler</span>(<span class=\"pl-smi\">AuthenticationFailureHandler</span> failureHandler){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">setFailureHandler</span>(<span class=\"pl-smi\">AuthenticationFailureHandler</span> failureHandler)<span class=\"x x-first x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-09-02T04:43:16Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java", "diffHunk": "@@ -207,6 +208,10 @@ public void onSecurityIndexStateChange(SecurityIndexManager.State previousState,\n         }\n     }\n \n+    public void setFailureHeandler(AuthenticationFailureHandler failureHandler){", "originalCommit": "1fdec7000c67a07a7dfd607b546bd766c480047e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "url": "https://github.com/elastic/elasticsearch/commit/f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into DefaultAuthenticationFailureHandler\nKeep in sync", "committedDate": "2020-09-04T14:31:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0ODg0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r484648842", "body": "I don't think we want to add this to the interface, because we actually only call it on the `DefaultAuthenticationFailureHandler`.\r\n\r\nInstead we need to rework the code `Security.java` so that the `final` handler is the correct type.", "bodyText": "I don't think we want to add this to the interface, because we actually only call it on the DefaultAuthenticationFailureHandler.\nInstead we need to rework the code Security.java so that the final handler is the correct type.", "bodyHTML": "<p dir=\"auto\">I don't think we want to add this to the interface, because we actually only call it on the <code>DefaultAuthenticationFailureHandler</code>.</p>\n<p dir=\"auto\">Instead we need to rework the code <code>Security.java</code> so that the <code>final</code> handler is the correct type.</p>", "author": "tvernum", "createdAt": "2020-09-08T04:53:06Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authc/AuthenticationFailureHandler.java", "diffHunk": "@@ -106,4 +109,11 @@ ElasticsearchSecurityException failedAuthentication(TransportMessage message, Au\n      * @return ElasticsearchSecurityException with the appropriate headers and message\n      */\n     ElasticsearchSecurityException authenticationRequired(String action, ThreadContext context);\n+\n+    /**\n+     * This method is called when failureResponseHeaders need to be set (at startup) or updated (if license state changes)\n+     *\n+     * @param failureResponseHeaders the Map of failure response heaers to be set\n+     */\n+    void setHeaders(Map<String, List<String>> failureResponseHeaders);", "originalCommit": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3NzM5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r485077397", "bodyText": "Just changed", "author": "BigPandaToo", "createdAt": "2020-09-08T17:17:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0ODg0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0OTc2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r484649763", "body": "We need to verify the correct headers are set here. That is, that it includes a `WWW-Authenticate: Basic realm=\"security\" charset=\"UTF-8\"` header.", "bodyText": "We need to verify the correct headers are set here. That is, that it includes a WWW-Authenticate: Basic realm=\"security\" charset=\"UTF-8\" header.", "bodyHTML": "<p dir=\"auto\">We need to verify the correct headers are set here. That is, that it includes a <code>WWW-Authenticate: Basic realm=\"security\" charset=\"UTF-8\"</code> header.</p>", "author": "tvernum", "createdAt": "2020-09-08T04:56:51Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java", "diffHunk": "@@ -462,4 +482,36 @@ public void testValidateForFipsNoErrorsForDefaultSettings() {\n         Security.validateForFips(settings);\n         // no exception thrown\n     }\n+\n+    public void testLicenseUpdateFailureHandlerUpdate() throws Exception {\n+        Settings settings = Settings.builder().\n+            put(\"xpack.security.authc.api_key.enabled\", \"true\").\n+            build();\n+        Collection<Object> components = createComponentsWithSecurityNotExplicitlyEnabled(settings);\n+        AuthenticationService service = findComponent(AuthenticationService.class, components);\n+        assertNotNull(service);\n+        RestRequest request = new FakeRestRequest();\n+        final AtomicBoolean completed = new AtomicBoolean(false);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::logAndFail));\n+        assertTrue(completed.compareAndSet(true, false));\n+        threadContext.stashContext();\n+        licenseState.update(\n+            randomFrom(License.OperationMode.GOLD, License.OperationMode.ENTERPRISE, License.OperationMode.PLATINUM),\n+            true, null);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::VerifyMissingAuthenticationException));\n+        if(completed.get()){\n+            fail(\"authentication succeeded but it shouldn't\");\n+        }\n+    }\n+\n+    private void logAndFail(Exception e) {\n+        logger.error(\"unexpected exception\", e);\n+        fail(\"unexpected exception \" + e.getMessage());\n+    }\n+\n+    private void VerifyMissingAuthenticationException(Exception e) {\n+        assertThat(e.getMessage(), containsString(\"missing authentication credentials for REST request\"));", "originalCommit": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3Nzc2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r485077767", "bodyText": "Done", "author": "BigPandaToo", "createdAt": "2020-09-08T17:18:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY0OTc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1MDAyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r484650029", "body": "```suggestion\r\n    private void verifyMissingAuthenticationException(Exception e) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void VerifyMissingAuthenticationException(Exception e) {\n          \n          \n            \n                private void verifyMissingAuthenticationException(Exception e) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">VerifyMissingAuthenticationException</span>(<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">verifyMissingAuthenticationException</span>(<span class=\"pl-smi\">Exception</span> e) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-09-08T04:57:57Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java", "diffHunk": "@@ -462,4 +482,36 @@ public void testValidateForFipsNoErrorsForDefaultSettings() {\n         Security.validateForFips(settings);\n         // no exception thrown\n     }\n+\n+    public void testLicenseUpdateFailureHandlerUpdate() throws Exception {\n+        Settings settings = Settings.builder().\n+            put(\"xpack.security.authc.api_key.enabled\", \"true\").\n+            build();\n+        Collection<Object> components = createComponentsWithSecurityNotExplicitlyEnabled(settings);\n+        AuthenticationService service = findComponent(AuthenticationService.class, components);\n+        assertNotNull(service);\n+        RestRequest request = new FakeRestRequest();\n+        final AtomicBoolean completed = new AtomicBoolean(false);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::logAndFail));\n+        assertTrue(completed.compareAndSet(true, false));\n+        threadContext.stashContext();\n+        licenseState.update(\n+            randomFrom(License.OperationMode.GOLD, License.OperationMode.ENTERPRISE, License.OperationMode.PLATINUM),\n+            true, null);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::VerifyMissingAuthenticationException));\n+        if(completed.get()){\n+            fail(\"authentication succeeded but it shouldn't\");\n+        }\n+    }\n+\n+    private void logAndFail(Exception e) {\n+        logger.error(\"unexpected exception\", e);\n+        fail(\"unexpected exception \" + e.getMessage());\n+    }\n+\n+    private void VerifyMissingAuthenticationException(Exception e) {", "originalCommit": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1MDA0OA==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r484650048", "body": "Our typical style is:\r\n\r\n```suggestion\r\n        service.authenticate(request, ActionListener.wrap(result -> {\r\n            assertTrue(completed.compareAndSet(false, true));\r\n        }, this::logAndFail));\r\n```", "bodyText": "Our typical style is:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n          \n          \n            \n                                                                                }, this::logAndFail));\n          \n          \n            \n                    service.authenticate(request, ActionListener.wrap(result -> {\n          \n          \n            \n                        assertTrue(completed.compareAndSet(false, true));\n          \n          \n            \n                    }, this::logAndFail));", "bodyHTML": "<p dir=\"auto\">Our typical style is:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        service<span class=\"pl-k\">.</span>authenticate(request, <span class=\"pl-smi\">ActionListener</span><span class=\"pl-k\">.</span>wrap(result <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {assertTrue(completed<span class=\"pl-k\">.</span>compareAndSet(<span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                                                    }, <span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span>logAndFail));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        service<span class=\"pl-k\">.</span>authenticate(request, <span class=\"pl-smi\">ActionListener</span><span class=\"pl-k\">.</span>wrap(result <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertTrue(completed<span class=\"pl-k\">.</span>compareAndSet(<span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }, <span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span>logAndFail));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-09-08T04:58:03Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java", "diffHunk": "@@ -462,4 +482,36 @@ public void testValidateForFipsNoErrorsForDefaultSettings() {\n         Security.validateForFips(settings);\n         // no exception thrown\n     }\n+\n+    public void testLicenseUpdateFailureHandlerUpdate() throws Exception {\n+        Settings settings = Settings.builder().\n+            put(\"xpack.security.authc.api_key.enabled\", \"true\").\n+            build();\n+        Collection<Object> components = createComponentsWithSecurityNotExplicitlyEnabled(settings);\n+        AuthenticationService service = findComponent(AuthenticationService.class, components);\n+        assertNotNull(service);\n+        RestRequest request = new FakeRestRequest();\n+        final AtomicBoolean completed = new AtomicBoolean(false);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::logAndFail));", "originalCommit": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3NzYwMA==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r485077600", "bodyText": "Changed", "author": "BigPandaToo", "createdAt": "2020-09-08T17:17:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1MDA0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1MDExNw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r484650117", "body": "```suggestion\r\n        service.authenticate(request, ActionListener.wrap(result -> {\r\n            assertTrue(completed.compareAndSet(false, true));\r\n        }, this::VerifyMissingAuthenticationException));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n          \n          \n            \n                                                                                }, this::VerifyMissingAuthenticationException));\n          \n          \n            \n                    service.authenticate(request, ActionListener.wrap(result -> {\n          \n          \n            \n                        assertTrue(completed.compareAndSet(false, true));\n          \n          \n            \n                    }, this::VerifyMissingAuthenticationException));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        service<span class=\"pl-k\">.</span>authenticate(request, <span class=\"pl-smi\">ActionListener</span><span class=\"pl-k\">.</span>wrap(result <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {assertTrue(completed<span class=\"pl-k\">.</span>compareAndSet(<span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                                                    }, <span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span><span class=\"pl-smi\">VerifyMissingAuthenticationException</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        service<span class=\"pl-k\">.</span>authenticate(request, <span class=\"pl-smi\">ActionListener</span><span class=\"pl-k\">.</span>wrap(result <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertTrue(completed<span class=\"pl-k\">.</span>compareAndSet(<span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">true</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }, <span class=\"pl-c1\">this</span><span class=\"pl-k\">::</span><span class=\"pl-smi\">VerifyMissingAuthenticationException</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-09-08T04:58:24Z", "path": "x-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/SecurityTests.java", "diffHunk": "@@ -462,4 +482,36 @@ public void testValidateForFipsNoErrorsForDefaultSettings() {\n         Security.validateForFips(settings);\n         // no exception thrown\n     }\n+\n+    public void testLicenseUpdateFailureHandlerUpdate() throws Exception {\n+        Settings settings = Settings.builder().\n+            put(\"xpack.security.authc.api_key.enabled\", \"true\").\n+            build();\n+        Collection<Object> components = createComponentsWithSecurityNotExplicitlyEnabled(settings);\n+        AuthenticationService service = findComponent(AuthenticationService.class, components);\n+        assertNotNull(service);\n+        RestRequest request = new FakeRestRequest();\n+        final AtomicBoolean completed = new AtomicBoolean(false);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::logAndFail));\n+        assertTrue(completed.compareAndSet(true, false));\n+        threadContext.stashContext();\n+        licenseState.update(\n+            randomFrom(License.OperationMode.GOLD, License.OperationMode.ENTERPRISE, License.OperationMode.PLATINUM),\n+            true, null);\n+        service.authenticate(request, ActionListener.wrap(result -> {assertTrue(completed.compareAndSet(false, true));\n+                                                                    }, this::VerifyMissingAuthenticationException));", "originalCommit": "f0d76164b1d9e4d0beb46156f37ef27dfe143ad1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3ODE5Mw==", "url": "https://github.com/elastic/elasticsearch/pull/61734#discussion_r485078193", "bodyText": "Changed", "author": "BigPandaToo", "createdAt": "2020-09-08T17:19:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY1MDExNw=="}], "type": "inlineReview"}, {"oid": "af9d371852fee23e49c90a3fe8caefb1fcd5b222", "url": "https://github.com/elastic/elasticsearch/commit/af9d371852fee23e49c90a3fe8caefb1fcd5b222", "message": "DefaultAuthenticationFailureHandler does not update with license changes #56318\n-DefaultAuthenticationFailureHandler determines the set of response headers based on the active realms at startup.\n However, the Realms list may be empty if the node thinks it has a TRIAL or BASIC license at startup (because we default security off in those cases).\n The handler is never updated if the license state changes.\n- The fix is to add a call-back for license change to build new DefaultAuthenticationFailureHandler and update authcService", "committedDate": "2020-09-08T15:18:31Z", "type": "commit"}, {"oid": "81ca8c4dc5f0b4189759eb5453db69876d806631", "url": "https://github.com/elastic/elasticsearch/commit/81ca8c4dc5f0b4189759eb5453db69876d806631", "message": "DefaultAuthenticationFailureHandler does not update with license changes #56318\n-Changing according to the PR feedback + adding test", "committedDate": "2020-09-08T15:18:31Z", "type": "commit"}, {"oid": "d90ea531a6439fd00850c083eb2f58d001c600a7", "url": "https://github.com/elastic/elasticsearch/commit/d90ea531a6439fd00850c083eb2f58d001c600a7", "message": "DefaultAuthenticationFailureHandler does not update with license changes #56318\n-Changing according to the PR feedback", "committedDate": "2020-09-08T17:14:18Z", "type": "commit"}, {"oid": "ed41614f59263f9e829a00dff03786b07be89818", "url": "https://github.com/elastic/elasticsearch/commit/ed41614f59263f9e829a00dff03786b07be89818", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into DefaultAuthenticationFailureHandler", "committedDate": "2020-09-08T17:14:55Z", "type": "commit"}, {"oid": "ed41614f59263f9e829a00dff03786b07be89818", "url": "https://github.com/elastic/elasticsearch/commit/ed41614f59263f9e829a00dff03786b07be89818", "message": "Merge branch 'master' of https://github.com/elastic/elasticsearch into DefaultAuthenticationFailureHandler", "committedDate": "2020-09-08T17:14:55Z", "type": "forcePushed"}, {"oid": "f6e002af9106077b6cd8e466f664d04d11d30816", "url": "https://github.com/elastic/elasticsearch/commit/f6e002af9106077b6cd8e466f664d04d11d30816", "message": "Merge branch 'master' into DefaultAuthenticationFailureHandler", "committedDate": "2020-09-16T07:05:15Z", "type": "commit"}]}