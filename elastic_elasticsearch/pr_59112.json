{"pr_number": 59112, "pr_title": "Allow mixed usage of boolean and string when merging OIDC claims", "pr_author": "ywangd", "pr_createdAt": "2020-07-07T01:36:16Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59112", "timeline": [{"oid": "78f55f55a071a80a15c66929cd8fabd8cd0fe248", "url": "https://github.com/elastic/elasticsearch/commit/78f55f55a071a80a15c66929cd8fabd8cd0fe248", "message": "Support merging boolean oidc claims with mixed usage of boolean and string", "committedDate": "2020-07-07T01:25:54Z", "type": "commit"}, {"oid": "62b5ed71f6d98928b1d0f958a985c4444830c408", "url": "https://github.com/elastic/elasticsearch/commit/62b5ed71f6d98928b1d0f958a985c4444830c408", "message": "retain value from idtoken", "committedDate": "2020-07-07T01:35:16Z", "type": "commit"}, {"oid": "7d5727f0c5ab6657ee4c8d128e03734e37e74168", "url": "https://github.com/elastic/elasticsearch/commit/7d5727f0c5ab6657ee4c8d128e03734e37e74168", "message": "checkstyle", "committedDate": "2020-07-07T01:41:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4OTc5MA==", "url": "https://github.com/elastic/elasticsearch/pull/59112#discussion_r451989790", "body": "I wonder if we should care whether they're the same logical value? We don't for other cases, but I think we should be.\r\nPerhaps:\r\n```suggestion\r\n                    && String.valueOf(value1).equals(value2) ) {\r\n```\r\n", "bodyText": "I wonder if we should care whether they're the same logical value? We don't for other cases, but I think we should be.\nPerhaps:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                && (\"true\".equalsIgnoreCase((String)value2) || \"false\".equalsIgnoreCase((String)value2))) {\n          \n          \n            \n                                && String.valueOf(value1).equals(value2) ) {", "bodyHTML": "<p dir=\"auto\">I wonder if we should care whether they're the same logical value? We don't for other cases, but I think we should be.<br>\nPerhaps:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">true</span><span class=\"pl-pds x\">\"</span></span><span class=\"pl-k x\">.</span><span class=\"x\">equalsIgnoreCase((</span><span class=\"pl-smi x\">String</span><span class=\"x\">)value2) </span><span class=\"pl-k x\">||</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">false</span><span class=\"pl-pds x\">\"</span></span><span class=\"pl-k x\">.</span><span class=\"x\">equalsIgnoreCase((</span><span class=\"pl-smi x\">String</span><span class=\"x x-last\">)</span>value2)<span class=\"x x-first x-last\">)</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-smi x x-first\">String</span><span class=\"pl-k x\">.</span><span class=\"x\">valueOf(value1)</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">equals(</span>value2)<span class=\"x x-first x-last\"> </span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-07-09T06:24:20Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/oidc/OpenIdConnectAuthenticator.java", "diffHunk": "@@ -670,8 +670,18 @@ static JSONObject mergeObjects(JSONObject idToken, JSONObject userInfo) {\n             } else if (value1 instanceof JSONObject) {\n                 idToken.put(entry.getKey(), mergeObjects((JSONObject) value1, value2));\n             } else if (value1.getClass().equals(value2.getClass()) == false) {\n-                throw new IllegalStateException(\"Error merging ID token and userinfo claim value for claim [\" + entry.getKey() + \"]. \" +\n-                    \"Cannot merge [\" + value1.getClass().getName() + \"] with [\" + value2.getClass().getName() + \"]\");\n+                // A special handling for certain OPs that mix the usage of true and \"true\"\n+                // Retain value from idToken as all other primitive types\n+                if (value1 instanceof Boolean && value2 instanceof String\n+                    && (\"true\".equalsIgnoreCase((String)value2) || \"false\".equalsIgnoreCase((String)value2))) {", "originalCommit": "7d5727f0c5ab6657ee4c8d128e03734e37e74168", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3OTk2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59112#discussion_r452079962", "bodyText": "Updated as suggested. It's a bit inconsistent with other primitive types. But I think it fits for \"minimal leniency\" purpose which is I am after currently. Also, as discussed, it's worthwhile to revisit the whole merging behaviour in future.", "author": "ywangd", "createdAt": "2020-07-09T09:17:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4OTc5MA=="}], "type": "inlineReview"}, {"oid": "d9d312f9b23709386d433b334a9ecf3489174501", "url": "https://github.com/elastic/elasticsearch/commit/d9d312f9b23709386d433b334a9ecf3489174501", "message": "Address feedback", "committedDate": "2020-07-09T09:15:02Z", "type": "commit"}, {"oid": "dc478c50dc390a87d4bf011d8a8e9429795e7b7d", "url": "https://github.com/elastic/elasticsearch/commit/dc478c50dc390a87d4bf011d8a8e9429795e7b7d", "message": "Merge remote-tracking branch 'origin/master' into es-oidc-boolean-merging-leniency", "committedDate": "2020-07-09T09:15:17Z", "type": "commit"}]}