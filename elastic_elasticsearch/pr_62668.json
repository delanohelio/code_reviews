{"pr_number": 62668, "pr_title": "Add setting to decommission legacy monitoring cluster alerts", "pr_author": "jbaiera", "pr_createdAt": "2020-09-18T21:11:16Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62668", "timeline": [{"oid": "62aa8ecab53da5f806f286d78d36ec961d1ab940", "url": "https://github.com/elastic/elasticsearch/commit/62aa8ecab53da5f806f286d78d36ec961d1ab940", "message": "WIP", "committedDate": "2020-09-16T18:18:04Z", "type": "commit"}, {"oid": "f3c04deff3d784509bb2a1e790ae4bbce872dcd9", "url": "https://github.com/elastic/elasticsearch/commit/f3c04deff3d784509bb2a1e790ae4bbce872dcd9", "message": "Actually test creation and updating of watches in local monitoring.\n\nThis will allow us to test if the exporters actually pull the watches back down when they aren't in use.", "committedDate": "2020-09-17T20:41:01Z", "type": "commit"}, {"oid": "f5c399dc4f8bc62948e515b759b57f02649c657d", "url": "https://github.com/elastic/elasticsearch/commit/f5c399dc4f8bc62948e515b759b57f02649c657d", "message": "Add test cases that ensure cluster alerts are torn down when decommissioning setting is present.", "committedDate": "2020-09-18T20:57:01Z", "type": "commit"}, {"oid": "f4beb02959071341b4387174c6b270a41f1f6863", "url": "https://github.com/elastic/elasticsearch/commit/f4beb02959071341b4387174c6b270a41f1f6863", "message": "Appease the precommit beast", "committedDate": "2020-09-18T21:02:52Z", "type": "commit"}, {"oid": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "url": "https://github.com/elastic/elasticsearch/commit/b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "message": "Merge branch 'master' into monitoring-decommission-watch-setting", "committedDate": "2020-09-22T19:16:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NzI4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493867289", "body": "should #getSettings() also return this new setting ? (I think it is only really used for testing, but seems more correct to return all the settings up through the plugin). ", "bodyText": "should #getSettings() also return this new setting ? (I think it is only really used for testing, but seems more correct to return all the settings up through the plugin).", "bodyHTML": "<p dir=\"auto\">should #getSettings() also return this new setting ? (I think it is only really used for testing, but seems more correct to return all the settings up through the plugin).</p>", "author": "jakelandis", "createdAt": "2020-09-23T20:13:19Z", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/Exporters.java", "diffHunk": "@@ -62,7 +63,9 @@ public Exporters(Settings settings, Map<String, Exporter.Factory> factories,\n \n         final List<Setting.AffixSetting<?>> dynamicSettings =\n             getSettings().stream().filter(Setting::isDynamic).collect(Collectors.toList());\n-        clusterService.getClusterSettings().addSettingsUpdateConsumer(this::setExportersSetting, dynamicSettings);\n+        final List<Setting<?>> updateSettings = new ArrayList<Setting<?>>(dynamicSettings);", "originalCommit": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NDAyMg==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494574022", "bodyText": "It seems I missed that step, good catch!", "author": "jbaiera", "createdAt": "2020-09-24T19:54:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NzI4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493873923", "body": "It feels kinda weird to have this AND `xpack.monitoring.exporters.*.cluster_alerts.management.enabled` setting. \r\n\r\nI wonder if makes sense to \r\n1) expose a POST _monitoring/cluster_alert/disable endpoint (or whatever the name is)\r\n2) when that is called iterate through all of the current exporters and set `xpack.monitoring.exporters.<i>.cluster_alerts.management.enabled=false` and set some cluster state to no longer try to install cluster alerts (and reach out to delete the cluster alerts for those exporters)\r\n3) If a new exporter is created, set `xpack.monitoring.exporters.<new_exporter>.cluster_alerts.management.enabled=false` based on the cluster state. \r\n4) expose a POST _monitoring/cluster_alert/enable\r\n\r\nthoughts ? ", "bodyText": "It feels kinda weird to have this AND xpack.monitoring.exporters.*.cluster_alerts.management.enabled setting.\nI wonder if makes sense to\n\nexpose a POST _monitoring/cluster_alert/disable endpoint (or whatever the name is)\nwhen that is called iterate through all of the current exporters and set xpack.monitoring.exporters.<i>.cluster_alerts.management.enabled=false and set some cluster state to no longer try to install cluster alerts (and reach out to delete the cluster alerts for those exporters)\nIf a new exporter is created, set xpack.monitoring.exporters.<new_exporter>.cluster_alerts.management.enabled=false based on the cluster state.\nexpose a POST _monitoring/cluster_alert/enable\n\nthoughts ?", "bodyHTML": "<p dir=\"auto\">It feels kinda weird to have this AND <code>xpack.monitoring.exporters.*.cluster_alerts.management.enabled</code> setting.</p>\n<p dir=\"auto\">I wonder if makes sense to</p>\n<ol dir=\"auto\">\n<li>expose a POST _monitoring/cluster_alert/disable endpoint (or whatever the name is)</li>\n<li>when that is called iterate through all of the current exporters and set <code>xpack.monitoring.exporters.&lt;i&gt;.cluster_alerts.management.enabled=false</code> and set some cluster state to no longer try to install cluster alerts (and reach out to delete the cluster alerts for those exporters)</li>\n<li>If a new exporter is created, set <code>xpack.monitoring.exporters.&lt;new_exporter&gt;.cluster_alerts.management.enabled=false</code> based on the cluster state.</li>\n<li>expose a POST _monitoring/cluster_alert/enable</li>\n</ol>\n<p dir=\"auto\">thoughts ?</p>", "author": "jakelandis", "createdAt": "2020-09-23T20:25:57Z", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/Monitoring.java", "diffHunk": "@@ -77,6 +77,9 @@\n     public static final Setting<Boolean> CLEAN_WATCHER_HISTORY = boolSetting(\"xpack.watcher.history.cleaner_service.enabled\",\n         true, Setting.Property.Dynamic, Setting.Property.NodeScope, Setting.Property.Deprecated);\n \n+    public static final Setting<Boolean> MIGRATION_DECOMMISSION_ALERTS = boolSetting(\"xpack.monitoring.migration.decommission_alerts\",", "originalCommit": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIzNjAwNA==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494236004", "bodyText": "I'd be in favour of less settings but OTOH current flow with this setting seems simpler and less error-prone. And currently you can't enable single exporter back (with xpack.monitoring.exporters.<i>.cluster_alerts.management.enabled=true) which I think is good thing (easier to reason about cluster state).\nWe can still expose _monitoring/cluster_alert/disable endpoint if needed though if we want, it may be easier for the user to just call API than looking up setting to use", "author": "probakowski", "createdAt": "2020-09-24T11:24:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3MzQ2MQ==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494573461", "bodyText": "I consider this more of a first step with a new action that performs the migration to follow. If the exporters are disabled, this setting only ensures that the alerts are not created if they are turned back on (since alerts are created lazily much to my chagrin).\nThe main concern that was raised in the migration issue was that if a new exporter is configured, either on purpose or by accident, the cluster alerts for that exporter will not be installed. A global setting to control the existence of the alerts is the easiest way to fix that, even if it overlaps with other settings.", "author": "jbaiera", "createdAt": "2020-09-24T19:53:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0MzgxOA==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r496143818", "bodyText": "that makes sense, thanks for explaining.", "author": "jakelandis", "createdAt": "2020-09-28T18:15:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3MzkyMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg3NzExMQ==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r493877111", "body": "I think this name is bit misleading ? (maybe testDeployClusterAlerts) ?", "bodyText": "I think this name is bit misleading ? (maybe testDeployClusterAlerts) ?", "bodyHTML": "<p dir=\"auto\">I think this name is bit misleading ? (maybe testDeployClusterAlerts) ?</p>", "author": "jakelandis", "createdAt": "2020-09-23T20:32:02Z", "path": "x-pack/plugin/monitoring/src/test/java/org/elasticsearch/xpack/monitoring/exporter/http/HttpExporterResourceTests.java", "diffHunk": "@@ -484,6 +488,56 @@ public void testWatchPublishBlocksAfterSuccessfulWatcherCheck() {\n         verifyNoMoreInteractions(client);\n     }\n \n+    public void testWatchRemovalOnDecomissionAlerts() {", "originalCommit": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyNjU1OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62668#discussion_r494226559", "body": "```suggestion\r\n        boolean alertsProcessed = canUseWatcher() == false || watcherSetup.get();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean alertsProcessed = !canUseWatcher() || watcherSetup.get();\n          \n          \n            \n                    boolean alertsProcessed = canUseWatcher() == false || watcherSetup.get();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">boolean</span> alertsProcessed <span class=\"pl-k\">=</span> <span class=\"pl-k x x-first x-last\">!</span>canUseWatcher() <span class=\"pl-k\">||</span> watcherSetup<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">boolean</span> alertsProcessed <span class=\"pl-k\">=</span> canUseWatcher()<span class=\"x x-first\"> </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">false</span> <span class=\"pl-k\">||</span> watcherSetup<span class=\"pl-k\">.</span>get();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "probakowski", "createdAt": "2020-09-24T11:06:30Z", "path": "x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporter.java", "diffHunk": "@@ -159,8 +162,10 @@ public void licenseStateChanged() {\n     boolean isExporterReady() {\n         // forces the setup to occur if it hasn't already\n         final boolean running = resolveBulk(clusterService.state(), false) != null;\n+        // Report on watcher readiness\n+        boolean alertsProcessed = !canUseWatcher() || watcherSetup.get();", "originalCommit": "b9b2b37f3b04d805e93c32eec8e7e6b704453c40", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2faf8e2e825e25db36dde44545b75c53a3de3934", "url": "https://github.com/elastic/elasticsearch/commit/2faf8e2e825e25db36dde44545b75c53a3de3934", "message": "Update x-pack/plugin/monitoring/src/main/java/org/elasticsearch/xpack/monitoring/exporter/local/LocalExporter.java\n\nCo-authored-by: Przemko Robakowski <przemko.robakowski@elastic.co>", "committedDate": "2020-09-24T19:54:43Z", "type": "commit"}, {"oid": "31857157d55e24421d9ab58e870e7ad75d5875dc", "url": "https://github.com/elastic/elasticsearch/commit/31857157d55e24421d9ab58e870e7ad75d5875dc", "message": "Merge branch 'master' into monitoring-decommission-watch-setting", "committedDate": "2020-10-26T20:23:24Z", "type": "commit"}, {"oid": "3735e1a3cb0e019d6991bf555952ff7a592e132c", "url": "https://github.com/elastic/elasticsearch/commit/3735e1a3cb0e019d6991bf555952ff7a592e132c", "message": "addressed feedback", "committedDate": "2020-10-28T18:32:50Z", "type": "commit"}, {"oid": "3a281f7216355562a0fa55172f817494b5a9c31d", "url": "https://github.com/elastic/elasticsearch/commit/3a281f7216355562a0fa55172f817494b5a9c31d", "message": "Merge branch 'master' into monitoring-decommission-watch-setting", "committedDate": "2020-10-29T16:13:36Z", "type": "commit"}]}