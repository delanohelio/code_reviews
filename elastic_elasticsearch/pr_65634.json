{"pr_number": 65634, "pr_title": "Add KeyUsage, ExtendedKeyUsage, CipherSuite & Protocol to SSL diagnos\u2026", "pr_author": "sindhusp", "pr_createdAt": "2020-11-30T19:55:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/65634", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA4ODIzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533088239", "body": "`getKeyUsage()` returns `boolean[]`, but we need to decode it into the actual usage types (see the Javadoc for getKeyUsage for a description of each index)\r\nOutput like \r\n```\r\nkeyUsage [true,true,false,false,true,false,true,false,false]\r\n```\r\nisn't explanatory enough for this diagnostic message.", "bodyText": "getKeyUsage() returns boolean[], but we need to decode it into the actual usage types (see the Javadoc for getKeyUsage for a description of each index)\nOutput like\nkeyUsage [true,true,false,false,true,false,true,false,false]\n\nisn't explanatory enough for this diagnostic message.", "bodyHTML": "<p dir=\"auto\"><code>getKeyUsage()</code> returns <code>boolean[]</code>, but we need to decode it into the actual usage types (see the Javadoc for getKeyUsage for a description of each index)<br>\nOutput like</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"keyUsage [true,true,false,false,true,false,true,false,false]\n\"><pre><code>keyUsage [true,true,false,false,true,false,true,false,false]\n</code></pre></div>\n<p dir=\"auto\">isn't explanatory enough for this diagnostic message.</p>", "author": "tvernum", "createdAt": "2020-12-01T05:51:12Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +413,38 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        return Optional.ofNullable(certificate.getKeyUsage())\n+            .map(keyUsage -> \"keyUsage [\" + Arrays.toString(keyUsage) + \"]\")", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA4ODQ0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533088443", "body": "```suggestion\r\n            .append(\"], \")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .append(\"] and \")\n          \n          \n            \n                        .append(\"], \")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"x x-first x-last\"> and</span> <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"x x-first x-last\">,</span> <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-12-01T05:51:49Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -178,7 +179,13 @@ public static String getTrustDiagnosticFailure(X509Certificate[] chain, PeerType\n             .append(\" provided a certificate with subject name [\")\n             .append(peerCert.getSubjectX500Principal().getName())\n             .append(\"] and \")", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA4ODQ4MA==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533088480", "body": "```suggestion\r\n            .append(\", \")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .append(\" and \")\n          \n          \n            \n                        .append(\", \")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\"> and</span> <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">,</span> <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-12-01T05:51:58Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -178,7 +179,13 @@ public static String getTrustDiagnosticFailure(X509Certificate[] chain, PeerType\n             .append(\" provided a certificate with subject name [\")\n             .append(peerCert.getSubjectX500Principal().getName())\n             .append(\"] and \")\n-            .append(fingerprintDescription(peerCert));\n+            .append(fingerprintDescription(peerCert))\n+            .append(\" and \")", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MDc2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533090766", "body": "`getExtendedKeyUsage()` returns a List of OIDs.\r\nFor the standard OIDs (defined here https://tools.ietf.org/html/rfc5280#page-44), we need to decode those OIDs into useful names.\r\nNon standard OIDs should be left in their dotted notation.\r\n", "bodyText": "getExtendedKeyUsage() returns a List of OIDs.\nFor the standard OIDs (defined here https://tools.ietf.org/html/rfc5280#page-44), we need to decode those OIDs into useful names.\nNon standard OIDs should be left in their dotted notation.", "bodyHTML": "<p dir=\"auto\"><code>getExtendedKeyUsage()</code> returns a List of OIDs.<br>\nFor the standard OIDs (defined here <a href=\"https://tools.ietf.org/html/rfc5280#page-44\" rel=\"nofollow\">https://tools.ietf.org/html/rfc5280#page-44</a>), we need to decode those OIDs into useful names.<br>\nNon standard OIDs should be left in their dotted notation.</p>", "author": "tvernum", "createdAt": "2020-12-01T05:59:32Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +413,38 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        return Optional.ofNullable(certificate.getKeyUsage())\n+            .map(keyUsage -> \"keyUsage [\" + Arrays.toString(keyUsage) + \"]\")\n+            .orElse(\"no keyUsage\");\n+    }\n+\n+    private static String extendedKeyUsageDescription(X509Certificate certificate) {\n+        try {\n+            return Optional.ofNullable(certificate.getExtendedKeyUsage())\n+                .map(list -> generateExtendedKeyUsageDescription(list))\n+                .orElse(\"no extendedKeyUsage\");\n+        } catch (CertificateParsingException e) {\n+            return \"invalid extendedKeyUsage [\" + e.toString() + \"]\";\n+        }\n+    }\n+\n+    private static String generateExtendedKeyUsageDescription(List<String> list) {\n+        return list.stream()", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MTAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533091001", "body": "For brevity we can omit articles from the diagnostic\r\n```suggestion\r\n        message.append(\"; the session supports cipher suite [\")\r\n```", "bodyText": "For brevity we can omit articles from the diagnostic\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    message.append(\"; the session supports the cipher suite [\")\n          \n          \n            \n                    message.append(\"; the session supports cipher suite [\")", "bodyHTML": "<p dir=\"auto\">For brevity we can omit articles from the diagnostic</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        message<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>; the session supports <span class=\"x x-first x-last\">the </span>cipher suite [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        message<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>; the session supports cipher suite [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-12-01T06:00:15Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +413,38 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        return Optional.ofNullable(certificate.getKeyUsage())\n+            .map(keyUsage -> \"keyUsage [\" + Arrays.toString(keyUsage) + \"]\")\n+            .orElse(\"no keyUsage\");\n+    }\n+\n+    private static String extendedKeyUsageDescription(X509Certificate certificate) {\n+        try {\n+            return Optional.ofNullable(certificate.getExtendedKeyUsage())\n+                .map(list -> generateExtendedKeyUsageDescription(list))\n+                .orElse(\"no extendedKeyUsage\");\n+        } catch (CertificateParsingException e) {\n+            return \"invalid extendedKeyUsage [\" + e.toString() + \"]\";\n+        }\n+    }\n+\n+    private static String generateExtendedKeyUsageDescription(List<String> list) {\n+        return list.stream()\n+            .reduce((x, y) -> x + \", \" + y)\n+            .map(str -> \"extendedKeyUsage [\" + str + \"]\")\n+            .orElse(\"no extendedKeyUsage\");\n+    }\n+\n+    private static void addSessionDescription(SSLSession session, StringBuilder message) {\n+        String cipherSuite = Optional.ofNullable(session).map(SSLSession::getCipherSuite).orElse(\"<unknown cipherSuite>\");\n+        String protocol = Optional.ofNullable(session).map(SSLSession::getProtocol).orElse(\"<unknown protocol>\");\n+        message.append(\"; the session supports the cipher suite [\")", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MTEzMw==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533091133", "body": "```suggestion\r\n            .append(\"] and protocol [\")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .append(\"] and \")\n          \n          \n            \n                        .append(\"the protocol [\")\n          \n          \n            \n                        .append(\"] and protocol [\")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] and <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>the protocol [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] and protocol [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-12-01T06:00:39Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +413,38 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        return Optional.ofNullable(certificate.getKeyUsage())\n+            .map(keyUsage -> \"keyUsage [\" + Arrays.toString(keyUsage) + \"]\")\n+            .orElse(\"no keyUsage\");\n+    }\n+\n+    private static String extendedKeyUsageDescription(X509Certificate certificate) {\n+        try {\n+            return Optional.ofNullable(certificate.getExtendedKeyUsage())\n+                .map(list -> generateExtendedKeyUsageDescription(list))\n+                .orElse(\"no extendedKeyUsage\");\n+        } catch (CertificateParsingException e) {\n+            return \"invalid extendedKeyUsage [\" + e.toString() + \"]\";\n+        }\n+    }\n+\n+    private static String generateExtendedKeyUsageDescription(List<String> list) {\n+        return list.stream()\n+            .reduce((x, y) -> x + \", \" + y)\n+            .map(str -> \"extendedKeyUsage [\" + str + \"]\")\n+            .orElse(\"no extendedKeyUsage\");\n+    }\n+\n+    private static void addSessionDescription(SSLSession session, StringBuilder message) {\n+        String cipherSuite = Optional.ofNullable(session).map(SSLSession::getCipherSuite).orElse(\"<unknown cipherSuite>\");\n+        String protocol = Optional.ofNullable(session).map(SSLSession::getProtocol).orElse(\"<unknown protocol>\");\n+        message.append(\"; the session supports the cipher suite [\")\n+            .append(cipherSuite)\n+            .append(\"] and \")\n+            .append(\"the protocol [\")", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MTcwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533091705", "body": "We need some of the tests to have real values for all of these.\r\nAs it is we're only testing the \"no value\" cases, which is the least important case. \r\n\r\nThat will require regenerating some of the certs (and updating the fingerprints) to have key usage properties.\r\n(see libs/ssl-config/src/test/resources/certs/README.txt)\r\nand/or changing `mockCertificateWithIssuer` and `session` to provide mock values.\r\n\r\n", "bodyText": "We need some of the tests to have real values for all of these.\nAs it is we're only testing the \"no value\" cases, which is the least important case.\nThat will require regenerating some of the certs (and updating the fingerprints) to have key usage properties.\n(see libs/ssl-config/src/test/resources/certs/README.txt)\nand/or changing mockCertificateWithIssuer and session to provide mock values.", "bodyHTML": "<p dir=\"auto\">We need some of the tests to have real values for all of these.<br>\nAs it is we're only testing the \"no value\" cases, which is the least important case.</p>\n<p dir=\"auto\">That will require regenerating some of the certs (and updating the fingerprints) to have key usage properties.<br>\n(see libs/ssl-config/src/test/resources/certs/README.txt)<br>\nand/or changing <code>mockCertificateWithIssuer</code> and <code>session</code> to provide mock values.</p>", "author": "tvernum", "createdAt": "2020-12-01T06:02:26Z", "path": "libs/ssl-config/src/test/java/org/elasticsearch/common/ssl/SslDiagnosticsTests.java", "diffHunk": "@@ -63,7 +63,8 @@ public void testDiagnosticMessageWhenServerProvidesAFullCertChainThatIsTrusted()\n         final String message = SslDiagnostics.getTrustDiagnosticFailure(chain, SslDiagnostics.PeerType.SERVER, session,\n             \"xpack.http.ssl\", trustIssuers);\n         assertThat(message, Matchers.equalTo(\"failed to establish trust with server at [192.168.1.1];\" +\n-            \" the server provided a certificate with subject name [CN=cert1] and fingerprint [3bebe388a66362784afd6c51a9000961a4e10050];\" +\n+            \" the server provided a certificate with subject name [CN=cert1] and fingerprint [3bebe388a66362784afd6c51a9000961a4e10050] and no keyUsage and no extendedKeyUsage;\" +\n+            \" the session supports the cipher suite [<unknown cipherSuite>] and the protocol [<unknown protocol>];\" +", "originalCommit": "3d8562345254269163e23b1f0397a9f1e6e23e06", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYwMjY4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533602689", "bodyText": "I've edited the mockCertificateWithIssuer and session methods to provide mock values. I attempted to regenerate the cert yesterday without much success, so went with the mocking. Let me know if this works.", "author": "sindhusp", "createdAt": "2020-12-01T17:44:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MTcwNQ=="}], "type": "inlineReview"}, {"oid": "88ecbd0b204a07415698e693dfad8d3c179b59fe", "url": "https://github.com/elastic/elasticsearch/commit/88ecbd0b204a07415698e693dfad8d3c179b59fe", "message": "Add KeyUsage, ExtendedKeyUsage, CipherSuite & Protocol to SSL diagnostics", "committedDate": "2020-12-01T07:06:16Z", "type": "commit"}, {"oid": "88ecbd0b204a07415698e693dfad8d3c179b59fe", "url": "https://github.com/elastic/elasticsearch/commit/88ecbd0b204a07415698e693dfad8d3c179b59fe", "message": "Add KeyUsage, ExtendedKeyUsage, CipherSuite & Protocol to SSL diagnostics", "committedDate": "2020-12-01T07:06:16Z", "type": "forcePushed"}, {"oid": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "url": "https://github.com/elastic/elasticsearch/commit/f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "message": "Review comments\n\n* Fix formatting\n* Add descriptive keyUsage, extendedKeyUsage msgs\n* Mock cert's keyUsage, extendedKeyUsage\n* Mock session's cipherSuite, protocol", "committedDate": "2020-12-01T17:45:56Z", "type": "commit"}, {"oid": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "url": "https://github.com/elastic/elasticsearch/commit/f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "message": "Review comments\n\n* Fix formatting\n* Add descriptive keyUsage, extendedKeyUsage msgs\n* Mock cert's keyUsage, extendedKeyUsage\n* Mock session's cipherSuite, protocol", "committedDate": "2020-12-01T17:45:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxMDczNw==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r533610737", "body": "Should I use an enum here too like I've done with `ExtendedKeyUsage`, for uniformity? I could define the index as the Enum field. ", "bodyText": "Should I use an enum here too like I've done with ExtendedKeyUsage, for uniformity? I could define the index as the Enum field.", "bodyHTML": "<p dir=\"auto\">Should I use an enum here too like I've done with <code>ExtendedKeyUsage</code>, for uniformity? I could define the index as the Enum field.</p>", "author": "sindhusp", "createdAt": "2020-12-01T17:56:40Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -415,23 +440,40 @@ private static boolean isSelfIssued(X509Certificate certificate) {\n     }\n \n     private static String keyUsageDescription(X509Certificate certificate) {\n-        return Optional.ofNullable(certificate.getKeyUsage())\n-            .map(keyUsage -> \"keyUsage [\" + Arrays.toString(keyUsage) + \"]\")\n+        boolean[] keyUsage = certificate.getKeyUsage();\n+        if (keyUsage == null || keyUsage.length == 0) {\n+            return \"no keyUsage\";\n+        }\n+\n+        final String[] keyUsageGlossary = {\"digitalSignature\", \"nonRepudiation\", \"keyEncipherment\",", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU3NzA1MA==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572577050", "bodyText": "I think either is fine.\nI do like the consistency of having an enum for each, but it would require care so that the ordinals matched correctly.\nI think my personal preference would be to just move this array to be a constant that is declared in the same part of the file as ExtendedKeyUsage", "author": "tvernum", "createdAt": "2021-02-09T03:57:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYxMDczNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU3NjM0OA==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572576348", "body": "`e.oid` can never be null, because this is an enum with fixed (non-null) values.\r\nI think it's fine to skip the null check here.\r\n\r\nIf you'd prefer to be safe, you could use `this.oid = Objects.requireNonNull(oid);` in the constructor. ", "bodyText": "e.oid can never be null, because this is an enum with fixed (non-null) values.\nI think it's fine to skip the null check here.\nIf you'd prefer to be safe, you could use this.oid = Objects.requireNonNull(oid); in the constructor.", "bodyHTML": "<p dir=\"auto\"><code>e.oid</code> can never be null, because this is an enum with fixed (non-null) values.<br>\nI think it's fine to skip the null check here.</p>\n<p dir=\"auto\">If you'd prefer to be safe, you could use <code>this.oid = Objects.requireNonNull(oid);</code> in the constructor.</p>", "author": "tvernum", "createdAt": "2021-02-09T03:55:06Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -151,6 +153,30 @@ boolean isSameCertificate() {\n         }\n     }\n \n+    public enum ExtendedKeyUsage {\n+        serverAuth (\"1.3.6.1.5.5.7.3.1\"),\n+        clientAuth (\"1.3.6.1.5.5.7.3.2\"),\n+        codeSigning (\"1.3.6.1.5.5.7.3.3\"),\n+        emailProtection (\"1.3.6.1.5.5.7.3.4\"),\n+        timeStamping (\"1.3.6.1.5.5.7.3.8\"),\n+        ocspSigning (\"1.3.6.1.5.5.7.3.9\");\n+\n+        private String oid;\n+\n+        private ExtendedKeyUsage(String oid) {\n+            this.oid = oid;\n+        }\n+\n+        public static String decodeOid(String oid) {\n+            for (ExtendedKeyUsage e : values()) {\n+                if (e.oid != null && e.oid.equals(oid)) {", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU3ODIwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572578201", "body": "For safety we should check that `i < keyUsageGlossary.length`", "bodyText": "For safety we should check that i < keyUsageGlossary.length", "bodyHTML": "<p dir=\"auto\">For safety we should check that <code>i &lt; keyUsageGlossary.length</code></p>", "author": "tvernum", "createdAt": "2021-02-09T04:01:35Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +438,58 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        boolean[] keyUsage = certificate.getKeyUsage();\n+        if (keyUsage == null || keyUsage.length == 0) {\n+            return \"no keyUsage\";\n+        }\n+\n+        final String[] keyUsageGlossary = {\"digitalSignature\", \"nonRepudiation\", \"keyEncipherment\",\n+            \"dataEncipherment\", \"keyAgreement\", \"keyCertSign\", \"cRLSign\", \"encipherOnly\",\n+            \"decipherOnly\"};\n+\n+        List<String> keyUsageDescription = new ArrayList<>();\n+        IntStream.range(0, keyUsage.length).forEach(i -> {\n+            if (keyUsage[i]) {\n+                keyUsageDescription.add(keyUsageGlossary[i]);", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU4MDIwNA==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572580204", "body": "The style use have used here is fine, but I would have written it like this:\r\n```suggestion\r\n        String keyUsageDescription = IntStream.range(0, keyUsage.length)\r\n          .filter(i -> keyUsage[i])\r\n          .map(i -> i < keyUsageGlossary.length ? keyUsageGlossary[i] : \"#\" + i)\r\n          .collect(Collectors.joining(\", \"));\r\n```\r\nAnd then tested whether that was empty or not. ", "bodyText": "The style use have used here is fine, but I would have written it like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<String> keyUsageDescription = new ArrayList<>();\n          \n          \n            \n                    IntStream.range(0, keyUsage.length).forEach(i -> {\n          \n          \n            \n                        if (keyUsage[i]) {\n          \n          \n            \n                            keyUsageDescription.add(keyUsageGlossary[i]);\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    return keyUsageDescription.stream()\n          \n          \n            \n                        .reduce((a, b) -> a + \", \" + b)\n          \n          \n            \n                    String keyUsageDescription = IntStream.range(0, keyUsage.length)\n          \n          \n            \n                      .filter(i -> keyUsage[i])\n          \n          \n            \n                      .map(i -> i < keyUsageGlossary.length ? keyUsageGlossary[i] : \"#\" + i)\n          \n          \n            \n                      .collect(Collectors.joining(\", \"));\n          \n      \n    \n    \n  \n\nAnd then tested whether that was empty or not.", "bodyHTML": "<p dir=\"auto\">The style use have used here is fine, but I would have written it like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span> keyUsageDescription <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">IntStream</span><span class=\"pl-k\">.</span>range(<span class=\"pl-c1\">0</span>, keyUsage<span class=\"pl-k\">.</span>length)<span class=\"pl-k\">.</span>forEach(i <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (keyUsage[i]) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                keyUsageDescription<span class=\"pl-k\">.</span>add(keyUsageGlossary[i]);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> keyUsageDescription<span class=\"pl-k\">.</span>stream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .reduce((a, b) <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> a <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> b)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">String</span> keyUsageDescription <span class=\"pl-k\">=</span> <span class=\"pl-smi\">IntStream</span><span class=\"pl-k\">.</span>range(<span class=\"pl-c1\">0</span>, keyUsage<span class=\"pl-k\">.</span>length)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          .filter(i <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> keyUsage[i])</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          .map(i <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> i <span class=\"pl-k\">&lt;</span> keyUsageGlossary<span class=\"pl-k\">.</span>length <span class=\"pl-k\">?</span> keyUsageGlossary[i] <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>#<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> i)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          .collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>joining(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">And then tested whether that was empty or not.</p>", "author": "tvernum", "createdAt": "2021-02-09T04:08:36Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +438,58 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        boolean[] keyUsage = certificate.getKeyUsage();\n+        if (keyUsage == null || keyUsage.length == 0) {\n+            return \"no keyUsage\";\n+        }\n+\n+        final String[] keyUsageGlossary = {\"digitalSignature\", \"nonRepudiation\", \"keyEncipherment\",\n+            \"dataEncipherment\", \"keyAgreement\", \"keyCertSign\", \"cRLSign\", \"encipherOnly\",\n+            \"decipherOnly\"};\n+\n+        List<String> keyUsageDescription = new ArrayList<>();\n+        IntStream.range(0, keyUsage.length).forEach(i -> {\n+            if (keyUsage[i]) {\n+                keyUsageDescription.add(keyUsageGlossary[i]);\n+            }\n+        });\n+        return keyUsageDescription.stream()\n+            .reduce((a, b) -> a + \", \" + b)", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU4MDc3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572580779", "body": "You have this `orElse` case both here, and in  `generateExtendedKeyUsageDescription` and I don't think that's necessary.", "bodyText": "You have this orElse case both here, and in  generateExtendedKeyUsageDescription and I don't think that's necessary.", "bodyHTML": "<p dir=\"auto\">You have this <code>orElse</code> case both here, and in  <code>generateExtendedKeyUsageDescription</code> and I don't think that's necessary.</p>", "author": "tvernum", "createdAt": "2021-02-09T04:10:37Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +438,58 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        boolean[] keyUsage = certificate.getKeyUsage();\n+        if (keyUsage == null || keyUsage.length == 0) {\n+            return \"no keyUsage\";\n+        }\n+\n+        final String[] keyUsageGlossary = {\"digitalSignature\", \"nonRepudiation\", \"keyEncipherment\",\n+            \"dataEncipherment\", \"keyAgreement\", \"keyCertSign\", \"cRLSign\", \"encipherOnly\",\n+            \"decipherOnly\"};\n+\n+        List<String> keyUsageDescription = new ArrayList<>();\n+        IntStream.range(0, keyUsage.length).forEach(i -> {\n+            if (keyUsage[i]) {\n+                keyUsageDescription.add(keyUsageGlossary[i]);\n+            }\n+        });\n+        return keyUsageDescription.stream()\n+            .reduce((a, b) -> a + \", \" + b)\n+            .map(str ->  \"keyUsage [\" + str + \"]\")\n+            .orElse(\"no keyUsage\");\n+    }\n+\n+    private static String extendedKeyUsageDescription(X509Certificate certificate) {\n+        try {\n+            return Optional.ofNullable(certificate.getExtendedKeyUsage())\n+                .map(keyUsage -> generateExtendedKeyUsageDescription(keyUsage))\n+                .orElse(\"no extendedKeyUsage\");", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjU4MTA3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/65634#discussion_r572581076", "body": "```suggestion\r\n        message.append(\"; the session uses cipher suite [\")\r\n```\r\nStrictly, by the time we get to a session being established it's not really \"supports\", it's \"has selected for use\"", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    message.append(\"; the session supports cipher suite [\")\n          \n          \n            \n                    message.append(\"; the session uses cipher suite [\")\n          \n      \n    \n    \n  \n\nStrictly, by the time we get to a session being established it's not really \"supports\", it's \"has selected for use\"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        message<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>; the session <span class=\"x x-first x-last\">supports</span> cipher suite [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        message<span class=\"pl-k\">.</span>append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>; the session <span class=\"x x-first x-last\">uses</span> cipher suite [<span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Strictly, by the time we get to a session being established it's not really \"supports\", it's \"has selected for use\"</p>", "author": "tvernum", "createdAt": "2021-02-09T04:11:48Z", "path": "libs/ssl-config/src/main/java/org/elasticsearch/common/ssl/SslDiagnostics.java", "diffHunk": "@@ -406,4 +438,58 @@ private static boolean checkIssuer(X509Certificate certificate, X509Certificate\n     private static boolean isSelfIssued(X509Certificate certificate) {\n         return certificate.getIssuerX500Principal().equals(certificate.getSubjectX500Principal());\n     }\n+\n+    private static String keyUsageDescription(X509Certificate certificate) {\n+        boolean[] keyUsage = certificate.getKeyUsage();\n+        if (keyUsage == null || keyUsage.length == 0) {\n+            return \"no keyUsage\";\n+        }\n+\n+        final String[] keyUsageGlossary = {\"digitalSignature\", \"nonRepudiation\", \"keyEncipherment\",\n+            \"dataEncipherment\", \"keyAgreement\", \"keyCertSign\", \"cRLSign\", \"encipherOnly\",\n+            \"decipherOnly\"};\n+\n+        List<String> keyUsageDescription = new ArrayList<>();\n+        IntStream.range(0, keyUsage.length).forEach(i -> {\n+            if (keyUsage[i]) {\n+                keyUsageDescription.add(keyUsageGlossary[i]);\n+            }\n+        });\n+        return keyUsageDescription.stream()\n+            .reduce((a, b) -> a + \", \" + b)\n+            .map(str ->  \"keyUsage [\" + str + \"]\")\n+            .orElse(\"no keyUsage\");\n+    }\n+\n+    private static String extendedKeyUsageDescription(X509Certificate certificate) {\n+        try {\n+            return Optional.ofNullable(certificate.getExtendedKeyUsage())\n+                .map(keyUsage -> generateExtendedKeyUsageDescription(keyUsage))\n+                .orElse(\"no extendedKeyUsage\");\n+        } catch (CertificateParsingException e) {\n+            return \"invalid extendedKeyUsage [\" + e.toString() + \"]\";\n+        }\n+    }\n+\n+    private static String generateExtendedKeyUsageDescription(List<String> oids) {\n+        return oids.stream()\n+            .map(ExtendedKeyUsage::decodeOid)\n+            .reduce((x, y) -> x + \", \" + y)\n+            .map(str -> \"extendedKeyUsage [\" + str + \"]\")\n+            .orElse(\"no extendedKeyUsage\");\n+    }\n+\n+    private static void addSessionDescription(SSLSession session, StringBuilder message) {\n+        String cipherSuite = Optional.ofNullable(session)\n+            .map(SSLSession::getCipherSuite)\n+            .orElse(\"<unknown cipherSuite>\");\n+        String protocol = Optional.ofNullable(session)\n+            .map(SSLSession::getProtocol)\n+            .orElse(\"<unknown protocol>\");\n+        message.append(\"; the session supports cipher suite [\")", "originalCommit": "f6af049fcfdf585ddc0d5b3225d95fc769b308c8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a7c6be0589d92941917bec8392ed080afb072861", "url": "https://github.com/elastic/elasticsearch/commit/a7c6be0589d92941917bec8392ed080afb072861", "message": "Merge branch 'master' into sslDiagnostics", "committedDate": "2021-08-13T03:06:30Z", "type": "commit"}, {"oid": "3752caf8c6081cd012cdb3a92cab7f490a9d161e", "url": "https://github.com/elastic/elasticsearch/commit/3752caf8c6081cd012cdb3a92cab7f490a9d161e", "message": "Tweak implementation and add more tests", "committedDate": "2021-08-13T03:53:48Z", "type": "commit"}, {"oid": "e23a504310b87a7d0de42629840055285b9cb4d1", "url": "https://github.com/elastic/elasticsearch/commit/e23a504310b87a7d0de42629840055285b9cb4d1", "message": "Fix broken test", "committedDate": "2021-08-13T05:13:29Z", "type": "commit"}]}