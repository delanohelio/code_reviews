{"pr_number": 62377, "pr_title": "Fix condition in ILM step that cannot be met", "pr_author": "cbuescher", "pr_createdAt": "2020-09-15T12:22:15Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62377", "timeline": [{"oid": "7d361732cfd97618b5edeb8f06b9e8833d1e2995", "url": "https://github.com/elastic/elasticsearch/commit/7d361732cfd97618b5edeb8f06b9e8833d1e2995", "message": "Fix ILM step statement that can never be met\n\nReplaceDataStreamBackingIndexStep#performAction seems to perform an equality\ncheck on an original Index and the write indexes names, but because this\ncompares an Index instance to a String, the condition can never be met.\nI added a test that triggers this code path but am not sure if this scenario can\nreally happen in practice or if the test is too constructed. Happy to change,\njust wanted to raise this since I happend to run across the warning in the code.", "committedDate": "2020-09-15T13:08:15Z", "type": "commit"}, {"oid": "7d361732cfd97618b5edeb8f06b9e8833d1e2995", "url": "https://github.com/elastic/elasticsearch/commit/7d361732cfd97618b5edeb8f06b9e8833d1e2995", "message": "Fix ILM step statement that can never be met\n\nReplaceDataStreamBackingIndexStep#performAction seems to perform an equality\ncheck on an original Index and the write indexes names, but because this\ncompares an Index instance to a String, the condition can never be met.\nI added a test that triggers this code path but am not sure if this scenario can\nreally happen in practice or if the test is too constructed. Happy to change,\njust wanted to raise this since I happend to run across the warning in the code.", "committedDate": "2020-09-15T13:08:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM1ODE2OQ==", "url": "https://github.com/elastic/elasticsearch/pull/62377#discussion_r489358169", "body": "on second thought, to be consistent, I believe we should check indices equality (not just the name)\r\n```suggestion\r\n        if (dataStream.getWriteIndex().getIndex().equals(index)) {\r\n```\r\nWe already do this in [another step](https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/CheckNotDataStreamWriteIndexStep.java#L64)", "bodyText": "on second thought, to be consistent, I believe we should check indices equality (not just the name)\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (dataStream.getWriteIndex().getIndex().getName().equals(originalIndex)) {\n          \n          \n            \n                    if (dataStream.getWriteIndex().getIndex().equals(index)) {\n          \n      \n    \n    \n  \n\nWe already do this in another step", "bodyHTML": "<p dir=\"auto\">on second thought, to be consistent, I believe we should check indices equality (not just the name)</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (dataStream<span class=\"pl-k\">.</span>getWriteIndex()<span class=\"pl-k\">.</span>getIndex()<span class=\"pl-k\">.</span><span class=\"x x-first\">getName()</span><span class=\"pl-k x x-last\">.</span>equals(<span class=\"x x-first x-last\">originalIndex</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (dataStream<span class=\"pl-k\">.</span>getWriteIndex()<span class=\"pl-k\">.</span>getIndex()<span class=\"pl-k\">.</span>equals(<span class=\"x x-first x-last\">index</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">We already do this in <a href=\"https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/CheckNotDataStreamWriteIndexStep.java#L64\">another step</a></p>", "author": "andreidan", "createdAt": "2020-09-16T11:16:44Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/ReplaceDataStreamBackingIndexStep.java", "diffHunk": "@@ -75,7 +75,7 @@ public ClusterState performAction(Index index, ClusterState clusterState) {\n         }\n \n         assert dataStream.getWriteIndex() != null : dataStream.getName() + \" has no write index\";\n-        if (dataStream.getWriteIndex().getIndex().equals(originalIndex)) {\n+        if (dataStream.getWriteIndex().getIndex().getName().equals(originalIndex)) {", "originalCommit": "7d361732cfd97618b5edeb8f06b9e8833d1e2995", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2bab53c24de70a3a7ce391ba2e034d0ad70adbd8", "url": "https://github.com/elastic/elasticsearch/commit/2bab53c24de70a3a7ce391ba2e034d0ad70adbd8", "message": "Adressing review comment", "committedDate": "2020-09-16T14:55:28Z", "type": "commit"}]}