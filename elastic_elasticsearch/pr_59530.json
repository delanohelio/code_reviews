{"pr_number": 59530, "pr_title": "Check for ml privilege when using the Inference Aggregation", "pr_author": "davidkyle", "pr_createdAt": "2020-07-14T12:52:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59530", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0MzA2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454343062", "body": "Does this stop really high privilege users from using inference?  For example, the actions permitted by `manage_ml` are a subset of those permitted by `manage` (which means manage everything except security), but literally checking for `manage_ml` might not return `true` for a user who has `manage`.  I may be wrong as I haven't tested it, but it seems likely that the security code will resolve high level cluster privilege names to sets of actions they allow, but not to other high level cluster privilege names.\r\n\r\nYou could check for just `GetTrainedModelsAction.NAME` here instead to solve that potential problem and also make the later code simpler as you'll only be testing for one privilege:\r\n\r\n```suggestion\r\n                    privRequest.clusterPrivileges(GetTrainedModelsAction.NAME);\r\n```", "bodyText": "Does this stop really high privilege users from using inference?  For example, the actions permitted by manage_ml are a subset of those permitted by manage (which means manage everything except security), but literally checking for manage_ml might not return true for a user who has manage.  I may be wrong as I haven't tested it, but it seems likely that the security code will resolve high level cluster privilege names to sets of actions they allow, but not to other high level cluster privilege names.\nYou could check for just GetTrainedModelsAction.NAME here instead to solve that potential problem and also make the later code simpler as you'll only be testing for one privilege:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                privRequest.clusterPrivileges(\"manage_ml\", \"monitor_ml\");\n          \n          \n            \n                                privRequest.clusterPrivileges(GetTrainedModelsAction.NAME);", "bodyHTML": "<p dir=\"auto\">Does this stop really high privilege users from using inference?  For example, the actions permitted by <code>manage_ml</code> are a subset of those permitted by <code>manage</code> (which means manage everything except security), but literally checking for <code>manage_ml</code> might not return <code>true</code> for a user who has <code>manage</code>.  I may be wrong as I haven't tested it, but it seems likely that the security code will resolve high level cluster privilege names to sets of actions they allow, but not to other high level cluster privilege names.</p>\n<p dir=\"auto\">You could check for just <code>GetTrainedModelsAction.NAME</code> here instead to solve that potential problem and also make the later code simpler as you'll only be testing for one privilege:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    privRequest<span class=\"pl-k\">.</span>clusterPrivileges(<span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">manage_ml</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">monitor_ml</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    privRequest<span class=\"pl-k\">.</span>clusterPrivileges(<span class=\"pl-smi x x-first\">GetTrainedModelsAction</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">NAME</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-07-14T13:08:53Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -199,10 +210,47 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n                     delegate.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING));\n                 }\n             }));\n+\n+\n+        context.registerAsyncAction((client, listener) -> {\n+            if (licenseState.isSecurityEnabled()) {\n+                // check the user has ml privileges\n+                SecurityContext securityContext =new SecurityContext(Settings.EMPTY, client.threadPool().getThreadContext());\n+                useSecondaryAuthIfAvailable(securityContext, () -> {\n+                    final String username = securityContext.getUser().principal();\n+                    final HasPrivilegesRequest privRequest = new HasPrivilegesRequest();\n+                    privRequest.username(username);\n+                    privRequest.clusterPrivileges(\"manage_ml\", \"monitor_ml\");", "originalCommit": "d0cdf0af596975ac32b45490f8ddeb6876467530", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM2MTQ4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454361482", "bodyText": "Yes that works", "author": "davidkyle", "createdAt": "2020-07-14T13:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0MzA2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0NTE4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454345185", "body": "```suggestion\r\n                                    \"user [\" + username + \"] does not have the privilege to get trained models \" +\r\n                                        \"so cannot use ml inference\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                \"user [\" + username + \"] is not an ml user and does not have sufficient privilege \" +\n          \n          \n            \n                                                    \"to use ml inference\"));\n          \n          \n            \n                                                \"user [\" + username + \"] does not have the privilege to get trained models \" +\n          \n          \n            \n                                                    \"so cannot use ml inference\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] <span class=\"x x-first x-last\">is</span> not <span class=\"x x-first x-last\">an ml user and does not have sufficient privilege</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">to</span> use ml inference<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>user [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> username <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] <span class=\"x x-first x-last\">does</span> not <span class=\"x x-first x-last\">have the privilege to get trained models</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">so cannot</span> use ml inference<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-07-14T13:12:19Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -199,10 +210,47 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n                     delegate.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING));\n                 }\n             }));\n+\n+\n+        context.registerAsyncAction((client, listener) -> {\n+            if (licenseState.isSecurityEnabled()) {\n+                // check the user has ml privileges\n+                SecurityContext securityContext =new SecurityContext(Settings.EMPTY, client.threadPool().getThreadContext());\n+                useSecondaryAuthIfAvailable(securityContext, () -> {\n+                    final String username = securityContext.getUser().principal();\n+                    final HasPrivilegesRequest privRequest = new HasPrivilegesRequest();\n+                    privRequest.username(username);\n+                    privRequest.clusterPrivileges(\"manage_ml\", \"monitor_ml\");\n+                    privRequest.indexPrivileges(new RoleDescriptor.IndicesPrivileges[]{});\n+                    privRequest.applicationPrivileges(new RoleDescriptor.ApplicationResourcePrivileges[]{});\n+\n+                    ActionListener<HasPrivilegesResponse> privResponseListener = ActionListener.wrap(\n+                        r -> {\n+                            if (hasMlPrivilege(r)) {\n+                                modelLoadAction.accept(client, listener);\n+                            } else {\n+                                listener.onFailure(Exceptions.authorizationError(\n+                                    \"user [\" + username + \"] is not an ml user and does not have sufficient privilege \" +\n+                                        \"to use ml inference\"));", "originalCommit": "d0cdf0af596975ac32b45490f8ddeb6876467530", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM0NzA1OA==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454347058", "body": "This method won't be needed if just checking one privilege.", "bodyText": "This method won't be needed if just checking one privilege.", "bodyHTML": "<p dir=\"auto\">This method won't be needed if just checking one privilege.</p>", "author": "droberts195", "createdAt": "2020-07-14T13:15:14Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -199,10 +210,47 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n                     delegate.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING));\n                 }\n             }));\n+\n+\n+        context.registerAsyncAction((client, listener) -> {\n+            if (licenseState.isSecurityEnabled()) {\n+                // check the user has ml privileges\n+                SecurityContext securityContext =new SecurityContext(Settings.EMPTY, client.threadPool().getThreadContext());\n+                useSecondaryAuthIfAvailable(securityContext, () -> {\n+                    final String username = securityContext.getUser().principal();\n+                    final HasPrivilegesRequest privRequest = new HasPrivilegesRequest();\n+                    privRequest.username(username);\n+                    privRequest.clusterPrivileges(\"manage_ml\", \"monitor_ml\");\n+                    privRequest.indexPrivileges(new RoleDescriptor.IndicesPrivileges[]{});\n+                    privRequest.applicationPrivileges(new RoleDescriptor.ApplicationResourcePrivileges[]{});\n+\n+                    ActionListener<HasPrivilegesResponse> privResponseListener = ActionListener.wrap(\n+                        r -> {\n+                            if (hasMlPrivilege(r)) {\n+                                modelLoadAction.accept(client, listener);\n+                            } else {\n+                                listener.onFailure(Exceptions.authorizationError(\n+                                    \"user [\" + username + \"] is not an ml user and does not have sufficient privilege \" +\n+                                        \"to use ml inference\"));\n+                            }\n+                        },\n+                        listener::onFailure);\n+\n+                    client.execute(HasPrivilegesAction.INSTANCE, privRequest, privResponseListener);\n+                });\n+            } else {\n+                modelLoadAction.accept(client, listener);\n+            }\n         });\n         return new InferencePipelineAggregationBuilder(name, bucketPathMap, loadedModel::get, modelId, inferenceConfig, licenseState);\n     }\n \n+    static boolean hasMlPrivilege(HasPrivilegesResponse privilegesResponse) {", "originalCommit": "d0cdf0af596975ac32b45490f8ddeb6876467530", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MTQ4OA==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454391488", "body": "nit: space after equals", "bodyText": "nit: space after equals", "bodyHTML": "<p dir=\"auto\">nit: space after equals</p>", "author": "dimitris-athanasiou", "createdAt": "2020-07-14T14:19:35Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -199,6 +211,37 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n                     delegate.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING));\n                 }\n             }));\n+\n+\n+        context.registerAsyncAction((client, listener) -> {\n+            if (licenseState.isSecurityEnabled()) {\n+                // check the user has ml privileges\n+                SecurityContext securityContext =new SecurityContext(Settings.EMPTY, client.threadPool().getThreadContext());", "originalCommit": "567ee1b4fc2f4aa96d07dcddc01f634591f10d96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MTg1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454391856", "body": "Ah, nice! That's what to use when in need to return more than a single thing. I'll use that onwards!", "bodyText": "Ah, nice! That's what to use when in need to return more than a single thing. I'll use that onwards!", "bodyHTML": "<p dir=\"auto\">Ah, nice! That's what to use when in need to return more than a single thing. I'll use that onwards!</p>", "author": "dimitris-athanasiou", "createdAt": "2020-07-14T14:20:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -186,8 +197,9 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n         if (model != null) {\n             return this;\n         }\n+\n         SetOnce<LocalModel> loadedModel = new SetOnce<>();\n-        context.registerAsyncAction((client, listener) -> {\n+        BiConsumer<Client, ActionListener<?>> modelLoadAction = (client, listener) ->", "originalCommit": "567ee1b4fc2f4aa96d07dcddc01f634591f10d96", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MjU2Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454392567", "body": "Do we need to set index and application privileges even though they're empty?", "bodyText": "Do we need to set index and application privileges even though they're empty?", "bodyHTML": "<p dir=\"auto\">Do we need to set index and application privileges even though they're empty?</p>", "author": "dimitris-athanasiou", "createdAt": "2020-07-14T14:21:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/aggs/InferencePipelineAggregationBuilder.java", "diffHunk": "@@ -199,6 +211,37 @@ public InferencePipelineAggregationBuilder rewrite(QueryRewriteContext context)\n                     delegate.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING));\n                 }\n             }));\n+\n+\n+        context.registerAsyncAction((client, listener) -> {\n+            if (licenseState.isSecurityEnabled()) {\n+                // check the user has ml privileges\n+                SecurityContext securityContext =new SecurityContext(Settings.EMPTY, client.threadPool().getThreadContext());\n+                useSecondaryAuthIfAvailable(securityContext, () -> {\n+                    final String username = securityContext.getUser().principal();\n+                    final HasPrivilegesRequest privRequest = new HasPrivilegesRequest();\n+                    privRequest.username(username);\n+                    privRequest.clusterPrivileges(GetTrainedModelsAction.NAME);\n+                    privRequest.indexPrivileges(new RoleDescriptor.IndicesPrivileges[]{});", "originalCommit": "567ee1b4fc2f4aa96d07dcddc01f634591f10d96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2NzgxMA==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454467810", "bodyText": "Yes because of this validation\nhttps://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/action/user/HasPrivilegesRequest.java#L46", "author": "davidkyle", "createdAt": "2020-07-14T16:03:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MjU2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NDEzNw==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454394137", "body": "Isn't this the same as doing `if (mapOfMaps.contains(key)) return true;` ?", "bodyText": "Isn't this the same as doing if (mapOfMaps.contains(key)) return true; ?", "bodyHTML": "<p dir=\"auto\">Isn't this the same as doing <code>if (mapOfMaps.contains(key)) return true;</code> ?</p>", "author": "dimitris-athanasiou", "createdAt": "2020-07-14T14:23:14Z", "path": "x-pack/plugin/ml/qa/ml-with-security/src/test/java/org/elasticsearch/smoketest/MlWithSecurityInsufficientRoleIT.java", "diffHunk": "@@ -60,5 +80,27 @@ public void test() throws IOException {\n     protected String[] getCredentials() {\n         return new String[]{\"no_ml\", \"x-pack-test-password\"};\n     }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    static boolean containsKey(String key, Map<String, Object> mapOfMaps) {\n+        Set<String> keys = mapOfMaps.keySet();\n+        for (String keyEntry : keys) {", "originalCommit": "567ee1b4fc2f4aa96d07dcddc01f634591f10d96", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2ODAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/59530#discussion_r454468001", "bodyText": "Ha yeah that might be a simpler way of doing it", "author": "davidkyle", "createdAt": "2020-07-14T16:03:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NDEzNw=="}], "type": "inlineReview"}, {"oid": "638d6be064a4ca035af9cc5158a99a046e83a943", "url": "https://github.com/elastic/elasticsearch/commit/638d6be064a4ca035af9cc5158a99a046e83a943", "message": "Check for ml privilege when using the Inference Aggregation", "committedDate": "2020-07-14T16:21:31Z", "type": "commit"}, {"oid": "7e708ff66552b4286175c828b3789db5173be6a6", "url": "https://github.com/elastic/elasticsearch/commit/7e708ff66552b4286175c828b3789db5173be6a6", "message": "checkstyle", "committedDate": "2020-07-14T16:21:31Z", "type": "commit"}, {"oid": "ddfe3709a7f040ba08e09fc19a5aae491da8c935", "url": "https://github.com/elastic/elasticsearch/commit/ddfe3709a7f040ba08e09fc19a5aae491da8c935", "message": "simply privilege check and change message", "committedDate": "2020-07-14T16:21:31Z", "type": "commit"}, {"oid": "d091c278d5fd55f5aa62f76d621eec4606e2278a", "url": "https://github.com/elastic/elasticsearch/commit/d091c278d5fd55f5aa62f76d621eec4606e2278a", "message": "Address review comments", "committedDate": "2020-07-14T16:21:31Z", "type": "commit"}, {"oid": "d091c278d5fd55f5aa62f76d621eec4606e2278a", "url": "https://github.com/elastic/elasticsearch/commit/d091c278d5fd55f5aa62f76d621eec4606e2278a", "message": "Address review comments", "committedDate": "2020-07-14T16:21:31Z", "type": "forcePushed"}, {"oid": "965d4beacca935f2d45f2178ae321d388afadec6", "url": "https://github.com/elastic/elasticsearch/commit/965d4beacca935f2d45f2178ae321d388afadec6", "message": "adjust for error message getting wrapped", "committedDate": "2020-07-14T18:19:43Z", "type": "commit"}]}