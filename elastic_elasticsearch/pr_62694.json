{"pr_number": 62694, "pr_title": "[ML] changing to not use global bulk indexing parameters in conjunction with add(object) calls", "pr_author": "benwtrent", "pr_createdAt": "2020-09-21T12:44:32Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62694", "timeline": [{"oid": "972335d7ee4be3ba8f76945bd76363a489a5d25c", "url": "https://github.com/elastic/elasticsearch/commit/972335d7ee4be3ba8f76945bd76363a489a5d25c", "message": "[ML] changing to not use global bulk indexing parameters in conjunction with add(object) calls\n global parameters, outside of the global index, are ignored for internal callers in certain cases.\nIf the interal caller is adding requests via the following methods:\n```\n- BulkRequest#add(IndexRequest)\n- BulkRequest#add(UpdateRequest)\n- BulkRequest#add(DocWriteRequest)\n- BulkRequest#add(DocWriteRequest[])\n```\nIt is better to specifically set the desired parameters on the requests before they are added\nto the bulk request object.\n\nThis commit addresses this issue for the ML plugin", "committedDate": "2020-09-21T13:31:41Z", "type": "commit"}, {"oid": "972335d7ee4be3ba8f76945bd76363a489a5d25c", "url": "https://github.com/elastic/elasticsearch/commit/972335d7ee4be3ba8f76945bd76363a489a5d25c", "message": "[ML] changing to not use global bulk indexing parameters in conjunction with add(object) calls\n global parameters, outside of the global index, are ignored for internal callers in certain cases.\nIf the interal caller is adding requests via the following methods:\n```\n- BulkRequest#add(IndexRequest)\n- BulkRequest#add(UpdateRequest)\n- BulkRequest#add(DocWriteRequest)\n- BulkRequest#add(DocWriteRequest[])\n```\nIt is better to specifically set the desired parameters on the requests before they are added\nto the bulk request object.\n\nThis commit addresses this issue for the ML plugin", "committedDate": "2020-09-21T13:31:41Z", "type": "forcePushed"}, {"oid": "e78097e8ee8ef2b5dffd9b85dec6572947043f5b", "url": "https://github.com/elastic/elasticsearch/commit/e78097e8ee8ef2b5dffd9b85dec6572947043f5b", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-dont-use-global-bulk-values", "committedDate": "2020-09-22T12:44:31Z", "type": "commit"}, {"oid": "ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "url": "https://github.com/elastic/elasticsearch/commit/ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "message": "addressing test failure", "committedDate": "2020-09-22T12:49:06Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxMjYwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/62694#discussion_r492712605", "body": "```suggestion\r\n    /**\r\n     * In production the only way to create a model snapshot is to open a job, and\r\n     * opening a job ensures that the state index exists. This suite does not open jobs\r\n     * but instead inserts snapshot and state documents directly to the results and\r\n     * state indices. This means it needs to create the state index explicitly. This\r\n     * method should not be copied to test suites that run jobs in the way they are\r\n     * run in production.\r\n     */\r\n    @Before\r\n    public void addMlStateIndex() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Before\n          \n          \n            \n                public void addMlState() {\n          \n          \n            \n                /**\n          \n          \n            \n                 * In production the only way to create a model snapshot is to open a job, and\n          \n          \n            \n                 * opening a job ensures that the state index exists. This suite does not open jobs\n          \n          \n            \n                 * but instead inserts snapshot and state documents directly to the results and\n          \n          \n            \n                 * state indices. This means it needs to create the state index explicitly. This\n          \n          \n            \n                 * method should not be copied to test suites that run jobs in the way they are\n          \n          \n            \n                 * run in production.\n          \n          \n            \n                 */\n          \n          \n            \n                @Before\n          \n          \n            \n                public void addMlStateIndex() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">@Before</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> addMlState() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">In</span> production the only way to create a model snapshot is to open a job, and</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"69\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> opening a job ensures that the state index exists. <span class=\"pl-smi\">This</span> suite does not open jobs</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> but instead inserts snapshot and state documents directly to the results and</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"71\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> state indices. <span class=\"pl-smi\">This</span> means it needs to create the state index explicitly. <span class=\"pl-smi\">This</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> method should not be copied to test suites that run jobs in the way they are</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> run in production.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"74\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"75\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">@Before</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"76\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> addMlStateIndex() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-09-22T12:59:41Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ModelSnapshotRetentionIT.java", "diffHunk": "@@ -51,6 +56,12 @@\n \n     private static final long MS_IN_DAY = TimeValue.timeValueDays(1).millis();\n \n+    @Before\n+    public void addMlState() {", "originalCommit": "ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxMjc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/62694#discussion_r492712762", "body": "```suggestion\r\n    }\r\n    \r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                }\n          \n          \n            \n                }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"72\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"73\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    </td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-09-22T12:59:53Z", "path": "x-pack/plugin/ml/qa/native-multi-node-tests/src/javaRestTest/java/org/elasticsearch/xpack/ml/integration/ModelSnapshotRetentionIT.java", "diffHunk": "@@ -51,6 +56,12 @@\n \n     private static final long MS_IN_DAY = TimeValue.timeValueDays(1).millis();\n \n+    @Before\n+    public void addMlState() {\n+        PlainActionFuture<Boolean> future = new PlainActionFuture<>();\n+        createStateIndexAndAliasIfNecessary(client(), ClusterState.EMPTY_STATE, new IndexNameExpressionResolver(), future);\n+        future.actionGet();\n+    }", "originalCommit": "ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNjA0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/62694#discussion_r492716046", "body": "I think you should move this into the `indexQuantiles` method, so it's closer to the reason why it's needed.  Without comments it's very hard to see why this test needs this and the others don't.", "bodyText": "I think you should move this into the indexQuantiles method, so it's closer to the reason why it's needed.  Without comments it's very hard to see why this test needs this and the others don't.", "bodyHTML": "<p dir=\"auto\">I think you should move this into the <code>indexQuantiles</code> method, so it's closer to the reason why it's needed.  Without comments it's very hard to see why this test needs this and the others don't.</p>", "author": "droberts195", "createdAt": "2020-09-22T13:04:44Z", "path": "x-pack/plugin/ml/src/internalClusterTest/java/org/elasticsearch/xpack/ml/integration/JobResultsProviderIT.java", "diffHunk": "@@ -684,6 +686,9 @@ public void testGetSnapshots() {\n     }\n \n     public void testGetAutodetectParams() throws Exception {\n+        PlainActionFuture<Boolean> future = new PlainActionFuture<>();\n+        createStateIndexAndAliasIfNecessary(client(), ClusterState.EMPTY_STATE, new IndexNameExpressionResolver(), future);\n+        future.get();", "originalCommit": "ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTcyOA==", "url": "https://github.com/elastic/elasticsearch/pull/62694#discussion_r492719728", "body": "```suggestion\r\n        // In production opening a job ensures the state index exists. These tests\r\n        // do not open jobs, but instead feed JSON directly to the results processor.\r\n        // A a result they must create the index as part of the test setup. Do not\r\n        // copy this setup to tests that run jobs in the way they are run in production.\r\n        PlainActionFuture<Boolean> future = new PlainActionFuture<>();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    PlainActionFuture<Boolean> future = new PlainActionFuture<>();\n          \n          \n            \n                    // In production opening a job ensures the state index exists. These tests\n          \n          \n            \n                    // do not open jobs, but instead feed JSON directly to the results processor.\n          \n          \n            \n                    // A a result they must create the index as part of the test setup. Do not\n          \n          \n            \n                    // copy this setup to tests that run jobs in the way they are run in production.\n          \n          \n            \n                    PlainActionFuture<Boolean> future = new PlainActionFuture<>();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"176\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\"><span class=\"x x-first\">PlainActionFuture&lt;</span><span class=\"pl-smi x\">Boolean</span><span class=\"x\">&gt;</span></span><span class=\"x\"> future </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">PlainActionFuture&lt;&gt;</span><span class=\"x x-last\">();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"176\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> In production opening a job ensures the state index exists. These tests</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"177\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> do not open jobs, but instead feed JSON directly to the results processor.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"178\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> A a result they must create the index as part of the test setup. Do not</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"179\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">//</span> copy this setup to tests that run jobs in the way they are run in production.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"180\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">PlainActionFuture&lt;<span class=\"pl-smi\">Boolean</span>&gt;</span> future <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">PlainActionFuture&lt;&gt;</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "droberts195", "createdAt": "2020-09-22T13:10:11Z", "path": "x-pack/plugin/ml/src/internalClusterTest/java/org/elasticsearch/xpack/ml/integration/AutodetectResultProcessorIT.java", "diffHunk": "@@ -166,6 +169,9 @@ protected void updateModelSnapshotOnJob(ModelSnapshot modelSnapshot) {\n         };\n         waitForMlTemplates();\n         putJob();\n+        PlainActionFuture<Boolean> future = new PlainActionFuture<>();", "originalCommit": "ba65e9bad5457aadffeaa3d33e04bc4d248283c5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e215efd9e7e471a3f4b0afd86c4415addacf4675", "url": "https://github.com/elastic/elasticsearch/commit/e215efd9e7e471a3f4b0afd86c4415addacf4675", "message": "addressing pr comments", "committedDate": "2020-09-22T13:26:30Z", "type": "commit"}, {"oid": "39f635c5b0f696a15dde86ccb69411a52eb29180", "url": "https://github.com/elastic/elasticsearch/commit/39f635c5b0f696a15dde86ccb69411a52eb29180", "message": "fixing test", "committedDate": "2020-09-22T13:41:59Z", "type": "commit"}, {"oid": "b95cac94182d8c55e395dc9f52ecafcb71c60527", "url": "https://github.com/elastic/elasticsearch/commit/b95cac94182d8c55e395dc9f52ecafcb71c60527", "message": "Merge remote-tracking branch 'upstream/master' into feature/ml-dont-use-global-bulk-values", "committedDate": "2020-09-22T13:55:28Z", "type": "commit"}, {"oid": "ff14cbf1e5d1c37ca5978e428820aa7ccf335d3d", "url": "https://github.com/elastic/elasticsearch/commit/ff14cbf1e5d1c37ca5978e428820aa7ccf335d3d", "message": "Merge branch 'master' into feature/ml-dont-use-global-bulk-values", "committedDate": "2020-09-22T17:04:08Z", "type": "commit"}]}