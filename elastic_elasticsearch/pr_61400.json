{"pr_number": 61400, "pr_title": "Remove node from cluster when node locks broken", "pr_author": "amoghRZP", "pr_createdAt": "2020-08-21T05:27:35Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/61400", "timeline": [{"oid": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "url": "https://github.com/elastic/elasticsearch/commit/9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "message": "Remove node from cluster when node locks are broken.", "committedDate": "2020-08-20T18:43:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ0ODA3OA==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r474448078", "body": "I'd prefer the `try{}` block only to contain the call to `nodeEnv.nodeDataPaths()`, would you reduce its scope? That way you don't need a local `lockAssertionFailed`, you can set `brokenLock` and exit immediately.", "bodyText": "I'd prefer the try{} block only to contain the call to nodeEnv.nodeDataPaths(), would you reduce its scope? That way you don't need a local lockAssertionFailed, you can set brokenLock and exit immediately.", "bodyHTML": "<p dir=\"auto\">I'd prefer the <code>try{}</code> block only to contain the call to <code>nodeEnv.nodeDataPaths()</code>, would you reduce its scope? That way you don't need a local <code>lockAssertionFailed</code>, you can set <code>brokenLock</code> and exit immediately.</p>", "author": "DaveCTurner", "createdAt": "2020-08-21T07:02:23Z", "path": "server/src/main/java/org/elasticsearch/monitor/fs/FsHealthService.java", "diffHunk": "@@ -150,32 +153,39 @@ public void run() {\n \n         private void monitorFSHealth() {\n             Set<Path> currentUnhealthyPaths = null;\n-            for (Path path : nodeEnv.nodeDataPaths()) {\n-                long executionStartTime = currentTimeMillisSupplier.getAsLong();\n-                try {\n-                    if (Files.exists(path)) {\n-                        Path tempDataPath = path.resolve(TEMP_FILE_NAME);\n-                        Files.deleteIfExists(tempDataPath);\n-                        try (OutputStream os = Files.newOutputStream(tempDataPath, StandardOpenOption.CREATE_NEW)) {\n-                            os.write(byteToWrite);\n-                            IOUtils.fsync(tempDataPath, false);\n+            boolean lockAssertionFailed = false;\n+            try {\n+                for (Path path : nodeEnv.nodeDataPaths()) {\n+                    long executionStartTime = currentTimeMillisSupplier.getAsLong();\n+                    try {\n+                        if (Files.exists(path)) {\n+                            Path tempDataPath = path.resolve(TEMP_FILE_NAME);\n+                            Files.deleteIfExists(tempDataPath);\n+                            try (OutputStream os = Files.newOutputStream(tempDataPath, StandardOpenOption.CREATE_NEW)) {\n+                                os.write(byteToWrite);\n+                                IOUtils.fsync(tempDataPath, false);\n+                            }\n+                            Files.delete(tempDataPath);\n+                            final long elapsedTime = currentTimeMillisSupplier.getAsLong() - executionStartTime;\n+                            if (elapsedTime > slowPathLoggingThreshold.millis()) {\n+                                logger.warn(\"health check of [{}] took [{}ms] which is above the warn threshold of [{}]\",\n+                                    path, elapsedTime, slowPathLoggingThreshold);\n+                            }\n                         }\n-                        Files.delete(tempDataPath);\n-                        final long elapsedTime = currentTimeMillisSupplier.getAsLong() - executionStartTime;\n-                        if (elapsedTime > slowPathLoggingThreshold.millis()) {\n-                            logger.warn(\"health check of [{}] took [{}ms] which is above the warn threshold of [{}]\",\n-                                path, elapsedTime, slowPathLoggingThreshold);\n+                    } catch (Exception ex) {\n+                        logger.error(new ParameterizedMessage(\"health check of [{}] failed\", path), ex);\n+                        if (currentUnhealthyPaths == null) {\n+                            currentUnhealthyPaths = new HashSet<>(1);\n                         }\n+                        currentUnhealthyPaths.add(path);\n                     }\n-                } catch (Exception ex) {\n-                    logger.error(new ParameterizedMessage(\"health check of [{}] failed\", path), ex);\n-                    if (currentUnhealthyPaths == null) {\n-                        currentUnhealthyPaths = new HashSet<>(1);\n-                    }\n-                    currentUnhealthyPaths.add(path);\n                 }\n+            } catch (IllegalStateException e) {", "originalCommit": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1MTU5Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r474451592", "body": "Minor wording nit: specify which lock was broken (and remove redundant `on node`), suggest this:\r\n\r\n```suggestion\r\n            statusInfo = new StatusInfo(UNHEALTHY, \"health check failed due to broken node lock\");\r\n```", "bodyText": "Minor wording nit: specify which lock was broken (and remove redundant on node), suggest this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        statusInfo = new StatusInfo(UNHEALTHY, \"health check failed on node due to broken locks\");\n          \n          \n            \n                        statusInfo = new StatusInfo(UNHEALTHY, \"health check failed due to broken node lock\");", "bodyHTML": "<p dir=\"auto\">Minor wording nit: specify which lock was broken (and remove redundant <code>on node</code>), suggest this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            statusInfo <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StatusInfo</span>(<span class=\"pl-c1\">UNHEALTHY</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>health check failed <span class=\"x x-first x-last\">on node </span>due to broken <span class=\"x x-first x-last\">locks</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            statusInfo <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">StatusInfo</span>(<span class=\"pl-c1\">UNHEALTHY</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>health check failed due to broken <span class=\"x x-first x-last\">node lock</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-08-21T07:06:59Z", "path": "server/src/main/java/org/elasticsearch/monitor/fs/FsHealthService.java", "diffHunk": "@@ -117,6 +118,8 @@ public StatusInfo getHealth() {\n         Set<Path> unhealthyPaths = this.unhealthyPaths;\n         if (enabled == false) {\n             statusInfo = new StatusInfo(HEALTHY, \"health check disabled\");\n+        } else if (brokenLock == true) {\n+            statusInfo = new StatusInfo(UNHEALTHY, \"health check failed on node due to broken locks\");", "originalCommit": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1NDI2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r474454262", "body": ":+1:", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "DaveCTurner", "createdAt": "2020-08-21T07:10:27Z", "path": "server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java", "diffHunk": "@@ -254,7 +383,8 @@ public int getInjectedPathCount(){\n         public OutputStream newOutputStream(Path path, OpenOption... options) throws IOException {\n             if (injectIOException.get()){\n                 assert pathPrefix != null : \"must set pathPrefix before starting disruptions\";\n-                if (path.toString().startsWith(pathPrefix) && path.toString().endsWith(\".es_temp_file\")) {\n+                if (path.toString().startsWith(pathPrefix) && path.toString().\n+                    endsWith(FsHealthService.FsHealthMonitor.TEMP_FILE_NAME)) {", "originalCommit": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1NDMyMg==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r474454322", "body": ":+1:", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "DaveCTurner", "createdAt": "2020-08-21T07:10:31Z", "path": "server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java", "diffHunk": "@@ -289,7 +419,8 @@ public FileChannel newFileChannel(Path path, Set<? extends OpenOption> options,\n                 public void force(boolean metaData) throws IOException {\n                     if (injectIOException.get()) {\n                         assert pathPrefix != null : \"must set pathPrefix before starting disruptions\";\n-                        if (path.toString().startsWith(pathPrefix) && path.toString().endsWith(\".es_temp_file\")) {\n+                        if (path.toString().startsWith(pathPrefix) && path.toString().\n+                            endsWith(FsHealthService.FsHealthMonitor.TEMP_FILE_NAME)) {", "originalCommit": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1Nzk3OA==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r474457978", "body": "Thorough tests \ud83d\ude04 However they're not really testing anything in the `FsHealthService` so much as testing the details of the implementation of the `NativeFSLock`. Let's just have one of these here, and maybe consider filling in any gaps in Lucene's [TestNativeFSLockFactory](https://github.com/apache/lucene-solr/blob/master/lucene/core/src/test/org/apache/lucene/store/TestNativeFSLockFactory.java) separately.", "bodyText": "Thorough tests \ud83d\ude04 However they're not really testing anything in the FsHealthService so much as testing the details of the implementation of the NativeFSLock. Let's just have one of these here, and maybe consider filling in any gaps in Lucene's TestNativeFSLockFactory separately.", "bodyHTML": "<p dir=\"auto\">Thorough tests <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji> However they're not really testing anything in the <code>FsHealthService</code> so much as testing the details of the implementation of the <code>NativeFSLock</code>. Let's just have one of these here, and maybe consider filling in any gaps in Lucene's <a href=\"https://github.com/apache/lucene-solr/blob/master/lucene/core/src/test/org/apache/lucene/store/TestNativeFSLockFactory.java\">TestNativeFSLockFactory</a> separately.</p>", "author": "DaveCTurner", "createdAt": "2020-08-21T07:15:09Z", "path": "server/src/test/java/org/elasticsearch/monitor/fs/FsHealthServiceTests.java", "diffHunk": "@@ -231,6 +234,132 @@ public void testFailsHealthOnSinglePathWriteFailure() throws IOException {\n         }\n     }\n \n+    public void testFailsHealthOnMissingLockFile() throws IOException {", "originalCommit": "9478e2bd17d0ac700fe28cb7e22c892cc4d58999", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxNTg0Ng==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r475515846", "bodyText": "Thanks, i am thinking to keep two of them where one throws an IOException and another for AlreadyClosedException.", "author": "amoghRZP", "createdAt": "2020-08-24T10:51:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1Nzk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNTQxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r475525419", "bodyText": "No, one is all we need here.\nNodeEnvironmentTests would be the right place to verify that NodeEnvironment#assertEnvIsLocked throws an IllegalStateException in both of those cases. I think we don't do that today, but again that's a question for a separate PR.", "author": "DaveCTurner", "createdAt": "2020-08-24T11:11:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1Nzk3OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUzNjgyNA==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r475536824", "bodyText": "ok, Got it.", "author": "amoghRZP", "createdAt": "2020-08-24T11:34:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1Nzk3OA=="}], "type": "inlineReview"}, {"oid": "3ce8839e717fb6a3702e4057d395d15206465f38", "url": "https://github.com/elastic/elasticsearch/commit/3ce8839e717fb6a3702e4057d395d15206465f38", "message": "Merge remote-tracking branch 'origin/master' into broken_nl_handling", "committedDate": "2020-08-24T10:21:04Z", "type": "commit"}, {"oid": "eeb51baa6ca2a8abd10a91d9d4cc351873531af0", "url": "https://github.com/elastic/elasticsearch/commit/eeb51baa6ca2a8abd10a91d9d4cc351873531af0", "message": "changes as per suggested in review comments", "committedDate": "2020-08-24T11:31:56Z", "type": "commit"}, {"oid": "c43b6fb219f356bbb85990042856480534f49a75", "url": "https://github.com/elastic/elasticsearch/commit/c43b6fb219f356bbb85990042856480534f49a75", "message": "Keeping one test for broken node locks in FsHealthServiceTests", "committedDate": "2020-08-24T11:44:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMjM1NQ==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r478312355", "body": "Clearing this flag here may mean the node reports itself as healthy even though it hasn't actually passed this health check yet. I think we should clear this flag only after setting `unhealthyPaths` at the very bottom of this method.", "bodyText": "Clearing this flag here may mean the node reports itself as healthy even though it hasn't actually passed this health check yet. I think we should clear this flag only after setting unhealthyPaths at the very bottom of this method.", "bodyHTML": "<p dir=\"auto\">Clearing this flag here may mean the node reports itself as healthy even though it hasn't actually passed this health check yet. I think we should clear this flag only after setting <code>unhealthyPaths</code> at the very bottom of this method.</p>", "author": "DaveCTurner", "createdAt": "2020-08-27T10:19:40Z", "path": "server/src/main/java/org/elasticsearch/monitor/fs/FsHealthService.java", "diffHunk": "@@ -150,7 +153,17 @@ public void run() {\n \n         private void monitorFSHealth() {\n             Set<Path> currentUnhealthyPaths = null;\n-            for (Path path : nodeEnv.nodeDataPaths()) {\n+            brokenLock = false;", "originalCommit": "c43b6fb219f356bbb85990042856480534f49a75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzNjU5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r478836595", "bodyText": "sure, done.", "author": "amoghRZP", "createdAt": "2020-08-28T05:23:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMjM1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMjk3NA==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r478312974", "body": "Minor wording nit:\r\n\r\n```suggestion\r\n                logger.error(\"health check failed\", e);\r\n```", "bodyText": "Minor wording nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.error(\"Lock assertions failed due to\", e);\n          \n          \n            \n                            logger.error(\"health check failed\", e);", "bodyHTML": "<p dir=\"auto\">Minor wording nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                logger<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Lock assertions</span> failed<span class=\"x x-first x-last\"> due to</span><span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                logger<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">health check</span> failed<span class=\"pl-pds\">\"</span></span>, e);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-08-27T10:20:56Z", "path": "server/src/main/java/org/elasticsearch/monitor/fs/FsHealthService.java", "diffHunk": "@@ -150,7 +153,17 @@ public void run() {\n \n         private void monitorFSHealth() {\n             Set<Path> currentUnhealthyPaths = null;\n-            for (Path path : nodeEnv.nodeDataPaths()) {\n+            brokenLock = false;\n+            Path[] paths = null;\n+            try {\n+                paths = nodeEnv.nodeDataPaths();\n+            } catch (IllegalStateException e) {\n+                logger.error(\"Lock assertions failed due to\", e);", "originalCommit": "c43b6fb219f356bbb85990042856480534f49a75", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgzNjY5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/61400#discussion_r478836691", "bodyText": "changed \ud83d\udc4d", "author": "amoghRZP", "createdAt": "2020-08-28T05:23:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMjk3NA=="}], "type": "inlineReview"}, {"oid": "841a8b17a121c7c6e045a2a74fe92d465f736c85", "url": "https://github.com/elastic/elasticsearch/commit/841a8b17a121c7c6e045a2a74fe92d465f736c85", "message": "Merge branch 'master' into broken_nl_handling", "committedDate": "2020-08-28T05:11:29Z", "type": "commit"}, {"oid": "4a207fb5ad94c306b2a19ab6bef3673d62764e2c", "url": "https://github.com/elastic/elasticsearch/commit/4a207fb5ad94c306b2a19ab6bef3673d62764e2c", "message": "Changes error message being logged and clearing boolean flag at the end of the method.", "committedDate": "2020-08-28T05:13:25Z", "type": "commit"}, {"oid": "9caac476d4289960a8cdc964a5fee849b254b13f", "url": "https://github.com/elastic/elasticsearch/commit/9caac476d4289960a8cdc964a5fee849b254b13f", "message": "Merge branch 'master' into broken_nl_handling", "committedDate": "2020-09-16T10:08:42Z", "type": "commit"}, {"oid": "fd9d2920f95001b827efce020e9eefb8c0b2fcc7", "url": "https://github.com/elastic/elasticsearch/commit/fd9d2920f95001b827efce020e9eefb8c0b2fcc7", "message": "Merge remote-tracking branch 'upstream/master' into broken_nl_handling", "committedDate": "2020-09-17T04:55:17Z", "type": "commit"}]}