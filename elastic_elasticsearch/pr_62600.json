{"pr_number": 62600, "pr_title": "Use BitArray instead of FixedBitSet for collecting ordinals in Cardinality Aggregator", "pr_author": "iverase", "pr_createdAt": "2020-09-18T08:02:56Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/62600", "timeline": [{"oid": "38db5451a2003b5c0f125ce96e50d62a18a6cf78", "url": "https://github.com/elastic/elasticsearch/commit/38db5451a2003b5c0f125ce96e50d62a18a6cf78", "message": "Use BitArray instead if FixedBitSet for collecting ordinals", "committedDate": "2020-09-18T07:59:19Z", "type": "commit"}, {"oid": "baeacefdc1564f3a122d79740e4b89d92c367b20", "url": "https://github.com/elastic/elasticsearch/commit/baeacefdc1564f3a122d79740e4b89d92c367b20", "message": "checkStyle", "committedDate": "2020-09-18T08:18:46Z", "type": "commit"}, {"oid": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "url": "https://github.com/elastic/elasticsearch/commit/434fd2aa80e12a8c42c0444079432eb211ba2b71", "message": "Merge branch 'master' into bitArrayOrdinals", "committedDate": "2020-09-18T08:48:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNDAwNg==", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490834006", "body": "nit:\r\n```suggestion\r\n        while (++wordNum < bits.size()) {\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    while(++wordNum < bits.size()) {\n          \n          \n            \n                    while (++wordNum < bits.size()) {", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">while</span>(<span class=\"pl-k\">++</span>wordNum <span class=\"pl-k\">&lt;</span> bits<span class=\"pl-k\">.</span>size()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">while</span><span class=\"x x-first x-last\"> </span>(<span class=\"pl-k\">++</span>wordNum <span class=\"pl-k\">&lt;</span> bits<span class=\"pl-k\">.</span>size()) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jimczi", "createdAt": "2020-09-18T09:50:01Z", "path": "server/src/main/java/org/elasticsearch/common/util/BitArray.java", "diffHunk": "@@ -50,6 +50,37 @@ public void set(long index) {\n         bits.set(wordNum, bits.get(wordNum) | bitmask(index));\n     }\n \n+    /** this = this OR other */\n+    public void or(BitArray other) {\n+        or(other.bits);\n+    }\n+\n+    private void or(final LongArray otherArr) {\n+        long pos = otherArr.size();\n+        bits = bigArrays.grow(bits, pos + 1);\n+        final LongArray thisArr = this.bits;\n+        while (--pos >= 0) {\n+            thisArr.set(pos, thisArr.get(pos) | otherArr.get(pos));\n+        }\n+    }\n+\n+    public long nextSetBit(long index) {\n+        long wordNum = wordNum(index);\n+        long word = bits.get(wordNum) >> index;  // skip all the bits to the right of index\n+\n+        if (word!=0) {\n+            return index + Long.numberOfTrailingZeros(word);\n+        }\n+\n+        while(++wordNum < bits.size()) {", "originalCommit": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTI2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835265", "body": "Should it use `Long.MAX_VALUE` instead of `DocIdSetIterator.NO_MORE_DOCS` ?", "bodyText": "Should it use Long.MAX_VALUE instead of DocIdSetIterator.NO_MORE_DOCS ?", "bodyHTML": "<p dir=\"auto\">Should it use <code>Long.MAX_VALUE</code> instead of <code>DocIdSetIterator.NO_MORE_DOCS</code> ?</p>", "author": "jimczi", "createdAt": "2020-09-18T09:52:23Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;", "originalCommit": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0MTgzNg==", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490841836", "bodyText": "Yes", "author": "iverase", "createdAt": "2020-09-18T10:05:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTI2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTMxMw==", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835313", "body": "same here ?", "bodyText": "same here ?", "bodyHTML": "<p dir=\"auto\">same here ?</p>", "author": "jimczi", "createdAt": "2020-09-18T09:52:29Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                         ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {", "originalCommit": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTQxMQ==", "url": "https://github.com/elastic/elasticsearch/pull/62600#discussion_r490835411", "body": "and here ;)", "bodyText": "and here ;)", "bodyHTML": "<p dir=\"auto\">and here ;)</p>", "author": "jimczi", "createdAt": "2020-09-18T09:52:40Z", "path": "server/src/main/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregator.java", "diffHunk": "@@ -288,29 +289,30 @@ public void collect(int doc, long bucketOrd) throws IOException {\n \n         @Override\n         public void postCollect() throws IOException {\n-            final FixedBitSet allVisitedOrds = new FixedBitSet(maxOrd);\n-            for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                final FixedBitSet bits = visitedOrds.get(bucket);\n-                if (bits != null) {\n-                    allVisitedOrds.or(bits);\n+            try (BitArray allVisitedOrds = new BitArray(maxOrd, bigArrays)) {\n+                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                    final BitArray bits = visitedOrds.get(bucket);\n+                    if (bits != null) {\n+                        allVisitedOrds.or(bits);\n+                    }\n                 }\n-            }\n \n-            final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n-            try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n-                for (int ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                        ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                    final BytesRef value = values.lookupOrd(ord);\n-                    MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n-                    hashes.set(ord, hash.h1);\n-                }\n+                try (LongArray hashes = bigArrays.newLongArray(maxOrd, false)) {\n+                    final MurmurHash3.Hash128 hash = new MurmurHash3.Hash128();\n+                    for (long ord = allVisitedOrds.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                         ord = ord + 1 < maxOrd ? allVisitedOrds.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n+                        final BytesRef value = values.lookupOrd(ord);\n+                        MurmurHash3.hash128(value.bytes, value.offset, value.length, 0, hash);\n+                        hashes.set(ord, hash.h1);\n+                    }\n \n-                for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n-                    final FixedBitSet bits = visitedOrds.get(bucket);\n-                    if (bits != null) {\n-                        for (int ord = bits.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n-                                ord = ord + 1 < maxOrd ? bits.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {\n-                            counts.collect(bucket, hashes.get(ord));\n+                    for (long bucket = visitedOrds.size() - 1; bucket >= 0; --bucket) {\n+                        final BitArray bits = visitedOrds.get(bucket);\n+                        if (bits != null) {\n+                            for (long ord = bits.nextSetBit(0); ord < DocIdSetIterator.NO_MORE_DOCS;\n+                                 ord = ord + 1 < maxOrd ? bits.nextSetBit(ord + 1) : DocIdSetIterator.NO_MORE_DOCS) {", "originalCommit": "434fd2aa80e12a8c42c0444079432eb211ba2b71", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "22cb13643726949d8dd012b1b3ec590f554e9bcf", "url": "https://github.com/elastic/elasticsearch/commit/22cb13643726949d8dd012b1b3ec590f554e9bcf", "message": "address review comments", "committedDate": "2020-09-18T10:04:44Z", "type": "commit"}]}