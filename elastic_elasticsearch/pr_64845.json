{"pr_number": 64845, "pr_title": "SQL:Fix the return type problem in the sign function", "pr_author": "sourcelliu", "pr_createdAt": "2020-11-10T08:38:08Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64845", "timeline": [{"oid": "bf16659ac90b72c705577390eaffa327c641431a", "url": "https://github.com/elastic/elasticsearch/commit/bf16659ac90b72c705577390eaffa327c641431a", "message": "SQL:Fix the return type problem in the sign function\n\nSigned-off-by: mantuliu <240951888@qq.com>", "committedDate": "2020-11-10T07:01:14Z", "type": "commit"}, {"oid": "bf16659ac90b72c705577390eaffa327c641431a", "url": "https://github.com/elastic/elasticsearch/commit/bf16659ac90b72c705577390eaffa327c641431a", "message": "SQL:Fix the return type problem in the sign function\n\nSigned-off-by: mantuliu <240951888@qq.com>", "committedDate": "2020-11-10T07:01:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MTUwNQ==", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521261505", "body": "Since the assertion values are the same, please put the values in an array and iterate over them:\r\n```java\r\nList<Number> negative = asList(-42, Long.value(-42), etc...)\r\nfor (Number number : negative) {\r\n\tNumber result = MathOperations.SIGN.apply(number);\r\n    assertEquals(Integer.class, result.getClass());\r\n    assertEquals(-1, result);\r\n}\r\n...\r\n```", "bodyText": "Since the assertion values are the same, please put the values in an array and iterate over them:\nList<Number> negative = asList(-42, Long.value(-42), etc...)\nfor (Number number : negative) {\n\tNumber result = MathOperations.SIGN.apply(number);\n    assertEquals(Integer.class, result.getClass());\n    assertEquals(-1, result);\n}\n...", "bodyHTML": "<p dir=\"auto\">Since the assertion values are the same, please put the values in an array and iterate over them:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"List&lt;Number&gt; negative = asList(-42, Long.value(-42), etc...)\nfor (Number number : negative) {\n\tNumber result = MathOperations.SIGN.apply(number);\n    assertEquals(Integer.class, result.getClass());\n    assertEquals(-1, result);\n}\n...\n\"><pre><span class=\"pl-k\">List&lt;<span class=\"pl-smi\">Number</span>&gt;</span> negative <span class=\"pl-k\">=</span> asList(<span class=\"pl-k\">-</span><span class=\"pl-c1\">42</span>, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>value(<span class=\"pl-k\">-</span><span class=\"pl-c1\">42</span>), etc<span class=\"pl-k\">.</span><span class=\"pl-c1\">..</span>)\n<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Number</span> number <span class=\"pl-k\">:</span> negative) {\n\t<span class=\"pl-smi\">Number</span> result <span class=\"pl-k\">=</span> <span class=\"pl-smi\">MathOperations</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>SIGN</span><span class=\"pl-k\">.</span>apply(number);\n    assertEquals(<span class=\"pl-smi\">Integer</span><span class=\"pl-k\">.</span>class, result<span class=\"pl-k\">.</span>getClass());\n    assertEquals(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, result);\n}\n<span class=\"pl-c1\">...</span></pre></div>", "author": "costin", "createdAt": "2020-11-11T10:28:29Z", "path": "x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathOperationTests.java", "diffHunk": "@@ -35,4 +35,25 @@ public void testAbsPreservesType() {\n         assertEquals(42f, MathOperation.ABS.apply(-42f));\n         assertEquals(42d, MathOperation.ABS.apply(-42d));\n     }\n+\n+    public void testSignIntegerType() {\n+        assertEquals(-1, MathOperation.SIGN.apply((byte) -42));\n+        assertEquals( -1, MathOperation.SIGN.apply((short) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42));\n+        assertEquals( -1, MathOperation.SIGN.apply((long) -42));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0f));\n+        assertEquals(-1, MathOperation.SIGN.apply(-42.0d));\n+        assertEquals( 1, MathOperation.SIGN.apply((byte) 42));\n+        assertEquals( 1, MathOperation.SIGN.apply((short) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42));\n+        assertEquals( 1, MathOperation.SIGN.apply((long) 42));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0f));\n+        assertEquals(1, MathOperation.SIGN.apply(42.0d));\n+        assertEquals(0, MathOperation.SIGN.apply((byte) 0));\n+        assertEquals( 0, MathOperation.SIGN.apply((short) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(0));\n+        assertEquals( 0, MathOperation.SIGN.apply((long) 0));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0f));\n+        assertEquals(0, MathOperation.SIGN.apply(-0.0d));\n+    }", "originalCommit": "bf16659ac90b72c705577390eaffa327c641431a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzMjcyMg==", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521332722", "bodyText": "Has been changed to an iterative way. PTAL.", "author": "sourcelliu", "createdAt": "2020-11-11T12:44:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2MTUwNQ=="}], "type": "inlineReview"}, {"oid": "893b9ab8123f5f4954989408ef85afebfdd16399", "url": "https://github.com/elastic/elasticsearch/commit/893b9ab8123f5f4954989408ef85afebfdd16399", "message": "Use iterative method to optimize test\n\nSigned-off-by: mantuliu <240951888@qq.com>", "committedDate": "2020-11-11T12:41:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0Njg2OA==", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521346868", "body": "```suggestion\r\n                return (int) Math.signum((Double) l);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return (int)Math.signum((Double) l);\n          \n          \n            \n                            return (int) Math.signum((Double) l);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>signum((<span class=\"pl-smi\">Double</span>) l);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>signum((<span class=\"pl-smi\">Double</span>) l);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "matriv", "createdAt": "2020-11-11T13:10:11Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -77,26 +77,13 @@\n                 Randomness.get().nextDouble(), true),\n         SIGN((Object l) -> {\n             if (l instanceof Double) {\n-                return Math.signum((Double) l);\n+                return (int)Math.signum((Double) l);", "originalCommit": "893b9ab8123f5f4954989408ef85afebfdd16399", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0Njk2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/64845#discussion_r521346963", "body": "```suggestion\r\n                return (int) Math.signum((Float) l);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return (int)Math.signum((Float) l);\n          \n          \n            \n                            return (int) Math.signum((Float) l);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>signum((<span class=\"pl-smi\">Float</span>) l);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> (<span class=\"pl-k\">int</span>)<span class=\"x x-first x-last\"> </span><span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>signum((<span class=\"pl-smi\">Float</span>) l);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "matriv", "createdAt": "2020-11-11T13:10:22Z", "path": "x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/expression/function/scalar/math/MathProcessor.java", "diffHunk": "@@ -77,26 +77,13 @@\n                 Randomness.get().nextDouble(), true),\n         SIGN((Object l) -> {\n             if (l instanceof Double) {\n-                return Math.signum((Double) l);\n+                return (int)Math.signum((Double) l);\n             }\n             if (l instanceof Float) {\n-                return Math.signum((Float) l);\n+                return (int)Math.signum((Float) l);", "originalCommit": "893b9ab8123f5f4954989408ef85afebfdd16399", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a80ad5a39ba83f0d7b1f4c8caa6d5cfbe29713c", "url": "https://github.com/elastic/elasticsearch/commit/3a80ad5a39ba83f0d7b1f4c8caa6d5cfbe29713c", "message": "formatting fix.\n\nCo-authored-by: Marios Trivyzas <matriv@gmail.com>", "committedDate": "2020-11-11T13:16:06Z", "type": "commit"}, {"oid": "1419c7c4fea28592c5d3ed0f10997543934bfa71", "url": "https://github.com/elastic/elasticsearch/commit/1419c7c4fea28592c5d3ed0f10997543934bfa71", "message": "formatting fix.\n\nCo-authored-by: Marios Trivyzas <matriv@gmail.com>", "committedDate": "2020-11-11T13:16:37Z", "type": "commit"}, {"oid": "e7cbc5848fbc39682563cd00936ebb847794c7ae", "url": "https://github.com/elastic/elasticsearch/commit/e7cbc5848fbc39682563cd00936ebb847794c7ae", "message": "formatting fix.\n\nSigned-off-by: mantuliu <240951888@qq.com>", "committedDate": "2020-11-11T13:20:27Z", "type": "commit"}]}