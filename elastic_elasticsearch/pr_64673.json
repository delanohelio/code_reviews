{"pr_number": 64673, "pr_title": "Optimize role bitset in document level security", "pr_author": "dnhatn", "pr_createdAt": "2020-11-05T21:22:12Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64673", "timeline": [{"oid": "6c528a760cfc0a5a8b4928cabeba8db839170d27", "url": "https://github.com/elastic/elasticsearch/commit/6c528a760cfc0a5a8b4928cabeba8db839170d27", "message": "Optimize role bitset in document level security", "committedDate": "2020-11-05T21:21:42Z", "type": "commit"}, {"oid": "6908f0734b666a5f63f775ba9b1caf2fcb9bd8c5", "url": "https://github.com/elastic/elasticsearch/commit/6908f0734b666a5f63f775ba9b1caf2fcb9bd8c5", "message": "fix tests", "committedDate": "2020-11-09T16:13:01Z", "type": "commit"}, {"oid": "48f9fee8f4d0629f59c24f1bbcb245313bc84320", "url": "https://github.com/elastic/elasticsearch/commit/48f9fee8f4d0629f59c24f1bbcb245313bc84320", "message": "Merge branch 'master' into role-bitset", "committedDate": "2020-11-09T16:13:09Z", "type": "commit"}, {"oid": "035177f6a13b2c9045e7826e339e41e9c0b85643", "url": "https://github.com/elastic/elasticsearch/commit/035177f6a13b2c9045e7826e339e41e9c0b85643", "message": "Merge branch 'master' into role-bitset", "committedDate": "2020-11-09T19:05:16Z", "type": "commit"}, {"oid": "45de38b503695aab67c50c5995b966ef695d33d1", "url": "https://github.com/elastic/elasticsearch/commit/45de38b503695aab67c50c5995b966ef695d33d1", "message": "three tests", "committedDate": "2020-11-10T04:29:07Z", "type": "commit"}, {"oid": "ae6cb3c1cb478964db34e8b999d4c70d8b350847", "url": "https://github.com/elastic/elasticsearch/commit/ae6cb3c1cb478964db34e8b999d4c70d8b350847", "message": "Merge branch 'master' into role-bitset", "committedDate": "2020-11-10T04:29:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQzNTkyMw==", "url": "https://github.com/elastic/elasticsearch/pull/64673#discussion_r520435923", "body": "```suggestion\r\n    private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(MatchAllRoleBitSet.class);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(FixedBitSet.class);\n          \n          \n            \n                private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(MatchAllRoleBitSet.class);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">long</span> <span class=\"pl-c1\">BASE_RAM_BYTES_USED</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">RamUsageEstimator</span><span class=\"pl-k\">.</span>shallowSizeOfInstance(<span class=\"pl-smi x x-first x-last\">FixedBitSet</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">long</span> <span class=\"pl-c1\">BASE_RAM_BYTES_USED</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">RamUsageEstimator</span><span class=\"pl-k\">.</span>shallowSizeOfInstance(<span class=\"pl-smi x x-first x-last\">MatchAllRoleBitSet</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jpountz", "createdAt": "2020-11-10T10:01:22Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/accesscontrol/MatchAllRoleBitSet.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.xpack.core.security.authz.accesscontrol;\n+\n+import org.apache.lucene.util.BitSet;\n+import org.apache.lucene.util.FixedBitSet;\n+import org.apache.lucene.util.RamUsageEstimator;\n+\n+final class MatchAllRoleBitSet extends BitSet {\n+    private static final long BASE_RAM_BYTES_USED = RamUsageEstimator.shallowSizeOfInstance(FixedBitSet.class);", "originalCommit": "ae6cb3c1cb478964db34e8b999d4c70d8b350847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU0NTkxMA==", "url": "https://github.com/elastic/elasticsearch/pull/64673#discussion_r520545910", "body": "The BitSet#or implementations seem to have some optimizations, maybe we should do set.or(it) and then compare set.cardinality() with maxDoc.", "bodyText": "The BitSet#or implementations seem to have some optimizations, maybe we should do set.or(it) and then compare set.cardinality() with maxDoc.", "bodyHTML": "<p dir=\"auto\">The BitSet#or implementations seem to have some optimizations, maybe we should do set.or(it) and then compare set.cardinality() with maxDoc.</p>", "author": "jpountz", "createdAt": "2020-11-10T13:04:48Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/security/authz/accesscontrol/DocumentSubsetBitsetCache.java", "diffHunk": "@@ -339,4 +342,30 @@ void verifyInternalConsistency() {\n             }\n         });\n     }\n+\n+    static BitSet bitSetFromDocIterator(DocIdSetIterator iter, int maxDoc) throws IOException {\n+        // TODO: This snippet is copied from Lucene Bitset#of. Should we integrate it to Lucene?\n+        final long cost = iter.cost();\n+        final int threshold = maxDoc >>> 7;\n+        final BitSet set;\n+        if (cost < threshold) {\n+            set = new SparseFixedBitSet(maxDoc);\n+        } else {\n+            set = new FixedBitSet(maxDoc);\n+        }\n+        if (iter.docID() != -1) {\n+            throw new IllegalStateException(\"Must be an unpositioned iterator, got current position = \" + iter.docID());\n+        }\n+        int matches = 0;\n+        for (int doc = iter.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = iter.nextDoc()) {\n+            matches++;\n+            set.set(doc);\n+        }\n+        if (matches == maxDoc) {", "originalCommit": "ae6cb3c1cb478964db34e8b999d4c70d8b350847", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a76600b8ceb724cbaa385335849e3e3b497a14fb", "url": "https://github.com/elastic/elasticsearch/commit/a76600b8ceb724cbaa385335849e3e3b497a14fb", "message": "Use Bitset.or", "committedDate": "2020-11-10T14:40:41Z", "type": "commit"}, {"oid": "baee430ef7e10b80fe3680b566601c0829003087", "url": "https://github.com/elastic/elasticsearch/commit/baee430ef7e10b80fe3680b566601c0829003087", "message": "naming", "committedDate": "2020-11-10T16:29:50Z", "type": "commit"}, {"oid": "dc7657f9b32c6a4afac28d6d1739b4fdd3eaf631", "url": "https://github.com/elastic/elasticsearch/commit/dc7657f9b32c6a4afac28d6d1739b4fdd3eaf631", "message": "Merge branch 'master' into role-bitset", "committedDate": "2020-11-10T19:42:22Z", "type": "commit"}]}