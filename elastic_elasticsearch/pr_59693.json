{"pr_number": 59693, "pr_title": "Fix DLS/FLS permission for the submit async search action", "pr_author": "albertzaharovits", "pr_createdAt": "2020-07-16T10:04:50Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59693", "timeline": [{"oid": "e919e5fc3adb3f185ec2263b598c1c0964506967", "url": "https://github.com/elastic/elasticsearch/commit/e919e5fc3adb3f185ec2263b598c1c0964506967", "message": "Main", "committedDate": "2020-07-16T07:46:48Z", "type": "commit"}, {"oid": "995f2fe7c6870c9c55358124e61330560d6d0f2c", "url": "https://github.com/elastic/elasticsearch/commit/995f2fe7c6870c9c55358124e61330560d6d0f2c", "message": "Integ Test", "committedDate": "2020-07-16T09:51:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDkxNg==", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456250916", "body": "Speaking from personal preference, I think this is trying too hard to use a `Matcher`, and it would be more readable to use a different style.\r\nFor example, we know exactly what results are expected, so we can check the number of hits & then we can sort the hits and check that each element is what we expect it to be.\r\n\r\nAlso, I may be mistaken because all the casting of JSON is a bit hard to read, but I think you have a type mismatch here.\r\n\r\nIf `hits` is `List<Map<String, Map<String, Object>>>` \r\nthen each element is `Map<String, Map<String, Object>>`  \r\nbut in the Matcher, you cast actual to `Map<String, Object>` and check that some of the values are strings.\r\n\r\nI think hits needs to be `List<Map<String, ?>>` or `List<Map<String, Object>>`\r\n\r\n ", "bodyText": "Speaking from personal preference, I think this is trying too hard to use a Matcher, and it would be more readable to use a different style.\nFor example, we know exactly what results are expected, so we can check the number of hits & then we can sort the hits and check that each element is what we expect it to be.\nAlso, I may be mistaken because all the casting of JSON is a bit hard to read, but I think you have a type mismatch here.\nIf hits is List<Map<String, Map<String, Object>>>\nthen each element is Map<String, Map<String, Object>>\nbut in the Matcher, you cast actual to Map<String, Object> and check that some of the values are strings.\nI think hits needs to be List<Map<String, ?>> or List<Map<String, Object>>", "bodyHTML": "<p dir=\"auto\">Speaking from personal preference, I think this is trying too hard to use a <code>Matcher</code>, and it would be more readable to use a different style.<br>\nFor example, we know exactly what results are expected, so we can check the number of hits &amp; then we can sort the hits and check that each element is what we expect it to be.</p>\n<p dir=\"auto\">Also, I may be mistaken because all the casting of JSON is a bit hard to read, but I think you have a type mismatch here.</p>\n<p dir=\"auto\">If <code>hits</code> is <code>List&lt;Map&lt;String, Map&lt;String, Object&gt;&gt;&gt;</code><br>\nthen each element is <code>Map&lt;String, Map&lt;String, Object&gt;&gt;</code><br>\nbut in the Matcher, you cast actual to <code>Map&lt;String, Object&gt;</code> and check that some of the values are strings.</p>\n<p dir=\"auto\">I think hits needs to be <code>List&lt;Map&lt;String, ?&gt;&gt;</code> or <code>List&lt;Map&lt;String, Object&gt;&gt;</code></p>", "author": "tvernum", "createdAt": "2020-07-17T06:47:00Z", "path": "x-pack/plugin/async-search/qa/security/src/test/java/org/elasticsearch/xpack/search/AsyncSearchSecurityIT.java", "diffHunk": "@@ -57,9 +63,64 @@ public void indexDocuments() throws IOException {\n \n         createIndex(\"index-user2\", Settings.EMPTY);\n         index(\"index-user2\", \"0\", \"foo\", \"bar\");\n+        index(\"index-user2\", \"1\", \"bar\", \"baz\");\n         refresh(\"index-user2\");\n     }\n \n+    public void testWithDlsAndFls() throws Exception {\n+        Response submitResp = submitAsyncSearch(\"*\", \"*\", TimeValue.timeValueSeconds(10), \"user_dls\");\n+        assertOK(submitResp);\n+        Map<String, Object> submitRespMap = toMap(submitResp);\n+        List<Map<String, Map<String, Object>>> hits = extractHits(submitRespMap);\n+        assertThat(hits, contains(new BaseMatcher<>() {\n+            @Override\n+            @SuppressWarnings(\"unchecked\")\n+            public boolean matches(Object actual) {\n+                if (actual instanceof Map) {\n+                    Map<String, Object> searchHit = (Map<String, Object>) actual;\n+                    return \"index\".equals(searchHit.get(\"_index\")) &&\n+                            \"1\".equals(searchHit.get(\"_id\")) &&\n+                            ((Map<String, Object>) searchHit.get(\"_source\")).isEmpty();\n+                }\n+                return false;\n+            }", "originalCommit": "995f2fe7c6870c9c55358124e61330560d6d0f2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwMjA2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456402065", "bodyText": "Okay, I have polished the test code here.\nI've parsed the response to the actual AsyncSearchResponse so it doesn't deal with Maps and casts, but I've kept the collection matcher which now uses CustomMatcher elements which is simpler. I like this over sorting, because I don't know how to sort results across indices, and it feels contrived.", "author": "albertzaharovits", "createdAt": "2020-07-17T12:11:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MDkxNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MTQyNQ==", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456251425", "body": "```suggestion\r\n                    // the same as the user that submitted the original request so no additional checks are needed here.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // the same as the user that submitted the original request so we can skip security here.\n          \n          \n            \n                                // the same as the user that submitted the original request so no additional checks are needed here.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> the same as the user that submitted the original request so <span class=\"x x-first x-last\">we can skip security</span> here.</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> the same as the user that submitted the original request so <span class=\"x x-first x-last\">no additional checks are needed</span> here.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-07-17T06:48:20Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -269,8 +269,14 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n             } else if (isAsyncRelatedAction(action)) {\n-                //index-level permissions are handled by the search action that is triggered internally by the submit API.\n-                listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n+                if (SubmitAsyncSearchAction.NAME.equals(action)) {\n+                    // authorize submit async search but don't fill in the DLS/FLS permissions\n+                    listener.onResponse(new IndexAuthorizationResult(true, null));\n+                } else {\n+                    // async-search actions other than submit have a custom security layer that checks if the current user is\n+                    // the same as the user that submitted the original request so we can skip security here.", "originalCommit": "995f2fe7c6870c9c55358124e61330560d6d0f2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MjAyNw==", "url": "https://github.com/elastic/elasticsearch/pull/59693#discussion_r456252027", "body": "```suggestion\r\n                    // authorize submit async search but don't fill in the DLS/FLS permissions\r\n                    // the null IndicesAccessControl parameter indicates that this action has *not* determined \r\n                    // which DLS/FLS controls should be applied to this action\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // authorize submit async search but don't fill in the DLS/FLS permissions\n          \n          \n            \n                                // authorize submit async search but don't fill in the DLS/FLS permissions\n          \n          \n            \n                                // the null IndicesAccessControl parameter indicates that this action has *not* determined \n          \n          \n            \n                                // which DLS/FLS controls should be applied to this action", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> authorize submit async search but don't fill in the DLS/FLS permissions</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> authorize submit async search but don't fill in the DLS/FLS permissions</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> the null IndicesAccessControl parameter indicates that this action has *not* determined </span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"275\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    <span class=\"pl-c\"><span class=\"pl-c\">//</span> which DLS/FLS controls should be applied to this action</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-07-17T06:49:48Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authz/RBACEngine.java", "diffHunk": "@@ -269,8 +269,14 @@ public void authorizeIndexAction(RequestInfo requestInfo, AuthorizationInfo auth\n                     listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n                 }\n             } else if (isAsyncRelatedAction(action)) {\n-                //index-level permissions are handled by the search action that is triggered internally by the submit API.\n-                listener.onResponse(new IndexAuthorizationResult(true, IndicesAccessControl.ALLOW_NO_INDICES));\n+                if (SubmitAsyncSearchAction.NAME.equals(action)) {\n+                    // authorize submit async search but don't fill in the DLS/FLS permissions", "originalCommit": "995f2fe7c6870c9c55358124e61330560d6d0f2c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8a7f56240684f130e26f50f70bc9a0db260cd342", "url": "https://github.com/elastic/elasticsearch/commit/8a7f56240684f130e26f50f70bc9a0db260cd342", "message": "Merge branch 'master' into authz_submit_async_for_DLS", "committedDate": "2020-07-17T09:42:29Z", "type": "commit"}, {"oid": "2eb976bce4064b3becf6978344e122fce0305f78", "url": "https://github.com/elastic/elasticsearch/commit/2eb976bce4064b3becf6978344e122fce0305f78", "message": "Review", "committedDate": "2020-07-17T12:11:25Z", "type": "commit"}]}