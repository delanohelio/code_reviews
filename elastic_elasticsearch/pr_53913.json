{"pr_number": 53913, "pr_title": "Disallow negative TimeValues", "pr_author": "gwbrown", "pr_createdAt": "2020-03-21T00:20:04Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/53913", "timeline": [{"oid": "8c2a742c7f6bead3193d50d1f8939ab000c4cabd", "url": "https://github.com/elastic/elasticsearch/commit/8c2a742c7f6bead3193d50d1f8939ab000c4cabd", "message": "Disallow negative TimeValues\n\nThis commit causes negative TimeValues, other than -1 which is sometimes used as\na sentinel value, to be rejected during parsing.", "committedDate": "2020-03-20T23:25:48Z", "type": "commit"}, {"oid": "cc2a587943c526e9620cc10ff7e024ae366f8cdb", "url": "https://github.com/elastic/elasticsearch/commit/cc2a587943c526e9620cc10ff7e024ae366f8cdb", "message": "Adjust error message for negative TimeValues", "committedDate": "2020-03-21T00:01:14Z", "type": "commit"}, {"oid": "8b4535730d36fbc9612531926c3206bdc044ff0e", "url": "https://github.com/elastic/elasticsearch/commit/8b4535730d36fbc9612531926c3206bdc044ff0e", "message": "Check for new message in tests for rejection of negative TimeValues", "committedDate": "2020-03-21T00:02:11Z", "type": "commit"}, {"oid": "025074ff6b43693fa04073450880742824feb0e2", "url": "https://github.com/elastic/elasticsearch/commit/025074ff6b43693fa04073450880742824feb0e2", "message": "Merge branch 'master' into fix-timevalue", "committedDate": "2020-03-23T22:40:19Z", "type": "commit"}, {"oid": "df20456abf576728d265e1beb4a2cd666f04065a", "url": "https://github.com/elastic/elasticsearch/commit/df20456abf576728d265e1beb4a2cd666f04065a", "message": "Add workaround for ILM policies with negative min_age", "committedDate": "2020-03-23T23:22:30Z", "type": "commit"}, {"oid": "af86c3df51abdbfbb8b853357dec279260ce98a2", "url": "https://github.com/elastic/elasticsearch/commit/af86c3df51abdbfbb8b853357dec279260ce98a2", "message": "Add clarifying comment", "committedDate": "2020-03-23T23:39:59Z", "type": "commit"}, {"oid": "4f2636ac4427e3f4dbf5c2716dd93d73db069d0e", "url": "https://github.com/elastic/elasticsearch/commit/4f2636ac4427e3f4dbf5c2716dd93d73db069d0e", "message": "Check for negative durations in constructor", "committedDate": "2020-03-24T00:07:00Z", "type": "commit"}, {"oid": "5baf1f5bf717e886f83dc6864e92a9432c5b9143", "url": "https://github.com/elastic/elasticsearch/commit/5baf1f5bf717e886f83dc6864e92a9432c5b9143", "message": "Line length", "committedDate": "2020-03-24T00:14:35Z", "type": "commit"}, {"oid": "df6900e8a079bc02ec53bae8c47f6ee910aab937", "url": "https://github.com/elastic/elasticsearch/commit/df6900e8a079bc02ec53bae8c47f6ee910aab937", "message": "Fix a giant pile of tests", "committedDate": "2020-03-24T02:39:42Z", "type": "commit"}, {"oid": "1f129e8747f4d903a20126b10805a6dec1a7b031", "url": "https://github.com/elastic/elasticsearch/commit/1f129e8747f4d903a20126b10805a6dec1a7b031", "message": "Merge branch 'master' into fix-timevalue", "committedDate": "2020-03-24T02:40:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTIxNA==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396869214", "body": "Can you add an assert Version.CURRENT.major < 9 so that we remove this when we bump master to 9.0.0?", "bodyText": "Can you add an assert Version.CURRENT.major < 9 so that we remove this when we bump master to 9.0.0?", "bodyHTML": "<p dir=\"auto\">Can you add an assert Version.CURRENT.major &lt; 9 so that we remove this when we bump master to 9.0.0?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:30:36Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/Phase.java", "diffHunk": "@@ -40,7 +44,19 @@\n                     .collect(Collectors.toMap(LifecycleAction::getWriteableName, Function.identity()))));\n     static {\n         PARSER.declareField(ConstructingObjectParser.optionalConstructorArg(),\n-                (p, c) -> TimeValue.parseTimeValue(p.text(), MIN_AGE.getPreferredName()), MIN_AGE, ValueType.VALUE);\n+            (ContextParser<String, Object>) (p, c) -> {\n+                // In earlier versions it was possible to create a Phase with a negative `min_age` which would then cause errors\n+                // when the phase is read from the cluster state during startup (even before negative timevalues were strictly\n+                // disallowed) so this is a hack to treat negative `min_age`s as 0 to prevent those errors.\n+                // They will be saved as `0` so this hack can be removed once we no longer have to read cluster states from 7.x.", "originalCommit": "5baf1f5bf717e886f83dc6864e92a9432c5b9143", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4ODc2MA==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398188760", "bodyText": "Done.", "author": "gwbrown", "createdAt": "2020-03-25T21:43:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MTU2Mw==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396871563", "body": "I'm not sure that I like that we are manually parsing settings here. I understand that we're doing it to have the full setting name. How about:\r\n\r\n```diff\r\ndiff --git a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\r\nindex 5744814293f..cad01bd9856 100644\r\n--- a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\r\n+++ b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\r\n@@ -165,11 +165,15 @@ public class JvmGcMonitorService extends AbstractLifecycleComponent {\r\n     }\r\n \r\n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\r\n-        final String thresholdString = settings.get(level, null);\r\n-        if (thresholdString == null) {\r\n+        final TimeValue threshold;\r\n+        try {\r\n+            threshold = settings.getAsTime(level, null);\r\n+        } catch (final IllegalArgumentException e) {\r\n+            throw new IllegalArgumentException(\"failed to parse [\" + getThresholdName(key, level) + \"]\", e);\r\n+        }\r\n+        if (threshold == null) {\r\n             throw new IllegalArgumentException(\"missing gc_threshold for [\" + getThresholdName(key, level) + \"]\");\r\n         }\r\n-        TimeValue threshold = TimeValue.parseTimeValue(thresholdString, null, getThresholdName(key, level));\r\n         return threshold;\r\n     }\r\n```\r\n\r\nand the necessary update to the test (assert the message, assert the cause, assert the message on the cause)?", "bodyText": "I'm not sure that I like that we are manually parsing settings here. I understand that we're doing it to have the full setting name. How about:\ndiff --git a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\nindex 5744814293f..cad01bd9856 100644\n--- a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\n+++ b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\n@@ -165,11 +165,15 @@ public class JvmGcMonitorService extends AbstractLifecycleComponent {\n     }\n \n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\n-        final String thresholdString = settings.get(level, null);\n-        if (thresholdString == null) {\n+        final TimeValue threshold;\n+        try {\n+            threshold = settings.getAsTime(level, null);\n+        } catch (final IllegalArgumentException e) {\n+            throw new IllegalArgumentException(\"failed to parse [\" + getThresholdName(key, level) + \"]\", e);\n+        }\n+        if (threshold == null) {\n             throw new IllegalArgumentException(\"missing gc_threshold for [\" + getThresholdName(key, level) + \"]\");\n         }\n-        TimeValue threshold = TimeValue.parseTimeValue(thresholdString, null, getThresholdName(key, level));\n         return threshold;\n     }\nand the necessary update to the test (assert the message, assert the cause, assert the message on the cause)?", "bodyHTML": "<p dir=\"auto\">I'm not sure that I like that we are manually parsing settings here. I understand that we're doing it to have the full setting name. How about:</p>\n<div class=\"highlight highlight-source-diff position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\nindex 5744814293f..cad01bd9856 100644\n--- a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\n+++ b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java\n@@ -165,11 +165,15 @@ public class JvmGcMonitorService extends AbstractLifecycleComponent {\n     }\n \n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\n-        final String thresholdString = settings.get(level, null);\n-        if (thresholdString == null) {\n+        final TimeValue threshold;\n+        try {\n+            threshold = settings.getAsTime(level, null);\n+        } catch (final IllegalArgumentException e) {\n+            throw new IllegalArgumentException(&quot;failed to parse [&quot; + getThresholdName(key, level) + &quot;]&quot;, e);\n+        }\n+        if (threshold == null) {\n             throw new IllegalArgumentException(&quot;missing gc_threshold for [&quot; + getThresholdName(key, level) + &quot;]&quot;);\n         }\n-        TimeValue threshold = TimeValue.parseTimeValue(thresholdString, null, getThresholdName(key, level));\n         return threshold;\n     }\"><pre><span class=\"pl-c1\">diff --git a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java</span>\nindex 5744814293f..cad01bd9856 100644\n<span class=\"pl-md\">--- a/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java</span>\n<span class=\"pl-mi1\">+++ b/server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java</span>\n<span class=\"pl-mdr\">@@ -165,11 +165,15 @@</span> public class JvmGcMonitorService extends AbstractLifecycleComponent {\n     }\n \n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        final String thresholdString = settings.get(level, null);</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        if (thresholdString == null) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        final TimeValue threshold;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        try {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>            threshold = settings.getAsTime(level, null);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        } catch (final IllegalArgumentException e) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>            throw new IllegalArgumentException(\"failed to parse [\" + getThresholdName(key, level) + \"]\", e);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        }</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        if (threshold == null) {</span>\n             throw new IllegalArgumentException(\"missing gc_threshold for [\" + getThresholdName(key, level) + \"]\");\n         }\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        TimeValue threshold = TimeValue.parseTimeValue(thresholdString, null, getThresholdName(key, level));</span>\n         return threshold;\n     }</pre></div>\n<p dir=\"auto\">and the necessary update to the test (assert the message, assert the cause, assert the message on the cause)?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:40:06Z", "path": "server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java", "diffHunk": "@@ -165,13 +165,11 @@ public JvmGcMonitorService(Settings settings, ThreadPool threadPool) {\n     }\n \n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\n-        TimeValue threshold = settings.getAsTime(level, null);\n-        if (threshold == null) {\n+        final String thresholdString = settings.get(level, null);\n+        if (thresholdString == null) {\n             throw new IllegalArgumentException(\"missing gc_threshold for [\" + getThresholdName(key, level) + \"]\");\n         }\n-        if (threshold.nanos() <= 0) {\n-            throw new IllegalArgumentException(\"invalid gc_threshold [\" + threshold + \"] for [\" + getThresholdName(key, level) + \"]\");\n-        }\n+        TimeValue threshold = TimeValue.parseTimeValue(thresholdString, null, getThresholdName(key, level));", "originalCommit": "5baf1f5bf717e886f83dc6864e92a9432c5b9143", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDY0Mg==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396874642", "bodyText": "Or even catch RuntimeException I would be fine with too.", "author": "jasontedor", "createdAt": "2020-03-24T02:52:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MTU2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4OTA1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398189056", "bodyText": "I've replaced this with something very similar to what you suggested, catching RuntimeException as not much else could go wrong trying to get the setting other than a parsing failure.", "author": "gwbrown", "createdAt": "2020-03-25T21:44:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MTU2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MzkzNg==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396873936", "body": "Wait, this shouldn't be necessary? I see tests we are passing in `-1`? Those aren't realistic though, right?", "bodyText": "Wait, this shouldn't be necessary? I see tests we are passing in -1? Those aren't realistic though, right?", "bodyHTML": "<p dir=\"auto\">Wait, this shouldn't be necessary? I see tests we are passing in <code>-1</code>? Those aren't realistic though, right?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:49:19Z", "path": "server/src/main/java/org/elasticsearch/index/shard/IndexingStats.java", "diffHunk": "@@ -133,7 +133,12 @@ public long getDeleteCount() {\n         /**\n          * The total amount of time spend on executing delete operations.\n          */\n-        public TimeValue getDeleteTime() { return new TimeValue(deleteTimeInMillis); }\n+        public TimeValue getDeleteTime() {\n+            if (deleteTimeInMillis >= -1) {", "originalCommit": "1f129e8747f4d903a20126b10805a6dec1a7b031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NjI4Nw==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396876287", "bodyText": "The tests are passing in -1 but multiple of these get added together, accumulating to larger negative numbers. This applies to everywhere else you've commented this as well.", "author": "gwbrown", "createdAt": "2020-03-24T02:58:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MzkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NjQ5OQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396876499", "bodyText": "This was the part of this PR that I felt least good about. I would be happy to change this if there's another tactic that would be better.", "author": "gwbrown", "createdAt": "2020-03-24T02:59:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MzkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3Njg5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396876896", "bodyText": "Those aren't realistic though, right? Negative values can never happen in production, or am I reading it wrongly? If that's the case, this tests are fictional, and we shouldn't change production code, but change the tests to be more realistic.", "author": "jasontedor", "createdAt": "2020-03-24T03:01:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MzkzNg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4OTUxMw==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398189513", "bodyText": "Good point, for some reason I thought these were using -1 as a sentinel value as we do in some other places, but upon a closer look that turned out to be wrong. I've reverted the changes to the *Stats classes and fixed the tests instead.", "author": "gwbrown", "createdAt": "2020-03-25T21:45:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3MzkzNg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3Mzk4NQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396873985", "body": "Wait, this shouldn't be necessary? I see tests we are passing in `-1`? Those aren't realistic though, right?", "bodyText": "Wait, this shouldn't be necessary? I see tests we are passing in -1? Those aren't realistic though, right?", "bodyHTML": "<p dir=\"auto\">Wait, this shouldn't be necessary? I see tests we are passing in <code>-1</code>? Those aren't realistic though, right?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:49:31Z", "path": "server/src/main/java/org/elasticsearch/index/search/stats/SearchStats.java", "diffHunk": "@@ -190,7 +196,10 @@ public long getSuggestTimeInMillis() {\n         }\n \n         public TimeValue getSuggestTime() {\n-            return new TimeValue(suggestTimeInMillis);\n+            if (suggestTimeInMillis >= -1) {", "originalCommit": "1f129e8747f4d903a20126b10805a6dec1a7b031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4OTYyNg==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398189626", "bodyText": "Reverted and fixed the tests, see above.", "author": "gwbrown", "createdAt": "2020-03-25T21:45:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3Mzk4NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDAzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396874031", "body": "Wait, this shouldn't be necessary? I see tests we are passing in `-1`? Those aren't realistic though, right?", "bodyText": "Wait, this shouldn't be necessary? I see tests we are passing in -1? Those aren't realistic though, right?", "bodyHTML": "<p dir=\"auto\">Wait, this shouldn't be necessary? I see tests we are passing in <code>-1</code>? Those aren't realistic though, right?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:49:39Z", "path": "server/src/main/java/org/elasticsearch/index/search/stats/SearchStats.java", "diffHunk": "@@ -170,7 +173,10 @@ public long getScrollCount() {\n         }\n \n         public TimeValue getScrollTime() {\n-            return new TimeValue(scrollTimeInMillis);\n+            if (scrollTimeInMillis >= -1) {", "originalCommit": "1f129e8747f4d903a20126b10805a6dec1a7b031", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDA1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r396874051", "body": "Wait, this shouldn't be necessary? I see tests we are passing in `-1`? Those aren't realistic though, right?", "bodyText": "Wait, this shouldn't be necessary? I see tests we are passing in -1? Those aren't realistic though, right?", "bodyHTML": "<p dir=\"auto\">Wait, this shouldn't be necessary? I see tests we are passing in <code>-1</code>? Those aren't realistic though, right?</p>", "author": "jasontedor", "createdAt": "2020-03-24T02:49:44Z", "path": "server/src/main/java/org/elasticsearch/index/search/stats/SearchStats.java", "diffHunk": "@@ -154,7 +154,10 @@ public long getFetchCount() {\n         }\n \n         public TimeValue getFetchTime() {\n-            return new TimeValue(fetchTimeInMillis);\n+            if (fetchTimeInMillis >= -1) {", "originalCommit": "1f129e8747f4d903a20126b10805a6dec1a7b031", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE4OTY4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398189681", "bodyText": "Reverted and fixed the tests, see above.", "author": "gwbrown", "createdAt": "2020-03-25T21:45:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg3NDA1MQ=="}], "type": "inlineReview"}, {"oid": "222bd830d44f19132867f05e5b801a6de57362c9", "url": "https://github.com/elastic/elasticsearch/commit/222bd830d44f19132867f05e5b801a6de57362c9", "message": "Version assertion", "committedDate": "2020-03-24T21:16:42Z", "type": "commit"}, {"oid": "bcd33b8022083f83c78297d291a752215a26c382", "url": "https://github.com/elastic/elasticsearch/commit/bcd33b8022083f83c78297d291a752215a26c382", "message": "Adjust setting parsing per review", "committedDate": "2020-03-24T22:15:46Z", "type": "commit"}, {"oid": "81e64581c3a49a4bdda590a5f1418c6f841d885a", "url": "https://github.com/elastic/elasticsearch/commit/81e64581c3a49a4bdda590a5f1418c6f841d885a", "message": "Merge branch 'master' into fix-timevalue", "committedDate": "2020-03-24T22:16:06Z", "type": "commit"}, {"oid": "b9bfb7312532159cca4e6e2cb6ef0fd09aec0e21", "url": "https://github.com/elastic/elasticsearch/commit/b9bfb7312532159cca4e6e2cb6ef0fd09aec0e21", "message": "Copy/paste ExplainResponse test fix from client to core", "committedDate": "2020-03-24T22:38:37Z", "type": "commit"}, {"oid": "5567b7adc157c7e9eae9a3c67860634da888be84", "url": "https://github.com/elastic/elasticsearch/commit/5567b7adc157c7e9eae9a3c67860634da888be84", "message": "Avoid negative TimeValues during serialization of incomplete snapshots", "committedDate": "2020-03-24T23:31:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTcxMA==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r397545710", "body": "Also, I'm wondering if the better long-term fix is to make the GC threshold settings not be group settings anymore, but affix settings. Then we would not need to resort this, as we'd get the proper setting named pushed down anyway, and this wrapping would be necessary. I think that would be a good follow up to this one.", "bodyText": "Also, I'm wondering if the better long-term fix is to make the GC threshold settings not be group settings anymore, but affix settings. Then we would not need to resort this, as we'd get the proper setting named pushed down anyway, and this wrapping would be necessary. I think that would be a good follow up to this one.", "bodyHTML": "<p dir=\"auto\">Also, I'm wondering if the better long-term fix is to make the GC threshold settings not be group settings anymore, but affix settings. Then we would not need to resort this, as we'd get the proper setting named pushed down anyway, and this wrapping would be necessary. I think that would be a good follow up to this one.</p>", "author": "jasontedor", "createdAt": "2020-03-25T00:41:57Z", "path": "server/src/main/java/org/elasticsearch/monitor/jvm/JvmGcMonitorService.java", "diffHunk": "@@ -165,13 +165,20 @@ public JvmGcMonitorService(Settings settings, ThreadPool threadPool) {\n     }\n \n     private static TimeValue getValidThreshold(Settings settings, String key, String level) {\n-        TimeValue threshold = settings.getAsTime(level, null);\n+        final TimeValue threshold;\n+\n+        try {\n+            threshold = settings.getAsTime(level, null);", "originalCommit": "5567b7adc157c7e9eae9a3c67860634da888be84", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "41c80954c00a6aa5d0334da5d0cfcf278e6cc6b6", "url": "https://github.com/elastic/elasticsearch/commit/41c80954c00a6aa5d0334da5d0cfcf278e6cc6b6", "message": "Copy/paste Enrich stats test fix from core to client", "committedDate": "2020-03-25T19:11:05Z", "type": "commit"}, {"oid": "a29c6396937388314b3981ec7f3fd7fd4254471b", "url": "https://github.com/elastic/elasticsearch/commit/a29c6396937388314b3981ec7f3fd7fd4254471b", "message": "Undo stats serialization changes", "committedDate": "2020-03-25T21:17:05Z", "type": "commit"}, {"oid": "ac9e0f4b71ed6eb078710e7f546cf5da08630e57", "url": "https://github.com/elastic/elasticsearch/commit/ac9e0f4b71ed6eb078710e7f546cf5da08630e57", "message": "Merge branch 'master' into fix-timevalue", "committedDate": "2020-03-25T21:27:18Z", "type": "commit"}, {"oid": "996b4a2c865a095baee1166956bb85bcfe78cdf6", "url": "https://github.com/elastic/elasticsearch/commit/996b4a2c865a095baee1166956bb85bcfe78cdf6", "message": "Replace unrealistic, breakage-causing -1s in test with 0s", "committedDate": "2020-03-25T21:42:50Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MTkwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/53913#discussion_r398191901", "body": "Super minor nit\r\n```suggestion\r\n            throw new IllegalArgumentException(\"duration cannot be negative, was given [\" + duration + \"]\");\r\n```", "bodyText": "Super minor nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"durations cannot be negative, was given [\" + duration + \"]\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"duration cannot be negative, was given [\" + duration + \"]\");", "bodyHTML": "<p dir=\"auto\">Super minor nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">durations</span> cannot be negative, was given [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> duration <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">duration</span> cannot be negative, was given [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> duration <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "dakrone", "createdAt": "2020-03-25T21:50:03Z", "path": "libs/core/src/main/java/org/elasticsearch/common/unit/TimeValue.java", "diffHunk": "@@ -47,6 +47,9 @@ public TimeValue(long millis) {\n     }\n \n     public TimeValue(long duration, TimeUnit timeUnit) {\n+        if (duration < -1) {\n+            throw new IllegalArgumentException(\"durations cannot be negative, was given [\" + duration + \"]\");", "originalCommit": "996b4a2c865a095baee1166956bb85bcfe78cdf6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4ac3bd111571b06049ea00f1623f544474bd25b", "url": "https://github.com/elastic/elasticsearch/commit/e4ac3bd111571b06049ea00f1623f544474bd25b", "message": "Plural->singular per review\n\nCo-Authored-By: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-03-25T23:25:49Z", "type": "commit"}, {"oid": "f893e1750e499232c753a9db14769f77f3b90751", "url": "https://github.com/elastic/elasticsearch/commit/f893e1750e499232c753a9db14769f77f3b90751", "message": "Singular->plural in test as well", "committedDate": "2020-03-25T23:39:09Z", "type": "commit"}]}