{"pr_number": 64751, "pr_title": "Add plugin permission validation", "pr_author": "rjernst", "pr_createdAt": "2020-11-07T20:13:02Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/64751", "timeline": [{"oid": "7171e742b3e549bf419b94f9d42c1aab357d60a2", "url": "https://github.com/elastic/elasticsearch/commit/7171e742b3e549bf419b94f9d42c1aab357d60a2", "message": "Add plugin permission validation\n\nSecurity manager policies within plugins currently can ask to grant any\npermission (though we block some within the security manager itself at\nruntime). Yet most of these permissions should never be necessary, and\nsome we would actively not want any plugins to be allowed to use. This\ncommit adds validation of plugins' policy files to restrict the\npermissions allowed to be granted to a subset that is reasonable for\nplugins to need. The allowed permissions are not ideal (still containing\nthings like suppressAccessChecks), but it is a step forward in defining\na stricter model for plugins that reduces the surface area of potential\nabuse.", "committedDate": "2020-11-07T20:12:28Z", "type": "commit"}, {"oid": "f441fbb61be04756e628fb91c8b3c2b2ecbfc430", "url": "https://github.com/elastic/elasticsearch/commit/f441fbb61be04756e628fb91c8b3c2b2ecbfc430", "message": "checkstyle", "committedDate": "2020-11-07T20:25:59Z", "type": "commit"}, {"oid": "531ae66a17ad85bf9e535155f242f873a9d30e01", "url": "https://github.com/elastic/elasticsearch/commit/531ae66a17ad85bf9e535155f242f873a9d30e01", "message": "allow scripting class permissions", "committedDate": "2020-11-07T20:38:24Z", "type": "commit"}, {"oid": "316e62176f78230f5b26a65cea8f106f4026977e", "url": "https://github.com/elastic/elasticsearch/commit/316e62176f78230f5b26a65cea8f106f4026977e", "message": "forbidden apis", "committedDate": "2020-11-08T22:59:12Z", "type": "commit"}, {"oid": "1098ff96d572cd9f8a415e68ecdc3634aca6907c", "url": "https://github.com/elastic/elasticsearch/commit/1098ff96d572cd9f8a415e68ecdc3634aca6907c", "message": "fix rest test to install xpack as modules", "committedDate": "2020-11-08T22:59:22Z", "type": "commit"}, {"oid": "b2703a60705a5250d1d059b6f9897a478e0e8324", "url": "https://github.com/elastic/elasticsearch/commit/b2703a60705a5250d1d059b6f9897a478e0e8324", "message": "fix permission definition", "committedDate": "2020-11-09T16:29:58Z", "type": "commit"}, {"oid": "a8e9847c59dab69ac33490ee2a54bc30b19a98f2", "url": "https://github.com/elastic/elasticsearch/commit/a8e9847c59dab69ac33490ee2a54bc30b19a98f2", "message": "remove unneeded perms", "committedDate": "2020-11-09T17:34:44Z", "type": "commit"}, {"oid": "3d8129eb9f5ef8c7c7a4f63d4624befd44fc7528", "url": "https://github.com/elastic/elasticsearch/commit/3d8129eb9f5ef8c7c7a4f63d4624befd44fc7528", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-09T18:19:56Z", "type": "commit"}, {"oid": "fa007db007362e2c0df20d5549fc28520a2d259c", "url": "https://github.com/elastic/elasticsearch/commit/fa007db007362e2c0df20d5549fc28520a2d259c", "message": "User newer permission name", "committedDate": "2020-11-09T19:01:37Z", "type": "commit"}, {"oid": "28e8bb0294f66cba19bc4cfddf026d06b9db8b1f", "url": "https://github.com/elastic/elasticsearch/commit/28e8bb0294f66cba19bc4cfddf026d06b9db8b1f", "message": "fix tests", "committedDate": "2020-11-09T19:38:12Z", "type": "commit"}, {"oid": "c290408507d0700eeeca054c6206691f3f37722f", "url": "https://github.com/elastic/elasticsearch/commit/c290408507d0700eeeca054c6206691f3f37722f", "message": "fix test", "committedDate": "2020-11-09T21:29:09Z", "type": "commit"}, {"oid": "64aa588c0079b4e2a95bf3b3d960767ba92d6734", "url": "https://github.com/elastic/elasticsearch/commit/64aa588c0079b4e2a95bf3b3d960767ba92d6734", "message": "tweak more perms", "committedDate": "2020-11-09T23:07:43Z", "type": "commit"}, {"oid": "050dd0fa82d4ec21e0536bd804bdd53c4db60c75", "url": "https://github.com/elastic/elasticsearch/commit/050dd0fa82d4ec21e0536bd804bdd53c4db60c75", "message": "fix missing perms", "committedDate": "2020-11-09T23:32:31Z", "type": "commit"}, {"oid": "a155f6c6ac0bbae6c3107d46fd0a8acfb349390e", "url": "https://github.com/elastic/elasticsearch/commit/a155f6c6ac0bbae6c3107d46fd0a8acfb349390e", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-10T00:31:28Z", "type": "commit"}, {"oid": "f316bc506154190228adec814b5453a045c7a242", "url": "https://github.com/elastic/elasticsearch/commit/f316bc506154190228adec814b5453a045c7a242", "message": "allow property write...because hadoop", "committedDate": "2020-11-10T00:36:19Z", "type": "commit"}, {"oid": "7aaada33d0c52914c8e1b7cfbb7b5f1e4c296b1e", "url": "https://github.com/elastic/elasticsearch/commit/7aaada33d0c52914c8e1b7cfbb7b5f1e4c296b1e", "message": "tweak tests", "committedDate": "2020-11-10T01:06:52Z", "type": "commit"}, {"oid": "adbcb57a49394bd5af20b779c08e96f5f6128385", "url": "https://github.com/elastic/elasticsearch/commit/adbcb57a49394bd5af20b779c08e96f5f6128385", "message": "add back read and write...", "committedDate": "2020-11-10T01:34:41Z", "type": "commit"}, {"oid": "cf0d7c262315eca0fb363b1560c7d21d4b251dd0", "url": "https://github.com/elastic/elasticsearch/commit/cf0d7c262315eca0fb363b1560c7d21d4b251dd0", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-10T22:03:00Z", "type": "commit"}, {"oid": "36faa9c294808b3b26e877888fde307c9a9a29b1", "url": "https://github.com/elastic/elasticsearch/commit/36faa9c294808b3b26e877888fde307c9a9a29b1", "message": "Remove shutdown hook permission from hdfs plugin\n\nThe hadoop library we use to connect with hdfs expects is is running in\na jvm dedicated to hadoop, as if it was an hdfs node. This means the\nshutdown hooks hadoop tries to register expect to work; there is no\nhandling of a lack of permissions to add shutdown hooks. This commit\nremoves the shutdown hook permission currently granted to\nrepository-hdfs by replacing the ShutdownHookManager class with one of\nthe same api, but having no-ops for the public methods.", "committedDate": "2020-11-10T23:24:55Z", "type": "commit"}, {"oid": "02a11414f1f01185ee52e0a2d21ccb3bb859a9c6", "url": "https://github.com/elastic/elasticsearch/commit/02a11414f1f01185ee52e0a2d21ccb3bb859a9c6", "message": "fix example check", "committedDate": "2020-11-11T01:14:55Z", "type": "commit"}, {"oid": "ccd6335f46f678fc9a95787c5088480790c1588e", "url": "https://github.com/elastic/elasticsearch/commit/ccd6335f46f678fc9a95787c5088480790c1588e", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-13T00:26:12Z", "type": "commit"}, {"oid": "9ec7f6e584b0dc0c5ec51d06479a6f663e006707", "url": "https://github.com/elastic/elasticsearch/commit/9ec7f6e584b0dc0c5ec51d06479a6f663e006707", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-13T00:27:18Z", "type": "commit"}, {"oid": "be9e1043524fa4dd3d86fb292a554c681d7bbd4d", "url": "https://github.com/elastic/elasticsearch/commit/be9e1043524fa4dd3d86fb292a554c681d7bbd4d", "message": "fix plugin test", "committedDate": "2020-11-13T00:33:03Z", "type": "commit"}, {"oid": "17b00ceadb21ead4e108522be646cd45af3e15f1", "url": "https://github.com/elastic/elasticsearch/commit/17b00ceadb21ead4e108522be646cd45af3e15f1", "message": "checkstyle", "committedDate": "2020-11-13T03:10:14Z", "type": "commit"}, {"oid": "aa7766a7a879e1d367ff867a89988c95258555e1", "url": "https://github.com/elastic/elasticsearch/commit/aa7766a7a879e1d367ff867a89988c95258555e1", "message": "Merge branch 'master' into plugin_permission_list2", "committedDate": "2020-11-17T22:44:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTIxMg==", "url": "https://github.com/elastic/elasticsearch/pull/64751#discussion_r527075212", "body": "Is there a reason we don't just build the map with the canonical class name?\r\n\r\n```suggestion\r\n        Map<String, List<String>> classPermissions = Map.of(\r\n            URLPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\r\n            DelegationPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\r\n            ServicePermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\r\n            PrivateCredentialPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\r\n            SQLPermission.class.getCanonicalName(), List.of(\"callAbort\", \"setNetworkTimeout\"),\r\n            ClassPermission.class.getCanonicalName(), ALLOW_ALL_NAMES\r\n        );\r\n```", "bodyText": "Is there a reason we don't just build the map with the canonical class name?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, List<String>> classPermissions = Map.of(\n          \n          \n            \n                        URLPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        DelegationPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        ServicePermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        PrivateCredentialPermission.class, ALLOW_ALL_NAMES,\n          \n          \n            \n                        SQLPermission.class, List.of(\"callAbort\", \"setNetworkTimeout\"),\n          \n          \n            \n                        ClassPermission.class, ALLOW_ALL_NAMES\n          \n          \n            \n                    ).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getCanonicalName(), Map.Entry::getValue));\n          \n          \n            \n                    Map<String, List<String>> classPermissions = Map.of(\n          \n          \n            \n                        URLPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        DelegationPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        ServicePermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        PrivateCredentialPermission.class.getCanonicalName(), ALLOW_ALL_NAMES,\n          \n          \n            \n                        SQLPermission.class.getCanonicalName(), List.of(\"callAbort\", \"setNetworkTimeout\"),\n          \n          \n            \n                        ClassPermission.class.getCanonicalName(), ALLOW_ALL_NAMES\n          \n          \n            \n                    );", "bodyHTML": "<p dir=\"auto\">Is there a reason we don't just build the map with the canonical class name?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"156\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span>&gt;</span> classPermissions <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Map</span><span class=\"pl-k\">.</span>of(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"157\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">URLPermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">DelegationPermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">ServicePermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">PrivateCredentialPermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">SQLPermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-smi\">List</span><span class=\"pl-k\">.</span>of(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>callAbort<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>setNetworkTimeout<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">ClassPermission</span><span class=\"pl-k\">.</span>class, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        )<span class=\"pl-k x x-first\">.</span><span class=\"x\">entrySet()</span><span class=\"pl-k x\">.</span><span class=\"x\">stream()</span><span class=\"pl-k x\">.</span><span class=\"x\">collect(</span><span class=\"pl-smi x\">Collectors</span><span class=\"pl-k x\">.</span><span class=\"x\">toMap(e </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x\">getKey()</span><span class=\"pl-k x\">.</span><span class=\"x\">getCanonicalName(), </span><span class=\"pl-smi x\">Map</span><span class=\"pl-k x\">.</span><span class=\"pl-smi x\">Entry</span><span class=\"pl-k x\">::</span><span class=\"x x-last\">getValue))</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"156\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span>&gt;</span> classPermissions <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Map</span><span class=\"pl-k\">.</span>of(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"157\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">URLPermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">DelegationPermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">ServicePermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">PrivateCredentialPermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"161\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">SQLPermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-smi\">List</span><span class=\"pl-k\">.</span>of(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>callAbort<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>setNetworkTimeout<span class=\"pl-pds\">\"</span></span>),</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"162\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">ClassPermission</span><span class=\"pl-k\">.</span>class<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getCanonicalName()</span>, <span class=\"pl-c1\">ALLOW_ALL_NAMES</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"163\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        );</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jaymode", "createdAt": "2020-11-19T17:38:56Z", "path": "server/src/main/java/org/elasticsearch/bootstrap/PolicyUtil.java", "diffHunk": "@@ -23,31 +23,170 @@\n import org.elasticsearch.common.io.PathUtils;\n import org.elasticsearch.core.internal.io.IOUtils;\n import org.elasticsearch.plugins.PluginInfo;\n+import org.elasticsearch.script.ClassPermission;\n \n+import javax.security.auth.AuthPermission;\n+import javax.security.auth.PrivateCredentialPermission;\n+import javax.security.auth.kerberos.DelegationPermission;\n+import javax.security.auth.kerberos.ServicePermission;\n+import java.io.FilePermission;\n import java.io.IOException;\n+import java.lang.reflect.ReflectPermission;\n+import java.net.NetPermission;\n+import java.net.SocketPermission;\n import java.net.URISyntaxException;\n import java.net.URL;\n+import java.net.URLPermission;\n import java.nio.file.DirectoryStream;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.security.CodeSource;\n import java.security.NoSuchAlgorithmException;\n import java.security.Permission;\n import java.security.PermissionCollection;\n+import java.security.Permissions;\n import java.security.Policy;\n import java.security.ProtectionDomain;\n+import java.security.SecurityPermission;\n import java.security.URIParameter;\n+import java.security.UnresolvedPermission;\n import java.security.cert.Certificate;\n+import java.sql.SQLPermission;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.LinkedHashSet;\n+import java.util.List;\n import java.util.Map;\n+import java.util.PropertyPermission;\n import java.util.Properties;\n import java.util.Set;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n public class PolicyUtil {\n+\n+    // this object is checked by reference, so the value in the list does not matter\n+    static final List<String> ALLOW_ALL_NAMES = List.of(\"ALLOW ALL NAMES SENTINEL\");\n+\n+    static class PermissionMatcher implements Predicate<Permission> {\n+\n+        PermissionCollection namedPermissions;\n+        Map<String, List<String>> classPermissions;\n+\n+        PermissionMatcher(PermissionCollection namedPermissions,\n+                          Map<String, List<String>> classPermissions) {\n+            this.namedPermissions = namedPermissions;\n+            this.classPermissions = classPermissions;\n+        }\n+\n+        @Override\n+        public boolean test(Permission permission) {\n+            if (namedPermissions.implies(permission)) {\n+                return true;\n+            }\n+            String clazz = permission.getClass().getCanonicalName();\n+            String name = permission.getName();\n+            if (permission.getClass().equals(UnresolvedPermission.class)) {\n+                UnresolvedPermission up = (UnresolvedPermission) permission;\n+                clazz = up.getUnresolvedType();\n+                name = up.getUnresolvedName();\n+            }\n+            List<String> allowedNames = classPermissions.get(clazz);\n+            return allowedNames != null && (allowedNames == ALLOW_ALL_NAMES || allowedNames.contains(name));\n+        }\n+    }\n+\n+    private static final PermissionMatcher ALLOWED_PLUGIN_PERMISSIONS;\n+    private static final PermissionMatcher ALLOWED_MODULE_PERMISSIONS;\n+    static {\n+        List<Permission> namedPermissions = List.of(\n+            new ReflectPermission(\"suppressAccessChecks\"),\n+            new RuntimePermission(\"createClassLoader\"),\n+            new RuntimePermission(\"getClassLoader\"),\n+            new RuntimePermission(\"setContextClassLoader\"),\n+            new RuntimePermission(\"setFactory\"),\n+            new RuntimePermission(\"loadLibrary.*\"),\n+            new RuntimePermission(\"accessClassInPackage.*\"),\n+            new RuntimePermission(\"accessDeclaredMembers\"),\n+            new NetPermission(\"requestPasswordAuthentication\"),\n+            new NetPermission(\"getProxySelector\"),\n+            new NetPermission(\"getCookieHandler\"),\n+            new NetPermission(\"getResponseCache\"),\n+            new SocketPermission(\"*\", \"accept,connect,listen,resolve\"),\n+            new SecurityPermission(\"createAccessControlContext\"),\n+            new SecurityPermission(\"insertProvider\"),\n+            new SecurityPermission(\"putProviderProperty.*\"),\n+            // apache abuses the SecurityPermission class for it's own purposes\n+            new SecurityPermission(\"org.apache.*\"),\n+            // write is needed because of HdfsPlugin\n+            new PropertyPermission(\"*\", \"read,write\"),\n+            new AuthPermission(\"doAs\"),\n+            new AuthPermission(\"doAsPrivileged\"),\n+            new AuthPermission(\"getSubject\"),\n+            new AuthPermission(\"getSubjectFromDomainCombiner\"),\n+            new AuthPermission(\"setReadOnly\"),\n+            new AuthPermission(\"modifyPrincipals\"),\n+            new AuthPermission(\"modifyPublicCredentials\"),\n+            new AuthPermission(\"modifyPrivateCredentials\"),\n+            new AuthPermission(\"refreshCredential\"),\n+            new AuthPermission(\"destroyCredential\"),\n+            new AuthPermission(\"createLoginContext.*\"),\n+            new AuthPermission(\"getLoginConfiguration\"),\n+            new AuthPermission(\"setLoginConfiguration\"),\n+            new AuthPermission(\"createLoginConfiguration.*\"),\n+            new AuthPermission(\"refreshLoginConfiguration\")\n+        );\n+        // While it would be ideal to represent all allowed permissions with concrete instances so that we can\n+        // use the builtin implies method to match them against the parsed policy, this does not work in all\n+        // cases for two reasons:\n+        // (1) Some permissions classes do not have a name argument that can represent all possible variants.\n+        //     For example, FilePermission has \"<< ALL FILES >>\" so all paths can be matched, but DelegationPermission\n+        //     does not have anything to represent all principals.\n+        // (2) Some permissions classes are in java modules that are not accessible from the classloader used by\n+        //     the policy parser. This results in those permissions being in UnresolvedPermission instances. Those\n+        //     are normally resolved at runtime when that permission is checked by SecurityManager. But there is\n+        //     no general purpose utility to resolve those permissions, so we must be able to match those\n+        //     unresolved permissions in the policy by class and name values.\n+        // Given the above, the below map is from permission class to the list of allowed name values. A sentinel value\n+        // is used to mean names are accepted. We do not use this model for all permissions because many permission\n+        // classes have their own meaning for some form of wildcard matching of the name, which we want to delegate\n+        // to those permissions if possible.\n+        Map<String, List<String>> classPermissions = Map.of(\n+            URLPermission.class, ALLOW_ALL_NAMES,\n+            DelegationPermission.class, ALLOW_ALL_NAMES,\n+            ServicePermission.class, ALLOW_ALL_NAMES,\n+            PrivateCredentialPermission.class, ALLOW_ALL_NAMES,\n+            SQLPermission.class, List.of(\"callAbort\", \"setNetworkTimeout\"),\n+            ClassPermission.class, ALLOW_ALL_NAMES\n+        ).entrySet().stream().collect(Collectors.toMap(e -> e.getKey().getCanonicalName(), Map.Entry::getValue));", "originalCommit": "aa7766a7a879e1d367ff867a89988c95258555e1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzI0MzAwMw==", "url": "https://github.com/elastic/elasticsearch/pull/64751#discussion_r527243003", "bodyText": "Just more cumbersome to add. I found it easier to do the common manipulation at the end on all the entries.", "author": "rjernst", "createdAt": "2020-11-19T22:21:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NTIxMg=="}], "type": "inlineReview"}]}