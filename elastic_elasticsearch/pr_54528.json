{"pr_number": 54528, "pr_title": "Convert RestIntegTestTask to Java", "pr_author": "jakelandis", "pr_createdAt": "2020-03-31T19:43:06Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54528", "timeline": [{"oid": "e18b5bfbb2d6c903c5dcd7356f07ecae362e5f5c", "url": "https://github.com/elastic/elasticsearch/commit/e18b5bfbb2d6c903c5dcd7356f07ecae362e5f5c", "message": "move files and add supplier", "committedDate": "2020-03-31T19:32:54Z", "type": "commit"}, {"oid": "609026d5f4d130ba3ac4dbce6df0554cec598aec", "url": "https://github.com/elastic/elasticsearch/commit/609026d5f4d130ba3ac4dbce6df0554cec598aec", "message": "RestIntegTestTask to java", "committedDate": "2020-03-31T19:33:17Z", "type": "commit"}, {"oid": "d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "url": "https://github.com/elastic/elasticsearch/commit/d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "message": "spotless", "committedDate": "2020-03-31T19:40:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3MTM2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401171365", "body": "Let's provide an overloaded method that takes a `Supplier<String>` so we don't have to do this explicit cast here.", "bodyText": "Let's provide an overloaded method that takes a Supplier<String> so we don't have to do this explicit cast here.", "bodyHTML": "<p dir=\"auto\">Let's provide an overloaded method that takes a <code>Supplier&lt;String&gt;</code> so we don't have to do this explicit cast here.</p>", "author": "mark-vieira", "createdAt": "2020-03-31T19:47:49Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/RestIntegTestTask.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.SystemPropertyCommandLineArgumentProvider;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.RestTestRunnerTask;\n+import org.gradle.api.Action;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+\n+import java.util.function.Supplier;\n+\n+public class RestIntegTestTask extends DefaultTask {\n+\n+    protected RestTestRunnerTask runner;\n+    private static final String TESTS_REST_CLUSTER = \"tests.rest.cluster\";\n+    private static final String TESTS_CLUSTER = \"tests.cluster\";\n+    private static final String TESTS_CLUSTER_NAME = \"tests.clustername\";\n+\n+    public RestIntegTestTask() {\n+        Project project = getProject();\n+        String name = getName();\n+        super.dependsOn(project);\n+        runner = project.getTasks().create(name + \"Runner\", RestTestRunnerTask.class);\n+        NamedDomainObjectContainer<ElasticsearchCluster> testClusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+            .getExtensions()\n+            .getByName(\"testClusters\");\n+        ElasticsearchCluster cluster = testClusters.create(name);\n+        runner.useCluster(cluster);\n+        runner.include(\"**/*IT.class\");\n+        runner.systemProperty(\"tests.rest.load_packaged\", Boolean.FALSE.toString());\n+        if (System.getProperty(TESTS_REST_CLUSTER) == null) {\n+            if (System.getProperty(TESTS_CLUSTER) != null || System.getProperty(TESTS_CLUSTER_NAME) != null) {\n+                throw new IllegalArgumentException(\n+                    String.format(\"%s, %s, and %s must all be null or non-null\", TESTS_REST_CLUSTER, TESTS_CLUSTER, TESTS_CLUSTER_NAME)\n+                );\n+            }\n+            SystemPropertyCommandLineArgumentProvider runnerNonInputProperties = (SystemPropertyCommandLineArgumentProvider) runner\n+                .getExtensions()\n+                .getByName(\"nonInputProperties\");\n+            runnerNonInputProperties.systemProperty(\n+                TESTS_REST_CLUSTER,\n+                (Supplier<String>) () -> String.join(\",\", cluster.getAllHttpSocketURI())", "originalCommit": "d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3MjQ3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401172479", "body": "Let's use `TestClustersPlugin.EXTENSION_NAME` here instead of hard-coding.", "bodyText": "Let's use TestClustersPlugin.EXTENSION_NAME here instead of hard-coding.", "bodyHTML": "<p dir=\"auto\">Let's use <code>TestClustersPlugin.EXTENSION_NAME</code> here instead of hard-coding.</p>", "author": "mark-vieira", "createdAt": "2020-03-31T19:49:44Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/RestIntegTestTask.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.SystemPropertyCommandLineArgumentProvider;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.RestTestRunnerTask;\n+import org.gradle.api.Action;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+\n+import java.util.function.Supplier;\n+\n+public class RestIntegTestTask extends DefaultTask {\n+\n+    protected RestTestRunnerTask runner;\n+    private static final String TESTS_REST_CLUSTER = \"tests.rest.cluster\";\n+    private static final String TESTS_CLUSTER = \"tests.cluster\";\n+    private static final String TESTS_CLUSTER_NAME = \"tests.clustername\";\n+\n+    public RestIntegTestTask() {\n+        Project project = getProject();\n+        String name = getName();\n+        super.dependsOn(project);\n+        runner = project.getTasks().create(name + \"Runner\", RestTestRunnerTask.class);\n+        NamedDomainObjectContainer<ElasticsearchCluster> testClusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+            .getExtensions()\n+            .getByName(\"testClusters\");", "originalCommit": "d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3NDAzNw==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401174037", "body": "Gross. Let's replace this with something like:\r\n\r\n```\r\nrunner.onlyIf(t -> this.getEnabled())\r\n```", "bodyText": "Gross. Let's replace this with something like:\nrunner.onlyIf(t -> this.getEnabled())", "bodyHTML": "<p dir=\"auto\">Gross. Let's replace this with something like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"runner.onlyIf(t -&gt; this.getEnabled())\"><pre><code>runner.onlyIf(t -&gt; this.getEnabled())\n</code></pre></div>", "author": "mark-vieira", "createdAt": "2020-03-31T19:52:31Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/RestIntegTestTask.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.SystemPropertyCommandLineArgumentProvider;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.RestTestRunnerTask;\n+import org.gradle.api.Action;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+\n+import java.util.function.Supplier;\n+\n+public class RestIntegTestTask extends DefaultTask {\n+\n+    protected RestTestRunnerTask runner;\n+    private static final String TESTS_REST_CLUSTER = \"tests.rest.cluster\";\n+    private static final String TESTS_CLUSTER = \"tests.cluster\";\n+    private static final String TESTS_CLUSTER_NAME = \"tests.clustername\";\n+\n+    public RestIntegTestTask() {\n+        Project project = getProject();\n+        String name = getName();\n+        super.dependsOn(project);\n+        runner = project.getTasks().create(name + \"Runner\", RestTestRunnerTask.class);\n+        NamedDomainObjectContainer<ElasticsearchCluster> testClusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+            .getExtensions()\n+            .getByName(\"testClusters\");\n+        ElasticsearchCluster cluster = testClusters.create(name);\n+        runner.useCluster(cluster);\n+        runner.include(\"**/*IT.class\");\n+        runner.systemProperty(\"tests.rest.load_packaged\", Boolean.FALSE.toString());\n+        if (System.getProperty(TESTS_REST_CLUSTER) == null) {\n+            if (System.getProperty(TESTS_CLUSTER) != null || System.getProperty(TESTS_CLUSTER_NAME) != null) {\n+                throw new IllegalArgumentException(\n+                    String.format(\"%s, %s, and %s must all be null or non-null\", TESTS_REST_CLUSTER, TESTS_CLUSTER, TESTS_CLUSTER_NAME)\n+                );\n+            }\n+            SystemPropertyCommandLineArgumentProvider runnerNonInputProperties = (SystemPropertyCommandLineArgumentProvider) runner\n+                .getExtensions()\n+                .getByName(\"nonInputProperties\");\n+            runnerNonInputProperties.systemProperty(\n+                TESTS_REST_CLUSTER,\n+                (Supplier<String>) () -> String.join(\",\", cluster.getAllHttpSocketURI())\n+            );\n+            runnerNonInputProperties.systemProperty(\n+                TESTS_CLUSTER,\n+                (Supplier<String>) () -> String.join(\",\", cluster.getAllTransportPortURI())\n+            );\n+            runnerNonInputProperties.systemProperty(TESTS_CLUSTER_NAME, (Supplier<String>) cluster::getName);\n+        } else {\n+            if (System.getProperty(TESTS_CLUSTER) == null || System.getProperty(TESTS_CLUSTER_NAME) == null) {\n+                throw new IllegalArgumentException(\n+                    String.format(\"%s, %s, and %s must all be null or non-null\", TESTS_REST_CLUSTER, TESTS_CLUSTER, TESTS_CLUSTER_NAME)\n+                );\n+            }\n+            // an external cluster was specified and all responsibility for cluster configuration is taken by the user\n+            runner.systemProperty(TESTS_REST_CLUSTER, System.getProperty(TESTS_REST_CLUSTER));\n+            runner.systemProperty(TESTS_CLUSTER, System.getProperty(TESTS_CLUSTER));\n+            runner.systemProperty(TESTS_CLUSTER_NAME, System.getProperty(TESTS_CLUSTER_NAME));\n+        }\n+        // this must run after all projects have been configured, so we know any project\n+        // references can be accessed as a fully configured\n+        project.getGradle().projectsEvaluated(x -> {", "originalCommit": "d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNzIzNw==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401217237", "bodyText": ":( I tried it and ended up violating the testingConventions.\nExpected at least one test class included in task :x-pack:plugin:autoscaling:integTestRunner, but found none.\n\nI always wondered why these where needed: https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/autoscaling/build.gradle#L15  Fixing that is a bit more then i want to chew off for this PR, so put it back to how it was.", "author": "jakelandis", "createdAt": "2020-03-31T21:10:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3NDAzNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2NzYyMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401267621", "bodyText": "\ud83d\ude22 fair enough, we'll leave as-is", "author": "mark-vieira", "createdAt": "2020-03-31T23:11:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3NDAzNw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3NTI3OA==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401175278", "body": "I'm now not sure this is even necessary. We already by default pass thru any system properties with the prefix `tests`.\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/ecdbd37f2e0f0447ed574b306adb64c19adc3ce1/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy#L676-L680", "bodyText": "I'm now not sure this is even necessary. We already by default pass thru any system properties with the prefix tests.\n\n  \n    \n      elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy\n    \n    \n        Lines 676 to 680\n      in\n      ecdbd37\n    \n    \n    \n    \n\n        \n          \n           System.getProperties().each { key, value -> \n        \n\n        \n          \n               if ((key.toString().startsWith('tests.') || key.toString().startsWith('es.'))) { \n        \n\n        \n          \n                   test.systemProperty key.toString(), value \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "bodyHTML": "<p dir=\"auto\">I'm now not sure this is even necessary. We already by default pass thru any system properties with the prefix <code>tests</code>.</p>\n<p dir=\"auto\"><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/elastic/elasticsearch/blob/ecdbd37f2e0f0447ed574b306adb64c19adc3ce1/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy#L676-L680\">elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 676 to 680\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/elastic/elasticsearch/commit/ecdbd37f2e0f0447ed574b306adb64c19adc3ce1\">ecdbd37</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L676\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"676\"></td>\n          <td id=\"LC676\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">System</span><span class=\"pl-k\">.</span>getProperties()<span class=\"pl-k\">.</span>each { <span class=\"pl-v\">key</span>, <span class=\"pl-v\">value</span> <span class=\"pl-k\">-&gt;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L677\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"677\"></td>\n          <td id=\"LC677\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> ((key<span class=\"pl-k\">.</span>toString()<span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tests.<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">||</span> key<span class=\"pl-k\">.</span>toString()<span class=\"pl-k\">.</span>startsWith(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>es.<span class=\"pl-pds\">'</span></span>))) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L678\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"678\"></td>\n          <td id=\"LC678\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         test<span class=\"pl-k\">.</span>systemProperty key<span class=\"pl-k\">.</span>toString(), value </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L679\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"679\"></td>\n          <td id=\"LC679\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L680\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"680\"></td>\n          <td id=\"LC680\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "mark-vieira", "createdAt": "2020-03-31T19:54:37Z", "path": "buildSrc/src/main/java/org/elasticsearch/gradle/test/RestIntegTestTask.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Licensed to Elasticsearch under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.elasticsearch.gradle.test;\n+\n+import org.elasticsearch.gradle.SystemPropertyCommandLineArgumentProvider;\n+import org.elasticsearch.gradle.testclusters.ElasticsearchCluster;\n+import org.elasticsearch.gradle.testclusters.RestTestRunnerTask;\n+import org.gradle.api.Action;\n+import org.gradle.api.DefaultTask;\n+import org.gradle.api.NamedDomainObjectContainer;\n+import org.gradle.api.Project;\n+import org.gradle.api.Task;\n+\n+import java.util.function.Supplier;\n+\n+public class RestIntegTestTask extends DefaultTask {\n+\n+    protected RestTestRunnerTask runner;\n+    private static final String TESTS_REST_CLUSTER = \"tests.rest.cluster\";\n+    private static final String TESTS_CLUSTER = \"tests.cluster\";\n+    private static final String TESTS_CLUSTER_NAME = \"tests.clustername\";\n+\n+    public RestIntegTestTask() {\n+        Project project = getProject();\n+        String name = getName();\n+        super.dependsOn(project);\n+        runner = project.getTasks().create(name + \"Runner\", RestTestRunnerTask.class);\n+        NamedDomainObjectContainer<ElasticsearchCluster> testClusters = (NamedDomainObjectContainer<ElasticsearchCluster>) project\n+            .getExtensions()\n+            .getByName(\"testClusters\");\n+        ElasticsearchCluster cluster = testClusters.create(name);\n+        runner.useCluster(cluster);\n+        runner.include(\"**/*IT.class\");\n+        runner.systemProperty(\"tests.rest.load_packaged\", Boolean.FALSE.toString());\n+        if (System.getProperty(TESTS_REST_CLUSTER) == null) {\n+            if (System.getProperty(TESTS_CLUSTER) != null || System.getProperty(TESTS_CLUSTER_NAME) != null) {\n+                throw new IllegalArgumentException(\n+                    String.format(\"%s, %s, and %s must all be null or non-null\", TESTS_REST_CLUSTER, TESTS_CLUSTER, TESTS_CLUSTER_NAME)\n+                );\n+            }\n+            SystemPropertyCommandLineArgumentProvider runnerNonInputProperties = (SystemPropertyCommandLineArgumentProvider) runner\n+                .getExtensions()\n+                .getByName(\"nonInputProperties\");\n+            runnerNonInputProperties.systemProperty(\n+                TESTS_REST_CLUSTER,\n+                (Supplier<String>) () -> String.join(\",\", cluster.getAllHttpSocketURI())\n+            );\n+            runnerNonInputProperties.systemProperty(\n+                TESTS_CLUSTER,\n+                (Supplier<String>) () -> String.join(\",\", cluster.getAllTransportPortURI())\n+            );\n+            runnerNonInputProperties.systemProperty(TESTS_CLUSTER_NAME, (Supplier<String>) cluster::getName);\n+        } else {\n+            if (System.getProperty(TESTS_CLUSTER) == null || System.getProperty(TESTS_CLUSTER_NAME) == null) {\n+                throw new IllegalArgumentException(\n+                    String.format(\"%s, %s, and %s must all be null or non-null\", TESTS_REST_CLUSTER, TESTS_CLUSTER, TESTS_CLUSTER_NAME)\n+                );\n+            }\n+            // an external cluster was specified and all responsibility for cluster configuration is taken by the user", "originalCommit": "d4cac28a6a0c6774dbc95adf5fd18b67fcb83bb9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNDQ5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54528#discussion_r401204495", "bodyText": "I am pretty sure you are right. The fact that it also had a bug that went un-noticed means that either no one used it, or it did in fact work. (I swear I had used this before without issue). Also if assume code hasn't moved too much, it looks like the referenced passthrough happened after the introduction here.\nI have removed it, and will do a quick manual spot check to ensure it still works.\nEDIT: double checked running the tests against a docker cluster and it still works with these lines removed", "author": "jakelandis", "createdAt": "2020-03-31T20:46:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE3NTI3OA=="}], "type": "inlineReview"}, {"oid": "784d95340dd2bd01ab7957034922a3cfb1d96543", "url": "https://github.com/elastic/elasticsearch/commit/784d95340dd2bd01ab7957034922a3cfb1d96543", "message": "fix test failure (wrong depends) and review comments", "committedDate": "2020-03-31T20:32:40Z", "type": "commit"}, {"oid": "78d4b5d72407ac5eeceb749a314cb9ca178c8330", "url": "https://github.com/elastic/elasticsearch/commit/78d4b5d72407ac5eeceb749a314cb9ca178c8330", "message": "fix warning, remove uneeded code", "committedDate": "2020-03-31T20:41:19Z", "type": "commit"}, {"oid": "205ed0017dbf6e926e5d8d0d12e0fa80f0e8ee50", "url": "https://github.com/elastic/elasticsearch/commit/205ed0017dbf6e926e5d8d0d12e0fa80f0e8ee50", "message": "bring back isEnabled setEnabled to pass validation", "committedDate": "2020-03-31T21:07:15Z", "type": "commit"}]}