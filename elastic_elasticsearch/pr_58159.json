{"pr_number": 58159, "pr_title": "ILM: don't take snapshot of a data stream's write index", "pr_author": "andreidan", "pr_createdAt": "2020-06-16T09:37:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/58159", "timeline": [{"oid": "4788a4cfe703be11d92728c46fff88d9afd4d098", "url": "https://github.com/elastic/elasticsearch/commit/4788a4cfe703be11d92728c46fff88d9afd4d098", "message": "ILM: don't take snapshot of a data stream's write index\n\nWe don't allow converting a data stream's writeable index into a searchable\nsnapshot. We are currently preventing swapping a data stream's write index\nwith the restored index.\n\nThis adds another step that will not proceed with the searchable snapshot action\nuntil the managed index is not the write index of a data stream anymore.", "committedDate": "2020-06-16T09:35:59Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwOTkzNQ==", "url": "https://github.com/elastic/elasticsearch/pull/58159#discussion_r440809935", "body": "Minor, but other places we've made a point to compare `Index` instances so both the index name and UUID match.\r\n```suggestion\r\n            if (dataStream.getWriteIndex().getIndex().equals(index)) {\r\n```", "bodyText": "Minor, but other places we've made a point to compare Index instances so both the index name and UUID match.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (dataStream.getWriteIndex().getIndex().getName().equals(indexName)) {\n          \n          \n            \n                        if (dataStream.getWriteIndex().getIndex().equals(index)) {", "bodyHTML": "<p dir=\"auto\">Minor, but other places we've made a point to compare <code>Index</code> instances so both the index name and UUID match.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (dataStream<span class=\"pl-k\">.</span>getWriteIndex()<span class=\"pl-k\">.</span>getIndex()<span class=\"pl-k\">.</span><span class=\"x x-first\">getName()</span><span class=\"pl-k x x-last\">.</span>equals(<span class=\"x x-first x-last\">indexName</span>)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (dataStream<span class=\"pl-k\">.</span>getWriteIndex()<span class=\"pl-k\">.</span>getIndex()<span class=\"pl-k\">.</span>equals(<span class=\"x x-first x-last\">index</span>)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-06-16T12:27:31Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/CheckNotDataStreamWriteIndexStep.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.IndexAbstraction;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.cluster.metadata.Metadata;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.index.Index;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+\n+/**\n+ * Some actions cannot be executed on a data stream's write index (eg. `searchable-snapshot`). This step checks if the managed index is\n+ * part of a data stream, in which case it will check it's not the write index. If the managed index is the write index of a data stream\n+ * this step will wait until that's not the case (ie. rolling over the data stream will create a new index as the data stream's write\n+ * index and this step will be able to complete)\n+ */\n+public class CheckNotDataStreamWriteIndexStep extends ClusterStateWaitStep {\n+\n+    public static final String NAME = \"check-no-write-index\";\n+\n+    private static final Logger logger = LogManager.getLogger(CheckNotDataStreamWriteIndexStep.class);\n+\n+    CheckNotDataStreamWriteIndexStep(StepKey key, StepKey nextStepKey) {\n+        super(key, nextStepKey);\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return true;\n+    }\n+\n+    @Override\n+    public Result isConditionMet(Index index, ClusterState clusterState) {\n+        Metadata metadata = clusterState.metadata();\n+        IndexMetadata indexMetadata = metadata.index(index);\n+        String indexName = index.getName();\n+\n+        if (indexMetadata == null) {\n+            String errorMessage = String.format(Locale.ROOT, \"[%s] lifecycle action for index [%s] executed but index no longer exists\",\n+                getKey().getAction(), indexName);\n+            // Index must have been since deleted\n+            logger.debug(errorMessage);\n+            return new Result(false, new Info(errorMessage));\n+        }\n+\n+        String policyName = indexMetadata.getSettings().get(LifecycleSettings.LIFECYCLE_NAME);\n+        IndexAbstraction indexAbstraction = clusterState.metadata().getIndicesLookup().get(indexName);\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + indexName + \"] was not found\";\n+        IndexAbstraction.DataStream dataStream = indexAbstraction.getParentDataStream();\n+        if (dataStream != null) {\n+            assert dataStream.getWriteIndex() != null : dataStream.getName() + \" has no write index\";\n+            if (dataStream.getWriteIndex().getIndex().getName().equals(indexName)) {", "originalCommit": "4788a4cfe703be11d92728c46fff88d9afd4d098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fe4b433c8180e93d6e9ce9d9b8cef44893ce826c", "url": "https://github.com/elastic/elasticsearch/commit/fe4b433c8180e93d6e9ce9d9b8cef44893ce826c", "message": "Compare index name and UUID\n\nCo-authored-by: Dan Hermann <danhermann@users.noreply.github.com>", "committedDate": "2020-06-16T18:09:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0MzM2Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58159#discussion_r441043366", "body": "Minor suggestion to make it clearer that we're not waiting for the write index not to exist:\r\n\r\n```suggestion\r\n    public static final String NAME = \"check-not-write-index\";\r\n```", "bodyText": "Minor suggestion to make it clearer that we're not waiting for the write index not to exist:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String NAME = \"check-no-write-index\";\n          \n          \n            \n                public static final String NAME = \"check-not-write-index\";", "bodyHTML": "<p dir=\"auto\">Minor suggestion to make it clearer that we're not waiting for the write index not to exist:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">NAME</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>check-<span class=\"x x-first x-last\">no</span>-write-index<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">NAME</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>check-<span class=\"x x-first x-last\">not</span>-write-index<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "dakrone", "createdAt": "2020-06-16T18:05:56Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/CheckNotDataStreamWriteIndexStep.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.IndexAbstraction;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.cluster.metadata.Metadata;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.index.Index;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+\n+/**\n+ * Some actions cannot be executed on a data stream's write index (eg. `searchable-snapshot`). This step checks if the managed index is\n+ * part of a data stream, in which case it will check it's not the write index. If the managed index is the write index of a data stream\n+ * this step will wait until that's not the case (ie. rolling over the data stream will create a new index as the data stream's write\n+ * index and this step will be able to complete)\n+ */\n+public class CheckNotDataStreamWriteIndexStep extends ClusterStateWaitStep {\n+\n+    public static final String NAME = \"check-no-write-index\";", "originalCommit": "4788a4cfe703be11d92728c46fff88d9afd4d098", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NTg4Ng==", "url": "https://github.com/elastic/elasticsearch/pull/58159#discussion_r441045886", "body": "I think calling it \"stopping\" might be a little confusing, I would suggest something like:\r\n\r\n\"index [.ds-foo-0001] is the write index for data stream [foo], pausing ILM execution until this index is no longer the write index for the data stream via manual or automated rollover\"\r\n\r\nWhat do you think?", "bodyText": "I think calling it \"stopping\" might be a little confusing, I would suggest something like:\n\"index [.ds-foo-0001] is the write index for data stream [foo], pausing ILM execution until this index is no longer the write index for the data stream via manual or automated rollover\"\nWhat do you think?", "bodyHTML": "<p dir=\"auto\">I think calling it \"stopping\" might be a little confusing, I would suggest something like:</p>\n<p dir=\"auto\">\"index [.ds-foo-0001] is the write index for data stream [foo], pausing ILM execution until this index is no longer the write index for the data stream via manual or automated rollover\"</p>\n<p dir=\"auto\">What do you think?</p>", "author": "dakrone", "createdAt": "2020-06-16T18:10:11Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ilm/CheckNotDataStreamWriteIndexStep.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+package org.elasticsearch.xpack.core.ilm;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.cluster.ClusterState;\n+import org.elasticsearch.cluster.metadata.IndexAbstraction;\n+import org.elasticsearch.cluster.metadata.IndexMetadata;\n+import org.elasticsearch.cluster.metadata.Metadata;\n+import org.elasticsearch.common.ParseField;\n+import org.elasticsearch.common.xcontent.ToXContentObject;\n+import org.elasticsearch.common.xcontent.XContentBuilder;\n+import org.elasticsearch.index.Index;\n+\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+\n+/**\n+ * Some actions cannot be executed on a data stream's write index (eg. `searchable-snapshot`). This step checks if the managed index is\n+ * part of a data stream, in which case it will check it's not the write index. If the managed index is the write index of a data stream\n+ * this step will wait until that's not the case (ie. rolling over the data stream will create a new index as the data stream's write\n+ * index and this step will be able to complete)\n+ */\n+public class CheckNotDataStreamWriteIndexStep extends ClusterStateWaitStep {\n+\n+    public static final String NAME = \"check-no-write-index\";\n+\n+    private static final Logger logger = LogManager.getLogger(CheckNotDataStreamWriteIndexStep.class);\n+\n+    CheckNotDataStreamWriteIndexStep(StepKey key, StepKey nextStepKey) {\n+        super(key, nextStepKey);\n+    }\n+\n+    @Override\n+    public boolean isRetryable() {\n+        return true;\n+    }\n+\n+    @Override\n+    public Result isConditionMet(Index index, ClusterState clusterState) {\n+        Metadata metadata = clusterState.metadata();\n+        IndexMetadata indexMetadata = metadata.index(index);\n+        String indexName = index.getName();\n+\n+        if (indexMetadata == null) {\n+            String errorMessage = String.format(Locale.ROOT, \"[%s] lifecycle action for index [%s] executed but index no longer exists\",\n+                getKey().getAction(), indexName);\n+            // Index must have been since deleted\n+            logger.debug(errorMessage);\n+            return new Result(false, new Info(errorMessage));\n+        }\n+\n+        String policyName = indexMetadata.getSettings().get(LifecycleSettings.LIFECYCLE_NAME);\n+        IndexAbstraction indexAbstraction = clusterState.metadata().getIndicesLookup().get(indexName);\n+        assert indexAbstraction != null : \"invalid cluster metadata. index [\" + indexName + \"] was not found\";\n+        IndexAbstraction.DataStream dataStream = indexAbstraction.getParentDataStream();\n+        if (dataStream != null) {\n+            assert dataStream.getWriteIndex() != null : dataStream.getName() + \" has no write index\";\n+            if (dataStream.getWriteIndex().getIndex().getName().equals(indexName)) {\n+                String errorMessage = String.format(Locale.ROOT, \"index [%s] is the write index for data stream [%s]. \" +\n+                    \"stopping execution of lifecycle [%s]. manually rolling over the index will resume the execution of the policy as \" +\n+                    \"the index will not be the data stream's write index anymore\", indexName, dataStream.getName(), policyName);", "originalCommit": "4788a4cfe703be11d92728c46fff88d9afd4d098", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NDI4Mg==", "url": "https://github.com/elastic/elasticsearch/pull/58159#discussion_r441054282", "bodyText": "sure, good point", "author": "andreidan", "createdAt": "2020-06-16T18:21:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0NTg4Ng=="}], "type": "inlineReview"}, {"oid": "361459d2068e304cc0c2caad71a514b9ac661ef8", "url": "https://github.com/elastic/elasticsearch/commit/361459d2068e304cc0c2caad71a514b9ac661ef8", "message": "Update step name\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>", "committedDate": "2020-06-16T18:17:50Z", "type": "commit"}, {"oid": "96eef2c91126d4fa479d2f0b7fcf41da569c1830", "url": "https://github.com/elastic/elasticsearch/commit/96eef2c91126d4fa479d2f0b7fcf41da569c1830", "message": "Compare index name and UUID and change error message", "committedDate": "2020-06-16T18:38:23Z", "type": "commit"}]}