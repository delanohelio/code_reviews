{"pr_number": 66062, "pr_title": "[ML] [Deprecation] add deprecation check for job model snapshots that need upgraded", "pr_author": "benwtrent", "pr_createdAt": "2020-12-08T21:00:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/66062", "timeline": [{"oid": "2bc2a21dbc1e7ae4f0591d994d0065cf771d98f7", "url": "https://github.com/elastic/elasticsearch/commit/2bc2a21dbc1e7ae4f0591d994d0065cf771d98f7", "message": "[ML] [Deprecation] add deprecation check for job model snapshots that need upgraded", "committedDate": "2020-12-08T21:15:44Z", "type": "forcePushed"}, {"oid": "0f9770dc77750f2174413d80da3d7d17d4da3f82", "url": "https://github.com/elastic/elasticsearch/commit/0f9770dc77750f2174413d80da3d7d17d4da3f82", "message": "[ML] [Deprecation] add deprecation check for job model snapshots that need upgraded", "committedDate": "2020-12-08T21:24:10Z", "type": "forcePushed"}, {"oid": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "url": "https://github.com/elastic/elasticsearch/commit/645929a3e899d581c063a99ea09eb6c9716fdd1c", "message": "[ML] [Deprecation] add deprecation check for job model snapshots that need upgraded", "committedDate": "2020-12-08T21:37:33Z", "type": "commit"}, {"oid": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "url": "https://github.com/elastic/elasticsearch/commit/645929a3e899d581c063a99ea09eb6c9716fdd1c", "message": "[ML] [Deprecation] add deprecation check for job model snapshots that need upgraded", "committedDate": "2020-12-08T21:37:33Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIzODU4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542238583", "body": "The defaults are the same as the public RestHighLevelClient [ctor](https://github.com/elastic/elasticsearch/blob/e4a90d56f766c09dcc501268a9ab920c419f9598/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java#L282) (give or take a Collections.emptyList vs new ArrayList)\r\n\r\nI suspect there is a good reason you added this class but I can't see it. ", "bodyText": "The defaults are the same as the public RestHighLevelClient ctor (give or take a Collections.emptyList vs new ArrayList)\nI suspect there is a good reason you added this class but I can't see it.", "bodyHTML": "<p dir=\"auto\">The defaults are the same as the public RestHighLevelClient <a href=\"https://github.com/elastic/elasticsearch/blob/e4a90d56f766c09dcc501268a9ab920c419f9598/client/rest-high-level/src/main/java/org/elasticsearch/client/RestHighLevelClient.java#L282\">ctor</a> (give or take a Collections.emptyList vs new ArrayList)</p>\n<p dir=\"auto\">I suspect there is a good reason you added this class but I can't see it.</p>", "author": "davidkyle", "createdAt": "2020-12-14T09:35:53Z", "path": "x-pack/plugin/deprecation/qa/rest/src/javaRestTest/java/org/elasticsearch/xpack/deprecation/MlDeprecationIT.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n+import org.elasticsearch.action.index.IndexRequest;\n+import org.elasticsearch.client.RequestOptions;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.RestHighLevelClient;\n+import org.elasticsearch.client.WarningsHandler;\n+import org.elasticsearch.client.migration.DeprecationInfoRequest;\n+import org.elasticsearch.client.migration.DeprecationInfoResponse;\n+import org.elasticsearch.client.ml.PutJobRequest;\n+import org.elasticsearch.client.ml.job.config.AnalysisConfig;\n+import org.elasticsearch.client.ml.job.config.DataDescription;\n+import org.elasticsearch.client.ml.job.config.Detector;\n+import org.elasticsearch.client.ml.job.config.Job;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.search.SearchModule;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+public class MlDeprecationIT extends ESRestTestCase {\n+\n+    private static final RequestOptions REQUEST_OPTIONS = RequestOptions.DEFAULT.toBuilder()\n+        .setWarningsHandler(WarningsHandler.PERMISSIVE)\n+        .build();\n+\n+    private static class HLRC extends RestHighLevelClient {\n+        HLRC(RestClient restClient) {", "originalCommit": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM4OTMzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542389339", "bodyText": "@davidkyle the public ctor for the RestHighLevelClient takes a client builder. Since the rest client is already built, I need to access the protected ctor that accepts the built low level client.", "author": "benwtrent", "createdAt": "2020-12-14T13:38:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIzODU4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI0ODg3NQ==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542248875", "body": "```suggestion\r\n        );\r\n        hlrc.close();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    );\n          \n          \n            \n                    );\n          \n          \n            \n                    hlrc.close();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        );</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        );</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        hlrc<span class=\"pl-k\">.</span>close();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "davidkyle", "createdAt": "2020-12-14T09:50:24Z", "path": "x-pack/plugin/deprecation/qa/rest/src/javaRestTest/java/org/elasticsearch/xpack/deprecation/MlDeprecationIT.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n+ * or more contributor license agreements. Licensed under the Elastic License;\n+ * you may not use this file except in compliance with the Elastic License.\n+ */\n+\n+package org.elasticsearch.xpack.deprecation;\n+\n+import org.elasticsearch.action.admin.indices.refresh.RefreshRequest;\n+import org.elasticsearch.action.index.IndexRequest;\n+import org.elasticsearch.client.RequestOptions;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.RestHighLevelClient;\n+import org.elasticsearch.client.WarningsHandler;\n+import org.elasticsearch.client.migration.DeprecationInfoRequest;\n+import org.elasticsearch.client.migration.DeprecationInfoResponse;\n+import org.elasticsearch.client.ml.PutJobRequest;\n+import org.elasticsearch.client.ml.job.config.AnalysisConfig;\n+import org.elasticsearch.client.ml.job.config.DataDescription;\n+import org.elasticsearch.client.ml.job.config.Detector;\n+import org.elasticsearch.client.ml.job.config.Job;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentType;\n+import org.elasticsearch.search.SearchModule;\n+import org.elasticsearch.test.rest.ESRestTestCase;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.hamcrest.Matchers.hasSize;\n+\n+public class MlDeprecationIT extends ESRestTestCase {\n+\n+    private static final RequestOptions REQUEST_OPTIONS = RequestOptions.DEFAULT.toBuilder()\n+        .setWarningsHandler(WarningsHandler.PERMISSIVE)\n+        .build();\n+\n+    private static class HLRC extends RestHighLevelClient {\n+        HLRC(RestClient restClient) {\n+            super(restClient, RestClient::close, new ArrayList<>());\n+        }\n+    }\n+\n+    @Override\n+    protected NamedXContentRegistry xContentRegistry() {\n+        SearchModule searchModule = new SearchModule(Settings.EMPTY, Collections.emptyList());\n+        return new NamedXContentRegistry(searchModule.getNamedXContents());\n+    }\n+\n+    @Override\n+    protected boolean enableWarningsCheck() {\n+        return false;\n+    }\n+\n+    public void testMlDeprecationChecks() throws Exception {\n+        HLRC hlrc = new HLRC(client());\n+        String jobId = \"deprecation_check_job\";\n+        hlrc.machineLearning()\n+            .putJob(\n+                new PutJobRequest(\n+                    Job.builder(jobId)\n+                        .setAnalysisConfig(\n+                            AnalysisConfig.builder(Collections.singletonList(Detector.builder().setFunction(\"count\").build()))\n+                        )\n+                        .setDataDescription(new DataDescription.Builder().setTimeField(\"time\"))\n+                        .build()\n+                ),\n+                REQUEST_OPTIONS\n+            );\n+\n+        IndexRequest indexRequest = new IndexRequest(\".ml-anomalies-.write-\" + jobId).id(jobId + \"_model_snapshot_1\")\n+            .source(\"{\\\"job_id\\\":\\\"deprecation_check_job\\\",\\\"snapshot_id\\\":\\\"1\\\", \\\"snapshot_doc_count\\\":1}\", XContentType.JSON);\n+        hlrc.index(indexRequest, REQUEST_OPTIONS);\n+\n+        indexRequest = new IndexRequest(\".ml-anomalies-.write-\" + jobId).id(jobId + \"_model_snapshot_2\")\n+            .source(\n+                \"{\\\"job_id\\\":\\\"deprecation_check_job\\\",\\\"snapshot_id\\\":\\\"2\\\",\\\"snapshot_doc_count\\\":1,\\\"min_version\\\":\\\"8.0.0\\\"}\",\n+                XContentType.JSON\n+            );\n+        hlrc.index(indexRequest, REQUEST_OPTIONS);\n+        hlrc.indices().refresh(new RefreshRequest(\".ml-anomalies-*\"), REQUEST_OPTIONS);\n+\n+        DeprecationInfoResponse response = hlrc.migration()\n+            .getDeprecationInfo(\n+                // specify an index so that deprecation checks don't run against any accidentally existing indices\n+                new DeprecationInfoRequest(Collections.singletonList(\"index-that-does-not-exist-*\")),\n+                RequestOptions.DEFAULT\n+            );\n+        assertThat(response.getMlSettingsIssues(), hasSize(1));\n+        assertThat(\n+            response.getMlSettingsIssues().get(0).getMessage(),\n+            containsString(\"model snapshot [1] for job [deprecation_check_job] needs to be deleted or upgraded\")\n+        );", "originalCommit": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1NzUyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542257529", "body": "The snapshot docs are small increase the PageParams to 100 if not more!", "bodyText": "The snapshot docs are small increase the PageParams to 100 if not more!", "bodyHTML": "<p dir=\"auto\">The snapshot docs are small increase the PageParams to 100 if not more!</p>", "author": "davidkyle", "createdAt": "2020-12-14T10:02:48Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/MlDeprecationChecker.java", "diffHunk": "@@ -56,16 +84,36 @@ public void check(Components components, ActionListener<CheckResult> deprecation\n             deprecationIssueListener.onResponse(new CheckResult(getName(), Collections.emptyList()));\n             return;\n         }\n+        List<DeprecationIssue> issues = Collections.synchronizedList(new ArrayList<>());\n+        final GetModelSnapshotsAction.Request getModelSnapshots = new GetModelSnapshotsAction.Request(\"*\", null);\n+        getModelSnapshots.setPageParams(new PageParams(0, 50));", "originalCommit": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5MTUxMw==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542391513", "bodyText": "The snapshot docs are small increase the PageParams to 100 if not more!\n\nThe reason I am limiting here is that I don't want to write an insane amount of deprecation warnings not necessarily a limit in the docs we search for.", "author": "benwtrent", "createdAt": "2020-12-14T13:41:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI1NzUyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMTIyMg==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542301222", "body": "nice one", "bodyText": "nice one", "bodyHTML": "<p dir=\"auto\">nice one</p>", "author": "davidkyle", "createdAt": "2020-12-14T11:09:32Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetModelSnapshotsAction.java", "diffHunk": "@@ -53,19 +54,29 @@ protected void doExecute(Task task, GetModelSnapshotsAction.Request request,\n                 request.getSort(),\n                 request.getDescOrder()));\n \n+        if (Strings.isAllOrWildcard(request.getJobId())) {", "originalCommit": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwMTUwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/66062#discussion_r542301501", "body": "++", "bodyText": "++", "bodyHTML": "<p dir=\"auto\">++</p>", "author": "davidkyle", "createdAt": "2020-12-14T11:09:56Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/persistence/JobResultsProvider.java", "diffHunk": "@@ -1054,6 +1055,11 @@ private void modelSnapshots(String jobId,\n \n         FieldSortBuilder sb = new FieldSortBuilder(sortField)\n                 .order(sortDescending ? SortOrder.DESC : SortOrder.ASC);\n+        // `min_version` might not be present in very early snapshots.\n+        // Consequently, we should treat it as being at least from 6.3.0 or before\n+        if (sortField.equals(ModelSnapshot.MIN_VERSION.getPreferredName())) {", "originalCommit": "645929a3e899d581c063a99ea09eb6c9716fdd1c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b8065042c8821b36f9020e2dc56c86738bb5f60a", "url": "https://github.com/elastic/elasticsearch/commit/b8065042c8821b36f9020e2dc56c86738bb5f60a", "message": "Update x-pack/plugin/deprecation/qa/rest/src/javaRestTest/java/org/elasticsearch/xpack/deprecation/MlDeprecationIT.java\n\nCo-authored-by: David Kyle <david.kyle@elastic.co>", "committedDate": "2020-12-14T15:23:26Z", "type": "commit"}, {"oid": "3431be65d458379ef14e0c1f646f47f06e4f74d6", "url": "https://github.com/elastic/elasticsearch/commit/3431be65d458379ef14e0c1f646f47f06e4f74d6", "message": "Merge branch 'master' into feature/ml-add-snapshot-deprecation-checks", "committedDate": "2020-12-14T15:32:53Z", "type": "commit"}]}