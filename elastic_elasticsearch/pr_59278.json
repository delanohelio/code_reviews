{"pr_number": 59278, "pr_title": "Set specific keepalive options by default on supported platforms", "pr_author": "ywelsch", "pr_createdAt": "2020-07-09T08:02:34Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/59278", "timeline": [{"oid": "05b46d47f5a4456aaafa81cd6cc148498b07581a", "url": "https://github.com/elastic/elasticsearch/commit/05b46d47f5a4456aaafa81cd6cc148498b07581a", "message": "Set specific keepalive options by default on supported platforms", "committedDate": "2020-07-09T07:58:46Z", "type": "commit"}, {"oid": "e3aa4c0c43a1a57d780671d49dc9eb84815818c9", "url": "https://github.com/elastic/elasticsearch/commit/e3aa4c0c43a1a57d780671d49dc9eb84815818c9", "message": "checkstyle", "committedDate": "2020-07-09T08:23:10Z", "type": "commit"}, {"oid": "05c860643e2958aa9ed00bb2ce8752b576af4afd", "url": "https://github.com/elastic/elasticsearch/commit/05c860643e2958aa9ed00bb2ce8752b576af4afd", "message": "Oops", "committedDate": "2020-07-09T09:03:24Z", "type": "commit"}, {"oid": "5239fe95b753382aa4e3b90c01d439e7e30cd394", "url": "https://github.com/elastic/elasticsearch/commit/5239fe95b753382aa4e3b90c01d439e7e30cd394", "message": "revise docs", "committedDate": "2020-07-16T09:37:35Z", "type": "commit"}, {"oid": "b1b3bbc7ceb2ac84a2c87c04da06d5af2642ffd4", "url": "https://github.com/elastic/elasticsearch/commit/b1b3bbc7ceb2ac84a2c87c04da06d5af2642ffd4", "message": "align code", "committedDate": "2020-07-17T13:28:12Z", "type": "commit"}, {"oid": "29b18d53598806585c6d6a0171551669d295e5d8", "url": "https://github.com/elastic/elasticsearch/commit/29b18d53598806585c6d6a0171551669d295e5d8", "message": "New approach", "committedDate": "2020-07-20T08:03:58Z", "type": "commit"}, {"oid": "33aa5659d91fbb2d18448b8fe61b79816d9425b1", "url": "https://github.com/elastic/elasticsearch/commit/33aa5659d91fbb2d18448b8fe61b79816d9425b1", "message": "fix tests", "committedDate": "2020-07-20T09:06:24Z", "type": "commit"}, {"oid": "75c7251973c7def05b241ab93822cc6395566642", "url": "https://github.com/elastic/elasticsearch/commit/75c7251973c7def05b241ab93822cc6395566642", "message": "Merge remote-tracking branch 'elastic/master' into default-keepalive-settings", "committedDate": "2020-07-20T09:06:45Z", "type": "commit"}, {"oid": "625ffc0564946bf43e9da28e641f3509081e88c1", "url": "https://github.com/elastic/elasticsearch/commit/625ffc0564946bf43e9da28e641f3509081e88c1", "message": "oh noes, an unused import", "committedDate": "2020-07-20T10:07:43Z", "type": "commit"}, {"oid": "d840b2d6e75f340b7b0d2e4bd3ccde65d60e0e18", "url": "https://github.com/elastic/elasticsearch/commit/d840b2d6e75f340b7b0d2e4bd3ccde65d60e0e18", "message": "reject  values above 5 minutes", "committedDate": "2020-07-22T14:41:51Z", "type": "commit"}, {"oid": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "url": "https://github.com/elastic/elasticsearch/commit/51b46d9af799dae949e491cc4ec4be1446bbeaad", "message": "Merge remote-tracking branch 'elastic/master' into default-keepalive-settings", "committedDate": "2020-07-22T14:42:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMTIxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459311219", "body": "This bit needs a breaking change tag (and docs in the backport)", "bodyText": "This bit needs a breaking change tag (and docs in the backport)", "bodyHTML": "<p dir=\"auto\">This bit needs a breaking change tag (and docs in the backport)</p>", "author": "DaveCTurner", "createdAt": "2020-07-23T09:04:23Z", "path": "server/src/main/java/org/elasticsearch/common/network/NetworkService.java", "diffHunk": "@@ -51,9 +51,9 @@\n     public static final Setting<Boolean> TCP_KEEP_ALIVE =\n         Setting.boolSetting(\"network.tcp.keep_alive\", true, Property.NodeScope);\n     public static final Setting<Integer> TCP_KEEP_IDLE =\n-        Setting.intSetting(\"network.tcp.keep_idle\", -1, -1, Property.NodeScope);\n+        Setting.intSetting(\"network.tcp.keep_idle\", -1, -1, 300, Property.NodeScope);", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3ODcxMw==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r460778713", "bodyText": "ok, done so", "author": "ywelsch", "createdAt": "2020-07-27T09:55:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMTIxOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMjI4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459312283", "body": "`ClosedChannelException` extends `IOException` so this is enough:\r\n\r\n```suggestion\r\n            assert e instanceof IOException :\r\n```", "bodyText": "ClosedChannelException extends IOException so this is enough:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assert e instanceof IOException || e instanceof ClosedChannelException :\n          \n          \n            \n                        assert e instanceof IOException :", "bodyHTML": "<p dir=\"auto\"><code>ClosedChannelException</code> extends <code>IOException</code> so this is enough:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">assert</span> e <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">IOException</span> <span class=\"pl-k x x-first\">||</span><span class=\"x\"> e </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x\">ClosedChannelException</span><span class=\"x x-last\"> </span><span class=\"pl-k\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">assert</span> e <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">IOException</span> <span class=\"pl-k\">:</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-07-23T09:06:21Z", "path": "libs/core/src/main/java/org/elasticsearch/core/internal/net/NetUtils.java", "diffHunk": "@@ -59,4 +64,45 @@\n             return null;\n         }\n     }\n+\n+    /**\n+     * If SO_KEEPALIVE is enabled (default), this method ensures sane default values for the extended socket options\n+     * TCP_KEEPIDLE and TCP_KEEPINTERVAL. The default value for TCP_KEEPIDLE is system dependent, but is typically 2 hours.\n+     * Such a high value can result in firewalls eagerly closing these connections. To tell any intermediate devices that\n+     * the connection remains alive, we explicitly set these options to 5 minutes if the defaults are higher than that.\n+     */\n+    public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {\n+        assert socketChannel != null;\n+        try {\n+            if (socketChannel.supportedOptions().contains(StandardSocketOptions.SO_KEEPALIVE)) {\n+                final Boolean keepalive = socketChannel.getOption(StandardSocketOptions.SO_KEEPALIVE);\n+                if (keepalive != null && keepalive.booleanValue()) {\n+                    for (SocketOption<Integer> option : Arrays.asList(\n+                        NetUtils.getTcpKeepIdleSocketOptionOrNull(),\n+                        NetUtils.getTcpKeepIntervalSocketOptionOrNull())) {\n+                        setMinValueForSocketOption(socketChannel, option, 300);\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            assert e instanceof IOException || e instanceof ClosedChannelException :", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMjczNw==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459312737", "body": "Maybe just rethrow `e`, stack trace and all?\r\n\r\n```suggestion\r\n                e;\r\n```", "bodyText": "Maybe just rethrow e, stack trace and all?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"unexpected exception when setting channel option: \" + e.getClass() + \": \" + e.getMessage();\n          \n          \n            \n                            e;", "bodyHTML": "<p dir=\"auto\">Maybe just rethrow <code>e</code>, stack trace and all?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-s\"><span class=\"pl-pds x x-first\">\"</span><span class=\"x\">unexpected exception when setting channel option: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x\">getClass() </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">: </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> e</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getMessage()</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"x x-first x-last\">e</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-07-23T09:07:16Z", "path": "libs/core/src/main/java/org/elasticsearch/core/internal/net/NetUtils.java", "diffHunk": "@@ -59,4 +64,45 @@\n             return null;\n         }\n     }\n+\n+    /**\n+     * If SO_KEEPALIVE is enabled (default), this method ensures sane default values for the extended socket options\n+     * TCP_KEEPIDLE and TCP_KEEPINTERVAL. The default value for TCP_KEEPIDLE is system dependent, but is typically 2 hours.\n+     * Such a high value can result in firewalls eagerly closing these connections. To tell any intermediate devices that\n+     * the connection remains alive, we explicitly set these options to 5 minutes if the defaults are higher than that.\n+     */\n+    public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {\n+        assert socketChannel != null;\n+        try {\n+            if (socketChannel.supportedOptions().contains(StandardSocketOptions.SO_KEEPALIVE)) {\n+                final Boolean keepalive = socketChannel.getOption(StandardSocketOptions.SO_KEEPALIVE);\n+                if (keepalive != null && keepalive.booleanValue()) {\n+                    for (SocketOption<Integer> option : Arrays.asList(\n+                        NetUtils.getTcpKeepIdleSocketOptionOrNull(),\n+                        NetUtils.getTcpKeepIntervalSocketOptionOrNull())) {\n+                        setMinValueForSocketOption(socketChannel, option, 300);\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            assert e instanceof IOException || e instanceof ClosedChannelException :\n+                \"unexpected exception when setting channel option: \" + e.getClass() + \": \" + e.getMessage();", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMjg4OQ==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459312889", "body": "Similarly, \r\n```suggestion\r\n                assert e instanceof IOException : e;\r\n```", "bodyText": "Similarly,\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            assert e instanceof IOException || e instanceof ClosedChannelException :\n          \n          \n            \n                            assert e instanceof IOException : e;", "bodyHTML": "<p dir=\"auto\">Similarly,</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">assert</span> e <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">IOException</span> <span class=\"pl-k x x-first\">||</span><span class=\"x\"> e </span><span class=\"pl-k x\">instanceof</span><span class=\"x\"> </span><span class=\"pl-smi x\">ClosedChannelException</span><span class=\"x\"> </span><span class=\"pl-k x x-last\">:</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">assert</span> e <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">IOException</span> <span class=\"pl-k x x-first\">:</span><span class=\"x x-last\"> e;</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-07-23T09:07:35Z", "path": "libs/core/src/main/java/org/elasticsearch/core/internal/net/NetUtils.java", "diffHunk": "@@ -59,4 +64,45 @@\n             return null;\n         }\n     }\n+\n+    /**\n+     * If SO_KEEPALIVE is enabled (default), this method ensures sane default values for the extended socket options\n+     * TCP_KEEPIDLE and TCP_KEEPINTERVAL. The default value for TCP_KEEPIDLE is system dependent, but is typically 2 hours.\n+     * Such a high value can result in firewalls eagerly closing these connections. To tell any intermediate devices that\n+     * the connection remains alive, we explicitly set these options to 5 minutes if the defaults are higher than that.\n+     */\n+    public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {\n+        assert socketChannel != null;\n+        try {\n+            if (socketChannel.supportedOptions().contains(StandardSocketOptions.SO_KEEPALIVE)) {\n+                final Boolean keepalive = socketChannel.getOption(StandardSocketOptions.SO_KEEPALIVE);\n+                if (keepalive != null && keepalive.booleanValue()) {\n+                    for (SocketOption<Integer> option : Arrays.asList(\n+                        NetUtils.getTcpKeepIdleSocketOptionOrNull(),\n+                        NetUtils.getTcpKeepIntervalSocketOptionOrNull())) {\n+                        setMinValueForSocketOption(socketChannel, option, 300);\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            assert e instanceof IOException || e instanceof ClosedChannelException :\n+                \"unexpected exception when setting channel option: \" + e.getClass() + \": \" + e.getMessage();\n+        }\n+    }\n+\n+    private static void setMinValueForSocketOption(NetworkChannel socketChannel, SocketOption<Integer> option, int minValue) {\n+        if (option != null && socketChannel.supportedOptions().contains(option)) {\n+            try {\n+                final Integer currentIdleVal = socketChannel.getOption(option);\n+                if (currentIdleVal != null && currentIdleVal.intValue() > minValue) {\n+                    socketChannel.setOption(option, minValue);\n+                }\n+            } catch (Exception e) {\n+                // Getting an exception here should be ok when concurrently closing the channel\n+                // An UnsupportedOperationException or IllegalArgumentException, however, should not happen\n+                assert e instanceof IOException || e instanceof ClosedChannelException :", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MjU2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459742565", "bodyText": "++", "author": "tbrooks8", "createdAt": "2020-07-23T21:37:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxMjg4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxNTMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459315310", "body": "Naming nit, suggest this instead:\r\n\r\n```suggestion\r\n    public static void tryEnsureReasonableKeepAliveConfig(NetworkChannel socketChannel) {\r\n```", "bodyText": "Naming nit, suggest this instead:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {\n          \n          \n            \n                public static void tryEnsureReasonableKeepAliveConfig(NetworkChannel socketChannel) {", "bodyHTML": "<p dir=\"auto\">Naming nit, suggest this instead:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">setSaneDefaultKeepAliveOptions</span>(<span class=\"pl-smi\">NetworkChannel</span> socketChannel) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">tryEnsureReasonableKeepAliveConfig</span>(<span class=\"pl-smi\">NetworkChannel</span> socketChannel) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-07-23T09:12:02Z", "path": "libs/core/src/main/java/org/elasticsearch/core/internal/net/NetUtils.java", "diffHunk": "@@ -59,4 +64,45 @@\n             return null;\n         }\n     }\n+\n+    /**\n+     * If SO_KEEPALIVE is enabled (default), this method ensures sane default values for the extended socket options\n+     * TCP_KEEPIDLE and TCP_KEEPINTERVAL. The default value for TCP_KEEPIDLE is system dependent, but is typically 2 hours.\n+     * Such a high value can result in firewalls eagerly closing these connections. To tell any intermediate devices that\n+     * the connection remains alive, we explicitly set these options to 5 minutes if the defaults are higher than that.\n+     */\n+    public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MzE3OA==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459743178", "body": "I understand that you are being safe, but is there a known scenario where the socket option is supported, but the current value is null?", "bodyText": "I understand that you are being safe, but is there a known scenario where the socket option is supported, but the current value is null?", "bodyHTML": "<p dir=\"auto\">I understand that you are being safe, but is there a known scenario where the socket option is supported, but the current value is null?</p>", "author": "tbrooks8", "createdAt": "2020-07-23T21:39:24Z", "path": "libs/core/src/main/java/org/elasticsearch/core/internal/net/NetUtils.java", "diffHunk": "@@ -59,4 +64,45 @@\n             return null;\n         }\n     }\n+\n+    /**\n+     * If SO_KEEPALIVE is enabled (default), this method ensures sane default values for the extended socket options\n+     * TCP_KEEPIDLE and TCP_KEEPINTERVAL. The default value for TCP_KEEPIDLE is system dependent, but is typically 2 hours.\n+     * Such a high value can result in firewalls eagerly closing these connections. To tell any intermediate devices that\n+     * the connection remains alive, we explicitly set these options to 5 minutes if the defaults are higher than that.\n+     */\n+    public static void setSaneDefaultKeepAliveOptions(NetworkChannel socketChannel) {\n+        assert socketChannel != null;\n+        try {\n+            if (socketChannel.supportedOptions().contains(StandardSocketOptions.SO_KEEPALIVE)) {\n+                final Boolean keepalive = socketChannel.getOption(StandardSocketOptions.SO_KEEPALIVE);\n+                if (keepalive != null && keepalive.booleanValue()) {\n+                    for (SocketOption<Integer> option : Arrays.asList(\n+                        NetUtils.getTcpKeepIdleSocketOptionOrNull(),\n+                        NetUtils.getTcpKeepIntervalSocketOptionOrNull())) {\n+                        setMinValueForSocketOption(socketChannel, option, 300);\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            assert e instanceof IOException || e instanceof ClosedChannelException :\n+                \"unexpected exception when setting channel option: \" + e.getClass() + \": \" + e.getMessage();\n+        }\n+    }\n+\n+    private static void setMinValueForSocketOption(NetworkChannel socketChannel, SocketOption<Integer> option, int minValue) {\n+        if (option != null && socketChannel.supportedOptions().contains(option)) {\n+            try {\n+                final Integer currentIdleVal = socketChannel.getOption(option);\n+                if (currentIdleVal != null && currentIdleVal.intValue() > minValue) {", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3NjE2NA==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r460776164", "bodyText": "I was concerned by the javadocs on the getOption method which says:\n@return  The value of the socket option. A value of {@code null} may be a valid value for some socket options.\n\nRereading the Javadocs for the various socket options, it should be clear from their javadocs that the ones used are not returning null. I've amended the logic accordingly (but added an assertion instead)", "author": "ywelsch", "createdAt": "2020-07-27T09:51:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0MzE3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NDc3Nw==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r459744777", "body": "Is the `if` block so that this does not break in production is assertions are disabled and for some reason there is a scenario where the channel is a different type? Feels like we should just be able to cast after the assertion since this is all Elasticsearch code.", "bodyText": "Is the if block so that this does not break in production is assertions are disabled and for some reason there is a scenario where the channel is a different type? Feels like we should just be able to cast after the assertion since this is all Elasticsearch code.", "bodyHTML": "<p dir=\"auto\">Is the <code>if</code> block so that this does not break in production is assertions are disabled and for some reason there is a scenario where the channel is a different type? Feels like we should just be able to cast after the assertion since this is all Elasticsearch code.</p>", "author": "tbrooks8", "createdAt": "2020-07-23T21:42:53Z", "path": "modules/transport-netty4/src/main/java/org/elasticsearch/transport/netty4/Netty4Transport.java", "diffHunk": "@@ -311,6 +307,11 @@ protected void stopInternal() {\n \n         @Override\n         protected void initChannel(Channel ch) throws Exception {\n+            addClosedExceptionLogger(ch);\n+            assert ch instanceof Netty4NioSocketChannel;\n+            if (ch instanceof Netty4NioSocketChannel) {\n+                NetUtils.setSaneDefaultKeepAliveOptions(((Netty4NioSocketChannel) ch).javaChannel());", "originalCommit": "51b46d9af799dae949e491cc4ec4be1446bbeaad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3ODU1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/59278#discussion_r460778551", "bodyText": "You're right, I was overly defensive here.", "author": "ywelsch", "createdAt": "2020-07-27T09:55:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0NDc3Nw=="}], "type": "inlineReview"}, {"oid": "785e35fbcab2dd8787906e6709fef66954efbe39", "url": "https://github.com/elastic/elasticsearch/commit/785e35fbcab2dd8787906e6709fef66954efbe39", "message": "rework docs", "committedDate": "2020-07-27T09:40:58Z", "type": "commit"}, {"oid": "c5c8faf08bcba2043919d2ba7507f548632cb02b", "url": "https://github.com/elastic/elasticsearch/commit/c5c8faf08bcba2043919d2ba7507f548632cb02b", "message": "ClosedChannelException subclasses IOException", "committedDate": "2020-07-27T09:42:41Z", "type": "commit"}, {"oid": "c9a582ce7fe7340392f7457a98cbcc1e7c30511a", "url": "https://github.com/elastic/elasticsearch/commit/c9a582ce7fe7340392f7457a98cbcc1e7c30511a", "message": "shorter assertion", "committedDate": "2020-07-27T09:45:03Z", "type": "commit"}, {"oid": "1dbe2391e6135ab28686fca959569b227631afe5", "url": "https://github.com/elastic/elasticsearch/commit/1dbe2391e6135ab28686fca959569b227631afe5", "message": "Naming", "committedDate": "2020-07-27T09:45:53Z", "type": "commit"}, {"oid": "380abcac93d99b88eb965705a9577406da6e6eb9", "url": "https://github.com/elastic/elasticsearch/commit/380abcac93d99b88eb965705a9577406da6e6eb9", "message": "The given socket options won't return null", "committedDate": "2020-07-27T09:49:06Z", "type": "commit"}, {"oid": "57f49168fac2837f8b87df55f2efb14558072150", "url": "https://github.com/elastic/elasticsearch/commit/57f49168fac2837f8b87df55f2efb14558072150", "message": "don't be so defensive", "committedDate": "2020-07-27T09:52:53Z", "type": "commit"}, {"oid": "0e70945bde16c723fb167578a1a690bd0b1efff7", "url": "https://github.com/elastic/elasticsearch/commit/0e70945bde16c723fb167578a1a690bd0b1efff7", "message": "Merge remote-tracking branch 'elastic/master' into default-keepalive-settings", "committedDate": "2020-07-27T09:54:55Z", "type": "commit"}]}