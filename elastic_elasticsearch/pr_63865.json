{"pr_number": 63865, "pr_title": "[ML] Pass job config in JSON file to autodetect", "pr_author": "edsavage", "pr_createdAt": "2020-10-19T08:39:19Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/63865", "timeline": [{"oid": "36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "url": "https://github.com/elastic/elasticsearch/commit/36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "message": "[ML] Pass job config in JSON file to autodetect\n\nWrite job config in the form of a JSON formatted file and pass its\nlocation to autodetect as an additional command line option. This will\nultimately allow all relevant job config to be read from the JSON config\nfile and hence reduce the number of command line arguments for\nautodetect.", "committedDate": "2020-10-19T08:23:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU3OTU3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507579572", "body": "nit: I think the indenting is one space off on this line", "bodyText": "nit: I think the indenting is one space off on this line", "bodyHTML": "<p dir=\"auto\">nit: I think the indenting is one space off on this line</p>", "author": "droberts195", "createdAt": "2020-10-19T08:52:04Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilder.java", "diffHunk": "@@ -350,4 +357,17 @@ private void buildFieldConfig(List<String> command) throws IOException {\n             command.add(fieldConfig);\n         }\n     }\n+\n+    private void buildJobConfig(List<String> command) throws IOException {\n+        Path configFile = Files.createTempFile(env.tmpFile(), \"config\", JSON_EXTENSION);\n+        filesToDelete.add(configFile);\n+        try (OutputStreamWriter osw = new OutputStreamWriter(Files.newOutputStream(configFile),StandardCharsets.UTF_8);\n+             XContentBuilder jsonBuilder = JsonXContent.contentBuilder()) {", "originalCommit": "36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDEzOQ==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507580139", "body": "Is the `(Class)` cast really necessary here?", "bodyText": "Is the (Class) cast really necessary here?", "bodyHTML": "<p dir=\"auto\">Is the <code>(Class)</code> cast really necessary here?</p>", "author": "droberts195", "createdAt": "2020-10-19T08:52:53Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilderTests.java", "diffHunk": "@@ -36,11 +41,14 @@\n     private Settings settings;\n     private NativeController nativeController;\n     private ProcessPipes processPipes;\n+    private ArgumentCaptor<List<String>> commandCaptor;\n \n+    @SuppressWarnings(\"unchecked\")\n     @Before\n     public void setUpTests() {\n         logger = mock(Logger.class);\n-        filesToDelete = Collections.emptyList();\n+        filesToDelete = new ArrayList<>();\n+        commandCaptor = ArgumentCaptor.forClass((Class)List.class);", "originalCommit": "36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNjcyOQ==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507606729", "bodyText": "Sadly it is yes. Without it we get the compilation error\njava: incompatible types: inference variable T has incompatible equality constraints java.util.List<java.lang.String>,java.util.List\n\nAdmittedly the cast isn't nice but there is precedence in e.g. AnalyticsBuilder.java", "author": "edsavage", "createdAt": "2020-10-19T09:34:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDEzOQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYxMDM5MA==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507610390", "bodyText": "OK cool, I didn't realise that", "author": "droberts195", "createdAt": "2020-10-19T09:40:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDEzOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NDk0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507584941", "body": "Please add a comment on the `buildJobConfig` line to say that it's providing duplicate information as an interim measure while the C++ code is switched over from the old format to the new format.\r\n\r\nAlso maybe group the `buildLimits`, `buildModelPlotConfig` and `buildFieldConfig` lines together and add a comment to say that they will be removed once the C++ is just using the full job config.", "bodyText": "Please add a comment on the buildJobConfig line to say that it's providing duplicate information as an interim measure while the C++ code is switched over from the old format to the new format.\nAlso maybe group the buildLimits, buildModelPlotConfig and buildFieldConfig lines together and add a comment to say that they will be removed once the C++ is just using the full job config.", "bodyHTML": "<p dir=\"auto\">Please add a comment on the <code>buildJobConfig</code> line to say that it's providing duplicate information as an interim measure while the C++ code is switched over from the old format to the new format.</p>\n<p dir=\"auto\">Also maybe group the <code>buildLimits</code>, <code>buildModelPlotConfig</code> and <code>buildFieldConfig</code> lines together and add a comment to say that they will be removed once the C++ is just using the full job config.</p>", "author": "droberts195", "createdAt": "2020-10-19T08:59:57Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilder.java", "diffHunk": "@@ -172,12 +177,14 @@ public AutodetectBuilder scheduledEvents(List<ScheduledEvent> scheduledEvents) {\n     public void build() throws IOException, InterruptedException {\n \n         List<String> command = buildAutodetectCommand();\n-\n         buildLimits(command);\n         buildModelPlotConfig(command);\n \n         buildQuantiles(command);\n         buildFieldConfig(command);\n+\n+        buildJobConfig(command);", "originalCommit": "36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5NDYxOA==", "url": "https://github.com/elastic/elasticsearch/pull/63865#discussion_r507594618", "body": "The current assertion is relying on the way Java chooses to print a `List`.  This is more precise:\r\n\r\n```suggestion\r\n        assertThat(command, hasItem(matchesPattern(\"--config=.*\\\\.json\")));\r\n```\r\n\r\nPlus you'll need extra imports to go with that.  IntelliJ should add them automatically but if not then add:\r\n\r\n```\r\nimport static org.hamcrest.Matchers.hasItem;\r\nimport static org.hamcrest.Matchers.matchesPattern;\r\n```", "bodyText": "The current assertion is relying on the way Java chooses to print a List.  This is more precise:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String commandString = command.toString();\n          \n          \n            \n                    assertTrue(commandString.contains(\" --config=\"));\n          \n          \n            \n                    assertThat(command, hasItem(matchesPattern(\"--config=.*\\\\.json\")));\n          \n      \n    \n    \n  \n\nPlus you'll need extra imports to go with that.  IntelliJ should add them automatically but if not then add:\nimport static org.hamcrest.Matchers.hasItem;\nimport static org.hamcrest.Matchers.matchesPattern;", "bodyHTML": "<p dir=\"auto\">The current assertion is relying on the way Java chooses to print a <code>List</code>.  This is more precise:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span> commandString <span class=\"pl-k\">=</span> command<span class=\"pl-k\">.</span>toString();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertTrue(commandString<span class=\"pl-k\">.</span>contains(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> --config=<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(command, hasItem(matchesPattern(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--config=.*<span class=\"pl-cce\">\\\\</span>.json<span class=\"pl-pds\">\"</span></span>)));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Plus you'll need extra imports to go with that.  IntelliJ should add them automatically but if not then add:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static org.hamcrest.Matchers.hasItem;\nimport static org.hamcrest.Matchers.matchesPattern;\n\"><pre><code>import static org.hamcrest.Matchers.hasItem;\nimport static org.hamcrest.Matchers.matchesPattern;\n</code></pre></div>", "author": "droberts195", "createdAt": "2020-10-19T09:15:20Z", "path": "x-pack/plugin/ml/src/test/java/org/elasticsearch/xpack/ml/job/process/autodetect/AutodetectBuilderTests.java", "diffHunk": "@@ -126,4 +134,19 @@ public void testBuildAutodetectCommand_givenPersistModelState() {\n     private AutodetectBuilder autodetectBuilder(Job job) {\n         return new AutodetectBuilder(job, filesToDelete, logger, env, settings, nativeController, processPipes);\n     }\n+\n+    public void testBuildAutodetect() throws Exception {\n+        Job.Builder job = buildJobBuilder(\"unit-test-job\");\n+\n+        autodetectBuilder(job.build()).build();\n+\n+        assertThat(filesToDelete, hasSize(3));\n+\n+        verify(nativeController).startProcess(commandCaptor.capture());\n+        verifyNoMoreInteractions(nativeController);\n+\n+        List<String> command = commandCaptor.getValue();\n+        String commandString = command.toString();\n+        assertTrue(commandString.contains(\" --config=\"));", "originalCommit": "36a6b3daa407f6d8f2abced90f13a38f6f5d6a37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5a4d387410a9bd4ae5737580588201e41e105513", "url": "https://github.com/elastic/elasticsearch/commit/5a4d387410a9bd4ae5737580588201e41e105513", "message": "Attending to code review comments", "committedDate": "2020-10-19T09:55:47Z", "type": "commit"}]}