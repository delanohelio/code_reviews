{"pr_number": 54210, "pr_title": "[ML] DF Analytics should always display operational stats", "pr_author": "dimitris-athanasiou", "pr_createdAt": "2020-03-25T17:04:45Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54210", "timeline": [{"oid": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3", "url": "https://github.com/elastic/elasticsearch/commit/ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3", "message": "[ML] DF Analytics should always display operational stats\n\nThis commit populates the _stats API response with sensible \"empty\"\n`data_counts` and `memory_usage` objects when the job itself\nhas not started reporting them.", "committedDate": "2020-03-25T17:04:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzMTgzNA==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398031834", "body": "```suggestion\r\n        Map<String, DataFrameAnalyticsConfig> configById = configs.stream().collect(Collectors.toMap(DataFrameAnalyticsConfig::getId, Function.identity()));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n          \n          \n            \n                    for (DataFrameAnalyticsConfig config : configs) {\n          \n          \n            \n                        configById.put(config.getId(), config);\n          \n          \n            \n                    }\n          \n          \n            \n                    Map<String, DataFrameAnalyticsConfig> configById = configs.stream().collect(Collectors.toMap(DataFrameAnalyticsConfig::getId, Function.identity()));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">DataFrameAnalyticsConfig</span>&gt;</span> configById <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">DataFrameAnalyticsConfig</span> config <span class=\"pl-k\">:</span> configs) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            configById<span class=\"pl-k\">.</span>put(config<span class=\"pl-k\">.</span>getId(), config);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">DataFrameAnalyticsConfig</span>&gt;</span> configById <span class=\"pl-k\">=</span> configs<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toMap(<span class=\"pl-smi\">DataFrameAnalyticsConfig</span><span class=\"pl-k\">::</span>getId, <span class=\"pl-smi\">Function</span><span class=\"pl-k\">.</span>identity()));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-03-25T17:19:32Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -310,6 +318,31 @@ private static void parseHit(SearchHit hit, String configId, RetrievedStatsHolde\n         );\n     }\n \n+    private List<Stats> buildStatsWithDefaults(List<DataFrameAnalyticsConfig> configs, List<Stats> stats) {\n+        Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n+        for (DataFrameAnalyticsConfig config : configs) {\n+            configById.put(config.getId(), config);\n+        }", "originalCommit": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNTY0MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398035641", "body": "Why can't this and the memory usage be initialized in the stats ctor? \r\n```\r\nthis.memoryUsage = memoryUsage == null ? new MemoryUsage(config.getId(), Instant.now(), 0) : memoryUsage;\r\nthis.dataCounts = dataCounts == null ? new DataCounts(config.getId()) : dataCounts;\r\n```\r\n\r\nWhy do we need to set `memory_usage` create time to the config's create time? Is that adding value for the added complexity?\r\n\r\nOr maybe I am misunderstanding the `Stats#getId()` value...", "bodyText": "Why can't this and the memory usage be initialized in the stats ctor?\nthis.memoryUsage = memoryUsage == null ? new MemoryUsage(config.getId(), Instant.now(), 0) : memoryUsage;\nthis.dataCounts = dataCounts == null ? new DataCounts(config.getId()) : dataCounts;\n\nWhy do we need to set memory_usage create time to the config's create time? Is that adding value for the added complexity?\nOr maybe I am misunderstanding the Stats#getId() value...", "bodyHTML": "<p dir=\"auto\">Why can't this and the memory usage be initialized in the stats ctor?</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"this.memoryUsage = memoryUsage == null ? new MemoryUsage(config.getId(), Instant.now(), 0) : memoryUsage;\nthis.dataCounts = dataCounts == null ? new DataCounts(config.getId()) : dataCounts;\"><pre><code>this.memoryUsage = memoryUsage == null ? new MemoryUsage(config.getId(), Instant.now(), 0) : memoryUsage;\nthis.dataCounts = dataCounts == null ? new DataCounts(config.getId()) : dataCounts;\n</code></pre></div>\n<p dir=\"auto\">Why do we need to set <code>memory_usage</code> create time to the config's create time? Is that adding value for the added complexity?</p>\n<p dir=\"auto\">Or maybe I am misunderstanding the <code>Stats#getId()</code> value...</p>", "author": "benwtrent", "createdAt": "2020-03-25T17:24:57Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -310,6 +318,31 @@ private static void parseHit(SearchHit hit, String configId, RetrievedStatsHolde\n         );\n     }\n \n+    private List<Stats> buildStatsWithDefaults(List<DataFrameAnalyticsConfig> configs, List<Stats> stats) {\n+        Map<String, DataFrameAnalyticsConfig> configById = new HashMap<>();\n+        for (DataFrameAnalyticsConfig config : configs) {\n+            configById.put(config.getId(), config);\n+        }\n+\n+        List<Stats> statsWithDefaults = new ArrayList<>(stats.size());\n+        for (Stats statsItem : stats) {\n+            DataFrameAnalyticsConfig config = configById.get(statsItem.getId());\n+            statsWithDefaults.add(new Stats(\n+                statsItem.getId(),\n+                statsItem.getState(),\n+                statsItem.getFailureReason(),\n+                statsItem.getProgress(),\n+                statsItem.getDataCounts() == null ? new DataCounts(config.getId()) : statsItem.getDataCounts(),", "originalCommit": "ef956fba8d1f59f9207b97d33ceec0f96ac6ebd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYzNzkxOQ==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398637919", "bodyText": "I agree that's too much complexity for the gain. I'll make MemoryUsage.timestamp nullable.", "author": "dimitris-athanasiou", "createdAt": "2020-03-26T14:56:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNTY0MQ=="}], "type": "inlineReview"}, {"oid": "c80c1d76d448b51762054ebcb4816bc58d4b587c", "url": "https://github.com/elastic/elasticsearch/commit/c80c1d76d448b51762054ebcb4816bc58d4b587c", "message": "Make MemoryUsage.timestamp nullable", "committedDate": "2020-03-26T14:49:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NzU0Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398657543", "body": "Is this variable ever used?", "bodyText": "Is this variable ever used?", "bodyHTML": "<p dir=\"auto\">Is this variable ever used?</p>", "author": "przemekwitek", "createdAt": "2020-03-26T15:20:29Z", "path": "client/rest-high-level/src/test/java/org/elasticsearch/client/MachineLearningIT.java", "diffHunk": "@@ -1507,7 +1508,7 @@ public void testGetDataFrameAnalyticsStats() throws Exception {\n             .setAnalysis(OutlierDetection.createDefault())\n             .build();\n \n-        execute(\n+        PutDataFrameAnalyticsResponse putConfigResponse = execute(", "originalCommit": "c80c1d76d448b51762054ebcb4816bc58d4b587c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MjMxMA==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398662310", "bodyText": "Well spotted. I ended up not using it and forgot to clean it up.", "author": "dimitris-athanasiou", "createdAt": "2020-03-26T15:26:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1NzU0Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1OTc4Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398659783", "body": "What prevents `timestamp` from being `null` here?", "bodyText": "What prevents timestamp from being null here?", "bodyHTML": "<p dir=\"auto\">What prevents <code>timestamp</code> from being <code>null</code> here?</p>", "author": "przemekwitek", "createdAt": "2020-03-26T15:23:23Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/dataframe/stats/MemoryUsage.java", "diffHunk": "@@ -105,6 +119,7 @@ public String toString() {\n     }\n \n     public String documentId(String jobId) {\n+        assert timestamp != null;", "originalCommit": "c80c1d76d448b51762054ebcb4816bc58d4b587c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2Mjc1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398662751", "bodyText": "We should only persist a MemoryUsage object we read from AnalyticsResultProcessor and those should always have a non-null timestamp.", "author": "dimitris-athanasiou", "createdAt": "2020-03-26T15:27:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1OTc4Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MDU1NA==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398660554", "body": "Unused import?", "bodyText": "Unused import?", "bodyHTML": "<p dir=\"auto\">Unused import?</p>", "author": "przemekwitek", "createdAt": "2020-03-26T15:24:17Z", "path": "x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/action/TransportGetDataFrameAnalyticsStatsAction.java", "diffHunk": "@@ -42,10 +42,10 @@\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsState;\n import org.elasticsearch.xpack.core.ml.dataframe.DataFrameAnalyticsTaskState;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.AnalysisStats;\n-import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.Fields;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.MemoryUsage;\n import org.elasticsearch.xpack.core.ml.dataframe.stats.classification.ClassificationStats;\n+import org.elasticsearch.xpack.core.ml.dataframe.stats.common.DataCounts;", "originalCommit": "c80c1d76d448b51762054ebcb4816bc58d4b587c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MzMwMw==", "url": "https://github.com/elastic/elasticsearch/pull/54210#discussion_r398663303", "bodyText": "It's used in line 206", "author": "dimitris-athanasiou", "createdAt": "2020-03-26T15:27:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY2MDU1NA=="}], "type": "inlineReview"}, {"oid": "49a6d70ee8293812a9249959726fcb52d5016696", "url": "https://github.com/elastic/elasticsearch/commit/49a6d70ee8293812a9249959726fcb52d5016696", "message": "No need to assign unused response to local var", "committedDate": "2020-03-26T15:29:00Z", "type": "commit"}, {"oid": "0b0478f8bcef1ff743e7a22056b56627f890ffb9", "url": "https://github.com/elastic/elasticsearch/commit/0b0478f8bcef1ff743e7a22056b56627f890ffb9", "message": "Merge branch 'master' into df-analytics-always-display-operational-stats", "committedDate": "2020-03-26T15:38:20Z", "type": "commit"}]}