{"pr_number": 50741, "pr_title": "Fold node metadata into new node storage", "pr_author": "ywelsch", "pr_createdAt": "2020-01-08T13:18:30Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/50741", "timeline": [{"oid": "e3fb2b21b0d5b428ced0218225afd20fbbbe375d", "url": "https://github.com/elastic/elasticsearch/commit/e3fb2b21b0d5b428ced0218225afd20fbbbe375d", "message": "Fold node metadata into new storage layer", "committedDate": "2020-01-08T13:13:08Z", "type": "commit"}, {"oid": "c1bf599a16f97471c6f900aed0145bd818798e36", "url": "https://github.com/elastic/elasticsearch/commit/c1bf599a16f97471c6f900aed0145bd818798e36", "message": "import got lost", "committedDate": "2020-01-08T13:41:11Z", "type": "commit"}, {"oid": "2bc2c501ea134f6e11d724de73bebac11618c668", "url": "https://github.com/elastic/elasticsearch/commit/2bc2c501ea134f6e11d724de73bebac11618c668", "message": "correct OpenMode", "committedDate": "2020-01-08T13:46:15Z", "type": "commit"}, {"oid": "9325a786890ca5fa51b697d708078b172cf330d1", "url": "https://github.com/elastic/elasticsearch/commit/9325a786890ca5fa51b697d708078b172cf330d1", "message": "Add test that CS preserved", "committedDate": "2020-01-08T13:54:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwOTcwNA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364309704", "body": "Given that we have to keep the node metadata around to prevent invalid downgrades, we may as well validate that it's consistent with the new-format metadata whether `metaData` is set or not.", "bodyText": "Given that we have to keep the node metadata around to prevent invalid downgrades, we may as well validate that it's consistent with the new-format metadata whether metaData is set or not.", "bodyHTML": "<p dir=\"auto\">Given that we have to keep the node metadata around to prevent invalid downgrades, we may as well validate that it's consistent with the new-format metadata whether <code>metaData</code> is set or not.</p>", "author": "DaveCTurner", "createdAt": "2020-01-08T16:04:58Z", "path": "server/src/main/java/org/elasticsearch/env/NodeEnvironment.java", "diffHunk": "@@ -497,36 +498,36 @@ private void maybeLogHeapDetails() {\n \n     /**\n      * scans the node paths and loads existing metaData file. If not found a new meta data will be generated\n-     * and persisted into the nodePaths\n      */\n-    private static NodeMetaData loadOrCreateNodeMetaData(Settings settings, Logger logger,\n-                                                         NodePath... nodePaths) throws IOException {\n+    private static NodeMetaData loadNodeMetaData(Settings settings, Logger logger,\n+                                                 NodePath... nodePaths) throws IOException {\n         final Path[] paths = Arrays.stream(nodePaths).map(np -> np.path).toArray(Path[]::new);\n-\n-        final Set<String> nodeIds = new HashSet<>();\n-        for (final Path path : paths) {\n-            final NodeMetaData metaData = NodeMetaData.FORMAT.loadLatestState(logger, NamedXContentRegistry.EMPTY, path);\n-            if (metaData != null) {\n-                nodeIds.add(metaData.nodeId());\n-            }\n-        }\n-        if (nodeIds.size() > 1) {\n-            throw new IllegalStateException(\n-                \"data paths \" + Arrays.toString(paths) + \" belong to multiple nodes with IDs \" + nodeIds);\n-        }\n-\n-        NodeMetaData metaData = NodeMetaData.FORMAT.loadLatestState(logger, NamedXContentRegistry.EMPTY, paths);\n+        NodeMetaData metaData = PersistedClusterStateService.nodeMetaData(paths);\n         if (metaData == null) {\n-            assert nodeIds.isEmpty() : nodeIds;\n-            metaData = new NodeMetaData(generateNodeId(settings), Version.CURRENT);\n-        } else {\n-            assert nodeIds.equals(Collections.singleton(metaData.nodeId())) : nodeIds + \" doesn't match \" + metaData;\n-            metaData = metaData.upgradeToCurrentVersion();\n+            // load legacy metadata", "originalCommit": "9325a786890ca5fa51b697d708078b172cf330d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0NjU1Ng==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364346556", "bodyText": "This would mean reading the node metadata even though it might not be required.\nI would prefer to keep as is (but can change it if you feel strongly about this), as I would like for the Lucene index to be the only authoritative source. If for example we were to have a tool that changes the node id, it would have to update both Lucene and the old-style node meta here, and doing so atomically would be difficult.", "author": "ywelsch", "createdAt": "2020-01-08T17:16:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMwOTcwNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMTY0OA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364321648", "body": "`nodeId` is always `null` at this point.", "bodyText": "nodeId is always null at this point.", "bodyHTML": "<p dir=\"auto\"><code>nodeId</code> is always <code>null</code> at this point.</p>", "author": "DaveCTurner", "createdAt": "2020-01-08T16:26:18Z", "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {\n+                        throw new IllegalStateException(\"unexpected node ID in metadata, found [\" + thisNodeId +\n+                            \"] in [\" + dataPath + \"] but expected [\" + nodeId + \"]\");\n+                    } else if (nodeId == null) {\n+                        nodeId = thisNodeId;\n+                        version = Version.fromId(Integer.parseInt(userData.get(NODE_VERSION_KEY)));\n+                    }\n+                    return new NodeMetaData(thisNodeId, Version.fromId(Integer.parseInt(userData.get(NODE_VERSION_KEY))));\n+                } catch (IndexNotFoundException e) {\n+                    logger.debug(new ParameterizedMessage(\"no on-disk state at {}\", indexPath), e);\n+                }\n+            }\n+        }\n+        if (nodeId == null) {", "originalCommit": "9325a786890ca5fa51b697d708078b172cf330d1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0NjU5NQ==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364346595", "bodyText": "gosh, I did not want to  return early from this method, but check consistency here. I've amended this method in a1b5aa4, invalidating the other comments here.", "author": "ywelsch", "createdAt": "2020-01-08T17:16:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMTY0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM0Nzg5NA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364347894", "bodyText": "\ud83d\udc4d", "author": "DaveCTurner", "createdAt": "2020-01-08T17:19:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMTY0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMjk0NA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364322944", "body": "`nodeId` is always `null` at this point.", "bodyText": "nodeId is always null at this point.", "bodyHTML": "<p dir=\"auto\"><code>nodeId</code> is always <code>null</code> at this point.</p>", "author": "DaveCTurner", "createdAt": "2020-01-08T16:28:34Z", "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {", "originalCommit": "9325a786890ca5fa51b697d708078b172cf330d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyMzM4OA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364323388", "body": "This assignment is unnecessary: `nodeId` is not used again.", "bodyText": "This assignment is unnecessary: nodeId is not used again.", "bodyHTML": "<p dir=\"auto\">This assignment is unnecessary: <code>nodeId</code> is not used again.</p>", "author": "DaveCTurner", "createdAt": "2020-01-08T16:29:21Z", "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique\n+     * @param dataPaths the data paths to scan\n+     */\n+    @Nullable\n+    public static NodeMetaData nodeMetaData(Path... dataPaths) throws IOException {\n+        String nodeId = null;\n+        Version version = null;\n+        for (final Path dataPath : dataPaths) {\n+            final Path indexPath = dataPath.resolve(METADATA_DIRECTORY_NAME);\n+            if (Files.exists(indexPath)) {\n+                try (DirectoryReader reader = DirectoryReader.open(new SimpleFSDirectory(dataPath.resolve(METADATA_DIRECTORY_NAME)))) {\n+                    final Map<String, String> userData = reader.getIndexCommit().getUserData();\n+                    assert userData.get(NODE_VERSION_KEY) != null;\n+\n+                    final String thisNodeId = userData.get(NODE_ID_KEY);\n+                    assert thisNodeId != null;\n+                    if (nodeId != null && nodeId.equals(thisNodeId) == false) {\n+                        throw new IllegalStateException(\"unexpected node ID in metadata, found [\" + thisNodeId +\n+                            \"] in [\" + dataPath + \"] but expected [\" + nodeId + \"]\");\n+                    } else if (nodeId == null) {\n+                        nodeId = thisNodeId;", "originalCommit": "9325a786890ca5fa51b697d708078b172cf330d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyNTc5OA==", "url": "https://github.com/elastic/elasticsearch/pull/50741#discussion_r364325798", "body": "```suggestion\r\n     * Returns the node metadata for one of the given data paths, or {@code null} if no node metadata is found in any of these paths.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns the node metadata for the given data paths, and checks if the node ids are unique\n          \n          \n            \n                 * Returns the node metadata for one of the given data paths, or {@code null} if no node metadata is found in any of these paths.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"232\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the node metadata <span class=\"pl-k\">for</span> the given data paths, <span class=\"x x-first x-last\">and checks </span><span class=\"pl-k\">if</span> <span class=\"x x-first x-last\">the</span> node <span class=\"x x-first x-last\">ids are unique</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"232\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">     <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Returns</span> the node metadata <span class=\"pl-k\">for</span> <span class=\"x x-first x-last\">one of </span>the given data paths, <span class=\"x x-first\">or {</span><span class=\"pl-k x\">@code</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">} </span><span class=\"pl-k\">if</span> <span class=\"x x-first x-last\">no</span> node <span class=\"x x-first x-last\">metadata is found in any of these paths.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "DaveCTurner", "createdAt": "2020-01-08T16:33:25Z", "path": "server/src/main/java/org/elasticsearch/gateway/PersistedClusterStateService.java", "diffHunk": "@@ -218,6 +228,67 @@ public boolean empty() {\n         }\n     }\n \n+    /**\n+     * Returns the node metadata for the given data paths, and checks if the node ids are unique", "originalCommit": "9325a786890ca5fa51b697d708078b172cf330d1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a1b5aa46117ed003e6a16c4f82f1adc6857bd593", "url": "https://github.com/elastic/elasticsearch/commit/a1b5aa46117ed003e6a16c4f82f1adc6857bd593", "message": "No early return from nodeMetaData method", "committedDate": "2020-01-08T17:13:36Z", "type": "commit"}, {"oid": "af5116762e54e8d63afbe040fc7567c006ab4487", "url": "https://github.com/elastic/elasticsearch/commit/af5116762e54e8d63afbe040fc7567c006ab4487", "message": "fix test", "committedDate": "2020-01-08T18:06:22Z", "type": "commit"}]}