{"pr_number": 52556, "pr_title": "Separate translog from index deletion conditions", "pr_author": "ywelsch", "pr_createdAt": "2020-02-20T09:02:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52556", "timeline": [{"oid": "b9227e23c4acf2af097c8e1928ee75c825777634", "url": "https://github.com/elastic/elasticsearch/commit/b9227e23c4acf2af097c8e1928ee75c825777634", "message": "Separate translog deletion policy conditions", "committedDate": "2020-02-20T08:53:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg3MjQ5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/52556#discussion_r381872491", "body": "NIT: Maybe dry this up with the lines below via something like:\r\n\r\n```java\r\n    private long getMinReferencedGen() {\r\n        long minReferencedGen = Math.min(\r\n            deletionPolicy.getMinTranslogGenRequiredByLocks(),\r\n            minGenerationForSeqNo(deletionPolicy.getLocalCheckpointOfSafeCommit() + 1, current, readers));\r\n        assert minReferencedGen >= getMinFileGeneration() :\r\n            \"deletion policy requires a minReferenceGen of [\" + minReferencedGen + \"] but the lowest gen available is [\"\r\n                + getMinFileGeneration() + \"]\";\r\n        assert minReferencedGen <= currentFileGeneration() :\r\n            \"deletion policy requires a minReferenceGen of [\" + minReferencedGen + \"] which is higher than the current generation [\"\r\n                + currentFileGeneration() + \"]\";\r\n        return minReferencedGen;\r\n    }\r\n```", "bodyText": "NIT: Maybe dry this up with the lines below via something like:\n    private long getMinReferencedGen() {\n        long minReferencedGen = Math.min(\n            deletionPolicy.getMinTranslogGenRequiredByLocks(),\n            minGenerationForSeqNo(deletionPolicy.getLocalCheckpointOfSafeCommit() + 1, current, readers));\n        assert minReferencedGen >= getMinFileGeneration() :\n            \"deletion policy requires a minReferenceGen of [\" + minReferencedGen + \"] but the lowest gen available is [\"\n                + getMinFileGeneration() + \"]\";\n        assert minReferencedGen <= currentFileGeneration() :\n            \"deletion policy requires a minReferenceGen of [\" + minReferencedGen + \"] which is higher than the current generation [\"\n                + currentFileGeneration() + \"]\";\n        return minReferencedGen;\n    }", "bodyHTML": "<p dir=\"auto\">NIT: Maybe dry this up with the lines below via something like:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    private long getMinReferencedGen() {\n        long minReferencedGen = Math.min(\n            deletionPolicy.getMinTranslogGenRequiredByLocks(),\n            minGenerationForSeqNo(deletionPolicy.getLocalCheckpointOfSafeCommit() + 1, current, readers));\n        assert minReferencedGen &gt;= getMinFileGeneration() :\n            &quot;deletion policy requires a minReferenceGen of [&quot; + minReferencedGen + &quot;] but the lowest gen available is [&quot;\n                + getMinFileGeneration() + &quot;]&quot;;\n        assert minReferencedGen &lt;= currentFileGeneration() :\n            &quot;deletion policy requires a minReferenceGen of [&quot; + minReferencedGen + &quot;] which is higher than the current generation [&quot;\n                + currentFileGeneration() + &quot;]&quot;;\n        return minReferencedGen;\n    }\"><pre>    <span class=\"pl-k\">private</span> <span class=\"pl-k\">long</span> getMinReferencedGen() {\n        <span class=\"pl-k\">long</span> minReferencedGen <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Math</span><span class=\"pl-k\">.</span>min(\n            deletionPolicy<span class=\"pl-k\">.</span>getMinTranslogGenRequiredByLocks(),\n            minGenerationForSeqNo(deletionPolicy<span class=\"pl-k\">.</span>getLocalCheckpointOfSafeCommit() <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, current, readers));\n        <span class=\"pl-k\">assert</span> minReferencedGen <span class=\"pl-k\">&gt;=</span> getMinFileGeneration() <span class=\"pl-k\">:</span>\n            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>deletion policy requires a minReferenceGen of [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> minReferencedGen <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] but the lowest gen available is [<span class=\"pl-pds\">\"</span></span>\n                <span class=\"pl-k\">+</span> getMinFileGeneration() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>;\n        <span class=\"pl-k\">assert</span> minReferencedGen <span class=\"pl-k\">&lt;=</span> currentFileGeneration() <span class=\"pl-k\">:</span>\n            <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>deletion policy requires a minReferenceGen of [<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> minReferencedGen <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>] which is higher than the current generation [<span class=\"pl-pds\">\"</span></span>\n                <span class=\"pl-k\">+</span> currentFileGeneration() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>]<span class=\"pl-pds\">\"</span></span>;\n        <span class=\"pl-k\">return</span> minReferencedGen;\n    }</pre></div>", "author": "original-brownbear", "createdAt": "2020-02-20T09:18:42Z", "path": "server/src/main/java/org/elasticsearch/index/translog/Translog.java", "diffHunk": "@@ -1646,7 +1646,24 @@ public void rollGeneration() throws IOException {\n      * required generation\n      */\n     public void trimUnreferencedReaders() throws IOException {\n-        // move most of the data to disk to reduce the time the lock is held\n+        // first check under read lock if any readers can be trimmed\n+        try (ReleasableLock ignored = readLock.acquire()) {\n+            ensureOpen();\n+            long minReferencedGen = Math.min(", "originalCommit": "b9227e23c4acf2af097c8e1928ee75c825777634", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "98bdba27bfa6502c3abc28c484f833028cfd67c2", "url": "https://github.com/elastic/elasticsearch/commit/98bdba27bfa6502c3abc28c484f833028cfd67c2", "message": "review comments", "committedDate": "2020-02-20T10:07:25Z", "type": "commit"}]}