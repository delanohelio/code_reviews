{"pr_number": 51515, "pr_title": "Add warnings for invalid realm order config (#51195)", "pr_author": "ywangd", "pr_createdAt": "2020-01-28T05:18:33Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/51515", "timeline": [{"oid": "803bdaa662b273fef6af8a78923d700acdeb45f7", "url": "https://github.com/elastic/elasticsearch/commit/803bdaa662b273fef6af8a78923d700acdeb45f7", "message": "Add warnings for invalid realm order config (#51195)\n\nIssue warnings for both missing realm order and duplicated realm orders.\nThe changes are to help users prepare for migration to next major\nrelease.", "committedDate": "2020-01-28T05:12:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371719148", "body": "Not sure what url should be used here. The breaking change page will only be available once 8.0 is released?", "bodyText": "Not sure what url should be used here. The breaking change page will only be available once 8.0 is released?", "bodyHTML": "<p dir=\"auto\">Not sure what url should be used here. The breaking change page will only be available once 8.0 is released?</p>", "author": "ywangd", "createdAt": "2020-01-28T10:26:08Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc3ODgwMA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r371778800", "bodyText": "There should be a link to the deprecation snippet, which is still to be added in this PR, seee my other comment #51515 (comment) .", "author": "albertzaharovits", "createdAt": "2020-01-28T12:42:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxOTE0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372179747", "body": "I think you want to use `Settings.hasValue` instead here.", "bodyText": "I think you want to use Settings.hasValue instead here.", "bodyHTML": "<p dir=\"auto\">I think you want to use <code>Settings.hasValue</code> instead here.</p>", "author": "tvernum", "createdAt": "2020-01-29T04:06:39Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNDQ4MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372324481", "bodyText": "Updated", "author": "ywangd", "createdAt": "2020-01-29T11:17:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE3OTc0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MTQ1MQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372181451", "body": "We would typically refer to the _whole_ setting key in these sorts of deprecation warnings.\r\n```suggestion\r\n                .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)\r\n```", "bodyText": "We would typically refer to the whole setting key in these sorts of deprecation warnings.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .map(e -> e.getKey().getName())\n          \n          \n            \n                            .map(e -> RealmSettings.realmSettingPrefix(e.getKey()) + RealmSettings.ORDER_SETTING_KEY)", "bodyHTML": "<p dir=\"auto\">We would typically refer to the <em>whole</em> setting key in these sorts of deprecation warnings.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .map(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> e<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">getName()</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .map(e <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi x x-first\">RealmSettings</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">realmSettingPrefix(</span>e<span class=\"pl-k\">.</span>getKey()<span class=\"x x-first\">) </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-smi x\">RealmSettings</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">ORDER_SETTING_KEY</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tvernum", "createdAt": "2020-01-29T04:17:58Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372182762", "body": "I'd prefer to collect them in a `Set` instead of a String. No signficant reason, it just seems \"cleaner\" to me.", "bodyText": "I'd prefer to collect them in a Set instead of a String. No signficant reason, it just seems \"cleaner\" to me.", "bodyHTML": "<p dir=\"auto\">I'd prefer to collect them in a <code>Set</code> instead of a String. No signficant reason, it just seems \"cleaner\" to me.</p>", "author": "tvernum", "createdAt": "2020-01-29T04:26:06Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNTY1MA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372325650", "bodyText": "Done", "author": "ywangd", "createdAt": "2020-01-29T11:20:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4Mjc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372183672", "body": "Per comments on the PR itself, we'll need to provide a URL here.", "bodyText": "Per comments on the PR itself, we'll need to provide a URL here.", "bodyHTML": "<p dir=\"auto\">Per comments on the PR itself, we'll need to provide a URL here.</p>", "author": "tvernum", "createdAt": "2020-01-29T04:29:48Z", "path": "x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java", "diffHunk": "@@ -35,6 +41,61 @@ static DeprecationIssue checkProcessors(final Settings settings , final PluginsA\n             \"https://www.elastic.co/guide/en/elasticsearch/reference/7.4/breaking-changes-7.4.html#deprecate-processors\");\n     }\n \n+    static DeprecationIssue checkMissingRealmOrders(final Settings settings, final PluginsAndModules pluginsAndModules) {\n+        final String orderNotConfiguredRealms = RealmSettings.getRealmSettings(settings).entrySet()\n+                .stream()\n+                .filter(e -> Objects.isNull(e.getValue().get(RealmSettings.ORDER_SETTING_KEY)))\n+                .map(e -> e.getKey().getName())\n+                .collect(Collectors.joining(\"; \"));\n+\n+        if (false == Strings.hasText(orderNotConfiguredRealms)) {\n+            return null;\n+        }\n+\n+        final String details = String.format(\n+            Locale.ROOT,\n+            \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+            orderNotConfiguredRealms);\n+        return new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0OTcwOQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372349709", "bodyText": "Updated the doc file and added the corresponding URL here.", "author": "ywangd", "createdAt": "2020-01-29T12:18:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4MzY3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184247", "body": "I'd like an inverse test as well - that realms with an order don't trigger an issue.", "bodyText": "I'd like an inverse test as well - that realms with an order don't trigger an issue.", "bodyHTML": "<p dir=\"auto\">I'd like an inverse test as well - that realms with an order don't trigger an issue.</p>", "author": "tvernum", "createdAt": "2020-01-29T04:30:55Z", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMyNjQ5Nw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372326497", "bodyText": "Added one test for correct realm order configs (2 realms of different orders)", "author": "ywangd", "createdAt": "2020-01-29T11:22:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDI0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372184445", "body": "Can we add another realm with `order + 1` and verify that it isn't reported.", "bodyText": "Can we add another realm with order + 1 and verify that it isn't reported.", "bodyHTML": "<p dir=\"auto\">Can we add another realm with <code>order + 1</code> and verify that it isn't reported.</p>", "author": "tvernum", "createdAt": "2020-01-29T04:31:25Z", "path": "x-pack/plugin/deprecation/src/test/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecksTests.java", "diffHunk": "@@ -60,4 +62,48 @@ public void testCheckProcessors() {\n         assertSettingDeprecationsAndWarnings(new Setting<?>[]{EsExecutors.PROCESSORS_SETTING});\n     }\n \n+    public void testCheckMissingRealmOrders() {\n+        String realmName = randomAlphaOfLengthBetween(4, 12);\n+        String realmType = randomAlphaOfLengthBetween(4, 12);\n+        final Settings settings =\n+            Settings.builder()\n+                .put(\"xpack.security.authc.realms.\" + realmType + \".\" + realmName + \".enabled\", \"true\").build();\n+\n+        final PluginsAndModules pluginsAndModules = new PluginsAndModules(Collections.emptyList(), Collections.emptyList());\n+        final List<DeprecationIssue> deprecationIssues =\n+            DeprecationChecks.filterChecks(DeprecationChecks.NODE_SETTINGS_CHECKS, c -> c.apply(settings, pluginsAndModules));\n+\n+        assertEquals(1, deprecationIssues.size());\n+        assertEquals(new DeprecationIssue(\n+            DeprecationIssue.Level.CRITICAL,\n+            \"Realm order will be required in next major release.\",\n+            \"\",\n+            String.format(\n+                Locale.ROOT,\n+                \"Found realms without order config: [%s]. In next major release, node will fail to start with missing realm order\",\n+                realmName\n+            )\n+        ), deprecationIssues.get(0));\n+    }\n+\n+    public void testCheckUniqueRealmOrders() {\n+        final int order = randomInt();\n+        final Settings settings = Settings.builder()\n+            .put(\"xpack.security.authc.realms.\"\n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)\n+            .put(\"xpack.security.authc.realms.\" \n+                + randomAlphaOfLengthBetween(4, 12) + \".\" + randomAlphaOfLengthBetween(4, 12) + \".order\", order)", "originalCommit": "803bdaa662b273fef6af8a78923d700acdeb45f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzMDU3OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r372330578", "bodyText": "Yes we should. The test cases are not exhaustive. I have updated them to have better coverage.", "author": "ywangd", "createdAt": "2020-01-29T11:32:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDQ0NQ=="}], "type": "inlineReview"}, {"oid": "1c7790c1c9957856ee2751786a6cbdcdf091fe1b", "url": "https://github.com/elastic/elasticsearch/commit/1c7790c1c9957856ee2751786a6cbdcdf091fe1b", "message": "Merge branch '7.x' into es-37614-realm-order-7.x", "committedDate": "2020-01-29T10:54:55Z", "type": "commit"}, {"oid": "0afe29951390c27bbc54f76295fd5d6fe0555e46", "url": "https://github.com/elastic/elasticsearch/commit/0afe29951390c27bbc54f76295fd5d6fe0555e46", "message": "Update x-pack/plugin/deprecation/src/main/java/org/elasticsearch/xpack/deprecation/NodeDeprecationChecks.java\n\nCo-Authored-By: Tim Vernum <tim@adjective.org>", "committedDate": "2020-01-29T11:04:50Z", "type": "commit"}, {"oid": "d7ee0a537a85e329d068e2dfdc61d14c1dcb7d8e", "url": "https://github.com/elastic/elasticsearch/commit/d7ee0a537a85e329d068e2dfdc61d14c1dcb7d8e", "message": "Merge branch 'es-37614-realm-order-7.x' of github.com:ywangd/elasticsearch into es-37614-realm-order-7.x", "committedDate": "2020-01-29T11:05:34Z", "type": "commit"}, {"oid": "661d554a3f8a2a413503e855caf9014d645c9754", "url": "https://github.com/elastic/elasticsearch/commit/661d554a3f8a2a413503e855caf9014d645c9754", "message": "Address feedbacks", "committedDate": "2020-01-29T12:17:02Z", "type": "commit"}, {"oid": "c3aa41ec091f1bb46c91616ed29d92751c1a1009", "url": "https://github.com/elastic/elasticsearch/commit/c3aa41ec091f1bb46c91616ed29d92751c1a1009", "message": "Merge remote-tracking branch 'origin/7.x' into es-37614-realm-order-7.x", "committedDate": "2020-01-30T13:19:52Z", "type": "commit"}, {"oid": "cc45614884f5310207bd84de22b219745e87481f", "url": "https://github.com/elastic/elasticsearch/commit/cc45614884f5310207bd84de22b219745e87481f", "message": "Add deprecation loggings for realm order", "committedDate": "2020-01-30T13:20:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373256937", "body": "One comment if we keep this: Generally we create one `static` `DeprecationLogger` for each class similar to the regular logger. It's not too much overhead to create new ones but it's still creating a few unnecessary objects.", "bodyText": "One comment if we keep this: Generally we create one static DeprecationLogger for each class similar to the regular logger. It's not too much overhead to create new ones but it's still creating a few unnecessary objects.", "bodyHTML": "<p dir=\"auto\">One comment if we keep this: Generally we create one <code>static</code> <code>DeprecationLogger</code> for each class similar to the regular logger. It's not too much overhead to create new ones but it's still creating a few unnecessary objects.</p>", "author": "gwbrown", "createdAt": "2020-01-30T23:57:50Z", "path": "x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/Realms.java", "diffHunk": "@@ -236,6 +247,25 @@ public Realm realm(String name) {\n         if (Strings.hasText(duplicateRealms)) {\n             throw new IllegalArgumentException(\"Found multiple realms configured with the same name: \" + duplicateRealms + \"\");\n         }\n+\n+        if (missingOrderRealmSettingKeys.size() > 0) {\n+            new DeprecationLogger(logger).deprecated(\"Found realms without order config: [{}]. \" +\n+                \"In next major release, node will fail to start with missing realm order.\",\n+                String.join(\"; \", missingOrderRealmSettingKeys)\n+            );\n+        }\n+        final List<String> duplicatedRealmOrderSettingKeys = orderToRealmOrderSettingKeys.entrySet()\n+                .stream()\n+                .filter(e -> e.getValue().size() > 1)\n+                .map(e -> e.getKey() + \": \" + String.join(\",\", e.getValue()))\n+                .sorted()\n+                .collect(Collectors.toList());\n+        if (false == duplicatedRealmOrderSettingKeys.isEmpty()) {\n+            new DeprecationLogger(logger).deprecated(\"Found multiple realms configured with the same order: [{}]. \" +", "originalCommit": "cc45614884f5310207bd84de22b219745e87481f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2Njg4OA==", "url": "https://github.com/elastic/elasticsearch/pull/51515#discussion_r373266888", "bodyText": "Updated", "author": "ywangd", "createdAt": "2020-01-31T00:36:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI1NjkzNw=="}], "type": "inlineReview"}, {"oid": "d95353da427686c0365ca635500ffbce0fb65e77", "url": "https://github.com/elastic/elasticsearch/commit/d95353da427686c0365ca635500ffbce0fb65e77", "message": "Update to address feedback", "committedDate": "2020-01-31T00:35:46Z", "type": "commit"}]}