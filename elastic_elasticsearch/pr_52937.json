{"pr_number": 52937, "pr_title": "Fix ingest pipeline _simulate api with empty docs never returns a res\u2026", "pr_author": "gaobinlong", "pr_createdAt": "2020-02-28T07:08:36Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/52937", "timeline": [{"oid": "2d1e4e2bb04a17639707381041468ebf9369bcbe", "url": "https://github.com/elastic/elasticsearch/commit/2d1e4e2bb04a17639707381041468ebf9369bcbe", "message": "Fix ingest pipeline _simulate api with empty docs never returns a response", "committedDate": "2020-02-28T05:51:55Z", "type": "commit"}, {"oid": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "url": "https://github.com/elastic/elasticsearch/commit/151e70f220f8636f3b0cb5e05ba6343a8962cc10", "message": "Merge branch 'master' into patch#52833", "committedDate": "2020-03-02T14:01:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxODQ3Ng==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386418476", "body": "```suggestion\r\n                throw new IllegalArgumentException(\"malformed [docs] section, should include an inner object\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new IllegalArgumentException(\"expected map in docs but found not\");\n          \n          \n            \n                            throw new IllegalArgumentException(\"malformed [docs] section, should include an inner object\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">expected map in docs but found not</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">malformed [docs] section, should include an inner object</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-03-02T14:19:21Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java", "diffHunk": "@@ -173,8 +173,15 @@ static Parsed parse(Map<String, Object> config, boolean verbose, IngestService i\n     private static List<IngestDocument> parseDocs(Map<String, Object> config) {\n         List<Map<String, Object>> docs =\n             ConfigurationUtils.readList(null, null, config, Fields.DOCS);\n+        if (docs.isEmpty()) {\n+            throw new IllegalArgumentException(\"must specify at least one doc\");\n+        }\n         List<IngestDocument> ingestDocumentList = new ArrayList<>();\n-        for (Map<String, Object> dataMap : docs) {\n+        for (Object object : docs) {\n+            if ((object instanceof Map) ==  false) {\n+                throw new IllegalArgumentException(\"expected map in docs but found not\");", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxODc5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386418798", "body": "```suggestion\r\n        assertThat(e2.getMessage(), equalTo(\"malformed [docs] section, should include an inner object\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(e2.getMessage(), equalTo(\"expected map in docs but found not\"));\n          \n          \n            \n                    assertThat(e2.getMessage(), equalTo(\"malformed [docs] section, should include an inner object\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(e2<span class=\"pl-k\">.</span>getMessage(), equalTo(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">expected map in docs but found not</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(e2<span class=\"pl-k\">.</span>getMessage(), equalTo(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">malformed [docs] section, should include an inner object</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-03-02T14:19:47Z", "path": "server/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestParsingTests.java", "diffHunk": "@@ -216,4 +218,33 @@ public void testNonExistentPipelineId() {\n             () -> SimulatePipelineRequest.parseWithPipelineId(pipelineId, requestContent, false, ingestService));\n         assertThat(e.getMessage(), equalTo(\"pipeline [\" + pipelineId + \"] does not exist\"));\n     }\n+\n+    public void testNotValidDocs() {\n+        Map<String, Object> requestContent = new HashMap<>();\n+        List<Map<String, Object>> docs = new ArrayList<>();\n+        Map<String, Object> pipelineConfig = new HashMap<>();\n+        List<Map<String, Object>> processors = new ArrayList<>();\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, docs);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e1 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));\n+\n+        List<String> stringList = new ArrayList<>();\n+        stringList.add(\"test\");\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, stringList);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e2 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e2.getMessage(), equalTo(\"expected map in docs but found not\"));", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxOTQxNA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386419414", "body": "```suggestion\r\n            throw new IllegalArgumentException(\"must specify at least one document in [docs]\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"must specify at least one doc\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"must specify at least one document in [docs]\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>must specify at least one <span class=\"x x-first x-last\">doc</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>must specify at least one <span class=\"x x-first x-last\">document in [docs]</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-03-02T14:20:49Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulatePipelineRequest.java", "diffHunk": "@@ -173,8 +173,15 @@ static Parsed parse(Map<String, Object> config, boolean verbose, IngestService i\n     private static List<IngestDocument> parseDocs(Map<String, Object> config) {\n         List<Map<String, Object>> docs =\n             ConfigurationUtils.readList(null, null, config, Fields.DOCS);\n+        if (docs.isEmpty()) {\n+            throw new IllegalArgumentException(\"must specify at least one doc\");", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQxOTU5OA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386419598", "body": "```suggestion\r\n        assertThat(e1.getMessage(), equalTo(\"must specify at least one document in [docs]\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));\n          \n          \n            \n                    assertThat(e1.getMessage(), equalTo(\"must specify at least one document in [docs]\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(e1<span class=\"pl-k\">.</span>getMessage(), equalTo(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>must specify at least one <span class=\"x x-first x-last\">doc</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(e1<span class=\"pl-k\">.</span>getMessage(), equalTo(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>must specify at least one <span class=\"x x-first x-last\">document in [docs]</span><span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danhermann", "createdAt": "2020-03-02T14:21:07Z", "path": "server/src/test/java/org/elasticsearch/action/ingest/SimulatePipelineRequestParsingTests.java", "diffHunk": "@@ -216,4 +218,33 @@ public void testNonExistentPipelineId() {\n             () -> SimulatePipelineRequest.parseWithPipelineId(pipelineId, requestContent, false, ingestService));\n         assertThat(e.getMessage(), equalTo(\"pipeline [\" + pipelineId + \"] does not exist\"));\n     }\n+\n+    public void testNotValidDocs() {\n+        Map<String, Object> requestContent = new HashMap<>();\n+        List<Map<String, Object>> docs = new ArrayList<>();\n+        Map<String, Object> pipelineConfig = new HashMap<>();\n+        List<Map<String, Object>> processors = new ArrayList<>();\n+        pipelineConfig.put(\"processors\", processors);\n+        requestContent.put(Fields.DOCS, docs);\n+        requestContent.put(Fields.PIPELINE, pipelineConfig);\n+        Exception e1 = expectThrows(IllegalArgumentException.class,\n+            () -> SimulatePipelineRequest.parse(requestContent, false, ingestService));\n+        assertThat(e1.getMessage(), equalTo(\"must specify at least one doc\"));", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4MTEzOA==", "url": "https://github.com/elastic/elasticsearch/pull/52937#discussion_r386481138", "body": "Also maybe add a return statement here? Technically it is not needed because the for loop is skipped, but I find it easier to read.", "bodyText": "Also maybe add a return statement here? Technically it is not needed because the for loop is skipped, but I find it easier to read.", "bodyHTML": "<p dir=\"auto\">Also maybe add a return statement here? Technically it is not needed because the for loop is skipped, but I find it easier to read.</p>", "author": "martijnvg", "createdAt": "2020-03-02T15:57:09Z", "path": "server/src/main/java/org/elasticsearch/action/ingest/SimulateExecutionService.java", "diffHunk": "@@ -69,6 +69,12 @@ public void execute(SimulatePipelineRequest.Parsed request, ActionListener<Simul\n             final AtomicInteger counter = new AtomicInteger();\n             final List<SimulateDocumentResult> responses =\n                 new CopyOnWriteArrayList<>(new SimulateDocumentBaseResult[request.getDocuments().size()]);\n+\n+            if (request.getDocuments().isEmpty()) {\n+                l.onResponse(new SimulatePipelineResponse(request.getPipeline().getId(),", "originalCommit": "151e70f220f8636f3b0cb5e05ba6343a8962cc10", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e13721700b20f1ca4d83a22eb41fb5e95907fe3f", "url": "https://github.com/elastic/elasticsearch/commit/e13721700b20f1ca4d83a22eb41fb5e95907fe3f", "message": "Merge remote-tracking branch 'origin/master' into patch#52833", "committedDate": "2020-03-05T10:09:30Z", "type": "commit"}, {"oid": "cda6cfc4f52025b0f0a3c08599014479b488db5e", "url": "https://github.com/elastic/elasticsearch/commit/cda6cfc4f52025b0f0a3c08599014479b488db5e", "message": "modify some error messages", "committedDate": "2020-03-05T10:09:53Z", "type": "commit"}, {"oid": "61d2260fd455861a5503f23295cde9d9b2e1e11a", "url": "https://github.com/elastic/elasticsearch/commit/61d2260fd455861a5503f23295cde9d9b2e1e11a", "message": "Merge branch 'master' into patch#52833", "committedDate": "2020-03-11T14:03:58Z", "type": "commit"}]}